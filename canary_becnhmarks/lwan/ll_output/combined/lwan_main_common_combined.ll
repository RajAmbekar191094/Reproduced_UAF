; ModuleID = 'llvm-link'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".text"
module asm "\09.p2align 4"
module asm "\09.globl coro_swapcontext"
module asm "\09coro_swapcontext:"
module asm "\09mov    %rbx,0(%rdi)"
module asm "\09mov    %rbp,8(%rdi)"
module asm "\09mov    %r12,16(%rdi)"
module asm "\09mov    %r13,24(%rdi)"
module asm "\09mov    %r14,32(%rdi)"
module asm "\09mov    %r15,40(%rdi)"
module asm "\09mov    %rdi,48(%rdi)"
module asm "\09mov    %rsi,56(%rdi)"
module asm "\09mov    (%rsp),%rcx"
module asm "\09mov    %rcx,64(%rdi)"
module asm "\09lea    0x8(%rsp),%rcx"
module asm "\09mov    %rcx,72(%rdi)"
module asm "\09mov    72(%rsi),%rsp"
module asm "\09mov    0(%rsi),%rbx"
module asm "\09mov    8(%rsi),%rbp"
module asm "\09mov    16(%rsi),%r12"
module asm "\09mov    24(%rsi),%r13"
module asm "\09mov    32(%rsi),%r14"
module asm "\09mov    40(%rsi),%r15"
module asm "\09mov    48(%rsi),%rdi"
module asm "\09mov    64(%rsi),%rcx"
module asm "\09mov    56(%rsi),%rsi"
module asm "\09jmp    *%rcx"
module asm "\09"

%struct.lwan_key_value_t_ = type { ptr, ptr }
%struct.option = type { ptr, i32, ptr, i32 }
%struct.list_head = type { %struct.lwan_key_value_t_ }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.lwan_key_value_t_ }
%struct.anon.3 = type { i64, i64 }
%struct.lwan_config_t_ = type { ptr, i16, i8, i8, i32, i16 }
%struct.lwan_module_t_ = type { ptr, ptr, ptr, ptr, ptr, i32 }
%struct.lwan_var_descriptor_t_ = type { ptr, i64, ptr, ptr, ptr, ptr }
%struct.cache_funcs_t_ = type { ptr, ptr, ptr, i64 }
%struct.epoll_event = type <{ i32, %union.__SOCKADDR_ARG }>
%union.__SOCKADDR_ARG = type { ptr }
%struct.lwan_response_t_ = type { ptr, ptr, i64, ptr, %struct.anon.5 }
%struct.anon.5 = type { ptr, ptr, ptr }
%struct.lwan_request_t_ = type { i32, i32, %struct.lwan_value_t_, %struct.lwan_value_t_, ptr, %struct.lwan_value_t_, %struct.lwan_value_t_, %struct.anon.2, %struct.lwan_response_t_ }
%struct.lwan_value_t_ = type { ptr, i64 }
%struct.anon.2 = type { i64, %struct.anon.3 }
%struct.lwan_t_ = type { %struct.lwan_key_value_t_, ptr, %struct.anon, ptr, %struct.lwan_config_t_, i32 }
%struct.anon = type { ptr, i32, i16 }
%struct.lwan_url_map_t_ = type { ptr, ptr, ptr, i64, i32, ptr, ptr, %struct.lwan_key_value_t_ }
%struct.lwan_serve_files_settings_t = type { ptr, ptr, i8 }
%struct.hash = type { i32, ptr, ptr, ptr, ptr, [0 x %struct.hash_bucket] }
%struct.hash_bucket = type { ptr, i32, i32 }
%struct.hash_entry = type { ptr, ptr, i32 }
%struct.cache_t = type { %struct.anon.1, %struct.anon.0, %struct.anon.5, %struct.anon.2.3, i32, %struct.anon.3.4 }
%struct.anon.1 = type { ptr, %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%struct.anon.0 = type { %struct.list_head, %union.pthread_rwlock_t }
%struct.anon.2.3 = type { i64, i32 }
%struct.anon.3.4 = type { i32, i32, i32 }
%struct.cache_entry_t = type { %struct.lwan_key_value_t_, ptr, i32, i32, i64 }
%struct.job_t = type { %struct.lwan_key_value_t_, ptr, ptr }
%struct.__va_list_tag = type { i32, i32, ptr, ptr }
%struct.coro_t_ = type { ptr, [10 x i64], i32, ptr, ptr, i8 }
%struct.coro_switcher_t_ = type { [10 x i64], [10 x i64] }
%struct.coro_defer_t_ = type { ptr, ptr, ptr, ptr }
%struct.config_t_ = type { ptr, i32, ptr }
%struct.config_line_t_ = type { %struct.list_head, i32, [1024 x i8] }
%struct.realm_password_file_t = type { %struct.cache_entry_t, ptr }
%struct.lwan_connection_t_ = type { i32, i32, ptr, ptr, i32, i32 }
%struct.sched_param = type { i32 }
%struct.lwan_trie_node_t_ = type { [8 x ptr], ptr, i32 }
%struct.lwan_thread_t_ = type { ptr, %struct.anon.27, i32, [2 x i32], i64 }
%struct.anon.27 = type { [30 x i8], [30 x i8], i64 }
%struct.linger = type { i32, i32 }
%struct.addrinfo = type { i32, i32, i32, i32, i32, ptr, ptr, ptr }
%union.sockaddr_union = type { %struct.sockaddr_storage }
%struct.sockaddr_storage = type { i16, [118 x i8], i64 }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.sockaddr_in = type { i16, i16, %struct.sched_param, [8 x i8] }
%struct.sockaddr_in6 = type { i16, i16, i32, %struct.in6_addr, i32 }
%struct.in6_addr = type { %union.anon.7 }
%union.anon.7 = type { [4 x i32] }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.anon.3, %struct.anon.3, %struct.anon.3, [3 x i64] }
%union.pthread_attr_t = type { i64, [48 x i8] }
%struct.death_queue_t = type { ptr, %struct.lwan_connection_t_, i32, i16 }
%struct.strbuf_t_ = type { %union.__SOCKADDR_ARG, %struct.anon.3, i32 }
%struct.request_parser_helper = type { ptr, ptr, %struct.lwan_value_t_, %struct.lwan_value_t_, %struct.lwan_value_t_, %struct.lwan_value_t_, %struct.lwan_value_t_, %struct.lwan_value_t_, %struct.lwan_value_t_, %struct.lwan_value_t_, %struct.lwan_value_t_, i8 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, ptr }
%struct.chunk = type { i32, ptr, i32 }
%struct.serve_files_priv_t_ = type { ptr, %struct.anon.6, i32, ptr, ptr, i8 }
%struct.anon.6 = type { ptr, i64, i32 }
%struct.file_cache_entry_t_ = type { %struct.cache_entry_t, %struct.anon.7, ptr, ptr }
%struct.anon.7 = type { [31 x i8], i64 }
%struct.parser = type { ptr, ptr, ptr, %struct.lexer, i32, %struct.list_head, %struct.anon.2.79 }
%struct.lexer = type { ptr, ptr, ptr, ptr, %struct.anon.0.80 }
%struct.anon.0.80 = type { [4 x %struct.item], i64, i64, i64 }
%struct.item = type { i32, %struct.lwan_value_t_ }
%struct.anon.2.79 = type { ptr, i64, i64 }
%struct.stacked_item = type { %struct.lwan_key_value_t_, %struct.item }
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.file_list_t = type { ptr, ptr, %struct.anon.8 }
%struct.anon.8 = type { ptr, ptr, ptr, ptr, ptr, i32, ptr }
%struct.sendfile_cache_data_t_ = type { %struct.lwan_value_t_, %struct.lwan_value_t_ }
%struct.sockaddr_un = type { i16, [108 x i8] }
%struct.msghdr = type { ptr, i32, ptr, i64, ptr, i64, i32 }

@gif_beacon.gif_beacon_data = internal constant [41 x i8] c"GIF89a\01\00\01\00\90\00\00\FF\00\00\00\00\00!\F9\04\05\10\00\00\00,\00\00\00\00\01\00\01\00\00\02\02\04\01", align 16, !dbg !0
@.str = private unnamed_addr constant [10 x i8] c"image/gif\00", align 1, !dbg !246
@.str.1 = private unnamed_addr constant [11 x i8] c"text/plain\00", align 1, !dbg !251
@.str.2 = private unnamed_addr constant [39 x i8] c"Testing chunked encoding! First chunk\0A\00", align 1, !dbg !256
@.str.3 = private unnamed_addr constant [20 x i8] c"*This is chunk %d*\0A\00", align 1, !dbg !261
@.str.4 = private unnamed_addr constant [12 x i8] c"Last chunk\0A\00", align 1, !dbg !266
@.str.5 = private unnamed_addr constant [20 x i8] c"Current value is %d\00", align 1, !dbg !271
@.str.6 = private unnamed_addr constant [8 x i8] c"currval\00", align 1, !dbg !273
@hello_world.headers = internal global [2 x %struct.lwan_key_value_t_] [%struct.lwan_key_value_t_ { ptr @.str.7, ptr @.str.8 }, %struct.lwan_key_value_t_ zeroinitializer], align 16, !dbg !283
@.str.7 = private unnamed_addr constant [39 x i8] c"X-The-Answer-To-The-Universal-Question\00", align 1, !dbg !276
@.str.8 = private unnamed_addr constant [3 x i8] c"42\00", align 1, !dbg !278
@.str.9 = private unnamed_addr constant [5 x i8] c"name\00", align 1, !dbg !288
@.str.10 = private unnamed_addr constant [11 x i8] c"Hello, %s!\00", align 1, !dbg !293
@.str.11 = private unnamed_addr constant [14 x i8] c"Hello, world!\00", align 1, !dbg !295
@.str.12 = private unnamed_addr constant [10 x i8] c"dump_vars\00", align 1, !dbg !300
@.str.13 = private unnamed_addr constant [26 x i8] c"\0A\0AQuery String Variables\0A\00", align 1, !dbg !302
@.str.14 = private unnamed_addr constant [25 x i8] c"----------------------\0A\0A\00", align 1, !dbg !307
@.str.15 = private unnamed_addr constant [26 x i8] c"Key = \22%s\22; Value = \22%s\22\0A\00", align 1, !dbg !312
@.str.16 = private unnamed_addr constant [13 x i8] c"\0A\0APOST data\0A\00", align 1, !dbg !314
@.str.17 = private unnamed_addr constant [12 x i8] c"---------\0A\0A\00", align 1, !dbg !319
@.str.18 = private unnamed_addr constant [7 x i8] c"*:8080\00", align 1, !dbg !321
@.str.19 = private unnamed_addr constant [27 x i8] c"/home/raj/lwan/lwan/main.c\00", align 1, !dbg !326
@__FUNCTION__.main = private unnamed_addr constant [5 x i8] c"main\00", align 1, !dbg !331
@.str.20 = private unnamed_addr constant [22 x i8] c"Serving files from %s\00", align 1, !dbg !334
@.str.21 = private unnamed_addr constant [2 x i8] c"/\00", align 1, !dbg !339
@parse_args.opts = internal constant [4 x %struct.option] [%struct.option { ptr @.str.22, i32 1, ptr null, i32 114 }, %struct.option { ptr @.str.23, i32 1, ptr null, i32 108 }, %struct.option { ptr @.str.24, i32 0, ptr null, i32 104 }, %struct.option zeroinitializer], align 16, !dbg !348
@.str.22 = private unnamed_addr constant [5 x i8] c"root\00", align 1, !dbg !342
@.str.23 = private unnamed_addr constant [7 x i8] c"listen\00", align 1, !dbg !344
@.str.24 = private unnamed_addr constant [5 x i8] c"help\00", align 1, !dbg !346
@.str.25 = private unnamed_addr constant [6 x i8] c"hr:l:\00", align 1, !dbg !367
@optarg = external global ptr, align 8
@.str.26 = private unnamed_addr constant [38 x i8] c"Run %s --help for usage information.\0A\00", align 1, !dbg !372
@.str.27 = private unnamed_addr constant [61 x i8] c"Usage: %s [--root /path/to/root/dir] [--listener addr:port]\0A\00", align 1, !dbg !377
@.str.28 = private unnamed_addr constant [13 x i8] c"\09[--config]\0A\00", align 1, !dbg !382
@.str.29 = private unnamed_addr constant [28 x i8] c"Serve files through HTTP.\0A\0A\00", align 1, !dbg !384
@.str.30 = private unnamed_addr constant [81 x i8] c"Defaults to listening on all interfaces, port 8080, serving current directory.\0A\0A\00", align 1, !dbg !389
@.str.31 = private unnamed_addr constant [10 x i8] c"Options:\0A\00", align 1, !dbg !394
@.str.32 = private unnamed_addr constant [67 x i8] c"\09-r, --root      Path to serve files from (default: current dir).\0A\00", align 1, !dbg !396
@.str.33 = private unnamed_addr constant [42 x i8] c"\09-l, --listener  Listener (default: %s).\0A\00", align 1, !dbg !401
@.str.34 = private unnamed_addr constant [24 x i8] c"\09-h, --help      This.\0A\00", align 1, !dbg !406
@.str.35 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1, !dbg !411
@.str.36 = private unnamed_addr constant [11 x i8] c"Examples:\0A\00", align 1, !dbg !413
@.str.37 = private unnamed_addr constant [57 x i8] c"  Serve system-wide documentation: %s -r /usr/share/doc\0A\00", align 1, !dbg !415
@.str.38 = private unnamed_addr constant [51 x i8] c"        Serve on a different port: %s -l '*:1337'\0A\00", align 1, !dbg !420
@.str.39 = private unnamed_addr constant [52 x i8] c"Report bugs at <https://github.com/lpereira/lwan>.\0A\00", align 1, !dbg !425
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 65535, ptr @initialize_odd_constant, ptr null }]
@base64_table = internal constant [65 x i8] c"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\00", align 16, !dbg !435
@base64_decode_table = internal constant [256 x i8] calign 16, !dbg !441
@odd_constant = internal global i32 668265261, align 4, !dbg !450
@.str.40 = private unnamed_addr constant [13 x i8] c"/dev/urandom\00", align 1, !dbg !470
@.str.1.41 = private unnamed_addr constant [12 x i8] c"/dev/random\00", align 1, !dbg !472
@uint_to_string.digits = internal constant [201 x i8] c"00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\00", align 16, !dbg !474
@stderr = external global ptr, align 8
@.str.2.42 = private unnamed_addr constant [40 x i8] c"%s: prev corrupt in node %p (%u) of %p\0A\00", align 1, !dbg !494
@.str.3.43 = private unnamed_addr constant [16 x i8] c"create_entry_cb\00", align 1, !dbg !500
@.str.1.4 = private unnamed_addr constant [35 x i8] c"/home/raj/lwan/common/lwan-cache.c\00", align 1, !dbg !506
@__PRETTY_FUNCTION__.cache_create = private unnamed_addr constant [88 x i8] c"struct cache_t *cache_create(CreateEntryCallback, DestroyEntryCallback, void *, time_t)\00", align 1, !dbg !511
@.str.2.5 = private unnamed_addr constant [17 x i8] c"destroy_entry_cb\00", align 1, !dbg !516
@.str.3.6 = private unnamed_addr constant [17 x i8] c"time_to_live > 0\00", align 1, !dbg !521
@.str.4.47 = private unnamed_addr constant [6 x i8] c"cache\00", align 1, !dbg !523
@__PRETTY_FUNCTION__.cache_destroy = private unnamed_addr constant [37 x i8] c"void cache_destroy(struct cache_t *)\00", align 1, !dbg !525
@__FUNCTION__.cache_destroy = private unnamed_addr constant [14 x i8] c"cache_destroy\00", align 1, !dbg !530
@.str.5.48 = private unnamed_addr constant [46 x i8] c"Cache stats: %d hits, %d misses, %d evictions\00", align 1, !dbg !533
@__PRETTY_FUNCTION__.cache_get_and_ref_entry = private unnamed_addr constant [85 x i8] c"struct cache_entry_t *cache_get_and_ref_entry(struct cache_t *, const char *, int *)\00", align 1, !dbg !538
@.str.6.49 = private unnamed_addr constant [6 x i8] c"error\00", align 1, !dbg !543
@.str.7.50 = private unnamed_addr constant [4 x i8] c"key\00", align 1, !dbg !545
@.str.8.51 = private unnamed_addr constant [6 x i8] c"entry\00", align 1, !dbg !548
@__PRETTY_FUNCTION__.cache_entry_unref = private unnamed_addr constant [65 x i8] c"void cache_entry_unref(struct cache_t *, struct cache_entry_t *)\00", align 1, !dbg !550
@__FUNCTION__.clock_monotonic_gettime = private unnamed_addr constant [24 x i8] c"clock_monotonic_gettime\00", align 1, !dbg !553
@.str.9.45 = private unnamed_addr constant [14 x i8] c"clock_gettime\00", align 1, !dbg !556
@__FUNCTION__.cache_pruner_job = private unnamed_addr constant [17 x i8] c"cache_pruner_job\00", align 1, !dbg !558
@.str.10.44 = private unnamed_addr constant [22 x i8] c"pthread_rwlock_unlock\00", align 1, !dbg !561
@.str.11.46 = private unnamed_addr constant [22 x i8] c"pthread_rwlock_wrlock\00", align 1, !dbg !563
@.str.12.53 = private unnamed_addr constant [5 x i8] c"%u%c\00", align 1, !dbg !565
@.str.1.13 = private unnamed_addr constant [36 x i8] c"/home/raj/lwan/common/lwan-config.c\00", align 1, !dbg !568
@__FUNCTION__.parse_time_period = private unnamed_addr constant [18 x i8] c"parse_time_period\00", align 1, !dbg !573
@.str.2.14 = private unnamed_addr constant [32 x i8] c"Ignoring unknown multiplier: %c\00", align 1, !dbg !578
@.str.3.15 = private unnamed_addr constant [5 x i8] c"true\00", align 1, !dbg !583
@.str.4.16 = private unnamed_addr constant [2 x i8] c"1\00", align 1, !dbg !585
@.str.5.17 = private unnamed_addr constant [3 x i8] c"on\00", align 1, !dbg !587
@.str.6.18 = private unnamed_addr constant [4 x i8] c"yes\00", align 1, !dbg !589
@.str.7.19 = private unnamed_addr constant [6 x i8] c"false\00", align 1, !dbg !591
@.str.8.20 = private unnamed_addr constant [2 x i8] c"0\00", align 1, !dbg !593
@.str.9.21 = private unnamed_addr constant [4 x i8] c"off\00", align 1, !dbg !595
@.str.10.22 = private unnamed_addr constant [3 x i8] c"no\00", align 1, !dbg !597
@.str.11.23 = private unnamed_addr constant [26 x i8] c"Malformed section opening\00", align 1, !dbg !599
@.str.12.24 = private unnamed_addr constant [25 x i8] c"Malformed key=value line\00", align 1, !dbg !601
@.str.13.54 = private unnamed_addr constant [31 x i8] c"Expecting section or key=value\00", align 1, !dbg !603
@.str.14.55 = private unnamed_addr constant [3 x i8] c"re\00", align 1, !dbg !608
@.str.25.52 = private unnamed_addr constant [5 x i8] c"coro\00", align 1, !dbg !610
@.str.1.26 = private unnamed_addr constant [34 x i8] c"/home/raj/lwan/common/lwan-coro.c\00", align 1, !dbg !613
@__PRETTY_FUNCTION__.coro_resume = private unnamed_addr constant [26 x i8] c"int coro_resume(coro_t *)\00", align 1, !dbg !618
@.str.2.27 = private unnamed_addr constant [21 x i8] c"coro->ended == false\00", align 1, !dbg !621
@__PRETTY_FUNCTION__.coro_resume_value = private unnamed_addr constant [37 x i8] c"int coro_resume_value(coro_t *, int)\00", align 1, !dbg !626
@__PRETTY_FUNCTION__.coro_yield = private unnamed_addr constant [30 x i8] c"int coro_yield(coro_t *, int)\00", align 1, !dbg !628
@__PRETTY_FUNCTION__.coro_free = private unnamed_addr constant [25 x i8] c"void coro_free(coro_t *)\00", align 1, !dbg !631
@.str.3.30 = private unnamed_addr constant [5 x i8] c"func\00", align 1, !dbg !634
@__PRETTY_FUNCTION__.coro_defer_any = private unnamed_addr constant [58 x i8] c"void coro_defer_any(coro_t *, void (*)(), void *, void *)\00", align 1, !dbg !636
@realm_password_cache = internal global ptr null, align 8, !dbg !641
@lwan_http_authorize.authenticate_tmpl = internal constant [17 x i8] c"Basic realm=\22%s\22\00", align 16, !dbg !676
@.str.37.56 = private unnamed_addr constant [7 x i8] c"Basic \00", align 1, !dbg !819
@.str.1.38 = private unnamed_addr constant [17 x i8] c"WWW-Authenticate\00", align 1, !dbg !821
@.str.2.33 = private unnamed_addr constant [44 x i8] c"/home/raj/lwan/common/lwan-http-authorize.c\00", align 1, !dbg !823
@__FUNCTION__.create_realm_file = private unnamed_addr constant [18 x i8] c"create_realm_file\00", align 1, !dbg !828
@.str.3.34 = private unnamed_addr constant [46 x i8] c"Username entry already exists, ignoring: \22%s\22\00", align 1, !dbg !830
@.str.4.35 = private unnamed_addr constant [29 x i8] c"Expected username = password\00", align 1, !dbg !832
@.str.5.36 = private unnamed_addr constant [41 x i8] c"Error on password file \22%s\22, line %d: %s\00", align 1, !dbg !837
@.str.39.57 = private unnamed_addr constant [41 x i8] c"/home/raj/lwan/common/lwan-io-wrappers.c\00", align 1, !dbg !842
@__FUNCTION__.lwan_sendfile = private unnamed_addr constant [14 x i8] c"lwan_sendfile\00", align 1, !dbg !845
@.str.1.40 = private unnamed_addr constant [14 x i8] c"posix_fadvise\00", align 1, !dbg !847
@__FUNCTION__.sendfile_read_write = private unnamed_addr constant [20 x i8] c"sendfile_read_write\00", align 1, !dbg !849
@.str.2.41 = private unnamed_addr constant [6 x i8] c"lseek\00", align 1, !dbg !852
@running = internal global i8 0, align 1, !dbg !854
@.str.42 = private unnamed_addr constant [9 x i8] c"!running\00", align 1, !dbg !865
@.str.1.43 = private unnamed_addr constant [33 x i8] c"/home/raj/lwan/common/lwan-job.c\00", align 1, !dbg !871
@__PRETTY_FUNCTION__.lwan_job_thread_init = private unnamed_addr constant [32 x i8] c"void lwan_job_thread_init(void)\00", align 1, !dbg !876
@__FUNCTION__.lwan_job_thread_init = private unnamed_addr constant [21 x i8] c"lwan_job_thread_init\00", align 1, !dbg !879
@.str.2.44 = private unnamed_addr constant [37 x i8] c"Initializing low priority job thread\00", align 1, !dbg !882
@jobs = internal global %struct.list_head zeroinitializer, align 8, !dbg !916
@self = internal global i64 0, align 8, !dbg !914
@.str.3.46 = private unnamed_addr constant [15 x i8] c"pthread_create\00", align 1, !dbg !885
@.str.4.47.58 = private unnamed_addr constant [22 x i8] c"pthread_setschedparam\00", align 1, !dbg !890
@__FUNCTION__.lwan_job_thread_shutdown = private unnamed_addr constant [25 x i8] c"lwan_job_thread_shutdown\00", align 1, !dbg !892
@.str.5.50 = private unnamed_addr constant [25 x i8] c"Shutting down job thread\00", align 1, !dbg !894
@queue_mutex = internal global %union.pthread_mutex_t zeroinitializer, align 8, !dbg !921
@.str.6.52 = private unnamed_addr constant [13 x i8] c"pthread_join\00", align 1, !dbg !896
@.str.7.55 = private unnamed_addr constant [3 x i8] c"cb\00", align 1, !dbg !898
@__PRETTY_FUNCTION__.lwan_job_add = private unnamed_addr constant [45 x i8] c"void lwan_job_add(_Bool (*)(void *), void *)\00", align 1, !dbg !900
@__FUNCTION__.lwan_job_add = private unnamed_addr constant [13 x i8] c"lwan_job_add\00", align 1, !dbg !905
@.str.8.56 = private unnamed_addr constant [7 x i8] c"calloc\00", align 1, !dbg !908
@.str.9.57 = private unnamed_addr constant [24 x i8] c"Couldn't lock job mutex\00", align 1, !dbg !910
@__PRETTY_FUNCTION__.lwan_job_del = private unnamed_addr constant [45 x i8] c"void lwan_job_del(_Bool (*)(void *), void *)\00", align 1, !dbg !912
@__const.job_thread.rgtp = private unnamed_addr constant %struct.anon.3 { i64 1, i64 0 }, align 8
@.str.60 = private unnamed_addr constant [29 x i8] c"/home/raj/lwan/common/lwan.c\00", align 1, !dbg !948
@__FUNCTION__.lwan_set_url_map = private unnamed_addr constant [17 x i8] c"lwan_set_url_map\00", align 1, !dbg !951
@.str.1.61 = private unnamed_addr constant [26 x i8] c"Could not initialize trie\00", align 1, !dbg !953
@.str.2.62 = private unnamed_addr constant [15 x i8] c"/proc/self/exe\00", align 1, !dbg !955
@.str.3.63 = private unnamed_addr constant [8 x i8] c"%s.conf\00", align 1, !dbg !957
@.str.4.64 = private unnamed_addr constant [10 x i8] c"lwan.conf\00", align 1, !dbg !959
@default_config = internal constant %struct.lwan_config_t_ { ptr @.str.17.94, i16 15, i8 0, i8 0, i32 604800, i16 0 }, align 8, !dbg !961
@__FUNCTION__.lwan_init_with_config = private unnamed_addr constant [22 x i8] c"lwan_init_with_config\00", align 1, !dbg !1228
@.str.5.65 = private unnamed_addr constant [43 x i8] c"Could not read config file, using defaults\00", align 1, !dbg !1231
@.str.6.66 = private unnamed_addr constant [29 x i8] c"Initializing lwan web server\00", align 1, !dbg !1236
@.str.7.67 = private unnamed_addr constant [48 x i8] c"Using %d threads, maximum %d sockets per thread\00", align 1, !dbg !1238
@__FUNCTION__.lwan_shutdown = private unnamed_addr constant [14 x i8] c"lwan_shutdown\00", align 1, !dbg !1243
@.str.8.72 = private unnamed_addr constant [14 x i8] c"Shutting down\00", align 1, !dbg !1245
@.str.9.73 = private unnamed_addr constant [27 x i8] c"Shutting down URL handlers\00", align 1, !dbg !1247
@main_socket = internal global i32 -1, align 4, !dbg !1379
@.str.10.74 = private unnamed_addr constant [18 x i8] c"main_socket == -1\00", align 1, !dbg !1249
@__PRETTY_FUNCTION__.lwan_main_loop = private unnamed_addr constant [30 x i8] c"void lwan_main_loop(lwan_t *)\00", align 1, !dbg !1252
@__FUNCTION__.lwan_main_loop = private unnamed_addr constant [15 x i8] c"lwan_main_loop\00", align 1, !dbg !1254
@.str.11.75 = private unnamed_addr constant [29 x i8] c"Could not set signal handler\00", align 1, !dbg !1257
@.str.12.76 = private unnamed_addr constant [15 x i8] c"Ready to serve\00", align 1, !dbg !1259
@.str.13.77 = private unnamed_addr constant [7 x i8] c"accept\00", align 1, !dbg !1261
@.str.14.78 = private unnamed_addr constant [30 x i8] c"Signal 2 (Interrupt) received\00", align 1, !dbg !1263
@.str.15.101 = private unnamed_addr constant [39 x i8] c"Main socket closed for unknown reasons\00", align 1, !dbg !1265
@__FUNCTION__.add_url_map = private unnamed_addr constant [12 x i8] c"add_url_map\00", align 1, !dbg !1267
@.str.16.61 = private unnamed_addr constant [23 x i8] c"Could not copy URL map\00", align 1, !dbg !1270
@.str.17.94 = private unnamed_addr constant [15 x i8] c"localhost:8080\00", align 1, !dbg !1275
@__FUNCTION__.lwan_module_init = private unnamed_addr constant [17 x i8] c"lwan_module_init\00", align 1, !dbg !1277
@.str.18.93 = private unnamed_addr constant [29 x i8] c"Initializing module registry\00", align 1, !dbg !1279
@__FUNCTION__.lwan_module_register = private unnamed_addr constant [21 x i8] c"lwan_module_register\00", align 1, !dbg !1281
@.str.19.91 = private unnamed_addr constant [25 x i8] c"Module at %p has no name\00", align 1, !dbg !1283
@.str.20.92 = private unnamed_addr constant [24 x i8] c"Registering module \22%s\22\00", align 1, !dbg !1285
@__FUNCTION__.setup_from_config = private unnamed_addr constant [18 x i8] c"setup_from_config\00", align 1, !dbg !1287
@.str.21.74 = private unnamed_addr constant [31 x i8] c"Loading configuration file: %s\00", align 1, !dbg !1289
@.str.22.75 = private unnamed_addr constant [19 x i8] c"keep_alive_timeout\00", align 1, !dbg !1291
@.str.23.76 = private unnamed_addr constant [6 x i8] c"quiet\00", align 1, !dbg !1296
@.str.24.77 = private unnamed_addr constant [11 x i8] c"reuse_port\00", align 1, !dbg !1298
@.str.25.68 = private unnamed_addr constant [8 x i8] c"expires\00", align 1, !dbg !1300
@.str.26.78 = private unnamed_addr constant [8 x i8] c"threads\00", align 1, !dbg !1302
@.str.27.79 = private unnamed_addr constant [30 x i8] c"Invalid number of threads: %d\00", align 1, !dbg !1304
@.str.28.80 = private unnamed_addr constant [23 x i8] c"Unknown config key: %s\00", align 1, !dbg !1306
@.str.29.81 = private unnamed_addr constant [9 x i8] c"listener\00", align 1, !dbg !1308
@.str.30.82 = private unnamed_addr constant [25 x i8] c"Unknown section type: %s\00", align 1, !dbg !1310
@.str.31.83 = private unnamed_addr constant [28 x i8] c"Only one listener supported\00", align 1, !dbg !1312
@.str.32.84 = private unnamed_addr constant [23 x i8] c"Unexpected section end\00", align 1, !dbg !1314
@.str.33.85 = private unnamed_addr constant [39 x i8] c"Error on config file \22%s\22, line %d: %s\00", align 1, !dbg !1316
@.str.34.86 = private unnamed_addr constant [25 x i8] c"Expecting prefix section\00", align 1, !dbg !1318
@.str.35.87 = private unnamed_addr constant [7 x i8] c"prefix\00", align 1, !dbg !1320
@.str.36.88 = private unnamed_addr constant [45 x i8] c"Invalid section name or module not found: %s\00", align 1, !dbg !1322
@.str.37.69 = private unnamed_addr constant [45 x i8] c"Expecting section end while parsing listener\00", align 1, !dbg !1325
@.str.38.89 = private unnamed_addr constant [7 x i8] c"module\00", align 1, !dbg !1327
@.str.39.70 = private unnamed_addr constant [25 x i8] c"Module already specified\00", align 1, !dbg !1329
@.str.40.90 = private unnamed_addr constant [27 x i8] c"Could not find module \22%s\22\00", align 1, !dbg !1331
@.str.41 = private unnamed_addr constant [8 x i8] c"handler\00", align 1, !dbg !1333
@.str.42.71 = private unnamed_addr constant [28 x i8] c"Could not find handler \22%s\22\00", align 1, !dbg !1335
@.str.43 = private unnamed_addr constant [14 x i8] c"authorization\00", align 1, !dbg !1337
@.str.44 = private unnamed_addr constant [27 x i8] c"Unknown section type: \22%s\22\00", align 1, !dbg !1339
@.str.45 = private unnamed_addr constant [43 x i8] c"Expecting section end while parsing prefix\00", align 1, !dbg !1341
@.str.46 = private unnamed_addr constant [26 x i8] c"Missing module or handler\00", align 1, !dbg !1343
@.str.47 = private unnamed_addr constant [42 x i8] c"Handler and module are mutually exclusive\00", align 1, !dbg !1345
@.str.48 = private unnamed_addr constant [16 x i8] c"Invalid handler\00", align 1, !dbg !1347
@.str.49 = private unnamed_addr constant [6 x i8] c"basic\00", align 1, !dbg !1349
@.str.50 = private unnamed_addr constant [35 x i8] c"Only basic authorization supported\00", align 1, !dbg !1351
@.str.51 = private unnamed_addr constant [6 x i8] c"realm\00", align 1, !dbg !1353
@.str.52 = private unnamed_addr constant [14 x i8] c"password file\00", align 1, !dbg !1355
@.str.53 = private unnamed_addr constant [23 x i8] c"Unexpected section: %s\00", align 1, !dbg !1357
@.str.54 = private unnamed_addr constant [5 x i8] c"Lwan\00", align 1, !dbg !1359
@.str.55 = private unnamed_addr constant [9 x i8] c"htpasswd\00", align 1, !dbg !1361
@__FUNCTION__.get_number_of_cpus = private unnamed_addr constant [19 x i8] c"get_number_of_cpus\00", align 1, !dbg !1363
@.str.56 = private unnamed_addr constant [52 x i8] c"Could not get number of online CPUs, assuming 1 CPU\00", align 1, !dbg !1366
@__FUNCTION__.setup_open_file_count_limits = private unnamed_addr constant [29 x i8] c"setup_open_file_count_limits\00", align 1, !dbg !1368
@.str.57 = private unnamed_addr constant [10 x i8] c"getrlimit\00", align 1, !dbg !1371
@.str.58 = private unnamed_addr constant [10 x i8] c"setrlimit\00", align 1, !dbg !1373
@__FUNCTION__.allocate_connections = private unnamed_addr constant [21 x i8] c"allocate_connections\00", align 1, !dbg !1375
@.str.59 = private unnamed_addr constant [7 x i8] c"calloc\00", align 1, !dbg !1377
@lwan_module_redirect.redirect_module = internal constant %struct.lwan_module_t_ { ptr @.str.81, ptr @redirect_init, ptr @redirect_init_from_hash, ptr @free, ptr @redirect_handle_cb, i32 0 }, align 8, !dbg !1395
@.str.81 = private unnamed_addr constant [9 x i8] c"redirect\00", align 1, !dbg !1564
@.str.1.83 = private unnamed_addr constant [3 x i8] c"to\00", align 1, !dbg !1566
@.str.2.82 = private unnamed_addr constant [9 x i8] c"Location\00", align 1, !dbg !1568
@.str.90 = private unnamed_addr constant [5 x i8] c"\0D\0A\0D\0A\00", align 1, !dbg !1570
@.str.1.91 = private unnamed_addr constant [4 x i8] c"\0D\0A\0D\00", align 1, !dbg !1573
@identify_http_method.sizes = internal constant [5 x i8] c"\00\04\05\00\05", align 1, !dbg !1575
@.str.2.84 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1, !dbg !1830
@.str.3.89 = private unnamed_addr constant [26 x i8] c"%a, %d %b %Y %H:%M:%S GMT\00", align 1, !dbg !1835
@.str.4.85 = private unnamed_addr constant [7 x i8] c"bytes=\00", align 1, !dbg !1837
@.str.5.86 = private unnamed_addr constant [8 x i8] c"%lu-%lu\00", align 1, !dbg !1839
@.str.6.87 = private unnamed_addr constant [5 x i8] c"-%lu\00", align 1, !dbg !1841
@.str.7.88 = private unnamed_addr constant [5 x i8] c"%lu-\00", align 1, !dbg !1843
@parse_post_data.content_type = internal constant [34 x i8] c"application/x-www-form-urlencoded\00", align 16, !dbg !1845
@lwan_response_init.error_descriptor = internal global [3 x %struct.lwan_var_descriptor_t_] [%struct.lwan_var_descriptor_t_ { ptr @.str.98, i64 0, ptr @lwan_append_str_to_strbuf, ptr @lwan_tpl_str_is_empty, ptr null, ptr null }, %struct.lwan_var_descriptor_t_ { ptr @.str.1.99, i64 8, ptr @lwan_append_str_to_strbuf, ptr @lwan_tpl_str_is_empty, ptr null, ptr null }, %struct.lwan_var_descriptor_t_ zeroinitializer], align 16, !dbg !1849
@.str.98 = private unnamed_addr constant [14 x i8] c"short_message\00", align 1, !dbg !1899
@.str.1.99 = private unnamed_addr constant [13 x i8] c"long_message\00", align 1, !dbg !1901
@error_template = internal global ptr null, align 8, !dbg !2098
@.str.2.94 = private unnamed_addr constant [16 x i8] c"!error_template\00", align 1, !dbg !1903
@.str.3.95 = private unnamed_addr constant [38 x i8] c"/home/raj/lwan/common/lwan-response.c\00", align 1, !dbg !1905
@__PRETTY_FUNCTION__.lwan_response_init = private unnamed_addr constant [30 x i8] c"void lwan_response_init(void)\00", align 1, !dbg !1907
@__FUNCTION__.lwan_response_init = private unnamed_addr constant [19 x i8] c"lwan_response_init\00", align 1, !dbg !1909
@.str.4.96 = private unnamed_addr constant [30 x i8] c"Initializing default response\00", align 1, !dbg !1911
@error_template_str = internal global ptr @.str.31.100, align 8, !dbg !2109
@.str.5.97 = private unnamed_addr constant [24 x i8] c"lwan_tpl_compile_string\00", align 1, !dbg !1913
@__FUNCTION__.lwan_response_shutdown = private unnamed_addr constant [23 x i8] c"lwan_response_shutdown\00", align 1, !dbg !1915
@.str.6.103 = private unnamed_addr constant [23 x i8] c"Shutting down response\00", align 1, !dbg !1918
@.str.7.104 = private unnamed_addr constant [15 x i8] c"error_template\00", align 1, !dbg !1920
@__PRETTY_FUNCTION__.lwan_response_shutdown = private unnamed_addr constant [34 x i8] c"void lwan_response_shutdown(void)\00", align 1, !dbg !1922
@__FUNCTION__.lwan_response = private unnamed_addr constant [14 x i8] c"lwan_response\00", align 1, !dbg !1924
@.str.8.107 = private unnamed_addr constant [36 x i8] c"Headers already sent, ignoring call\00", align 1, !dbg !1926
@.str.9.125 = private unnamed_addr constant [10 x i8] c"text/html\00", align 1, !dbg !1928
@.str.10.110 = private unnamed_addr constant [10 x i8] c"HTTP/1.0 \00", align 1, !dbg !1930
@.str.11.111 = private unnamed_addr constant [10 x i8] c"HTTP/1.1 \00", align 1, !dbg !1932
@.str.12.112 = private unnamed_addr constant [29 x i8] c"\0D\0ATransfer-Encoding: chunked\00", align 1, !dbg !1934
@.str.13.113 = private unnamed_addr constant [19 x i8] c"\0D\0AContent-Length: \00", align 1, !dbg !1936
@.str.14.114 = private unnamed_addr constant [17 x i8] c"\0D\0AContent-Type: \00", align 1, !dbg !1938
@.str.15.115 = private unnamed_addr constant [25 x i8] c"\0D\0AConnection: keep-alive\00", align 1, !dbg !1940
@.str.16.116 = private unnamed_addr constant [20 x i8] c"\0D\0AConnection: close\00", align 1, !dbg !1942
@.str.17.117 = private unnamed_addr constant [7 x i8] c"Server\00", align 1, !dbg !1944
@.str.18.118 = private unnamed_addr constant [5 x i8] c"Date\00", align 1, !dbg !1946
@.str.19.119 = private unnamed_addr constant [8 x i8] c"Expires\00", align 1, !dbg !1948
@.str.20.120 = private unnamed_addr constant [17 x i8] c"WWW-Authenticate\00", align 1, !dbg !1950
@.str.21.121 = private unnamed_addr constant [21 x i8] c"\0D\0AWWW-Authenticate: \00", align 1, !dbg !1952
@.str.22.122 = private unnamed_addr constant [9 x i8] c"\0D\0ADate: \00", align 1, !dbg !1954
@.str.23.123 = private unnamed_addr constant [12 x i8] c"\0D\0AExpires: \00", align 1, !dbg !1956
@.str.24.124 = private unnamed_addr constant [20 x i8] c"\0D\0AServer: lwan\0D\0A\0D\0A\00\00", align 1, !dbg !1958
@lwan_response_send_chunk.last_chunk = internal constant [6 x i8] c"0\0D\0A\0D\0A\00", align 1, !dbg !1960
@.str.25.133 = private unnamed_addr constant [6 x i8] c"%zx\0D\0A\00", align 1, !dbg !2086
@.str.26.134 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1, !dbg !2088
@.str.27.135 = private unnamed_addr constant [18 x i8] c"text/event-stream\00", align 1, !dbg !2090
@.str.28.136 = private unnamed_addr constant [8 x i8] c"event: \00", align 1, !dbg !2092
@.str.29.137 = private unnamed_addr constant [7 x i8] c"data: \00", align 1, !dbg !2094
@.str.30.138 = private unnamed_addr constant [5 x i8] c"\0D\0A\0D\0A\00", align 1, !dbg !2096
@.str.31.100 = private unnamed_addr constant [1111 x i8] c"<html><head><style>body{background:#627d4d;background:-moz-radial-gradient(center,ellipse cover,#627d4d 15%,#1f3b08 100%);background:-webkit-gradient(radial,center center,0px,center center,100%,color-stop(15%,#627d4d),color-stop(100%,#1f3b08));background:-webkit-radial-gradient(center,ellipse cover,#627d4d 15%,#1f3b08 100%);background:-o-radial-gradient(center,ellipse cover,#627d4d 15%,#1f3b08 100%);background:-ms-radial-gradient(center,ellipse cover,#627d4d 15%,#1f3b08 100%);background:radial-gradient(center,ellipse cover,#627d4d 15%,#1f3b08 100%);height:100%;font-family:Arial,'Helvetica Neue',Helvetica,sans-serif;text-align:center;border:0;letter-spacing:-1px;margin:0;padding:0}.sorry{color:#244837;font-size:18px;line-height:24px;text-shadow:01px 1px rgba(255,255,255,0.33)}h1{color:#fff;font-size:30px;font-weight:700;text-shadow:0 1px 4px rgba(0,0,0,0.68);letter-spacing:-1px;margin:0}</style></head><body><table height=\22100%\22 width=\22100%\22><tr><td align=\22center\22 valign=\22middle\22><div><h1>{{short_message}}</h1><div class=\22sorry\22><p>{{long_message}}</p></div></div></td></tr></table></body></html>\00", align 1, !dbg !2104
@__FUNCTION__.log_request = private unnamed_addr constant [12 x i8] c"log_request\00", align 1, !dbg !2111
@.str.32.128 = private unnamed_addr constant [30 x i8] c"%s [%s] \22%s %s HTTP/%s\22 %d %s\00", align 1, !dbg !2113
@.str.33.126 = private unnamed_addr constant [4 x i8] c"1.0\00", align 1, !dbg !2115
@.str.34.127 = private unnamed_addr constant [4 x i8] c"1.1\00", align 1, !dbg !2117
@.str.35.129 = private unnamed_addr constant [4 x i8] c"GET\00", align 1, !dbg !2119
@.str.36.130 = private unnamed_addr constant [5 x i8] c"HEAD\00", align 1, !dbg !2121
@.str.37.131 = private unnamed_addr constant [5 x i8] c"POST\00", align 1, !dbg !2123
@.str.38.132 = private unnamed_addr constant [8 x i8] c"UNKNOWN\00", align 1, !dbg !2125
@lwan_module_serve_files.serve_files = internal constant %struct.lwan_module_t_ { ptr @.str.141, ptr @serve_files_init, ptr @serve_files_init_from_hash, ptr @serve_files_shutdown, ptr @serve_files_handle_cb, i32 78 }, align 8, !dbg !2150
@.str.141 = private unnamed_addr constant [12 x i8] c"serve_files\00", align 1, !dbg !2429
@.str.1.142 = private unnamed_addr constant [41 x i8] c"/home/raj/lwan/common/lwan-serve-files.c\00", align 1, !dbg !2431
@__FUNCTION__.serve_files_init = private unnamed_addr constant [17 x i8] c"serve_files_init\00", align 1, !dbg !2433
@.str.2.147 = private unnamed_addr constant [24 x i8] c"root_path not specified\00", align 1, !dbg !2435
@.str.3.148 = private unnamed_addr constant [35 x i8] c"Could not obtain real path of \22%s\22\00", align 1, !dbg !2437
@.str.4.149 = private unnamed_addr constant [30 x i8] c"Could not open directory \22%s\22\00", align 1, !dbg !2439
@.str.5.150 = private unnamed_addr constant [7 x i8] c"malloc\00", align 1, !dbg !2441
@.str.6.151 = private unnamed_addr constant [22 x i8] c"Couldn't create cache\00", align 1, !dbg !2443
@directory_list_tpl_str = internal global ptr @.str.20.172, align 8, !dbg !2498
@file_list_desc = internal constant [4 x %struct.lwan_var_descriptor_t_] [%struct.lwan_var_descriptor_t_ { ptr @.str.21.154, i64 0, ptr @lwan_append_str_escaped_to_strbuf, ptr @lwan_tpl_str_is_empty, ptr null, ptr null }, %struct.lwan_var_descriptor_t_ { ptr @.str.22.155, i64 8, ptr @lwan_append_str_escaped_to_strbuf, ptr @lwan_tpl_str_is_empty, ptr null, ptr null }, %struct.lwan_var_descriptor_t_ { ptr @.str.23.156, i64 16, ptr null, ptr null, ptr @directory_list_generator, ptr @file_list_item_desc }, %struct.lwan_var_descriptor_t_ zeroinitializer], align 16, !dbg !2506
@.str.7.152 = private unnamed_addr constant [42 x i8] c"Could not compile directory list template\00", align 1, !dbg !2445
@.str.8.153 = private unnamed_addr constant [11 x i8] c"index.html\00", align 1, !dbg !2447
@redir_funcs = internal constant %struct.cache_funcs_t_ { ptr @redir_serve, ptr @redir_init, ptr @redir_free, i64 8 }, align 8, !dbg !2451
@.str.9.179 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1, !dbg !2449
@dirlist_funcs = internal constant %struct.cache_funcs_t_ { ptr @dirlist_serve, ptr @dirlist_init, ptr @dirlist_free, i64 8 }, align 8, !dbg !2459
@mmap_funcs = internal constant %struct.cache_funcs_t_ { ptr @mmap_serve, ptr @mmap_init, ptr @mmap_free, i64 32 }, align 8, !dbg !2469
@sendfile_funcs = internal constant %struct.cache_funcs_t_ { ptr @sendfile_serve, ptr @sendfile_init, ptr @sendfile_free, i64 32 }, align 8, !dbg !2485
@.str.10.183 = private unnamed_addr constant [9 x i8] c"Location\00", align 1, !dbg !2453
@.str.11.181 = private unnamed_addr constant [4 x i8] c"%s/\00", align 1, !dbg !2455
@.str.12.182 = private unnamed_addr constant [11 x i8] c"text/plain\00", align 1, !dbg !2457
@compression_none = internal global ptr null, align 8, !dbg !2465
@.str.13.174 = private unnamed_addr constant [14 x i8] c"Last-Modified\00", align 1, !dbg !2461
@.str.14.175 = private unnamed_addr constant [17 x i8] c"Content-Encoding\00", align 1, !dbg !2463
@.str.15.180 = private unnamed_addr constant [10 x i8] c"text/html\00", align 1, !dbg !2467
@compression_deflate = internal global ptr @.str.16.178, align 8, !dbg !2473
@.str.16.178 = private unnamed_addr constant [8 x i8] c"deflate\00", align 1, !dbg !2471
@__FUNCTION__.mmap_init = private unnamed_addr constant [10 x i8] c"mmap_init\00", align 1, !dbg !2475
@.str.17.177 = private unnamed_addr constant [8 x i8] c"madvise\00", align 1, !dbg !2478
@compression_gzip = internal global ptr @.str.18.176, align 8, !dbg !2489
@.str.18.176 = private unnamed_addr constant [5 x i8] c"gzip\00", align 1, !dbg !2487
@.str.19.173 = private unnamed_addr constant [6 x i8] c"%s.gz\00", align 1, !dbg !2491
@.str.20.172 = private unnamed_addr constant [763 x i8] c"<html>\0A<head>\0A  <title>Index of {{rel_path}}</title>\0A</head>\0A<body>\0A  <h1>Index of {{rel_path}}</h1>\0A  <table>\0A    <tr>\0A      <td>&nbsp;</td>\0A      <td>File name</td>\0A      <td>Type</td>\0A      <td>Size</td>\0A    </tr>\0A    <tr>\0A      <td><img src=\22/icons/back.png\22></td>\0A      <td colspan=\223\22><a href=\22..\22>Parent directory</a></td>\0A    </tr>\0A{{#file_list}}    <tr>\0A      <td><img src=\22/icons/{{file_list.icon}}.png\22 alt=\22{{file_list.icon_alt}}\22></td>\0A      <td><a href=\22{{rel_path}}/{{{file_list.name}}}\22>{{{file_list.name}}}</a></td>\0A      <td>{{file_list.type}}</td>\0A      <td>{{file_list.size}}{{file_list.unit}}</td>\0A    </tr>\0A{{/file_list}}{{^#file_list}}    <tr>\0A      <td colspan=\224\22>Empty directory.</td>\0A    </tr>\0A{{/file_list}}  </table>\0A</body>\0A</html>\0A\00", align 1, !dbg !2493
@.str.21.154 = private unnamed_addr constant [10 x i8] c"full_path\00", align 1, !dbg !2500
@.str.22.155 = private unnamed_addr constant [9 x i8] c"rel_path\00", align 1, !dbg !2502
@.str.23.156 = private unnamed_addr constant [10 x i8] c"file_list\00", align 1, !dbg !2504
@file_list_item_desc = internal constant [7 x %struct.lwan_var_descriptor_t_] [%struct.lwan_var_descriptor_t_ { ptr @.str.33.157, i64 24, ptr @lwan_append_str_to_strbuf, ptr @lwan_tpl_str_is_empty, ptr null, ptr null }, %struct.lwan_var_descriptor_t_ { ptr @.str.34.158, i64 32, ptr @lwan_append_str_to_strbuf, ptr @lwan_tpl_str_is_empty, ptr null, ptr null }, %struct.lwan_var_descriptor_t_ { ptr @.str.35.159, i64 40, ptr @lwan_append_str_to_strbuf, ptr @lwan_tpl_str_is_empty, ptr null, ptr null }, %struct.lwan_var_descriptor_t_ { ptr @.str.36.160, i64 48, ptr @lwan_append_str_to_strbuf, ptr @lwan_tpl_str_is_empty, ptr null, ptr null }, %struct.lwan_var_descriptor_t_ { ptr @.str.37.161, i64 56, ptr @lwan_append_int_to_strbuf, ptr @lwan_tpl_int_is_empty, ptr null, ptr null }, %struct.lwan_var_descriptor_t_ { ptr @.str.38.162, i64 64, ptr @lwan_append_str_to_strbuf, ptr @lwan_tpl_str_is_empty, ptr null, ptr null }, %struct.lwan_var_descriptor_t_ zeroinitializer], align 16, !dbg !2554
@.str.24.163 = private unnamed_addr constant [7 x i8] c"folder\00", align 1, !dbg !2524
@.str.25.164 = private unnamed_addr constant [4 x i8] c"DIR\00", align 1, !dbg !2526
@.str.26.165 = private unnamed_addr constant [10 x i8] c"directory\00", align 1, !dbg !2528
@.str.27.166 = private unnamed_addr constant [5 x i8] c"file\00", align 1, !dbg !2530
@.str.28.167 = private unnamed_addr constant [5 x i8] c"FILE\00", align 1, !dbg !2532
@.str.29.168 = private unnamed_addr constant [2 x i8] c"B\00", align 1, !dbg !2534
@.str.30.169 = private unnamed_addr constant [4 x i8] c"KiB\00", align 1, !dbg !2536
@.str.31.170 = private unnamed_addr constant [4 x i8] c"MiB\00", align 1, !dbg !2538
@.str.32.171 = private unnamed_addr constant [4 x i8] c"GiB\00", align 1, !dbg !2540
@.str.33.157 = private unnamed_addr constant [15 x i8] c"file_list.icon\00", align 1, !dbg !2542
@.str.34.158 = private unnamed_addr constant [19 x i8] c"file_list.icon_alt\00", align 1, !dbg !2544
@.str.35.159 = private unnamed_addr constant [15 x i8] c"file_list.name\00", align 1, !dbg !2546
@.str.36.160 = private unnamed_addr constant [15 x i8] c"file_list.type\00", align 1, !dbg !2548
@.str.37.161 = private unnamed_addr constant [15 x i8] c"file_list.size\00", align 1, !dbg !2550
@.str.38.162 = private unnamed_addr constant [15 x i8] c"file_list.unit\00", align 1, !dbg !2552
@.str.39.144 = private unnamed_addr constant [5 x i8] c"path\00", align 1, !dbg !2557
@.str.40.145 = private unnamed_addr constant [11 x i8] c"index path\00", align 1, !dbg !2559
@.str.41.146 = private unnamed_addr constant [26 x i8] c"serve precompressed files\00", align 1, !dbg !2561
@__FUNCTION__.serve_files_shutdown = private unnamed_addr constant [21 x i8] c"serve_files_shutdown\00", align 1, !dbg !2563
@.str.42.143 = private unnamed_addr constant [20 x i8] c"Nothing to shutdown\00", align 1, !dbg !2565
@.str.186 = private unnamed_addr constant [36 x i8] c"/home/raj/lwan/common/lwan-socket.c\00", align 1, !dbg !2567
@__FUNCTION__.lwan_socket_init = private unnamed_addr constant [17 x i8] c"lwan_socket_init\00", align 1, !dbg !2570
@.str.1.187 = private unnamed_addr constant [21 x i8] c"Initializing sockets\00", align 1, !dbg !2572
@.str.2.188 = private unnamed_addr constant [35 x i8] c"Too many file descriptors received\00", align 1, !dbg !2574
@.str.3.189 = private unnamed_addr constant [11 x i8] c"setsockopt\00", align 1, !dbg !2576
@.str.4.190 = private unnamed_addr constant [31 x i8] c"%s not supported by the kernel\00", align 1, !dbg !2578
@.str.5.191 = private unnamed_addr constant [13 x i8] c"TCP_FASTOPEN\00", align 1, !dbg !2580
@.str.6.192 = private unnamed_addr constant [13 x i8] c"TCP_QUICKACK\00", align 1, !dbg !2582
@__FUNCTION__.setup_socket_from_systemd = private unnamed_addr constant [26 x i8] c"setup_socket_from_systemd\00", align 1, !dbg !2584
@.str.7.208 = private unnamed_addr constant [53 x i8] c"Passed file descriptor is not a listening TCP socket\00", align 1, !dbg !2586
@.str.8.209 = private unnamed_addr constant [30 x i8] c"Could not obtain socket flags\00", align 1, !dbg !2591
@.str.9.210 = private unnamed_addr constant [27 x i8] c"Could not set socket flags\00", align 1, !dbg !2593
@__FUNCTION__.setup_socket_normally = private unnamed_addr constant [22 x i8] c"setup_socket_normally\00", align 1, !dbg !2595
@.str.10.194 = private unnamed_addr constant [29 x i8] c"Could not parse listener: %s\00", align 1, !dbg !2597
@.str.11.195 = private unnamed_addr constant [16 x i8] c"getaddrinfo: %s\00", align 1, !dbg !2599
@.str.12.205 = private unnamed_addr constant [5 x i8] c"8080\00", align 1, !dbg !2601
@.str.13.206 = private unnamed_addr constant [8 x i8] c"0.0.0.0\00", align 1, !dbg !2603
@.str.14.207 = private unnamed_addr constant [2 x i8] c"*\00", align 1, !dbg !2605
@__FUNCTION__.bind_and_listen_addrinfos = private unnamed_addr constant [26 x i8] c"bind_and_listen_addrinfos\00", align 1, !dbg !2607
@.str.15.196 = private unnamed_addr constant [13 x i8] c"SO_REUSEPORT\00", align 1, !dbg !2609
@.str.16.197 = private unnamed_addr constant [22 x i8] c"Could not bind socket\00", align 1, !dbg !2611
@__FUNCTION__.listen_addrinfo = private unnamed_addr constant [16 x i8] c"listen_addrinfo\00", align 1, !dbg !2613
@.str.17.198 = private unnamed_addr constant [7 x i8] c"listen\00", align 1, !dbg !2616
@.str.18.199 = private unnamed_addr constant [16 x i8] c"getnameinfo: %s\00", align 1, !dbg !2618
@.str.19.200 = private unnamed_addr constant [28 x i8] c"Listening on http://[%s]:%s\00", align 1, !dbg !2620
@.str.20.201 = private unnamed_addr constant [26 x i8] c"Listening on http://%s:%s\00", align 1, !dbg !2622
@.str.21.202 = private unnamed_addr constant [29 x i8] c"/proc/sys/net/core/somaxconn\00", align 1, !dbg !2624
@.str.22.203 = private unnamed_addr constant [3 x i8] c"re\00", align 1, !dbg !2626
@.str.23.204 = private unnamed_addr constant [3 x i8] c"%d\00", align 1, !dbg !2628
@quiet = internal global i8 0, align 1, !dbg !2630
@mutex = internal global %union.pthread_mutex_t zeroinitializer, align 8, !dbg !2678
@.str.217 = private unnamed_addr constant [19 x i8] c"pthread_mutex_lock\00", align 1, !dbg !2646
@stdout = external global ptr, align 8
@.str.1.218 = private unnamed_addr constant [15 x i8] c"\1B[32;1m%ld\1B[0m\00", align 1, !dbg !2648
@.str.2.219 = private unnamed_addr constant [15 x i8] c" \1B[3m%s:%d\1B[0m\00", align 1, !dbg !2650
@.str.3.220 = private unnamed_addr constant [15 x i8] c" \1B[33m%s()\1B[0m\00", align 1, !dbg !2652
@.str.4.221 = private unnamed_addr constant [2 x i8] c" \00", align 1, !dbg !2654
@.str.5.222 = private unnamed_addr constant [21 x i8] c"pthread_mutex_unlock\00", align 1, !dbg !2656
@.str.6.224 = private unnamed_addr constant [6 x i8] c"\1B[36m\00", align 1, !dbg !2658
@.str.7.225 = private unnamed_addr constant [6 x i8] c"\1B[33m\00", align 1, !dbg !2660
@.str.8.226 = private unnamed_addr constant [8 x i8] c"\1B[31;1m\00", align 1, !dbg !2662
@.str.9.227 = private unnamed_addr constant [6 x i8] c"\1B[37m\00", align 1, !dbg !2664
@.str.10.228 = private unnamed_addr constant [6 x i8] c"\1B[35m\00", align 1, !dbg !2666
@.str.11.229 = private unnamed_addr constant [6 x i8] c"\1B[32m\00", align 1, !dbg !2668
@get_color_end_for_type.retval = internal global ptr @.str.12.223, align 8, !dbg !2672
@.str.12.223 = private unnamed_addr constant [5 x i8] c"\1B[0m\00", align 1, !dbg !2670
@mime_entries_initialized = internal global i8 0, align 1, !dbg !2703
@.str.244 = private unnamed_addr constant [36 x i8] c"/home/raj/lwan/common/lwan-tables.c\00", align 1, !dbg !2728
@__FUNCTION__.lwan_tables_init = private unnamed_addr constant [17 x i8] c"lwan_tables_init\00", align 1, !dbg !2730
@.str.1.245 = private unnamed_addr constant [30 x i8] c"Uncompressing MIME type table\00", align 1, !dbg !2732
@uncompressed_mime_entries = internal global [28534 x i8] zeroinitializer, align 16, !dbg !2836
@mime_entries_compressed = internal constant [7514 x i8] c"x\DA\AD}\81\96\A4(\CF\B6\F7\B3G\DF\9D\EE\D9\99\DD\AB\F9\0E\22Zt\89\D0\80\96UW\FF?A\ABJ\01\AB{\CF\FE\E7\ECTC\12\11C\08I\08\EC\8F\B7\F7\82\19\D3K\CE\BC\D4\C3\FF\A6\A1\A9z\EDGW\FE(\DF\CA\F7\E2\BDQ}\E1\C5\EC\03F\0E\EFM\15@\EF\8D+\A4b\9D\F8\DF\\R\F9\BD{+&\D9\08\FD\BF\F7\CE\987\D4\CD\A6^\FC\BE\ED\DE2\97\BFo%\D7\CAX\E1\9Ch\0A\C6\EA\08\CFF\7F\D2\F6\C2\AC(k9\80\80\17ll\A4&\14\95\99:~@1\03\02wL\E0DW\B0\FA\12\13\D4\F2\A2-:\C3w\08s\96\C0yoK.\AC\07\96'\0CcJX\D4\87\E6:0%\B9\AB\02\11\17\F1\0B\B8\D8}4\1F\D3\96\F8\C8u\AD{Bz\9EG[|]cVv\A0\C4\C1\0AaRZ\C2w\96\99S\C1\DA\98[\AD\1E|\E9\AFF\FC\002}V\D6\AAR\BA\E1\C4\C8\93`M\DA8A+g\C2G\CA=\BF\B4\F3\8E[i\C0+\D9>GM\B6-\01x\02Ihl\FA\BAF\D7\A2\02\A6\DC`J98\CF\FA^\D8\12\FD8C\16\FF\B8ItX\FA\E4\F9f\AA\AB\00W23x\B2c\D5\829\A7\D8\A1\B1Z6\D5\FA\86\92Y~\92S\18Y\CE\F8I,s#\14!w\83l\85\DB\BD>\E2\BBr\E5\1Ei\0Ff\1F\A0V\A3\D5\02/\8C\C7\CE\0A\11\A0.\12\D4\CE\94Nv\03\F3\A3E\07]\BBN\C0\E5\AD\A82\A7\96\EE\82\D3(2\A73\02\C6\F1\A5\95\93\CA\F4\D7*P\B89i\E7\95dz\BD\975\02\FC1CcP\01\B0\04\89\E2\03\EF&\9E\E0\01[\F1sft\BC\9C\AB\0E\F3/L,=\88\01/\18W\81\AA\99\93ho\92\9B\0F\08\A5\82\ED\E7~(\CF\A4\1A\0Avk\D3\B7H\0B\C1\AAZ\D9\0B'8\98[\05\AA\9B\FB\16%\A8n\97\8C\D4\B1\9B\1E*Qk}.\EA\88-\D4\D1F_\86^c\EA\D5\DCH\1D\A1\17X\DD\B4\B9iM\E0\BAQ\C9+\DDu\E0\AA\AF\1A\F5\C7\A5&\86\D6\22\9D\D7V\B0~\1AxE\B8\FA\F4\96\E0\DB\F1Cz7V\9A\B9\AB3\D6\15A9o\884\F7\C2\97\CE\A3!U\D4}\AC\D6\EB^\DB\BAX~\B3\98\CC\04%X\AD\CC\BA\DCP)0-\E9\9A\85\18(v\16\16\F8TT\A0u').\E8\B6\17\CAUDR\EBxU\AA1zoE\1D\E9\81\FD7y(\B5\A5+\F8\FE*T\EB\\;\80\BEe\9B\E7\F7I\C8\0B\FE\E3\07S\E9d\E2\FD(\BC\1D\9D\AF8\B3\98\02\BA\86@A\C2\87Vv\CB3\B7\7F\F5Li\CEx\EEg\93yH\0F\E7\8A\FF\EC\AC\1E\0D(\DA/)\BA/)\CC\97\14\E3W\14\915@\14P=\00o\97O\CE\9E\0B\07\95\C3b\15=\E5\B9iFe*CH\F0%}\F1h{bX\11k\A6\F5\9DX\FC+\CCd\C2\F2\FAw4\9C\BC\C6s5\CBBm\16\EA\B3\D0[\0E\BA\95\12\1E?\D7H+\B8\D7D\16T\E3\06\19 Aa\F2\A6\E6\CAe\06\0CJ\82q\C8\09!y\A2C\06\E1\09\C8\9B\B3\B8\A6,\11\8DdXu\09P-$\BCQr\CF\03\82`H\0C\0C\AA^\FA\85\82g(\A8\1Fr\C0|\A5j\93\124Z\01\1F\B0:\C5\EA\FA\03<\08\D8\CF\14\FB9\8AQ\009\17X\99\F1z\D6\13+\A9\DA\C4\1C\0B<\01Qc\D9ee\\\FA\E1\\\0E\8D\B0\A2\EFY\01305\10\83m\C8\DB\D8\E8\04d'\B3\9DZu\07\95\F8)\D1\FB\01\C4O*'\8B'\AF\FA\93\E8!\C8'\9B\0A\EB\B9\11\D5\19\8FS7\A0\92\B6_MU\991|\06\07\D3\E9\22\EA\D0y\D9\12N\94\D2\B9\11\BF\83\F4r\B1Q\B8\ECs\BD\C1\8B:\D6[\8Cn\CF2\F3\99]\95\C6r\8A\82\DB\F3\E4\83M\AC\9C\F0\F1\FD9\D5\E10\1B9\F4\00`P\E3\15\A4\AB\D6\0C\169h\CD\17\B4\86\F5\C2{z\E1\D9\7FA\0A\FDoz\B6\D0^\BE\A0%\87\A0f\C3\99h\E7\D7\B4 1\C9*\0E\1C\C6+\A7\E2\B5S\9A\07\EB\15\F8f?`\A1N\82\B8\85\A1\AAR.\\!\92\FAba\92\C2?\81\F6\D7\AATb\18A;?\FC3*s\9DY\EC\A5\AA\08\CE\B5:6?h\05YT\11\98F\B31\B5F\02\88\C3\CB{j,\B3\1F\04\C5x\98\06P;0k\0Bn\9B\94S\18h\B2\9B\80\EC3\D3\0B@n\E3\D92\FF\F5\E7?P4\EB\E4\B3W\E3\F5\A0\BD\C8|hWm\D0\DC\9D\E2/\00\84\BB\88\E3\A1\EE2\82\A7\95\D2\C3\E2\FBpH\F7\E2\01\A0\C0\DD\B1\9Ev\D3\9Dn*\22\BF\8F\8FpH\85BcX\8C\9E\BEv\A8\F1\CB^B\C9\E4 \18\9F\8F_5\CF\CF\81h\98(\E0\C8\89~\ED9\F4W\C3\82\92kX\BA\D8\93\D10\BA\8AP\0D\CB\E8\98\00l\18\9C.\E1R\E3\B7m\DC\80\C5\12j\AEa\93\D2\E3\B0o\E0\0E\\\DE^\EF'\7F\A39\19u\0B\8E\DB\A3okR\16U\0B\ACiRc\15\CBG\05\F8\D2h\D3d\8D\D9YX=W\84mDl\92\02\22\D9pw.A\B0\9B\08\8D0\BD\BE\1E\1B\8A\8D\B0\AF\C4\B5iY\AA\15\1Az\12\08|\EB\B5h\BA\D8\F3\03d\BB\9A4rc$4\F2\98k\D2\1D\0E5P\F8\E7_|\06\B0\B7\17\E8\8Fi\D53\A1\FF\1F\D3X\84\9F\18\D6\F7\C7*\A6Q]\1C)AM\E0\03\DC9\B4\03\8A/l\BBF\B9\17}\1C\D2\15\8A`\10\BA\BD\96r!\FE\03pv\FD%d\05\E4\08\05\EB+\A84\AB\C5\C0\EA^4\D5\8F7z*] \B4\11\03\A4\AF\D5V1\EFJ\DDb\91\15\8F&\A8A\A8C\8E\D1\94CG\AE\D9\8AAc>\DF3\7F\DC\B3\FB\B2\96\E9\99\FF\CF={\AC\99M:\10\DAu\B2\02\BC1\A9\AD\09X\88@\C1\B6Z\8D\F5E\CC\C1|\B7\0A/\A9\B4\1Ef\A0\AB<\EB\00\8E\A2\1A\04\F8\83\E6R\E3\93\F9\E9\9F:\C3G+\8A\EAK\825\DEm\DF\8B\1A\FE\9D\9A=\AC\02\80D\E9\85\04M\F5\1AC\B8G\93\C2R\D5L2\EE\12 \CD\A5\DD\E8\\\AA5\97n;!Pk\E6v\0BA\AD\99S\CE:\A3}\8BY\\\11\B2\99\0F'\B8\E00\0B\7F\FE\FD\E7\9F\9B\EF\1AFaY\F5\C4\84\D2\EF\9F\BF\0Fh\02&\94\FE\F9u\D4N\C0\08\AE\F6\B3\89\00k\BCOd\A2\0E\83\9EX#;U\11R4\F3+\82\B9\10\ADL\97%#\B9\13}!\E4\AF\14\D5A\FC\98\EBe!z~<~B\B5\89\FAQ\C2\B30\8A\02\F2\A3 \E94\1A\B6\E5\7F\BF\BD\01\14\7F$\00A\D0\84\BA\BDh\89\02\B7O\C9\92\9D\C4RY^\E0:8\E0\B2\0E&ElVOF\18w\14H\15f\DC\0B?\01B\B4S\B84~/\DCMv\83~_:\ECX~\C6\BA\B1^\82! Iy\8E\CEPx\0A\18\E1\BFz\83\7F\18\1CNP\A1\10S\EC\14\13DL\D7\18:LXA\C5,\8E\D7\061\EF\A7\18\D5\C5\EC_H\11\BD\7F?F\14\C3\15\17\0A\17\0B\C2\A5\86\82\B8\19\8A\F1\F7\F5\08f\DC\DE\0F\F0w;\A0\BD\7F-\94\A7\B7l(\DA\9F\D3#\C2H\E5\F6\F7\EF\84\E4\9F?\13P\ED6*\A0\85W]\CB\C6\9D\04\FA\D8\F2\C6\1F\C4\C0Ia;\0E\1DmY_\05\BA\96\A7\AB\BBt\8CW\84h\9B6c\A7\B5E+\FE\AFg\E3\C0O\A9\C6\16`\A5\A6\87\05\9C8=\FA\12\CA\F9\\\B4\DD_\AF\83\81\9D\01Ms\A4\A1\DA\D3\C3\1B\A1\F0\F5\09C\02\D8\CF\1C\F0\AF\1C\F0w\0E\C83@\19\9B\123\81\DA~\B3\7F\14*m\FF\8C\0AS\B9\ED\D3`8<\01K;(\ED\\\11\BA\ED7\C3\8Cr\DB_\F2^\B8\9C$Q\CFOC\B5U\12M\88\D9\05^\F4\D7\0D\06\95V\BD\0Af\B6\03\CF\A0u\07\F7\BD\22\1C$\22\11-3oE\0B\B5\D0\DE\CB\B7\B8\CC[\1C\AF.\A2^\05\A5\85\95\B8i\14\B56\B3\0F\D0\F6\E3\EC\A5\12U\F0|[\FF*\EC\D0\8EP\8C%\F5\D8\B5\00mb\0E\ED\E47\EB-\D5\DA\CC\F2\B8\CE\08`\F0\AF\7F\85\CE\84\EA\DB\F1v\BB.\D3\AD{K\07\B2\13\1A\06\CFPt\EF\EBGw\EF-\9BQ\CD\92.\CE`\97\B1\E8;\AB\F5$J\C6yp\88\BAd\DF\D23,\0E]\14/\B4pz\CB\EE\84\05\A0\86O/,(x\ACR;\F2$\9E\CE@\D7\F4\1B\AB\83j\9DHE\9Av(\09\DE\899\F7\1DX\C9\EC\B5\14\E0\A6\B6\10\8A\AE\ABsT\9D\A8a\12\84\15\AF\EB\FC1\85\D7X\0F\BBS{\C4\94\10\CC\EA\1E\E1t*uR\1DQC\1C\06/\FD\B5\\\D7\EA\A2\8B\E2x\DD\1A\F7\ECT\E6\DB\00\EB\861\EC\D3\C6|\BC\83;s\CA\88\F3\B2\85*1tf\DF,\EA\CB\EB>s\1F\C8Z\F1\09\94;D\D9H\12\9C\ED\\\80\9A8\86\B8\00\CB\F0.+\BE3lv:d\E2\F0\B1(\E4\CE\C6aP\EA\C0\F2A.\BB\AD\14\C4q\B5G:\CFbc4\80:\7F8|$\0C\CF\A1\F3\97\AD\B0\A2\D6MO\9D\188>\C9[\D1\CD\FB\9EP\BD\9B\B3\127\D0\BA\7Fz\BA\C3\A7\B7_?V\15\12\8A\F8y\7F\D6\DF\A9\FE\F3Y\FFY\9CX\AA@\00\0B\0C9\D5<Uc\01xJ\A2\E7\049m\FB\11\05\05a\0C\12\E8d\BA\CC\FBL\19\E0'#\9B<\12\F0\93qy\9C+N\9Fs\12u\AB\F1>1\FF\FC\B38\F9s*;g\B8\89J0\80\81_7\87)\CC\\\84\9FMuJ;te\8A\9DXu\9AJ\8AC\9C&\F3\82b\D2\F0.A\E3^\D0\AC\A2%\DFR/R\0E\D0\81\A4\B6d&\F9\020\B8\AAA\1B\D1K\E6\B0\E7%\AC\18x\88}B\EC`\84\9F\81S\AF\1F\D5\0Fk\02\E5\01\80{d\8F\F5bh \DCR\DC5U(\B5u\8C\CF\AC\E3\0EV\09C\FF\C9l\837N\7F(~V\C8N\B8u\06\84\A2\CC\88\03`\B0\801\9Fa\D6fX\E24\1CgB\C9.jj~e\C9\10Zf\9C\AC\A8\A7\81\E5\1C0\CCV\99\89\BE\EC\13\05d\D8\9Eu9\07\87\C0r\D8\06\CE\C8\9C\DC\12\A2\BEj\EEP:\C4\85d\8Fh\BA\AD\D0\F0\D7\8E\9C\A0x\9D\F6\A9\CF\03\FB\DA2\C1J\A7[O;\FDU\A0\92\A6\95{v-\10\99I\05\898tw\07\A4U\D9\FC\19+\BB\93w\94\14\02\AA\10\D5\916\93ic\05\FC<I\01\BF{\8B\CB\E7\BA8\CA\0E\C8?\BF~\FDY.\111\E9\CDw\84\ED\11\B7\91\99\F9)\15\16\BEI\BA\90K\03\BC\9C\C6/h\C6\E2\03>\D9CQ\BBq\A8>\DE`\EC\E1\A9\B2\11\CB\0C\C6\E2\F2\C1R\96\10\EC#Z5\C2^\D0=\A3\86*w\BD\19\10N\8F\16\13\FACfb\F0\01\F8\D1\FB\9C*\FC\E8\AF\BE\F8\18\92\DD\98\D0(\C1\CB0\E3?t\93J\C9\87\C6\22W\11\EA\D9/#\D6i\8FRW\84\9F]=\AE\AAu]\F90\8A\AA\D3\A3\1A\D0;l\BA5\B6j\C1\0F\17\A5\0E\05\00\FDD\13d\01\FD\11\D0gbopr\94l$U\EB\A8\95\87\8B\B2\A0\CE\AD\CE\A3It\C6\9E\15g\99\B2\E8\0C/\D5H\BB\18\EA\E7\CC^j\A7u\D7\8BR0\EBO\D5}\FA\9E3)\0B\11\E1\AD8\0F\99%J\0E\F8\AC\F3`\8E0G\9FH\81\95\11\F8L\8AU\C0\93\E1,H\CB\81\C4\7FM2\A7Z\15\CE\CBY\\\8D\86\AE,\CE\19!\0Dm84\829s\F6\99n\B0\93\D6\1E\9F\ED\EF\EE\1A\95\CE\FEvLyi\F2o\09\E1\E1\F3\C5\BF\C0\F6\CC\E5v\BE\01\A6\7Fa\90HS\CC\D1\ACY`}\9D\BE\B8\EF\B1v/\D61\A7\10n+\CA\9A\C1g\E2\A2\82.8{m\F0\98\F87\8F\89yYq\96\CE\88\8C\A1s\12\15\ED=A\19A\AD]10\FD)\F6\8B\FA\DBi\EB\17Q\F4\E2W\1A8\B4z\F4\E2\D7\AFjA//\A4}\90\CD:E\F5\F7\BF\DF\FE|\95\1DI4_$P\F6\D1r\17\D2\E8\DC\09\AE:\1F}\01\FFb\F7N\A8\9Fx\94\08\B6t\D0\B6\C7!\CE\DEf\B7\06\08\DC\FB\F60\82@\B8~2\9B\B0e?Rx\A9ZL\B6\FEb\0E\12\14\D7-\82\02\EC~=\00\EA\C7{&b\DAHF\E9X\C0\FE|\89\BDkOE\DAS\BD\FD\D8\1B\B8\06\00\F5v\DFZXi\F6\8F\BC\EF\B1\EF\E3#\0ED\00\DA:\04\EC\EF\D4\\\A0\1D\A8\EAA\F2s\DC\C4#\9E\D0g@\88\CAQ\CCX1\7F\12\F8A\1D\A8\C6E\C8f\99s\98\0Bi\BC\91k\F8\09\D5\92\CD\B1\C4g^\84n`a,\22\E4a\CB\B6\A8\DAc)\A1>E\E2\B5\80\96\BE\D4\C7\1FP\9F\8F\F6\10\09\A5\E2\94\BB\00P\FCG.\83\08\163\0FV\B0\E2\A9V!\98\CAl\F3.0\D5\D4\89\B8\C0\14\A5\EDh\85%\EF\19\9F\82\E8c\FE\C9B\89\1Do\84;\AD\B6\F2R\14\9E\ED\E5\8F \A4\13~.\0CYkY\92;\85\8B\B1\EB\C0f\DC\01\C0\0C\10>\0D\F6<r\87U\97\DDa\13\BAR\CCt#\C4\EDay\AA\EE\96Is\D4^\D0\A0\B0\8E\DD$\D6\D3\90Y\F54\0A\C2\CF\AE\9E\04\DF%=\94I\0E\00LI\F03\DA+Q\1F\F7\CC\7F*\A9\0F\B3\AB\9E\DF\9B\E7\1Ca\18\05w\C6\B8\9F\D9s\16>\81.G9e\80}\CA\A2F\F7\F5\B5\22\8CR\99<\C7\934\C3\E8\1D\19>L\9FEIDJe\BC \C5\F0\95\CAn#\9D\8F,\01Ayl\90+\A0\D5\D0=\FB\85\B2\1A\AE\A9\1A\D3\83\B8\164Ib\14@F\F33\A6\E5\92\FF\0B\89\8C\84H\DF\B5\83\BE\7F\FF\E7(\F9\D9\07\FEk\E8\C6\C7\DB]\07\E1\09\10h\C3\9D\AA3Ymi\22ui\DE\F7\D5\9F\0F\ED\F9\93jO\E2P\8D\BA\B9\00\A7\DD#<\A3'\CC\09\9E\C2&\CB\0Cdb\A7\A5\E9gW\8F\AB\FBnu\D17\9C\BB\03\05\FE8\22\B0p\D3\A4S\B2\EEG\81\95\AE\82\BD\EB\A5\A1l5e\86\A3O\D8\E6\EE+c\B2\19\A3V\87\DD<e\FCk\F45o4\C8\01\BD\80\D8|^\0F\F5-P*:\15\A0\E8@\00\80s\02\BDg\83*\B7S\84\8E\C7\CB@\C8\EC\84\AF\07\B7\1F\A6\B3\D5\F7\C7D&M<\A4\FA,(\FC~f>\14@u\B8\ADH\18\15ib'\8F7\01\95\EB\0F\99\E1\A8\8F>\C3\ACq\12\A2\02\06\AE\9E\F2n\13n\0C\B51\13\AC\18\9D\E4\12\8Bi(\E4le\8B\85\D96\14<\B8\93,<\9A\EAW6\CC%\A3K[Z\B7\A3\E8&\D5\D5\FC\9D\B7\82,\EA\DD<-=\99\D3\CF\F2V:\D8\A1x\1AH5\E7\0C\99\A1\ECh=I\F7T\E1\FFU\0B\B2rWE\D9P\F7\19U\0C\EF\8B<\E1\EFpl6\0Cu:I.\BA'\EB\A5Z-\F8\81\E7\13\90\07>\A7\F9\1E\00\86\0F\1D\E0\B9\AE\B1\02*\0E]\C3\FC\EB\FE\07\83c\90\19S8\00\87>\8D}\0Cb\C44\80C2R\03D1d\84B\0C\BD\9C\C4P\0CC\93\E9A\DD\0B|\CFc#\F4\0A2wL\E6\04\A3\84\D0a\B8\1C\D3\\D]\0C\BB\0D>\82\D2&\DF\E0bV>C\A1@\B6\07\96<\E5D\BAb8\E4\CC-\96n\82h\F6\C5\E1\907\90\BC\BF&y\07\89{MR\E8:M\15\ADC.6P\1F\F1^\1Am!\C5a\1D\AA\EB&\DD\C8B\FB\D2\85<\A8G\DA\13\C9H\0D%\08z\FE\1D\FA\C5@\D7\99=\F6\0C\F1=\A6\02r\FF/\E8\CBG\08O7\DDw\9E\BB\BB\D6\05\99\BF\DF\A0_\E2\89:\93\BA\93!\A69\07C\8C\F6$\F1\88\F9\CE#k\10eY4cC\E7\E0\99%h\B2\EC\CE\EA\C6\7F\B7g\85~\18\06\BA\EB\0A\FA\B7\AD\DD\ED\94\A5\B6\D7.\01\A6\E2\8C\C0\00\09\0A\07\B6\\le\D0i3J'\C6_\1F'\8FmPq\93;\D4[\1Eg\22G_\D4\C6\95\DB\F0\B06\F7\FD\99\B9\0Ceml*\B2\86\F5\AA\D0\B6;\98\F8\C0\C0\EB\B8\D1Pf\94\C3\BA3CLvX\80\C4\92*H\A4f\EA\BEI]-\D4K\97\FD\F7\E7\D4F\E8}v3\92\C0\DA\FF\AB\F9\B0m\F3\F4mY'm\AB\FD\F7'\D2\F6-\FFzzl\1F\FE\B7\F3d\FB\EC\B7'\CC\E6\A19\DAW\0C\00\9D\D9l\A5F\96tQ\C8\0F\A5[a\C4ij?\D2\FFaD\C3\C3/\CC\8F?\A3<~\EE\002?\E2Sq\01\F1V\98\DFu\06\F1{{8\C5\81\88'\8D\FE.\83[j~\ABc\94=l\DA\8AO\8C\80\01\8D\CB<\FE<Ok\FEN\D0\7F\17\F8\D4\F8\AB\D9%3\0D/lI\104\990\AA\D1\17a\EBQ\F6X\D3~\81B=\F6!\8D\B6\9E\B2x\CBZz:\D3n\BE<\E2fxv\B6\10\D8\F0\EC\863\81\F1o>B\CE\84\F6\CF.ITL\08\C5d\8F\D2-(\C3\9F\87O\A8l2\CBo\D0M&Z:\A9nZv|X\DD\B4\F5+\A4z\85\DC\CB\C0\82j\08l\DA\F9@$\BB\CC`@\9F\\\C3htCrxK8\A8i\C0M\14\C4\A1\A3\D9\B0\C2\E8\08\0A\\&01bh\BC\B2lCv\E6,\93\F30t\12\08\7F\0D\8B4Y8+sG\98>\E5:]\C6@\F9\B4e}){f\B1\F0\9B\9E\1F\F9V\842}&\1F7\C4.z\C1,\BE\B4\8F\A6M\BF\04.L\EE\90\9D\E7`#\1D\AB1\C3}\D3\8CJf\C8\B0\99\0D\0B\97Q\CF\B9\F7\8AqB\A1\93+\81\C9\E7\D7\86\D9\B5l\D1\98\83\EC\F9'\C9q\0E\BD\F9\F79\F4[\C5\BE\CD\A07\86}\D5\0D\D64rH\FB`2\81\AD\91\0C\03 \8C\C9\F0\D0\C89\F0\D0\B8\AFXc\DCW}r=l'w\D2\97L\BF\DC\7F\E4\CD\A3m\B4\F5\E5(\9A/Gq\DBz\A6\B7\FFu$w\06\AD\F9d\07\AA-\B9\B7!\09\FB\99L6\D7b\99Q>k\D8\12\03M\A4!\C9\92\B1#m\8E\1D\A7\8B\1B\F7z\E6;E\1E\BCq\CD\C6\89\\\B2%\CDI{\8D\91\80\D0\E4\B3\C0z9\8C\900 \8D;'A\12\82-\D3\DFgR\98\CC$+B@\19\8Fi\C4\04\B0^\C2\94\81>\9E^w\7Fb\A0\B9\A4A\BAwU\11\13J\E9W\9F\D6\\\B7\A7NHHzv%\8B\E9\BA\1Cd\AE\88\C0\\\A7mH$G4\15\9F\999\BB\C4\B2B\\\16f4\CC\8C\CFZ\E7R\97\C6\8A\10\9F\ED|\80\04\E233CW~\D0}5\8D\E8=\1CA\08E\F1\E9\93x\F0gfS\F8sd\F6\BC\FC\CEa#\0ET\FE;Ts\FD-\AAo\BD1cT\E4\A8\BE\D3/\FB\DC00CI\B7T\84j\11\B2(\F3\88\D8\E4\03d\BB-i\99\DB\1C\90\1D\81\0EN\AD}d\84%\83e\C6\C1\F4c\D7A\8F<\A9ld\C1\A0\1E&\80mn\99\E3\93\18\C5%\97\A6\22\BC\CD\DC\DAS\8F\8E\CEB\B9\E5L\08>\\\B84\0A\06`\C8\8DY\DE\D4\D5\8F\0F\A1\B2\8D\F6n\AC\E8(%h\A1\95\DB\9D^\AAY\19\B7O\DA\8Dr_Jz\AA\\\EF\CB(\22\83\EF\DE\83\926\C0\97\15\DF\F6\FC\D5\AE\09\A1m\DF\BCh\A5ld\BB2/\9Dlv\19\DC0#\81\DF\EDaYe\B2BP\D2p\C9\01\F8tv}pSQ\BE\8D\C2Z/\9B\1E:\99\A8\AC\CA\A8\9E\ED\AB\CB\A9\86\8CD!K\0B]=\97Cw?\E2\0C\A6ay\98\0B\ABY\BA\D1G\C0\10\82\DFD\E3\AD\F9'w%\06\1B\BC\AE\08g\8Ds\07\D1M\CB\C2\87\D2\A0\91\B4\18\E7\BFAX\D8}\C8\DE\19f?{\BA3\C1^\0B\BB\7F\95\ED]I\DB\02X\10\D7qv\D1 \BAf\85G\0F\BA\95>\F2\E0\A9n\EFG\86\AC\E4\A7\10\B9q\DB\9B\89\DC\FB}VS\C9\B1\C3\E0\04m\D7\95\CB\84wu\9C\CF\\\AF\E1\F9\CC\C9\06\DAiY.\E8\D9\DCB\E1x\1Ajt\B0\E9\1B\AC\B6@\AA\83\B5\1Ak\AE\80m\0FE\E4x\C4V>\99\92O\90\1Ep\16\03\E3\A2\93:O\BC3zp\F4\92t\DF{\81\B9L\AE\9A\F3\CC6r\D5'ty\05\A8\F8k*\DAy\07U\F3\9AJ.J\12\84\E7\0C\A5\EEC\E4\A19/\D7:Q\E1\1BD{MGu\D7\\^w\E3b%id'R]L\E7\E5\99\EC\8B\E3\CD\A9\80qBe\D8F@\FC49Lx\A6\CDaZ`2\D9\8B\00J\D6\CB\9Bh\EE\17\92`~\D1\06\DE\EEs\A1^\00#cr{\CA\05`+\BA\84\92\146%\AB\AEw\9C=\C9\DB\A6<5.c\BE\9E\AE\8D\D5\E1V\96\19\ACo\CB\B0\D7\E1Zw|\A0\94\90\AE\9D\1E\E7\F6Pt\DD=\7F\82J.\93\90\9C\19\9D\B2\EBu\CD0\10\DD\9A=\EE\E8TF\F8\D9T\E3\0C!\00\C8\B0I\A0\00\B9\E8\B8\08\EA\8B\04\C9\E6\B1\CA)\8B\DA\9A\07\EB\A2\03_\FBK\D0\9C\BC\1F\C8D\E9LU\BD\DDtt\99\83\F1\F1>\17h\E6o\10\C5\D718?\C2\89\F0\84\99\F3\A8\B9p\99\E9u\86\D6\07B\1D!\CC\11\C2\1F \FA\E6[\9E]\E2'\E1\C1\FF\1F^\1D\DA\F1\07\96\B3c@e\FCN\18\1C\86\D2aX(-{,.7)\B7\E2H\9B\8E\A0\DA\87JP_\97\00\15]b\B3\C1<\13L\A8\ECT\B8C\F0\B0K\F7\DC\1B74\BB[\E6\DC\90u\97\08\1Cer\EF\82;\CE\F0\AF\83\9E\CE\BC^\00\CD\C9\D2\A6\953qv|;\D2,\00\9C\91\B0S\84d\7F\93g\00\B9(\8F!\ACJ\F8\EF\B9*\99\CF\03\82uY\A3\83Q\8Fm\16\F7\19\F7\82 .\F1\86/L\BA{\8A\B7KnvqcM\D6\A9\B3ctFi\\F\CD\CE9\03\06]\1E\FB\D5\1Cu\AE\89\86\1C\80\15\93\C92\D6\0D;oS\D8\DDa\F2\02a\9C\8B\8D\0Dw76RiwX\A9\E4\D0A\A3/\D7\0F\D1_\D0e\96\EAq\A8\D0FX\A5\9F\F1\22\E7\9BCJZ\F5\B7\94i\9F/\98\DF\00\BB\CC\16\C6\BD\91u\B9\DF\B6\B3Ox;]\8D\B0\D0Z\C1\CC\F2\FD\E1=i\9E>\DF\E6\CE\E8\AF{G\CE_\0E{\B1\AC'\9BN\8C\F5\F6\86\84\A9\A6\03\EB^z\B2\C52\C9\1B\80\95\8F\938\A8\98/(\A6\9F\99\8B\8C\EEP\FA\9B\08\EC\0A\8C\AF\A8|\F4n\B1\91\81\CF\0C\17`n\BA\87<\DD\BA!\86\BF\B7\18taG'\A8\DD\A5M\D6K\CD\CF\176\09:\D1L\13\FC\929lk)Ay\10\FE\A2\ED\D9UD\E2\E6\D7\92\07\82\D7\02\07\82\EE\ABa\BC\9B\05\F3\97b\07\1AuH\B3h\F5\F9+\A9)\FC\D6\9B\F2q\BE\B1\7F\9F\D4j.x\D6\C1\D7K%\F8:\B4\1C\C84~\03X8\0B\05]\0E\C3a\EC\9F7\C0\A6G \09\E2s{4\E1J\E4*\A0<\8F\D5#A\BC\A0\0Bdm.\1D\D1RTz\C1z\B1\E7&\EAAj\F0\97\EE^\8Df\C5\13\1B\1B \04\F1\F1\C5\0A\01,\D7\BC\9A\F0\F7\10\BB\CB\92\87=\B9\7F-\16\A3q\F1\08}\B2\1F\83\E7J\82\FA\8E=\AC9*\FBS\E6\CC\AE\BA\1B\18\94N\04~?\0E\0A{\BA&8\FCl\EB*3x\EB-\98\94\A0\E3a\ECjk\C5\10/5\B5\F4w\84\CF\9C\22\DF\1E_}('\9F\09S{+\F1\03\84\B7;i\B4,C:\0A:s\E9mz\F1\1A\C4Y\C9\01s\C7G~6\C5\FA0\97\95\81\AB\11\0C|\7F\BFS\CC\B3\1A~\08\96@t\AD)'\D6cY.\BC\E7\D9\CD0,\06>\BF\A7\BE\A0V\C3\1D\86\03\A9Z\9F\89-:\A9\BC\E0\A7\12\DDl\14\90$\99\97L^G\8E.\A3Z:1h\15\\\17?\CE0&Atx3\19\A1\FC^\FE\C6\F7\B7\D7W\87\8F_^\EC5\B6i\AF\00\EB\8B\F0\93\C7\F4\F1\A4\EAz\82\8D\EA#}@\B1\0F\EA\07<\B9\EBE\A4\F1\A5\80(F\9D\D91#`\98J\A3\95\CBG\A3\10\A2e\04q\09\A8O@.US\0Bl\CC\1C3\1A\E5g\B5L\B6q\BC\BB\86\E3(\06\0E\97\A9\18\A7\DD\15N\82\8B\E5\8Aq \9A\CC-\22|M\B9\1B\A7\F6%vw3\12\C1\D7|\0D\A0N\DB;\97\08uj\00\95\C7\0F\A8\F8\81e\FE\03cb\8C\A1\A6\\\0Cu\04\F5\F9\FEz\7F\1F\8Bi\9BC9N\D3XQV2\0Aqs\CBe\D3@\1Cr\EE\0B\D6}\C1\BBW\CC;\E0\DE+\F6\BD\E0\DF\01\03\0F8\F8\0D\16\1E\F2\F0\98\89s\BE\D1qpFp8K\22\BC\FA\96\A7\22\AFn\FC^\13/Z\98\E8\96\CA\D5\89\0A\C5)\89\19\F2&\1C\18\99\F8\E3\9A\A0;ew\B4\B6\DC\09\DC\E6\89\D5N\9D2\97\CA\11l\CAD.\16O\98\D9+\B0[.\A2\A6\8BI\D7\DBk\DCCU\DBo\05\E0&=\BF\D6\B0\93U\8F\BBG\A88\B9&\DF9`R\81&\D8\E4\DC\E1\13\FE\10s9\C2\F8q\93\EEM\B5)\C9\E6\A6\D3m\F7\FC\ED\CB\FB\E1\BDE\17\96\A0\B4V\00O\8F\1D\07*_\D8\FC<\D0\E2J\AA^\9EW\96\07?\8C\99*\80.\B5\CB\DD#K\D9\D2=\19\19\0Ed\8B\07\BB\DC\D2\9E8t\A1\A1\80?\BC\A6\F0\EC\8AKS\BFB\9A\FDQ\A9\B0\ED[`q\BA+*\14U\11~\16\A1\B9\D7\EF\CF\85\E2%\95h\A3du\91M\07\1B\FB\12]\0Ds\07\9F\DD\8B\8E\A9\AD\90\A2vQl\C7XT/*\0D\D3\97\04\BC\BC\BA\E4\ED\B2\FD\DF\98\04\1E\12\07U&\F9eEr\C2\BA\E4\99u\87=\94\8E\1E]h\A8\81i\FF9\10\145\EFA\10\94\CC\8Dr%\01/d>f\EC\B4\00\BFd\92A\C2\91La[\8AB_L\D6O'\F0\C5\BC\1A\81\CFL\BB\80A\17$\BD\0C\FA\01\98\DD\E4\BF\C4q\97\CB=\EErqF\03z\8D\B0\0Bp\A1\F0\A9\D0B\D2`\8B\D6\90\CEi\CF:T\E7\AFl\BF\193{\E9\1BJ\E1\15\F8[o@\B5\0C\0A\93\A0\B7,x\DA@\C3\F7\11\EC\96\01\DE\E2\17\B1\F8\88\06[\D5\CD\CC\E2\9B\09\9C\EC'a{\BA0\82\AE>\05E\AA\99\01c\C5\\\B3\F4\8E\E92@\E7\FA\E5\05\B7\9A\8FK\08`M\9E\9F7y\86\F3\9A_8\C7\B7\D9\C0a}n\CA\CE/\FF\97\12\0B\C5\D1\1D]\C0\AC\14\D9\EB=\17\D4\E5;\FD/f\11\1F\18\01`i!\BE\97\9Dyx\1F\DA\B8RX\AB\97\13`s\EEB\BC\B5\8F\84\9As\16\7F\00\CE\A7\C8q<\DD\8D\99P:\C4M\F9\93:\B3\DC^\00:\93\07;g.R\C7\E8\8A\99\8B\9E\90\EA\10{\9006\E7R\FB\9E\0D\C6\CAe\EE\1FC\DD\ABW\0F\BA\97\C8\FA\B8\9B!Q\B9Z&W\A6\B7N}\F5h\E6\99\7F\BBI\B1I\99Vk\B3h\C6\BF\FA$\FF\A2_\87\19\83x\EC\BFu\ED\11l\983\F7\0C>{\F7\C8\7FQEr(\8C\862\8D\8A\E8\DE\F0\D2\8D\1D\94\CC\AC#u\A2\D7yjbm\0F\C8\BA\D7\15_\B57\D3E\C1\EBS\1B\9D\B2\E6\1E\CE\99\EB7$T\16\C0s~\1D\02\F8q\0F\F2l.\F9\CB\A08\CCS\E2\E2@\A3g\E6o\10\B9\0Co\E2\BD)\02,_\E2\8Et\DD\8A\8Evd\08\B0`\C6\DCI\C5\9B\EC{V\01\B7\D0L*\AB\11\8E4\C5\E5\B9\F39\D3]\B2\FA\12.+\9E\AF\B7\EDu\F5T\9DcK\02\80+\1B\F6fZ\00\\\A3\FFm\0F\EA\E1e\B7\1FQ\0B7\C8\F5\89\CE\91'\FF3\9B'\E6\FD\10\F3\F3\10\F3\D7!\E6\D7!\E6\F7!\E6\EFC\0CK\BD\B9\1B\807\F2\E9\96\13\FC\F1~\1F\D5o\99\FF\07\D9m$Z{\CB#\94\CA\\\1F74'\D17e\B8B\86\92LH\A6\C3;\FF\1F\FE\EC\14+", align 16, !dbg !2851
@.str.2.246 = private unnamed_addr constant [47 x i8] c"Error while uncompressing table: zlib error %d\00", align 1, !dbg !2734
@.str.3.247 = private unnamed_addr constant [41 x i8] c"Expected uncompressed length %d, got %ld\00", align 1, !dbg !2739
@mime_entries = internal global [981 x %struct.lwan_key_value_t_] zeroinitializer, align 16, !dbg !2841
@.str.4.252 = private unnamed_addr constant [9 x i8] c"text/css\00", align 1, !dbg !2741
@.str.5.253 = private unnamed_addr constant [10 x i8] c"text/html\00", align 1, !dbg !2743
@.str.6.254 = private unnamed_addr constant [11 x i8] c"image/jpeg\00", align 1, !dbg !2745
@.str.7.255 = private unnamed_addr constant [23 x i8] c"application/javascript\00", align 1, !dbg !2747
@.str.8.256 = private unnamed_addr constant [10 x i8] c"image/png\00", align 1, !dbg !2749
@.str.9.257 = private unnamed_addr constant [11 x i8] c"text/plain\00", align 1, !dbg !2751
@.str.10.258 = private unnamed_addr constant [25 x i8] c"application/octet-stream\00", align 1, !dbg !2753
@.str.11.261 = private unnamed_addr constant [7 x i8] c"200 OK\00", align 1, !dbg !2755
@.str.12.262 = private unnamed_addr constant [20 x i8] c"206 Partial content\00", align 1, !dbg !2757
@.str.13.263 = private unnamed_addr constant [22 x i8] c"301 Moved permanently\00", align 1, !dbg !2759
@.str.14.264 = private unnamed_addr constant [17 x i8] c"304 Not modified\00", align 1, !dbg !2761
@.str.15.265 = private unnamed_addr constant [16 x i8] c"400 Bad request\00", align 1, !dbg !2763
@.str.16.266 = private unnamed_addr constant [19 x i8] c"401 Not authorized\00", align 1, !dbg !2765
@.str.17.267 = private unnamed_addr constant [14 x i8] c"403 Forbidden\00", align 1, !dbg !2767
@.str.18.268 = private unnamed_addr constant [14 x i8] c"404 Not found\00", align 1, !dbg !2769
@.str.19.269 = private unnamed_addr constant [16 x i8] c"405 Not allowed\00", align 1, !dbg !2771
@.str.20.270 = private unnamed_addr constant [20 x i8] c"408 Request timeout\00", align 1, !dbg !2773
@.str.21.271 = private unnamed_addr constant [22 x i8] c"413 Request too large\00", align 1, !dbg !2775
@.str.22.272 = private unnamed_addr constant [34 x i8] c"416 Requested range unsatisfiable\00", align 1, !dbg !2777
@.str.23.273 = private unnamed_addr constant [17 x i8] c"418 I'm a teapot\00", align 1, !dbg !2779
@.str.24.274 = private unnamed_addr constant [26 x i8] c"500 Internal server error\00", align 1, !dbg !2781
@.str.25.275 = private unnamed_addr constant [20 x i8] c"501 Not implemented\00", align 1, !dbg !2783
@.str.26.276 = private unnamed_addr constant [24 x i8] c"503 Service unavailable\00", align 1, !dbg !2785
@.str.27.277 = private unnamed_addr constant [12 x i8] c"999 Invalid\00", align 1, !dbg !2787
@.str.28.282 = private unnamed_addr constant [9 x i8] c"Success!\00", align 1, !dbg !2789
@.str.29.283 = private unnamed_addr constant [39 x i8] c"Delivering part of requested resource.\00", align 1, !dbg !2791
@.str.30.284 = private unnamed_addr constant [41 x i8] c"This content has moved to another place.\00", align 1, !dbg !2793
@.str.31.285 = private unnamed_addr constant [52 x i8] c"The content has not changed since previous request.\00", align 1, !dbg !2795
@.str.32.286 = private unnamed_addr constant [37 x i8] c"The client has issued a bad request.\00", align 1, !dbg !2797
@.str.33.287 = private unnamed_addr constant [53 x i8] c"Client has no authorization to access this resource.\00", align 1, !dbg !2799
@.str.34.288 = private unnamed_addr constant [41 x i8] c"Access to this resource has been denied.\00", align 1, !dbg !2801
@.str.35.289 = private unnamed_addr constant [58 x i8] c"The requested resource could not be found on this server.\00", align 1, !dbg !2803
@.str.36.290 = private unnamed_addr constant [52 x i8] c"The requested method is not allowed by this server.\00", align 1, !dbg !2806
@.str.37.291 = private unnamed_addr constant [60 x i8] c"Client did not produce a request within expected timeframe.\00", align 1, !dbg !2808
@.str.38.292 = private unnamed_addr constant [33 x i8] c"The request entity is too large.\00", align 1, !dbg !2813
@.str.39.293 = private unnamed_addr constant [73 x i8] c"The server can't supply the requested portion of the requested resource.\00", align 1, !dbg !2815
@.str.40.294 = private unnamed_addr constant [56 x i8] c"Client requested to brew coffee but device is a teapot.\00", align 1, !dbg !2820
@.str.41.295 = private unnamed_addr constant [74 x i8] c"The server encountered an internal error that couldn't be recovered from.\00", align 1, !dbg !2825
@.str.42.296 = private unnamed_addr constant [48 x i8] c"Server lacks the ability to fulfil the request.\00", align 1, !dbg !2830
@.str.43.297 = private unnamed_addr constant [57 x i8] c"The server is either overloaded or down for maintenance.\00", align 1, !dbg !2832
@.str.44.298 = private unnamed_addr constant [8 x i8] c"Invalid\00", align 1, !dbg !2834
@.str.303 = private unnamed_addr constant [3 x i8] c"%f\00", align 1, !dbg !2856
@.str.1.308 = private unnamed_addr constant [5 x i8] c"&lt;\00", align 1, !dbg !2859
@.str.2.309 = private unnamed_addr constant [5 x i8] c"&gt;\00", align 1, !dbg !2861
@.str.3.310 = private unnamed_addr constant [6 x i8] c"&amp;\00", align 1, !dbg !2863
@.str.4.311 = private unnamed_addr constant [7 x i8] c"&quot;\00", align 1, !dbg !2865
@.str.5.312 = private unnamed_addr constant [7 x i8] c"&#x27;\00", align 1, !dbg !2867
@.str.6.313 = private unnamed_addr constant [7 x i8] c"&#x2f;\00", align 1, !dbg !2869
@.str.7.320 = private unnamed_addr constant [38 x i8] c"/home/raj/lwan/common/lwan-template.c\00", align 1, !dbg !2871
@__FUNCTION__.lwan_tpl_compile_file = private unnamed_addr constant [22 x i8] c"lwan_tpl_compile_file\00", align 1, !dbg !2873
@.str.8.370 = private unnamed_addr constant [7 x i8] c"munmap\00", align 1, !dbg !2875
@.str.9.343 = private unnamed_addr constant [14 x i8] c"Out of memory\00", align 1, !dbg !2877
@.str.10.371 = private unnamed_addr constant [24 x i8] c"Expecting closing brace\00", align 1, !dbg !2879
@.str.11.358 = private unnamed_addr constant [23 x i8] c"Unknown variable: %.*s\00", align 1, !dbg !2881
@__FUNCTION__.parser_push_item = private unnamed_addr constant [17 x i8] c"parser_push_item\00", align 1, !dbg !2883
@.str.12.367 = private unnamed_addr constant [27 x i8] c"Could not push parser item\00", align 1, !dbg !2885
@.str.13.369 = private unnamed_addr constant [34 x i8] c"Could not compile template ``%s''\00", align 1, !dbg !2887
@.str.14.364 = private unnamed_addr constant [15 x i8] c"expecting `}}'\00", align 1, !dbg !2889
@.str.15.365 = private unnamed_addr constant [43 x i8] c"Couldn't find descriptor for variable `%s'\00", align 1, !dbg !2891
@.str.16.366 = private unnamed_addr constant [44 x i8] c"Could not push symbol table (out of memory)\00", align 1, !dbg !2893
@.str.17.362 = private unnamed_addr constant [44 x i8] c"No chunks were emitted but parsing end iter\00", align 1, !dbg !2895
@.str.18.363 = private unnamed_addr constant [25 x i8] c"Could not find {{#%.*s}}\00", align 1, !dbg !2897
@.str.19.360 = private unnamed_addr constant [21 x i8] c"unexpected {{/%.*s}}\00", align 1, !dbg !2899
@.str.20.361 = private unnamed_addr constant [37 x i8] c"expecting %s `%.*s' but found `%.*s'\00", align 1, !dbg !2901
@item_type_str = internal global [13 x ptr] [ptr @.str.21.345, ptr @.str.22.346, ptr @.str.23.347, ptr @.str.24.348, ptr @.str.25.349, ptr @.str.26.350, ptr @.str.27.351, ptr @.str.28.352, ptr @.str.29.353, ptr @.str.30.354, ptr @.str.31.355, ptr @.str.32.356, ptr @.str.33.357], align 16, !dbg !2903
@.str.21.345 = private unnamed_addr constant [6 x i8] c"ERROR\00", align 1, !dbg !3008
@.str.22.346 = private unnamed_addr constant [4 x i8] c"EOF\00", align 1, !dbg !3010
@.str.23.347 = private unnamed_addr constant [11 x i8] c"IDENTIFIER\00", align 1, !dbg !3012
@.str.24.348 = private unnamed_addr constant [10 x i8] c"LEFT_META\00", align 1, !dbg !3014
@.str.25.349 = private unnamed_addr constant [5 x i8] c"HASH\00", align 1, !dbg !3016
@.str.26.350 = private unnamed_addr constant [11 x i8] c"RIGHT_META\00", align 1, !dbg !3018
@.str.27.351 = private unnamed_addr constant [5 x i8] c"TEXT\00", align 1, !dbg !3020
@.str.28.352 = private unnamed_addr constant [6 x i8] c"SLASH\00", align 1, !dbg !3022
@.str.29.353 = private unnamed_addr constant [14 x i8] c"QUESTION_MARK\00", align 1, !dbg !3024
@.str.30.354 = private unnamed_addr constant [4 x i8] c"HAT\00", align 1, !dbg !3026
@.str.31.355 = private unnamed_addr constant [13 x i8] c"GREATER_THAN\00", align 1, !dbg !3028
@.str.32.356 = private unnamed_addr constant [22 x i8] c"ITEM_OPEN_CURLY_BRACE\00", align 1, !dbg !3030
@.str.33.357 = private unnamed_addr constant [23 x i8] c"ITEM_CLOSE_CURLY_BRACE\00", align 1, !dbg !3032
@.str.34.335 = private unnamed_addr constant [4 x i8] c"tab\00", align 1, !dbg !3034
@__PRETTY_FUNCTION__.symtab_pop = private unnamed_addr constant [33 x i8] c"void symtab_pop(struct parser *)\00", align 1, !dbg !3036
@.str.35.359 = private unnamed_addr constant [25 x i8] c"Could not find {{%.*s?}}\00", align 1, !dbg !3039
@__FUNCTION__.emit_chunk = private unnamed_addr constant [11 x i8] c"emit_chunk\00", align 1, !dbg !3041
@.str.36.330 = private unnamed_addr constant [30 x i8] c"Could not emit template chunk\00", align 1, !dbg !3044
@.str.37.344 = private unnamed_addr constant [29 x i8] c"unexpected lexeme: %s [%.*s]\00", align 1, !dbg !3046
@left_meta = internal constant [3 x i8] c"{{\00", align 1, !dbg !3050
@right_meta = internal constant [3 x i8] c"}}\00", align 1, !dbg !3063
@.str.38.337 = private unnamed_addr constant [33 x i8] c"unexpected action close sequence\00", align 1, !dbg !3048
@.str.39.342 = private unnamed_addr constant [42 x i8] c"unexpected EOF while scanning comment end\00", align 1, !dbg !3053
@.str.40.338 = private unnamed_addr constant [37 x i8] c"unexpected EOF while scanning action\00", align 1, !dbg !3055
@.str.41.339 = private unnamed_addr constant [35 x i8] c"actions cannot span multiple lines\00", align 1, !dbg !3057
@.str.42.340 = private unnamed_addr constant [25 x i8] c"unexpected character: %c\00", align 1, !dbg !3059
@.str.43.341 = private unnamed_addr constant [26 x i8] c"expecting `}', found `%c'\00", align 1, !dbg !3061
@__FUNCTION__.parser_shutdown = private unnamed_addr constant [16 x i8] c"parser_shutdown\00", align 1, !dbg !3065
@.str.44.321 = private unnamed_addr constant [19 x i8] c"Parser error: %.*s\00", align 1, !dbg !3067
@.str.45.325 = private unnamed_addr constant [55 x i8] c"Parser error: EOF while looking for matching {{/%.*s}}\00", align 1, !dbg !3069
@.str.46.327 = private unnamed_addr constant [59 x i8] c"Parser error: Symbol table not empty when finishing parser\00", align 1, !dbg !3074
@.str.47.328 = private unnamed_addr constant [33 x i8] c"Parser error: unmatched negation\00", align 1, !dbg !3079
@.str.48.329 = private unnamed_addr constant [30 x i8] c"Parser error: unmatched quote\00", align 1, !dbg !3081
@__FUNCTION__.post_process_template = private unnamed_addr constant [22 x i8] c"post_process_template\00", align 1, !dbg !3083
@.str.49.331 = private unnamed_addr constant [7 x i8] c"malloc\00", align 1, !dbg !3085
@.str.50.332 = private unnamed_addr constant [38 x i8] c"Variable must be string to be escaped\00", align 1, !dbg !3087
@.str.51.333 = private unnamed_addr constant [28 x i8] c"Invalid variable descriptor\00", align 1, !dbg !3089
@.str.52.334 = private unnamed_addr constant [67 x i8] c"Template parsing done, reallocating array from %zu to %zu elements\00", align 1, !dbg !3091
@apply_until.dispatch_table = internal constant [11 x ptr] [ptr blockaddress(@apply_until, %39), ptr blockaddress(@apply_until, %65), ptr blockaddress(@apply_until, %85), ptr blockaddress(@apply_until, %110), ptr blockaddress(@apply_until, %130), ptr blockaddress(@apply_until, %259), ptr blockaddress(@apply_until, %358), ptr blockaddress(@apply_until, %150), ptr blockaddress(@apply_until, %208), ptr blockaddress(@apply_until, %231), ptr blockaddress(@apply_until, %429)], align 16, !dbg !3093
@__FUNCTION__.apply_until = private unnamed_addr constant [12 x i8] c"apply_until\00", align 1, !dbg !3106
@.str.53.376 = private unnamed_addr constant [46 x i8] c"Coroutine is not NULL when starting iteration\00", align 1, !dbg !3108
@.str.54.377 = private unnamed_addr constant [43 x i8] c"Coroutine is NULL when finishing iteration\00", align 1, !dbg !3110
@.str.380 = private unnamed_addr constant [36 x i8] c"/home/raj/lwan/common/lwan-thread.c\00", align 1, !dbg !3113
@__FUNCTION__.lwan_format_rfc_time = private unnamed_addr constant [21 x i8] c"lwan_format_rfc_time\00", align 1, !dbg !3116
@.str.1.381 = private unnamed_addr constant [9 x i8] c"gmtime_r\00", align 1, !dbg !3118
@.str.2.382 = private unnamed_addr constant [26 x i8] c"%a, %d %b %Y %H:%M:%S GMT\00", align 1, !dbg !3120
@.str.3.383 = private unnamed_addr constant [9 x i8] c"strftime\00", align 1, !dbg !3122
@__FUNCTION__.lwan_thread_add_client = private unnamed_addr constant [23 x i8] c"lwan_thread_add_client\00", align 1, !dbg !3124
@.str.4.386 = private unnamed_addr constant [6 x i8] c"write\00", align 1, !dbg !3126
@__FUNCTION__.lwan_thread_init = private unnamed_addr constant [17 x i8] c"lwan_thread_init\00", align 1, !dbg !3128
@.str.5.389 = private unnamed_addr constant [21 x i8] c"Initializing threads\00", align 1, !dbg !3130
@.str.6.390 = private unnamed_addr constant [38 x i8] c"Could not allocate memory for threads\00", align 1, !dbg !3132
@__FUNCTION__.lwan_thread_shutdown = private unnamed_addr constant [21 x i8] c"lwan_thread_shutdown\00", align 1, !dbg !3134
@.str.7.406 = private unnamed_addr constant [22 x i8] c"Shutting down threads\00", align 1, !dbg !3136
@__FUNCTION__.create_thread = private unnamed_addr constant [14 x i8] c"create_thread\00", align 1, !dbg !3138
@.str.8.391 = private unnamed_addr constant [13 x i8] c"epoll_create\00", align 1, !dbg !3140
@.str.9.392 = private unnamed_addr constant [18 x i8] c"pthread_attr_init\00", align 1, !dbg !3142
@.str.10.393 = private unnamed_addr constant [22 x i8] c"pthread_attr_setscope\00", align 1, !dbg !3144
@.str.11.394 = private unnamed_addr constant [28 x i8] c"pthread_attr_setdetachstate\00", align 1, !dbg !3146
@.str.12.395 = private unnamed_addr constant [5 x i8] c"pipe\00", align 1, !dbg !3148
@__const.create_thread.event = private unnamed_addr constant %struct.epoll_event <{ i32 1, %union.__SOCKADDR_ARG zeroinitializer }>, align 1
@.str.13.396 = private unnamed_addr constant [10 x i8] c"epoll_ctl\00", align 1, !dbg !3150
@.str.14.397 = private unnamed_addr constant [15 x i8] c"pthread_create\00", align 1, !dbg !3152
@.str.15.398 = private unnamed_addr constant [21 x i8] c"pthread_attr_destroy\00", align 1, !dbg !3154
@__FUNCTION__.thread_io_loop = private unnamed_addr constant [15 x i8] c"thread_io_loop\00", align 1, !dbg !3156
@.str.16.399 = private unnamed_addr constant [31 x i8] c"Starting IO loop on thread #%d\00", align 1, !dbg !3158
@.str.17.400 = private unnamed_addr constant [37 x i8] c"Could not allocate memory for events\00", align 1, !dbg !3160
@__FUNCTION__.grab_and_watch_client = private unnamed_addr constant [22 x i8] c"grab_and_watch_client\00", align 1, !dbg !3162
@.str.18.403 = private unnamed_addr constant [5 x i8] c"read\00", align 1, !dbg !3164
@events_by_write_flag = internal constant [2 x i32] [i32 8204, i32 -2147475447], align 4, !dbg !3166
@.str.19.402 = private unnamed_addr constant [28 x i8] c"conn->flags & CONN_IS_ALIVE\00", align 1, !dbg !3204
@__PRETTY_FUNCTION__.process_request_coro = private unnamed_addr constant [35 x i8] c"int process_request_coro(coro_t *)\00", align 1, !dbg !3206
@.str.20.401 = private unnamed_addr constant [11 x i8] c"conn->coro\00", align 1, !dbg !3209
@__PRETTY_FUNCTION__.resume_coro_if_needed = private unnamed_addr constant [77 x i8] c"void resume_coro_if_needed(struct death_queue_t *, lwan_connection_t *, int)\00", align 1, !dbg !3211
@__FUNCTION__.resume_coro_if_needed = private unnamed_addr constant [22 x i8] c"resume_coro_if_needed\00", align 1, !dbg !3216
@.str.411 = private unnamed_addr constant [34 x i8] c"/home/raj/lwan/common/lwan-trie.c\00", align 1, !dbg !3220
@__FUNCTION__.lwan_trie_add = private unnamed_addr constant [14 x i8] c"lwan_trie_add\00", align 1, !dbg !3223
@.str.1.412 = private unnamed_addr constant [7 x i8] c"malloc\00", align 1, !dbg !3225
@.str.2.413 = private unnamed_addr constant [7 x i8] c"calloc\00", align 1, !dbg !3227
@seed_value = internal global i32 -559038737, align 4, !dbg !3229
@.str.426 = private unnamed_addr constant [38 x i8] c"resolved == NULL || resolved == rpath\00", align 1, !dbg !3243
@.str.1.427 = private unnamed_addr constant [35 x i8] c"/home/raj/lwan/common/realpathat.c\00", align 1, !dbg !3246
@__PRETTY_FUNCTION__.realpathat2 = private unnamed_addr constant [68 x i8] c"char *realpathat2(int, char *, const char *, char *, struct stat *)\00", align 1, !dbg !3248
@.str.430 = private unnamed_addr constant [11 x i8] c"LISTEN_PID\00", align 1, !dbg !3253
@.str.1.431 = private unnamed_addr constant [11 x i8] c"LISTEN_FDS\00", align 1, !dbg !3256
@.str.2.434 = private unnamed_addr constant [14 x i8] c"NOTIFY_SOCKET\00", align 1, !dbg !3258
@.str.3.435 = private unnamed_addr constant [21 x i8] c"/run/systemd/system/\00", align 1, !dbg !3260
@.str.4.436 = private unnamed_addr constant [13 x i8] c"WATCHDOG_PID\00", align 1, !dbg !3262
@.str.5.437 = private unnamed_addr constant [14 x i8] c"WATCHDOG_USEC\00", align 1, !dbg !3264

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @gif_beacon(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !2 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !3364, metadata !DIExpression()), !dbg !3365
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !3366, metadata !DIExpression()), !dbg !3367
  store ptr %2, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !3368, metadata !DIExpression()), !dbg !3369
  %7 = load ptr, ptr %5, align 8, !dbg !3370
  %8 = getelementptr inbounds %struct.lwan_response_t_, ptr %7, i32 0, i32 1, !dbg !3371
  store ptr @.str, ptr %8, align 8, !dbg !3372
  %9 = load ptr, ptr %5, align 8, !dbg !3373
  %10 = getelementptr inbounds %struct.lwan_response_t_, ptr %9, i32 0, i32 0, !dbg !3374
  %11 = load ptr, ptr %10, align 8, !dbg !3374
  %12 = call zeroext i1 @strbuf_set_static(ptr noundef %11, ptr noundef @gif_beacon.gif_beacon_data, i64 noundef 41), !dbg !3375
  ret i32 200, !dbg !3376
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @test_chunked_encoding(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !3377 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !3378, metadata !DIExpression()), !dbg !3379
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !3380, metadata !DIExpression()), !dbg !3381
  store ptr %2, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !3382, metadata !DIExpression()), !dbg !3383
  call void @llvm.dbg.declare(metadata ptr %7, metadata !3384, metadata !DIExpression()), !dbg !3385
  %8 = load ptr, ptr %5, align 8, !dbg !3386
  %9 = getelementptr inbounds %struct.lwan_response_t_, ptr %8, i32 0, i32 1, !dbg !3387
  store ptr @.str.1, ptr %9, align 8, !dbg !3388
  %10 = load ptr, ptr %5, align 8, !dbg !3389
  %11 = getelementptr inbounds %struct.lwan_response_t_, ptr %10, i32 0, i32 0, !dbg !3390
  %12 = load ptr, ptr %11, align 8, !dbg !3390
  %13 = call zeroext i1 (ptr, ptr, ...) @strbuf_printf(ptr noundef %12, ptr noundef @.str.2), !dbg !3391
  %14 = load ptr, ptr %4, align 8, !dbg !3392
  call void @lwan_response_send_chunk(ptr noundef %14), !dbg !3393
  store i32 0, ptr %7, align 4, !dbg !3394
  br label %15, !dbg !3396

15:                                               ; preds = %25, %3
  %16 = load i32, ptr %7, align 4, !dbg !3397
  %17 = icmp sle i32 %16, 10, !dbg !3399
  br i1 %17, label %18, label %28, !dbg !3400

18:                                               ; preds = %15
  %19 = load ptr, ptr %5, align 8, !dbg !3401
  %20 = getelementptr inbounds %struct.lwan_response_t_, ptr %19, i32 0, i32 0, !dbg !3403
  %21 = load ptr, ptr %20, align 8, !dbg !3403
  %22 = load i32, ptr %7, align 4, !dbg !3404
  %23 = call zeroext i1 (ptr, ptr, ...) @strbuf_printf(ptr noundef %21, ptr noundef @.str.3, i32 noundef %22), !dbg !3405
  %24 = load ptr, ptr %4, align 8, !dbg !3406
  call void @lwan_response_send_chunk(ptr noundef %24), !dbg !3407
  br label %25, !dbg !3408

25:                                               ; preds = %18
  %26 = load i32, ptr %7, align 4, !dbg !3409
  %27 = add nsw i32 %26, 1, !dbg !3409
  store i32 %27, ptr %7, align 4, !dbg !3409
  br label %15, !dbg !3410, !llvm.loop !3411

28:                                               ; preds = %15
  %29 = load ptr, ptr %5, align 8, !dbg !3414
  %30 = getelementptr inbounds %struct.lwan_response_t_, ptr %29, i32 0, i32 0, !dbg !3415
  %31 = load ptr, ptr %30, align 8, !dbg !3415
  %32 = call zeroext i1 (ptr, ptr, ...) @strbuf_printf(ptr noundef %31, ptr noundef @.str.4), !dbg !3416
  %33 = load ptr, ptr %4, align 8, !dbg !3417
  call void @lwan_response_send_chunk(ptr noundef %33), !dbg !3418
  ret i32 200, !dbg !3419
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @test_server_sent_event(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !3420 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !3421, metadata !DIExpression()), !dbg !3422
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !3423, metadata !DIExpression()), !dbg !3424
  store ptr %2, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !3425, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.declare(metadata ptr %7, metadata !3427, metadata !DIExpression()), !dbg !3428
  store i32 0, ptr %7, align 4, !dbg !3429
  br label %8, !dbg !3431

8:                                                ; preds = %18, %3
  %9 = load i32, ptr %7, align 4, !dbg !3432
  %10 = icmp sle i32 %9, 10, !dbg !3434
  br i1 %10, label %11, label %21, !dbg !3435

11:                                               ; preds = %8
  %12 = load ptr, ptr %5, align 8, !dbg !3436
  %13 = getelementptr inbounds %struct.lwan_response_t_, ptr %12, i32 0, i32 0, !dbg !3438
  %14 = load ptr, ptr %13, align 8, !dbg !3438
  %15 = load i32, ptr %7, align 4, !dbg !3439
  %16 = call zeroext i1 (ptr, ptr, ...) @strbuf_printf(ptr noundef %14, ptr noundef @.str.5, i32 noundef %15), !dbg !3440
  %17 = load ptr, ptr %4, align 8, !dbg !3441
  call void @lwan_response_send_event(ptr noundef %17, ptr noundef @.str.6), !dbg !3442
  br label %18, !dbg !3443

18:                                               ; preds = %11
  %19 = load i32, ptr %7, align 4, !dbg !3444
  %20 = add nsw i32 %19, 1, !dbg !3444
  store i32 %20, ptr %7, align 4, !dbg !3444
  br label %8, !dbg !3445, !llvm.loop !3446

21:                                               ; preds = %8
  ret i32 200, !dbg !3448
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @hello_world(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !285 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !3449, metadata !DIExpression()), !dbg !3450
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !3451, metadata !DIExpression()), !dbg !3452
  store ptr %2, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !3453, metadata !DIExpression()), !dbg !3454
  %10 = load ptr, ptr %5, align 8, !dbg !3455
  %11 = getelementptr inbounds %struct.lwan_response_t_, ptr %10, i32 0, i32 3, !dbg !3456
  store ptr @hello_world.headers, ptr %11, align 8, !dbg !3457
  %12 = load ptr, ptr %5, align 8, !dbg !3458
  %13 = getelementptr inbounds %struct.lwan_response_t_, ptr %12, i32 0, i32 1, !dbg !3459
  store ptr @.str.1, ptr %13, align 8, !dbg !3460
  call void @llvm.dbg.declare(metadata ptr %7, metadata !3461, metadata !DIExpression()), !dbg !3462
  %14 = load ptr, ptr %4, align 8, !dbg !3463
  %15 = call ptr @lwan_request_get_query_param(ptr noundef %14, ptr noundef @.str.9), !dbg !3464
  store ptr %15, ptr %7, align 8, !dbg !3462
  %16 = load ptr, ptr %7, align 8, !dbg !3465
  %17 = icmp ne ptr %16, null, !dbg !3465
  br i1 %17, label %18, label %24, !dbg !3467

18:                                               ; preds = %3
  %19 = load ptr, ptr %5, align 8, !dbg !3468
  %20 = getelementptr inbounds %struct.lwan_response_t_, ptr %19, i32 0, i32 0, !dbg !3469
  %21 = load ptr, ptr %20, align 8, !dbg !3469
  %22 = load ptr, ptr %7, align 8, !dbg !3470
  %23 = call zeroext i1 (ptr, ptr, ...) @strbuf_printf(ptr noundef %21, ptr noundef @.str.10, ptr noundef %22), !dbg !3471
  br label %29, !dbg !3471

24:                                               ; preds = %3
  %25 = load ptr, ptr %5, align 8, !dbg !3472
  %26 = getelementptr inbounds %struct.lwan_response_t_, ptr %25, i32 0, i32 0, !dbg !3473
  %27 = load ptr, ptr %26, align 8, !dbg !3473
  %28 = call zeroext i1 @strbuf_set_static(ptr noundef %27, ptr noundef @.str.11, i64 noundef 13), !dbg !3474
  br label %29

29:                                               ; preds = %24, %18
  call void @llvm.dbg.declare(metadata ptr %8, metadata !3475, metadata !DIExpression()), !dbg !3476
  %30 = load ptr, ptr %4, align 8, !dbg !3477
  %31 = call ptr @lwan_request_get_query_param(ptr noundef %30, ptr noundef @.str.12), !dbg !3478
  store ptr %31, ptr %8, align 8, !dbg !3476
  %32 = load ptr, ptr %8, align 8, !dbg !3479
  %33 = icmp ne ptr %32, null, !dbg !3479
  br i1 %33, label %35, label %34, !dbg !3481

34:                                               ; preds = %29
  br label %107, !dbg !3482

35:                                               ; preds = %29
  %36 = load ptr, ptr %5, align 8, !dbg !3483
  %37 = getelementptr inbounds %struct.lwan_response_t_, ptr %36, i32 0, i32 0, !dbg !3484
  %38 = load ptr, ptr %37, align 8, !dbg !3484
  %39 = call zeroext i1 @strbuf_append_str(ptr noundef %38, ptr noundef @.str.13, i64 noundef 0), !dbg !3485
  %40 = load ptr, ptr %5, align 8, !dbg !3486
  %41 = getelementptr inbounds %struct.lwan_response_t_, ptr %40, i32 0, i32 0, !dbg !3487
  %42 = load ptr, ptr %41, align 8, !dbg !3487
  %43 = call zeroext i1 @strbuf_append_str(ptr noundef %42, ptr noundef @.str.14, i64 noundef 0), !dbg !3488
  call void @llvm.dbg.declare(metadata ptr %9, metadata !3489, metadata !DIExpression()), !dbg !3490
  %44 = load ptr, ptr %4, align 8, !dbg !3491
  %45 = getelementptr inbounds %struct.lwan_request_t_, ptr %44, i32 0, i32 5, !dbg !3492
  %46 = getelementptr inbounds %struct.lwan_value_t_, ptr %45, i32 0, i32 0, !dbg !3493
  %47 = load ptr, ptr %46, align 8, !dbg !3493
  store ptr %47, ptr %9, align 8, !dbg !3490
  br label %48, !dbg !3494

48:                                               ; preds = %64, %35
  %49 = load ptr, ptr %9, align 8, !dbg !3495
  %50 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %49, i32 0, i32 0, !dbg !3498
  %51 = load ptr, ptr %50, align 8, !dbg !3498
  %52 = icmp ne ptr %51, null, !dbg !3499
  br i1 %52, label %53, label %67, !dbg !3499

53:                                               ; preds = %48
  %54 = load ptr, ptr %5, align 8, !dbg !3500
  %55 = getelementptr inbounds %struct.lwan_response_t_, ptr %54, i32 0, i32 0, !dbg !3501
  %56 = load ptr, ptr %55, align 8, !dbg !3501
  %57 = load ptr, ptr %9, align 8, !dbg !3502
  %58 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %57, i32 0, i32 0, !dbg !3503
  %59 = load ptr, ptr %58, align 8, !dbg !3503
  %60 = load ptr, ptr %9, align 8, !dbg !3504
  %61 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %60, i32 0, i32 1, !dbg !3505
  %62 = load ptr, ptr %61, align 8, !dbg !3505
  %63 = call zeroext i1 (ptr, ptr, ...) @strbuf_append_printf(ptr noundef %56, ptr noundef @.str.15, ptr noundef %59, ptr noundef %62), !dbg !3506
  br label %64, !dbg !3506

64:                                               ; preds = %53
  %65 = load ptr, ptr %9, align 8, !dbg !3507
  %66 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %65, i32 1, !dbg !3507
  store ptr %66, ptr %9, align 8, !dbg !3507
  br label %48, !dbg !3508, !llvm.loop !3509

67:                                               ; preds = %48
  %68 = load ptr, ptr %4, align 8, !dbg !3511
  %69 = getelementptr inbounds %struct.lwan_request_t_, ptr %68, i32 0, i32 0, !dbg !3513
  %70 = load i32, ptr %69, align 8, !dbg !3513
  %71 = and i32 %70, 4, !dbg !3514
  %72 = icmp ne i32 %71, 0, !dbg !3514
  br i1 %72, label %74, label %73, !dbg !3515

73:                                               ; preds = %67
  br label %107, !dbg !3516

74:                                               ; preds = %67
  %75 = load ptr, ptr %5, align 8, !dbg !3517
  %76 = getelementptr inbounds %struct.lwan_response_t_, ptr %75, i32 0, i32 0, !dbg !3518
  %77 = load ptr, ptr %76, align 8, !dbg !3518
  %78 = call zeroext i1 @strbuf_append_str(ptr noundef %77, ptr noundef @.str.16, i64 noundef 0), !dbg !3519
  %79 = load ptr, ptr %5, align 8, !dbg !3520
  %80 = getelementptr inbounds %struct.lwan_response_t_, ptr %79, i32 0, i32 0, !dbg !3521
  %81 = load ptr, ptr %80, align 8, !dbg !3521
  %82 = call zeroext i1 @strbuf_append_str(ptr noundef %81, ptr noundef @.str.17, i64 noundef 0), !dbg !3522
  %83 = load ptr, ptr %4, align 8, !dbg !3523
  %84 = getelementptr inbounds %struct.lwan_request_t_, ptr %83, i32 0, i32 6, !dbg !3525
  %85 = getelementptr inbounds %struct.lwan_value_t_, ptr %84, i32 0, i32 0, !dbg !3526
  %86 = load ptr, ptr %85, align 8, !dbg !3526
  store ptr %86, ptr %9, align 8, !dbg !3527
  br label %87, !dbg !3528

87:                                               ; preds = %103, %74
  %88 = load ptr, ptr %9, align 8, !dbg !3529
  %89 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %88, i32 0, i32 0, !dbg !3531
  %90 = load ptr, ptr %89, align 8, !dbg !3531
  %91 = icmp ne ptr %90, null, !dbg !3532
  br i1 %91, label %92, label %106, !dbg !3532

92:                                               ; preds = %87
  %93 = load ptr, ptr %5, align 8, !dbg !3533
  %94 = getelementptr inbounds %struct.lwan_response_t_, ptr %93, i32 0, i32 0, !dbg !3534
  %95 = load ptr, ptr %94, align 8, !dbg !3534
  %96 = load ptr, ptr %9, align 8, !dbg !3535
  %97 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %96, i32 0, i32 0, !dbg !3536
  %98 = load ptr, ptr %97, align 8, !dbg !3536
  %99 = load ptr, ptr %9, align 8, !dbg !3537
  %100 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %99, i32 0, i32 1, !dbg !3538
  %101 = load ptr, ptr %100, align 8, !dbg !3538
  %102 = call zeroext i1 (ptr, ptr, ...) @strbuf_append_printf(ptr noundef %95, ptr noundef @.str.15, ptr noundef %98, ptr noundef %101), !dbg !3539
  br label %103, !dbg !3539

103:                                              ; preds = %92
  %104 = load ptr, ptr %9, align 8, !dbg !3540
  %105 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %104, i32 1, !dbg !3540
  store ptr %105, ptr %9, align 8, !dbg !3540
  br label %87, !dbg !3541, !llvm.loop !3542

106:                                              ; preds = %87
  br label %107, !dbg !3543

107:                                              ; preds = %106, %73, %34
  call void @llvm.dbg.label(metadata !3544), !dbg !3545
  ret i32 200, !dbg !3546
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 noundef %0, ptr noundef %1) #0 !dbg !3547 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca %struct.lwan_t_, align 8
  %7 = alloca %struct.lwan_config_t_, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca [2 x %struct.lwan_url_map_t_], align 16
  %11 = alloca [1 x %struct.lwan_serve_files_settings_t], align 8
  store i32 0, ptr %3, align 4
  store i32 %0, ptr %4, align 4
  call void @llvm.dbg.declare(metadata ptr %4, metadata !3550, metadata !DIExpression()), !dbg !3551
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !3552, metadata !DIExpression()), !dbg !3553
  call void @llvm.dbg.declare(metadata ptr %6, metadata !3554, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.declare(metadata ptr %7, metadata !3556, metadata !DIExpression()), !dbg !3557
  call void @llvm.dbg.declare(metadata ptr %8, metadata !3558, metadata !DIExpression()), !dbg !3559
  %12 = call ptr @get_current_dir_name() #17, !dbg !3560
  store ptr %12, ptr %8, align 8, !dbg !3559
  call void @llvm.dbg.declare(metadata ptr %9, metadata !3561, metadata !DIExpression()), !dbg !3562
  store i32 0, ptr %9, align 4, !dbg !3562
  %13 = call ptr @lwan_get_default_config(), !dbg !3563
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %7, ptr align 8 %13, i64 24, i1 false), !dbg !3564
  %14 = call noalias ptr @strdup(ptr noundef @.str.18) #17, !dbg !3565
  %15 = getelementptr inbounds %struct.lwan_config_t_, ptr %7, i32 0, i32 0, !dbg !3566
  store ptr %14, ptr %15, align 8, !dbg !3567
  %16 = load i32, ptr %4, align 4, !dbg !3568
  %17 = load ptr, ptr %5, align 8, !dbg !3569
  %18 = call i32 @parse_args(i32 noundef %16, ptr noundef %17, ptr noundef %7, ptr noundef %8), !dbg !3570
  switch i32 %18, label %36 [
    i32 2, label %19
    i32 1, label %34
    i32 0, label %35
  ], !dbg !3571

19:                                               ; preds = %2
  %20 = load ptr, ptr %8, align 8, !dbg !3572
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_info_debug(ptr noundef @.str.19, i32 noundef 203, ptr noundef @__FUNCTION__.main, ptr noundef @.str.20, ptr noundef %20), !dbg !3572
  call void @lwan_init_with_config(ptr noundef %6, ptr noundef %7), !dbg !3574
  call void @llvm.dbg.declare(metadata ptr %10, metadata !3575, metadata !DIExpression()), !dbg !3605
  call void @llvm.memset.p0.i64(ptr align 16 %10, i8 0, i64 144, i1 false), !dbg !3605
  %21 = getelementptr inbounds [2 x %struct.lwan_url_map_t_], ptr %10, i64 0, i64 0, !dbg !3606
  %22 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %21, i32 0, i32 2, !dbg !3607
  store ptr @.str.21, ptr %22, align 8, !dbg !3607
  %23 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %21, i32 0, i32 5, !dbg !3607
  %24 = call ptr @lwan_module_serve_files(), !dbg !3608
  store ptr %24, ptr %23, align 8, !dbg !3607
  %25 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %21, i32 0, i32 6, !dbg !3607
  %26 = getelementptr inbounds [1 x %struct.lwan_serve_files_settings_t], ptr %11, i64 0, i64 0, !dbg !3608
  %27 = getelementptr inbounds %struct.lwan_serve_files_settings_t, ptr %26, i32 0, i32 0, !dbg !3608
  %28 = load ptr, ptr %8, align 8, !dbg !3608
  store ptr %28, ptr %27, align 8, !dbg !3608
  %29 = getelementptr inbounds %struct.lwan_serve_files_settings_t, ptr %26, i32 0, i32 1, !dbg !3608
  store ptr null, ptr %29, align 8, !dbg !3608
  %30 = getelementptr inbounds %struct.lwan_serve_files_settings_t, ptr %26, i32 0, i32 2, !dbg !3608
  store i8 1, ptr %30, align 8, !dbg !3608
  %31 = getelementptr inbounds [1 x %struct.lwan_serve_files_settings_t], ptr %11, i64 0, i64 0, !dbg !3608
  store ptr %31, ptr %25, align 8, !dbg !3607
  %32 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %21, i64 1, !dbg !3606
  %33 = getelementptr inbounds [2 x %struct.lwan_url_map_t_], ptr %10, i64 0, i64 0, !dbg !3609
  call void @lwan_set_url_map(ptr noundef %6, ptr noundef %33), !dbg !3610
  br label %36, !dbg !3611

34:                                               ; preds = %2
  call void @lwan_init(ptr noundef %6), !dbg !3612
  br label %36, !dbg !3613

35:                                               ; preds = %2
  store i32 1, ptr %9, align 4, !dbg !3614
  br label %37, !dbg !3615

36:                                               ; preds = %34, %19, %2
  call void @lwan_main_loop(ptr noundef %6), !dbg !3616
  call void @lwan_shutdown(ptr noundef %6), !dbg !3617
  br label %37, !dbg !3617

37:                                               ; preds = %36, %35
  call void @llvm.dbg.label(metadata !3618), !dbg !3619
  %38 = load ptr, ptr %8, align 8, !dbg !3620
  call void @free(ptr noundef %38) #17, !dbg !3621
  %39 = getelementptr inbounds %struct.lwan_config_t_, ptr %7, i32 0, i32 0, !dbg !3622
  %40 = load ptr, ptr %39, align 8, !dbg !3622
  call void @free(ptr noundef %40) #17, !dbg !3623
  %41 = load i32, ptr %9, align 4, !dbg !3624
  ret i32 %41, !dbg !3625
}

; Function Attrs: nounwind
declare ptr @get_current_dir_name() #2

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind
declare noalias ptr @strdup(ptr noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @parse_args(i32 noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 !dbg !350 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i32 %0, ptr %6, align 4
  call void @llvm.dbg.declare(metadata ptr %6, metadata !3626, metadata !DIExpression()), !dbg !3627
  store ptr %1, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !3628, metadata !DIExpression()), !dbg !3629
  store ptr %2, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !3630, metadata !DIExpression()), !dbg !3631
  store ptr %3, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !3632, metadata !DIExpression()), !dbg !3633
  call void @llvm.dbg.declare(metadata ptr %10, metadata !3634, metadata !DIExpression()), !dbg !3635
  call void @llvm.dbg.declare(metadata ptr %11, metadata !3636, metadata !DIExpression()), !dbg !3637
  store i32 0, ptr %11, align 4, !dbg !3637
  call void @llvm.dbg.declare(metadata ptr %12, metadata !3638, metadata !DIExpression()), !dbg !3639
  store i32 1, ptr %12, align 4, !dbg !3639
  br label %13, !dbg !3640

13:                                               ; preds = %66, %4
  %14 = load i32, ptr %6, align 4, !dbg !3641
  %15 = load ptr, ptr %7, align 8, !dbg !3642
  %16 = call i32 @getopt_long(i32 noundef %14, ptr noundef %15, ptr noundef @.str.25, ptr noundef @parse_args.opts, ptr noundef %11) #17, !dbg !3643
  store i32 %16, ptr %10, align 4, !dbg !3644
  %17 = icmp ne i32 %16, -1, !dbg !3645
  br i1 %17, label %18, label %67, !dbg !3640

18:                                               ; preds = %13
  %19 = load i32, ptr %10, align 4, !dbg !3646
  switch i32 %19, label %34 [
    i32 108, label %20
    i32 114, label %28
    i32 104, label %39
  ], !dbg !3648

20:                                               ; preds = %18
  %21 = load ptr, ptr %8, align 8, !dbg !3649
  %22 = getelementptr inbounds %struct.lwan_config_t_, ptr %21, i32 0, i32 0, !dbg !3651
  %23 = load ptr, ptr %22, align 8, !dbg !3651
  call void @free(ptr noundef %23) #17, !dbg !3652
  %24 = load ptr, ptr @optarg, align 8, !dbg !3653
  %25 = call noalias ptr @strdup(ptr noundef %24) #17, !dbg !3654
  %26 = load ptr, ptr %8, align 8, !dbg !3655
  %27 = getelementptr inbounds %struct.lwan_config_t_, ptr %26, i32 0, i32 0, !dbg !3656
  store ptr %25, ptr %27, align 8, !dbg !3657
  store i32 2, ptr %12, align 4, !dbg !3658
  br label %66, !dbg !3659

28:                                               ; preds = %18
  %29 = load ptr, ptr %9, align 8, !dbg !3660
  %30 = load ptr, ptr %29, align 8, !dbg !3661
  call void @free(ptr noundef %30) #17, !dbg !3662
  %31 = load ptr, ptr @optarg, align 8, !dbg !3663
  %32 = call noalias ptr @strdup(ptr noundef %31) #17, !dbg !3664
  %33 = load ptr, ptr %9, align 8, !dbg !3665
  store ptr %32, ptr %33, align 8, !dbg !3666
  store i32 2, ptr %12, align 4, !dbg !3667
  br label %66, !dbg !3668

34:                                               ; preds = %18
  %35 = load ptr, ptr %7, align 8, !dbg !3669
  %36 = getelementptr inbounds ptr, ptr %35, i64 0, !dbg !3669
  %37 = load ptr, ptr %36, align 8, !dbg !3669
  %38 = call i32 (ptr, ...) @printf(ptr noundef @.str.26, ptr noundef %37), !dbg !3670
  store i32 0, ptr %5, align 4, !dbg !3671
  br label %69, !dbg !3671

39:                                               ; preds = %18
  %40 = load ptr, ptr %7, align 8, !dbg !3672
  %41 = getelementptr inbounds ptr, ptr %40, i64 0, !dbg !3672
  %42 = load ptr, ptr %41, align 8, !dbg !3672
  %43 = call i32 (ptr, ...) @printf(ptr noundef @.str.27, ptr noundef %42), !dbg !3673
  %44 = call i32 (ptr, ...) @printf(ptr noundef @.str.28), !dbg !3674
  %45 = call i32 (ptr, ...) @printf(ptr noundef @.str.29), !dbg !3675
  %46 = call i32 (ptr, ...) @printf(ptr noundef @.str.30), !dbg !3676
  %47 = call i32 (ptr, ...) @printf(ptr noundef @.str.31), !dbg !3677
  %48 = call i32 (ptr, ...) @printf(ptr noundef @.str.32), !dbg !3678
  %49 = load ptr, ptr %8, align 8, !dbg !3679
  %50 = getelementptr inbounds %struct.lwan_config_t_, ptr %49, i32 0, i32 0, !dbg !3680
  %51 = load ptr, ptr %50, align 8, !dbg !3680
  %52 = call i32 (ptr, ...) @printf(ptr noundef @.str.33, ptr noundef %51), !dbg !3681
  %53 = call i32 (ptr, ...) @printf(ptr noundef @.str.34), !dbg !3682
  %54 = call i32 (ptr, ...) @printf(ptr noundef @.str.35), !dbg !3683
  %55 = call i32 (ptr, ...) @printf(ptr noundef @.str.36), !dbg !3684
  %56 = load ptr, ptr %7, align 8, !dbg !3685
  %57 = getelementptr inbounds ptr, ptr %56, i64 0, !dbg !3685
  %58 = load ptr, ptr %57, align 8, !dbg !3685
  %59 = call i32 (ptr, ...) @printf(ptr noundef @.str.37, ptr noundef %58), !dbg !3686
  %60 = load ptr, ptr %7, align 8, !dbg !3687
  %61 = getelementptr inbounds ptr, ptr %60, i64 0, !dbg !3687
  %62 = load ptr, ptr %61, align 8, !dbg !3687
  %63 = call i32 (ptr, ...) @printf(ptr noundef @.str.38, ptr noundef %62), !dbg !3688
  %64 = call i32 (ptr, ...) @printf(ptr noundef @.str.35), !dbg !3689
  %65 = call i32 (ptr, ...) @printf(ptr noundef @.str.39), !dbg !3690
  store i32 0, ptr %5, align 4, !dbg !3691
  br label %69, !dbg !3691

66:                                               ; preds = %28, %20
  br label %13, !dbg !3640, !llvm.loop !3692

67:                                               ; preds = %13
  %68 = load i32, ptr %12, align 4, !dbg !3694
  store i32 %68, ptr %5, align 4, !dbg !3695
  br label %69, !dbg !3695

69:                                               ; preds = %67, %39, %34
  %70 = load i32, ptr %5, align 4, !dbg !3696
  ret i32 %70, !dbg !3696
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind
declare void @free(ptr noundef) #2

; Function Attrs: nounwind
declare i32 @getopt_long(i32 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) #2

declare i32 @printf(ptr noundef, ...) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal void @initialize_odd_constant() #0 !dbg !3697 {
  %1 = alloca i64, align 8
  %2 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata ptr %1, metadata !3698, metadata !DIExpression()), !dbg !3699
  %3 = call i64 (i64, ...) @syscall(i64 noundef 318, ptr noundef @odd_constant, i64 noundef 4, i32 noundef 0) #17, !dbg !3700
  store i64 %3, ptr %1, align 8, !dbg !3699
  %4 = load i64, ptr %1, align 8, !dbg !3701
  %5 = icmp eq i64 %4, 4, !dbg !3703
  br i1 %5, label %6, label %7, !dbg !3704

6:                                                ; preds = %0
  br label %25, !dbg !3705

7:                                                ; preds = %0
  call void @llvm.dbg.declare(metadata ptr %2, metadata !3706, metadata !DIExpression()), !dbg !3707
  %8 = call i32 (ptr, i32, ...) @open(ptr noundef @.str.40, i32 noundef 524288), !dbg !3708
  store i32 %8, ptr %2, align 4, !dbg !3707
  %9 = load i32, ptr %2, align 4, !dbg !3709
  %10 = icmp slt i32 %9, 0, !dbg !3711
  br i1 %10, label %11, label %17, !dbg !3712

11:                                               ; preds = %7
  %12 = call i32 (ptr, i32, ...) @open(ptr noundef @.str.1.41, i32 noundef 524288), !dbg !3713
  store i32 %12, ptr %2, align 4, !dbg !3715
  %13 = load i32, ptr %2, align 4, !dbg !3716
  %14 = icmp slt i32 %13, 0, !dbg !3718
  br i1 %14, label %15, label %16, !dbg !3719

15:                                               ; preds = %11
  store i32 668265261, ptr @odd_constant, align 4, !dbg !3720
  br label %29, !dbg !3722

16:                                               ; preds = %11
  br label %17, !dbg !3723

17:                                               ; preds = %16, %7
  %18 = load i32, ptr %2, align 4, !dbg !3724
  %19 = call i64 @read(i32 noundef %18, ptr noundef @odd_constant, i64 noundef 4), !dbg !3726
  %20 = icmp ne i64 %19, 4, !dbg !3727
  br i1 %20, label %21, label %22, !dbg !3728

21:                                               ; preds = %17
  store i32 668265261, ptr @odd_constant, align 4, !dbg !3729
  br label %22, !dbg !3730

22:                                               ; preds = %21, %17
  %23 = load i32, ptr %2, align 4, !dbg !3731
  %24 = call i32 @close(i32 noundef %23), !dbg !3732
  br label %25, !dbg !3732

25:                                               ; preds = %22, %6
  call void @llvm.dbg.label(metadata !3733), !dbg !3734
  %26 = load i32, ptr @odd_constant, align 4, !dbg !3735
  %27 = or i32 %26, 1, !dbg !3735
  store i32 %27, ptr @odd_constant, align 4, !dbg !3735
  %28 = load i32, ptr @odd_constant, align 4, !dbg !3736
  call void @murmur3_set_seed(i32 noundef %28), !dbg !3737
  br label %29, !dbg !3738

29:                                               ; preds = %25, %15
  ret void, !dbg !3738
}

; Function Attrs: nounwind
declare i64 @syscall(i64 noundef, ...) #2

declare i32 @open(ptr noundef, i32 noundef, ...) #5

declare i64 @read(i32 noundef, ptr noundef, i64 noundef) #5

declare i32 @close(i32 noundef) #5

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @murmur3_set_seed(i32 noundef %0) #0 !dbg !3739 {
  %2 = alloca i32, align 4
  store i32 %0, ptr %2, align 4
  call void @llvm.dbg.declare(metadata ptr %2, metadata !3742, metadata !DIExpression()), !dbg !3743
  %3 = load i32, ptr %2, align 4, !dbg !3744
  store i32 %3, ptr @seed_value, align 4, !dbg !3745
  ret void, !dbg !3746
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @base64_encode(ptr noundef %0, i64 noundef %1, ptr noundef %2) #0 !dbg !3747 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i64, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !3751, metadata !DIExpression()), !dbg !3752
  store i64 %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !3753, metadata !DIExpression()), !dbg !3754
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !3755, metadata !DIExpression()), !dbg !3756
  call void @llvm.dbg.declare(metadata ptr %8, metadata !3757, metadata !DIExpression()), !dbg !3758
  call void @llvm.dbg.declare(metadata ptr %9, metadata !3759, metadata !DIExpression()), !dbg !3760
  call void @llvm.dbg.declare(metadata ptr %10, metadata !3761, metadata !DIExpression()), !dbg !3762
  call void @llvm.dbg.declare(metadata ptr %11, metadata !3763, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.declare(metadata ptr %12, metadata !3765, metadata !DIExpression()), !dbg !3766
  call void @llvm.dbg.declare(metadata ptr %13, metadata !3767, metadata !DIExpression()), !dbg !3768
  %14 = load i64, ptr %6, align 8, !dbg !3769
  %15 = mul i64 %14, 4, !dbg !3770
  %16 = udiv i64 %15, 3, !dbg !3771
  %17 = add i64 %16, 4, !dbg !3772
  store i64 %17, ptr %12, align 8, !dbg !3773
  %18 = load i64, ptr %12, align 8, !dbg !3774
  %19 = udiv i64 %18, 72, !dbg !3775
  %20 = load i64, ptr %12, align 8, !dbg !3776
  %21 = add i64 %20, %19, !dbg !3776
  store i64 %21, ptr %12, align 8, !dbg !3776
  %22 = load i64, ptr %12, align 8, !dbg !3777
  %23 = add i64 %22, 1, !dbg !3777
  store i64 %23, ptr %12, align 8, !dbg !3777
  %24 = load i64, ptr %12, align 8, !dbg !3778
  %25 = load i64, ptr %6, align 8, !dbg !3780
  %26 = icmp ult i64 %24, %25, !dbg !3781
  br i1 %26, label %27, label %28, !dbg !3782

27:                                               ; preds = %3
  store ptr null, ptr %4, align 8, !dbg !3783
  br label %203, !dbg !3783

28:                                               ; preds = %3
  %29 = load i64, ptr %12, align 8, !dbg !3784
  %30 = call noalias ptr @malloc(i64 noundef %29) #18, !dbg !3785
  store ptr %30, ptr %8, align 8, !dbg !3786
  %31 = load ptr, ptr %8, align 8, !dbg !3787
  %32 = icmp eq ptr %31, null, !dbg !3789
  br i1 %32, label %33, label %34, !dbg !3790

33:                                               ; preds = %28
  store ptr null, ptr %4, align 8, !dbg !3791
  br label %203, !dbg !3791

34:                                               ; preds = %28
  %35 = load ptr, ptr %5, align 8, !dbg !3792
  %36 = load i64, ptr %6, align 8, !dbg !3793
  %37 = getelementptr inbounds i8, ptr %35, i64 %36, !dbg !3794
  store ptr %37, ptr %10, align 8, !dbg !3795
  %38 = load ptr, ptr %5, align 8, !dbg !3796
  store ptr %38, ptr %11, align 8, !dbg !3797
  %39 = load ptr, ptr %8, align 8, !dbg !3798
  store ptr %39, ptr %9, align 8, !dbg !3799
  store i32 0, ptr %13, align 4, !dbg !3800
  br label %40, !dbg !3801

40:                                               ; preds = %111, %34
  %41 = load ptr, ptr %10, align 8, !dbg !3802
  %42 = load ptr, ptr %11, align 8, !dbg !3803
  %43 = ptrtoint ptr %41 to i64, !dbg !3804
  %44 = ptrtoint ptr %42 to i64, !dbg !3804
  %45 = sub i64 %43, %44, !dbg !3804
  %46 = icmp sge i64 %45, 3, !dbg !3805
  br i1 %46, label %47, label %112, !dbg !3801

47:                                               ; preds = %40
  %48 = load ptr, ptr %11, align 8, !dbg !3806
  %49 = getelementptr inbounds i8, ptr %48, i64 0, !dbg !3806
  %50 = load i8, ptr %49, align 1, !dbg !3806
  %51 = zext i8 %50 to i32, !dbg !3806
  %52 = ashr i32 %51, 2, !dbg !3808
  %53 = sext i32 %52 to i64, !dbg !3809
  %54 = getelementptr inbounds [65 x i8], ptr @base64_table, i64 0, i64 %53, !dbg !3809
  %55 = load i8, ptr %54, align 1, !dbg !3809
  %56 = load ptr, ptr %9, align 8, !dbg !3810
  %57 = getelementptr inbounds i8, ptr %56, i32 1, !dbg !3810
  store ptr %57, ptr %9, align 8, !dbg !3810
  store i8 %55, ptr %56, align 1, !dbg !3811
  %58 = load ptr, ptr %11, align 8, !dbg !3812
  %59 = getelementptr inbounds i8, ptr %58, i64 0, !dbg !3812
  %60 = load i8, ptr %59, align 1, !dbg !3812
  %61 = zext i8 %60 to i32, !dbg !3812
  %62 = and i32 %61, 3, !dbg !3813
  %63 = shl i32 %62, 4, !dbg !3814
  %64 = load ptr, ptr %11, align 8, !dbg !3815
  %65 = getelementptr inbounds i8, ptr %64, i64 1, !dbg !3815
  %66 = load i8, ptr %65, align 1, !dbg !3815
  %67 = zext i8 %66 to i32, !dbg !3815
  %68 = ashr i32 %67, 4, !dbg !3816
  %69 = or i32 %63, %68, !dbg !3817
  %70 = sext i32 %69 to i64, !dbg !3818
  %71 = getelementptr inbounds [65 x i8], ptr @base64_table, i64 0, i64 %70, !dbg !3818
  %72 = load i8, ptr %71, align 1, !dbg !3818
  %73 = load ptr, ptr %9, align 8, !dbg !3819
  %74 = getelementptr inbounds i8, ptr %73, i32 1, !dbg !3819
  store ptr %74, ptr %9, align 8, !dbg !3819
  store i8 %72, ptr %73, align 1, !dbg !3820
  %75 = load ptr, ptr %11, align 8, !dbg !3821
  %76 = getelementptr inbounds i8, ptr %75, i64 1, !dbg !3821
  %77 = load i8, ptr %76, align 1, !dbg !3821
  %78 = zext i8 %77 to i32, !dbg !3821
  %79 = and i32 %78, 15, !dbg !3822
  %80 = shl i32 %79, 2, !dbg !3823
  %81 = load ptr, ptr %11, align 8, !dbg !3824
  %82 = getelementptr inbounds i8, ptr %81, i64 2, !dbg !3824
  %83 = load i8, ptr %82, align 1, !dbg !3824
  %84 = zext i8 %83 to i32, !dbg !3824
  %85 = ashr i32 %84, 6, !dbg !3825
  %86 = or i32 %80, %85, !dbg !3826
  %87 = sext i32 %86 to i64, !dbg !3827
  %88 = getelementptr inbounds [65 x i8], ptr @base64_table, i64 0, i64 %87, !dbg !3827
  %89 = load i8, ptr %88, align 1, !dbg !3827
  %90 = load ptr, ptr %9, align 8, !dbg !3828
  %91 = getelementptr inbounds i8, ptr %90, i32 1, !dbg !3828
  store ptr %91, ptr %9, align 8, !dbg !3828
  store i8 %89, ptr %90, align 1, !dbg !3829
  %92 = load ptr, ptr %11, align 8, !dbg !3830
  %93 = getelementptr inbounds i8, ptr %92, i64 2, !dbg !3830
  %94 = load i8, ptr %93, align 1, !dbg !3830
  %95 = zext i8 %94 to i32, !dbg !3830
  %96 = and i32 %95, 63, !dbg !3831
  %97 = sext i32 %96 to i64, !dbg !3832
  %98 = getelementptr inbounds [65 x i8], ptr @base64_table, i64 0, i64 %97, !dbg !3832
  %99 = load i8, ptr %98, align 1, !dbg !3832
  %100 = load ptr, ptr %9, align 8, !dbg !3833
  %101 = getelementptr inbounds i8, ptr %100, i32 1, !dbg !3833
  store ptr %101, ptr %9, align 8, !dbg !3833
  store i8 %99, ptr %100, align 1, !dbg !3834
  %102 = load ptr, ptr %11, align 8, !dbg !3835
  %103 = getelementptr inbounds i8, ptr %102, i64 3, !dbg !3835
  store ptr %103, ptr %11, align 8, !dbg !3835
  %104 = load i32, ptr %13, align 4, !dbg !3836
  %105 = add nsw i32 %104, 4, !dbg !3836
  store i32 %105, ptr %13, align 4, !dbg !3836
  %106 = load i32, ptr %13, align 4, !dbg !3837
  %107 = icmp sge i32 %106, 72, !dbg !3839
  br i1 %107, label %108, label %111, !dbg !3840

108:                                              ; preds = %47
  %109 = load ptr, ptr %9, align 8, !dbg !3841
  %110 = getelementptr inbounds i8, ptr %109, i32 1, !dbg !3841
  store ptr %110, ptr %9, align 8, !dbg !3841
  store i8 10, ptr %109, align 1, !dbg !3843
  store i32 0, ptr %13, align 4, !dbg !3844
  br label %111, !dbg !3845

111:                                              ; preds = %108, %47
  br label %40, !dbg !3801, !llvm.loop !3846

112:                                              ; preds = %40
  %113 = load ptr, ptr %10, align 8, !dbg !3848
  %114 = load ptr, ptr %11, align 8, !dbg !3850
  %115 = ptrtoint ptr %113 to i64, !dbg !3851
  %116 = ptrtoint ptr %114 to i64, !dbg !3851
  %117 = sub i64 %115, %116, !dbg !3851
  %118 = icmp ne i64 %117, 0, !dbg !3851
  br i1 %118, label %119, label %184, !dbg !3852

119:                                              ; preds = %112
  %120 = load ptr, ptr %11, align 8, !dbg !3853
  %121 = getelementptr inbounds i8, ptr %120, i64 0, !dbg !3853
  %122 = load i8, ptr %121, align 1, !dbg !3853
  %123 = zext i8 %122 to i32, !dbg !3853
  %124 = ashr i32 %123, 2, !dbg !3855
  %125 = sext i32 %124 to i64, !dbg !3856
  %126 = getelementptr inbounds [65 x i8], ptr @base64_table, i64 0, i64 %125, !dbg !3856
  %127 = load i8, ptr %126, align 1, !dbg !3856
  %128 = load ptr, ptr %9, align 8, !dbg !3857
  %129 = getelementptr inbounds i8, ptr %128, i32 1, !dbg !3857
  store ptr %129, ptr %9, align 8, !dbg !3857
  store i8 %127, ptr %128, align 1, !dbg !3858
  %130 = load ptr, ptr %10, align 8, !dbg !3859
  %131 = load ptr, ptr %11, align 8, !dbg !3861
  %132 = ptrtoint ptr %130 to i64, !dbg !3862
  %133 = ptrtoint ptr %131 to i64, !dbg !3862
  %134 = sub i64 %132, %133, !dbg !3862
  %135 = icmp eq i64 %134, 1, !dbg !3863
  br i1 %135, label %136, label %150, !dbg !3864

136:                                              ; preds = %119
  %137 = load ptr, ptr %11, align 8, !dbg !3865
  %138 = getelementptr inbounds i8, ptr %137, i64 0, !dbg !3865
  %139 = load i8, ptr %138, align 1, !dbg !3865
  %140 = zext i8 %139 to i32, !dbg !3865
  %141 = and i32 %140, 3, !dbg !3867
  %142 = shl i32 %141, 4, !dbg !3868
  %143 = sext i32 %142 to i64, !dbg !3869
  %144 = getelementptr inbounds [65 x i8], ptr @base64_table, i64 0, i64 %143, !dbg !3869
  %145 = load i8, ptr %144, align 1, !dbg !3869
  %146 = load ptr, ptr %9, align 8, !dbg !3870
  %147 = getelementptr inbounds i8, ptr %146, i32 1, !dbg !3870
  store ptr %147, ptr %9, align 8, !dbg !3870
  store i8 %145, ptr %146, align 1, !dbg !3871
  %148 = load ptr, ptr %9, align 8, !dbg !3872
  %149 = getelementptr inbounds i8, ptr %148, i32 1, !dbg !3872
  store ptr %149, ptr %9, align 8, !dbg !3872
  store i8 61, ptr %148, align 1, !dbg !3873
  br label %179, !dbg !3874

150:                                              ; preds = %119
  %151 = load ptr, ptr %11, align 8, !dbg !3875
  %152 = getelementptr inbounds i8, ptr %151, i64 0, !dbg !3875
  %153 = load i8, ptr %152, align 1, !dbg !3875
  %154 = zext i8 %153 to i32, !dbg !3875
  %155 = and i32 %154, 3, !dbg !3877
  %156 = shl i32 %155, 4, !dbg !3878
  %157 = load ptr, ptr %11, align 8, !dbg !3879
  %158 = getelementptr inbounds i8, ptr %157, i64 1, !dbg !3879
  %159 = load i8, ptr %158, align 1, !dbg !3879
  %160 = zext i8 %159 to i32, !dbg !3879
  %161 = ashr i32 %160, 4, !dbg !3880
  %162 = or i32 %156, %161, !dbg !3881
  %163 = sext i32 %162 to i64, !dbg !3882
  %164 = getelementptr inbounds [65 x i8], ptr @base64_table, i64 0, i64 %163, !dbg !3882
  %165 = load i8, ptr %164, align 1, !dbg !3882
  %166 = load ptr, ptr %9, align 8, !dbg !3883
  %167 = getelementptr inbounds i8, ptr %166, i32 1, !dbg !3883
  store ptr %167, ptr %9, align 8, !dbg !3883
  store i8 %165, ptr %166, align 1, !dbg !3884
  %168 = load ptr, ptr %11, align 8, !dbg !3885
  %169 = getelementptr inbounds i8, ptr %168, i64 1, !dbg !3885
  %170 = load i8, ptr %169, align 1, !dbg !3885
  %171 = zext i8 %170 to i32, !dbg !3885
  %172 = and i32 %171, 15, !dbg !3886
  %173 = shl i32 %172, 2, !dbg !3887
  %174 = sext i32 %173 to i64, !dbg !3888
  %175 = getelementptr inbounds [65 x i8], ptr @base64_table, i64 0, i64 %174, !dbg !3888
  %176 = load i8, ptr %175, align 1, !dbg !3888
  %177 = load ptr, ptr %9, align 8, !dbg !3889
  %178 = getelementptr inbounds i8, ptr %177, i32 1, !dbg !3889
  store ptr %178, ptr %9, align 8, !dbg !3889
  store i8 %176, ptr %177, align 1, !dbg !3890
  br label %179

179:                                              ; preds = %150, %136
  %180 = load ptr, ptr %9, align 8, !dbg !3891
  %181 = getelementptr inbounds i8, ptr %180, i32 1, !dbg !3891
  store ptr %181, ptr %9, align 8, !dbg !3891
  store i8 61, ptr %180, align 1, !dbg !3892
  %182 = load i32, ptr %13, align 4, !dbg !3893
  %183 = add nsw i32 %182, 4, !dbg !3893
  store i32 %183, ptr %13, align 4, !dbg !3893
  br label %184, !dbg !3894

184:                                              ; preds = %179, %112
  %185 = load i32, ptr %13, align 4, !dbg !3895
  %186 = icmp ne i32 %185, 0, !dbg !3895
  br i1 %186, label %187, label %190, !dbg !3897

187:                                              ; preds = %184
  %188 = load ptr, ptr %9, align 8, !dbg !3898
  %189 = getelementptr inbounds i8, ptr %188, i32 1, !dbg !3898
  store ptr %189, ptr %9, align 8, !dbg !3898
  store i8 10, ptr %188, align 1, !dbg !3899
  br label %190, !dbg !3900

190:                                              ; preds = %187, %184
  %191 = load ptr, ptr %9, align 8, !dbg !3901
  store i8 0, ptr %191, align 1, !dbg !3902
  %192 = load ptr, ptr %7, align 8, !dbg !3903
  %193 = icmp ne ptr %192, null, !dbg !3903
  br i1 %193, label %194, label %201, !dbg !3905

194:                                              ; preds = %190
  %195 = load ptr, ptr %9, align 8, !dbg !3906
  %196 = load ptr, ptr %8, align 8, !dbg !3907
  %197 = ptrtoint ptr %195 to i64, !dbg !3908
  %198 = ptrtoint ptr %196 to i64, !dbg !3908
  %199 = sub i64 %197, %198, !dbg !3908
  %200 = load ptr, ptr %7, align 8, !dbg !3909
  store i64 %199, ptr %200, align 8, !dbg !3910
  br label %201, !dbg !3911

201:                                              ; preds = %194, %190
  %202 = load ptr, ptr %8, align 8, !dbg !3912
  store ptr %202, ptr %4, align 8, !dbg !3913
  br label %203, !dbg !3913

203:                                              ; preds = %201, %33, %27
  %204 = load ptr, ptr %4, align 8, !dbg !3914
  ret ptr %204, !dbg !3914
}

; Function Attrs: nounwind allocsize(0)
declare noalias ptr @malloc(i64 noundef) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @base64_decode(ptr noundef %0, i64 noundef %1, ptr noundef %2) #0 !dbg !3915 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i64, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca [4 x i8], align 1
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !3916, metadata !DIExpression()), !dbg !3917
  store i64 %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !3918, metadata !DIExpression()), !dbg !3919
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !3920, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.declare(metadata ptr %8, metadata !3922, metadata !DIExpression()), !dbg !3923
  call void @llvm.dbg.declare(metadata ptr %9, metadata !3924, metadata !DIExpression()), !dbg !3925
  call void @llvm.dbg.declare(metadata ptr %10, metadata !3926, metadata !DIExpression()), !dbg !3928
  call void @llvm.dbg.declare(metadata ptr %11, metadata !3929, metadata !DIExpression()), !dbg !3930
  call void @llvm.dbg.declare(metadata ptr %12, metadata !3931, metadata !DIExpression()), !dbg !3932
  call void @llvm.dbg.declare(metadata ptr %13, metadata !3933, metadata !DIExpression()), !dbg !3934
  call void @llvm.dbg.declare(metadata ptr %14, metadata !3935, metadata !DIExpression()), !dbg !3936
  store i32 0, ptr %14, align 4, !dbg !3936
  store i64 0, ptr %12, align 8, !dbg !3937
  store i64 0, ptr %11, align 8, !dbg !3938
  br label %16, !dbg !3940

16:                                               ; preds = %34, %3
  %17 = load i64, ptr %11, align 8, !dbg !3941
  %18 = load i64, ptr %6, align 8, !dbg !3943
  %19 = icmp ult i64 %17, %18, !dbg !3944
  br i1 %19, label %20, label %37, !dbg !3945

20:                                               ; preds = %16
  %21 = load ptr, ptr %5, align 8, !dbg !3946
  %22 = load i64, ptr %11, align 8, !dbg !3949
  %23 = getelementptr inbounds i8, ptr %21, i64 %22, !dbg !3946
  %24 = load i8, ptr %23, align 1, !dbg !3946
  %25 = zext i8 %24 to i64, !dbg !3950
  %26 = getelementptr inbounds [256 x i8], ptr @base64_decode_table, i64 0, i64 %25, !dbg !3950
  %27 = load i8, ptr %26, align 1, !dbg !3950
  %28 = zext i8 %27 to i32, !dbg !3950
  %29 = icmp ne i32 %28, 128, !dbg !3951
  br i1 %29, label %30, label %33, !dbg !3952

30:                                               ; preds = %20
  %31 = load i64, ptr %12, align 8, !dbg !3953
  %32 = add i64 %31, 1, !dbg !3953
  store i64 %32, ptr %12, align 8, !dbg !3953
  br label %33, !dbg !3954

33:                                               ; preds = %30, %20
  br label %34, !dbg !3955

34:                                               ; preds = %33
  %35 = load i64, ptr %11, align 8, !dbg !3956
  %36 = add i64 %35, 1, !dbg !3956
  store i64 %36, ptr %11, align 8, !dbg !3956
  br label %16, !dbg !3957, !llvm.loop !3958

37:                                               ; preds = %16
  %38 = load i64, ptr %12, align 8, !dbg !3960
  %39 = icmp eq i64 %38, 0, !dbg !3962
  br i1 %39, label %44, label %40, !dbg !3963

40:                                               ; preds = %37
  %41 = load i64, ptr %12, align 8, !dbg !3964
  %42 = urem i64 %41, 4, !dbg !3965
  %43 = icmp ne i64 %42, 0, !dbg !3965
  br i1 %43, label %44, label %45, !dbg !3966

44:                                               ; preds = %40, %37
  store ptr null, ptr %4, align 8, !dbg !3967
  br label %158, !dbg !3967

45:                                               ; preds = %40
  %46 = load i64, ptr %12, align 8, !dbg !3968
  %47 = udiv i64 %46, 4, !dbg !3969
  %48 = mul i64 %47, 3, !dbg !3970
  %49 = add i64 %48, 1, !dbg !3971
  store i64 %49, ptr %13, align 8, !dbg !3972
  %50 = load i64, ptr %13, align 8, !dbg !3973
  %51 = call noalias ptr @malloc(i64 noundef %50) #18, !dbg !3974
  store ptr %51, ptr %8, align 8, !dbg !3975
  store ptr %51, ptr %9, align 8, !dbg !3976
  %52 = load ptr, ptr %8, align 8, !dbg !3977
  %53 = icmp eq ptr %52, null, !dbg !3979
  br i1 %53, label %54, label %55, !dbg !3980

54:                                               ; preds = %45
  store ptr null, ptr %4, align 8, !dbg !3981
  br label %158, !dbg !3981

55:                                               ; preds = %45
  store i64 0, ptr %12, align 8, !dbg !3982
  store i64 0, ptr %11, align 8, !dbg !3983
  br label %56, !dbg !3985

56:                                               ; preds = %146, %55
  %57 = load i64, ptr %11, align 8, !dbg !3986
  %58 = load i64, ptr %6, align 8, !dbg !3988
  %59 = icmp ult i64 %57, %58, !dbg !3989
  br i1 %59, label %60, label %149, !dbg !3990

60:                                               ; preds = %56
  call void @llvm.dbg.declare(metadata ptr %15, metadata !3991, metadata !DIExpression()), !dbg !3993
  %61 = load ptr, ptr %5, align 8, !dbg !3994
  %62 = load i64, ptr %11, align 8, !dbg !3995
  %63 = getelementptr inbounds i8, ptr %61, i64 %62, !dbg !3994
  %64 = load i8, ptr %63, align 1, !dbg !3994
  %65 = zext i8 %64 to i64, !dbg !3996
  %66 = getelementptr inbounds [256 x i8], ptr @base64_decode_table, i64 0, i64 %65, !dbg !3996
  %67 = load i8, ptr %66, align 1, !dbg !3996
  store i8 %67, ptr %15, align 1, !dbg !3993
  %68 = load i8, ptr %15, align 1, !dbg !3997
  %69 = zext i8 %68 to i32, !dbg !3997
  %70 = icmp eq i32 %69, 128, !dbg !3999
  br i1 %70, label %71, label %72, !dbg !4000

71:                                               ; preds = %60
  br label %146, !dbg !4001

72:                                               ; preds = %60
  %73 = load ptr, ptr %5, align 8, !dbg !4002
  %74 = load i64, ptr %11, align 8, !dbg !4004
  %75 = getelementptr inbounds i8, ptr %73, i64 %74, !dbg !4002
  %76 = load i8, ptr %75, align 1, !dbg !4002
  %77 = zext i8 %76 to i32, !dbg !4002
  %78 = icmp eq i32 %77, 61, !dbg !4005
  br i1 %78, label %79, label %82, !dbg !4006

79:                                               ; preds = %72
  %80 = load i32, ptr %14, align 4, !dbg !4007
  %81 = add nsw i32 %80, 1, !dbg !4007
  store i32 %81, ptr %14, align 4, !dbg !4007
  br label %82, !dbg !4008

82:                                               ; preds = %79, %72
  %83 = load i8, ptr %15, align 1, !dbg !4009
  %84 = load i64, ptr %12, align 8, !dbg !4010
  %85 = getelementptr inbounds [4 x i8], ptr %10, i64 0, i64 %84, !dbg !4011
  store i8 %83, ptr %85, align 1, !dbg !4012
  %86 = load i64, ptr %12, align 8, !dbg !4013
  %87 = add i64 %86, 1, !dbg !4013
  store i64 %87, ptr %12, align 8, !dbg !4013
  %88 = load i64, ptr %12, align 8, !dbg !4014
  %89 = icmp eq i64 %88, 4, !dbg !4016
  br i1 %89, label %90, label %145, !dbg !4017

90:                                               ; preds = %82
  %91 = getelementptr inbounds [4 x i8], ptr %10, i64 0, i64 0, !dbg !4018
  %92 = load i8, ptr %91, align 1, !dbg !4018
  %93 = zext i8 %92 to i32, !dbg !4018
  %94 = shl i32 %93, 2, !dbg !4020
  %95 = getelementptr inbounds [4 x i8], ptr %10, i64 0, i64 1, !dbg !4021
  %96 = load i8, ptr %95, align 1, !dbg !4021
  %97 = zext i8 %96 to i32, !dbg !4021
  %98 = ashr i32 %97, 4, !dbg !4022
  %99 = or i32 %94, %98, !dbg !4023
  %100 = trunc i32 %99 to i8, !dbg !4024
  %101 = load ptr, ptr %9, align 8, !dbg !4025
  %102 = getelementptr inbounds i8, ptr %101, i32 1, !dbg !4025
  store ptr %102, ptr %9, align 8, !dbg !4025
  store i8 %100, ptr %101, align 1, !dbg !4026
  %103 = getelementptr inbounds [4 x i8], ptr %10, i64 0, i64 1, !dbg !4027
  %104 = load i8, ptr %103, align 1, !dbg !4027
  %105 = zext i8 %104 to i32, !dbg !4027
  %106 = shl i32 %105, 4, !dbg !4028
  %107 = getelementptr inbounds [4 x i8], ptr %10, i64 0, i64 2, !dbg !4029
  %108 = load i8, ptr %107, align 1, !dbg !4029
  %109 = zext i8 %108 to i32, !dbg !4029
  %110 = ashr i32 %109, 2, !dbg !4030
  %111 = or i32 %106, %110, !dbg !4031
  %112 = trunc i32 %111 to i8, !dbg !4032
  %113 = load ptr, ptr %9, align 8, !dbg !4033
  %114 = getelementptr inbounds i8, ptr %113, i32 1, !dbg !4033
  store ptr %114, ptr %9, align 8, !dbg !4033
  store i8 %112, ptr %113, align 1, !dbg !4034
  %115 = getelementptr inbounds [4 x i8], ptr %10, i64 0, i64 2, !dbg !4035
  %116 = load i8, ptr %115, align 1, !dbg !4035
  %117 = zext i8 %116 to i32, !dbg !4035
  %118 = shl i32 %117, 6, !dbg !4036
  %119 = getelementptr inbounds [4 x i8], ptr %10, i64 0, i64 3, !dbg !4037
  %120 = load i8, ptr %119, align 1, !dbg !4037
  %121 = zext i8 %120 to i32, !dbg !4037
  %122 = or i32 %118, %121, !dbg !4038
  %123 = trunc i32 %122 to i8, !dbg !4039
  %124 = load ptr, ptr %9, align 8, !dbg !4040
  %125 = getelementptr inbounds i8, ptr %124, i32 1, !dbg !4040
  store ptr %125, ptr %9, align 8, !dbg !4040
  store i8 %123, ptr %124, align 1, !dbg !4041
  store i64 0, ptr %12, align 8, !dbg !4042
  %126 = load i32, ptr %14, align 4, !dbg !4043
  %127 = icmp ne i32 %126, 0, !dbg !4043
  br i1 %127, label %128, label %144, !dbg !4045

128:                                              ; preds = %90
  %129 = load i32, ptr %14, align 4, !dbg !4046
  %130 = icmp eq i32 %129, 1, !dbg !4049
  br i1 %130, label %131, label %134, !dbg !4050

131:                                              ; preds = %128
  %132 = load ptr, ptr %9, align 8, !dbg !4051
  %133 = getelementptr inbounds i8, ptr %132, i32 -1, !dbg !4051
  store ptr %133, ptr %9, align 8, !dbg !4051
  br label %143, !dbg !4052

134:                                              ; preds = %128
  %135 = load i32, ptr %14, align 4, !dbg !4053
  %136 = icmp eq i32 %135, 2, !dbg !4055
  br i1 %136, label %137, label %140, !dbg !4056

137:                                              ; preds = %134
  %138 = load ptr, ptr %9, align 8, !dbg !4057
  %139 = getelementptr inbounds i8, ptr %138, i64 -2, !dbg !4057
  store ptr %139, ptr %9, align 8, !dbg !4057
  br label %142, !dbg !4058

140:                                              ; preds = %134
  %141 = load ptr, ptr %8, align 8, !dbg !4059
  call void @free(ptr noundef %141) #17, !dbg !4061
  store ptr null, ptr %4, align 8, !dbg !4062
  br label %158, !dbg !4062

142:                                              ; preds = %137
  br label %143

143:                                              ; preds = %142, %131
  br label %149, !dbg !4063

144:                                              ; preds = %90
  br label %145, !dbg !4064

145:                                              ; preds = %144, %82
  br label %146, !dbg !4065

146:                                              ; preds = %145, %71
  %147 = load i64, ptr %11, align 8, !dbg !4066
  %148 = add i64 %147, 1, !dbg !4066
  store i64 %148, ptr %11, align 8, !dbg !4066
  br label %56, !dbg !4067, !llvm.loop !4068

149:                                              ; preds = %143, %56
  %150 = load ptr, ptr %9, align 8, !dbg !4070
  store i8 0, ptr %150, align 1, !dbg !4071
  %151 = load ptr, ptr %9, align 8, !dbg !4072
  %152 = load ptr, ptr %8, align 8, !dbg !4073
  %153 = ptrtoint ptr %151 to i64, !dbg !4074
  %154 = ptrtoint ptr %152 to i64, !dbg !4074
  %155 = sub i64 %153, %154, !dbg !4074
  %156 = load ptr, ptr %7, align 8, !dbg !4075
  store i64 %155, ptr %156, align 8, !dbg !4076
  %157 = load ptr, ptr %8, align 8, !dbg !4077
  store ptr %157, ptr %4, align 8, !dbg !4078
  br label %158, !dbg !4078

158:                                              ; preds = %149, %140, %54, %44
  %159 = load ptr, ptr %4, align 8, !dbg !4079
  ret ptr %159, !dbg !4079
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @hash_int_new(ptr noundef %0, ptr noundef %1) #0 !dbg !4080 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !4109, metadata !DIExpression()), !dbg !4110
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !4111, metadata !DIExpression()), !dbg !4112
  %5 = load ptr, ptr %3, align 8, !dbg !4113
  %6 = load ptr, ptr %4, align 8, !dbg !4114
  %7 = call ptr @hash_internal_new(ptr noundef @hash_int, ptr noundef @hash_int_key_cmp, ptr noundef %5, ptr noundef %6), !dbg !4115
  ret ptr %7, !dbg !4116
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @hash_int(ptr noundef %0) #0 !dbg !4117 {
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !4118, metadata !DIExpression()), !dbg !4119
  call void @llvm.dbg.declare(metadata ptr %3, metadata !4120, metadata !DIExpression()), !dbg !4121
  %5 = load ptr, ptr %2, align 8, !dbg !4122
  %6 = ptrtoint ptr %5 to i64, !dbg !4123
  %7 = trunc i64 %6 to i32, !dbg !4124
  store i32 %7, ptr %3, align 4, !dbg !4121
  call void @llvm.dbg.declare(metadata ptr %4, metadata !4125, metadata !DIExpression()), !dbg !4126
  %8 = load i32, ptr @odd_constant, align 4, !dbg !4127
  store i32 %8, ptr %4, align 4, !dbg !4126
  %9 = load i32, ptr %3, align 4, !dbg !4128
  %10 = xor i32 %9, 61, !dbg !4129
  %11 = load i32, ptr %3, align 4, !dbg !4130
  %12 = lshr i32 %11, 16, !dbg !4131
  %13 = xor i32 %10, %12, !dbg !4132
  store i32 %13, ptr %3, align 4, !dbg !4133
  %14 = load i32, ptr %3, align 4, !dbg !4134
  %15 = shl i32 %14, 3, !dbg !4135
  %16 = load i32, ptr %3, align 4, !dbg !4136
  %17 = add i32 %16, %15, !dbg !4136
  store i32 %17, ptr %3, align 4, !dbg !4136
  %18 = load i32, ptr %3, align 4, !dbg !4137
  %19 = lshr i32 %18, 4, !dbg !4138
  %20 = load i32, ptr %3, align 4, !dbg !4139
  %21 = xor i32 %20, %19, !dbg !4139
  store i32 %21, ptr %3, align 4, !dbg !4139
  %22 = load i32, ptr %4, align 4, !dbg !4140
  %23 = load i32, ptr %3, align 4, !dbg !4141
  %24 = mul i32 %23, %22, !dbg !4141
  store i32 %24, ptr %3, align 4, !dbg !4141
  %25 = load i32, ptr %3, align 4, !dbg !4142
  %26 = lshr i32 %25, 15, !dbg !4143
  %27 = load i32, ptr %3, align 4, !dbg !4144
  %28 = xor i32 %27, %26, !dbg !4144
  store i32 %28, ptr %3, align 4, !dbg !4144
  %29 = load i32, ptr %3, align 4, !dbg !4145
  ret i32 %29, !dbg !4146
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @hash_int_key_cmp(ptr noundef %0, ptr noundef %1) #0 !dbg !4147 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !4148, metadata !DIExpression()), !dbg !4149
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !4150, metadata !DIExpression()), !dbg !4151
  call void @llvm.dbg.declare(metadata ptr %5, metadata !4152, metadata !DIExpression()), !dbg !4153
  %7 = load ptr, ptr %3, align 8, !dbg !4154
  %8 = ptrtoint ptr %7 to i64, !dbg !4155
  %9 = trunc i64 %8 to i32, !dbg !4156
  store i32 %9, ptr %5, align 4, !dbg !4153
  call void @llvm.dbg.declare(metadata ptr %6, metadata !4157, metadata !DIExpression()), !dbg !4158
  %10 = load ptr, ptr %4, align 8, !dbg !4159
  %11 = ptrtoint ptr %10 to i64, !dbg !4160
  %12 = trunc i64 %11 to i32, !dbg !4161
  store i32 %12, ptr %6, align 4, !dbg !4158
  %13 = load i32, ptr %5, align 4, !dbg !4162
  %14 = load i32, ptr %6, align 4, !dbg !4163
  %15 = icmp sgt i32 %13, %14, !dbg !4164
  %16 = zext i1 %15 to i32, !dbg !4164
  %17 = load i32, ptr %5, align 4, !dbg !4165
  %18 = load i32, ptr %6, align 4, !dbg !4166
  %19 = icmp slt i32 %17, %18, !dbg !4167
  %20 = zext i1 %19 to i32, !dbg !4167
  %21 = sub nsw i32 %16, %20, !dbg !4168
  ret i32 %21, !dbg !4169
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @hash_internal_new(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 !dbg !4170 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  store ptr %0, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !4173, metadata !DIExpression()), !dbg !4174
  store ptr %1, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !4175, metadata !DIExpression()), !dbg !4176
  store ptr %2, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !4177, metadata !DIExpression()), !dbg !4178
  store ptr %3, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !4179, metadata !DIExpression()), !dbg !4180
  call void @llvm.dbg.declare(metadata ptr %10, metadata !4181, metadata !DIExpression()), !dbg !4182
  %11 = call noalias ptr @calloc(i64 noundef 1, i64 noundef 8232) #19, !dbg !4183
  store ptr %11, ptr %10, align 8, !dbg !4182
  %12 = load ptr, ptr %10, align 8, !dbg !4184
  %13 = icmp eq ptr %12, null, !dbg !4186
  br i1 %13, label %14, label %15, !dbg !4187

14:                                               ; preds = %4
  store ptr null, ptr %5, align 8, !dbg !4188
  br label %29, !dbg !4188

15:                                               ; preds = %4
  %16 = load ptr, ptr %6, align 8, !dbg !4189
  %17 = load ptr, ptr %10, align 8, !dbg !4190
  %18 = getelementptr inbounds %struct.hash, ptr %17, i32 0, i32 1, !dbg !4191
  store ptr %16, ptr %18, align 8, !dbg !4192
  %19 = load ptr, ptr %7, align 8, !dbg !4193
  %20 = load ptr, ptr %10, align 8, !dbg !4194
  %21 = getelementptr inbounds %struct.hash, ptr %20, i32 0, i32 2, !dbg !4195
  store ptr %19, ptr %21, align 8, !dbg !4196
  %22 = load ptr, ptr %9, align 8, !dbg !4197
  %23 = load ptr, ptr %10, align 8, !dbg !4198
  %24 = getelementptr inbounds %struct.hash, ptr %23, i32 0, i32 3, !dbg !4199
  store ptr %22, ptr %24, align 8, !dbg !4200
  %25 = load ptr, ptr %8, align 8, !dbg !4201
  %26 = load ptr, ptr %10, align 8, !dbg !4202
  %27 = getelementptr inbounds %struct.hash, ptr %26, i32 0, i32 4, !dbg !4203
  store ptr %25, ptr %27, align 8, !dbg !4204
  %28 = load ptr, ptr %10, align 8, !dbg !4205
  store ptr %28, ptr %5, align 8, !dbg !4206
  br label %29, !dbg !4206

29:                                               ; preds = %15, %14
  %30 = load ptr, ptr %5, align 8, !dbg !4207
  ret ptr %30, !dbg !4207
}

; Function Attrs: nounwind allocsize(0,1)
declare noalias ptr @calloc(i64 noundef, i64 noundef) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @hash_str_new(ptr noundef %0, ptr noundef %1) #0 !dbg !4208 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !4209, metadata !DIExpression()), !dbg !4210
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !4211, metadata !DIExpression()), !dbg !4212
  call void @llvm.dbg.declare(metadata ptr %5, metadata !4213, metadata !DIExpression()), !dbg !4214
  store ptr @murmur3_simple, ptr %5, align 8, !dbg !4215
  %6 = load ptr, ptr %5, align 8, !dbg !4216
  %7 = load ptr, ptr %3, align 8, !dbg !4217
  %8 = load ptr, ptr %4, align 8, !dbg !4218
  %9 = call ptr @hash_internal_new(ptr noundef %6, ptr noundef @strcmp, ptr noundef %7, ptr noundef %8), !dbg !4219
  ret ptr %9, !dbg !4220
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @murmur3_simple(ptr noundef %0) #0 !dbg !4221 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  %6 = alloca i64, align 8
  %7 = alloca i8, align 1
  %8 = alloca i64, align 8
  %9 = alloca i8, align 1
  %10 = alloca i64, align 8
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i8, align 1
  %14 = alloca i64, align 8
  %15 = alloca i8, align 1
  %16 = alloca ptr, align 8
  %17 = alloca i64, align 8
  %18 = alloca i32, align 4
  %19 = alloca ptr, align 8
  %20 = alloca ptr, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  %24 = alloca i64, align 8
  %25 = alloca i64, align 8
  %26 = alloca i64, align 8
  %27 = alloca ptr, align 8
  %28 = alloca i64, align 8
  %29 = alloca i64, align 8
  %30 = alloca ptr, align 8
  %31 = alloca i64, align 8
  %32 = alloca i64, align 8
  %33 = alloca ptr, align 8
  %34 = alloca i64, align 8
  %35 = alloca [2 x i64], align 16
  store ptr %0, ptr %33, align 8
  call void @llvm.dbg.declare(metadata ptr %33, metadata !4222, metadata !DIExpression()), !dbg !4223
  call void @llvm.dbg.declare(metadata ptr %34, metadata !4224, metadata !DIExpression()), !dbg !4225
  %36 = load ptr, ptr %33, align 8, !dbg !4226
  %37 = call i64 @strlen(ptr noundef %36) #20, !dbg !4227
  store i64 %37, ptr %34, align 8, !dbg !4225
  call void @llvm.dbg.declare(metadata ptr %35, metadata !4228, metadata !DIExpression()), !dbg !4230
  %38 = load ptr, ptr %33, align 8, !dbg !4231
  %39 = load i64, ptr %34, align 8, !dbg !4232
  %40 = load i32, ptr @seed_value, align 4, !dbg !4233
  %41 = getelementptr inbounds [2 x i64], ptr %35, i64 0, i64 0, !dbg !4234
  store ptr %38, ptr %16, align 8
  call void @llvm.dbg.declare(metadata ptr %16, metadata !4235, metadata !DIExpression()), !dbg !4239
  store i64 %39, ptr %17, align 8
  call void @llvm.dbg.declare(metadata ptr %17, metadata !4241, metadata !DIExpression()), !dbg !4242
  store i32 %40, ptr %18, align 4
  call void @llvm.dbg.declare(metadata ptr %18, metadata !4243, metadata !DIExpression()), !dbg !4244
  store ptr %41, ptr %19, align 8
  call void @llvm.dbg.declare(metadata ptr %19, metadata !4245, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.declare(metadata ptr %20, metadata !4247, metadata !DIExpression()), !dbg !4248
  %42 = load ptr, ptr %16, align 8, !dbg !4249
  store ptr %42, ptr %20, align 8, !dbg !4248
  call void @llvm.dbg.declare(metadata ptr %21, metadata !4250, metadata !DIExpression()), !dbg !4251
  %43 = load i64, ptr %17, align 8, !dbg !4252
  %44 = udiv i64 %43, 16, !dbg !4253
  store i64 %44, ptr %21, align 8, !dbg !4251
  call void @llvm.dbg.declare(metadata ptr %22, metadata !4254, metadata !DIExpression()), !dbg !4255
  call void @llvm.dbg.declare(metadata ptr %23, metadata !4256, metadata !DIExpression()), !dbg !4257
  %45 = load i32, ptr %18, align 4, !dbg !4258
  %46 = zext i32 %45 to i64, !dbg !4258
  store i64 %46, ptr %23, align 8, !dbg !4257
  call void @llvm.dbg.declare(metadata ptr %24, metadata !4259, metadata !DIExpression()), !dbg !4260
  %47 = load i32, ptr %18, align 4, !dbg !4261
  %48 = zext i32 %47 to i64, !dbg !4261
  store i64 %48, ptr %24, align 8, !dbg !4260
  call void @llvm.dbg.declare(metadata ptr %25, metadata !4262, metadata !DIExpression()), !dbg !4263
  store i64 -8663945395140668459, ptr %25, align 8, !dbg !4263
  call void @llvm.dbg.declare(metadata ptr %26, metadata !4264, metadata !DIExpression()), !dbg !4265
  store i64 5545529020109919103, ptr %26, align 8, !dbg !4265
  call void @llvm.dbg.declare(metadata ptr %27, metadata !4266, metadata !DIExpression()), !dbg !4267
  %49 = load ptr, ptr %20, align 8, !dbg !4268
  store ptr %49, ptr %27, align 8, !dbg !4267
  store i64 0, ptr %22, align 8, !dbg !4269
  br label %50, !dbg !4271

50:                                               ; preds = %54, %1
  %51 = load i64, ptr %22, align 8, !dbg !4272
  %52 = load i64, ptr %21, align 8, !dbg !4274
  %53 = icmp ult i64 %51, %52, !dbg !4275
  br i1 %53, label %54, label %148, !dbg !4276

54:                                               ; preds = %50
  call void @llvm.dbg.declare(metadata ptr %28, metadata !4277, metadata !DIExpression()), !dbg !4279
  call void @llvm.dbg.declare(metadata ptr %29, metadata !4280, metadata !DIExpression()), !dbg !4281
  %55 = load ptr, ptr %27, align 8, !dbg !4282
  %56 = load i64, ptr %22, align 8, !dbg !4283
  %57 = mul i64 %56, 2, !dbg !4284
  %58 = getelementptr inbounds i64, ptr %55, i64 %57, !dbg !4285
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %28, ptr align 8 %58, i64 8, i1 false), !dbg !4286
  %59 = load ptr, ptr %27, align 8, !dbg !4287
  %60 = load i64, ptr %22, align 8, !dbg !4288
  %61 = mul i64 %60, 2, !dbg !4289
  %62 = getelementptr inbounds i64, ptr %59, i64 %61, !dbg !4290
  %63 = getelementptr inbounds i64, ptr %62, i64 1, !dbg !4291
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %29, ptr align 8 %63, i64 8, i1 false), !dbg !4292
  %64 = load i64, ptr %25, align 8, !dbg !4293
  %65 = load i64, ptr %28, align 8, !dbg !4294
  %66 = mul i64 %65, %64, !dbg !4294
  store i64 %66, ptr %28, align 8, !dbg !4294
  %67 = load i64, ptr %28, align 8, !dbg !4295
  store i64 %67, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !4296, metadata !DIExpression()), !dbg !4304
  store i8 31, ptr %9, align 1
  call void @llvm.dbg.declare(metadata ptr %9, metadata !4306, metadata !DIExpression()), !dbg !4307
  %68 = load i64, ptr %8, align 8, !dbg !4308
  %69 = load i8, ptr %9, align 1, !dbg !4309
  %70 = sext i8 %69 to i32, !dbg !4309
  %71 = zext i32 %70 to i64, !dbg !4310
  %72 = shl i64 %68, %71, !dbg !4310
  %73 = load i64, ptr %8, align 8, !dbg !4311
  %74 = load i8, ptr %9, align 1, !dbg !4312
  %75 = sext i8 %74 to i32, !dbg !4312
  %76 = sub nsw i32 64, %75, !dbg !4313
  %77 = zext i32 %76 to i64, !dbg !4314
  %78 = lshr i64 %73, %77, !dbg !4314
  %79 = or i64 %72, %78, !dbg !4315
  store i64 %79, ptr %28, align 8, !dbg !4316
  %80 = load i64, ptr %26, align 8, !dbg !4317
  %81 = load i64, ptr %28, align 8, !dbg !4318
  %82 = mul i64 %81, %80, !dbg !4318
  store i64 %82, ptr %28, align 8, !dbg !4318
  %83 = load i64, ptr %28, align 8, !dbg !4319
  %84 = load i64, ptr %23, align 8, !dbg !4320
  %85 = xor i64 %84, %83, !dbg !4320
  store i64 %85, ptr %23, align 8, !dbg !4320
  %86 = load i64, ptr %23, align 8, !dbg !4321
  store i64 %86, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %10, metadata !4296, metadata !DIExpression()), !dbg !4322
  store i8 27, ptr %11, align 1
  call void @llvm.dbg.declare(metadata ptr %11, metadata !4306, metadata !DIExpression()), !dbg !4324
  %87 = load i64, ptr %10, align 8, !dbg !4325
  %88 = load i8, ptr %11, align 1, !dbg !4326
  %89 = sext i8 %88 to i32, !dbg !4326
  %90 = zext i32 %89 to i64, !dbg !4327
  %91 = shl i64 %87, %90, !dbg !4327
  %92 = load i64, ptr %10, align 8, !dbg !4328
  %93 = load i8, ptr %11, align 1, !dbg !4329
  %94 = sext i8 %93 to i32, !dbg !4329
  %95 = sub nsw i32 64, %94, !dbg !4330
  %96 = zext i32 %95 to i64, !dbg !4331
  %97 = lshr i64 %92, %96, !dbg !4331
  %98 = or i64 %91, %97, !dbg !4332
  store i64 %98, ptr %23, align 8, !dbg !4333
  %99 = load i64, ptr %24, align 8, !dbg !4334
  %100 = load i64, ptr %23, align 8, !dbg !4335
  %101 = add i64 %100, %99, !dbg !4335
  store i64 %101, ptr %23, align 8, !dbg !4335
  %102 = load i64, ptr %23, align 8, !dbg !4336
  %103 = mul i64 %102, 5, !dbg !4337
  %104 = add i64 %103, 1390208809, !dbg !4338
  store i64 %104, ptr %23, align 8, !dbg !4339
  %105 = load i64, ptr %26, align 8, !dbg !4340
  %106 = load i64, ptr %29, align 8, !dbg !4341
  %107 = mul i64 %106, %105, !dbg !4341
  store i64 %107, ptr %29, align 8, !dbg !4341
  %108 = load i64, ptr %29, align 8, !dbg !4342
  store i64 %108, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %12, metadata !4296, metadata !DIExpression()), !dbg !4343
  store i8 33, ptr %13, align 1
  call void @llvm.dbg.declare(metadata ptr %13, metadata !4306, metadata !DIExpression()), !dbg !4345
  %109 = load i64, ptr %12, align 8, !dbg !4346
  %110 = load i8, ptr %13, align 1, !dbg !4347
  %111 = sext i8 %110 to i32, !dbg !4347
  %112 = zext i32 %111 to i64, !dbg !4348
  %113 = shl i64 %109, %112, !dbg !4348
  %114 = load i64, ptr %12, align 8, !dbg !4349
  %115 = load i8, ptr %13, align 1, !dbg !4350
  %116 = sext i8 %115 to i32, !dbg !4350
  %117 = sub nsw i32 64, %116, !dbg !4351
  %118 = zext i32 %117 to i64, !dbg !4352
  %119 = lshr i64 %114, %118, !dbg !4352
  %120 = or i64 %113, %119, !dbg !4353
  store i64 %120, ptr %29, align 8, !dbg !4354
  %121 = load i64, ptr %25, align 8, !dbg !4355
  %122 = load i64, ptr %29, align 8, !dbg !4356
  %123 = mul i64 %122, %121, !dbg !4356
  store i64 %123, ptr %29, align 8, !dbg !4356
  %124 = load i64, ptr %29, align 8, !dbg !4357
  %125 = load i64, ptr %24, align 8, !dbg !4358
  %126 = xor i64 %125, %124, !dbg !4358
  store i64 %126, ptr %24, align 8, !dbg !4358
  %127 = load i64, ptr %24, align 8, !dbg !4359
  store i64 %127, ptr %14, align 8
  call void @llvm.dbg.declare(metadata ptr %14, metadata !4296, metadata !DIExpression()), !dbg !4360
  store i8 31, ptr %15, align 1
  call void @llvm.dbg.declare(metadata ptr %15, metadata !4306, metadata !DIExpression()), !dbg !4362
  %128 = load i64, ptr %14, align 8, !dbg !4363
  %129 = load i8, ptr %15, align 1, !dbg !4364
  %130 = sext i8 %129 to i32, !dbg !4364
  %131 = zext i32 %130 to i64, !dbg !4365
  %132 = shl i64 %128, %131, !dbg !4365
  %133 = load i64, ptr %14, align 8, !dbg !4366
  %134 = load i8, ptr %15, align 1, !dbg !4367
  %135 = sext i8 %134 to i32, !dbg !4367
  %136 = sub nsw i32 64, %135, !dbg !4368
  %137 = zext i32 %136 to i64, !dbg !4369
  %138 = lshr i64 %133, %137, !dbg !4369
  %139 = or i64 %132, %138, !dbg !4370
  store i64 %139, ptr %24, align 8, !dbg !4371
  %140 = load i64, ptr %23, align 8, !dbg !4372
  %141 = load i64, ptr %24, align 8, !dbg !4373
  %142 = add i64 %141, %140, !dbg !4373
  store i64 %142, ptr %24, align 8, !dbg !4373
  %143 = load i64, ptr %24, align 8, !dbg !4374
  %144 = mul i64 %143, 5, !dbg !4375
  %145 = add i64 %144, 944331445, !dbg !4376
  store i64 %145, ptr %24, align 8, !dbg !4377
  %146 = load i64, ptr %22, align 8, !dbg !4378
  %147 = add i64 %146, 1, !dbg !4378
  store i64 %147, ptr %22, align 8, !dbg !4378
  br label %50, !dbg !4379, !llvm.loop !4380

148:                                              ; preds = %50
  call void @llvm.dbg.declare(metadata ptr %30, metadata !4382, metadata !DIExpression()), !dbg !4383
  %149 = load ptr, ptr %20, align 8, !dbg !4384
  %150 = load i64, ptr %21, align 8, !dbg !4385
  %151 = mul i64 %150, 16, !dbg !4386
  %152 = getelementptr inbounds i8, ptr %149, i64 %151, !dbg !4387
  store ptr %152, ptr %30, align 8, !dbg !4383
  call void @llvm.dbg.declare(metadata ptr %31, metadata !4388, metadata !DIExpression()), !dbg !4389
  store i64 0, ptr %31, align 8, !dbg !4389
  call void @llvm.dbg.declare(metadata ptr %32, metadata !4390, metadata !DIExpression()), !dbg !4391
  store i64 0, ptr %32, align 8, !dbg !4391
  %153 = load i64, ptr %17, align 8, !dbg !4392
  %154 = and i64 %153, 15, !dbg !4393
  switch i64 %154, label %316 [
    i64 15, label %155
    i64 14, label %163
    i64 13, label %171
    i64 12, label %179
    i64 11, label %187
    i64 10, label %195
    i64 9, label %203
    i64 8, label %232
    i64 7, label %240
    i64 6, label %248
    i64 5, label %256
    i64 4, label %264
    i64 3, label %272
    i64 2, label %280
    i64 1, label %288
  ], !dbg !4394

155:                                              ; preds = %148
  %156 = load ptr, ptr %30, align 8, !dbg !4395
  %157 = getelementptr inbounds i8, ptr %156, i64 14, !dbg !4395
  %158 = load i8, ptr %157, align 1, !dbg !4395
  %159 = zext i8 %158 to i64, !dbg !4397
  %160 = shl i64 %159, 48, !dbg !4398
  %161 = load i64, ptr %32, align 8, !dbg !4399
  %162 = xor i64 %161, %160, !dbg !4399
  store i64 %162, ptr %32, align 8, !dbg !4399
  br label %163, !dbg !4400

163:                                              ; preds = %155, %148
  %164 = load ptr, ptr %30, align 8, !dbg !4401
  %165 = getelementptr inbounds i8, ptr %164, i64 13, !dbg !4401
  %166 = load i8, ptr %165, align 1, !dbg !4401
  %167 = zext i8 %166 to i64, !dbg !4402
  %168 = shl i64 %167, 40, !dbg !4403
  %169 = load i64, ptr %32, align 8, !dbg !4404
  %170 = xor i64 %169, %168, !dbg !4404
  store i64 %170, ptr %32, align 8, !dbg !4404
  br label %171, !dbg !4405

171:                                              ; preds = %163, %148
  %172 = load ptr, ptr %30, align 8, !dbg !4406
  %173 = getelementptr inbounds i8, ptr %172, i64 12, !dbg !4406
  %174 = load i8, ptr %173, align 1, !dbg !4406
  %175 = zext i8 %174 to i64, !dbg !4407
  %176 = shl i64 %175, 32, !dbg !4408
  %177 = load i64, ptr %32, align 8, !dbg !4409
  %178 = xor i64 %177, %176, !dbg !4409
  store i64 %178, ptr %32, align 8, !dbg !4409
  br label %179, !dbg !4410

179:                                              ; preds = %171, %148
  %180 = load ptr, ptr %30, align 8, !dbg !4411
  %181 = getelementptr inbounds i8, ptr %180, i64 11, !dbg !4411
  %182 = load i8, ptr %181, align 1, !dbg !4411
  %183 = zext i8 %182 to i64, !dbg !4412
  %184 = shl i64 %183, 24, !dbg !4413
  %185 = load i64, ptr %32, align 8, !dbg !4414
  %186 = xor i64 %185, %184, !dbg !4414
  store i64 %186, ptr %32, align 8, !dbg !4414
  br label %187, !dbg !4415

187:                                              ; preds = %179, %148
  %188 = load ptr, ptr %30, align 8, !dbg !4416
  %189 = getelementptr inbounds i8, ptr %188, i64 10, !dbg !4416
  %190 = load i8, ptr %189, align 1, !dbg !4416
  %191 = zext i8 %190 to i64, !dbg !4417
  %192 = shl i64 %191, 16, !dbg !4418
  %193 = load i64, ptr %32, align 8, !dbg !4419
  %194 = xor i64 %193, %192, !dbg !4419
  store i64 %194, ptr %32, align 8, !dbg !4419
  br label %195, !dbg !4420

195:                                              ; preds = %187, %148
  %196 = load ptr, ptr %30, align 8, !dbg !4421
  %197 = getelementptr inbounds i8, ptr %196, i64 9, !dbg !4421
  %198 = load i8, ptr %197, align 1, !dbg !4421
  %199 = zext i8 %198 to i64, !dbg !4422
  %200 = shl i64 %199, 8, !dbg !4423
  %201 = load i64, ptr %32, align 8, !dbg !4424
  %202 = xor i64 %201, %200, !dbg !4424
  store i64 %202, ptr %32, align 8, !dbg !4424
  br label %203, !dbg !4425

203:                                              ; preds = %195, %148
  %204 = load ptr, ptr %30, align 8, !dbg !4426
  %205 = getelementptr inbounds i8, ptr %204, i64 8, !dbg !4426
  %206 = load i8, ptr %205, align 1, !dbg !4426
  %207 = zext i8 %206 to i64, !dbg !4427
  %208 = load i64, ptr %32, align 8, !dbg !4428
  %209 = xor i64 %208, %207, !dbg !4428
  store i64 %209, ptr %32, align 8, !dbg !4428
  %210 = load i64, ptr %26, align 8, !dbg !4429
  %211 = load i64, ptr %32, align 8, !dbg !4430
  %212 = mul i64 %211, %210, !dbg !4430
  store i64 %212, ptr %32, align 8, !dbg !4430
  %213 = load i64, ptr %32, align 8, !dbg !4431
  store i64 %213, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !4296, metadata !DIExpression()), !dbg !4432
  store i8 33, ptr %7, align 1
  call void @llvm.dbg.declare(metadata ptr %7, metadata !4306, metadata !DIExpression()), !dbg !4434
  %214 = load i64, ptr %6, align 8, !dbg !4435
  %215 = load i8, ptr %7, align 1, !dbg !4436
  %216 = sext i8 %215 to i32, !dbg !4436
  %217 = zext i32 %216 to i64, !dbg !4437
  %218 = shl i64 %214, %217, !dbg !4437
  %219 = load i64, ptr %6, align 8, !dbg !4438
  %220 = load i8, ptr %7, align 1, !dbg !4439
  %221 = sext i8 %220 to i32, !dbg !4439
  %222 = sub nsw i32 64, %221, !dbg !4440
  %223 = zext i32 %222 to i64, !dbg !4441
  %224 = lshr i64 %219, %223, !dbg !4441
  %225 = or i64 %218, %224, !dbg !4442
  store i64 %225, ptr %32, align 8, !dbg !4443
  %226 = load i64, ptr %25, align 8, !dbg !4444
  %227 = load i64, ptr %32, align 8, !dbg !4445
  %228 = mul i64 %227, %226, !dbg !4445
  store i64 %228, ptr %32, align 8, !dbg !4445
  %229 = load i64, ptr %32, align 8, !dbg !4446
  %230 = load i64, ptr %24, align 8, !dbg !4447
  %231 = xor i64 %230, %229, !dbg !4447
  store i64 %231, ptr %24, align 8, !dbg !4447
  br label %232, !dbg !4448

232:                                              ; preds = %203, %148
  %233 = load ptr, ptr %30, align 8, !dbg !4449
  %234 = getelementptr inbounds i8, ptr %233, i64 7, !dbg !4449
  %235 = load i8, ptr %234, align 1, !dbg !4449
  %236 = zext i8 %235 to i64, !dbg !4450
  %237 = shl i64 %236, 56, !dbg !4451
  %238 = load i64, ptr %31, align 8, !dbg !4452
  %239 = xor i64 %238, %237, !dbg !4452
  store i64 %239, ptr %31, align 8, !dbg !4452
  br label %240, !dbg !4453

240:                                              ; preds = %232, %148
  %241 = load ptr, ptr %30, align 8, !dbg !4454
  %242 = getelementptr inbounds i8, ptr %241, i64 6, !dbg !4454
  %243 = load i8, ptr %242, align 1, !dbg !4454
  %244 = zext i8 %243 to i64, !dbg !4455
  %245 = shl i64 %244, 48, !dbg !4456
  %246 = load i64, ptr %31, align 8, !dbg !4457
  %247 = xor i64 %246, %245, !dbg !4457
  store i64 %247, ptr %31, align 8, !dbg !4457
  br label %248, !dbg !4458

248:                                              ; preds = %240, %148
  %249 = load ptr, ptr %30, align 8, !dbg !4459
  %250 = getelementptr inbounds i8, ptr %249, i64 5, !dbg !4459
  %251 = load i8, ptr %250, align 1, !dbg !4459
  %252 = zext i8 %251 to i64, !dbg !4460
  %253 = shl i64 %252, 40, !dbg !4461
  %254 = load i64, ptr %31, align 8, !dbg !4462
  %255 = xor i64 %254, %253, !dbg !4462
  store i64 %255, ptr %31, align 8, !dbg !4462
  br label %256, !dbg !4463

256:                                              ; preds = %248, %148
  %257 = load ptr, ptr %30, align 8, !dbg !4464
  %258 = getelementptr inbounds i8, ptr %257, i64 4, !dbg !4464
  %259 = load i8, ptr %258, align 1, !dbg !4464
  %260 = zext i8 %259 to i64, !dbg !4465
  %261 = shl i64 %260, 32, !dbg !4466
  %262 = load i64, ptr %31, align 8, !dbg !4467
  %263 = xor i64 %262, %261, !dbg !4467
  store i64 %263, ptr %31, align 8, !dbg !4467
  br label %264, !dbg !4468

264:                                              ; preds = %256, %148
  %265 = load ptr, ptr %30, align 8, !dbg !4469
  %266 = getelementptr inbounds i8, ptr %265, i64 3, !dbg !4469
  %267 = load i8, ptr %266, align 1, !dbg !4469
  %268 = zext i8 %267 to i64, !dbg !4470
  %269 = shl i64 %268, 24, !dbg !4471
  %270 = load i64, ptr %31, align 8, !dbg !4472
  %271 = xor i64 %270, %269, !dbg !4472
  store i64 %271, ptr %31, align 8, !dbg !4472
  br label %272, !dbg !4473

272:                                              ; preds = %264, %148
  %273 = load ptr, ptr %30, align 8, !dbg !4474
  %274 = getelementptr inbounds i8, ptr %273, i64 2, !dbg !4474
  %275 = load i8, ptr %274, align 1, !dbg !4474
  %276 = zext i8 %275 to i64, !dbg !4475
  %277 = shl i64 %276, 16, !dbg !4476
  %278 = load i64, ptr %31, align 8, !dbg !4477
  %279 = xor i64 %278, %277, !dbg !4477
  store i64 %279, ptr %31, align 8, !dbg !4477
  br label %280, !dbg !4478

280:                                              ; preds = %272, %148
  %281 = load ptr, ptr %30, align 8, !dbg !4479
  %282 = getelementptr inbounds i8, ptr %281, i64 1, !dbg !4479
  %283 = load i8, ptr %282, align 1, !dbg !4479
  %284 = zext i8 %283 to i64, !dbg !4480
  %285 = shl i64 %284, 8, !dbg !4481
  %286 = load i64, ptr %31, align 8, !dbg !4482
  %287 = xor i64 %286, %285, !dbg !4482
  store i64 %287, ptr %31, align 8, !dbg !4482
  br label %288, !dbg !4483

288:                                              ; preds = %280, %148
  %289 = load ptr, ptr %30, align 8, !dbg !4484
  %290 = load i8, ptr %289, align 1, !dbg !4484
  %291 = zext i8 %290 to i64, !dbg !4485
  %292 = load i64, ptr %31, align 8, !dbg !4486
  %293 = xor i64 %292, %291, !dbg !4486
  store i64 %293, ptr %31, align 8, !dbg !4486
  %294 = load i64, ptr %25, align 8, !dbg !4487
  %295 = load i64, ptr %31, align 8, !dbg !4488
  %296 = mul i64 %295, %294, !dbg !4488
  store i64 %296, ptr %31, align 8, !dbg !4488
  %297 = load i64, ptr %31, align 8, !dbg !4489
  store i64 %297, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !4296, metadata !DIExpression()), !dbg !4490
  store i8 31, ptr %5, align 1
  call void @llvm.dbg.declare(metadata ptr %5, metadata !4306, metadata !DIExpression()), !dbg !4492
  %298 = load i64, ptr %4, align 8, !dbg !4493
  %299 = load i8, ptr %5, align 1, !dbg !4494
  %300 = sext i8 %299 to i32, !dbg !4494
  %301 = zext i32 %300 to i64, !dbg !4495
  %302 = shl i64 %298, %301, !dbg !4495
  %303 = load i64, ptr %4, align 8, !dbg !4496
  %304 = load i8, ptr %5, align 1, !dbg !4497
  %305 = sext i8 %304 to i32, !dbg !4497
  %306 = sub nsw i32 64, %305, !dbg !4498
  %307 = zext i32 %306 to i64, !dbg !4499
  %308 = lshr i64 %303, %307, !dbg !4499
  %309 = or i64 %302, %308, !dbg !4500
  store i64 %309, ptr %31, align 8, !dbg !4501
  %310 = load i64, ptr %26, align 8, !dbg !4502
  %311 = load i64, ptr %31, align 8, !dbg !4503
  %312 = mul i64 %311, %310, !dbg !4503
  store i64 %312, ptr %31, align 8, !dbg !4503
  %313 = load i64, ptr %31, align 8, !dbg !4504
  %314 = load i64, ptr %23, align 8, !dbg !4505
  %315 = xor i64 %314, %313, !dbg !4505
  store i64 %315, ptr %23, align 8, !dbg !4505
  br label %316, !dbg !4506

316:                                              ; preds = %288, %148
  %317 = load i64, ptr %17, align 8, !dbg !4507
  %318 = load i64, ptr %23, align 8, !dbg !4508
  %319 = xor i64 %318, %317, !dbg !4508
  store i64 %319, ptr %23, align 8, !dbg !4508
  %320 = load i64, ptr %17, align 8, !dbg !4509
  %321 = load i64, ptr %24, align 8, !dbg !4510
  %322 = xor i64 %321, %320, !dbg !4510
  store i64 %322, ptr %24, align 8, !dbg !4510
  %323 = load i64, ptr %24, align 8, !dbg !4511
  %324 = load i64, ptr %23, align 8, !dbg !4512
  %325 = add i64 %324, %323, !dbg !4512
  store i64 %325, ptr %23, align 8, !dbg !4512
  %326 = load i64, ptr %23, align 8, !dbg !4513
  %327 = load i64, ptr %24, align 8, !dbg !4514
  %328 = add i64 %327, %326, !dbg !4514
  store i64 %328, ptr %24, align 8, !dbg !4514
  %329 = load i64, ptr %23, align 8, !dbg !4515
  store i64 %329, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !4516, metadata !DIExpression()), !dbg !4520
  %330 = load i64, ptr %2, align 8, !dbg !4522
  %331 = lshr i64 %330, 33, !dbg !4523
  %332 = load i64, ptr %2, align 8, !dbg !4524
  %333 = xor i64 %332, %331, !dbg !4524
  store i64 %333, ptr %2, align 8, !dbg !4524
  %334 = load i64, ptr %2, align 8, !dbg !4525
  %335 = mul i64 %334, -49064778989728563, !dbg !4525
  store i64 %335, ptr %2, align 8, !dbg !4525
  %336 = load i64, ptr %2, align 8, !dbg !4526
  %337 = lshr i64 %336, 33, !dbg !4527
  %338 = load i64, ptr %2, align 8, !dbg !4528
  %339 = xor i64 %338, %337, !dbg !4528
  store i64 %339, ptr %2, align 8, !dbg !4528
  %340 = load i64, ptr %2, align 8, !dbg !4529
  %341 = mul i64 %340, -4265267296055464877, !dbg !4529
  store i64 %341, ptr %2, align 8, !dbg !4529
  %342 = load i64, ptr %2, align 8, !dbg !4530
  %343 = lshr i64 %342, 33, !dbg !4531
  %344 = load i64, ptr %2, align 8, !dbg !4532
  %345 = xor i64 %344, %343, !dbg !4532
  store i64 %345, ptr %2, align 8, !dbg !4532
  %346 = load i64, ptr %2, align 8, !dbg !4533
  store i64 %346, ptr %23, align 8, !dbg !4534
  %347 = load i64, ptr %24, align 8, !dbg !4535
  store i64 %347, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !4516, metadata !DIExpression()), !dbg !4536
  %348 = load i64, ptr %3, align 8, !dbg !4538
  %349 = lshr i64 %348, 33, !dbg !4539
  %350 = load i64, ptr %3, align 8, !dbg !4540
  %351 = xor i64 %350, %349, !dbg !4540
  store i64 %351, ptr %3, align 8, !dbg !4540
  %352 = load i64, ptr %3, align 8, !dbg !4541
  %353 = mul i64 %352, -49064778989728563, !dbg !4541
  store i64 %353, ptr %3, align 8, !dbg !4541
  %354 = load i64, ptr %3, align 8, !dbg !4542
  %355 = lshr i64 %354, 33, !dbg !4543
  %356 = load i64, ptr %3, align 8, !dbg !4544
  %357 = xor i64 %356, %355, !dbg !4544
  store i64 %357, ptr %3, align 8, !dbg !4544
  %358 = load i64, ptr %3, align 8, !dbg !4545
  %359 = mul i64 %358, -4265267296055464877, !dbg !4545
  store i64 %359, ptr %3, align 8, !dbg !4545
  %360 = load i64, ptr %3, align 8, !dbg !4546
  %361 = lshr i64 %360, 33, !dbg !4547
  %362 = load i64, ptr %3, align 8, !dbg !4548
  %363 = xor i64 %362, %361, !dbg !4548
  store i64 %363, ptr %3, align 8, !dbg !4548
  %364 = load i64, ptr %3, align 8, !dbg !4549
  store i64 %364, ptr %24, align 8, !dbg !4550
  %365 = load i64, ptr %24, align 8, !dbg !4551
  %366 = load i64, ptr %23, align 8, !dbg !4552
  %367 = add i64 %366, %365, !dbg !4552
  store i64 %367, ptr %23, align 8, !dbg !4552
  %368 = load i64, ptr %23, align 8, !dbg !4553
  %369 = load i64, ptr %24, align 8, !dbg !4554
  %370 = add i64 %369, %368, !dbg !4554
  store i64 %370, ptr %24, align 8, !dbg !4554
  %371 = load i64, ptr %23, align 8, !dbg !4555
  %372 = load ptr, ptr %19, align 8, !dbg !4556
  store i64 %371, ptr %372, align 8, !dbg !4557
  %373 = load i64, ptr %24, align 8, !dbg !4558
  %374 = load ptr, ptr %19, align 8, !dbg !4559
  %375 = getelementptr inbounds i64, ptr %374, i64 1, !dbg !4560
  store i64 %373, ptr %375, align 8, !dbg !4561
  %376 = getelementptr inbounds [2 x i64], ptr %35, i64 0, i64 1, !dbg !4562
  %377 = load i64, ptr %376, align 8, !dbg !4562
  %378 = trunc i64 %377 to i32, !dbg !4563
  ret i32 %378, !dbg !4564
}

; Function Attrs: nounwind willreturn memory(read)
declare i32 @strcmp(ptr noundef, ptr noundef) #8

; Function Attrs: nounwind willreturn memory(read)
declare i64 @strlen(ptr noundef) #8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_free(ptr noundef %0) #0 !dbg !4565 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !4568, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.declare(metadata ptr %3, metadata !4570, metadata !DIExpression()), !dbg !4572
  call void @llvm.dbg.declare(metadata ptr %4, metadata !4573, metadata !DIExpression()), !dbg !4574
  %7 = load ptr, ptr %2, align 8, !dbg !4575
  %8 = icmp eq ptr %7, null, !dbg !4577
  br i1 %8, label %9, label %10, !dbg !4578

9:                                                ; preds = %1
  br label %71, !dbg !4579

10:                                               ; preds = %1
  %11 = load ptr, ptr %2, align 8, !dbg !4580
  %12 = getelementptr inbounds %struct.hash, ptr %11, i32 0, i32 5, !dbg !4581
  %13 = getelementptr inbounds [0 x %struct.hash_bucket], ptr %12, i64 0, i64 0, !dbg !4580
  store ptr %13, ptr %3, align 8, !dbg !4582
  %14 = load ptr, ptr %3, align 8, !dbg !4583
  %15 = getelementptr inbounds %struct.hash_bucket, ptr %14, i64 512, !dbg !4584
  store ptr %15, ptr %4, align 8, !dbg !4585
  br label %16, !dbg !4586

16:                                               ; preds = %66, %10
  %17 = load ptr, ptr %3, align 8, !dbg !4587
  %18 = load ptr, ptr %4, align 8, !dbg !4590
  %19 = icmp ult ptr %17, %18, !dbg !4591
  br i1 %19, label %20, label %69, !dbg !4592

20:                                               ; preds = %16
  %21 = load ptr, ptr %2, align 8, !dbg !4593
  %22 = getelementptr inbounds %struct.hash, ptr %21, i32 0, i32 3, !dbg !4596
  %23 = load ptr, ptr %22, align 8, !dbg !4596
  %24 = icmp ne ptr %23, null, !dbg !4593
  br i1 %24, label %25, label %62, !dbg !4597

25:                                               ; preds = %20
  call void @llvm.dbg.declare(metadata ptr %5, metadata !4598, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.declare(metadata ptr %6, metadata !4601, metadata !DIExpression()), !dbg !4602
  %26 = load ptr, ptr %3, align 8, !dbg !4603
  %27 = getelementptr inbounds %struct.hash_bucket, ptr %26, i32 0, i32 0, !dbg !4604
  %28 = load ptr, ptr %27, align 8, !dbg !4604
  store ptr %28, ptr %5, align 8, !dbg !4605
  %29 = load ptr, ptr %5, align 8, !dbg !4606
  %30 = load ptr, ptr %3, align 8, !dbg !4607
  %31 = getelementptr inbounds %struct.hash_bucket, ptr %30, i32 0, i32 1, !dbg !4608
  %32 = load i32, ptr %31, align 8, !dbg !4608
  %33 = zext i32 %32 to i64, !dbg !4609
  %34 = getelementptr inbounds %struct.hash_entry, ptr %29, i64 %33, !dbg !4609
  store ptr %34, ptr %6, align 8, !dbg !4610
  br label %35, !dbg !4611

35:                                               ; preds = %58, %25
  %36 = load ptr, ptr %5, align 8, !dbg !4612
  %37 = load ptr, ptr %6, align 8, !dbg !4615
  %38 = icmp ult ptr %36, %37, !dbg !4616
  br i1 %38, label %39, label %61, !dbg !4617

39:                                               ; preds = %35
  %40 = load ptr, ptr %2, align 8, !dbg !4618
  %41 = getelementptr inbounds %struct.hash, ptr %40, i32 0, i32 3, !dbg !4620
  %42 = load ptr, ptr %41, align 8, !dbg !4620
  %43 = load ptr, ptr %5, align 8, !dbg !4621
  %44 = getelementptr inbounds %struct.hash_entry, ptr %43, i32 0, i32 1, !dbg !4622
  %45 = load ptr, ptr %44, align 8, !dbg !4622
  call void %42(ptr noundef %45), !dbg !4618
  %46 = load ptr, ptr %2, align 8, !dbg !4623
  %47 = getelementptr inbounds %struct.hash, ptr %46, i32 0, i32 4, !dbg !4625
  %48 = load ptr, ptr %47, align 8, !dbg !4625
  %49 = icmp ne ptr %48, null, !dbg !4623
  br i1 %49, label %50, label %57, !dbg !4626

50:                                               ; preds = %39
  %51 = load ptr, ptr %2, align 8, !dbg !4627
  %52 = getelementptr inbounds %struct.hash, ptr %51, i32 0, i32 4, !dbg !4628
  %53 = load ptr, ptr %52, align 8, !dbg !4628
  %54 = load ptr, ptr %5, align 8, !dbg !4629
  %55 = getelementptr inbounds %struct.hash_entry, ptr %54, i32 0, i32 0, !dbg !4630
  %56 = load ptr, ptr %55, align 8, !dbg !4630
  call void %53(ptr noundef %56), !dbg !4627
  br label %57, !dbg !4627

57:                                               ; preds = %50, %39
  br label %58, !dbg !4631

58:                                               ; preds = %57
  %59 = load ptr, ptr %5, align 8, !dbg !4632
  %60 = getelementptr inbounds %struct.hash_entry, ptr %59, i32 1, !dbg !4632
  store ptr %60, ptr %5, align 8, !dbg !4632
  br label %35, !dbg !4633, !llvm.loop !4634

61:                                               ; preds = %35
  br label %62, !dbg !4636

62:                                               ; preds = %61, %20
  %63 = load ptr, ptr %3, align 8, !dbg !4637
  %64 = getelementptr inbounds %struct.hash_bucket, ptr %63, i32 0, i32 0, !dbg !4638
  %65 = load ptr, ptr %64, align 8, !dbg !4638
  call void @free(ptr noundef %65) #17, !dbg !4639
  br label %66, !dbg !4640

66:                                               ; preds = %62
  %67 = load ptr, ptr %3, align 8, !dbg !4641
  %68 = getelementptr inbounds %struct.hash_bucket, ptr %67, i32 1, !dbg !4641
  store ptr %68, ptr %3, align 8, !dbg !4641
  br label %16, !dbg !4642, !llvm.loop !4643

69:                                               ; preds = %16
  %70 = load ptr, ptr %2, align 8, !dbg !4645
  call void @free(ptr noundef %70) #17, !dbg !4646
  br label %71, !dbg !4647

71:                                               ; preds = %69, %9
  ret void, !dbg !4647
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @hash_add(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !4648 {
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i32, align 4
  %14 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !4651, metadata !DIExpression()), !dbg !4652
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !4653, metadata !DIExpression()), !dbg !4654
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !4655, metadata !DIExpression()), !dbg !4656
  call void @llvm.dbg.declare(metadata ptr %8, metadata !4657, metadata !DIExpression()), !dbg !4658
  %15 = load ptr, ptr %5, align 8, !dbg !4659
  %16 = getelementptr inbounds %struct.hash, ptr %15, i32 0, i32 1, !dbg !4660
  %17 = load ptr, ptr %16, align 8, !dbg !4660
  %18 = load ptr, ptr %6, align 8, !dbg !4661
  %19 = call i32 %17(ptr noundef %18), !dbg !4659
  store i32 %19, ptr %8, align 4, !dbg !4658
  call void @llvm.dbg.declare(metadata ptr %9, metadata !4662, metadata !DIExpression()), !dbg !4663
  %20 = load i32, ptr %8, align 4, !dbg !4664
  %21 = and i32 %20, 511, !dbg !4665
  store i32 %21, ptr %9, align 4, !dbg !4663
  call void @llvm.dbg.declare(metadata ptr %10, metadata !4666, metadata !DIExpression()), !dbg !4667
  %22 = load ptr, ptr %5, align 8, !dbg !4668
  %23 = getelementptr inbounds %struct.hash, ptr %22, i32 0, i32 5, !dbg !4669
  %24 = getelementptr inbounds [0 x %struct.hash_bucket], ptr %23, i64 0, i64 0, !dbg !4668
  %25 = load i32, ptr %9, align 4, !dbg !4670
  %26 = zext i32 %25 to i64, !dbg !4671
  %27 = getelementptr inbounds %struct.hash_bucket, ptr %24, i64 %26, !dbg !4671
  store ptr %27, ptr %10, align 8, !dbg !4667
  call void @llvm.dbg.declare(metadata ptr %11, metadata !4672, metadata !DIExpression()), !dbg !4673
  call void @llvm.dbg.declare(metadata ptr %12, metadata !4674, metadata !DIExpression()), !dbg !4675
  %28 = load ptr, ptr %10, align 8, !dbg !4676
  %29 = getelementptr inbounds %struct.hash_bucket, ptr %28, i32 0, i32 1, !dbg !4678
  %30 = load i32, ptr %29, align 8, !dbg !4678
  %31 = add i32 %30, 1, !dbg !4679
  %32 = load ptr, ptr %10, align 8, !dbg !4680
  %33 = getelementptr inbounds %struct.hash_bucket, ptr %32, i32 0, i32 2, !dbg !4681
  %34 = load i32, ptr %33, align 4, !dbg !4681
  %35 = icmp uge i32 %31, %34, !dbg !4682
  br i1 %35, label %36, label %60, !dbg !4683

36:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata ptr %13, metadata !4684, metadata !DIExpression()), !dbg !4686
  %37 = load ptr, ptr %10, align 8, !dbg !4687
  %38 = getelementptr inbounds %struct.hash_bucket, ptr %37, i32 0, i32 2, !dbg !4688
  %39 = load i32, ptr %38, align 4, !dbg !4688
  %40 = add i32 %39, 64, !dbg !4689
  store i32 %40, ptr %13, align 4, !dbg !4686
  call void @llvm.dbg.declare(metadata ptr %14, metadata !4690, metadata !DIExpression()), !dbg !4691
  %41 = load ptr, ptr %10, align 8, !dbg !4692
  %42 = getelementptr inbounds %struct.hash_bucket, ptr %41, i32 0, i32 0, !dbg !4693
  %43 = load ptr, ptr %42, align 8, !dbg !4693
  %44 = load i32, ptr %13, align 4, !dbg !4694
  %45 = zext i32 %44 to i64, !dbg !4694
  %46 = call ptr @reallocarray(ptr noundef %43, i64 noundef %45, i64 noundef 24) #17, !dbg !4695
  store ptr %46, ptr %14, align 8, !dbg !4691
  %47 = load ptr, ptr %14, align 8, !dbg !4696
  %48 = icmp eq ptr %47, null, !dbg !4698
  br i1 %48, label %49, label %53, !dbg !4699

49:                                               ; preds = %36
  %50 = call ptr @__errno_location() #21, !dbg !4700
  %51 = load i32, ptr %50, align 4, !dbg !4700
  %52 = sub nsw i32 0, %51, !dbg !4701
  store i32 %52, ptr %4, align 4, !dbg !4702
  br label %144, !dbg !4702

53:                                               ; preds = %36
  %54 = load ptr, ptr %14, align 8, !dbg !4703
  %55 = load ptr, ptr %10, align 8, !dbg !4704
  %56 = getelementptr inbounds %struct.hash_bucket, ptr %55, i32 0, i32 0, !dbg !4705
  store ptr %54, ptr %56, align 8, !dbg !4706
  %57 = load i32, ptr %13, align 4, !dbg !4707
  %58 = load ptr, ptr %10, align 8, !dbg !4708
  %59 = getelementptr inbounds %struct.hash_bucket, ptr %58, i32 0, i32 2, !dbg !4709
  store i32 %57, ptr %59, align 4, !dbg !4710
  br label %60, !dbg !4711

60:                                               ; preds = %53, %3
  %61 = load ptr, ptr %10, align 8, !dbg !4712
  %62 = getelementptr inbounds %struct.hash_bucket, ptr %61, i32 0, i32 0, !dbg !4713
  %63 = load ptr, ptr %62, align 8, !dbg !4713
  store ptr %63, ptr %11, align 8, !dbg !4714
  %64 = load ptr, ptr %11, align 8, !dbg !4715
  %65 = load ptr, ptr %10, align 8, !dbg !4716
  %66 = getelementptr inbounds %struct.hash_bucket, ptr %65, i32 0, i32 1, !dbg !4717
  %67 = load i32, ptr %66, align 8, !dbg !4717
  %68 = zext i32 %67 to i64, !dbg !4718
  %69 = getelementptr inbounds %struct.hash_entry, ptr %64, i64 %68, !dbg !4718
  store ptr %69, ptr %12, align 8, !dbg !4719
  br label %70, !dbg !4720

70:                                               ; preds = %123, %60
  %71 = load ptr, ptr %11, align 8, !dbg !4721
  %72 = load ptr, ptr %12, align 8, !dbg !4724
  %73 = icmp ult ptr %71, %72, !dbg !4725
  br i1 %73, label %74, label %126, !dbg !4726

74:                                               ; preds = %70
  %75 = load i32, ptr %8, align 4, !dbg !4727
  %76 = load ptr, ptr %11, align 8, !dbg !4730
  %77 = getelementptr inbounds %struct.hash_entry, ptr %76, i32 0, i32 2, !dbg !4731
  %78 = load i32, ptr %77, align 8, !dbg !4731
  %79 = icmp ne i32 %75, %78, !dbg !4732
  br i1 %79, label %80, label %81, !dbg !4733

80:                                               ; preds = %74
  br label %123, !dbg !4734

81:                                               ; preds = %74
  %82 = load ptr, ptr %5, align 8, !dbg !4735
  %83 = getelementptr inbounds %struct.hash, ptr %82, i32 0, i32 2, !dbg !4737
  %84 = load ptr, ptr %83, align 8, !dbg !4737
  %85 = load ptr, ptr %6, align 8, !dbg !4738
  %86 = load ptr, ptr %11, align 8, !dbg !4739
  %87 = getelementptr inbounds %struct.hash_entry, ptr %86, i32 0, i32 0, !dbg !4740
  %88 = load ptr, ptr %87, align 8, !dbg !4740
  %89 = call i32 %84(ptr noundef %85, ptr noundef %88), !dbg !4735
  %90 = icmp ne i32 %89, 0, !dbg !4741
  br i1 %90, label %91, label %92, !dbg !4742

91:                                               ; preds = %81
  br label %123, !dbg !4743

92:                                               ; preds = %81
  %93 = load ptr, ptr %5, align 8, !dbg !4744
  %94 = getelementptr inbounds %struct.hash, ptr %93, i32 0, i32 3, !dbg !4746
  %95 = load ptr, ptr %94, align 8, !dbg !4746
  %96 = icmp ne ptr %95, null, !dbg !4744
  br i1 %96, label %97, label %104, !dbg !4747

97:                                               ; preds = %92
  %98 = load ptr, ptr %5, align 8, !dbg !4748
  %99 = getelementptr inbounds %struct.hash, ptr %98, i32 0, i32 3, !dbg !4749
  %100 = load ptr, ptr %99, align 8, !dbg !4749
  %101 = load ptr, ptr %11, align 8, !dbg !4750
  %102 = getelementptr inbounds %struct.hash_entry, ptr %101, i32 0, i32 1, !dbg !4751
  %103 = load ptr, ptr %102, align 8, !dbg !4751
  call void %100(ptr noundef %103), !dbg !4748
  br label %104, !dbg !4748

104:                                              ; preds = %97, %92
  %105 = load ptr, ptr %5, align 8, !dbg !4752
  %106 = getelementptr inbounds %struct.hash, ptr %105, i32 0, i32 4, !dbg !4754
  %107 = load ptr, ptr %106, align 8, !dbg !4754
  %108 = icmp ne ptr %107, null, !dbg !4752
  br i1 %108, label %109, label %116, !dbg !4755

109:                                              ; preds = %104
  %110 = load ptr, ptr %5, align 8, !dbg !4756
  %111 = getelementptr inbounds %struct.hash, ptr %110, i32 0, i32 4, !dbg !4757
  %112 = load ptr, ptr %111, align 8, !dbg !4757
  %113 = load ptr, ptr %11, align 8, !dbg !4758
  %114 = getelementptr inbounds %struct.hash_entry, ptr %113, i32 0, i32 0, !dbg !4759
  %115 = load ptr, ptr %114, align 8, !dbg !4759
  call void %112(ptr noundef %115), !dbg !4756
  br label %116, !dbg !4756

116:                                              ; preds = %109, %104
  %117 = load ptr, ptr %6, align 8, !dbg !4760
  %118 = load ptr, ptr %11, align 8, !dbg !4761
  %119 = getelementptr inbounds %struct.hash_entry, ptr %118, i32 0, i32 0, !dbg !4762
  store ptr %117, ptr %119, align 8, !dbg !4763
  %120 = load ptr, ptr %7, align 8, !dbg !4764
  %121 = load ptr, ptr %11, align 8, !dbg !4765
  %122 = getelementptr inbounds %struct.hash_entry, ptr %121, i32 0, i32 1, !dbg !4766
  store ptr %120, ptr %122, align 8, !dbg !4767
  store i32 0, ptr %4, align 4, !dbg !4768
  br label %144, !dbg !4768

123:                                              ; preds = %91, %80
  %124 = load ptr, ptr %11, align 8, !dbg !4769
  %125 = getelementptr inbounds %struct.hash_entry, ptr %124, i32 1, !dbg !4769
  store ptr %125, ptr %11, align 8, !dbg !4769
  br label %70, !dbg !4770, !llvm.loop !4771

126:                                              ; preds = %70
  %127 = load ptr, ptr %6, align 8, !dbg !4773
  %128 = load ptr, ptr %11, align 8, !dbg !4774
  %129 = getelementptr inbounds %struct.hash_entry, ptr %128, i32 0, i32 0, !dbg !4775
  store ptr %127, ptr %129, align 8, !dbg !4776
  %130 = load ptr, ptr %7, align 8, !dbg !4777
  %131 = load ptr, ptr %11, align 8, !dbg !4778
  %132 = getelementptr inbounds %struct.hash_entry, ptr %131, i32 0, i32 1, !dbg !4779
  store ptr %130, ptr %132, align 8, !dbg !4780
  %133 = load i32, ptr %8, align 4, !dbg !4781
  %134 = load ptr, ptr %11, align 8, !dbg !4782
  %135 = getelementptr inbounds %struct.hash_entry, ptr %134, i32 0, i32 2, !dbg !4783
  store i32 %133, ptr %135, align 8, !dbg !4784
  %136 = load ptr, ptr %10, align 8, !dbg !4785
  %137 = getelementptr inbounds %struct.hash_bucket, ptr %136, i32 0, i32 1, !dbg !4786
  %138 = load i32, ptr %137, align 8, !dbg !4787
  %139 = add i32 %138, 1, !dbg !4787
  store i32 %139, ptr %137, align 8, !dbg !4787
  %140 = load ptr, ptr %5, align 8, !dbg !4788
  %141 = getelementptr inbounds %struct.hash, ptr %140, i32 0, i32 0, !dbg !4789
  %142 = load i32, ptr %141, align 8, !dbg !4790
  %143 = add i32 %142, 1, !dbg !4790
  store i32 %143, ptr %141, align 8, !dbg !4790
  store i32 0, ptr %4, align 4, !dbg !4791
  br label %144, !dbg !4791

144:                                              ; preds = %126, %116, %49
  %145 = load i32, ptr %4, align 4, !dbg !4792
  ret i32 %145, !dbg !4792
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @reallocarray(ptr noundef %0, i64 noundef %1, i64 noundef %2) #0 !dbg !4793 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !4797, metadata !DIExpression()), !dbg !4798
  store i64 %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !4799, metadata !DIExpression()), !dbg !4800
  store i64 %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !4801, metadata !DIExpression()), !dbg !4802
  call void @llvm.dbg.declare(metadata ptr %8, metadata !4803, metadata !DIExpression()), !dbg !4804
  %9 = load i64, ptr %6, align 8, !dbg !4805
  %10 = load i64, ptr %7, align 8, !dbg !4805
  %11 = call zeroext i1 @umull_overflow(i64 noundef %9, i64 noundef %10, ptr noundef %8), !dbg !4805
  br i1 %11, label %12, label %14, !dbg !4807

12:                                               ; preds = %3
  %13 = call ptr @__errno_location() #21, !dbg !4808
  store i32 12, ptr %13, align 4, !dbg !4810
  store ptr null, ptr %4, align 8, !dbg !4811
  br label %18, !dbg !4811

14:                                               ; preds = %3
  %15 = load ptr, ptr %5, align 8, !dbg !4812
  %16 = load i64, ptr %8, align 8, !dbg !4813
  %17 = call ptr @realloc(ptr noundef %15, i64 noundef %16) #22, !dbg !4814
  store ptr %17, ptr %4, align 8, !dbg !4815
  br label %18, !dbg !4815

18:                                               ; preds = %14, %12
  %19 = load ptr, ptr %4, align 8, !dbg !4816
  ret ptr %19, !dbg !4816
}

; Function Attrs: nounwind willreturn memory(none)
declare ptr @__errno_location() #9

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @umull_overflow(i64 noundef %0, i64 noundef %1, ptr noundef %2) #0 !dbg !4817 {
  %4 = alloca i1, align 1
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca ptr, align 8
  store i64 %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !4820, metadata !DIExpression()), !dbg !4821
  store i64 %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !4822, metadata !DIExpression()), !dbg !4823
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !4824, metadata !DIExpression()), !dbg !4825
  %8 = load i64, ptr %5, align 8, !dbg !4826
  %9 = icmp uge i64 %8, 4294967296, !dbg !4828
  br i1 %9, label %13, label %10, !dbg !4829

10:                                               ; preds = %3
  %11 = load i64, ptr %6, align 8, !dbg !4830
  %12 = icmp uge i64 %11, 4294967296, !dbg !4831
  br i1 %12, label %13, label %22, !dbg !4832

13:                                               ; preds = %10, %3
  %14 = load i64, ptr %5, align 8, !dbg !4833
  %15 = icmp ugt i64 %14, 0, !dbg !4834
  br i1 %15, label %16, label %22, !dbg !4835

16:                                               ; preds = %13
  %17 = load i64, ptr %5, align 8, !dbg !4836
  %18 = udiv i64 -1, %17, !dbg !4837
  %19 = load i64, ptr %6, align 8, !dbg !4838
  %20 = icmp ult i64 %18, %19, !dbg !4839
  br i1 %20, label %21, label %22, !dbg !4840

21:                                               ; preds = %16
  store i1 true, ptr %4, align 1, !dbg !4841
  br label %27, !dbg !4841

22:                                               ; preds = %16, %13, %10
  %23 = load i64, ptr %5, align 8, !dbg !4842
  %24 = load i64, ptr %6, align 8, !dbg !4843
  %25 = mul i64 %23, %24, !dbg !4844
  %26 = load ptr, ptr %7, align 8, !dbg !4845
  store i64 %25, ptr %26, align 8, !dbg !4846
  store i1 false, ptr %4, align 1, !dbg !4847
  br label %27, !dbg !4847

27:                                               ; preds = %22, %21
  %28 = load i1, ptr %4, align 1, !dbg !4848
  ret i1 %28, !dbg !4848
}

; Function Attrs: nounwind allocsize(1)
declare ptr @realloc(ptr noundef, i64 noundef) #10

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @hash_add_unique(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !4849 {
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i32, align 4
  %14 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !4850, metadata !DIExpression()), !dbg !4851
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !4852, metadata !DIExpression()), !dbg !4853
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !4854, metadata !DIExpression()), !dbg !4855
  call void @llvm.dbg.declare(metadata ptr %8, metadata !4856, metadata !DIExpression()), !dbg !4857
  %15 = load ptr, ptr %5, align 8, !dbg !4858
  %16 = getelementptr inbounds %struct.hash, ptr %15, i32 0, i32 1, !dbg !4859
  %17 = load ptr, ptr %16, align 8, !dbg !4859
  %18 = load ptr, ptr %6, align 8, !dbg !4860
  %19 = call i32 %17(ptr noundef %18), !dbg !4858
  store i32 %19, ptr %8, align 4, !dbg !4857
  call void @llvm.dbg.declare(metadata ptr %9, metadata !4861, metadata !DIExpression()), !dbg !4862
  %20 = load i32, ptr %8, align 4, !dbg !4863
  %21 = and i32 %20, 511, !dbg !4864
  store i32 %21, ptr %9, align 4, !dbg !4862
  call void @llvm.dbg.declare(metadata ptr %10, metadata !4865, metadata !DIExpression()), !dbg !4866
  %22 = load ptr, ptr %5, align 8, !dbg !4867
  %23 = getelementptr inbounds %struct.hash, ptr %22, i32 0, i32 5, !dbg !4868
  %24 = getelementptr inbounds [0 x %struct.hash_bucket], ptr %23, i64 0, i64 0, !dbg !4867
  %25 = load i32, ptr %9, align 4, !dbg !4869
  %26 = zext i32 %25 to i64, !dbg !4870
  %27 = getelementptr inbounds %struct.hash_bucket, ptr %24, i64 %26, !dbg !4870
  store ptr %27, ptr %10, align 8, !dbg !4866
  call void @llvm.dbg.declare(metadata ptr %11, metadata !4871, metadata !DIExpression()), !dbg !4872
  call void @llvm.dbg.declare(metadata ptr %12, metadata !4873, metadata !DIExpression()), !dbg !4874
  %28 = load ptr, ptr %10, align 8, !dbg !4875
  %29 = getelementptr inbounds %struct.hash_bucket, ptr %28, i32 0, i32 1, !dbg !4877
  %30 = load i32, ptr %29, align 8, !dbg !4877
  %31 = add i32 %30, 1, !dbg !4878
  %32 = load ptr, ptr %10, align 8, !dbg !4879
  %33 = getelementptr inbounds %struct.hash_bucket, ptr %32, i32 0, i32 2, !dbg !4880
  %34 = load i32, ptr %33, align 4, !dbg !4880
  %35 = icmp uge i32 %31, %34, !dbg !4881
  br i1 %35, label %36, label %60, !dbg !4882

36:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata ptr %13, metadata !4883, metadata !DIExpression()), !dbg !4885
  %37 = load ptr, ptr %10, align 8, !dbg !4886
  %38 = getelementptr inbounds %struct.hash_bucket, ptr %37, i32 0, i32 2, !dbg !4887
  %39 = load i32, ptr %38, align 4, !dbg !4887
  %40 = add i32 %39, 64, !dbg !4888
  store i32 %40, ptr %13, align 4, !dbg !4885
  call void @llvm.dbg.declare(metadata ptr %14, metadata !4889, metadata !DIExpression()), !dbg !4890
  %41 = load ptr, ptr %10, align 8, !dbg !4891
  %42 = getelementptr inbounds %struct.hash_bucket, ptr %41, i32 0, i32 0, !dbg !4892
  %43 = load ptr, ptr %42, align 8, !dbg !4892
  %44 = load i32, ptr %13, align 4, !dbg !4893
  %45 = zext i32 %44 to i64, !dbg !4893
  %46 = call ptr @reallocarray(ptr noundef %43, i64 noundef %45, i64 noundef 24) #17, !dbg !4894
  store ptr %46, ptr %14, align 8, !dbg !4890
  %47 = load ptr, ptr %14, align 8, !dbg !4895
  %48 = icmp eq ptr %47, null, !dbg !4897
  br i1 %48, label %49, label %53, !dbg !4898

49:                                               ; preds = %36
  %50 = call ptr @__errno_location() #21, !dbg !4899
  %51 = load i32, ptr %50, align 4, !dbg !4899
  %52 = sub nsw i32 0, %51, !dbg !4900
  store i32 %52, ptr %4, align 4, !dbg !4901
  br label %114, !dbg !4901

53:                                               ; preds = %36
  %54 = load ptr, ptr %14, align 8, !dbg !4902
  %55 = load ptr, ptr %10, align 8, !dbg !4903
  %56 = getelementptr inbounds %struct.hash_bucket, ptr %55, i32 0, i32 0, !dbg !4904
  store ptr %54, ptr %56, align 8, !dbg !4905
  %57 = load i32, ptr %13, align 4, !dbg !4906
  %58 = load ptr, ptr %10, align 8, !dbg !4907
  %59 = getelementptr inbounds %struct.hash_bucket, ptr %58, i32 0, i32 2, !dbg !4908
  store i32 %57, ptr %59, align 4, !dbg !4909
  br label %60, !dbg !4910

60:                                               ; preds = %53, %3
  %61 = load ptr, ptr %10, align 8, !dbg !4911
  %62 = getelementptr inbounds %struct.hash_bucket, ptr %61, i32 0, i32 0, !dbg !4912
  %63 = load ptr, ptr %62, align 8, !dbg !4912
  store ptr %63, ptr %11, align 8, !dbg !4913
  %64 = load ptr, ptr %11, align 8, !dbg !4914
  %65 = load ptr, ptr %10, align 8, !dbg !4915
  %66 = getelementptr inbounds %struct.hash_bucket, ptr %65, i32 0, i32 1, !dbg !4916
  %67 = load i32, ptr %66, align 8, !dbg !4916
  %68 = zext i32 %67 to i64, !dbg !4917
  %69 = getelementptr inbounds %struct.hash_entry, ptr %64, i64 %68, !dbg !4917
  store ptr %69, ptr %12, align 8, !dbg !4918
  br label %70, !dbg !4919

70:                                               ; preds = %93, %60
  %71 = load ptr, ptr %11, align 8, !dbg !4920
  %72 = load ptr, ptr %12, align 8, !dbg !4923
  %73 = icmp ult ptr %71, %72, !dbg !4924
  br i1 %73, label %74, label %96, !dbg !4925

74:                                               ; preds = %70
  %75 = load i32, ptr %8, align 4, !dbg !4926
  %76 = load ptr, ptr %11, align 8, !dbg !4929
  %77 = getelementptr inbounds %struct.hash_entry, ptr %76, i32 0, i32 2, !dbg !4930
  %78 = load i32, ptr %77, align 8, !dbg !4930
  %79 = icmp ne i32 %75, %78, !dbg !4931
  br i1 %79, label %80, label %81, !dbg !4932

80:                                               ; preds = %74
  br label %93, !dbg !4933

81:                                               ; preds = %74
  %82 = load ptr, ptr %5, align 8, !dbg !4934
  %83 = getelementptr inbounds %struct.hash, ptr %82, i32 0, i32 2, !dbg !4936
  %84 = load ptr, ptr %83, align 8, !dbg !4936
  %85 = load ptr, ptr %6, align 8, !dbg !4937
  %86 = load ptr, ptr %11, align 8, !dbg !4938
  %87 = getelementptr inbounds %struct.hash_entry, ptr %86, i32 0, i32 0, !dbg !4939
  %88 = load ptr, ptr %87, align 8, !dbg !4939
  %89 = call i32 %84(ptr noundef %85, ptr noundef %88), !dbg !4934
  %90 = icmp eq i32 %89, 0, !dbg !4940
  br i1 %90, label %91, label %92, !dbg !4941

91:                                               ; preds = %81
  store i32 -17, ptr %4, align 4, !dbg !4942
  br label %114, !dbg !4942

92:                                               ; preds = %81
  br label %93, !dbg !4943

93:                                               ; preds = %92, %80
  %94 = load ptr, ptr %11, align 8, !dbg !4944
  %95 = getelementptr inbounds %struct.hash_entry, ptr %94, i32 1, !dbg !4944
  store ptr %95, ptr %11, align 8, !dbg !4944
  br label %70, !dbg !4945, !llvm.loop !4946

96:                                               ; preds = %70
  %97 = load ptr, ptr %6, align 8, !dbg !4948
  %98 = load ptr, ptr %11, align 8, !dbg !4949
  %99 = getelementptr inbounds %struct.hash_entry, ptr %98, i32 0, i32 0, !dbg !4950
  store ptr %97, ptr %99, align 8, !dbg !4951
  %100 = load ptr, ptr %7, align 8, !dbg !4952
  %101 = load ptr, ptr %11, align 8, !dbg !4953
  %102 = getelementptr inbounds %struct.hash_entry, ptr %101, i32 0, i32 1, !dbg !4954
  store ptr %100, ptr %102, align 8, !dbg !4955
  %103 = load i32, ptr %8, align 4, !dbg !4956
  %104 = load ptr, ptr %11, align 8, !dbg !4957
  %105 = getelementptr inbounds %struct.hash_entry, ptr %104, i32 0, i32 2, !dbg !4958
  store i32 %103, ptr %105, align 8, !dbg !4959
  %106 = load ptr, ptr %10, align 8, !dbg !4960
  %107 = getelementptr inbounds %struct.hash_bucket, ptr %106, i32 0, i32 1, !dbg !4961
  %108 = load i32, ptr %107, align 8, !dbg !4962
  %109 = add i32 %108, 1, !dbg !4962
  store i32 %109, ptr %107, align 8, !dbg !4962
  %110 = load ptr, ptr %5, align 8, !dbg !4963
  %111 = getelementptr inbounds %struct.hash, ptr %110, i32 0, i32 0, !dbg !4964
  %112 = load i32, ptr %111, align 8, !dbg !4965
  %113 = add i32 %112, 1, !dbg !4965
  store i32 %113, ptr %111, align 8, !dbg !4965
  store i32 0, ptr %4, align 4, !dbg !4966
  br label %114, !dbg !4966

114:                                              ; preds = %96, %91, %49
  %115 = load i32, ptr %4, align 4, !dbg !4967
  ret i32 %115, !dbg !4967
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @hash_find(ptr noundef %0, ptr noundef %1) #0 !dbg !4968 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !4973, metadata !DIExpression()), !dbg !4974
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !4975, metadata !DIExpression()), !dbg !4976
  call void @llvm.dbg.declare(metadata ptr %6, metadata !4977, metadata !DIExpression()), !dbg !4980
  %7 = load ptr, ptr %4, align 8, !dbg !4981
  %8 = load ptr, ptr %5, align 8, !dbg !4982
  %9 = load ptr, ptr %4, align 8, !dbg !4983
  %10 = getelementptr inbounds %struct.hash, ptr %9, i32 0, i32 1, !dbg !4984
  %11 = load ptr, ptr %10, align 8, !dbg !4984
  %12 = load ptr, ptr %5, align 8, !dbg !4985
  %13 = call i32 %11(ptr noundef %12), !dbg !4983
  %14 = call ptr @hash_find_entry(ptr noundef %7, ptr noundef %8, i32 noundef %13), !dbg !4986
  store ptr %14, ptr %6, align 8, !dbg !4987
  %15 = load ptr, ptr %6, align 8, !dbg !4988
  %16 = icmp ne ptr %15, null, !dbg !4988
  br i1 %16, label %17, label %21, !dbg !4990

17:                                               ; preds = %2
  %18 = load ptr, ptr %6, align 8, !dbg !4991
  %19 = getelementptr inbounds %struct.hash_entry, ptr %18, i32 0, i32 1, !dbg !4992
  %20 = load ptr, ptr %19, align 8, !dbg !4992
  store ptr %20, ptr %3, align 8, !dbg !4993
  br label %22, !dbg !4993

21:                                               ; preds = %2
  store ptr null, ptr %3, align 8, !dbg !4994
  br label %22, !dbg !4994

22:                                               ; preds = %21, %17
  %23 = load ptr, ptr %3, align 8, !dbg !4995
  ret ptr %23, !dbg !4995
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @hash_find_entry(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 !dbg !4996 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !4999, metadata !DIExpression()), !dbg !5000
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !5001, metadata !DIExpression()), !dbg !5002
  store i32 %2, ptr %7, align 4
  call void @llvm.dbg.declare(metadata ptr %7, metadata !5003, metadata !DIExpression()), !dbg !5004
  call void @llvm.dbg.declare(metadata ptr %8, metadata !5005, metadata !DIExpression()), !dbg !5006
  %12 = load i32, ptr %7, align 4, !dbg !5007
  %13 = and i32 %12, 511, !dbg !5008
  store i32 %13, ptr %8, align 4, !dbg !5006
  call void @llvm.dbg.declare(metadata ptr %9, metadata !5009, metadata !DIExpression()), !dbg !5012
  %14 = load ptr, ptr %5, align 8, !dbg !5013
  %15 = getelementptr inbounds %struct.hash, ptr %14, i32 0, i32 5, !dbg !5014
  %16 = getelementptr inbounds [0 x %struct.hash_bucket], ptr %15, i64 0, i64 0, !dbg !5013
  %17 = load i32, ptr %8, align 4, !dbg !5015
  %18 = zext i32 %17 to i64, !dbg !5016
  %19 = getelementptr inbounds %struct.hash_bucket, ptr %16, i64 %18, !dbg !5016
  store ptr %19, ptr %9, align 8, !dbg !5012
  call void @llvm.dbg.declare(metadata ptr %10, metadata !5017, metadata !DIExpression()), !dbg !5018
  call void @llvm.dbg.declare(metadata ptr %11, metadata !5019, metadata !DIExpression()), !dbg !5020
  %20 = load ptr, ptr %9, align 8, !dbg !5021
  %21 = getelementptr inbounds %struct.hash_bucket, ptr %20, i32 0, i32 0, !dbg !5022
  %22 = load ptr, ptr %21, align 8, !dbg !5022
  store ptr %22, ptr %10, align 8, !dbg !5023
  %23 = load ptr, ptr %10, align 8, !dbg !5024
  %24 = load ptr, ptr %9, align 8, !dbg !5025
  %25 = getelementptr inbounds %struct.hash_bucket, ptr %24, i32 0, i32 1, !dbg !5026
  %26 = load i32, ptr %25, align 8, !dbg !5026
  %27 = zext i32 %26 to i64, !dbg !5027
  %28 = getelementptr inbounds %struct.hash_entry, ptr %23, i64 %27, !dbg !5027
  store ptr %28, ptr %11, align 8, !dbg !5028
  br label %29, !dbg !5029

29:                                               ; preds = %53, %3
  %30 = load ptr, ptr %10, align 8, !dbg !5030
  %31 = load ptr, ptr %11, align 8, !dbg !5033
  %32 = icmp ult ptr %30, %31, !dbg !5034
  br i1 %32, label %33, label %56, !dbg !5035

33:                                               ; preds = %29
  %34 = load i32, ptr %7, align 4, !dbg !5036
  %35 = load ptr, ptr %10, align 8, !dbg !5039
  %36 = getelementptr inbounds %struct.hash_entry, ptr %35, i32 0, i32 2, !dbg !5040
  %37 = load i32, ptr %36, align 8, !dbg !5040
  %38 = icmp ne i32 %34, %37, !dbg !5041
  br i1 %38, label %39, label %40, !dbg !5042

39:                                               ; preds = %33
  br label %53, !dbg !5043

40:                                               ; preds = %33
  %41 = load ptr, ptr %5, align 8, !dbg !5044
  %42 = getelementptr inbounds %struct.hash, ptr %41, i32 0, i32 2, !dbg !5046
  %43 = load ptr, ptr %42, align 8, !dbg !5046
  %44 = load ptr, ptr %6, align 8, !dbg !5047
  %45 = load ptr, ptr %10, align 8, !dbg !5048
  %46 = getelementptr inbounds %struct.hash_entry, ptr %45, i32 0, i32 0, !dbg !5049
  %47 = load ptr, ptr %46, align 8, !dbg !5049
  %48 = call i32 %43(ptr noundef %44, ptr noundef %47), !dbg !5044
  %49 = icmp eq i32 %48, 0, !dbg !5050
  br i1 %49, label %50, label %52, !dbg !5051

50:                                               ; preds = %40
  %51 = load ptr, ptr %10, align 8, !dbg !5052
  store ptr %51, ptr %4, align 8, !dbg !5053
  br label %57, !dbg !5053

52:                                               ; preds = %40
  br label %53, !dbg !5054

53:                                               ; preds = %52, %39
  %54 = load ptr, ptr %10, align 8, !dbg !5055
  %55 = getelementptr inbounds %struct.hash_entry, ptr %54, i32 1, !dbg !5055
  store ptr %55, ptr %10, align 8, !dbg !5055
  br label %29, !dbg !5056, !llvm.loop !5057

56:                                               ; preds = %29
  store ptr null, ptr %4, align 8, !dbg !5059
  br label %57, !dbg !5059

57:                                               ; preds = %56, %50
  %58 = load ptr, ptr %4, align 8, !dbg !5060
  ret ptr %58, !dbg !5060
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @hash_del(ptr noundef %0, ptr noundef %1) #0 !dbg !5061 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !5064, metadata !DIExpression()), !dbg !5065
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !5066, metadata !DIExpression()), !dbg !5067
  call void @llvm.dbg.declare(metadata ptr %6, metadata !5068, metadata !DIExpression()), !dbg !5069
  %14 = load ptr, ptr %4, align 8, !dbg !5070
  %15 = getelementptr inbounds %struct.hash, ptr %14, i32 0, i32 1, !dbg !5071
  %16 = load ptr, ptr %15, align 8, !dbg !5071
  %17 = load ptr, ptr %5, align 8, !dbg !5072
  %18 = call i32 %16(ptr noundef %17), !dbg !5070
  store i32 %18, ptr %6, align 4, !dbg !5069
  call void @llvm.dbg.declare(metadata ptr %7, metadata !5073, metadata !DIExpression()), !dbg !5074
  %19 = load i32, ptr %6, align 4, !dbg !5075
  %20 = and i32 %19, 511, !dbg !5076
  store i32 %20, ptr %7, align 4, !dbg !5074
  call void @llvm.dbg.declare(metadata ptr %8, metadata !5077, metadata !DIExpression()), !dbg !5078
  call void @llvm.dbg.declare(metadata ptr %9, metadata !5079, metadata !DIExpression()), !dbg !5080
  call void @llvm.dbg.declare(metadata ptr %10, metadata !5081, metadata !DIExpression()), !dbg !5082
  %21 = load ptr, ptr %4, align 8, !dbg !5083
  %22 = getelementptr inbounds %struct.hash, ptr %21, i32 0, i32 5, !dbg !5084
  %23 = getelementptr inbounds [0 x %struct.hash_bucket], ptr %22, i64 0, i64 0, !dbg !5083
  %24 = load i32, ptr %7, align 4, !dbg !5085
  %25 = zext i32 %24 to i64, !dbg !5086
  %26 = getelementptr inbounds %struct.hash_bucket, ptr %23, i64 %25, !dbg !5086
  store ptr %26, ptr %10, align 8, !dbg !5082
  call void @llvm.dbg.declare(metadata ptr %11, metadata !5087, metadata !DIExpression()), !dbg !5088
  call void @llvm.dbg.declare(metadata ptr %12, metadata !5089, metadata !DIExpression()), !dbg !5090
  %27 = load ptr, ptr %4, align 8, !dbg !5091
  %28 = load ptr, ptr %5, align 8, !dbg !5092
  %29 = load i32, ptr %6, align 4, !dbg !5093
  %30 = call ptr @hash_find_entry(ptr noundef %27, ptr noundef %28, i32 noundef %29), !dbg !5094
  store ptr %30, ptr %11, align 8, !dbg !5095
  %31 = load ptr, ptr %11, align 8, !dbg !5096
  %32 = icmp eq ptr %31, null, !dbg !5098
  br i1 %32, label %33, label %34, !dbg !5099

33:                                               ; preds = %2
  store i32 -2, ptr %3, align 4, !dbg !5100
  br label %118, !dbg !5100

34:                                               ; preds = %2
  %35 = load ptr, ptr %4, align 8, !dbg !5101
  %36 = getelementptr inbounds %struct.hash, ptr %35, i32 0, i32 3, !dbg !5103
  %37 = load ptr, ptr %36, align 8, !dbg !5103
  %38 = icmp ne ptr %37, null, !dbg !5101
  br i1 %38, label %39, label %46, !dbg !5104

39:                                               ; preds = %34
  %40 = load ptr, ptr %4, align 8, !dbg !5105
  %41 = getelementptr inbounds %struct.hash, ptr %40, i32 0, i32 3, !dbg !5106
  %42 = load ptr, ptr %41, align 8, !dbg !5106
  %43 = load ptr, ptr %11, align 8, !dbg !5107
  %44 = getelementptr inbounds %struct.hash_entry, ptr %43, i32 0, i32 1, !dbg !5108
  %45 = load ptr, ptr %44, align 8, !dbg !5108
  call void %42(ptr noundef %45), !dbg !5105
  br label %46, !dbg !5105

46:                                               ; preds = %39, %34
  %47 = load ptr, ptr %4, align 8, !dbg !5109
  %48 = getelementptr inbounds %struct.hash, ptr %47, i32 0, i32 4, !dbg !5111
  %49 = load ptr, ptr %48, align 8, !dbg !5111
  %50 = icmp ne ptr %49, null, !dbg !5109
  br i1 %50, label %51, label %58, !dbg !5112

51:                                               ; preds = %46
  %52 = load ptr, ptr %4, align 8, !dbg !5113
  %53 = getelementptr inbounds %struct.hash, ptr %52, i32 0, i32 4, !dbg !5114
  %54 = load ptr, ptr %53, align 8, !dbg !5114
  %55 = load ptr, ptr %11, align 8, !dbg !5115
  %56 = getelementptr inbounds %struct.hash_entry, ptr %55, i32 0, i32 0, !dbg !5116
  %57 = load ptr, ptr %56, align 8, !dbg !5116
  call void %54(ptr noundef %57), !dbg !5113
  br label %58, !dbg !5113

58:                                               ; preds = %51, %46
  %59 = load ptr, ptr %10, align 8, !dbg !5117
  %60 = getelementptr inbounds %struct.hash_bucket, ptr %59, i32 0, i32 0, !dbg !5118
  %61 = load ptr, ptr %60, align 8, !dbg !5118
  %62 = load ptr, ptr %10, align 8, !dbg !5119
  %63 = getelementptr inbounds %struct.hash_bucket, ptr %62, i32 0, i32 1, !dbg !5120
  %64 = load i32, ptr %63, align 8, !dbg !5120
  %65 = zext i32 %64 to i64, !dbg !5121
  %66 = getelementptr inbounds %struct.hash_entry, ptr %61, i64 %65, !dbg !5121
  store ptr %66, ptr %12, align 8, !dbg !5122
  %67 = load ptr, ptr %11, align 8, !dbg !5123
  %68 = load ptr, ptr %11, align 8, !dbg !5124
  %69 = getelementptr inbounds %struct.hash_entry, ptr %68, i64 1, !dbg !5125
  %70 = load ptr, ptr %12, align 8, !dbg !5126
  %71 = load ptr, ptr %11, align 8, !dbg !5127
  %72 = ptrtoint ptr %70 to i64, !dbg !5128
  %73 = ptrtoint ptr %71 to i64, !dbg !5128
  %74 = sub i64 %72, %73, !dbg !5128
  %75 = sdiv exact i64 %74, 24, !dbg !5128
  %76 = mul i64 %75, 24, !dbg !5129
  call void @llvm.memmove.p0.p0.i64(ptr align 8 %67, ptr align 8 %69, i64 %76, i1 false), !dbg !5130
  %77 = load ptr, ptr %10, align 8, !dbg !5131
  %78 = getelementptr inbounds %struct.hash_bucket, ptr %77, i32 0, i32 1, !dbg !5132
  %79 = load i32, ptr %78, align 8, !dbg !5133
  %80 = add i32 %79, -1, !dbg !5133
  store i32 %80, ptr %78, align 8, !dbg !5133
  %81 = load ptr, ptr %4, align 8, !dbg !5134
  %82 = getelementptr inbounds %struct.hash, ptr %81, i32 0, i32 0, !dbg !5135
  %83 = load i32, ptr %82, align 8, !dbg !5136
  %84 = add i32 %83, -1, !dbg !5136
  store i32 %84, ptr %82, align 8, !dbg !5136
  %85 = load ptr, ptr %10, align 8, !dbg !5137
  %86 = getelementptr inbounds %struct.hash_bucket, ptr %85, i32 0, i32 1, !dbg !5138
  %87 = load i32, ptr %86, align 8, !dbg !5138
  %88 = udiv i32 %87, 64, !dbg !5139
  store i32 %88, ptr %8, align 4, !dbg !5140
  %89 = load ptr, ptr %10, align 8, !dbg !5141
  %90 = getelementptr inbounds %struct.hash_bucket, ptr %89, i32 0, i32 2, !dbg !5142
  %91 = load i32, ptr %90, align 4, !dbg !5142
  %92 = udiv i32 %91, 64, !dbg !5143
  store i32 %92, ptr %9, align 4, !dbg !5144
  %93 = load i32, ptr %8, align 4, !dbg !5145
  %94 = add i32 %93, 1, !dbg !5147
  %95 = load i32, ptr %9, align 4, !dbg !5148
  %96 = icmp ult i32 %94, %95, !dbg !5149
  br i1 %96, label %97, label %117, !dbg !5150

97:                                               ; preds = %58
  call void @llvm.dbg.declare(metadata ptr %13, metadata !5151, metadata !DIExpression()), !dbg !5153
  %98 = load ptr, ptr %10, align 8, !dbg !5154
  %99 = getelementptr inbounds %struct.hash_bucket, ptr %98, i32 0, i32 0, !dbg !5155
  %100 = load ptr, ptr %99, align 8, !dbg !5155
  %101 = load i32, ptr %8, align 4, !dbg !5156
  %102 = add i32 %101, 1, !dbg !5157
  %103 = zext i32 %102 to i64, !dbg !5156
  %104 = call ptr @reallocarray(ptr noundef %100, i64 noundef %103, i64 noundef 1536) #17, !dbg !5158
  store ptr %104, ptr %13, align 8, !dbg !5153
  %105 = load ptr, ptr %13, align 8, !dbg !5159
  %106 = icmp ne ptr %105, null, !dbg !5159
  br i1 %106, label %107, label %116, !dbg !5161

107:                                              ; preds = %97
  %108 = load ptr, ptr %13, align 8, !dbg !5162
  %109 = load ptr, ptr %10, align 8, !dbg !5164
  %110 = getelementptr inbounds %struct.hash_bucket, ptr %109, i32 0, i32 0, !dbg !5165
  store ptr %108, ptr %110, align 8, !dbg !5166
  %111 = load i32, ptr %8, align 4, !dbg !5167
  %112 = add i32 %111, 1, !dbg !5168
  %113 = mul i32 %112, 64, !dbg !5169
  %114 = load ptr, ptr %10, align 8, !dbg !5170
  %115 = getelementptr inbounds %struct.hash_bucket, ptr %114, i32 0, i32 2, !dbg !5171
  store i32 %113, ptr %115, align 4, !dbg !5172
  br label %116, !dbg !5173

116:                                              ; preds = %107, %97
  br label %117, !dbg !5174

117:                                              ; preds = %116, %58
  store i32 0, ptr %3, align 4, !dbg !5175
  br label %118, !dbg !5175

118:                                              ; preds = %117, %33
  %119 = load i32, ptr %3, align 4, !dbg !5176
  ret i32 %119, !dbg !5176
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @hash_get_count(ptr noundef %0) #0 !dbg !5177 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !5180, metadata !DIExpression()), !dbg !5181
  %3 = load ptr, ptr %2, align 8, !dbg !5182
  %4 = getelementptr inbounds %struct.hash, ptr %3, i32 0, i32 0, !dbg !5183
  %5 = load i32, ptr %4, align 8, !dbg !5183
  ret i32 %5, !dbg !5184
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_iter_init(ptr noundef %0, ptr noundef %1) #0 !dbg !5185 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !5194, metadata !DIExpression()), !dbg !5195
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !5196, metadata !DIExpression()), !dbg !5197
  %5 = load ptr, ptr %3, align 8, !dbg !5198
  %6 = load ptr, ptr %4, align 8, !dbg !5199
  %7 = getelementptr inbounds %struct.hash_bucket, ptr %6, i32 0, i32 0, !dbg !5200
  store ptr %5, ptr %7, align 8, !dbg !5201
  %8 = load ptr, ptr %4, align 8, !dbg !5202
  %9 = getelementptr inbounds %struct.hash_bucket, ptr %8, i32 0, i32 1, !dbg !5203
  store i32 0, ptr %9, align 8, !dbg !5204
  %10 = load ptr, ptr %4, align 8, !dbg !5205
  %11 = getelementptr inbounds %struct.hash_bucket, ptr %10, i32 0, i32 2, !dbg !5206
  store i32 -1, ptr %11, align 4, !dbg !5207
  ret void, !dbg !5208
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hash_iter_next(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !5209 {
  %4 = alloca i1, align 1
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !5213, metadata !DIExpression()), !dbg !5214
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !5215, metadata !DIExpression()), !dbg !5216
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !5217, metadata !DIExpression()), !dbg !5218
  call void @llvm.dbg.declare(metadata ptr %8, metadata !5219, metadata !DIExpression()), !dbg !5220
  %10 = load ptr, ptr %5, align 8, !dbg !5221
  %11 = getelementptr inbounds %struct.hash_bucket, ptr %10, i32 0, i32 0, !dbg !5222
  %12 = load ptr, ptr %11, align 8, !dbg !5222
  %13 = getelementptr inbounds %struct.hash, ptr %12, i32 0, i32 5, !dbg !5223
  %14 = getelementptr inbounds [0 x %struct.hash_bucket], ptr %13, i64 0, i64 0, !dbg !5221
  %15 = load ptr, ptr %5, align 8, !dbg !5224
  %16 = getelementptr inbounds %struct.hash_bucket, ptr %15, i32 0, i32 1, !dbg !5225
  %17 = load i32, ptr %16, align 8, !dbg !5225
  %18 = zext i32 %17 to i64, !dbg !5226
  %19 = getelementptr inbounds %struct.hash_bucket, ptr %14, i64 %18, !dbg !5226
  store ptr %19, ptr %8, align 8, !dbg !5220
  call void @llvm.dbg.declare(metadata ptr %9, metadata !5227, metadata !DIExpression()), !dbg !5228
  %20 = load ptr, ptr %5, align 8, !dbg !5229
  %21 = getelementptr inbounds %struct.hash_bucket, ptr %20, i32 0, i32 2, !dbg !5230
  %22 = load i32, ptr %21, align 4, !dbg !5231
  %23 = add nsw i32 %22, 1, !dbg !5231
  store i32 %23, ptr %21, align 4, !dbg !5231
  %24 = load ptr, ptr %5, align 8, !dbg !5232
  %25 = getelementptr inbounds %struct.hash_bucket, ptr %24, i32 0, i32 2, !dbg !5234
  %26 = load i32, ptr %25, align 4, !dbg !5234
  %27 = load ptr, ptr %8, align 8, !dbg !5235
  %28 = getelementptr inbounds %struct.hash_bucket, ptr %27, i32 0, i32 1, !dbg !5236
  %29 = load i32, ptr %28, align 8, !dbg !5236
  %30 = icmp uge i32 %26, %29, !dbg !5237
  br i1 %30, label %31, label %72, !dbg !5238

31:                                               ; preds = %3
  %32 = load ptr, ptr %5, align 8, !dbg !5239
  %33 = getelementptr inbounds %struct.hash_bucket, ptr %32, i32 0, i32 2, !dbg !5241
  store i32 0, ptr %33, align 4, !dbg !5242
  %34 = load ptr, ptr %5, align 8, !dbg !5243
  %35 = getelementptr inbounds %struct.hash_bucket, ptr %34, i32 0, i32 1, !dbg !5245
  %36 = load i32, ptr %35, align 8, !dbg !5246
  %37 = add i32 %36, 1, !dbg !5246
  store i32 %37, ptr %35, align 8, !dbg !5246
  br label %38, !dbg !5243

38:                                               ; preds = %60, %31
  %39 = load ptr, ptr %5, align 8, !dbg !5247
  %40 = getelementptr inbounds %struct.hash_bucket, ptr %39, i32 0, i32 1, !dbg !5249
  %41 = load i32, ptr %40, align 8, !dbg !5249
  %42 = icmp ult i32 %41, 512, !dbg !5250
  br i1 %42, label %43, label %65, !dbg !5251

43:                                               ; preds = %38
  %44 = load ptr, ptr %5, align 8, !dbg !5252
  %45 = getelementptr inbounds %struct.hash_bucket, ptr %44, i32 0, i32 0, !dbg !5254
  %46 = load ptr, ptr %45, align 8, !dbg !5254
  %47 = getelementptr inbounds %struct.hash, ptr %46, i32 0, i32 5, !dbg !5255
  %48 = getelementptr inbounds [0 x %struct.hash_bucket], ptr %47, i64 0, i64 0, !dbg !5252
  %49 = load ptr, ptr %5, align 8, !dbg !5256
  %50 = getelementptr inbounds %struct.hash_bucket, ptr %49, i32 0, i32 1, !dbg !5257
  %51 = load i32, ptr %50, align 8, !dbg !5257
  %52 = zext i32 %51 to i64, !dbg !5258
  %53 = getelementptr inbounds %struct.hash_bucket, ptr %48, i64 %52, !dbg !5258
  store ptr %53, ptr %8, align 8, !dbg !5259
  %54 = load ptr, ptr %8, align 8, !dbg !5260
  %55 = getelementptr inbounds %struct.hash_bucket, ptr %54, i32 0, i32 1, !dbg !5262
  %56 = load i32, ptr %55, align 8, !dbg !5262
  %57 = icmp ugt i32 %56, 0, !dbg !5263
  br i1 %57, label %58, label %59, !dbg !5264

58:                                               ; preds = %43
  br label %65, !dbg !5265

59:                                               ; preds = %43
  br label %60, !dbg !5266

60:                                               ; preds = %59
  %61 = load ptr, ptr %5, align 8, !dbg !5267
  %62 = getelementptr inbounds %struct.hash_bucket, ptr %61, i32 0, i32 1, !dbg !5268
  %63 = load i32, ptr %62, align 8, !dbg !5269
  %64 = add i32 %63, 1, !dbg !5269
  store i32 %64, ptr %62, align 8, !dbg !5269
  br label %38, !dbg !5270, !llvm.loop !5271

65:                                               ; preds = %58, %38
  %66 = load ptr, ptr %5, align 8, !dbg !5273
  %67 = getelementptr inbounds %struct.hash_bucket, ptr %66, i32 0, i32 1, !dbg !5275
  %68 = load i32, ptr %67, align 8, !dbg !5275
  %69 = icmp uge i32 %68, 512, !dbg !5276
  br i1 %69, label %70, label %71, !dbg !5277

70:                                               ; preds = %65
  store i1 false, ptr %4, align 1, !dbg !5278
  br label %97, !dbg !5278

71:                                               ; preds = %65
  br label %72, !dbg !5279

72:                                               ; preds = %71, %3
  %73 = load ptr, ptr %8, align 8, !dbg !5280
  %74 = getelementptr inbounds %struct.hash_bucket, ptr %73, i32 0, i32 0, !dbg !5281
  %75 = load ptr, ptr %74, align 8, !dbg !5281
  %76 = load ptr, ptr %5, align 8, !dbg !5282
  %77 = getelementptr inbounds %struct.hash_bucket, ptr %76, i32 0, i32 2, !dbg !5283
  %78 = load i32, ptr %77, align 4, !dbg !5283
  %79 = sext i32 %78 to i64, !dbg !5284
  %80 = getelementptr inbounds %struct.hash_entry, ptr %75, i64 %79, !dbg !5284
  store ptr %80, ptr %9, align 8, !dbg !5285
  %81 = load ptr, ptr %7, align 8, !dbg !5286
  %82 = icmp ne ptr %81, null, !dbg !5288
  br i1 %82, label %83, label %88, !dbg !5289

83:                                               ; preds = %72
  %84 = load ptr, ptr %9, align 8, !dbg !5290
  %85 = getelementptr inbounds %struct.hash_entry, ptr %84, i32 0, i32 1, !dbg !5291
  %86 = load ptr, ptr %85, align 8, !dbg !5291
  %87 = load ptr, ptr %7, align 8, !dbg !5292
  store ptr %86, ptr %87, align 8, !dbg !5293
  br label %88, !dbg !5294

88:                                               ; preds = %83, %72
  %89 = load ptr, ptr %6, align 8, !dbg !5295
  %90 = icmp ne ptr %89, null, !dbg !5297
  br i1 %90, label %91, label %96, !dbg !5298

91:                                               ; preds = %88
  %92 = load ptr, ptr %9, align 8, !dbg !5299
  %93 = getelementptr inbounds %struct.hash_entry, ptr %92, i32 0, i32 0, !dbg !5300
  %94 = load ptr, ptr %93, align 8, !dbg !5300
  %95 = load ptr, ptr %6, align 8, !dbg !5301
  store ptr %94, ptr %95, align 8, !dbg !5302
  br label %96, !dbg !5303

96:                                               ; preds = %91, %88
  store i1 true, ptr %4, align 1, !dbg !5304
  br label %97, !dbg !5304

97:                                               ; preds = %96, %70
  %98 = load i1, ptr %4, align 1, !dbg !5305
  ret i1 %98, !dbg !5305
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local ptr @uint_to_string(i64 noundef %0, ptr noundef align 1 dereferenceable(25) %1, ptr noundef %2) #11 !dbg !476 {
  %4 = alloca ptr, align 8
  %5 = alloca i64, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i64 %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !5306, metadata !DIExpression()), !dbg !5307
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !5308, metadata !DIExpression()), !dbg !5309
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !5310, metadata !DIExpression()), !dbg !5311
  call void @llvm.dbg.declare(metadata ptr %8, metadata !5312, metadata !DIExpression()), !dbg !5313
  store i64 24, ptr %8, align 8, !dbg !5313
  %11 = load ptr, ptr %6, align 8, !dbg !5314
  %12 = load i64, ptr %8, align 8, !dbg !5315
  %13 = add i64 %12, -1, !dbg !5315
  store i64 %13, ptr %8, align 8, !dbg !5315
  %14 = getelementptr inbounds i8, ptr %11, i64 %12, !dbg !5314
  store i8 0, ptr %14, align 1, !dbg !5316
  br label %15, !dbg !5317

15:                                               ; preds = %18, %3
  %16 = load i64, ptr %5, align 8, !dbg !5318
  %17 = icmp uge i64 %16, 100, !dbg !5319
  br i1 %17, label %18, label %43, !dbg !5317

18:                                               ; preds = %15
  call void @llvm.dbg.declare(metadata ptr %9, metadata !5320, metadata !DIExpression()), !dbg !5322
  %19 = load i64, ptr %5, align 8, !dbg !5323
  %20 = urem i64 %19, 100, !dbg !5324
  %21 = mul i64 %20, 2, !dbg !5325
  %22 = trunc i64 %21 to i32, !dbg !5326
  store i32 %22, ptr %9, align 4, !dbg !5322
  %23 = load i64, ptr %5, align 8, !dbg !5327
  %24 = udiv i64 %23, 100, !dbg !5327
  store i64 %24, ptr %5, align 8, !dbg !5327
  %25 = load i32, ptr %9, align 4, !dbg !5328
  %26 = add i32 %25, 1, !dbg !5329
  %27 = zext i32 %26 to i64, !dbg !5330
  %28 = getelementptr inbounds [201 x i8], ptr @uint_to_string.digits, i64 0, i64 %27, !dbg !5330
  %29 = load i8, ptr %28, align 1, !dbg !5330
  %30 = load ptr, ptr %6, align 8, !dbg !5331
  %31 = load i64, ptr %8, align 8, !dbg !5332
  %32 = getelementptr inbounds i8, ptr %30, i64 %31, !dbg !5331
  store i8 %29, ptr %32, align 1, !dbg !5333
  %33 = load i32, ptr %9, align 4, !dbg !5334
  %34 = zext i32 %33 to i64, !dbg !5335
  %35 = getelementptr inbounds [201 x i8], ptr @uint_to_string.digits, i64 0, i64 %34, !dbg !5335
  %36 = load i8, ptr %35, align 1, !dbg !5335
  %37 = load ptr, ptr %6, align 8, !dbg !5336
  %38 = load i64, ptr %8, align 8, !dbg !5337
  %39 = sub i64 %38, 1, !dbg !5338
  %40 = getelementptr inbounds i8, ptr %37, i64 %39, !dbg !5336
  store i8 %36, ptr %40, align 1, !dbg !5339
  %41 = load i64, ptr %8, align 8, !dbg !5340
  %42 = sub i64 %41, 2, !dbg !5340
  store i64 %42, ptr %8, align 8, !dbg !5340
  br label %15, !dbg !5317, !llvm.loop !5341

43:                                               ; preds = %15
  %44 = load i64, ptr %5, align 8, !dbg !5343
  %45 = icmp ult i64 %44, 10, !dbg !5345
  br i1 %45, label %46, label %61, !dbg !5346

46:                                               ; preds = %43
  %47 = load i64, ptr %5, align 8, !dbg !5347
  %48 = trunc i64 %47 to i32, !dbg !5349
  %49 = add i32 48, %48, !dbg !5350
  %50 = trunc i32 %49 to i8, !dbg !5351
  %51 = load ptr, ptr %6, align 8, !dbg !5352
  %52 = load i64, ptr %8, align 8, !dbg !5353
  %53 = getelementptr inbounds i8, ptr %51, i64 %52, !dbg !5352
  store i8 %50, ptr %53, align 1, !dbg !5354
  %54 = load i64, ptr %8, align 8, !dbg !5355
  %55 = sub i64 25, %54, !dbg !5356
  %56 = sub i64 %55, 1, !dbg !5357
  %57 = load ptr, ptr %7, align 8, !dbg !5358
  store i64 %56, ptr %57, align 8, !dbg !5359
  %58 = load ptr, ptr %6, align 8, !dbg !5360
  %59 = load i64, ptr %8, align 8, !dbg !5361
  %60 = getelementptr inbounds i8, ptr %58, i64 %59, !dbg !5362
  store ptr %60, ptr %4, align 8, !dbg !5363
  br label %88, !dbg !5363

61:                                               ; preds = %43
  call void @llvm.dbg.declare(metadata ptr %10, metadata !5364, metadata !DIExpression()), !dbg !5365
  %62 = load i64, ptr %5, align 8, !dbg !5366
  %63 = trunc i64 %62 to i32, !dbg !5367
  %64 = mul i32 %63, 2, !dbg !5368
  store i32 %64, ptr %10, align 4, !dbg !5365
  %65 = load i32, ptr %10, align 4, !dbg !5369
  %66 = add i32 %65, 1, !dbg !5370
  %67 = zext i32 %66 to i64, !dbg !5371
  %68 = getelementptr inbounds [201 x i8], ptr @uint_to_string.digits, i64 0, i64 %67, !dbg !5371
  %69 = load i8, ptr %68, align 1, !dbg !5371
  %70 = load ptr, ptr %6, align 8, !dbg !5372
  %71 = load i64, ptr %8, align 8, !dbg !5373
  %72 = getelementptr inbounds i8, ptr %70, i64 %71, !dbg !5372
  store i8 %69, ptr %72, align 1, !dbg !5374
  %73 = load i32, ptr %10, align 4, !dbg !5375
  %74 = zext i32 %73 to i64, !dbg !5376
  %75 = getelementptr inbounds [201 x i8], ptr @uint_to_string.digits, i64 0, i64 %74, !dbg !5376
  %76 = load i8, ptr %75, align 1, !dbg !5376
  %77 = load ptr, ptr %6, align 8, !dbg !5377
  %78 = load i64, ptr %8, align 8, !dbg !5378
  %79 = sub i64 %78, 1, !dbg !5379
  %80 = getelementptr inbounds i8, ptr %77, i64 %79, !dbg !5377
  store i8 %76, ptr %80, align 1, !dbg !5380
  %81 = load i64, ptr %8, align 8, !dbg !5381
  %82 = sub i64 25, %81, !dbg !5382
  %83 = load ptr, ptr %7, align 8, !dbg !5383
  store i64 %82, ptr %83, align 8, !dbg !5384
  %84 = load ptr, ptr %6, align 8, !dbg !5385
  %85 = load i64, ptr %8, align 8, !dbg !5386
  %86 = getelementptr inbounds i8, ptr %84, i64 %85, !dbg !5387
  %87 = getelementptr inbounds i8, ptr %86, i64 -1, !dbg !5388
  store ptr %87, ptr %4, align 8, !dbg !5389
  br label %88, !dbg !5389

88:                                               ; preds = %61, %46
  %89 = load ptr, ptr %4, align 8, !dbg !5390
  ret ptr %89, !dbg !5390
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local ptr @int_to_string(i64 noundef %0, ptr noundef align 1 dereferenceable(25) %1, ptr noundef %2) #11 !dbg !5391 {
  %4 = alloca ptr, align 8
  %5 = alloca i64, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca ptr, align 8
  %12 = alloca i64, align 8
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %15 = alloca i64, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca ptr, align 8
  %19 = alloca i64, align 8
  %20 = alloca ptr, align 8
  %21 = alloca ptr, align 8
  %22 = alloca ptr, align 8
  store i64 %0, ptr %19, align 8
  call void @llvm.dbg.declare(metadata ptr %19, metadata !5395, metadata !DIExpression()), !dbg !5396
  store ptr %1, ptr %20, align 8
  call void @llvm.dbg.declare(metadata ptr %20, metadata !5397, metadata !DIExpression()), !dbg !5398
  store ptr %2, ptr %21, align 8
  call void @llvm.dbg.declare(metadata ptr %21, metadata !5399, metadata !DIExpression()), !dbg !5400
  %23 = load i64, ptr %19, align 8, !dbg !5401
  %24 = icmp slt i64 %23, 0, !dbg !5403
  br i1 %24, label %25, label %115, !dbg !5404

25:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata ptr %22, metadata !5405, metadata !DIExpression()), !dbg !5407
  %26 = load i64, ptr %19, align 8, !dbg !5408
  %27 = sub nsw i64 0, %26, !dbg !5409
  %28 = load ptr, ptr %20, align 8, !dbg !5410
  %29 = load ptr, ptr %21, align 8, !dbg !5411
  store i64 %27, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !5306, metadata !DIExpression()), !dbg !5412
  store ptr %28, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !5308, metadata !DIExpression()), !dbg !5414
  store ptr %29, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !5310, metadata !DIExpression()), !dbg !5415
  call void @llvm.dbg.declare(metadata ptr %8, metadata !5312, metadata !DIExpression()), !dbg !5416
  store i64 24, ptr %8, align 8, !dbg !5416
  %30 = load ptr, ptr %6, align 8, !dbg !5417
  %31 = load i64, ptr %8, align 8, !dbg !5418
  %32 = add i64 %31, -1, !dbg !5418
  store i64 %32, ptr %8, align 8, !dbg !5418
  %33 = getelementptr inbounds i8, ptr %30, i64 %31, !dbg !5417
  store i8 0, ptr %33, align 1, !dbg !5419
  br label %34, !dbg !5420

34:                                               ; preds = %37, %25
  %35 = load i64, ptr %5, align 8, !dbg !5421
  %36 = icmp uge i64 %35, 100, !dbg !5422
  br i1 %36, label %37, label %62, !dbg !5420

37:                                               ; preds = %34
  call void @llvm.dbg.declare(metadata ptr %9, metadata !5320, metadata !DIExpression()), !dbg !5423
  %38 = load i64, ptr %5, align 8, !dbg !5424
  %39 = urem i64 %38, 100, !dbg !5425
  %40 = mul i64 %39, 2, !dbg !5426
  %41 = trunc i64 %40 to i32, !dbg !5427
  store i32 %41, ptr %9, align 4, !dbg !5423
  %42 = load i64, ptr %5, align 8, !dbg !5428
  %43 = udiv i64 %42, 100, !dbg !5428
  store i64 %43, ptr %5, align 8, !dbg !5428
  %44 = load i32, ptr %9, align 4, !dbg !5429
  %45 = add i32 %44, 1, !dbg !5430
  %46 = zext i32 %45 to i64, !dbg !5431
  %47 = getelementptr inbounds [201 x i8], ptr @uint_to_string.digits, i64 0, i64 %46, !dbg !5431
  %48 = load i8, ptr %47, align 1, !dbg !5431
  %49 = load ptr, ptr %6, align 8, !dbg !5432
  %50 = load i64, ptr %8, align 8, !dbg !5433
  %51 = getelementptr inbounds i8, ptr %49, i64 %50, !dbg !5432
  store i8 %48, ptr %51, align 1, !dbg !5434
  %52 = load i32, ptr %9, align 4, !dbg !5435
  %53 = zext i32 %52 to i64, !dbg !5436
  %54 = getelementptr inbounds [201 x i8], ptr @uint_to_string.digits, i64 0, i64 %53, !dbg !5436
  %55 = load i8, ptr %54, align 1, !dbg !5436
  %56 = load ptr, ptr %6, align 8, !dbg !5437
  %57 = load i64, ptr %8, align 8, !dbg !5438
  %58 = sub i64 %57, 1, !dbg !5439
  %59 = getelementptr inbounds i8, ptr %56, i64 %58, !dbg !5437
  store i8 %55, ptr %59, align 1, !dbg !5440
  %60 = load i64, ptr %8, align 8, !dbg !5441
  %61 = sub i64 %60, 2, !dbg !5441
  store i64 %61, ptr %8, align 8, !dbg !5441
  br label %34, !dbg !5420, !llvm.loop !5442

62:                                               ; preds = %34
  %63 = load i64, ptr %5, align 8, !dbg !5444
  %64 = icmp ult i64 %63, 10, !dbg !5445
  br i1 %64, label %65, label %80, !dbg !5446

65:                                               ; preds = %62
  %66 = load i64, ptr %5, align 8, !dbg !5447
  %67 = trunc i64 %66 to i32, !dbg !5448
  %68 = add i32 48, %67, !dbg !5449
  %69 = trunc i32 %68 to i8, !dbg !5450
  %70 = load ptr, ptr %6, align 8, !dbg !5451
  %71 = load i64, ptr %8, align 8, !dbg !5452
  %72 = getelementptr inbounds i8, ptr %70, i64 %71, !dbg !5451
  store i8 %69, ptr %72, align 1, !dbg !5453
  %73 = load i64, ptr %8, align 8, !dbg !5454
  %74 = sub i64 25, %73, !dbg !5455
  %75 = sub i64 %74, 1, !dbg !5456
  %76 = load ptr, ptr %7, align 8, !dbg !5457
  store i64 %75, ptr %76, align 8, !dbg !5458
  %77 = load ptr, ptr %6, align 8, !dbg !5459
  %78 = load i64, ptr %8, align 8, !dbg !5460
  %79 = getelementptr inbounds i8, ptr %77, i64 %78, !dbg !5461
  store ptr %79, ptr %4, align 8, !dbg !5462
  br label %107, !dbg !5462

80:                                               ; preds = %62
  call void @llvm.dbg.declare(metadata ptr %10, metadata !5364, metadata !DIExpression()), !dbg !5463
  %81 = load i64, ptr %5, align 8, !dbg !5464
  %82 = trunc i64 %81 to i32, !dbg !5465
  %83 = mul i32 %82, 2, !dbg !5466
  store i32 %83, ptr %10, align 4, !dbg !5463
  %84 = load i32, ptr %10, align 4, !dbg !5467
  %85 = add i32 %84, 1, !dbg !5468
  %86 = zext i32 %85 to i64, !dbg !5469
  %87 = getelementptr inbounds [201 x i8], ptr @uint_to_string.digits, i64 0, i64 %86, !dbg !5469
  %88 = load i8, ptr %87, align 1, !dbg !5469
  %89 = load ptr, ptr %6, align 8, !dbg !5470
  %90 = load i64, ptr %8, align 8, !dbg !5471
  %91 = getelementptr inbounds i8, ptr %89, i64 %90, !dbg !5470
  store i8 %88, ptr %91, align 1, !dbg !5472
  %92 = load i32, ptr %10, align 4, !dbg !5473
  %93 = zext i32 %92 to i64, !dbg !5474
  %94 = getelementptr inbounds [201 x i8], ptr @uint_to_string.digits, i64 0, i64 %93, !dbg !5474
  %95 = load i8, ptr %94, align 1, !dbg !5474
  %96 = load ptr, ptr %6, align 8, !dbg !5475
  %97 = load i64, ptr %8, align 8, !dbg !5476
  %98 = sub i64 %97, 1, !dbg !5477
  %99 = getelementptr inbounds i8, ptr %96, i64 %98, !dbg !5475
  store i8 %95, ptr %99, align 1, !dbg !5478
  %100 = load i64, ptr %8, align 8, !dbg !5479
  %101 = sub i64 25, %100, !dbg !5480
  %102 = load ptr, ptr %7, align 8, !dbg !5481
  store i64 %101, ptr %102, align 8, !dbg !5482
  %103 = load ptr, ptr %6, align 8, !dbg !5483
  %104 = load i64, ptr %8, align 8, !dbg !5484
  %105 = getelementptr inbounds i8, ptr %103, i64 %104, !dbg !5485
  %106 = getelementptr inbounds i8, ptr %105, i64 -1, !dbg !5486
  store ptr %106, ptr %4, align 8, !dbg !5487
  br label %107, !dbg !5487

107:                                              ; preds = %80, %65
  %108 = load ptr, ptr %4, align 8, !dbg !5488
  store ptr %108, ptr %22, align 8, !dbg !5407
  %109 = load ptr, ptr %22, align 8, !dbg !5489
  %110 = getelementptr inbounds i8, ptr %109, i32 -1, !dbg !5489
  store ptr %110, ptr %22, align 8, !dbg !5489
  store i8 45, ptr %110, align 1, !dbg !5490
  %111 = load ptr, ptr %21, align 8, !dbg !5491
  %112 = load i64, ptr %111, align 8, !dbg !5492
  %113 = add i64 %112, 1, !dbg !5492
  store i64 %113, ptr %111, align 8, !dbg !5492
  %114 = load ptr, ptr %22, align 8, !dbg !5493
  store ptr %114, ptr %18, align 8, !dbg !5494
  br label %198, !dbg !5494

115:                                              ; preds = %3
  %116 = load i64, ptr %19, align 8, !dbg !5495
  %117 = load ptr, ptr %20, align 8, !dbg !5496
  %118 = load ptr, ptr %21, align 8, !dbg !5497
  store i64 %116, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %12, metadata !5306, metadata !DIExpression()), !dbg !5498
  store ptr %117, ptr %13, align 8
  call void @llvm.dbg.declare(metadata ptr %13, metadata !5308, metadata !DIExpression()), !dbg !5500
  store ptr %118, ptr %14, align 8
  call void @llvm.dbg.declare(metadata ptr %14, metadata !5310, metadata !DIExpression()), !dbg !5501
  call void @llvm.dbg.declare(metadata ptr %15, metadata !5312, metadata !DIExpression()), !dbg !5502
  store i64 24, ptr %15, align 8, !dbg !5502
  %119 = load ptr, ptr %13, align 8, !dbg !5503
  %120 = load i64, ptr %15, align 8, !dbg !5504
  %121 = add i64 %120, -1, !dbg !5504
  store i64 %121, ptr %15, align 8, !dbg !5504
  %122 = getelementptr inbounds i8, ptr %119, i64 %120, !dbg !5503
  store i8 0, ptr %122, align 1, !dbg !5505
  br label %123, !dbg !5506

123:                                              ; preds = %126, %115
  %124 = load i64, ptr %12, align 8, !dbg !5507
  %125 = icmp uge i64 %124, 100, !dbg !5508
  br i1 %125, label %126, label %151, !dbg !5506

126:                                              ; preds = %123
  call void @llvm.dbg.declare(metadata ptr %16, metadata !5320, metadata !DIExpression()), !dbg !5509
  %127 = load i64, ptr %12, align 8, !dbg !5510
  %128 = urem i64 %127, 100, !dbg !5511
  %129 = mul i64 %128, 2, !dbg !5512
  %130 = trunc i64 %129 to i32, !dbg !5513
  store i32 %130, ptr %16, align 4, !dbg !5509
  %131 = load i64, ptr %12, align 8, !dbg !5514
  %132 = udiv i64 %131, 100, !dbg !5514
  store i64 %132, ptr %12, align 8, !dbg !5514
  %133 = load i32, ptr %16, align 4, !dbg !5515
  %134 = add i32 %133, 1, !dbg !5516
  %135 = zext i32 %134 to i64, !dbg !5517
  %136 = getelementptr inbounds [201 x i8], ptr @uint_to_string.digits, i64 0, i64 %135, !dbg !5517
  %137 = load i8, ptr %136, align 1, !dbg !5517
  %138 = load ptr, ptr %13, align 8, !dbg !5518
  %139 = load i64, ptr %15, align 8, !dbg !5519
  %140 = getelementptr inbounds i8, ptr %138, i64 %139, !dbg !5518
  store i8 %137, ptr %140, align 1, !dbg !5520
  %141 = load i32, ptr %16, align 4, !dbg !5521
  %142 = zext i32 %141 to i64, !dbg !5522
  %143 = getelementptr inbounds [201 x i8], ptr @uint_to_string.digits, i64 0, i64 %142, !dbg !5522
  %144 = load i8, ptr %143, align 1, !dbg !5522
  %145 = load ptr, ptr %13, align 8, !dbg !5523
  %146 = load i64, ptr %15, align 8, !dbg !5524
  %147 = sub i64 %146, 1, !dbg !5525
  %148 = getelementptr inbounds i8, ptr %145, i64 %147, !dbg !5523
  store i8 %144, ptr %148, align 1, !dbg !5526
  %149 = load i64, ptr %15, align 8, !dbg !5527
  %150 = sub i64 %149, 2, !dbg !5527
  store i64 %150, ptr %15, align 8, !dbg !5527
  br label %123, !dbg !5506, !llvm.loop !5528

151:                                              ; preds = %123
  %152 = load i64, ptr %12, align 8, !dbg !5530
  %153 = icmp ult i64 %152, 10, !dbg !5531
  br i1 %153, label %154, label %169, !dbg !5532

154:                                              ; preds = %151
  %155 = load i64, ptr %12, align 8, !dbg !5533
  %156 = trunc i64 %155 to i32, !dbg !5534
  %157 = add i32 48, %156, !dbg !5535
  %158 = trunc i32 %157 to i8, !dbg !5536
  %159 = load ptr, ptr %13, align 8, !dbg !5537
  %160 = load i64, ptr %15, align 8, !dbg !5538
  %161 = getelementptr inbounds i8, ptr %159, i64 %160, !dbg !5537
  store i8 %158, ptr %161, align 1, !dbg !5539
  %162 = load i64, ptr %15, align 8, !dbg !5540
  %163 = sub i64 25, %162, !dbg !5541
  %164 = sub i64 %163, 1, !dbg !5542
  %165 = load ptr, ptr %14, align 8, !dbg !5543
  store i64 %164, ptr %165, align 8, !dbg !5544
  %166 = load ptr, ptr %13, align 8, !dbg !5545
  %167 = load i64, ptr %15, align 8, !dbg !5546
  %168 = getelementptr inbounds i8, ptr %166, i64 %167, !dbg !5547
  store ptr %168, ptr %11, align 8, !dbg !5548
  br label %196, !dbg !5548

169:                                              ; preds = %151
  call void @llvm.dbg.declare(metadata ptr %17, metadata !5364, metadata !DIExpression()), !dbg !5549
  %170 = load i64, ptr %12, align 8, !dbg !5550
  %171 = trunc i64 %170 to i32, !dbg !5551
  %172 = mul i32 %171, 2, !dbg !5552
  store i32 %172, ptr %17, align 4, !dbg !5549
  %173 = load i32, ptr %17, align 4, !dbg !5553
  %174 = add i32 %173, 1, !dbg !5554
  %175 = zext i32 %174 to i64, !dbg !5555
  %176 = getelementptr inbounds [201 x i8], ptr @uint_to_string.digits, i64 0, i64 %175, !dbg !5555
  %177 = load i8, ptr %176, align 1, !dbg !5555
  %178 = load ptr, ptr %13, align 8, !dbg !5556
  %179 = load i64, ptr %15, align 8, !dbg !5557
  %180 = getelementptr inbounds i8, ptr %178, i64 %179, !dbg !5556
  store i8 %177, ptr %180, align 1, !dbg !5558
  %181 = load i32, ptr %17, align 4, !dbg !5559
  %182 = zext i32 %181 to i64, !dbg !5560
  %183 = getelementptr inbounds [201 x i8], ptr @uint_to_string.digits, i64 0, i64 %182, !dbg !5560
  %184 = load i8, ptr %183, align 1, !dbg !5560
  %185 = load ptr, ptr %13, align 8, !dbg !5561
  %186 = load i64, ptr %15, align 8, !dbg !5562
  %187 = sub i64 %186, 1, !dbg !5563
  %188 = getelementptr inbounds i8, ptr %185, i64 %187, !dbg !5561
  store i8 %184, ptr %188, align 1, !dbg !5564
  %189 = load i64, ptr %15, align 8, !dbg !5565
  %190 = sub i64 25, %189, !dbg !5566
  %191 = load ptr, ptr %14, align 8, !dbg !5567
  store i64 %190, ptr %191, align 8, !dbg !5568
  %192 = load ptr, ptr %13, align 8, !dbg !5569
  %193 = load i64, ptr %15, align 8, !dbg !5570
  %194 = getelementptr inbounds i8, ptr %192, i64 %193, !dbg !5571
  %195 = getelementptr inbounds i8, ptr %194, i64 -1, !dbg !5572
  store ptr %195, ptr %11, align 8, !dbg !5573
  br label %196, !dbg !5573

196:                                              ; preds = %169, %154
  %197 = load ptr, ptr %11, align 8, !dbg !5574
  store ptr %197, ptr %18, align 8, !dbg !5575
  br label %198, !dbg !5575

198:                                              ; preds = %196, %107
  %199 = load ptr, ptr %18, align 8, !dbg !5576
  ret ptr %199, !dbg !5576
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @list_check_node(ptr noundef %0, ptr noundef %1) #0 !dbg !5577 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !5582, metadata !DIExpression()), !dbg !5583
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !5584, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.declare(metadata ptr %6, metadata !5586, metadata !DIExpression()), !dbg !5587
  call void @llvm.dbg.declare(metadata ptr %7, metadata !5588, metadata !DIExpression()), !dbg !5589
  call void @llvm.dbg.declare(metadata ptr %8, metadata !5590, metadata !DIExpression()), !dbg !5591
  store i32 0, ptr %8, align 4, !dbg !5591
  %9 = load ptr, ptr %4, align 8, !dbg !5592
  store ptr %9, ptr %6, align 8, !dbg !5594
  %10 = load ptr, ptr %4, align 8, !dbg !5595
  %11 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %10, i32 0, i32 0, !dbg !5596
  %12 = load ptr, ptr %11, align 8, !dbg !5596
  store ptr %12, ptr %7, align 8, !dbg !5597
  br label %13, !dbg !5598

13:                                               ; preds = %32, %2
  %14 = load ptr, ptr %7, align 8, !dbg !5599
  %15 = load ptr, ptr %4, align 8, !dbg !5601
  %16 = icmp ne ptr %14, %15, !dbg !5602
  br i1 %16, label %17, label %37, !dbg !5603

17:                                               ; preds = %13
  %18 = load i32, ptr %8, align 4, !dbg !5604
  %19 = add i32 %18, 1, !dbg !5604
  store i32 %19, ptr %8, align 4, !dbg !5604
  %20 = load ptr, ptr %7, align 8, !dbg !5606
  %21 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %20, i32 0, i32 1, !dbg !5608
  %22 = load ptr, ptr %21, align 8, !dbg !5608
  %23 = load ptr, ptr %6, align 8, !dbg !5609
  %24 = icmp ne ptr %22, %23, !dbg !5610
  br i1 %24, label %25, label %31, !dbg !5611

25:                                               ; preds = %17
  %26 = load ptr, ptr %5, align 8, !dbg !5612
  %27 = load ptr, ptr %4, align 8, !dbg !5613
  %28 = load ptr, ptr %7, align 8, !dbg !5614
  %29 = load i32, ptr %8, align 4, !dbg !5615
  %30 = call ptr @corrupt(ptr noundef %26, ptr noundef %27, ptr noundef %28, i32 noundef %29), !dbg !5616
  store ptr %30, ptr %3, align 8, !dbg !5617
  br label %50, !dbg !5617

31:                                               ; preds = %17
  br label %32, !dbg !5618

32:                                               ; preds = %31
  %33 = load ptr, ptr %7, align 8, !dbg !5619
  store ptr %33, ptr %6, align 8, !dbg !5620
  %34 = load ptr, ptr %7, align 8, !dbg !5621
  %35 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %34, i32 0, i32 0, !dbg !5622
  %36 = load ptr, ptr %35, align 8, !dbg !5622
  store ptr %36, ptr %7, align 8, !dbg !5623
  br label %13, !dbg !5624, !llvm.loop !5625

37:                                               ; preds = %13
  %38 = load ptr, ptr %4, align 8, !dbg !5627
  %39 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %38, i32 0, i32 1, !dbg !5629
  %40 = load ptr, ptr %39, align 8, !dbg !5629
  %41 = load ptr, ptr %6, align 8, !dbg !5630
  %42 = icmp ne ptr %40, %41, !dbg !5631
  br i1 %42, label %43, label %48, !dbg !5632

43:                                               ; preds = %37
  %44 = load ptr, ptr %5, align 8, !dbg !5633
  %45 = load ptr, ptr %4, align 8, !dbg !5634
  %46 = load ptr, ptr %4, align 8, !dbg !5635
  %47 = call ptr @corrupt(ptr noundef %44, ptr noundef %45, ptr noundef %46, i32 noundef 0), !dbg !5636
  store ptr %47, ptr %3, align 8, !dbg !5637
  br label %50, !dbg !5637

48:                                               ; preds = %37
  %49 = load ptr, ptr %4, align 8, !dbg !5638
  store ptr %49, ptr %3, align 8, !dbg !5639
  br label %50, !dbg !5639

50:                                               ; preds = %48, %43, %25
  %51 = load ptr, ptr %3, align 8, !dbg !5640
  ret ptr %51, !dbg !5640
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @corrupt(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) #0 !dbg !5641 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !5644, metadata !DIExpression()), !dbg !5645
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !5646, metadata !DIExpression()), !dbg !5647
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !5648, metadata !DIExpression()), !dbg !5649
  store i32 %3, ptr %8, align 4
  call void @llvm.dbg.declare(metadata ptr %8, metadata !5650, metadata !DIExpression()), !dbg !5651
  %9 = load ptr, ptr %5, align 8, !dbg !5652
  %10 = icmp ne ptr %9, null, !dbg !5652
  br i1 %10, label %11, label %18, !dbg !5654

11:                                               ; preds = %4
  %12 = load ptr, ptr @stderr, align 8, !dbg !5655
  %13 = load ptr, ptr %5, align 8, !dbg !5657
  %14 = load ptr, ptr %7, align 8, !dbg !5658
  %15 = load i32, ptr %8, align 4, !dbg !5659
  %16 = load ptr, ptr %6, align 8, !dbg !5660
  %17 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %12, ptr noundef @.str.2.42, ptr noundef %13, ptr noundef %14, i32 noundef %15, ptr noundef %16), !dbg !5661
  call void @abort() #23, !dbg !5662
  unreachable, !dbg !5662

18:                                               ; preds = %4
  ret ptr null, !dbg !5663
}

declare i32 @fprintf(ptr noundef, ptr noundef, ...) #5

; Function Attrs: noreturn nounwind
declare void @abort() #12

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @list_check(ptr noundef %0, ptr noundef %1) #0 !dbg !5664 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !5669, metadata !DIExpression()), !dbg !5670
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !5671, metadata !DIExpression()), !dbg !5672
  %6 = load ptr, ptr %4, align 8, !dbg !5673
  %7 = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 0, !dbg !5675
  %8 = load ptr, ptr %5, align 8, !dbg !5676
  %9 = call ptr @list_check_node(ptr noundef %7, ptr noundef %8), !dbg !5677
  %10 = icmp ne ptr %9, null, !dbg !5677
  br i1 %10, label %12, label %11, !dbg !5678

11:                                               ; preds = %2
  store ptr null, ptr %3, align 8, !dbg !5679
  br label %14, !dbg !5679

12:                                               ; preds = %2
  %13 = load ptr, ptr %4, align 8, !dbg !5680
  store ptr %13, ptr %3, align 8, !dbg !5681
  br label %14, !dbg !5681

14:                                               ; preds = %12, %11
  %15 = load ptr, ptr %3, align 8, !dbg !5682
  ret ptr %15, !dbg !5682
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @cache_create(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3) #0 !dbg !5683 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i64, align 8
  %10 = alloca ptr, align 8
  store ptr %0, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !5761, metadata !DIExpression()), !dbg !5762
  store ptr %1, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !5763, metadata !DIExpression()), !dbg !5764
  store ptr %2, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !5765, metadata !DIExpression()), !dbg !5766
  store i64 %3, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !5767, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.declare(metadata ptr %10, metadata !5769, metadata !DIExpression()), !dbg !5770
  %11 = load ptr, ptr %6, align 8, !dbg !5771
  %12 = icmp ne ptr %11, null, !dbg !5771
  br i1 %12, label %13, label %14, !dbg !5774

13:                                               ; preds = %4
  br label %15, !dbg !5774

14:                                               ; preds = %4
  call void @__assert_fail(ptr noundef @.str.3.43, ptr noundef @.str.1.4, i32 noundef 104, ptr noundef @__PRETTY_FUNCTION__.cache_create) #23, !dbg !5771
  unreachable, !dbg !5771

15:                                               ; preds = %13
  %16 = load ptr, ptr %7, align 8, !dbg !5775
  %17 = icmp ne ptr %16, null, !dbg !5775
  br i1 %17, label %18, label %19, !dbg !5778

18:                                               ; preds = %15
  br label %20, !dbg !5778

19:                                               ; preds = %15
  call void @__assert_fail(ptr noundef @.str.2.5, ptr noundef @.str.1.4, i32 noundef 105, ptr noundef @__PRETTY_FUNCTION__.cache_create) #23, !dbg !5775
  unreachable, !dbg !5775

20:                                               ; preds = %18
  %21 = load i64, ptr %9, align 8, !dbg !5779
  %22 = icmp sgt i64 %21, 0, !dbg !5779
  br i1 %22, label %23, label %24, !dbg !5782

23:                                               ; preds = %20
  br label %25, !dbg !5782

24:                                               ; preds = %20
  call void @__assert_fail(ptr noundef @.str.3.6, ptr noundef @.str.1.4, i32 noundef 106, ptr noundef @__PRETTY_FUNCTION__.cache_create) #23, !dbg !5779
  unreachable, !dbg !5779

25:                                               ; preds = %23
  %26 = call noalias ptr @calloc(i64 noundef 1, i64 noundef 192) #19, !dbg !5783
  store ptr %26, ptr %10, align 8, !dbg !5784
  %27 = load ptr, ptr %10, align 8, !dbg !5785
  %28 = icmp ne ptr %27, null, !dbg !5785
  br i1 %28, label %30, label %29, !dbg !5787

29:                                               ; preds = %25
  store ptr null, ptr %5, align 8, !dbg !5788
  br label %93, !dbg !5788

30:                                               ; preds = %25
  %31 = call ptr @hash_str_new(ptr noundef @free, ptr noundef null), !dbg !5789
  %32 = load ptr, ptr %10, align 8, !dbg !5790
  %33 = getelementptr inbounds %struct.cache_t, ptr %32, i32 0, i32 0, !dbg !5791
  %34 = getelementptr inbounds %struct.anon.1, ptr %33, i32 0, i32 0, !dbg !5792
  store ptr %31, ptr %34, align 8, !dbg !5793
  %35 = load ptr, ptr %10, align 8, !dbg !5794
  %36 = getelementptr inbounds %struct.cache_t, ptr %35, i32 0, i32 0, !dbg !5796
  %37 = getelementptr inbounds %struct.anon.1, ptr %36, i32 0, i32 0, !dbg !5797
  %38 = load ptr, ptr %37, align 8, !dbg !5797
  %39 = icmp ne ptr %38, null, !dbg !5794
  br i1 %39, label %41, label %40, !dbg !5798

40:                                               ; preds = %30
  br label %91, !dbg !5799

41:                                               ; preds = %30
  %42 = load ptr, ptr %10, align 8, !dbg !5800
  %43 = getelementptr inbounds %struct.cache_t, ptr %42, i32 0, i32 0, !dbg !5802
  %44 = getelementptr inbounds %struct.anon.1, ptr %43, i32 0, i32 1, !dbg !5803
  %45 = call i32 @pthread_rwlock_init(ptr noundef %44, ptr noundef null) #17, !dbg !5804
  %46 = icmp ne i32 %45, 0, !dbg !5804
  br i1 %46, label %47, label %48, !dbg !5805

47:                                               ; preds = %41
  br label %86, !dbg !5806

48:                                               ; preds = %41
  %49 = load ptr, ptr %10, align 8, !dbg !5807
  %50 = getelementptr inbounds %struct.cache_t, ptr %49, i32 0, i32 1, !dbg !5809
  %51 = getelementptr inbounds %struct.anon.0, ptr %50, i32 0, i32 1, !dbg !5810
  %52 = call i32 @pthread_rwlock_init(ptr noundef %51, ptr noundef null) #17, !dbg !5811
  %53 = icmp ne i32 %52, 0, !dbg !5811
  br i1 %53, label %54, label %55, !dbg !5812

54:                                               ; preds = %48
  br label %81, !dbg !5813

55:                                               ; preds = %48
  %56 = load ptr, ptr %6, align 8, !dbg !5814
  %57 = load ptr, ptr %10, align 8, !dbg !5815
  %58 = getelementptr inbounds %struct.cache_t, ptr %57, i32 0, i32 2, !dbg !5816
  %59 = getelementptr inbounds %struct.anon.5, ptr %58, i32 0, i32 0, !dbg !5817
  store ptr %56, ptr %59, align 8, !dbg !5818
  %60 = load ptr, ptr %7, align 8, !dbg !5819
  %61 = load ptr, ptr %10, align 8, !dbg !5820
  %62 = getelementptr inbounds %struct.cache_t, ptr %61, i32 0, i32 2, !dbg !5821
  %63 = getelementptr inbounds %struct.anon.5, ptr %62, i32 0, i32 1, !dbg !5822
  store ptr %60, ptr %63, align 8, !dbg !5823
  %64 = load ptr, ptr %8, align 8, !dbg !5824
  %65 = load ptr, ptr %10, align 8, !dbg !5825
  %66 = getelementptr inbounds %struct.cache_t, ptr %65, i32 0, i32 2, !dbg !5826
  %67 = getelementptr inbounds %struct.anon.5, ptr %66, i32 0, i32 2, !dbg !5827
  store ptr %64, ptr %67, align 8, !dbg !5828
  %68 = call i32 @detect_fastest_monotonic_clock(), !dbg !5829
  %69 = load ptr, ptr %10, align 8, !dbg !5830
  %70 = getelementptr inbounds %struct.cache_t, ptr %69, i32 0, i32 3, !dbg !5831
  %71 = getelementptr inbounds %struct.anon.2.3, ptr %70, i32 0, i32 1, !dbg !5832
  store i32 %68, ptr %71, align 8, !dbg !5833
  %72 = load i64, ptr %9, align 8, !dbg !5834
  %73 = load ptr, ptr %10, align 8, !dbg !5835
  %74 = getelementptr inbounds %struct.cache_t, ptr %73, i32 0, i32 3, !dbg !5836
  %75 = getelementptr inbounds %struct.anon.2.3, ptr %74, i32 0, i32 0, !dbg !5837
  store i64 %72, ptr %75, align 8, !dbg !5838
  %76 = load ptr, ptr %10, align 8, !dbg !5839
  %77 = getelementptr inbounds %struct.cache_t, ptr %76, i32 0, i32 1, !dbg !5840
  %78 = getelementptr inbounds %struct.anon.0, ptr %77, i32 0, i32 0, !dbg !5841
  call void @list_head_init(ptr noundef %78), !dbg !5842
  %79 = load ptr, ptr %10, align 8, !dbg !5843
  call void @lwan_job_add(ptr noundef @cache_pruner_job, ptr noundef %79), !dbg !5844
  %80 = load ptr, ptr %10, align 8, !dbg !5845
  store ptr %80, ptr %5, align 8, !dbg !5846
  br label %93, !dbg !5846

81:                                               ; preds = %54
  call void @llvm.dbg.label(metadata !5847), !dbg !5848
  %82 = load ptr, ptr %10, align 8, !dbg !5849
  %83 = getelementptr inbounds %struct.cache_t, ptr %82, i32 0, i32 0, !dbg !5850
  %84 = getelementptr inbounds %struct.anon.1, ptr %83, i32 0, i32 1, !dbg !5851
  %85 = call i32 @pthread_rwlock_destroy(ptr noundef %84) #17, !dbg !5852
  br label %86, !dbg !5852

86:                                               ; preds = %81, %47
  call void @llvm.dbg.label(metadata !5853), !dbg !5854
  %87 = load ptr, ptr %10, align 8, !dbg !5855
  %88 = getelementptr inbounds %struct.cache_t, ptr %87, i32 0, i32 0, !dbg !5856
  %89 = getelementptr inbounds %struct.anon.1, ptr %88, i32 0, i32 0, !dbg !5857
  %90 = load ptr, ptr %89, align 8, !dbg !5857
  call void @hash_free(ptr noundef %90), !dbg !5858
  br label %91, !dbg !5858

91:                                               ; preds = %86, %40
  call void @llvm.dbg.label(metadata !5859), !dbg !5860
  %92 = load ptr, ptr %10, align 8, !dbg !5861
  call void @free(ptr noundef %92) #17, !dbg !5862
  store ptr null, ptr %5, align 8, !dbg !5863
  br label %93, !dbg !5863

93:                                               ; preds = %91, %55, %29
  %94 = load ptr, ptr %5, align 8, !dbg !5864
  ret ptr %94, !dbg !5864
}

; Function Attrs: noreturn nounwind
declare void @__assert_fail(ptr noundef, ptr noundef, i32 noundef, ptr noundef) #12

; Function Attrs: nounwind
declare i32 @pthread_rwlock_init(ptr noundef, ptr noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @detect_fastest_monotonic_clock() #0 !dbg !5865 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.anon.3, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !5868, metadata !DIExpression()), !dbg !5873
  %3 = call i32 @clock_gettime(i32 noundef 6, ptr noundef %2) #17, !dbg !5874
  %4 = icmp ne i32 %3, 0, !dbg !5874
  br i1 %4, label %6, label %5, !dbg !5876

5:                                                ; preds = %0
  store i32 6, ptr %1, align 4, !dbg !5877
  br label %7, !dbg !5877

6:                                                ; preds = %0
  store i32 1, ptr %1, align 4, !dbg !5878
  br label %7, !dbg !5878

7:                                                ; preds = %6, %5
  %8 = load i32, ptr %1, align 4, !dbg !5879
  ret i32 %8, !dbg !5879
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @list_head_init(ptr noundef %0) #0 !dbg !5880 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !5884, metadata !DIExpression()), !dbg !5885
  %3 = load ptr, ptr %2, align 8, !dbg !5886
  %4 = getelementptr inbounds %struct.list_head, ptr %3, i32 0, i32 0, !dbg !5887
  %5 = load ptr, ptr %2, align 8, !dbg !5888
  %6 = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 0, !dbg !5889
  %7 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %6, i32 0, i32 1, !dbg !5890
  store ptr %4, ptr %7, align 8, !dbg !5891
  %8 = load ptr, ptr %2, align 8, !dbg !5892
  %9 = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 0, !dbg !5893
  %10 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %9, i32 0, i32 0, !dbg !5894
  store ptr %4, ptr %10, align 8, !dbg !5895
  ret void, !dbg !5896
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @cache_pruner_job(ptr noundef %0) #0 !dbg !5897 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca i1, align 1
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca %struct.anon.3, align 8
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  %12 = alloca %struct.list_head, align 8
  %13 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !5898, metadata !DIExpression()), !dbg !5899
  call void @llvm.dbg.declare(metadata ptr %6, metadata !5900, metadata !DIExpression()), !dbg !5901
  %14 = load ptr, ptr %5, align 8, !dbg !5902
  store ptr %14, ptr %6, align 8, !dbg !5901
  call void @llvm.dbg.declare(metadata ptr %7, metadata !5903, metadata !DIExpression()), !dbg !5904
  call void @llvm.dbg.declare(metadata ptr %8, metadata !5905, metadata !DIExpression()), !dbg !5906
  call void @llvm.dbg.declare(metadata ptr %9, metadata !5907, metadata !DIExpression()), !dbg !5908
  call void @llvm.dbg.declare(metadata ptr %10, metadata !5909, metadata !DIExpression()), !dbg !5910
  %15 = load ptr, ptr %6, align 8, !dbg !5911
  %16 = getelementptr inbounds %struct.cache_t, ptr %15, i32 0, i32 4, !dbg !5912
  %17 = load i32, ptr %16, align 8, !dbg !5912
  %18 = and i32 %17, 1, !dbg !5913
  %19 = icmp ne i32 %18, 0, !dbg !5911
  %20 = zext i1 %19 to i8, !dbg !5910
  store i8 %20, ptr %10, align 1, !dbg !5910
  call void @llvm.dbg.declare(metadata ptr %11, metadata !5914, metadata !DIExpression()), !dbg !5915
  store i32 0, ptr %11, align 4, !dbg !5915
  call void @llvm.dbg.declare(metadata ptr %12, metadata !5916, metadata !DIExpression()), !dbg !5917
  %21 = load ptr, ptr %6, align 8, !dbg !5918
  %22 = getelementptr inbounds %struct.cache_t, ptr %21, i32 0, i32 1, !dbg !5918
  %23 = getelementptr inbounds %struct.anon.0, ptr %22, i32 0, i32 1, !dbg !5918
  %24 = call i32 @pthread_rwlock_trywrlock(ptr noundef %23) #17, !dbg !5918
  %25 = icmp eq i32 %24, 16, !dbg !5918
  %26 = zext i1 %25 to i32, !dbg !5918
  %27 = sext i32 %26 to i64, !dbg !5918
  %28 = icmp ne i64 %27, 0, !dbg !5918
  br i1 %28, label %29, label %30, !dbg !5920

29:                                               ; preds = %1
  store i1 false, ptr %4, align 1, !dbg !5921
  br label %210, !dbg !5921

30:                                               ; preds = %1
  %31 = load ptr, ptr %6, align 8, !dbg !5922
  %32 = getelementptr inbounds %struct.cache_t, ptr %31, i32 0, i32 1, !dbg !5924
  %33 = getelementptr inbounds %struct.anon.0, ptr %32, i32 0, i32 0, !dbg !5925
  %34 = call zeroext i1 @list_empty(ptr noundef %33), !dbg !5926
  br i1 %34, label %35, label %44, !dbg !5927

35:                                               ; preds = %30
  %36 = load ptr, ptr %6, align 8, !dbg !5928
  %37 = getelementptr inbounds %struct.cache_t, ptr %36, i32 0, i32 1, !dbg !5928
  %38 = getelementptr inbounds %struct.anon.0, ptr %37, i32 0, i32 1, !dbg !5928
  %39 = call i32 @pthread_rwlock_unlock(ptr noundef %38) #17, !dbg !5928
  %40 = sext i32 %39 to i64, !dbg !5928
  %41 = icmp ne i64 %40, 0, !dbg !5928
  br i1 %41, label %42, label %43, !dbg !5931

42:                                               ; preds = %35
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.1.4, i32 noundef 287, ptr noundef @__FUNCTION__.cache_pruner_job, ptr noundef @.str.10.44), !dbg !5932
  br label %43, !dbg !5932

43:                                               ; preds = %42, %35
  store i1 false, ptr %4, align 1, !dbg !5933
  br label %210, !dbg !5933

44:                                               ; preds = %30
  call void @list_head_init(ptr noundef %12), !dbg !5934
  %45 = load ptr, ptr %6, align 8, !dbg !5935
  %46 = getelementptr inbounds %struct.cache_t, ptr %45, i32 0, i32 1, !dbg !5936
  %47 = getelementptr inbounds %struct.anon.0, ptr %46, i32 0, i32 0, !dbg !5937
  call void @list_append_list(ptr noundef %12, ptr noundef %47), !dbg !5938
  %48 = load ptr, ptr %6, align 8, !dbg !5939
  %49 = getelementptr inbounds %struct.cache_t, ptr %48, i32 0, i32 1, !dbg !5940
  %50 = getelementptr inbounds %struct.anon.0, ptr %49, i32 0, i32 0, !dbg !5941
  call void @list_head_init(ptr noundef %50), !dbg !5942
  %51 = load ptr, ptr %6, align 8, !dbg !5943
  %52 = getelementptr inbounds %struct.cache_t, ptr %51, i32 0, i32 1, !dbg !5943
  %53 = getelementptr inbounds %struct.anon.0, ptr %52, i32 0, i32 1, !dbg !5943
  %54 = call i32 @pthread_rwlock_unlock(ptr noundef %53) #17, !dbg !5943
  %55 = sext i32 %54 to i64, !dbg !5943
  %56 = icmp ne i64 %55, 0, !dbg !5943
  br i1 %56, label %57, label %58, !dbg !5945

57:                                               ; preds = %44
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.1.4, i32 noundef 298, ptr noundef @__FUNCTION__.cache_pruner_job, ptr noundef @.str.10.44), !dbg !5946
  br label %201, !dbg !5948

58:                                               ; preds = %44
  %59 = load ptr, ptr %6, align 8, !dbg !5949
  store ptr %59, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !5950, metadata !DIExpression()), !dbg !5955
  store ptr %9, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !5957, metadata !DIExpression()), !dbg !5958
  %60 = load ptr, ptr %2, align 8, !dbg !5959
  %61 = getelementptr inbounds %struct.cache_t, ptr %60, i32 0, i32 3, !dbg !5959
  %62 = getelementptr inbounds %struct.anon.2.3, ptr %61, i32 0, i32 1, !dbg !5959
  %63 = load i32, ptr %62, align 8, !dbg !5959
  %64 = load ptr, ptr %3, align 8, !dbg !5959
  %65 = call i32 @clock_gettime(i32 noundef %63, ptr noundef %64) #17, !dbg !5959
  %66 = icmp slt i32 %65, 0, !dbg !5959
  %67 = zext i1 %66 to i32, !dbg !5959
  %68 = sext i32 %67 to i64, !dbg !5959
  br i1 %66, label %69, label %70, !dbg !5961

69:                                               ; preds = %58
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.1.4, i32 noundef 94, ptr noundef @__FUNCTION__.clock_monotonic_gettime, ptr noundef @.str.9.45) #17, !dbg !5962
  br label %70, !dbg !5962

70:                                               ; preds = %69, %58
  %71 = getelementptr inbounds %struct.list_head, ptr %12, i32 0, i32 0, !dbg !5963
  %72 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %71, i32 0, i32 0, !dbg !5963
  %73 = load ptr, ptr %72, align 8, !dbg !5963
  %74 = call ptr @list_node_to_off_(ptr noundef %73, i64 noundef 0), !dbg !5963
  store ptr %74, ptr %7, align 8, !dbg !5963
  %75 = load ptr, ptr %7, align 8, !dbg !5963
  %76 = call ptr @list_node_from_off_(ptr noundef %75, i64 noundef 0), !dbg !5963
  %77 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %76, i32 0, i32 0, !dbg !5963
  %78 = load ptr, ptr %77, align 8, !dbg !5963
  %79 = call ptr @list_node_to_off_(ptr noundef %78, i64 noundef 0), !dbg !5963
  store ptr %79, ptr %8, align 8, !dbg !5963
  br label %80, !dbg !5963

80:                                               ; preds = %169, %70
  %81 = load ptr, ptr %7, align 8, !dbg !5965
  %82 = call ptr @list_node_from_off_(ptr noundef %81, i64 noundef 0), !dbg !5965
  %83 = getelementptr inbounds %struct.list_head, ptr %12, i32 0, i32 0, !dbg !5965
  %84 = icmp ne ptr %82, %83, !dbg !5965
  br i1 %84, label %85, label %176, !dbg !5963

85:                                               ; preds = %80
  call void @llvm.dbg.declare(metadata ptr %13, metadata !5967, metadata !DIExpression()), !dbg !5969
  %86 = load ptr, ptr %7, align 8, !dbg !5970
  %87 = getelementptr inbounds %struct.cache_entry_t, ptr %86, i32 0, i32 1, !dbg !5971
  %88 = load ptr, ptr %87, align 8, !dbg !5971
  store ptr %88, ptr %13, align 8, !dbg !5969
  %89 = getelementptr inbounds %struct.anon.3, ptr %9, i32 0, i32 0, !dbg !5972
  %90 = load i64, ptr %89, align 8, !dbg !5972
  %91 = load ptr, ptr %7, align 8, !dbg !5974
  %92 = getelementptr inbounds %struct.cache_entry_t, ptr %91, i32 0, i32 4, !dbg !5975
  %93 = load i64, ptr %92, align 8, !dbg !5975
  %94 = icmp slt i64 %90, %93, !dbg !5976
  br i1 %94, label %95, label %105, !dbg !5977

95:                                               ; preds = %85
  %96 = load i8, ptr %10, align 1, !dbg !5978
  %97 = trunc i8 %96 to i1, !dbg !5978
  %98 = xor i1 %97, true, !dbg !5978
  %99 = xor i1 %98, true, !dbg !5978
  %100 = xor i1 %99, true, !dbg !5978
  %101 = zext i1 %100 to i32, !dbg !5978
  %102 = sext i32 %101 to i64, !dbg !5978
  %103 = icmp ne i64 %102, 0, !dbg !5978
  br i1 %103, label %104, label %105, !dbg !5979

104:                                              ; preds = %95
  br label %176, !dbg !5980

105:                                              ; preds = %95, %85
  %106 = load ptr, ptr %7, align 8, !dbg !5981
  %107 = getelementptr inbounds %struct.cache_entry_t, ptr %106, i32 0, i32 0, !dbg !5982
  call void @list_del(ptr noundef %107), !dbg !5983
  %108 = load ptr, ptr %6, align 8, !dbg !5984
  %109 = getelementptr inbounds %struct.cache_t, ptr %108, i32 0, i32 0, !dbg !5984
  %110 = getelementptr inbounds %struct.anon.1, ptr %109, i32 0, i32 1, !dbg !5984
  %111 = call i32 @pthread_rwlock_wrlock(ptr noundef %110) #17, !dbg !5984
  %112 = sext i32 %111 to i64, !dbg !5984
  %113 = icmp ne i64 %112, 0, !dbg !5984
  br i1 %113, label %114, label %115, !dbg !5986

114:                                              ; preds = %105
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.1.4, i32 noundef 312, ptr noundef @__FUNCTION__.cache_pruner_job, ptr noundef @.str.11.46), !dbg !5987
  br label %169, !dbg !5989

115:                                              ; preds = %105
  %116 = load ptr, ptr %6, align 8, !dbg !5990
  %117 = getelementptr inbounds %struct.cache_t, ptr %116, i32 0, i32 0, !dbg !5991
  %118 = getelementptr inbounds %struct.anon.1, ptr %117, i32 0, i32 0, !dbg !5992
  %119 = load ptr, ptr %118, align 8, !dbg !5992
  %120 = load ptr, ptr %13, align 8, !dbg !5993
  %121 = call i32 @hash_del(ptr noundef %119, ptr noundef %120), !dbg !5994
  %122 = load ptr, ptr %6, align 8, !dbg !5995
  %123 = getelementptr inbounds %struct.cache_t, ptr %122, i32 0, i32 0, !dbg !5995
  %124 = getelementptr inbounds %struct.anon.1, ptr %123, i32 0, i32 1, !dbg !5995
  %125 = call i32 @pthread_rwlock_unlock(ptr noundef %124) #17, !dbg !5995
  %126 = sext i32 %125 to i64, !dbg !5995
  %127 = icmp ne i64 %126, 0, !dbg !5995
  br i1 %127, label %128, label %129, !dbg !5997

128:                                              ; preds = %115
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.1.4, i32 noundef 319, ptr noundef @__FUNCTION__.cache_pruner_job, ptr noundef @.str.10.44), !dbg !5998
  br label %129, !dbg !5998

129:                                              ; preds = %128, %115
  %130 = load ptr, ptr %7, align 8, !dbg !5999
  %131 = getelementptr inbounds %struct.cache_entry_t, ptr %130, i32 0, i32 2, !dbg !5999
  %132 = atomicrmw add ptr %131, i32 1 seq_cst, align 4, !dbg !5999
  %133 = add i32 %132, 1, !dbg !5999
  %134 = icmp eq i32 %133, 1, !dbg !6001
  br i1 %134, label %135, label %145, !dbg !6002

135:                                              ; preds = %129
  %136 = load ptr, ptr %6, align 8, !dbg !6003
  %137 = getelementptr inbounds %struct.cache_t, ptr %136, i32 0, i32 2, !dbg !6005
  %138 = getelementptr inbounds %struct.anon.5, ptr %137, i32 0, i32 1, !dbg !6006
  %139 = load ptr, ptr %138, align 8, !dbg !6006
  %140 = load ptr, ptr %7, align 8, !dbg !6007
  %141 = load ptr, ptr %6, align 8, !dbg !6008
  %142 = getelementptr inbounds %struct.cache_t, ptr %141, i32 0, i32 2, !dbg !6009
  %143 = getelementptr inbounds %struct.anon.5, ptr %142, i32 0, i32 2, !dbg !6010
  %144 = load ptr, ptr %143, align 8, !dbg !6010
  call void %139(ptr noundef %140, ptr noundef %144), !dbg !6003
  br label %166, !dbg !6011

145:                                              ; preds = %129
  %146 = load ptr, ptr %7, align 8, !dbg !6012
  %147 = getelementptr inbounds %struct.cache_entry_t, ptr %146, i32 0, i32 3, !dbg !6012
  %148 = atomicrmw or ptr %147, i32 1 seq_cst, align 4, !dbg !6012
  %149 = or i32 %148, 1, !dbg !6012
  %150 = load ptr, ptr %7, align 8, !dbg !6014
  %151 = getelementptr inbounds %struct.cache_entry_t, ptr %150, i32 0, i32 2, !dbg !6014
  %152 = atomicrmw add ptr %151, i32 -1 seq_cst, align 4, !dbg !6014
  %153 = add i32 %152, -1, !dbg !6014
  %154 = icmp ne i32 %153, 0, !dbg !6014
  br i1 %154, label %165, label %155, !dbg !6016

155:                                              ; preds = %145
  %156 = load ptr, ptr %6, align 8, !dbg !6017
  %157 = getelementptr inbounds %struct.cache_t, ptr %156, i32 0, i32 2, !dbg !6018
  %158 = getelementptr inbounds %struct.anon.5, ptr %157, i32 0, i32 1, !dbg !6019
  %159 = load ptr, ptr %158, align 8, !dbg !6019
  %160 = load ptr, ptr %7, align 8, !dbg !6020
  %161 = load ptr, ptr %6, align 8, !dbg !6021
  %162 = getelementptr inbounds %struct.cache_t, ptr %161, i32 0, i32 2, !dbg !6022
  %163 = getelementptr inbounds %struct.anon.5, ptr %162, i32 0, i32 2, !dbg !6023
  %164 = load ptr, ptr %163, align 8, !dbg !6023
  call void %159(ptr noundef %160, ptr noundef %164), !dbg !6017
  br label %165, !dbg !6017

165:                                              ; preds = %155, %145
  br label %166

166:                                              ; preds = %165, %135
  %167 = load i32, ptr %11, align 4, !dbg !6024
  %168 = add i32 %167, 1, !dbg !6024
  store i32 %168, ptr %11, align 4, !dbg !6024
  br label %169, !dbg !6025

169:                                              ; preds = %166, %114
  %170 = load ptr, ptr %8, align 8, !dbg !5965
  store ptr %170, ptr %7, align 8, !dbg !5965
  %171 = load ptr, ptr %7, align 8, !dbg !5965
  %172 = call ptr @list_node_from_off_(ptr noundef %171, i64 noundef 0), !dbg !5965
  %173 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %172, i32 0, i32 0, !dbg !5965
  %174 = load ptr, ptr %173, align 8, !dbg !5965
  %175 = call ptr @list_node_to_off_(ptr noundef %174, i64 noundef 0), !dbg !5965
  store ptr %175, ptr %8, align 8, !dbg !5965
  br label %80, !dbg !5965, !llvm.loop !6026

176:                                              ; preds = %104, %80
  %177 = call zeroext i1 @list_empty(ptr noundef %12), !dbg !6028
  br i1 %177, label %178, label %179, !dbg !6030

178:                                              ; preds = %176
  br label %201, !dbg !6031

179:                                              ; preds = %176
  %180 = load ptr, ptr %6, align 8, !dbg !6032
  %181 = getelementptr inbounds %struct.cache_t, ptr %180, i32 0, i32 1, !dbg !6032
  %182 = getelementptr inbounds %struct.anon.0, ptr %181, i32 0, i32 1, !dbg !6032
  %183 = call i32 @pthread_rwlock_wrlock(ptr noundef %182) #17, !dbg !6032
  %184 = icmp ne i32 %183, 0, !dbg !6032
  %185 = xor i1 %184, true, !dbg !6032
  %186 = xor i1 %185, true, !dbg !6032
  %187 = xor i1 %186, true, !dbg !6032
  %188 = zext i1 %187 to i32, !dbg !6032
  %189 = sext i32 %188 to i64, !dbg !6032
  %190 = icmp ne i64 %189, 0, !dbg !6032
  br i1 %190, label %191, label %199, !dbg !6034

191:                                              ; preds = %179
  %192 = load ptr, ptr %6, align 8, !dbg !6035
  %193 = getelementptr inbounds %struct.cache_t, ptr %192, i32 0, i32 1, !dbg !6037
  %194 = getelementptr inbounds %struct.anon.0, ptr %193, i32 0, i32 0, !dbg !6038
  call void @list_prepend_list(ptr noundef %194, ptr noundef %12), !dbg !6039
  %195 = load ptr, ptr %6, align 8, !dbg !6040
  %196 = getelementptr inbounds %struct.cache_t, ptr %195, i32 0, i32 1, !dbg !6041
  %197 = getelementptr inbounds %struct.anon.0, ptr %196, i32 0, i32 1, !dbg !6042
  %198 = call i32 @pthread_rwlock_unlock(ptr noundef %197) #17, !dbg !6043
  br label %200, !dbg !6044

199:                                              ; preds = %179
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.1.4, i32 noundef 346, ptr noundef @__FUNCTION__.cache_pruner_job, ptr noundef @.str.11.46), !dbg !6045
  br label %200

200:                                              ; preds = %199, %191
  br label %201, !dbg !6032

201:                                              ; preds = %200, %178, %57
  call void @llvm.dbg.label(metadata !6047), !dbg !6048
  %202 = load ptr, ptr %6, align 8, !dbg !6049
  %203 = getelementptr inbounds %struct.cache_t, ptr %202, i32 0, i32 5, !dbg !6049
  %204 = getelementptr inbounds %struct.anon.3.4, ptr %203, i32 0, i32 2, !dbg !6049
  %205 = load i32, ptr %11, align 4, !dbg !6049
  %206 = atomicrmw add ptr %204, i32 %205 seq_cst, align 4, !dbg !6049
  %207 = add i32 %206, %205, !dbg !6049
  %208 = load i32, ptr %11, align 4, !dbg !6050
  %209 = icmp ne i32 %208, 0, !dbg !6050
  store i1 %209, ptr %4, align 1, !dbg !6051
  br label %210, !dbg !6051

210:                                              ; preds = %201, %43, %29
  %211 = load i1, ptr %4, align 1, !dbg !6052
  ret i1 %211, !dbg !6052
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_job_add(ptr noundef %0, ptr noundef %1) #0 !dbg !6053 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !6056, metadata !DIExpression()), !dbg !6057
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !6058, metadata !DIExpression()), !dbg !6059
  %6 = load ptr, ptr %3, align 8, !dbg !6060
  %7 = icmp ne ptr %6, null, !dbg !6060
  br i1 %7, label %8, label %9, !dbg !6063

8:                                                ; preds = %2
  br label %10, !dbg !6063

9:                                                ; preds = %2
  call void @__assert_fail(ptr noundef @.str.7.55, ptr noundef @.str.1.43, i32 noundef 115, ptr noundef @__PRETTY_FUNCTION__.lwan_job_add) #23, !dbg !6060
  unreachable, !dbg !6060

10:                                               ; preds = %8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !6064, metadata !DIExpression()), !dbg !6071
  %11 = call noalias ptr @calloc(i64 noundef 1, i64 noundef 32) #19, !dbg !6072
  store ptr %11, ptr %5, align 8, !dbg !6071
  %12 = load ptr, ptr %5, align 8, !dbg !6073
  %13 = icmp ne ptr %12, null, !dbg !6073
  br i1 %13, label %15, label %14, !dbg !6075

14:                                               ; preds = %10
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.1.43, i32 noundef 119, ptr noundef @__FUNCTION__.lwan_job_add, ptr noundef @.str.8.56) #24, !dbg !6076
  unreachable, !dbg !6076

15:                                               ; preds = %10
  %16 = load ptr, ptr %3, align 8, !dbg !6077
  %17 = load ptr, ptr %5, align 8, !dbg !6078
  %18 = getelementptr inbounds %struct.job_t, ptr %17, i32 0, i32 1, !dbg !6079
  store ptr %16, ptr %18, align 8, !dbg !6080
  %19 = load ptr, ptr %4, align 8, !dbg !6081
  %20 = load ptr, ptr %5, align 8, !dbg !6082
  %21 = getelementptr inbounds %struct.job_t, ptr %20, i32 0, i32 2, !dbg !6083
  store ptr %19, ptr %21, align 8, !dbg !6084
  %22 = call i32 @pthread_mutex_lock(ptr noundef @queue_mutex) #17, !dbg !6085
  %23 = icmp ne i32 %22, 0, !dbg !6085
  %24 = xor i1 %23, true, !dbg !6085
  %25 = xor i1 %24, true, !dbg !6085
  %26 = xor i1 %25, true, !dbg !6085
  %27 = zext i1 %26 to i32, !dbg !6085
  %28 = sext i32 %27 to i64, !dbg !6085
  %29 = icmp ne i64 %28, 0, !dbg !6085
  br i1 %29, label %30, label %34, !dbg !6087

30:                                               ; preds = %15
  %31 = load ptr, ptr %5, align 8, !dbg !6088
  %32 = getelementptr inbounds %struct.job_t, ptr %31, i32 0, i32 0, !dbg !6090
  call void @list_add(ptr noundef @jobs, ptr noundef %32), !dbg !6091
  %33 = call i32 @pthread_mutex_unlock(ptr noundef @queue_mutex) #17, !dbg !6092
  br label %36, !dbg !6093

34:                                               ; preds = %15
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_warning_debug(ptr noundef @.str.1.43, i32 noundef 128, ptr noundef @__FUNCTION__.lwan_job_add, ptr noundef @.str.9.57), !dbg !6094
  %35 = load ptr, ptr %5, align 8, !dbg !6096
  call void @free(ptr noundef %35) #17, !dbg !6097
  br label %36

36:                                               ; preds = %34, %30
  ret void, !dbg !6098
}

; Function Attrs: nounwind
declare i32 @pthread_rwlock_destroy(ptr noundef) #2

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @lwan_status_critical_perror_debug(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3, ...) #13 !dbg !6099 {
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca [1 x %struct.__va_list_tag], align 16
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !6102, metadata !DIExpression()), !dbg !6103
  store i32 %1, ptr %6, align 4
  call void @llvm.dbg.declare(metadata ptr %6, metadata !6104, metadata !DIExpression()), !dbg !6103
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !6105, metadata !DIExpression()), !dbg !6103
  store ptr %3, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !6106, metadata !DIExpression()), !dbg !6103
  %10 = load volatile i8, ptr @quiet, align 1, !dbg !6107
  %11 = trunc i8 %10 to i1, !dbg !6107
  br i1 %11, label %20, label %12, !dbg !6103

12:                                               ; preds = %4
  call void @llvm.dbg.declare(metadata ptr %9, metadata !6109, metadata !DIExpression()), !dbg !6123
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !6123
  call void @llvm.va_start(ptr %13), !dbg !6123
  %14 = load ptr, ptr %5, align 8, !dbg !6123
  %15 = load i32, ptr %6, align 4, !dbg !6123
  %16 = load ptr, ptr %7, align 8, !dbg !6123
  %17 = load ptr, ptr %8, align 8, !dbg !6123
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !6123
  call void @status_out(ptr noundef %14, i32 noundef %15, ptr noundef %16, i32 noundef 24, ptr noundef %17, ptr noundef %18), !dbg !6123
  %19 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !6123
  call void @llvm.va_end(ptr %19), !dbg !6123
  br label %20, !dbg !6123

20:                                               ; preds = %12, %4
  call void @abort() #23, !dbg !6124
  unreachable, !dbg !6124
}

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(ptr noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @list_add(ptr noundef %0, ptr noundef %1) #0 !dbg !6126 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !6130, metadata !DIExpression()), !dbg !6131
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !6132, metadata !DIExpression()), !dbg !6133
  %5 = load ptr, ptr %3, align 8, !dbg !6134
  %6 = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 0, !dbg !6135
  %7 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %6, i32 0, i32 0, !dbg !6136
  %8 = load ptr, ptr %7, align 8, !dbg !6136
  %9 = load ptr, ptr %4, align 8, !dbg !6137
  %10 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %9, i32 0, i32 0, !dbg !6138
  store ptr %8, ptr %10, align 8, !dbg !6139
  %11 = load ptr, ptr %3, align 8, !dbg !6140
  %12 = getelementptr inbounds %struct.list_head, ptr %11, i32 0, i32 0, !dbg !6141
  %13 = load ptr, ptr %4, align 8, !dbg !6142
  %14 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %13, i32 0, i32 1, !dbg !6143
  store ptr %12, ptr %14, align 8, !dbg !6144
  %15 = load ptr, ptr %4, align 8, !dbg !6145
  %16 = load ptr, ptr %3, align 8, !dbg !6146
  %17 = getelementptr inbounds %struct.list_head, ptr %16, i32 0, i32 0, !dbg !6147
  %18 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %17, i32 0, i32 0, !dbg !6148
  %19 = load ptr, ptr %18, align 8, !dbg !6148
  %20 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %19, i32 0, i32 1, !dbg !6149
  store ptr %15, ptr %20, align 8, !dbg !6150
  %21 = load ptr, ptr %4, align 8, !dbg !6151
  %22 = load ptr, ptr %3, align 8, !dbg !6152
  %23 = getelementptr inbounds %struct.list_head, ptr %22, i32 0, i32 0, !dbg !6153
  %24 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %23, i32 0, i32 0, !dbg !6154
  store ptr %21, ptr %24, align 8, !dbg !6155
  %25 = load ptr, ptr %3, align 8, !dbg !6156
  ret void, !dbg !6157
}

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(ptr noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_status_warning_debug(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3, ...) #0 !dbg !6158 {
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca [1 x %struct.__va_list_tag], align 16
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !6159, metadata !DIExpression()), !dbg !6160
  store i32 %1, ptr %6, align 4
  call void @llvm.dbg.declare(metadata ptr %6, metadata !6161, metadata !DIExpression()), !dbg !6160
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !6162, metadata !DIExpression()), !dbg !6160
  store ptr %3, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !6163, metadata !DIExpression()), !dbg !6160
  %10 = load volatile i8, ptr @quiet, align 1, !dbg !6164
  %11 = trunc i8 %10 to i1, !dbg !6164
  br i1 %11, label %20, label %12, !dbg !6160

12:                                               ; preds = %4
  call void @llvm.dbg.declare(metadata ptr %9, metadata !6166, metadata !DIExpression()), !dbg !6168
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !6168
  call void @llvm.va_start(ptr %13), !dbg !6168
  %14 = load ptr, ptr %5, align 8, !dbg !6168
  %15 = load i32, ptr %6, align 4, !dbg !6168
  %16 = load ptr, ptr %7, align 8, !dbg !6168
  %17 = load ptr, ptr %8, align 8, !dbg !6168
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !6168
  call void @status_out(ptr noundef %14, i32 noundef %15, ptr noundef %16, i32 noundef 2, ptr noundef %17, ptr noundef %18), !dbg !6168
  %19 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !6168
  call void @llvm.va_end(ptr %19), !dbg !6168
  br label %20, !dbg !6168

20:                                               ; preds = %12, %4
  ret void, !dbg !6160
}

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_start(ptr) #14

; Function Attrs: noinline nounwind optnone uwtable
define internal void @status_out(ptr noundef %0, i32 noundef %1, ptr noundef %2, i32 noundef %3, ptr noundef %4, ptr noundef %5) #0 !dbg !6169 {
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  %10 = alloca i32, align 4
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca i32, align 4
  store ptr %0, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !6173, metadata !DIExpression()), !dbg !6174
  store i32 %1, ptr %8, align 4
  call void @llvm.dbg.declare(metadata ptr %8, metadata !6175, metadata !DIExpression()), !dbg !6176
  store ptr %2, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !6177, metadata !DIExpression()), !dbg !6178
  store i32 %3, ptr %10, align 4
  call void @llvm.dbg.declare(metadata ptr %10, metadata !6179, metadata !DIExpression()), !dbg !6180
  store ptr %4, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !6181, metadata !DIExpression()), !dbg !6182
  store ptr %5, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %12, metadata !6183, metadata !DIExpression()), !dbg !6184
  call void @llvm.dbg.declare(metadata ptr %13, metadata !6185, metadata !DIExpression()), !dbg !6186
  call void @llvm.dbg.declare(metadata ptr %14, metadata !6187, metadata !DIExpression()), !dbg !6188
  %15 = load ptr, ptr %11, align 8, !dbg !6189
  %16 = load ptr, ptr %12, align 8, !dbg !6190
  %17 = call i32 @vasprintf(ptr noundef %13, ptr noundef %15, ptr noundef %16) #17, !dbg !6191
  store i32 %17, ptr %14, align 4, !dbg !6192
  %18 = load i32, ptr %14, align 4, !dbg !6193
  %19 = icmp sge i32 %18, 0, !dbg !6195
  br i1 %19, label %20, label %29, !dbg !6196

20:                                               ; preds = %6
  %21 = load ptr, ptr %7, align 8, !dbg !6197
  %22 = load i32, ptr %8, align 4, !dbg !6199
  %23 = load ptr, ptr %9, align 8, !dbg !6200
  %24 = load i32, ptr %10, align 4, !dbg !6201
  %25 = load ptr, ptr %13, align 8, !dbg !6202
  %26 = load i32, ptr %14, align 4, !dbg !6203
  %27 = sext i32 %26 to i64, !dbg !6204
  call void @status_out_msg(ptr noundef %21, i32 noundef %22, ptr noundef %23, i32 noundef %24, ptr noundef %25, i64 noundef %27), !dbg !6205
  %28 = load ptr, ptr %13, align 8, !dbg !6206
  call void @free(ptr noundef %28) #17, !dbg !6207
  br label %29, !dbg !6208

29:                                               ; preds = %20, %6
  ret void, !dbg !6209
}

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_end(ptr) #14

; Function Attrs: nounwind
declare i32 @vasprintf(ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @status_out_msg(ptr noundef %0, i32 noundef %1, ptr noundef %2, i32 noundef %3, ptr noundef %4, i64 noundef %5) #0 !dbg !6210 {
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  %10 = alloca i32, align 4
  %11 = alloca ptr, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca ptr, align 8
  %17 = alloca ptr, align 8
  %18 = alloca [512 x i8], align 16
  %19 = alloca ptr, align 8
  store ptr %0, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !6213, metadata !DIExpression()), !dbg !6214
  store i32 %1, ptr %8, align 4
  call void @llvm.dbg.declare(metadata ptr %8, metadata !6215, metadata !DIExpression()), !dbg !6216
  store ptr %2, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !6217, metadata !DIExpression()), !dbg !6218
  store i32 %3, ptr %10, align 4
  call void @llvm.dbg.declare(metadata ptr %10, metadata !6219, metadata !DIExpression()), !dbg !6220
  store ptr %4, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !6221, metadata !DIExpression()), !dbg !6222
  store i64 %5, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %12, metadata !6223, metadata !DIExpression()), !dbg !6224
  call void @llvm.dbg.declare(metadata ptr %13, metadata !6225, metadata !DIExpression()), !dbg !6226
  %20 = call ptr @__errno_location() #21, !dbg !6227
  %21 = load i32, ptr %20, align 4, !dbg !6227
  store i32 %21, ptr %13, align 4, !dbg !6226
  call void @llvm.dbg.declare(metadata ptr %14, metadata !6228, metadata !DIExpression()), !dbg !6229
  call void @llvm.dbg.declare(metadata ptr %15, metadata !6230, metadata !DIExpression()), !dbg !6231
  call void @llvm.dbg.declare(metadata ptr %16, metadata !6232, metadata !DIExpression()), !dbg !6233
  %22 = load i32, ptr %10, align 4, !dbg !6234
  %23 = call ptr @get_color_start_for_type(i32 noundef %22, ptr noundef %14), !dbg !6235
  store ptr %23, ptr %16, align 8, !dbg !6233
  call void @llvm.dbg.declare(metadata ptr %17, metadata !6236, metadata !DIExpression()), !dbg !6237
  %24 = load i32, ptr %10, align 4, !dbg !6238
  %25 = call ptr @get_color_end_for_type(i32 noundef %24, ptr noundef %15), !dbg !6239
  store ptr %25, ptr %17, align 8, !dbg !6237
  %26 = call i32 @pthread_mutex_lock(ptr noundef @mutex) #17, !dbg !6240
  %27 = icmp slt i32 %26, 0, !dbg !6240
  %28 = zext i1 %27 to i32, !dbg !6240
  %29 = sext i32 %28 to i64, !dbg !6240
  %30 = icmp ne i64 %29, 0, !dbg !6240
  br i1 %30, label %31, label %32, !dbg !6242

31:                                               ; preds = %6
  call void @perror(ptr noundef @.str.217), !dbg !6243
  br label %32, !dbg !6243

32:                                               ; preds = %31, %6
  %33 = load ptr, ptr @stdout, align 8, !dbg !6244
  %34 = call i64 (i64, ...) @syscall(i64 noundef 186) #17, !dbg !6245
  %35 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %33, ptr noundef @.str.1.218, i64 noundef %34), !dbg !6246
  %36 = load ptr, ptr @stdout, align 8, !dbg !6247
  %37 = load ptr, ptr %7, align 8, !dbg !6248
  %38 = call ptr @basename(ptr noundef %37) #17, !dbg !6249
  %39 = load i32, ptr %8, align 4, !dbg !6250
  %40 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %36, ptr noundef @.str.2.219, ptr noundef %38, i32 noundef %39), !dbg !6251
  %41 = load ptr, ptr @stdout, align 8, !dbg !6252
  %42 = load ptr, ptr %9, align 8, !dbg !6253
  %43 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %41, ptr noundef @.str.3.220, ptr noundef %42), !dbg !6254
  %44 = load ptr, ptr @stdout, align 8, !dbg !6255
  %45 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %44, ptr noundef @.str.4.221), !dbg !6256
  %46 = load ptr, ptr %16, align 8, !dbg !6257
  %47 = load i64, ptr %14, align 8, !dbg !6258
  %48 = load ptr, ptr @stdout, align 8, !dbg !6259
  %49 = call i64 @fwrite(ptr noundef %46, i64 noundef %47, i64 noundef 1, ptr noundef %48), !dbg !6260
  %50 = load ptr, ptr %11, align 8, !dbg !6261
  %51 = load i64, ptr %12, align 8, !dbg !6262
  %52 = load ptr, ptr @stdout, align 8, !dbg !6263
  %53 = call i64 @fwrite(ptr noundef %50, i64 noundef %51, i64 noundef 1, ptr noundef %52), !dbg !6264
  %54 = load i32, ptr %10, align 4, !dbg !6265
  %55 = and i32 %54, 8, !dbg !6267
  %56 = icmp ne i32 %55, 0, !dbg !6267
  br i1 %56, label %57, label %70, !dbg !6268

57:                                               ; preds = %32
  call void @llvm.dbg.declare(metadata ptr %18, metadata !6269, metadata !DIExpression()), !dbg !6274
  call void @llvm.dbg.declare(metadata ptr %19, metadata !6275, metadata !DIExpression()), !dbg !6276
  %58 = load i32, ptr %13, align 4, !dbg !6277
  %59 = getelementptr inbounds [512 x i8], ptr %18, i64 0, i64 0, !dbg !6278
  %60 = call ptr @strerror_r(i32 noundef %58, ptr noundef %59, i64 noundef 511) #17, !dbg !6279
  store ptr %60, ptr %19, align 8, !dbg !6276
  %61 = load ptr, ptr @stdout, align 8, !dbg !6280
  %62 = call i32 @fputc(i32 noundef 58, ptr noundef %61), !dbg !6281
  %63 = load ptr, ptr @stdout, align 8, !dbg !6282
  %64 = call i32 @fputc(i32 noundef 32, ptr noundef %63), !dbg !6283
  %65 = load ptr, ptr %19, align 8, !dbg !6284
  %66 = load ptr, ptr %19, align 8, !dbg !6285
  %67 = call i64 @strlen(ptr noundef %66) #20, !dbg !6286
  %68 = load ptr, ptr @stdout, align 8, !dbg !6287
  %69 = call i64 @fwrite(ptr noundef %65, i64 noundef %67, i64 noundef 1, ptr noundef %68), !dbg !6288
  br label %70, !dbg !6289

70:                                               ; preds = %57, %32
  %71 = load ptr, ptr @stdout, align 8, !dbg !6290
  %72 = call i32 @fputc(i32 noundef 46, ptr noundef %71), !dbg !6291
  %73 = load ptr, ptr %17, align 8, !dbg !6292
  %74 = load i64, ptr %15, align 8, !dbg !6293
  %75 = load ptr, ptr @stdout, align 8, !dbg !6294
  %76 = call i64 @fwrite(ptr noundef %73, i64 noundef %74, i64 noundef 1, ptr noundef %75), !dbg !6295
  %77 = load ptr, ptr @stdout, align 8, !dbg !6296
  %78 = call i32 @fputc(i32 noundef 10, ptr noundef %77), !dbg !6297
  %79 = call i32 @pthread_mutex_unlock(ptr noundef @mutex) #17, !dbg !6298
  %80 = icmp slt i32 %79, 0, !dbg !6298
  %81 = zext i1 %80 to i32, !dbg !6298
  %82 = sext i32 %81 to i64, !dbg !6298
  %83 = icmp ne i64 %82, 0, !dbg !6298
  br i1 %83, label %84, label %85, !dbg !6300

84:                                               ; preds = %70
  call void @perror(ptr noundef @.str.5.222), !dbg !6301
  br label %85, !dbg !6301

85:                                               ; preds = %84, %70
  ret void, !dbg !6302
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @get_color_start_for_type(i32 noundef %0, ptr noundef %1) #0 !dbg !6303 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store i32 %0, ptr %3, align 4
  call void @llvm.dbg.declare(metadata ptr %3, metadata !6304, metadata !DIExpression()), !dbg !6305
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !6306, metadata !DIExpression()), !dbg !6307
  call void @llvm.dbg.declare(metadata ptr %5, metadata !6308, metadata !DIExpression()), !dbg !6309
  %6 = load i32, ptr %3, align 4, !dbg !6310
  %7 = and i32 %6, 1, !dbg !6312
  %8 = icmp ne i32 %7, 0, !dbg !6312
  br i1 %8, label %9, label %10, !dbg !6313

9:                                                ; preds = %2
  store ptr @.str.6.224, ptr %5, align 8, !dbg !6314
  br label %35, !dbg !6315

10:                                               ; preds = %2
  %11 = load i32, ptr %3, align 4, !dbg !6316
  %12 = and i32 %11, 2, !dbg !6318
  %13 = icmp ne i32 %12, 0, !dbg !6318
  br i1 %13, label %14, label %15, !dbg !6319

14:                                               ; preds = %10
  store ptr @.str.7.225, ptr %5, align 8, !dbg !6320
  br label %34, !dbg !6321

15:                                               ; preds = %10
  %16 = load i32, ptr %3, align 4, !dbg !6322
  %17 = and i32 %16, 16, !dbg !6324
  %18 = icmp ne i32 %17, 0, !dbg !6324
  br i1 %18, label %19, label %20, !dbg !6325

19:                                               ; preds = %15
  store ptr @.str.8.226, ptr %5, align 8, !dbg !6326
  br label %33, !dbg !6327

20:                                               ; preds = %15
  %21 = load i32, ptr %3, align 4, !dbg !6328
  %22 = and i32 %21, 32, !dbg !6330
  %23 = icmp ne i32 %22, 0, !dbg !6330
  br i1 %23, label %24, label %25, !dbg !6331

24:                                               ; preds = %20
  store ptr @.str.9.227, ptr %5, align 8, !dbg !6332
  br label %32, !dbg !6333

25:                                               ; preds = %20
  %26 = load i32, ptr %3, align 4, !dbg !6334
  %27 = and i32 %26, 8, !dbg !6336
  %28 = icmp ne i32 %27, 0, !dbg !6336
  br i1 %28, label %29, label %30, !dbg !6337

29:                                               ; preds = %25
  store ptr @.str.10.228, ptr %5, align 8, !dbg !6338
  br label %31, !dbg !6339

30:                                               ; preds = %25
  store ptr @.str.11.229, ptr %5, align 8, !dbg !6340
  br label %31

31:                                               ; preds = %30, %29
  br label %32

32:                                               ; preds = %31, %24
  br label %33

33:                                               ; preds = %32, %19
  br label %34

34:                                               ; preds = %33, %14
  br label %35

35:                                               ; preds = %34, %9
  %36 = load ptr, ptr %5, align 8, !dbg !6341
  %37 = call i64 @strlen(ptr noundef %36) #20, !dbg !6342
  %38 = load ptr, ptr %4, align 8, !dbg !6343
  store i64 %37, ptr %38, align 8, !dbg !6344
  %39 = load ptr, ptr %5, align 8, !dbg !6345
  ret ptr %39, !dbg !6346
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @get_color_end_for_type(i32 noundef %0, ptr noundef %1) #0 !dbg !2674 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  store i32 %0, ptr %3, align 4
  call void @llvm.dbg.declare(metadata ptr %3, metadata !6347, metadata !DIExpression()), !dbg !6348
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !6349, metadata !DIExpression()), !dbg !6350
  %5 = load ptr, ptr @get_color_end_for_type.retval, align 8, !dbg !6351
  %6 = call i64 @strlen(ptr noundef %5) #20, !dbg !6352
  %7 = load ptr, ptr %4, align 8, !dbg !6353
  store i64 %6, ptr %7, align 8, !dbg !6354
  %8 = load ptr, ptr @get_color_end_for_type.retval, align 8, !dbg !6355
  ret ptr %8, !dbg !6356
}

declare void @perror(ptr noundef) #5

; Function Attrs: nounwind
declare ptr @basename(ptr noundef) #2

declare i64 @fwrite(ptr noundef, i64 noundef, i64 noundef, ptr noundef) #5

; Function Attrs: nounwind
declare ptr @strerror_r(i32 noundef, ptr noundef, i64 noundef) #2

declare i32 @fputc(i32 noundef, ptr noundef) #5

; Function Attrs: nounwind
declare i32 @pthread_rwlock_trywrlock(ptr noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @list_empty(ptr noundef %0) #0 !dbg !6357 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !6362, metadata !DIExpression()), !dbg !6363
  %3 = load ptr, ptr %2, align 8, !dbg !6364
  %4 = load ptr, ptr %2, align 8, !dbg !6365
  %5 = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 0, !dbg !6366
  %6 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %5, i32 0, i32 0, !dbg !6367
  %7 = load ptr, ptr %6, align 8, !dbg !6367
  %8 = load ptr, ptr %2, align 8, !dbg !6368
  %9 = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 0, !dbg !6369
  %10 = icmp eq ptr %7, %9, !dbg !6370
  ret i1 %10, !dbg !6371
}

; Function Attrs: nounwind
declare i32 @pthread_rwlock_unlock(ptr noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_status_perror_debug(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3, ...) #0 !dbg !6372 {
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca [1 x %struct.__va_list_tag], align 16
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !6373, metadata !DIExpression()), !dbg !6374
  store i32 %1, ptr %6, align 4
  call void @llvm.dbg.declare(metadata ptr %6, metadata !6375, metadata !DIExpression()), !dbg !6374
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !6376, metadata !DIExpression()), !dbg !6374
  store ptr %3, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !6377, metadata !DIExpression()), !dbg !6374
  %10 = load volatile i8, ptr @quiet, align 1, !dbg !6378
  %11 = trunc i8 %10 to i1, !dbg !6378
  br i1 %11, label %20, label %12, !dbg !6374

12:                                               ; preds = %4
  call void @llvm.dbg.declare(metadata ptr %9, metadata !6380, metadata !DIExpression()), !dbg !6382
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !6382
  call void @llvm.va_start(ptr %13), !dbg !6382
  %14 = load ptr, ptr %5, align 8, !dbg !6382
  %15 = load i32, ptr %6, align 4, !dbg !6382
  %16 = load ptr, ptr %7, align 8, !dbg !6382
  %17 = load ptr, ptr %8, align 8, !dbg !6382
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !6382
  call void @status_out(ptr noundef %14, i32 noundef %15, ptr noundef %16, i32 noundef 8, ptr noundef %17, ptr noundef %18), !dbg !6382
  %19 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !6382
  call void @llvm.va_end(ptr %19), !dbg !6382
  br label %20, !dbg !6382

20:                                               ; preds = %12, %4
  ret void, !dbg !6374
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @list_append_list(ptr noundef %0, ptr noundef %1) #0 !dbg !6383 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !6386, metadata !DIExpression()), !dbg !6387
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !6388, metadata !DIExpression()), !dbg !6389
  call void @llvm.dbg.declare(metadata ptr %5, metadata !6390, metadata !DIExpression()), !dbg !6391
  %7 = load ptr, ptr %4, align 8, !dbg !6392
  %8 = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 0, !dbg !6393
  %9 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %8, i32 0, i32 1, !dbg !6394
  %10 = load ptr, ptr %9, align 8, !dbg !6394
  store ptr %10, ptr %5, align 8, !dbg !6391
  call void @llvm.dbg.declare(metadata ptr %6, metadata !6395, metadata !DIExpression()), !dbg !6396
  %11 = load ptr, ptr %3, align 8, !dbg !6397
  %12 = getelementptr inbounds %struct.list_head, ptr %11, i32 0, i32 0, !dbg !6398
  %13 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %12, i32 0, i32 1, !dbg !6399
  %14 = load ptr, ptr %13, align 8, !dbg !6399
  store ptr %14, ptr %6, align 8, !dbg !6396
  %15 = load ptr, ptr %5, align 8, !dbg !6400
  %16 = load ptr, ptr %3, align 8, !dbg !6401
  %17 = getelementptr inbounds %struct.list_head, ptr %16, i32 0, i32 0, !dbg !6402
  %18 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %17, i32 0, i32 1, !dbg !6403
  store ptr %15, ptr %18, align 8, !dbg !6404
  %19 = load ptr, ptr %3, align 8, !dbg !6405
  %20 = getelementptr inbounds %struct.list_head, ptr %19, i32 0, i32 0, !dbg !6406
  %21 = load ptr, ptr %5, align 8, !dbg !6407
  %22 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %21, i32 0, i32 0, !dbg !6408
  store ptr %20, ptr %22, align 8, !dbg !6409
  %23 = load ptr, ptr %4, align 8, !dbg !6410
  %24 = getelementptr inbounds %struct.list_head, ptr %23, i32 0, i32 0, !dbg !6411
  %25 = load ptr, ptr %6, align 8, !dbg !6412
  %26 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %25, i32 0, i32 0, !dbg !6413
  store ptr %24, ptr %26, align 8, !dbg !6414
  %27 = load ptr, ptr %6, align 8, !dbg !6415
  %28 = load ptr, ptr %4, align 8, !dbg !6416
  %29 = getelementptr inbounds %struct.list_head, ptr %28, i32 0, i32 0, !dbg !6417
  %30 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %29, i32 0, i32 1, !dbg !6418
  store ptr %27, ptr %30, align 8, !dbg !6419
  %31 = load ptr, ptr %4, align 8, !dbg !6420
  %32 = getelementptr inbounds %struct.list_head, ptr %31, i32 0, i32 0, !dbg !6421
  call void @list_del(ptr noundef %32), !dbg !6422
  %33 = load ptr, ptr %4, align 8, !dbg !6423
  call void @list_head_init(ptr noundef %33), !dbg !6424
  ret void, !dbg !6425
}

; Function Attrs: nounwind
declare i32 @clock_gettime(i32 noundef, ptr noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @list_node_to_off_(ptr noundef %0, i64 noundef %1) #0 !dbg !6426 {
  %3 = alloca ptr, align 8
  %4 = alloca i64, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !6429, metadata !DIExpression()), !dbg !6430
  store i64 %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !6431, metadata !DIExpression()), !dbg !6432
  %5 = load ptr, ptr %3, align 8, !dbg !6433
  %6 = load i64, ptr %4, align 8, !dbg !6434
  %7 = sub i64 0, %6, !dbg !6435
  %8 = getelementptr inbounds i8, ptr %5, i64 %7, !dbg !6435
  ret ptr %8, !dbg !6436
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @list_node_from_off_(ptr noundef %0, i64 noundef %1) #0 !dbg !6437 {
  %3 = alloca ptr, align 8
  %4 = alloca i64, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !6440, metadata !DIExpression()), !dbg !6441
  store i64 %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !6442, metadata !DIExpression()), !dbg !6443
  %5 = load ptr, ptr %3, align 8, !dbg !6444
  %6 = load i64, ptr %4, align 8, !dbg !6445
  %7 = getelementptr inbounds i8, ptr %5, i64 %6, !dbg !6446
  ret ptr %7, !dbg !6447
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @list_del(ptr noundef %0) #0 !dbg !6448 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !6451, metadata !DIExpression()), !dbg !6452
  %3 = load ptr, ptr %2, align 8, !dbg !6453
  %4 = load ptr, ptr %2, align 8, !dbg !6454
  %5 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %4, i32 0, i32 1, !dbg !6455
  %6 = load ptr, ptr %5, align 8, !dbg !6455
  %7 = load ptr, ptr %2, align 8, !dbg !6456
  %8 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %7, i32 0, i32 0, !dbg !6457
  %9 = load ptr, ptr %8, align 8, !dbg !6457
  %10 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %9, i32 0, i32 1, !dbg !6458
  store ptr %6, ptr %10, align 8, !dbg !6459
  %11 = load ptr, ptr %2, align 8, !dbg !6460
  %12 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %11, i32 0, i32 0, !dbg !6461
  %13 = load ptr, ptr %12, align 8, !dbg !6461
  %14 = load ptr, ptr %2, align 8, !dbg !6462
  %15 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %14, i32 0, i32 1, !dbg !6463
  %16 = load ptr, ptr %15, align 8, !dbg !6463
  %17 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %16, i32 0, i32 0, !dbg !6464
  store ptr %13, ptr %17, align 8, !dbg !6465
  ret void, !dbg !6466
}

; Function Attrs: nounwind
declare i32 @pthread_rwlock_wrlock(ptr noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @list_prepend_list(ptr noundef %0, ptr noundef %1) #0 !dbg !6467 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !6468, metadata !DIExpression()), !dbg !6469
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !6470, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.declare(metadata ptr %5, metadata !6472, metadata !DIExpression()), !dbg !6473
  %7 = load ptr, ptr %4, align 8, !dbg !6474
  %8 = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 0, !dbg !6475
  %9 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %8, i32 0, i32 1, !dbg !6476
  %10 = load ptr, ptr %9, align 8, !dbg !6476
  store ptr %10, ptr %5, align 8, !dbg !6473
  call void @llvm.dbg.declare(metadata ptr %6, metadata !6477, metadata !DIExpression()), !dbg !6478
  %11 = load ptr, ptr %3, align 8, !dbg !6479
  %12 = getelementptr inbounds %struct.list_head, ptr %11, i32 0, i32 0, !dbg !6480
  %13 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %12, i32 0, i32 0, !dbg !6481
  %14 = load ptr, ptr %13, align 8, !dbg !6481
  store ptr %14, ptr %6, align 8, !dbg !6478
  %15 = load ptr, ptr %4, align 8, !dbg !6482
  %16 = getelementptr inbounds %struct.list_head, ptr %15, i32 0, i32 0, !dbg !6483
  %17 = load ptr, ptr %3, align 8, !dbg !6484
  %18 = getelementptr inbounds %struct.list_head, ptr %17, i32 0, i32 0, !dbg !6485
  %19 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %18, i32 0, i32 0, !dbg !6486
  store ptr %16, ptr %19, align 8, !dbg !6487
  %20 = load ptr, ptr %3, align 8, !dbg !6488
  %21 = getelementptr inbounds %struct.list_head, ptr %20, i32 0, i32 0, !dbg !6489
  %22 = load ptr, ptr %4, align 8, !dbg !6490
  %23 = getelementptr inbounds %struct.list_head, ptr %22, i32 0, i32 0, !dbg !6491
  %24 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %23, i32 0, i32 1, !dbg !6492
  store ptr %21, ptr %24, align 8, !dbg !6493
  %25 = load ptr, ptr %5, align 8, !dbg !6494
  %26 = load ptr, ptr %6, align 8, !dbg !6495
  %27 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %26, i32 0, i32 1, !dbg !6496
  store ptr %25, ptr %27, align 8, !dbg !6497
  %28 = load ptr, ptr %6, align 8, !dbg !6498
  %29 = load ptr, ptr %5, align 8, !dbg !6499
  %30 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %29, i32 0, i32 0, !dbg !6500
  store ptr %28, ptr %30, align 8, !dbg !6501
  %31 = load ptr, ptr %4, align 8, !dbg !6502
  %32 = getelementptr inbounds %struct.list_head, ptr %31, i32 0, i32 0, !dbg !6503
  call void @list_del(ptr noundef %32), !dbg !6504
  %33 = load ptr, ptr %4, align 8, !dbg !6505
  call void @list_head_init(ptr noundef %33), !dbg !6506
  ret void, !dbg !6507
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @cache_destroy(ptr noundef %0) #0 !dbg !6508 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !6511, metadata !DIExpression()), !dbg !6512
  %3 = load ptr, ptr %2, align 8, !dbg !6513
  %4 = icmp ne ptr %3, null, !dbg !6513
  br i1 %4, label %5, label %6, !dbg !6516

5:                                                ; preds = %1
  br label %7, !dbg !6516

6:                                                ; preds = %1
  call void @__assert_fail(ptr noundef @.str.4.47, ptr noundef @.str.1.4, i32 noundef 146, ptr noundef @__PRETTY_FUNCTION__.cache_destroy) #23, !dbg !6513
  unreachable, !dbg !6513

7:                                                ; preds = %5
  %8 = load ptr, ptr %2, align 8, !dbg !6517
  %9 = getelementptr inbounds %struct.cache_t, ptr %8, i32 0, i32 5, !dbg !6517
  %10 = getelementptr inbounds %struct.anon.3.4, ptr %9, i32 0, i32 0, !dbg !6517
  %11 = load i32, ptr %10, align 4, !dbg !6517
  %12 = load ptr, ptr %2, align 8, !dbg !6517
  %13 = getelementptr inbounds %struct.cache_t, ptr %12, i32 0, i32 5, !dbg !6517
  %14 = getelementptr inbounds %struct.anon.3.4, ptr %13, i32 0, i32 1, !dbg !6517
  %15 = load i32, ptr %14, align 4, !dbg !6517
  %16 = load ptr, ptr %2, align 8, !dbg !6517
  %17 = getelementptr inbounds %struct.cache_t, ptr %16, i32 0, i32 5, !dbg !6517
  %18 = getelementptr inbounds %struct.anon.3.4, ptr %17, i32 0, i32 2, !dbg !6517
  %19 = load i32, ptr %18, align 4, !dbg !6517
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.1.4, i32 noundef 151, ptr noundef @__FUNCTION__.cache_destroy, ptr noundef @.str.5.48, i32 noundef %11, i32 noundef %15, i32 noundef %19), !dbg !6517
  %20 = load ptr, ptr %2, align 8, !dbg !6518
  call void @lwan_job_del(ptr noundef @cache_pruner_job, ptr noundef %20), !dbg !6519
  %21 = load ptr, ptr %2, align 8, !dbg !6520
  %22 = getelementptr inbounds %struct.cache_t, ptr %21, i32 0, i32 4, !dbg !6521
  %23 = load i32, ptr %22, align 8, !dbg !6522
  %24 = or i32 %23, 1, !dbg !6522
  store i32 %24, ptr %22, align 8, !dbg !6522
  %25 = load ptr, ptr %2, align 8, !dbg !6523
  %26 = call zeroext i1 @cache_pruner_job(ptr noundef %25), !dbg !6524
  %27 = load ptr, ptr %2, align 8, !dbg !6525
  %28 = getelementptr inbounds %struct.cache_t, ptr %27, i32 0, i32 0, !dbg !6526
  %29 = getelementptr inbounds %struct.anon.1, ptr %28, i32 0, i32 1, !dbg !6527
  %30 = call i32 @pthread_rwlock_destroy(ptr noundef %29) #17, !dbg !6528
  %31 = load ptr, ptr %2, align 8, !dbg !6529
  %32 = getelementptr inbounds %struct.cache_t, ptr %31, i32 0, i32 1, !dbg !6530
  %33 = getelementptr inbounds %struct.anon.0, ptr %32, i32 0, i32 1, !dbg !6531
  %34 = call i32 @pthread_rwlock_destroy(ptr noundef %33) #17, !dbg !6532
  %35 = load ptr, ptr %2, align 8, !dbg !6533
  %36 = getelementptr inbounds %struct.cache_t, ptr %35, i32 0, i32 0, !dbg !6534
  %37 = getelementptr inbounds %struct.anon.1, ptr %36, i32 0, i32 0, !dbg !6535
  %38 = load ptr, ptr %37, align 8, !dbg !6535
  call void @hash_free(ptr noundef %38), !dbg !6536
  %39 = load ptr, ptr %2, align 8, !dbg !6537
  call void @free(ptr noundef %39) #17, !dbg !6538
  ret void, !dbg !6539
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_status_debug_debug(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3, ...) #0 !dbg !6540 {
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca [1 x %struct.__va_list_tag], align 16
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !6541, metadata !DIExpression()), !dbg !6542
  store i32 %1, ptr %6, align 4
  call void @llvm.dbg.declare(metadata ptr %6, metadata !6543, metadata !DIExpression()), !dbg !6542
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !6544, metadata !DIExpression()), !dbg !6542
  store ptr %3, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !6545, metadata !DIExpression()), !dbg !6542
  %10 = load volatile i8, ptr @quiet, align 1, !dbg !6546
  %11 = trunc i8 %10 to i1, !dbg !6546
  br i1 %11, label %20, label %12, !dbg !6542

12:                                               ; preds = %4
  call void @llvm.dbg.declare(metadata ptr %9, metadata !6548, metadata !DIExpression()), !dbg !6550
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !6550
  call void @llvm.va_start(ptr %13), !dbg !6550
  %14 = load ptr, ptr %5, align 8, !dbg !6550
  %15 = load i32, ptr %6, align 4, !dbg !6550
  %16 = load ptr, ptr %7, align 8, !dbg !6550
  %17 = load ptr, ptr %8, align 8, !dbg !6550
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !6550
  call void @status_out(ptr noundef %14, i32 noundef %15, ptr noundef %16, i32 noundef 32, ptr noundef %17, ptr noundef %18), !dbg !6550
  %19 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !6550
  call void @llvm.va_end(ptr %19), !dbg !6550
  br label %20, !dbg !6550

20:                                               ; preds = %12, %4
  ret void, !dbg !6542
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_job_del(ptr noundef %0, ptr noundef %1) #0 !dbg !6551 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !6552, metadata !DIExpression()), !dbg !6553
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !6554, metadata !DIExpression()), !dbg !6555
  call void @llvm.dbg.declare(metadata ptr %5, metadata !6556, metadata !DIExpression()), !dbg !6557
  call void @llvm.dbg.declare(metadata ptr %6, metadata !6558, metadata !DIExpression()), !dbg !6559
  %7 = load ptr, ptr %3, align 8, !dbg !6560
  %8 = icmp ne ptr %7, null, !dbg !6560
  br i1 %8, label %9, label %10, !dbg !6563

9:                                                ; preds = %2
  br label %11, !dbg !6563

10:                                               ; preds = %2
  call void @__assert_fail(ptr noundef @.str.7.55, ptr noundef @.str.1.43, i32 noundef 137, ptr noundef @__PRETTY_FUNCTION__.lwan_job_del) #23, !dbg !6560
  unreachable, !dbg !6560

11:                                               ; preds = %9
  %12 = call i32 @pthread_mutex_lock(ptr noundef @queue_mutex) #17, !dbg !6564
  %13 = icmp ne i32 %12, 0, !dbg !6564
  %14 = xor i1 %13, true, !dbg !6564
  %15 = xor i1 %14, true, !dbg !6564
  %16 = xor i1 %15, true, !dbg !6564
  %17 = zext i1 %16 to i32, !dbg !6564
  %18 = sext i32 %17 to i64, !dbg !6564
  %19 = icmp ne i64 %18, 0, !dbg !6564
  br i1 %19, label %20, label %58, !dbg !6566

20:                                               ; preds = %11
  %21 = load ptr, ptr @jobs, align 8, !dbg !6567
  %22 = call ptr @list_node_to_off_.48(ptr noundef %21, i64 noundef 0), !dbg !6567
  store ptr %22, ptr %5, align 8, !dbg !6567
  %23 = load ptr, ptr %5, align 8, !dbg !6567
  %24 = call ptr @list_node_from_off_.49(ptr noundef %23, i64 noundef 0), !dbg !6567
  %25 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %24, i32 0, i32 0, !dbg !6567
  %26 = load ptr, ptr %25, align 8, !dbg !6567
  %27 = call ptr @list_node_to_off_.48(ptr noundef %26, i64 noundef 0), !dbg !6567
  store ptr %27, ptr %6, align 8, !dbg !6567
  br label %28, !dbg !6567

28:                                               ; preds = %49, %20
  %29 = load ptr, ptr %5, align 8, !dbg !6570
  %30 = call ptr @list_node_from_off_.49(ptr noundef %29, i64 noundef 0), !dbg !6570
  %31 = icmp ne ptr %30, @jobs, !dbg !6570
  br i1 %31, label %32, label %56, !dbg !6567

32:                                               ; preds = %28
  %33 = load ptr, ptr %3, align 8, !dbg !6572
  %34 = load ptr, ptr %5, align 8, !dbg !6575
  %35 = getelementptr inbounds %struct.job_t, ptr %34, i32 0, i32 1, !dbg !6576
  %36 = load ptr, ptr %35, align 8, !dbg !6576
  %37 = icmp eq ptr %33, %36, !dbg !6577
  br i1 %37, label %38, label %48, !dbg !6578

38:                                               ; preds = %32
  %39 = load ptr, ptr %4, align 8, !dbg !6579
  %40 = load ptr, ptr %5, align 8, !dbg !6580
  %41 = getelementptr inbounds %struct.job_t, ptr %40, i32 0, i32 2, !dbg !6581
  %42 = load ptr, ptr %41, align 8, !dbg !6581
  %43 = icmp eq ptr %39, %42, !dbg !6582
  br i1 %43, label %44, label %48, !dbg !6583

44:                                               ; preds = %38
  %45 = load ptr, ptr %5, align 8, !dbg !6584
  %46 = getelementptr inbounds %struct.job_t, ptr %45, i32 0, i32 0, !dbg !6586
  call void @list_del.51(ptr noundef %46), !dbg !6587
  %47 = load ptr, ptr %5, align 8, !dbg !6588
  call void @free(ptr noundef %47) #17, !dbg !6589
  br label %48, !dbg !6590

48:                                               ; preds = %44, %38, %32
  br label %49, !dbg !6591

49:                                               ; preds = %48
  %50 = load ptr, ptr %6, align 8, !dbg !6570
  store ptr %50, ptr %5, align 8, !dbg !6570
  %51 = load ptr, ptr %5, align 8, !dbg !6570
  %52 = call ptr @list_node_from_off_.49(ptr noundef %51, i64 noundef 0), !dbg !6570
  %53 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %52, i32 0, i32 0, !dbg !6570
  %54 = load ptr, ptr %53, align 8, !dbg !6570
  %55 = call ptr @list_node_to_off_.48(ptr noundef %54, i64 noundef 0), !dbg !6570
  store ptr %55, ptr %6, align 8, !dbg !6570
  br label %28, !dbg !6570, !llvm.loop !6592

56:                                               ; preds = %28
  %57 = call i32 @pthread_mutex_unlock(ptr noundef @queue_mutex) #17, !dbg !6594
  br label %58, !dbg !6595

58:                                               ; preds = %56, %11
  ret void, !dbg !6596
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @list_node_to_off_.48(ptr noundef %0, i64 noundef %1) #0 !dbg !6597 {
  %3 = alloca ptr, align 8
  %4 = alloca i64, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !6600, metadata !DIExpression()), !dbg !6601
  store i64 %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !6602, metadata !DIExpression()), !dbg !6603
  %5 = load ptr, ptr %3, align 8, !dbg !6604
  %6 = load i64, ptr %4, align 8, !dbg !6605
  %7 = sub i64 0, %6, !dbg !6606
  %8 = getelementptr inbounds i8, ptr %5, i64 %7, !dbg !6606
  ret ptr %8, !dbg !6607
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @list_node_from_off_.49(ptr noundef %0, i64 noundef %1) #0 !dbg !6608 {
  %3 = alloca ptr, align 8
  %4 = alloca i64, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !6611, metadata !DIExpression()), !dbg !6612
  store i64 %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !6613, metadata !DIExpression()), !dbg !6614
  %5 = load ptr, ptr %3, align 8, !dbg !6615
  %6 = load i64, ptr %4, align 8, !dbg !6616
  %7 = getelementptr inbounds i8, ptr %5, i64 %6, !dbg !6617
  ret ptr %7, !dbg !6618
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @list_del.51(ptr noundef %0) #0 !dbg !6619 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !6622, metadata !DIExpression()), !dbg !6623
  %3 = load ptr, ptr %2, align 8, !dbg !6624
  %4 = load ptr, ptr %2, align 8, !dbg !6625
  %5 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %4, i32 0, i32 1, !dbg !6626
  %6 = load ptr, ptr %5, align 8, !dbg !6626
  %7 = load ptr, ptr %2, align 8, !dbg !6627
  %8 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %7, i32 0, i32 0, !dbg !6628
  %9 = load ptr, ptr %8, align 8, !dbg !6628
  %10 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %9, i32 0, i32 1, !dbg !6629
  store ptr %6, ptr %10, align 8, !dbg !6630
  %11 = load ptr, ptr %2, align 8, !dbg !6631
  %12 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %11, i32 0, i32 0, !dbg !6632
  %13 = load ptr, ptr %12, align 8, !dbg !6632
  %14 = load ptr, ptr %2, align 8, !dbg !6633
  %15 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %14, i32 0, i32 1, !dbg !6634
  %16 = load ptr, ptr %15, align 8, !dbg !6634
  %17 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %16, i32 0, i32 0, !dbg !6635
  store ptr %13, ptr %17, align 8, !dbg !6636
  ret void, !dbg !6637
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @cache_get_and_ref_entry(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !6638 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca %struct.anon.3, align 8
  store ptr %0, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %10, metadata !6641, metadata !DIExpression()), !dbg !6642
  store ptr %1, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !6643, metadata !DIExpression()), !dbg !6644
  store ptr %2, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %12, metadata !6645, metadata !DIExpression()), !dbg !6646
  call void @llvm.dbg.declare(metadata ptr %13, metadata !6647, metadata !DIExpression()), !dbg !6648
  %15 = load ptr, ptr %10, align 8, !dbg !6649
  %16 = icmp ne ptr %15, null, !dbg !6649
  br i1 %16, label %17, label %18, !dbg !6652

17:                                               ; preds = %3
  br label %19, !dbg !6652

18:                                               ; preds = %3
  call void @__assert_fail(ptr noundef @.str.4.47, ptr noundef @.str.1.4, i32 noundef 175, ptr noundef @__PRETTY_FUNCTION__.cache_get_and_ref_entry) #23, !dbg !6649
  unreachable, !dbg !6649

19:                                               ; preds = %17
  %20 = load ptr, ptr %12, align 8, !dbg !6653
  %21 = icmp ne ptr %20, null, !dbg !6653
  br i1 %21, label %22, label %23, !dbg !6656

22:                                               ; preds = %19
  br label %24, !dbg !6656

23:                                               ; preds = %19
  call void @__assert_fail(ptr noundef @.str.6.49, ptr noundef @.str.1.4, i32 noundef 176, ptr noundef @__PRETTY_FUNCTION__.cache_get_and_ref_entry) #23, !dbg !6653
  unreachable, !dbg !6653

24:                                               ; preds = %22
  %25 = load ptr, ptr %11, align 8, !dbg !6657
  %26 = icmp ne ptr %25, null, !dbg !6657
  br i1 %26, label %27, label %28, !dbg !6660

27:                                               ; preds = %24
  br label %29, !dbg !6660

28:                                               ; preds = %24
  call void @__assert_fail(ptr noundef @.str.7.50, ptr noundef @.str.1.4, i32 noundef 177, ptr noundef @__PRETTY_FUNCTION__.cache_get_and_ref_entry) #23, !dbg !6657
  unreachable, !dbg !6657

29:                                               ; preds = %27
  %30 = load ptr, ptr %12, align 8, !dbg !6661
  store i32 0, ptr %30, align 4, !dbg !6662
  %31 = load ptr, ptr %10, align 8, !dbg !6663
  %32 = getelementptr inbounds %struct.cache_t, ptr %31, i32 0, i32 0, !dbg !6663
  %33 = getelementptr inbounds %struct.anon.1, ptr %32, i32 0, i32 1, !dbg !6663
  %34 = call i32 @pthread_rwlock_tryrdlock(ptr noundef %33) #17, !dbg !6663
  %35 = icmp eq i32 %34, 16, !dbg !6663
  %36 = zext i1 %35 to i32, !dbg !6663
  %37 = sext i32 %36 to i64, !dbg !6663
  %38 = icmp ne i64 %37, 0, !dbg !6663
  br i1 %38, label %39, label %41, !dbg !6665

39:                                               ; preds = %29
  %40 = load ptr, ptr %12, align 8, !dbg !6666
  store i32 11, ptr %40, align 4, !dbg !6668
  store ptr null, ptr %9, align 8, !dbg !6669
  br label %182, !dbg !6669

41:                                               ; preds = %29
  %42 = load ptr, ptr %10, align 8, !dbg !6670
  %43 = getelementptr inbounds %struct.cache_t, ptr %42, i32 0, i32 0, !dbg !6671
  %44 = getelementptr inbounds %struct.anon.1, ptr %43, i32 0, i32 0, !dbg !6672
  %45 = load ptr, ptr %44, align 8, !dbg !6672
  %46 = load ptr, ptr %11, align 8, !dbg !6673
  %47 = call ptr @hash_find(ptr noundef %45, ptr noundef %46), !dbg !6674
  store ptr %47, ptr %13, align 8, !dbg !6675
  %48 = load ptr, ptr %13, align 8, !dbg !6676
  %49 = icmp ne ptr %48, null, !dbg !6676
  %50 = xor i1 %49, true, !dbg !6676
  %51 = xor i1 %50, true, !dbg !6676
  %52 = zext i1 %51 to i32, !dbg !6676
  %53 = sext i32 %52 to i64, !dbg !6676
  %54 = icmp ne i64 %53, 0, !dbg !6676
  br i1 %54, label %55, label %70, !dbg !6678

55:                                               ; preds = %41
  %56 = load ptr, ptr %13, align 8, !dbg !6679
  %57 = getelementptr inbounds %struct.cache_entry_t, ptr %56, i32 0, i32 2, !dbg !6679
  %58 = atomicrmw add ptr %57, i32 1 seq_cst, align 4, !dbg !6679
  %59 = add i32 %58, 1, !dbg !6679
  %60 = load ptr, ptr %10, align 8, !dbg !6681
  %61 = getelementptr inbounds %struct.cache_t, ptr %60, i32 0, i32 0, !dbg !6682
  %62 = getelementptr inbounds %struct.anon.1, ptr %61, i32 0, i32 1, !dbg !6683
  %63 = call i32 @pthread_rwlock_unlock(ptr noundef %62) #17, !dbg !6684
  %64 = load ptr, ptr %10, align 8, !dbg !6685
  %65 = getelementptr inbounds %struct.cache_t, ptr %64, i32 0, i32 5, !dbg !6685
  %66 = getelementptr inbounds %struct.anon.3.4, ptr %65, i32 0, i32 0, !dbg !6685
  %67 = atomicrmw add ptr %66, i32 1 seq_cst, align 4, !dbg !6685
  %68 = add i32 %67, 1, !dbg !6685
  %69 = load ptr, ptr %13, align 8, !dbg !6686
  store ptr %69, ptr %9, align 8, !dbg !6687
  br label %182, !dbg !6687

70:                                               ; preds = %41
  %71 = load ptr, ptr %10, align 8, !dbg !6688
  %72 = getelementptr inbounds %struct.cache_t, ptr %71, i32 0, i32 0, !dbg !6689
  %73 = getelementptr inbounds %struct.anon.1, ptr %72, i32 0, i32 1, !dbg !6690
  %74 = call i32 @pthread_rwlock_unlock(ptr noundef %73) #17, !dbg !6691
  %75 = load ptr, ptr %10, align 8, !dbg !6692
  %76 = getelementptr inbounds %struct.cache_t, ptr %75, i32 0, i32 5, !dbg !6692
  %77 = getelementptr inbounds %struct.anon.3.4, ptr %76, i32 0, i32 1, !dbg !6692
  %78 = atomicrmw add ptr %77, i32 1 seq_cst, align 4, !dbg !6692
  %79 = add i32 %78, 1, !dbg !6692
  %80 = load ptr, ptr %10, align 8, !dbg !6693
  %81 = getelementptr inbounds %struct.cache_t, ptr %80, i32 0, i32 2, !dbg !6694
  %82 = getelementptr inbounds %struct.anon.5, ptr %81, i32 0, i32 0, !dbg !6695
  %83 = load ptr, ptr %82, align 8, !dbg !6695
  %84 = load ptr, ptr %11, align 8, !dbg !6696
  %85 = load ptr, ptr %10, align 8, !dbg !6697
  %86 = getelementptr inbounds %struct.cache_t, ptr %85, i32 0, i32 2, !dbg !6698
  %87 = getelementptr inbounds %struct.anon.5, ptr %86, i32 0, i32 2, !dbg !6699
  %88 = load ptr, ptr %87, align 8, !dbg !6699
  %89 = call ptr %83(ptr noundef %84, ptr noundef %88), !dbg !6693
  store ptr %89, ptr %13, align 8, !dbg !6700
  %90 = load ptr, ptr %13, align 8, !dbg !6701
  %91 = icmp ne ptr %90, null, !dbg !6701
  br i1 %91, label %93, label %92, !dbg !6703

92:                                               ; preds = %70
  store ptr null, ptr %9, align 8, !dbg !6704
  br label %182, !dbg !6704

93:                                               ; preds = %70
  %94 = load ptr, ptr %13, align 8, !dbg !6705
  call void @llvm.memset.p0.i64(ptr align 8 %94, i8 0, i64 40, i1 false), !dbg !6706
  %95 = load ptr, ptr %11, align 8, !dbg !6707
  %96 = call noalias ptr @strdup(ptr noundef %95) #17, !dbg !6708
  %97 = load ptr, ptr %13, align 8, !dbg !6709
  %98 = getelementptr inbounds %struct.cache_entry_t, ptr %97, i32 0, i32 1, !dbg !6710
  store ptr %96, ptr %98, align 8, !dbg !6711
  %99 = load ptr, ptr %13, align 8, !dbg !6712
  %100 = getelementptr inbounds %struct.cache_entry_t, ptr %99, i32 0, i32 2, !dbg !6713
  store i32 1, ptr %100, align 8, !dbg !6714
  %101 = load ptr, ptr %10, align 8, !dbg !6715
  %102 = getelementptr inbounds %struct.cache_t, ptr %101, i32 0, i32 0, !dbg !6717
  %103 = getelementptr inbounds %struct.anon.1, ptr %102, i32 0, i32 1, !dbg !6718
  %104 = call i32 @pthread_rwlock_trywrlock(ptr noundef %103) #17, !dbg !6719
  %105 = icmp eq i32 %104, 16, !dbg !6720
  br i1 %105, label %106, label %111, !dbg !6721

106:                                              ; preds = %93
  %107 = load ptr, ptr %13, align 8, !dbg !6722
  store ptr %107, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !6724, metadata !DIExpression()), !dbg !6728
  %108 = load ptr, ptr %6, align 8, !dbg !6730
  %109 = getelementptr inbounds %struct.cache_entry_t, ptr %108, i32 0, i32 3, !dbg !6731
  store i32 2, ptr %109, align 4, !dbg !6732
  %110 = load ptr, ptr %6, align 8, !dbg !6733
  store ptr %110, ptr %9, align 8, !dbg !6734
  br label %182, !dbg !6734

111:                                              ; preds = %93
  %112 = load ptr, ptr %10, align 8, !dbg !6735
  %113 = getelementptr inbounds %struct.cache_t, ptr %112, i32 0, i32 0, !dbg !6737
  %114 = getelementptr inbounds %struct.anon.1, ptr %113, i32 0, i32 0, !dbg !6738
  %115 = load ptr, ptr %114, align 8, !dbg !6738
  %116 = load ptr, ptr %13, align 8, !dbg !6739
  %117 = getelementptr inbounds %struct.cache_entry_t, ptr %116, i32 0, i32 1, !dbg !6740
  %118 = load ptr, ptr %117, align 8, !dbg !6740
  %119 = load ptr, ptr %13, align 8, !dbg !6741
  %120 = call i32 @hash_add_unique(ptr noundef %115, ptr noundef %118, ptr noundef %119), !dbg !6742
  %121 = icmp ne i32 %120, 0, !dbg !6742
  br i1 %121, label %171, label %122, !dbg !6743

122:                                              ; preds = %111
  call void @llvm.dbg.declare(metadata ptr %14, metadata !6744, metadata !DIExpression()), !dbg !6746
  %123 = load ptr, ptr %10, align 8, !dbg !6747
  store ptr %123, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !5950, metadata !DIExpression()), !dbg !6748
  store ptr %14, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !5957, metadata !DIExpression()), !dbg !6750
  %124 = load ptr, ptr %4, align 8, !dbg !6751
  %125 = getelementptr inbounds %struct.cache_t, ptr %124, i32 0, i32 3, !dbg !6751
  %126 = getelementptr inbounds %struct.anon.2.3, ptr %125, i32 0, i32 1, !dbg !6751
  %127 = load i32, ptr %126, align 8, !dbg !6751
  %128 = load ptr, ptr %5, align 8, !dbg !6751
  %129 = call i32 @clock_gettime(i32 noundef %127, ptr noundef %128) #17, !dbg !6751
  %130 = icmp slt i32 %129, 0, !dbg !6751
  %131 = zext i1 %130 to i32, !dbg !6751
  %132 = sext i32 %131 to i64, !dbg !6751
  br i1 %130, label %133, label %134, !dbg !6752

133:                                              ; preds = %122
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.1.4, i32 noundef 94, ptr noundef @__FUNCTION__.clock_monotonic_gettime, ptr noundef @.str.9.45) #17, !dbg !6753
  br label %134, !dbg !6753

134:                                              ; preds = %133, %122
  %135 = getelementptr inbounds %struct.anon.3, ptr %14, i32 0, i32 0, !dbg !6754
  %136 = load i64, ptr %135, align 8, !dbg !6754
  %137 = load ptr, ptr %10, align 8, !dbg !6755
  %138 = getelementptr inbounds %struct.cache_t, ptr %137, i32 0, i32 3, !dbg !6756
  %139 = getelementptr inbounds %struct.anon.2.3, ptr %138, i32 0, i32 0, !dbg !6757
  %140 = load i64, ptr %139, align 8, !dbg !6757
  %141 = add nsw i64 %136, %140, !dbg !6758
  %142 = load ptr, ptr %13, align 8, !dbg !6759
  %143 = getelementptr inbounds %struct.cache_entry_t, ptr %142, i32 0, i32 4, !dbg !6760
  store i64 %141, ptr %143, align 8, !dbg !6761
  %144 = load ptr, ptr %10, align 8, !dbg !6762
  %145 = getelementptr inbounds %struct.cache_t, ptr %144, i32 0, i32 1, !dbg !6762
  %146 = getelementptr inbounds %struct.anon.0, ptr %145, i32 0, i32 1, !dbg !6762
  %147 = call i32 @pthread_rwlock_wrlock(ptr noundef %146) #17, !dbg !6762
  %148 = icmp ne i32 %147, 0, !dbg !6762
  %149 = xor i1 %148, true, !dbg !6762
  %150 = xor i1 %149, true, !dbg !6762
  %151 = xor i1 %150, true, !dbg !6762
  %152 = zext i1 %151 to i32, !dbg !6762
  %153 = sext i32 %152 to i64, !dbg !6762
  %154 = icmp ne i64 %153, 0, !dbg !6762
  br i1 %154, label %155, label %165, !dbg !6764

155:                                              ; preds = %134
  %156 = load ptr, ptr %10, align 8, !dbg !6765
  %157 = getelementptr inbounds %struct.cache_t, ptr %156, i32 0, i32 1, !dbg !6767
  %158 = getelementptr inbounds %struct.anon.0, ptr %157, i32 0, i32 0, !dbg !6768
  %159 = load ptr, ptr %13, align 8, !dbg !6769
  %160 = getelementptr inbounds %struct.cache_entry_t, ptr %159, i32 0, i32 0, !dbg !6770
  call void @list_add_tail(ptr noundef %158, ptr noundef %160), !dbg !6771
  %161 = load ptr, ptr %10, align 8, !dbg !6772
  %162 = getelementptr inbounds %struct.cache_t, ptr %161, i32 0, i32 1, !dbg !6773
  %163 = getelementptr inbounds %struct.anon.0, ptr %162, i32 0, i32 1, !dbg !6774
  %164 = call i32 @pthread_rwlock_unlock(ptr noundef %163) #17, !dbg !6775
  br label %170, !dbg !6776

165:                                              ; preds = %134
  %166 = load ptr, ptr %13, align 8, !dbg !6777
  store ptr %166, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !6724, metadata !DIExpression()), !dbg !6779
  %167 = load ptr, ptr %7, align 8, !dbg !6781
  %168 = getelementptr inbounds %struct.cache_entry_t, ptr %167, i32 0, i32 3, !dbg !6782
  store i32 2, ptr %168, align 4, !dbg !6783
  %169 = load ptr, ptr %7, align 8, !dbg !6784
  store ptr %169, ptr %9, align 8, !dbg !6785
  br label %182, !dbg !6785

170:                                              ; preds = %155
  br label %176, !dbg !6786

171:                                              ; preds = %111
  %172 = load ptr, ptr %13, align 8, !dbg !6787
  store ptr %172, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !6724, metadata !DIExpression()), !dbg !6789
  %173 = load ptr, ptr %8, align 8, !dbg !6791
  %174 = getelementptr inbounds %struct.cache_entry_t, ptr %173, i32 0, i32 3, !dbg !6792
  store i32 2, ptr %174, align 4, !dbg !6793
  %175 = load ptr, ptr %8, align 8, !dbg !6794
  br label %176

176:                                              ; preds = %171, %170
  %177 = load ptr, ptr %10, align 8, !dbg !6795
  %178 = getelementptr inbounds %struct.cache_t, ptr %177, i32 0, i32 0, !dbg !6796
  %179 = getelementptr inbounds %struct.anon.1, ptr %178, i32 0, i32 1, !dbg !6797
  %180 = call i32 @pthread_rwlock_unlock(ptr noundef %179) #17, !dbg !6798
  %181 = load ptr, ptr %13, align 8, !dbg !6799
  store ptr %181, ptr %9, align 8, !dbg !6800
  br label %182, !dbg !6800

182:                                              ; preds = %176, %165, %106, %92, %55, %39
  %183 = load ptr, ptr %9, align 8, !dbg !6801
  ret ptr %183, !dbg !6801
}

; Function Attrs: nounwind
declare i32 @pthread_rwlock_tryrdlock(ptr noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @list_add_tail(ptr noundef %0, ptr noundef %1) #0 !dbg !6802 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !6805, metadata !DIExpression()), !dbg !6806
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !6807, metadata !DIExpression()), !dbg !6808
  %5 = load ptr, ptr %3, align 8, !dbg !6809
  %6 = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 0, !dbg !6810
  %7 = load ptr, ptr %4, align 8, !dbg !6811
  %8 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %7, i32 0, i32 0, !dbg !6812
  store ptr %6, ptr %8, align 8, !dbg !6813
  %9 = load ptr, ptr %3, align 8, !dbg !6814
  %10 = getelementptr inbounds %struct.list_head, ptr %9, i32 0, i32 0, !dbg !6815
  %11 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %10, i32 0, i32 1, !dbg !6816
  %12 = load ptr, ptr %11, align 8, !dbg !6816
  %13 = load ptr, ptr %4, align 8, !dbg !6817
  %14 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %13, i32 0, i32 1, !dbg !6818
  store ptr %12, ptr %14, align 8, !dbg !6819
  %15 = load ptr, ptr %4, align 8, !dbg !6820
  %16 = load ptr, ptr %3, align 8, !dbg !6821
  %17 = getelementptr inbounds %struct.list_head, ptr %16, i32 0, i32 0, !dbg !6822
  %18 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %17, i32 0, i32 1, !dbg !6823
  %19 = load ptr, ptr %18, align 8, !dbg !6823
  %20 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %19, i32 0, i32 0, !dbg !6824
  store ptr %15, ptr %20, align 8, !dbg !6825
  %21 = load ptr, ptr %4, align 8, !dbg !6826
  %22 = load ptr, ptr %3, align 8, !dbg !6827
  %23 = getelementptr inbounds %struct.list_head, ptr %22, i32 0, i32 0, !dbg !6828
  %24 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %23, i32 0, i32 1, !dbg !6829
  store ptr %21, ptr %24, align 8, !dbg !6830
  %25 = load ptr, ptr %3, align 8, !dbg !6831
  ret void, !dbg !6832
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @cache_entry_unref(ptr noundef %0, ptr noundef %1) #0 !dbg !6833 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !6836, metadata !DIExpression()), !dbg !6837
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !6838, metadata !DIExpression()), !dbg !6839
  %5 = load ptr, ptr %4, align 8, !dbg !6840
  %6 = icmp ne ptr %5, null, !dbg !6840
  br i1 %6, label %7, label %8, !dbg !6843

7:                                                ; preds = %2
  br label %9, !dbg !6843

8:                                                ; preds = %2
  call void @__assert_fail(ptr noundef @.str.8.51, ptr noundef @.str.1.4, i32 noundef 251, ptr noundef @__PRETTY_FUNCTION__.cache_entry_unref) #23, !dbg !6840
  unreachable, !dbg !6840

9:                                                ; preds = %7
  %10 = load ptr, ptr %4, align 8, !dbg !6844
  %11 = getelementptr inbounds %struct.cache_entry_t, ptr %10, i32 0, i32 3, !dbg !6846
  %12 = load i32, ptr %11, align 4, !dbg !6846
  %13 = and i32 %12, 2, !dbg !6847
  %14 = icmp ne i32 %13, 0, !dbg !6847
  br i1 %14, label %15, label %19, !dbg !6848

15:                                               ; preds = %9
  %16 = load ptr, ptr %4, align 8, !dbg !6849
  %17 = getelementptr inbounds %struct.cache_entry_t, ptr %16, i32 0, i32 1, !dbg !6851
  %18 = load ptr, ptr %17, align 8, !dbg !6851
  call void @free(ptr noundef %18) #17, !dbg !6852
  br label %33, !dbg !6853

19:                                               ; preds = %9
  %20 = load ptr, ptr %4, align 8, !dbg !6854
  %21 = getelementptr inbounds %struct.cache_entry_t, ptr %20, i32 0, i32 2, !dbg !6854
  %22 = atomicrmw add ptr %21, i32 -1 seq_cst, align 4, !dbg !6854
  %23 = add i32 %22, -1, !dbg !6854
  %24 = icmp ne i32 %23, 0, !dbg !6854
  br i1 %24, label %25, label %26, !dbg !6856

25:                                               ; preds = %19
  br label %43, !dbg !6857

26:                                               ; preds = %19
  %27 = load ptr, ptr %4, align 8, !dbg !6858
  %28 = getelementptr inbounds %struct.cache_entry_t, ptr %27, i32 0, i32 3, !dbg !6860
  %29 = load i32, ptr %28, align 4, !dbg !6860
  %30 = and i32 %29, 1, !dbg !6861
  %31 = icmp ne i32 %30, 0, !dbg !6861
  br i1 %31, label %32, label %43, !dbg !6862

32:                                               ; preds = %26
  br label %33, !dbg !6863

33:                                               ; preds = %32, %15
  call void @llvm.dbg.label(metadata !6864), !dbg !6866
  %34 = load ptr, ptr %3, align 8, !dbg !6867
  %35 = getelementptr inbounds %struct.cache_t, ptr %34, i32 0, i32 2, !dbg !6868
  %36 = getelementptr inbounds %struct.anon.5, ptr %35, i32 0, i32 1, !dbg !6869
  %37 = load ptr, ptr %36, align 8, !dbg !6869
  %38 = load ptr, ptr %4, align 8, !dbg !6870
  %39 = load ptr, ptr %3, align 8, !dbg !6871
  %40 = getelementptr inbounds %struct.cache_t, ptr %39, i32 0, i32 2, !dbg !6872
  %41 = getelementptr inbounds %struct.anon.5, ptr %40, i32 0, i32 2, !dbg !6873
  %42 = load ptr, ptr %41, align 8, !dbg !6873
  call void %37(ptr noundef %38, ptr noundef %42), !dbg !6867
  br label %43, !dbg !6874

43:                                               ; preds = %33, %26, %25
  ret void, !dbg !6875
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @cache_coro_get_and_ref_entry(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !6876 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !6879, metadata !DIExpression()), !dbg !6880
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !6881, metadata !DIExpression()), !dbg !6882
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !6883, metadata !DIExpression()), !dbg !6884
  call void @llvm.dbg.declare(metadata ptr %8, metadata !6885, metadata !DIExpression()), !dbg !6887
  store i32 5, ptr %8, align 4, !dbg !6887
  br label %11, !dbg !6888

11:                                               ; preds = %38, %3
  %12 = load i32, ptr %8, align 4, !dbg !6889
  %13 = icmp ne i32 %12, 0, !dbg !6891
  br i1 %13, label %14, label %41, !dbg !6891

14:                                               ; preds = %11
  call void @llvm.dbg.declare(metadata ptr %9, metadata !6892, metadata !DIExpression()), !dbg !6894
  call void @llvm.dbg.declare(metadata ptr %10, metadata !6895, metadata !DIExpression()), !dbg !6896
  %15 = load ptr, ptr %5, align 8, !dbg !6897
  %16 = load ptr, ptr %7, align 8, !dbg !6898
  %17 = call ptr @cache_get_and_ref_entry(ptr noundef %15, ptr noundef %16, ptr noundef %9), !dbg !6899
  store ptr %17, ptr %10, align 8, !dbg !6896
  %18 = load ptr, ptr %10, align 8, !dbg !6900
  %19 = icmp ne ptr %18, null, !dbg !6900
  %20 = xor i1 %19, true, !dbg !6900
  %21 = xor i1 %20, true, !dbg !6900
  %22 = zext i1 %21 to i32, !dbg !6900
  %23 = sext i32 %22 to i64, !dbg !6900
  %24 = icmp ne i64 %23, 0, !dbg !6900
  br i1 %24, label %25, label %30, !dbg !6902

25:                                               ; preds = %14
  %26 = load ptr, ptr %6, align 8, !dbg !6903
  %27 = load ptr, ptr %5, align 8, !dbg !6905
  %28 = load ptr, ptr %10, align 8, !dbg !6906
  call void @coro_defer2(ptr noundef %26, ptr noundef @cache_entry_unref, ptr noundef %27, ptr noundef %28), !dbg !6907
  %29 = load ptr, ptr %10, align 8, !dbg !6908
  store ptr %29, ptr %4, align 8, !dbg !6909
  br label %42, !dbg !6909

30:                                               ; preds = %14
  %31 = load i32, ptr %9, align 4, !dbg !6910
  %32 = icmp eq i32 %31, 11, !dbg !6912
  br i1 %32, label %33, label %36, !dbg !6913

33:                                               ; preds = %30
  %34 = load ptr, ptr %6, align 8, !dbg !6914
  %35 = call i32 @coro_yield(ptr noundef %34, i32 noundef 0), !dbg !6916
  br label %37, !dbg !6917

36:                                               ; preds = %30
  br label %41, !dbg !6918

37:                                               ; preds = %33
  br label %38, !dbg !6920

38:                                               ; preds = %37
  %39 = load i32, ptr %8, align 4, !dbg !6921
  %40 = add nsw i32 %39, -1, !dbg !6921
  store i32 %40, ptr %8, align 4, !dbg !6921
  br label %11, !dbg !6922, !llvm.loop !6923

41:                                               ; preds = %36, %11
  store ptr null, ptr %4, align 8, !dbg !6925
  br label %42, !dbg !6925

42:                                               ; preds = %41, %25
  %43 = load ptr, ptr %4, align 8, !dbg !6926
  ret ptr %43, !dbg !6926
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local void @coro_defer2(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #11 !dbg !6927 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !6959, metadata !DIExpression()), !dbg !6960
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !6961, metadata !DIExpression()), !dbg !6962
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !6963, metadata !DIExpression()), !dbg !6964
  store ptr %3, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !6965, metadata !DIExpression()), !dbg !6966
  %9 = load ptr, ptr %5, align 8, !dbg !6967
  %10 = load ptr, ptr %6, align 8, !dbg !6968
  %11 = load ptr, ptr %7, align 8, !dbg !6969
  %12 = load ptr, ptr %8, align 8, !dbg !6970
  call void @coro_defer_any(ptr noundef %9, ptr noundef %10, ptr noundef %11, ptr noundef %12), !dbg !6971
  ret void, !dbg !6972
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local i32 @coro_yield(ptr noundef %0, i32 noundef %1) #11 !dbg !6973 {
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !6976, metadata !DIExpression()), !dbg !6977
  store i32 %1, ptr %4, align 4
  call void @llvm.dbg.declare(metadata ptr %4, metadata !6978, metadata !DIExpression()), !dbg !6979
  %5 = load ptr, ptr %3, align 8, !dbg !6980
  %6 = icmp ne ptr %5, null, !dbg !6980
  br i1 %6, label %7, label %8, !dbg !6983

7:                                                ; preds = %2
  br label %9, !dbg !6983

8:                                                ; preds = %2
  call void @__assert_fail(ptr noundef @.str.25.52, ptr noundef @.str.1.26, i32 noundef 267, ptr noundef @__PRETTY_FUNCTION__.coro_yield) #23, !dbg !6980
  unreachable, !dbg !6980

9:                                                ; preds = %7
  %10 = load i32, ptr %4, align 4, !dbg !6984
  %11 = load ptr, ptr %3, align 8, !dbg !6985
  %12 = getelementptr inbounds %struct.coro_t_, ptr %11, i32 0, i32 2, !dbg !6986
  store i32 %10, ptr %12, align 8, !dbg !6987
  %13 = load ptr, ptr %3, align 8, !dbg !6988
  %14 = getelementptr inbounds %struct.coro_t_, ptr %13, i32 0, i32 0, !dbg !6989
  %15 = load ptr, ptr %14, align 8, !dbg !6989
  %16 = getelementptr inbounds %struct.coro_switcher_t_, ptr %15, i32 0, i32 1, !dbg !6990
  %17 = load ptr, ptr %3, align 8, !dbg !6991
  %18 = getelementptr inbounds %struct.coro_t_, ptr %17, i32 0, i32 0, !dbg !6992
  %19 = load ptr, ptr %18, align 8, !dbg !6992
  %20 = getelementptr inbounds %struct.coro_switcher_t_, ptr %19, i32 0, i32 0, !dbg !6993
  call void @coro_swapcontext(ptr noundef %16, ptr noundef %20), !dbg !6994
  %21 = load ptr, ptr %3, align 8, !dbg !6995
  %22 = getelementptr inbounds %struct.coro_t_, ptr %21, i32 0, i32 2, !dbg !6996
  %23 = load i32, ptr %22, align 8, !dbg !6996
  ret i32 %23, !dbg !6997
}

declare void @coro_swapcontext(ptr noundef, ptr noundef) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal void @coro_defer_any(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 !dbg !6998 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !7001, metadata !DIExpression()), !dbg !7002
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !7003, metadata !DIExpression()), !dbg !7004
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !7005, metadata !DIExpression()), !dbg !7006
  store ptr %3, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !7007, metadata !DIExpression()), !dbg !7008
  call void @llvm.dbg.declare(metadata ptr %9, metadata !7009, metadata !DIExpression()), !dbg !7010
  %10 = call noalias ptr @malloc(i64 noundef 32) #18, !dbg !7011
  store ptr %10, ptr %9, align 8, !dbg !7010
  %11 = load ptr, ptr %9, align 8, !dbg !7012
  %12 = icmp ne ptr %11, null, !dbg !7012
  %13 = xor i1 %12, true, !dbg !7012
  %14 = zext i1 %13 to i32, !dbg !7012
  %15 = sext i32 %14 to i64, !dbg !7012
  %16 = icmp ne i64 %15, 0, !dbg !7012
  br i1 %16, label %17, label %18, !dbg !7014

17:                                               ; preds = %4
  br label %41, !dbg !7015

18:                                               ; preds = %4
  %19 = load ptr, ptr %6, align 8, !dbg !7016
  %20 = icmp ne ptr %19, null, !dbg !7016
  br i1 %20, label %21, label %22, !dbg !7019

21:                                               ; preds = %18
  br label %23, !dbg !7019

22:                                               ; preds = %18
  call void @__assert_fail(ptr noundef @.str.3.30, ptr noundef @.str.1.26, i32 noundef 291, ptr noundef @__PRETTY_FUNCTION__.coro_defer_any) #23, !dbg !7016
  unreachable, !dbg !7016

23:                                               ; preds = %21
  %24 = load ptr, ptr %5, align 8, !dbg !7020
  %25 = getelementptr inbounds %struct.coro_t_, ptr %24, i32 0, i32 3, !dbg !7021
  %26 = load ptr, ptr %25, align 8, !dbg !7021
  %27 = load ptr, ptr %9, align 8, !dbg !7022
  %28 = getelementptr inbounds %struct.coro_defer_t_, ptr %27, i32 0, i32 0, !dbg !7023
  store ptr %26, ptr %28, align 8, !dbg !7024
  %29 = load ptr, ptr %6, align 8, !dbg !7025
  %30 = load ptr, ptr %9, align 8, !dbg !7026
  %31 = getelementptr inbounds %struct.coro_defer_t_, ptr %30, i32 0, i32 1, !dbg !7027
  store ptr %29, ptr %31, align 8, !dbg !7028
  %32 = load ptr, ptr %7, align 8, !dbg !7029
  %33 = load ptr, ptr %9, align 8, !dbg !7030
  %34 = getelementptr inbounds %struct.coro_defer_t_, ptr %33, i32 0, i32 2, !dbg !7031
  store ptr %32, ptr %34, align 8, !dbg !7032
  %35 = load ptr, ptr %8, align 8, !dbg !7033
  %36 = load ptr, ptr %9, align 8, !dbg !7034
  %37 = getelementptr inbounds %struct.coro_defer_t_, ptr %36, i32 0, i32 3, !dbg !7035
  store ptr %35, ptr %37, align 8, !dbg !7036
  %38 = load ptr, ptr %9, align 8, !dbg !7037
  %39 = load ptr, ptr %5, align 8, !dbg !7038
  %40 = getelementptr inbounds %struct.coro_t_, ptr %39, i32 0, i32 3, !dbg !7039
  store ptr %38, ptr %40, align 8, !dbg !7040
  br label %41, !dbg !7041

41:                                               ; preds = %23, %17
  ret void, !dbg !7041
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @parse_time_period(ptr noundef %0, i32 noundef %1) #0 !dbg !7042 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8, align 1
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !7045, metadata !DIExpression()), !dbg !7046
  store i32 %1, ptr %5, align 4
  call void @llvm.dbg.declare(metadata ptr %5, metadata !7047, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.declare(metadata ptr %6, metadata !7049, metadata !DIExpression()), !dbg !7050
  store i32 0, ptr %6, align 4, !dbg !7050
  call void @llvm.dbg.declare(metadata ptr %7, metadata !7051, metadata !DIExpression()), !dbg !7052
  call void @llvm.dbg.declare(metadata ptr %8, metadata !7053, metadata !DIExpression()), !dbg !7054
  %9 = load ptr, ptr %4, align 8, !dbg !7055
  %10 = icmp ne ptr %9, null, !dbg !7055
  br i1 %10, label %13, label %11, !dbg !7057

11:                                               ; preds = %2
  %12 = load i32, ptr %5, align 4, !dbg !7058
  store i32 %12, ptr %3, align 4, !dbg !7059
  br label %80, !dbg !7059

13:                                               ; preds = %2
  br label %14, !dbg !7060

14:                                               ; preds = %65, %13
  %15 = load ptr, ptr %4, align 8, !dbg !7061
  %16 = load i8, ptr %15, align 1, !dbg !7062
  %17 = sext i8 %16 to i32, !dbg !7062
  %18 = icmp ne i32 %17, 0, !dbg !7062
  br i1 %18, label %19, label %23, !dbg !7063

19:                                               ; preds = %14
  %20 = load ptr, ptr %4, align 8, !dbg !7064
  %21 = call i32 (ptr, ptr, ...) @__isoc99_sscanf(ptr noundef %20, ptr noundef @.str.12.53, ptr noundef %7, ptr noundef %8) #17, !dbg !7065
  %22 = icmp eq i32 %21, 2, !dbg !7066
  br label %23

23:                                               ; preds = %19, %14
  %24 = phi i1 [ false, %14 ], [ %22, %19 ], !dbg !7067
  br i1 %24, label %25, label %71, !dbg !7060

25:                                               ; preds = %23
  %26 = load i8, ptr %8, align 1, !dbg !7068
  %27 = sext i8 %26 to i32, !dbg !7068
  switch i32 %27, label %62 [
    i32 115, label %28
    i32 109, label %32
    i32 104, label %37
    i32 100, label %42
    i32 119, label %47
    i32 77, label %52
    i32 121, label %57
  ], !dbg !7070

28:                                               ; preds = %25
  %29 = load i32, ptr %7, align 4, !dbg !7071
  %30 = load i32, ptr %6, align 4, !dbg !7073
  %31 = add i32 %30, %29, !dbg !7073
  store i32 %31, ptr %6, align 4, !dbg !7073
  br label %65, !dbg !7074

32:                                               ; preds = %25
  %33 = load i32, ptr %7, align 4, !dbg !7075
  %34 = mul i32 %33, 60, !dbg !7076
  %35 = load i32, ptr %6, align 4, !dbg !7077
  %36 = add i32 %35, %34, !dbg !7077
  store i32 %36, ptr %6, align 4, !dbg !7077
  br label %65, !dbg !7078

37:                                               ; preds = %25
  %38 = load i32, ptr %7, align 4, !dbg !7079
  %39 = mul i32 %38, 3600, !dbg !7080
  %40 = load i32, ptr %6, align 4, !dbg !7081
  %41 = add i32 %40, %39, !dbg !7081
  store i32 %41, ptr %6, align 4, !dbg !7081
  br label %65, !dbg !7082

42:                                               ; preds = %25
  %43 = load i32, ptr %7, align 4, !dbg !7083
  %44 = mul i32 %43, 86400, !dbg !7084
  %45 = load i32, ptr %6, align 4, !dbg !7085
  %46 = add i32 %45, %44, !dbg !7085
  store i32 %46, ptr %6, align 4, !dbg !7085
  br label %65, !dbg !7086

47:                                               ; preds = %25
  %48 = load i32, ptr %7, align 4, !dbg !7087
  %49 = mul i32 %48, 604800, !dbg !7088
  %50 = load i32, ptr %6, align 4, !dbg !7089
  %51 = add i32 %50, %49, !dbg !7089
  store i32 %51, ptr %6, align 4, !dbg !7089
  br label %65, !dbg !7090

52:                                               ; preds = %25
  %53 = load i32, ptr %7, align 4, !dbg !7091
  %54 = mul i32 %53, 2678400, !dbg !7092
  %55 = load i32, ptr %6, align 4, !dbg !7093
  %56 = add i32 %55, %54, !dbg !7093
  store i32 %56, ptr %6, align 4, !dbg !7093
  br label %65, !dbg !7094

57:                                               ; preds = %25
  %58 = load i32, ptr %7, align 4, !dbg !7095
  %59 = mul i32 %58, 32140800, !dbg !7096
  %60 = load i32, ptr %6, align 4, !dbg !7097
  %61 = add i32 %60, %59, !dbg !7097
  store i32 %61, ptr %6, align 4, !dbg !7097
  br label %65, !dbg !7098

62:                                               ; preds = %25
  %63 = load i8, ptr %8, align 1, !dbg !7099
  %64 = sext i8 %63 to i32, !dbg !7099
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_warning_debug(ptr noundef @.str.1.13, i32 noundef 54, ptr noundef @__FUNCTION__.parse_time_period, ptr noundef @.str.2.14, i32 noundef %64), !dbg !7099
  br label %65, !dbg !7100

65:                                               ; preds = %62, %57, %52, %47, %42, %37, %32, %28
  %66 = load ptr, ptr %4, align 8, !dbg !7101
  %67 = load i8, ptr %8, align 1, !dbg !7102
  %68 = sext i8 %67 to i32, !dbg !7102
  %69 = call ptr @rawmemchr(ptr noundef %66, i32 noundef %68) #20, !dbg !7103
  %70 = getelementptr inbounds i8, ptr %69, i64 1, !dbg !7104
  store ptr %70, ptr %4, align 8, !dbg !7105
  br label %14, !dbg !7060, !llvm.loop !7106

71:                                               ; preds = %23
  %72 = load i32, ptr %6, align 4, !dbg !7108
  %73 = icmp ne i32 %72, 0, !dbg !7108
  br i1 %73, label %74, label %76, !dbg !7108

74:                                               ; preds = %71
  %75 = load i32, ptr %6, align 4, !dbg !7109
  br label %78, !dbg !7108

76:                                               ; preds = %71
  %77 = load i32, ptr %5, align 4, !dbg !7110
  br label %78, !dbg !7108

78:                                               ; preds = %76, %74
  %79 = phi i32 [ %75, %74 ], [ %77, %76 ], !dbg !7108
  store i32 %79, ptr %3, align 4, !dbg !7111
  br label %80, !dbg !7111

80:                                               ; preds = %78, %11
  %81 = load i32, ptr %3, align 4, !dbg !7112
  ret i32 %81, !dbg !7112
}

; Function Attrs: nounwind
declare i32 @__isoc99_sscanf(ptr noundef, ptr noundef, ...) #2

; Function Attrs: nounwind willreturn memory(read)
declare ptr @rawmemchr(ptr noundef, i32 noundef) #8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @parse_bool(ptr noundef %0, i1 noundef zeroext %1) #0 !dbg !7113 {
  %3 = alloca i1, align 1
  %4 = alloca ptr, align 8
  %5 = alloca i8, align 1
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !7116, metadata !DIExpression()), !dbg !7117
  %6 = zext i1 %1 to i8
  store i8 %6, ptr %5, align 1
  call void @llvm.dbg.declare(metadata ptr %5, metadata !7118, metadata !DIExpression()), !dbg !7119
  %7 = load ptr, ptr %4, align 8, !dbg !7120
  %8 = icmp ne ptr %7, null, !dbg !7120
  br i1 %8, label %12, label %9, !dbg !7122

9:                                                ; preds = %2
  %10 = load i8, ptr %5, align 1, !dbg !7123
  %11 = trunc i8 %10 to i1, !dbg !7123
  store i1 %11, ptr %3, align 1, !dbg !7124
  br label %49, !dbg !7124

12:                                               ; preds = %2
  %13 = load ptr, ptr %4, align 8, !dbg !7125
  %14 = call i32 @strcmp(ptr noundef %13, ptr noundef @.str.3.15) #20, !dbg !7127
  %15 = icmp ne i32 %14, 0, !dbg !7127
  br i1 %15, label %16, label %28, !dbg !7128

16:                                               ; preds = %12
  %17 = load ptr, ptr %4, align 8, !dbg !7129
  %18 = call i32 @strcmp(ptr noundef %17, ptr noundef @.str.4.16) #20, !dbg !7130
  %19 = icmp ne i32 %18, 0, !dbg !7130
  br i1 %19, label %20, label %28, !dbg !7131

20:                                               ; preds = %16
  %21 = load ptr, ptr %4, align 8, !dbg !7132
  %22 = call i32 @strcmp(ptr noundef %21, ptr noundef @.str.5.17) #20, !dbg !7133
  %23 = icmp ne i32 %22, 0, !dbg !7133
  br i1 %23, label %24, label %28, !dbg !7134

24:                                               ; preds = %20
  %25 = load ptr, ptr %4, align 8, !dbg !7135
  %26 = call i32 @strcmp(ptr noundef %25, ptr noundef @.str.6.18) #20, !dbg !7136
  %27 = icmp ne i32 %26, 0, !dbg !7136
  br i1 %27, label %29, label %28, !dbg !7137

28:                                               ; preds = %24, %20, %16, %12
  store i1 true, ptr %3, align 1, !dbg !7138
  br label %49, !dbg !7138

29:                                               ; preds = %24
  %30 = load ptr, ptr %4, align 8, !dbg !7139
  %31 = call i32 @strcmp(ptr noundef %30, ptr noundef @.str.7.19) #20, !dbg !7141
  %32 = icmp ne i32 %31, 0, !dbg !7141
  br i1 %32, label %33, label %45, !dbg !7142

33:                                               ; preds = %29
  %34 = load ptr, ptr %4, align 8, !dbg !7143
  %35 = call i32 @strcmp(ptr noundef %34, ptr noundef @.str.8.20) #20, !dbg !7144
  %36 = icmp ne i32 %35, 0, !dbg !7144
  br i1 %36, label %37, label %45, !dbg !7145

37:                                               ; preds = %33
  %38 = load ptr, ptr %4, align 8, !dbg !7146
  %39 = call i32 @strcmp(ptr noundef %38, ptr noundef @.str.9.21) #20, !dbg !7147
  %40 = icmp ne i32 %39, 0, !dbg !7147
  br i1 %40, label %41, label %45, !dbg !7148

41:                                               ; preds = %37
  %42 = load ptr, ptr %4, align 8, !dbg !7149
  %43 = call i32 @strcmp(ptr noundef %42, ptr noundef @.str.10.22) #20, !dbg !7150
  %44 = icmp ne i32 %43, 0, !dbg !7150
  br i1 %44, label %46, label %45, !dbg !7151

45:                                               ; preds = %41, %37, %33, %29
  store i1 false, ptr %3, align 1, !dbg !7152
  br label %49, !dbg !7152

46:                                               ; preds = %41
  %47 = load i8, ptr %5, align 1, !dbg !7153
  %48 = trunc i8 %47 to i1, !dbg !7153
  store i1 %48, ptr %3, align 1, !dbg !7154
  br label %49, !dbg !7154

49:                                               ; preds = %46, %45, %28, %9
  %50 = load i1, ptr %3, align 1, !dbg !7155
  ret i1 %50, !dbg !7155
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @parse_long(ptr noundef %0, i64 noundef %1) #0 !dbg !7156 {
  %3 = alloca i64, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i64, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !7159, metadata !DIExpression()), !dbg !7160
  store i64 %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !7161, metadata !DIExpression()), !dbg !7162
  call void @llvm.dbg.declare(metadata ptr %6, metadata !7163, metadata !DIExpression()), !dbg !7164
  call void @llvm.dbg.declare(metadata ptr %7, metadata !7165, metadata !DIExpression()), !dbg !7166
  %8 = call ptr @__errno_location() #21, !dbg !7167
  store i32 0, ptr %8, align 4, !dbg !7168
  %9 = load ptr, ptr %4, align 8, !dbg !7169
  %10 = call i64 @strtol(ptr noundef %9, ptr noundef %6, i32 noundef 0) #17, !dbg !7170
  store i64 %10, ptr %7, align 8, !dbg !7171
  %11 = call ptr @__errno_location() #21, !dbg !7172
  %12 = load i32, ptr %11, align 4, !dbg !7172
  %13 = icmp ne i32 %12, 0, !dbg !7174
  br i1 %13, label %14, label %16, !dbg !7175

14:                                               ; preds = %2
  %15 = load i64, ptr %5, align 8, !dbg !7176
  store i64 %15, ptr %3, align 8, !dbg !7177
  br label %29, !dbg !7177

16:                                               ; preds = %2
  %17 = load ptr, ptr %6, align 8, !dbg !7178
  %18 = load i8, ptr %17, align 1, !dbg !7180
  %19 = sext i8 %18 to i32, !dbg !7180
  %20 = icmp ne i32 %19, 0, !dbg !7181
  br i1 %20, label %25, label %21, !dbg !7182

21:                                               ; preds = %16
  %22 = load ptr, ptr %4, align 8, !dbg !7183
  %23 = load ptr, ptr %6, align 8, !dbg !7184
  %24 = icmp eq ptr %22, %23, !dbg !7185
  br i1 %24, label %25, label %27, !dbg !7186

25:                                               ; preds = %21, %16
  %26 = load i64, ptr %5, align 8, !dbg !7187
  store i64 %26, ptr %3, align 8, !dbg !7188
  br label %29, !dbg !7188

27:                                               ; preds = %21
  %28 = load i64, ptr %7, align 8, !dbg !7189
  store i64 %28, ptr %3, align 8, !dbg !7190
  br label %29, !dbg !7190

29:                                               ; preds = %27, %25, %14
  %30 = load i64, ptr %3, align 8, !dbg !7191
  ret i64 %30, !dbg !7191
}

; Function Attrs: nounwind
declare i64 @strtol(ptr noundef, ptr noundef, i32 noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @config_error(ptr noundef %0, ptr noundef %1, ...) #0 !dbg !7192 {
  %3 = alloca i1, align 1
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !7247, metadata !DIExpression()), !dbg !7248
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !7249, metadata !DIExpression()), !dbg !7250
  call void @llvm.dbg.declare(metadata ptr %6, metadata !7251, metadata !DIExpression()), !dbg !7263
  call void @llvm.dbg.declare(metadata ptr %7, metadata !7264, metadata !DIExpression()), !dbg !7265
  call void @llvm.dbg.declare(metadata ptr %8, metadata !7266, metadata !DIExpression()), !dbg !7267
  %9 = load ptr, ptr %4, align 8, !dbg !7268
  %10 = getelementptr inbounds %struct.config_t_, ptr %9, i32 0, i32 2, !dbg !7270
  %11 = load ptr, ptr %10, align 8, !dbg !7270
  %12 = icmp ne ptr %11, null, !dbg !7268
  br i1 %12, label %13, label %14, !dbg !7271

13:                                               ; preds = %2
  store i1 false, ptr %3, align 1, !dbg !7272
  br label %29, !dbg !7272

14:                                               ; preds = %2
  %15 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %6, i64 0, i64 0, !dbg !7273
  call void @llvm.va_start(ptr %15), !dbg !7273
  %16 = load ptr, ptr %5, align 8, !dbg !7274
  %17 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %6, i64 0, i64 0, !dbg !7275
  %18 = call i32 @vasprintf(ptr noundef %8, ptr noundef %16, ptr noundef %17) #17, !dbg !7276
  store i32 %18, ptr %7, align 4, !dbg !7277
  %19 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %6, i64 0, i64 0, !dbg !7278
  call void @llvm.va_end(ptr %19), !dbg !7278
  %20 = load i32, ptr %7, align 4, !dbg !7279
  %21 = icmp sge i32 %20, 0, !dbg !7281
  br i1 %21, label %22, label %26, !dbg !7282

22:                                               ; preds = %14
  %23 = load ptr, ptr %8, align 8, !dbg !7283
  %24 = load ptr, ptr %4, align 8, !dbg !7285
  %25 = getelementptr inbounds %struct.config_t_, ptr %24, i32 0, i32 2, !dbg !7286
  store ptr %23, ptr %25, align 8, !dbg !7287
  store i1 true, ptr %3, align 1, !dbg !7288
  br label %29, !dbg !7288

26:                                               ; preds = %14
  %27 = load ptr, ptr %4, align 8, !dbg !7289
  %28 = getelementptr inbounds %struct.config_t_, ptr %27, i32 0, i32 2, !dbg !7290
  store ptr null, ptr %28, align 8, !dbg !7291
  store i1 false, ptr %3, align 1, !dbg !7292
  br label %29, !dbg !7292

29:                                               ; preds = %26, %22, %13
  %30 = load i1, ptr %3, align 1, !dbg !7293
  ret i1 %30, !dbg !7293
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @config_read_line(ptr noundef %0, ptr noundef %1) #0 !dbg !7294 {
  %3 = alloca i1, align 1
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !7320, metadata !DIExpression()), !dbg !7321
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !7322, metadata !DIExpression()), !dbg !7323
  call void @llvm.dbg.declare(metadata ptr %6, metadata !7324, metadata !DIExpression()), !dbg !7325
  call void @llvm.dbg.declare(metadata ptr %7, metadata !7326, metadata !DIExpression()), !dbg !7327
  %9 = load ptr, ptr %4, align 8, !dbg !7328
  %10 = getelementptr inbounds %struct.config_t_, ptr %9, i32 0, i32 2, !dbg !7330
  %11 = load ptr, ptr %10, align 8, !dbg !7330
  %12 = icmp ne ptr %11, null, !dbg !7328
  br i1 %12, label %13, label %14, !dbg !7331

13:                                               ; preds = %2
  store i1 false, ptr %3, align 1, !dbg !7332
  br label %91, !dbg !7332

14:                                               ; preds = %2
  br label %15, !dbg !7330

15:                                               ; preds = %57, %14
  call void @llvm.dbg.label(metadata !7333), !dbg !7334
  %16 = load ptr, ptr %5, align 8, !dbg !7335
  %17 = getelementptr inbounds %struct.config_line_t_, ptr %16, i32 0, i32 2, !dbg !7337
  %18 = getelementptr inbounds [1024 x i8], ptr %17, i64 0, i64 0, !dbg !7335
  %19 = load ptr, ptr %4, align 8, !dbg !7338
  %20 = getelementptr inbounds %struct.config_t_, ptr %19, i32 0, i32 0, !dbg !7339
  %21 = load ptr, ptr %20, align 8, !dbg !7339
  %22 = call ptr @fgets(ptr noundef %18, i32 noundef 1024, ptr noundef %21), !dbg !7340
  %23 = icmp ne ptr %22, null, !dbg !7340
  br i1 %23, label %25, label %24, !dbg !7341

24:                                               ; preds = %15
  store i1 false, ptr %3, align 1, !dbg !7342
  br label %91, !dbg !7342

25:                                               ; preds = %15
  %26 = load ptr, ptr %4, align 8, !dbg !7343
  %27 = getelementptr inbounds %struct.config_t_, ptr %26, i32 0, i32 1, !dbg !7344
  %28 = load i32, ptr %27, align 8, !dbg !7345
  %29 = add nsw i32 %28, 1, !dbg !7345
  store i32 %29, ptr %27, align 8, !dbg !7345
  %30 = load ptr, ptr %5, align 8, !dbg !7346
  %31 = getelementptr inbounds %struct.config_line_t_, ptr %30, i32 0, i32 2, !dbg !7347
  %32 = getelementptr inbounds [1024 x i8], ptr %31, i64 0, i64 0, !dbg !7346
  %33 = call ptr @remove_comments(ptr noundef %32), !dbg !7348
  store ptr %33, ptr %6, align 8, !dbg !7349
  %34 = load ptr, ptr %6, align 8, !dbg !7350
  %35 = call ptr @remove_leading_spaces(ptr noundef %34), !dbg !7351
  store ptr %35, ptr %6, align 8, !dbg !7352
  %36 = load ptr, ptr %6, align 8, !dbg !7353
  %37 = call ptr @remove_trailing_spaces(ptr noundef %36), !dbg !7354
  store ptr %37, ptr %6, align 8, !dbg !7355
  %38 = load ptr, ptr %6, align 8, !dbg !7356
  %39 = call ptr @find_line_end(ptr noundef %38), !dbg !7357
  store ptr %39, ptr %7, align 8, !dbg !7358
  %40 = load ptr, ptr %7, align 8, !dbg !7359
  %41 = load i8, ptr %40, align 1, !dbg !7361
  %42 = sext i8 %41 to i32, !dbg !7361
  %43 = icmp eq i32 %42, 123, !dbg !7362
  br i1 %43, label %44, label %52, !dbg !7363

44:                                               ; preds = %25
  %45 = load ptr, ptr %6, align 8, !dbg !7364
  %46 = load ptr, ptr %5, align 8, !dbg !7367
  %47 = call zeroext i1 @parse_section(ptr noundef %45, ptr noundef %46), !dbg !7368
  br i1 %47, label %51, label %48, !dbg !7369

48:                                               ; preds = %44
  %49 = load ptr, ptr %4, align 8, !dbg !7370
  %50 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %49, ptr noundef @.str.11.23), !dbg !7372
  store i1 false, ptr %3, align 1, !dbg !7373
  br label %91, !dbg !7373

51:                                               ; preds = %44
  br label %90, !dbg !7374

52:                                               ; preds = %25
  %53 = load ptr, ptr %6, align 8, !dbg !7375
  %54 = load i8, ptr %53, align 1, !dbg !7377
  %55 = sext i8 %54 to i32, !dbg !7377
  %56 = icmp eq i32 %55, 0, !dbg !7378
  br i1 %56, label %57, label %58, !dbg !7379

57:                                               ; preds = %52
  br label %15, !dbg !7380

58:                                               ; preds = %52
  %59 = load ptr, ptr %6, align 8, !dbg !7382
  %60 = load i8, ptr %59, align 1, !dbg !7384
  %61 = sext i8 %60 to i32, !dbg !7384
  %62 = icmp eq i32 %61, 125, !dbg !7385
  br i1 %62, label %63, label %70, !dbg !7386

63:                                               ; preds = %58
  %64 = load ptr, ptr %6, align 8, !dbg !7387
  %65 = load ptr, ptr %7, align 8, !dbg !7388
  %66 = icmp eq ptr %64, %65, !dbg !7389
  br i1 %66, label %67, label %70, !dbg !7390

67:                                               ; preds = %63
  %68 = load ptr, ptr %5, align 8, !dbg !7391
  %69 = getelementptr inbounds %struct.config_line_t_, ptr %68, i32 0, i32 1, !dbg !7393
  store i32 2, ptr %69, align 8, !dbg !7394
  br label %88, !dbg !7395

70:                                               ; preds = %63, %58
  call void @llvm.dbg.declare(metadata ptr %8, metadata !7396, metadata !DIExpression()), !dbg !7398
  %71 = load ptr, ptr %6, align 8, !dbg !7399
  %72 = call ptr @strchr(ptr noundef %71, i32 noundef 61) #20, !dbg !7400
  store ptr %72, ptr %8, align 8, !dbg !7398
  %73 = load ptr, ptr %8, align 8, !dbg !7401
  %74 = icmp ne ptr %73, null, !dbg !7401
  br i1 %74, label %75, label %84, !dbg !7403

75:                                               ; preds = %70
  %76 = load ptr, ptr %6, align 8, !dbg !7404
  %77 = load ptr, ptr %5, align 8, !dbg !7407
  %78 = load ptr, ptr %8, align 8, !dbg !7408
  %79 = call zeroext i1 @parse_line(ptr noundef %76, ptr noundef %77, ptr noundef %78), !dbg !7409
  br i1 %79, label %83, label %80, !dbg !7410

80:                                               ; preds = %75
  %81 = load ptr, ptr %4, align 8, !dbg !7411
  %82 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %81, ptr noundef @.str.12.24), !dbg !7413
  store i1 false, ptr %3, align 1, !dbg !7414
  br label %91, !dbg !7414

83:                                               ; preds = %75
  br label %87, !dbg !7415

84:                                               ; preds = %70
  %85 = load ptr, ptr %4, align 8, !dbg !7416
  %86 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %85, ptr noundef @.str.13.54), !dbg !7418
  store i1 false, ptr %3, align 1, !dbg !7419
  br label %91, !dbg !7419

87:                                               ; preds = %83
  br label %88

88:                                               ; preds = %87, %67
  br label %89

89:                                               ; preds = %88
  br label %90

90:                                               ; preds = %89, %51
  store i1 true, ptr %3, align 1, !dbg !7420
  br label %91, !dbg !7420

91:                                               ; preds = %90, %84, %80, %48, %24, %13
  %92 = load i1, ptr %3, align 1, !dbg !7421
  ret i1 %92, !dbg !7421
}

declare ptr @fgets(ptr noundef, i32 noundef, ptr noundef) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @remove_comments(ptr noundef %0) #0 !dbg !7422 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !7425, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.declare(metadata ptr %3, metadata !7427, metadata !DIExpression()), !dbg !7428
  %4 = load ptr, ptr %2, align 8, !dbg !7429
  %5 = call ptr @strrchr(ptr noundef %4, i32 noundef 35) #20, !dbg !7430
  store ptr %5, ptr %3, align 8, !dbg !7428
  %6 = load ptr, ptr %3, align 8, !dbg !7431
  %7 = icmp ne ptr %6, null, !dbg !7431
  br i1 %7, label %8, label %10, !dbg !7433

8:                                                ; preds = %1
  %9 = load ptr, ptr %3, align 8, !dbg !7434
  store i8 0, ptr %9, align 1, !dbg !7435
  br label %10, !dbg !7436

10:                                               ; preds = %8, %1
  %11 = load ptr, ptr %2, align 8, !dbg !7437
  ret ptr %11, !dbg !7438
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @remove_leading_spaces(ptr noundef %0) #0 !dbg !7439 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !7440, metadata !DIExpression()), !dbg !7441
  br label %3, !dbg !7442

3:                                                ; preds = %15, %1
  %4 = call ptr @__ctype_b_loc() #21, !dbg !7443
  %5 = load ptr, ptr %4, align 8, !dbg !7443
  %6 = load ptr, ptr %2, align 8, !dbg !7443
  %7 = load i8, ptr %6, align 1, !dbg !7443
  %8 = sext i8 %7 to i32, !dbg !7443
  %9 = sext i32 %8 to i64, !dbg !7443
  %10 = getelementptr inbounds i16, ptr %5, i64 %9, !dbg !7443
  %11 = load i16, ptr %10, align 2, !dbg !7443
  %12 = zext i16 %11 to i32, !dbg !7443
  %13 = and i32 %12, 8192, !dbg !7443
  %14 = icmp ne i32 %13, 0, !dbg !7442
  br i1 %14, label %15, label %18, !dbg !7442

15:                                               ; preds = %3
  %16 = load ptr, ptr %2, align 8, !dbg !7444
  %17 = getelementptr inbounds i8, ptr %16, i32 1, !dbg !7444
  store ptr %17, ptr %2, align 8, !dbg !7444
  br label %3, !dbg !7442, !llvm.loop !7445

18:                                               ; preds = %3
  %19 = load ptr, ptr %2, align 8, !dbg !7446
  ret ptr %19, !dbg !7447
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @remove_trailing_spaces(ptr noundef %0) #0 !dbg !7448 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !7449, metadata !DIExpression()), !dbg !7450
  call void @llvm.dbg.declare(metadata ptr %3, metadata !7451, metadata !DIExpression()), !dbg !7452
  %4 = load ptr, ptr %2, align 8, !dbg !7453
  %5 = call ptr @rawmemchr(ptr noundef %4, i32 noundef 0) #20, !dbg !7454
  store ptr %5, ptr %3, align 8, !dbg !7452
  %6 = load ptr, ptr %3, align 8, !dbg !7455
  %7 = getelementptr inbounds i8, ptr %6, i32 -1, !dbg !7455
  store ptr %7, ptr %3, align 8, !dbg !7455
  br label %8, !dbg !7457

8:                                                ; preds = %21, %1
  %9 = call ptr @__ctype_b_loc() #21, !dbg !7458
  %10 = load ptr, ptr %9, align 8, !dbg !7458
  %11 = load ptr, ptr %3, align 8, !dbg !7458
  %12 = load i8, ptr %11, align 1, !dbg !7458
  %13 = sext i8 %12 to i32, !dbg !7458
  %14 = sext i32 %13 to i64, !dbg !7458
  %15 = getelementptr inbounds i16, ptr %10, i64 %14, !dbg !7458
  %16 = load i16, ptr %15, align 2, !dbg !7458
  %17 = zext i16 %16 to i32, !dbg !7458
  %18 = and i32 %17, 8192, !dbg !7458
  %19 = icmp ne i32 %18, 0, !dbg !7460
  br i1 %19, label %20, label %24, !dbg !7460

20:                                               ; preds = %8
  br label %21, !dbg !7460

21:                                               ; preds = %20
  %22 = load ptr, ptr %3, align 8, !dbg !7461
  %23 = getelementptr inbounds i8, ptr %22, i32 -1, !dbg !7461
  store ptr %23, ptr %3, align 8, !dbg !7461
  br label %8, !dbg !7462, !llvm.loop !7463

24:                                               ; preds = %8
  %25 = load ptr, ptr %3, align 8, !dbg !7465
  %26 = getelementptr inbounds i8, ptr %25, i64 1, !dbg !7466
  store i8 0, ptr %26, align 1, !dbg !7467
  %27 = load ptr, ptr %2, align 8, !dbg !7468
  ret ptr %27, !dbg !7469
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @find_line_end(ptr noundef %0) #0 !dbg !7470 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !7471, metadata !DIExpression()), !dbg !7472
  %4 = load ptr, ptr %3, align 8, !dbg !7473
  %5 = load i8, ptr %4, align 1, !dbg !7475
  %6 = sext i8 %5 to i32, !dbg !7475
  %7 = icmp eq i32 %6, 0, !dbg !7476
  br i1 %7, label %8, label %10, !dbg !7477

8:                                                ; preds = %1
  %9 = load ptr, ptr %3, align 8, !dbg !7478
  store ptr %9, ptr %2, align 8, !dbg !7479
  br label %14, !dbg !7479

10:                                               ; preds = %1
  %11 = load ptr, ptr %3, align 8, !dbg !7480
  %12 = call ptr @rawmemchr(ptr noundef %11, i32 noundef 0) #20, !dbg !7481
  %13 = getelementptr inbounds i8, ptr %12, i64 -1, !dbg !7482
  store ptr %13, ptr %2, align 8, !dbg !7483
  br label %14, !dbg !7483

14:                                               ; preds = %10, %8
  %15 = load ptr, ptr %2, align 8, !dbg !7484
  ret ptr %15, !dbg !7484
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @parse_section(ptr noundef %0, ptr noundef %1) #0 !dbg !7485 {
  %3 = alloca i1, align 1
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !7488, metadata !DIExpression()), !dbg !7489
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !7490, metadata !DIExpression()), !dbg !7491
  call void @llvm.dbg.declare(metadata ptr %6, metadata !7492, metadata !DIExpression()), !dbg !7493
  call void @llvm.dbg.declare(metadata ptr %7, metadata !7494, metadata !DIExpression()), !dbg !7495
  call void @llvm.dbg.declare(metadata ptr %8, metadata !7496, metadata !DIExpression()), !dbg !7497
  %10 = load ptr, ptr %4, align 8, !dbg !7498
  %11 = call ptr @strrchr(ptr noundef %10, i32 noundef 123) #20, !dbg !7499
  store ptr %11, ptr %8, align 8, !dbg !7497
  %12 = load ptr, ptr %8, align 8, !dbg !7500
  %13 = icmp ne ptr %12, null, !dbg !7500
  br i1 %13, label %15, label %14, !dbg !7502

14:                                               ; preds = %2
  store i1 false, ptr %3, align 1, !dbg !7503
  br label %41, !dbg !7503

15:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata ptr %9, metadata !7504, metadata !DIExpression()), !dbg !7505
  %16 = load ptr, ptr %4, align 8, !dbg !7506
  %17 = call ptr @strchr(ptr noundef %16, i32 noundef 32) #20, !dbg !7507
  store ptr %17, ptr %9, align 8, !dbg !7505
  %18 = load ptr, ptr %9, align 8, !dbg !7508
  %19 = icmp ne ptr %18, null, !dbg !7508
  br i1 %19, label %21, label %20, !dbg !7510

20:                                               ; preds = %15
  store i1 false, ptr %3, align 1, !dbg !7511
  br label %41, !dbg !7511

21:                                               ; preds = %15
  %22 = load ptr, ptr %8, align 8, !dbg !7512
  store i8 0, ptr %22, align 1, !dbg !7513
  %23 = load ptr, ptr %9, align 8, !dbg !7514
  store i8 0, ptr %23, align 1, !dbg !7515
  %24 = load ptr, ptr %4, align 8, !dbg !7516
  %25 = call ptr @remove_leading_spaces(ptr noundef %24), !dbg !7517
  %26 = call ptr @remove_trailing_spaces(ptr noundef %25), !dbg !7518
  store ptr %26, ptr %6, align 8, !dbg !7519
  %27 = load ptr, ptr %9, align 8, !dbg !7520
  %28 = getelementptr inbounds i8, ptr %27, i64 1, !dbg !7521
  %29 = call ptr @remove_leading_spaces(ptr noundef %28), !dbg !7522
  %30 = call ptr @remove_trailing_spaces(ptr noundef %29), !dbg !7523
  store ptr %30, ptr %7, align 8, !dbg !7524
  %31 = load ptr, ptr %6, align 8, !dbg !7525
  %32 = load ptr, ptr %5, align 8, !dbg !7526
  %33 = getelementptr inbounds %struct.config_line_t_, ptr %32, i32 0, i32 0, !dbg !7527
  %34 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %33, i32 0, i32 0, !dbg !7528
  store ptr %31, ptr %34, align 8, !dbg !7529
  %35 = load ptr, ptr %7, align 8, !dbg !7530
  %36 = load ptr, ptr %5, align 8, !dbg !7531
  %37 = getelementptr inbounds %struct.config_line_t_, ptr %36, i32 0, i32 0, !dbg !7532
  %38 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %37, i32 0, i32 1, !dbg !7533
  store ptr %35, ptr %38, align 8, !dbg !7534
  %39 = load ptr, ptr %5, align 8, !dbg !7535
  %40 = getelementptr inbounds %struct.config_line_t_, ptr %39, i32 0, i32 1, !dbg !7536
  store i32 1, ptr %40, align 8, !dbg !7537
  store i1 true, ptr %3, align 1, !dbg !7538
  br label %41, !dbg !7538

41:                                               ; preds = %21, %20, %14
  %42 = load i1, ptr %3, align 1, !dbg !7539
  ret i1 %42, !dbg !7539
}

; Function Attrs: nounwind willreturn memory(read)
declare ptr @strchr(ptr noundef, i32 noundef) #8

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @parse_line(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !7540 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !7543, metadata !DIExpression()), !dbg !7544
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !7545, metadata !DIExpression()), !dbg !7546
  store ptr %2, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !7547, metadata !DIExpression()), !dbg !7548
  %7 = load ptr, ptr %6, align 8, !dbg !7549
  store i8 0, ptr %7, align 1, !dbg !7550
  %8 = load ptr, ptr %4, align 8, !dbg !7551
  %9 = call ptr @remove_leading_spaces(ptr noundef %8), !dbg !7552
  %10 = call ptr @remove_trailing_spaces(ptr noundef %9), !dbg !7553
  %11 = load ptr, ptr %5, align 8, !dbg !7554
  %12 = getelementptr inbounds %struct.config_line_t_, ptr %11, i32 0, i32 0, !dbg !7555
  %13 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %12, i32 0, i32 0, !dbg !7556
  store ptr %10, ptr %13, align 8, !dbg !7557
  %14 = load ptr, ptr %6, align 8, !dbg !7558
  %15 = getelementptr inbounds i8, ptr %14, i64 1, !dbg !7559
  %16 = call ptr @remove_leading_spaces(ptr noundef %15), !dbg !7560
  %17 = load ptr, ptr %5, align 8, !dbg !7561
  %18 = getelementptr inbounds %struct.config_line_t_, ptr %17, i32 0, i32 0, !dbg !7562
  %19 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %18, i32 0, i32 1, !dbg !7563
  store ptr %16, ptr %19, align 8, !dbg !7564
  %20 = load ptr, ptr %5, align 8, !dbg !7565
  %21 = getelementptr inbounds %struct.config_line_t_, ptr %20, i32 0, i32 1, !dbg !7566
  store i32 0, ptr %21, align 8, !dbg !7567
  ret i1 true, !dbg !7568
}

; Function Attrs: nounwind willreturn memory(read)
declare ptr @strrchr(ptr noundef, i32 noundef) #8

; Function Attrs: nounwind willreturn memory(none)
declare ptr @__ctype_b_loc() #9

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @config_open(ptr noundef %0, ptr noundef %1) #0 !dbg !7569 {
  %3 = alloca i1, align 1
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !7572, metadata !DIExpression()), !dbg !7573
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !7574, metadata !DIExpression()), !dbg !7575
  %6 = load ptr, ptr %4, align 8, !dbg !7576
  %7 = icmp ne ptr %6, null, !dbg !7576
  br i1 %7, label %9, label %8, !dbg !7578

8:                                                ; preds = %2
  store i1 false, ptr %3, align 1, !dbg !7579
  br label %28, !dbg !7579

9:                                                ; preds = %2
  %10 = load ptr, ptr %5, align 8, !dbg !7580
  %11 = icmp ne ptr %10, null, !dbg !7580
  br i1 %11, label %13, label %12, !dbg !7582

12:                                               ; preds = %9
  store i1 false, ptr %3, align 1, !dbg !7583
  br label %28, !dbg !7583

13:                                               ; preds = %9
  %14 = load ptr, ptr %5, align 8, !dbg !7584
  %15 = call noalias ptr @fopen(ptr noundef %14, ptr noundef @.str.14.55), !dbg !7585
  %16 = load ptr, ptr %4, align 8, !dbg !7586
  %17 = getelementptr inbounds %struct.config_t_, ptr %16, i32 0, i32 0, !dbg !7587
  store ptr %15, ptr %17, align 8, !dbg !7588
  %18 = load ptr, ptr %4, align 8, !dbg !7589
  %19 = getelementptr inbounds %struct.config_t_, ptr %18, i32 0, i32 0, !dbg !7591
  %20 = load ptr, ptr %19, align 8, !dbg !7591
  %21 = icmp ne ptr %20, null, !dbg !7589
  br i1 %21, label %23, label %22, !dbg !7592

22:                                               ; preds = %13
  store i1 false, ptr %3, align 1, !dbg !7593
  br label %28, !dbg !7593

23:                                               ; preds = %13
  %24 = load ptr, ptr %4, align 8, !dbg !7594
  %25 = getelementptr inbounds %struct.config_t_, ptr %24, i32 0, i32 1, !dbg !7595
  store i32 0, ptr %25, align 8, !dbg !7596
  %26 = load ptr, ptr %4, align 8, !dbg !7597
  %27 = getelementptr inbounds %struct.config_t_, ptr %26, i32 0, i32 2, !dbg !7598
  store ptr null, ptr %27, align 8, !dbg !7599
  store i1 true, ptr %3, align 1, !dbg !7600
  br label %28, !dbg !7600

28:                                               ; preds = %23, %22, %12, %8
  %29 = load i1, ptr %3, align 1, !dbg !7601
  ret i1 %29, !dbg !7601
}

declare noalias ptr @fopen(ptr noundef, ptr noundef) #5

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @config_close(ptr noundef %0) #0 !dbg !7602 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !7605, metadata !DIExpression()), !dbg !7606
  %3 = load ptr, ptr %2, align 8, !dbg !7607
  %4 = icmp ne ptr %3, null, !dbg !7607
  br i1 %4, label %6, label %5, !dbg !7609

5:                                                ; preds = %1
  br label %20, !dbg !7610

6:                                                ; preds = %1
  %7 = load ptr, ptr %2, align 8, !dbg !7611
  %8 = getelementptr inbounds %struct.config_t_, ptr %7, i32 0, i32 0, !dbg !7613
  %9 = load ptr, ptr %8, align 8, !dbg !7613
  %10 = icmp ne ptr %9, null, !dbg !7611
  br i1 %10, label %12, label %11, !dbg !7614

11:                                               ; preds = %6
  br label %20, !dbg !7615

12:                                               ; preds = %6
  %13 = load ptr, ptr %2, align 8, !dbg !7616
  %14 = getelementptr inbounds %struct.config_t_, ptr %13, i32 0, i32 0, !dbg !7617
  %15 = load ptr, ptr %14, align 8, !dbg !7617
  %16 = call i32 @fclose(ptr noundef %15), !dbg !7618
  %17 = load ptr, ptr %2, align 8, !dbg !7619
  %18 = getelementptr inbounds %struct.config_t_, ptr %17, i32 0, i32 2, !dbg !7620
  %19 = load ptr, ptr %18, align 8, !dbg !7620
  call void @free(ptr noundef %19) #17, !dbg !7621
  br label %20, !dbg !7622

20:                                               ; preds = %12, %11, %5
  ret void, !dbg !7622
}

declare i32 @fclose(ptr noundef) #5

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @coro_reset(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !7623 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !7630, metadata !DIExpression()), !dbg !7631
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !7632, metadata !DIExpression()), !dbg !7633
  store ptr %2, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !7634, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.declare(metadata ptr %7, metadata !7636, metadata !DIExpression()), !dbg !7637
  %8 = load ptr, ptr %4, align 8, !dbg !7638
  %9 = getelementptr inbounds %struct.coro_t_, ptr %8, i64 1, !dbg !7639
  store ptr %9, ptr %7, align 8, !dbg !7637
  %10 = load ptr, ptr %4, align 8, !dbg !7640
  %11 = getelementptr inbounds %struct.coro_t_, ptr %10, i32 0, i32 5, !dbg !7641
  store i8 0, ptr %11, align 8, !dbg !7642
  %12 = load ptr, ptr %6, align 8, !dbg !7643
  %13 = load ptr, ptr %4, align 8, !dbg !7644
  %14 = getelementptr inbounds %struct.coro_t_, ptr %13, i32 0, i32 4, !dbg !7645
  store ptr %12, ptr %14, align 8, !dbg !7646
  %15 = load ptr, ptr %4, align 8, !dbg !7647
  call void @coro_run_deferred(ptr noundef %15), !dbg !7648
  %16 = load ptr, ptr %4, align 8, !dbg !7649
  %17 = ptrtoint ptr %16 to i64, !dbg !7650
  %18 = load ptr, ptr %4, align 8, !dbg !7651
  %19 = getelementptr inbounds %struct.coro_t_, ptr %18, i32 0, i32 1, !dbg !7652
  %20 = getelementptr inbounds [10 x i64], ptr %19, i64 0, i64 6, !dbg !7651
  store i64 %17, ptr %20, align 8, !dbg !7653
  %21 = load ptr, ptr %5, align 8, !dbg !7654
  %22 = ptrtoint ptr %21 to i64, !dbg !7655
  %23 = load ptr, ptr %4, align 8, !dbg !7656
  %24 = getelementptr inbounds %struct.coro_t_, ptr %23, i32 0, i32 1, !dbg !7657
  %25 = getelementptr inbounds [10 x i64], ptr %24, i64 0, i64 7, !dbg !7656
  store i64 %22, ptr %25, align 8, !dbg !7658
  %26 = load ptr, ptr %4, align 8, !dbg !7659
  %27 = getelementptr inbounds %struct.coro_t_, ptr %26, i32 0, i32 1, !dbg !7660
  %28 = getelementptr inbounds [10 x i64], ptr %27, i64 0, i64 8, !dbg !7659
  store i64 ptrtoint (ptr @coro_entry_point to i64), ptr %28, align 8, !dbg !7661
  %29 = load ptr, ptr %7, align 8, !dbg !7662
  %30 = ptrtoint ptr %29 to i64, !dbg !7663
  %31 = call i64 @__sysconf(i32 noundef 75) #17, !dbg !7664
  %32 = mul nsw i64 3, %31, !dbg !7664
  %33 = sdiv i64 %32, 2, !dbg !7664
  %34 = add i64 %30, %33, !dbg !7665
  %35 = load ptr, ptr %4, align 8, !dbg !7666
  %36 = getelementptr inbounds %struct.coro_t_, ptr %35, i32 0, i32 1, !dbg !7667
  %37 = getelementptr inbounds [10 x i64], ptr %36, i64 0, i64 9, !dbg !7666
  store i64 %34, ptr %37, align 8, !dbg !7668
  ret void, !dbg !7669
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @coro_run_deferred(ptr noundef %0) #0 !dbg !7670 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !7673, metadata !DIExpression()), !dbg !7674
  call void @llvm.dbg.declare(metadata ptr %3, metadata !7675, metadata !DIExpression()), !dbg !7677
  %5 = load ptr, ptr %2, align 8, !dbg !7678
  %6 = getelementptr inbounds %struct.coro_t_, ptr %5, i32 0, i32 3, !dbg !7679
  %7 = load ptr, ptr %6, align 8, !dbg !7679
  store ptr %7, ptr %3, align 8, !dbg !7677
  br label %8, !dbg !7680

8:                                                ; preds = %11, %1
  %9 = load ptr, ptr %3, align 8, !dbg !7681
  %10 = icmp ne ptr %9, null, !dbg !7683
  br i1 %10, label %11, label %26, !dbg !7683

11:                                               ; preds = %8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !7684, metadata !DIExpression()), !dbg !7686
  %12 = load ptr, ptr %3, align 8, !dbg !7687
  store ptr %12, ptr %4, align 8, !dbg !7686
  %13 = load ptr, ptr %3, align 8, !dbg !7688
  %14 = getelementptr inbounds %struct.coro_defer_t_, ptr %13, i32 0, i32 1, !dbg !7689
  %15 = load ptr, ptr %14, align 8, !dbg !7689
  %16 = load ptr, ptr %3, align 8, !dbg !7690
  %17 = getelementptr inbounds %struct.coro_defer_t_, ptr %16, i32 0, i32 2, !dbg !7691
  %18 = load ptr, ptr %17, align 8, !dbg !7691
  %19 = load ptr, ptr %3, align 8, !dbg !7692
  %20 = getelementptr inbounds %struct.coro_defer_t_, ptr %19, i32 0, i32 3, !dbg !7693
  %21 = load ptr, ptr %20, align 8, !dbg !7693
  call void (ptr, ptr, ...) %15(ptr noundef %18, ptr noundef %21), !dbg !7688
  %22 = load ptr, ptr %4, align 8, !dbg !7694
  %23 = getelementptr inbounds %struct.coro_defer_t_, ptr %22, i32 0, i32 0, !dbg !7695
  %24 = load ptr, ptr %23, align 8, !dbg !7695
  store ptr %24, ptr %3, align 8, !dbg !7696
  %25 = load ptr, ptr %4, align 8, !dbg !7697
  call void @free(ptr noundef %25) #17, !dbg !7698
  br label %8, !dbg !7699, !llvm.loop !7700

26:                                               ; preds = %8
  %27 = load ptr, ptr %2, align 8, !dbg !7702
  %28 = getelementptr inbounds %struct.coro_t_, ptr %27, i32 0, i32 3, !dbg !7703
  store ptr null, ptr %28, align 8, !dbg !7704
  ret void, !dbg !7705
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @coro_entry_point(ptr noundef %0, ptr noundef %1) #0 !dbg !7706 {
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !7709, metadata !DIExpression()), !dbg !7710
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !7711, metadata !DIExpression()), !dbg !7712
  call void @llvm.dbg.declare(metadata ptr %7, metadata !7713, metadata !DIExpression()), !dbg !7714
  %8 = load ptr, ptr %6, align 8, !dbg !7715
  %9 = load ptr, ptr %5, align 8, !dbg !7716
  %10 = call i32 %8(ptr noundef %9), !dbg !7715
  store i32 %10, ptr %7, align 4, !dbg !7714
  %11 = load ptr, ptr %5, align 8, !dbg !7717
  %12 = getelementptr inbounds %struct.coro_t_, ptr %11, i32 0, i32 5, !dbg !7718
  store i8 1, ptr %12, align 8, !dbg !7719
  %13 = load ptr, ptr %5, align 8, !dbg !7720
  %14 = load i32, ptr %7, align 4, !dbg !7721
  store ptr %13, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !6976, metadata !DIExpression()), !dbg !7722
  store i32 %14, ptr %4, align 4
  call void @llvm.dbg.declare(metadata ptr %4, metadata !6978, metadata !DIExpression()), !dbg !7724
  %15 = load ptr, ptr %3, align 8, !dbg !7725
  %16 = icmp ne ptr %15, null, !dbg !7725
  br i1 %16, label %18, label %17, !dbg !7726

17:                                               ; preds = %2
  call void @__assert_fail(ptr noundef @.str.25.52, ptr noundef @.str.1.26, i32 noundef 267, ptr noundef @__PRETTY_FUNCTION__.coro_yield) #23, !dbg !7725
  unreachable, !dbg !7725

18:                                               ; preds = %2
  %19 = load i32, ptr %4, align 4, !dbg !7727
  %20 = load ptr, ptr %3, align 8, !dbg !7728
  %21 = getelementptr inbounds %struct.coro_t_, ptr %20, i32 0, i32 2, !dbg !7729
  store i32 %19, ptr %21, align 8, !dbg !7730
  %22 = load ptr, ptr %3, align 8, !dbg !7731
  %23 = load ptr, ptr %22, align 8, !dbg !7732
  %24 = getelementptr inbounds %struct.coro_switcher_t_, ptr %23, i32 0, i32 1, !dbg !7733
  %25 = load ptr, ptr %3, align 8, !dbg !7734
  %26 = load ptr, ptr %25, align 8, !dbg !7735
  call void @coro_swapcontext(ptr noundef %24, ptr noundef %26) #17, !dbg !7736
  %27 = load ptr, ptr %3, align 8, !dbg !7737
  %28 = getelementptr inbounds %struct.coro_t_, ptr %27, i32 0, i32 2, !dbg !7738
  %29 = load i32, ptr %28, align 8, !dbg !7738
  ret void, !dbg !7739
}

; Function Attrs: nounwind
declare i64 @__sysconf(i32 noundef) #2

; Function Attrs: alwaysinline nounwind uwtable
define dso_local ptr @coro_new(ptr noundef %0, ptr noundef %1, ptr noundef %2) #11 !dbg !7740 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !7743, metadata !DIExpression()), !dbg !7744
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !7745, metadata !DIExpression()), !dbg !7746
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !7747, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.declare(metadata ptr %8, metadata !7749, metadata !DIExpression()), !dbg !7750
  %9 = call i64 @__sysconf(i32 noundef 75) #17, !dbg !7751
  %10 = mul nsw i64 3, %9, !dbg !7751
  %11 = sdiv i64 %10, 2, !dbg !7751
  %12 = add i64 120, %11, !dbg !7752
  %13 = call noalias ptr @malloc(i64 noundef %12) #18, !dbg !7753
  store ptr %13, ptr %8, align 8, !dbg !7750
  %14 = load ptr, ptr %8, align 8, !dbg !7754
  %15 = icmp ne ptr %14, null, !dbg !7754
  br i1 %15, label %17, label %16, !dbg !7756

16:                                               ; preds = %3
  store ptr null, ptr %4, align 8, !dbg !7757
  br label %27, !dbg !7757

17:                                               ; preds = %3
  %18 = load ptr, ptr %5, align 8, !dbg !7758
  %19 = load ptr, ptr %8, align 8, !dbg !7759
  %20 = getelementptr inbounds %struct.coro_t_, ptr %19, i32 0, i32 0, !dbg !7760
  store ptr %18, ptr %20, align 8, !dbg !7761
  %21 = load ptr, ptr %8, align 8, !dbg !7762
  %22 = getelementptr inbounds %struct.coro_t_, ptr %21, i32 0, i32 3, !dbg !7763
  store ptr null, ptr %22, align 8, !dbg !7764
  %23 = load ptr, ptr %8, align 8, !dbg !7765
  %24 = load ptr, ptr %6, align 8, !dbg !7766
  %25 = load ptr, ptr %7, align 8, !dbg !7767
  call void @coro_reset(ptr noundef %23, ptr noundef %24, ptr noundef %25), !dbg !7768
  %26 = load ptr, ptr %8, align 8, !dbg !7769
  store ptr %26, ptr %4, align 8, !dbg !7770
  br label %27, !dbg !7770

27:                                               ; preds = %17, %16
  %28 = load ptr, ptr %4, align 8, !dbg !7771
  ret ptr %28, !dbg !7771
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local ptr @coro_get_data(ptr noundef %0) #11 !dbg !7772 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !7775, metadata !DIExpression()), !dbg !7776
  %3 = load ptr, ptr %2, align 8, !dbg !7777
  %4 = icmp ne ptr %3, null, !dbg !7777
  %5 = xor i1 %4, true, !dbg !7777
  %6 = xor i1 %5, true, !dbg !7777
  %7 = zext i1 %6 to i32, !dbg !7777
  %8 = sext i32 %7 to i64, !dbg !7777
  %9 = icmp ne i64 %8, 0, !dbg !7777
  br i1 %9, label %10, label %14, !dbg !7777

10:                                               ; preds = %1
  %11 = load ptr, ptr %2, align 8, !dbg !7778
  %12 = getelementptr inbounds %struct.coro_t_, ptr %11, i32 0, i32 4, !dbg !7779
  %13 = load ptr, ptr %12, align 8, !dbg !7779
  br label %15, !dbg !7777

14:                                               ; preds = %1
  br label %15, !dbg !7777

15:                                               ; preds = %14, %10
  %16 = phi ptr [ %13, %10 ], [ null, %14 ], !dbg !7777
  ret ptr %16, !dbg !7780
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local i32 @coro_resume(ptr noundef %0) #11 !dbg !7781 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !7782, metadata !DIExpression()), !dbg !7783
  %3 = load ptr, ptr %2, align 8, !dbg !7784
  %4 = icmp ne ptr %3, null, !dbg !7784
  br i1 %4, label %5, label %6, !dbg !7787

5:                                                ; preds = %1
  br label %7, !dbg !7787

6:                                                ; preds = %1
  call void @__assert_fail(ptr noundef @.str.25.52, ptr noundef @.str.1.26, i32 noundef 230, ptr noundef @__PRETTY_FUNCTION__.coro_resume) #23, !dbg !7784
  unreachable, !dbg !7784

7:                                                ; preds = %5
  %8 = load ptr, ptr %2, align 8, !dbg !7788
  %9 = getelementptr inbounds %struct.coro_t_, ptr %8, i32 0, i32 5, !dbg !7788
  %10 = load i8, ptr %9, align 8, !dbg !7788
  %11 = trunc i8 %10 to i1, !dbg !7788
  %12 = zext i1 %11 to i32, !dbg !7788
  %13 = icmp eq i32 %12, 0, !dbg !7788
  br i1 %13, label %14, label %15, !dbg !7791

14:                                               ; preds = %7
  br label %16, !dbg !7791

15:                                               ; preds = %7
  call void @__assert_fail(ptr noundef @.str.2.27, ptr noundef @.str.1.26, i32 noundef 231, ptr noundef @__PRETTY_FUNCTION__.coro_resume) #23, !dbg !7788
  unreachable, !dbg !7788

16:                                               ; preds = %14
  %17 = load ptr, ptr %2, align 8, !dbg !7792
  %18 = getelementptr inbounds %struct.coro_t_, ptr %17, i32 0, i32 0, !dbg !7793
  %19 = load ptr, ptr %18, align 8, !dbg !7793
  %20 = getelementptr inbounds %struct.coro_switcher_t_, ptr %19, i32 0, i32 0, !dbg !7794
  %21 = load ptr, ptr %2, align 8, !dbg !7795
  %22 = getelementptr inbounds %struct.coro_t_, ptr %21, i32 0, i32 1, !dbg !7796
  call void @coro_swapcontext(ptr noundef %20, ptr noundef %22), !dbg !7797
  %23 = load ptr, ptr %2, align 8, !dbg !7798
  %24 = getelementptr inbounds %struct.coro_t_, ptr %23, i32 0, i32 5, !dbg !7800
  %25 = load i8, ptr %24, align 8, !dbg !7800
  %26 = trunc i8 %25 to i1, !dbg !7800
  br i1 %26, label %34, label %27, !dbg !7801

27:                                               ; preds = %16
  %28 = load ptr, ptr %2, align 8, !dbg !7802
  %29 = getelementptr inbounds %struct.coro_t_, ptr %28, i32 0, i32 1, !dbg !7803
  %30 = load ptr, ptr %2, align 8, !dbg !7804
  %31 = getelementptr inbounds %struct.coro_t_, ptr %30, i32 0, i32 0, !dbg !7805
  %32 = load ptr, ptr %31, align 8, !dbg !7805
  %33 = getelementptr inbounds %struct.coro_switcher_t_, ptr %32, i32 0, i32 1, !dbg !7806
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %29, ptr align 8 %33, i64 80, i1 false), !dbg !7807
  br label %34, !dbg !7807

34:                                               ; preds = %27, %16
  %35 = load ptr, ptr %2, align 8, !dbg !7808
  %36 = getelementptr inbounds %struct.coro_t_, ptr %35, i32 0, i32 2, !dbg !7809
  %37 = load i32, ptr %36, align 8, !dbg !7809
  ret i32 %37, !dbg !7810
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local i32 @coro_resume_value(ptr noundef %0, i32 noundef %1) #11 !dbg !7811 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !7812, metadata !DIExpression()), !dbg !7813
  store i32 %1, ptr %5, align 4
  call void @llvm.dbg.declare(metadata ptr %5, metadata !7814, metadata !DIExpression()), !dbg !7815
  %6 = load ptr, ptr %4, align 8, !dbg !7816
  %7 = icmp ne ptr %6, null, !dbg !7816
  br i1 %7, label %8, label %9, !dbg !7819

8:                                                ; preds = %2
  br label %10, !dbg !7819

9:                                                ; preds = %2
  call void @__assert_fail(ptr noundef @.str.25.52, ptr noundef @.str.1.26, i32 noundef 257, ptr noundef @__PRETTY_FUNCTION__.coro_resume_value) #23, !dbg !7816
  unreachable, !dbg !7816

10:                                               ; preds = %8
  %11 = load ptr, ptr %4, align 8, !dbg !7820
  %12 = getelementptr inbounds %struct.coro_t_, ptr %11, i32 0, i32 5, !dbg !7820
  %13 = load i8, ptr %12, align 8, !dbg !7820
  %14 = trunc i8 %13 to i1, !dbg !7820
  %15 = zext i1 %14 to i32, !dbg !7820
  %16 = icmp eq i32 %15, 0, !dbg !7820
  br i1 %16, label %17, label %18, !dbg !7823

17:                                               ; preds = %10
  br label %19, !dbg !7823

18:                                               ; preds = %10
  call void @__assert_fail(ptr noundef @.str.2.27, ptr noundef @.str.1.26, i32 noundef 258, ptr noundef @__PRETTY_FUNCTION__.coro_resume_value) #23, !dbg !7820
  unreachable, !dbg !7820

19:                                               ; preds = %17
  %20 = load i32, ptr %5, align 4, !dbg !7824
  %21 = load ptr, ptr %4, align 8, !dbg !7825
  %22 = getelementptr inbounds %struct.coro_t_, ptr %21, i32 0, i32 2, !dbg !7826
  store i32 %20, ptr %22, align 8, !dbg !7827
  %23 = load ptr, ptr %4, align 8, !dbg !7828
  store ptr %23, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !7782, metadata !DIExpression()), !dbg !7829
  %24 = load ptr, ptr %3, align 8, !dbg !7831
  %25 = icmp ne ptr %24, null, !dbg !7831
  br i1 %25, label %26, label %33, !dbg !7832

26:                                               ; preds = %19
  %27 = load ptr, ptr %3, align 8, !dbg !7833
  %28 = getelementptr inbounds %struct.coro_t_, ptr %27, i32 0, i32 5, !dbg !7833
  %29 = load i8, ptr %28, align 8, !dbg !7833
  %30 = trunc i8 %29 to i1, !dbg !7833
  %31 = zext i1 %30 to i32, !dbg !7833
  %32 = icmp eq i32 %31, 0, !dbg !7833
  br i1 %32, label %34, label %43, !dbg !7834

33:                                               ; preds = %19
  call void @__assert_fail(ptr noundef @.str.25.52, ptr noundef @.str.1.26, i32 noundef 230, ptr noundef @__PRETTY_FUNCTION__.coro_resume) #23, !dbg !7831
  unreachable, !dbg !7831

34:                                               ; preds = %26
  %35 = load ptr, ptr %3, align 8, !dbg !7835
  %36 = load ptr, ptr %35, align 8, !dbg !7836
  %37 = load ptr, ptr %3, align 8, !dbg !7837
  %38 = getelementptr inbounds %struct.coro_t_, ptr %37, i32 0, i32 1, !dbg !7838
  call void @coro_swapcontext(ptr noundef %36, ptr noundef %38) #17, !dbg !7839
  %39 = load ptr, ptr %3, align 8, !dbg !7840
  %40 = getelementptr inbounds %struct.coro_t_, ptr %39, i32 0, i32 5, !dbg !7841
  %41 = load i8, ptr %40, align 8, !dbg !7841
  %42 = trunc i8 %41 to i1, !dbg !7841
  br i1 %42, label %50, label %44, !dbg !7842

43:                                               ; preds = %26
  call void @__assert_fail(ptr noundef @.str.2.27, ptr noundef @.str.1.26, i32 noundef 231, ptr noundef @__PRETTY_FUNCTION__.coro_resume) #23, !dbg !7833
  unreachable, !dbg !7833

44:                                               ; preds = %34
  %45 = load ptr, ptr %3, align 8, !dbg !7843
  %46 = getelementptr inbounds %struct.coro_t_, ptr %45, i32 0, i32 1, !dbg !7844
  %47 = load ptr, ptr %3, align 8, !dbg !7845
  %48 = load ptr, ptr %47, align 8, !dbg !7846
  %49 = getelementptr inbounds %struct.coro_switcher_t_, ptr %48, i32 0, i32 1, !dbg !7847
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %46, ptr align 8 %49, i64 80, i1 false), !dbg !7848
  br label %50, !dbg !7848

50:                                               ; preds = %44, %34
  %51 = load ptr, ptr %3, align 8, !dbg !7849
  %52 = getelementptr inbounds %struct.coro_t_, ptr %51, i32 0, i32 2, !dbg !7850
  %53 = load i32, ptr %52, align 8, !dbg !7850
  ret i32 %53, !dbg !7851
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @coro_free(ptr noundef %0) #0 !dbg !7852 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !7853, metadata !DIExpression()), !dbg !7854
  %3 = load ptr, ptr %2, align 8, !dbg !7855
  %4 = icmp ne ptr %3, null, !dbg !7855
  br i1 %4, label %5, label %6, !dbg !7858

5:                                                ; preds = %1
  br label %7, !dbg !7858

6:                                                ; preds = %1
  call void @__assert_fail(ptr noundef @.str.25.52, ptr noundef @.str.1.26, i32 noundef 276, ptr noundef @__PRETTY_FUNCTION__.coro_free) #23, !dbg !7855
  unreachable, !dbg !7855

7:                                                ; preds = %5
  %8 = load ptr, ptr %2, align 8, !dbg !7859
  call void @coro_run_deferred(ptr noundef %8), !dbg !7860
  %9 = load ptr, ptr %2, align 8, !dbg !7861
  call void @free(ptr noundef %9) #17, !dbg !7862
  ret void, !dbg !7863
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local void @coro_defer(ptr noundef %0, ptr noundef %1, ptr noundef %2) #11 !dbg !7864 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !7867, metadata !DIExpression()), !dbg !7868
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !7869, metadata !DIExpression()), !dbg !7870
  store ptr %2, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !7871, metadata !DIExpression()), !dbg !7872
  %7 = load ptr, ptr %4, align 8, !dbg !7873
  %8 = load ptr, ptr %5, align 8, !dbg !7874
  %9 = load ptr, ptr %6, align 8, !dbg !7875
  call void @coro_defer_any(ptr noundef %7, ptr noundef %8, ptr noundef %9, ptr noundef null), !dbg !7876
  ret void, !dbg !7877
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @coro_malloc_full(ptr noundef %0, i64 noundef %1, ptr noundef %2) #0 !dbg !7878 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i64, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !7881, metadata !DIExpression()), !dbg !7882
  store i64 %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !7883, metadata !DIExpression()), !dbg !7884
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !7885, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.declare(metadata ptr %8, metadata !7887, metadata !DIExpression()), !dbg !7888
  %9 = load i64, ptr %6, align 8, !dbg !7889
  %10 = add i64 32, %9, !dbg !7890
  %11 = call noalias ptr @malloc(i64 noundef %10) #18, !dbg !7891
  store ptr %11, ptr %8, align 8, !dbg !7888
  %12 = load ptr, ptr %8, align 8, !dbg !7892
  %13 = icmp ne ptr %12, null, !dbg !7892
  %14 = xor i1 %13, true, !dbg !7892
  %15 = zext i1 %14 to i32, !dbg !7892
  %16 = sext i32 %15 to i64, !dbg !7892
  %17 = icmp ne i64 %16, 0, !dbg !7892
  br i1 %17, label %18, label %19, !dbg !7894

18:                                               ; preds = %3
  store ptr null, ptr %4, align 8, !dbg !7895
  br label %39, !dbg !7895

19:                                               ; preds = %3
  %20 = load ptr, ptr %5, align 8, !dbg !7896
  %21 = getelementptr inbounds %struct.coro_t_, ptr %20, i32 0, i32 3, !dbg !7897
  %22 = load ptr, ptr %21, align 8, !dbg !7897
  %23 = load ptr, ptr %8, align 8, !dbg !7898
  %24 = getelementptr inbounds %struct.coro_defer_t_, ptr %23, i32 0, i32 0, !dbg !7899
  store ptr %22, ptr %24, align 8, !dbg !7900
  %25 = load ptr, ptr %7, align 8, !dbg !7901
  %26 = load ptr, ptr %8, align 8, !dbg !7902
  %27 = getelementptr inbounds %struct.coro_defer_t_, ptr %26, i32 0, i32 1, !dbg !7903
  store ptr %25, ptr %27, align 8, !dbg !7904
  %28 = load ptr, ptr %8, align 8, !dbg !7905
  %29 = getelementptr inbounds %struct.coro_defer_t_, ptr %28, i64 1, !dbg !7906
  %30 = load ptr, ptr %8, align 8, !dbg !7907
  %31 = getelementptr inbounds %struct.coro_defer_t_, ptr %30, i32 0, i32 2, !dbg !7908
  store ptr %29, ptr %31, align 8, !dbg !7909
  %32 = load ptr, ptr %8, align 8, !dbg !7910
  %33 = getelementptr inbounds %struct.coro_defer_t_, ptr %32, i32 0, i32 3, !dbg !7911
  store ptr null, ptr %33, align 8, !dbg !7912
  %34 = load ptr, ptr %8, align 8, !dbg !7913
  %35 = load ptr, ptr %5, align 8, !dbg !7914
  %36 = getelementptr inbounds %struct.coro_t_, ptr %35, i32 0, i32 3, !dbg !7915
  store ptr %34, ptr %36, align 8, !dbg !7916
  %37 = load ptr, ptr %8, align 8, !dbg !7917
  %38 = getelementptr inbounds %struct.coro_defer_t_, ptr %37, i64 1, !dbg !7918
  store ptr %38, ptr %4, align 8, !dbg !7919
  br label %39, !dbg !7919

39:                                               ; preds = %19, %18
  %40 = load ptr, ptr %4, align 8, !dbg !7920
  ret ptr %40, !dbg !7920
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @coro_malloc(ptr noundef %0, i64 noundef %1) #0 !dbg !7921 {
  %3 = alloca ptr, align 8
  %4 = alloca i64, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !7924, metadata !DIExpression()), !dbg !7925
  store i64 %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !7926, metadata !DIExpression()), !dbg !7927
  %5 = load ptr, ptr %3, align 8, !dbg !7928
  %6 = load i64, ptr %4, align 8, !dbg !7929
  %7 = call ptr @coro_malloc_full(ptr noundef %5, i64 noundef %6, ptr noundef @nothing), !dbg !7930
  ret ptr %7, !dbg !7931
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @nothing() #0 !dbg !7932 {
  ret void, !dbg !7933
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @coro_strdup(ptr noundef %0, ptr noundef %1) #0 !dbg !7934 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i64, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !7937, metadata !DIExpression()), !dbg !7938
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !7939, metadata !DIExpression()), !dbg !7940
  call void @llvm.dbg.declare(metadata ptr %5, metadata !7941, metadata !DIExpression()), !dbg !7942
  %7 = load ptr, ptr %4, align 8, !dbg !7943
  %8 = call i64 @strlen(ptr noundef %7) #20, !dbg !7944
  %9 = add i64 %8, 1, !dbg !7945
  store i64 %9, ptr %5, align 8, !dbg !7942
  call void @llvm.dbg.declare(metadata ptr %6, metadata !7946, metadata !DIExpression()), !dbg !7947
  %10 = load ptr, ptr %3, align 8, !dbg !7948
  %11 = load i64, ptr %5, align 8, !dbg !7949
  %12 = call ptr @coro_malloc(ptr noundef %10, i64 noundef %11), !dbg !7950
  store ptr %12, ptr %6, align 8, !dbg !7947
  %13 = load ptr, ptr %6, align 8, !dbg !7951
  %14 = icmp ne ptr %13, null, !dbg !7951
  %15 = xor i1 %14, true, !dbg !7951
  %16 = xor i1 %15, true, !dbg !7951
  %17 = zext i1 %16 to i32, !dbg !7951
  %18 = sext i32 %17 to i64, !dbg !7951
  %19 = icmp ne i64 %18, 0, !dbg !7951
  br i1 %19, label %20, label %24, !dbg !7953

20:                                               ; preds = %2
  %21 = load ptr, ptr %6, align 8, !dbg !7954
  %22 = load ptr, ptr %4, align 8, !dbg !7955
  %23 = load i64, ptr %5, align 8, !dbg !7956
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %21, ptr align 1 %22, i64 %23, i1 false), !dbg !7957
  br label %24, !dbg !7957

24:                                               ; preds = %20, %2
  %25 = load ptr, ptr %6, align 8, !dbg !7958
  ret ptr %25, !dbg !7959
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @coro_printf(ptr noundef %0, ptr noundef %1, ...) #0 !dbg !7960 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca [1 x %struct.__va_list_tag], align 16
  %10 = alloca i32, align 4
  %11 = alloca ptr, align 8
  store ptr %0, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !7963, metadata !DIExpression()), !dbg !7964
  store ptr %1, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !7965, metadata !DIExpression()), !dbg !7966
  call void @llvm.dbg.declare(metadata ptr %9, metadata !7967, metadata !DIExpression()), !dbg !7979
  call void @llvm.dbg.declare(metadata ptr %10, metadata !7980, metadata !DIExpression()), !dbg !7981
  call void @llvm.dbg.declare(metadata ptr %11, metadata !7982, metadata !DIExpression()), !dbg !7983
  %12 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !7984
  call void @llvm.va_start(ptr %12), !dbg !7984
  %13 = load ptr, ptr %8, align 8, !dbg !7985
  %14 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !7986
  %15 = call i32 @vasprintf(ptr noundef %11, ptr noundef %13, ptr noundef %14) #17, !dbg !7987
  store i32 %15, ptr %10, align 4, !dbg !7988
  %16 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !7989
  call void @llvm.va_end(ptr %16), !dbg !7989
  %17 = load i32, ptr %10, align 4, !dbg !7990
  %18 = icmp slt i32 %17, 0, !dbg !7990
  %19 = zext i1 %18 to i32, !dbg !7990
  %20 = sext i32 %19 to i64, !dbg !7990
  %21 = icmp ne i64 %20, 0, !dbg !7990
  br i1 %21, label %22, label %23, !dbg !7992

22:                                               ; preds = %2
  store ptr null, ptr %6, align 8, !dbg !7993
  br label %30, !dbg !7993

23:                                               ; preds = %2
  %24 = load ptr, ptr %7, align 8, !dbg !7994
  %25 = load ptr, ptr %11, align 8, !dbg !7995
  store ptr %24, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !7867, metadata !DIExpression()), !dbg !7996
  store ptr @free, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !7869, metadata !DIExpression()), !dbg !7998
  store ptr %25, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !7871, metadata !DIExpression()), !dbg !7999
  %26 = load ptr, ptr %3, align 8, !dbg !8000
  %27 = load ptr, ptr %4, align 8, !dbg !8001
  %28 = load ptr, ptr %5, align 8, !dbg !8002
  call void @coro_defer_any(ptr noundef %26, ptr noundef %27, ptr noundef %28, ptr noundef null), !dbg !8003
  %29 = load ptr, ptr %11, align 8, !dbg !8004
  store ptr %29, ptr %6, align 8, !dbg !8005
  br label %30, !dbg !8005

30:                                               ; preds = %23, %22
  %31 = load ptr, ptr %6, align 8, !dbg !8006
  ret ptr %31, !dbg !8006
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @lwan_http_authorize_init() #0 !dbg !8007 {
  %1 = call ptr @cache_create(ptr noundef @create_realm_file, ptr noundef @destroy_realm_file, ptr noundef null, i64 noundef 60), !dbg !8010
  store ptr %1, ptr @realm_password_cache, align 8, !dbg !8011
  %2 = load ptr, ptr @realm_password_cache, align 8, !dbg !8012
  %3 = icmp ne ptr %2, null, !dbg !8013
  %4 = xor i1 %3, true, !dbg !8013
  %5 = xor i1 %4, true, !dbg !8014
  ret i1 %5, !dbg !8015
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @create_realm_file(ptr noundef %0, ptr noundef %1) #0 !dbg !8016 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca %struct.config_t_, align 8
  %8 = alloca %struct.config_line_t_, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i32, align 4
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !8019, metadata !DIExpression()), !dbg !8020
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !8021, metadata !DIExpression()), !dbg !8022
  call void @llvm.dbg.declare(metadata ptr %6, metadata !8023, metadata !DIExpression()), !dbg !8024
  %12 = call noalias ptr @malloc(i64 noundef 48) #18, !dbg !8025
  store ptr %12, ptr %6, align 8, !dbg !8024
  call void @llvm.dbg.declare(metadata ptr %7, metadata !8026, metadata !DIExpression()), !dbg !8067
  call void @llvm.dbg.declare(metadata ptr %8, metadata !8068, metadata !DIExpression()), !dbg !8087
  %13 = load ptr, ptr %6, align 8, !dbg !8088
  %14 = icmp ne ptr %13, null, !dbg !8088
  %15 = xor i1 %14, true, !dbg !8088
  %16 = zext i1 %15 to i32, !dbg !8088
  %17 = sext i32 %16 to i64, !dbg !8088
  %18 = icmp ne i64 %17, 0, !dbg !8088
  br i1 %18, label %19, label %20, !dbg !8090

19:                                               ; preds = %2
  store ptr null, ptr %3, align 8, !dbg !8091
  br label %107, !dbg !8091

20:                                               ; preds = %2
  %21 = call ptr @hash_str_new(ptr noundef @fourty_two_and_free, ptr noundef @fourty_two_and_free), !dbg !8092
  %22 = load ptr, ptr %6, align 8, !dbg !8093
  %23 = getelementptr inbounds %struct.realm_password_file_t, ptr %22, i32 0, i32 1, !dbg !8094
  store ptr %21, ptr %23, align 8, !dbg !8095
  %24 = load ptr, ptr %6, align 8, !dbg !8096
  %25 = getelementptr inbounds %struct.realm_password_file_t, ptr %24, i32 0, i32 1, !dbg !8096
  %26 = load ptr, ptr %25, align 8, !dbg !8096
  %27 = icmp ne ptr %26, null, !dbg !8096
  %28 = xor i1 %27, true, !dbg !8096
  %29 = zext i1 %28 to i32, !dbg !8096
  %30 = sext i32 %29 to i64, !dbg !8096
  %31 = icmp ne i64 %30, 0, !dbg !8096
  br i1 %31, label %32, label %33, !dbg !8098

32:                                               ; preds = %20
  br label %102, !dbg !8099

33:                                               ; preds = %20
  %34 = load ptr, ptr %4, align 8, !dbg !8100
  %35 = call zeroext i1 @config_open(ptr noundef %7, ptr noundef %34), !dbg !8102
  br i1 %35, label %37, label %36, !dbg !8103

36:                                               ; preds = %33
  br label %102, !dbg !8104

37:                                               ; preds = %33
  br label %38, !dbg !8105

38:                                               ; preds = %88, %81, %75, %37
  %39 = call zeroext i1 @config_read_line(ptr noundef %7, ptr noundef %8), !dbg !8106
  br i1 %39, label %40, label %89, !dbg !8105

40:                                               ; preds = %38
  %41 = getelementptr inbounds %struct.config_line_t_, ptr %8, i32 0, i32 1, !dbg !8107
  %42 = load i32, ptr %41, align 8, !dbg !8107
  switch i32 %42, label %86 [
    i32 0, label %43
  ], !dbg !8109

43:                                               ; preds = %40
  call void @llvm.dbg.declare(metadata ptr %9, metadata !8110, metadata !DIExpression()), !dbg !8113
  %44 = getelementptr inbounds %struct.config_line_t_, ptr %8, i32 0, i32 0, !dbg !8114
  %45 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %44, i32 0, i32 0, !dbg !8115
  %46 = load ptr, ptr %45, align 8, !dbg !8115
  %47 = call noalias ptr @strdup(ptr noundef %46) #17, !dbg !8116
  store ptr %47, ptr %9, align 8, !dbg !8113
  %48 = load ptr, ptr %9, align 8, !dbg !8117
  %49 = icmp ne ptr %48, null, !dbg !8117
  br i1 %49, label %51, label %50, !dbg !8119

50:                                               ; preds = %43
  br label %101, !dbg !8120

51:                                               ; preds = %43
  call void @llvm.dbg.declare(metadata ptr %10, metadata !8121, metadata !DIExpression()), !dbg !8122
  %52 = getelementptr inbounds %struct.config_line_t_, ptr %8, i32 0, i32 0, !dbg !8123
  %53 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %52, i32 0, i32 1, !dbg !8124
  %54 = load ptr, ptr %53, align 8, !dbg !8124
  %55 = call noalias ptr @strdup(ptr noundef %54) #17, !dbg !8125
  store ptr %55, ptr %10, align 8, !dbg !8122
  %56 = load ptr, ptr %10, align 8, !dbg !8126
  %57 = icmp ne ptr %56, null, !dbg !8126
  br i1 %57, label %60, label %58, !dbg !8128

58:                                               ; preds = %51
  %59 = load ptr, ptr %9, align 8, !dbg !8129
  call void @free(ptr noundef %59) #17, !dbg !8131
  br label %101, !dbg !8132

60:                                               ; preds = %51
  call void @llvm.dbg.declare(metadata ptr %11, metadata !8133, metadata !DIExpression()), !dbg !8134
  %61 = load ptr, ptr %6, align 8, !dbg !8135
  %62 = getelementptr inbounds %struct.realm_password_file_t, ptr %61, i32 0, i32 1, !dbg !8136
  %63 = load ptr, ptr %62, align 8, !dbg !8136
  %64 = load ptr, ptr %9, align 8, !dbg !8137
  %65 = load ptr, ptr %10, align 8, !dbg !8138
  %66 = call i32 @hash_add_unique(ptr noundef %63, ptr noundef %64, ptr noundef %65), !dbg !8139
  store i32 %66, ptr %11, align 4, !dbg !8134
  %67 = load i32, ptr %11, align 4, !dbg !8140
  %68 = icmp ne i32 %67, 0, !dbg !8140
  %69 = xor i1 %68, true, !dbg !8140
  %70 = xor i1 %69, true, !dbg !8140
  %71 = xor i1 %70, true, !dbg !8140
  %72 = zext i1 %71 to i32, !dbg !8140
  %73 = sext i32 %72 to i64, !dbg !8140
  %74 = icmp ne i64 %73, 0, !dbg !8140
  br i1 %74, label %75, label %76, !dbg !8142

75:                                               ; preds = %60
  br label %38, !dbg !8143, !llvm.loop !8144

76:                                               ; preds = %60
  %77 = load ptr, ptr %9, align 8, !dbg !8146
  call void @free(ptr noundef %77) #17, !dbg !8147
  %78 = load ptr, ptr %10, align 8, !dbg !8148
  call void @free(ptr noundef %78) #17, !dbg !8149
  %79 = load i32, ptr %11, align 4, !dbg !8150
  %80 = icmp eq i32 %79, -17, !dbg !8152
  br i1 %80, label %81, label %85, !dbg !8153

81:                                               ; preds = %76
  %82 = getelementptr inbounds %struct.config_line_t_, ptr %8, i32 0, i32 0, !dbg !8154
  %83 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %82, i32 0, i32 0, !dbg !8154
  %84 = load ptr, ptr %83, align 8, !dbg !8154
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_warning_debug(ptr noundef @.str.2.33, i32 noundef 89, ptr noundef @__FUNCTION__.create_realm_file, ptr noundef @.str.3.34, ptr noundef %84), !dbg !8154
  br label %38, !dbg !8156, !llvm.loop !8144

85:                                               ; preds = %76
  br label %101, !dbg !8157

86:                                               ; preds = %40
  %87 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %7, ptr noundef @.str.4.35), !dbg !8158
  br label %88, !dbg !8159

88:                                               ; preds = %86
  br label %38, !dbg !8105, !llvm.loop !8144

89:                                               ; preds = %38
  %90 = getelementptr inbounds %struct.config_t_, ptr %7, i32 0, i32 2, !dbg !8160
  %91 = load ptr, ptr %90, align 8, !dbg !8160
  %92 = icmp ne ptr %91, null, !dbg !8162
  br i1 %92, label %93, label %99, !dbg !8163

93:                                               ; preds = %89
  %94 = load ptr, ptr %4, align 8, !dbg !8164
  %95 = getelementptr inbounds %struct.config_t_, ptr %7, i32 0, i32 1, !dbg !8164
  %96 = load i32, ptr %95, align 8, !dbg !8164
  %97 = getelementptr inbounds %struct.config_t_, ptr %7, i32 0, i32 2, !dbg !8164
  %98 = load ptr, ptr %97, align 8, !dbg !8164
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_error_debug(ptr noundef @.str.2.33, i32 noundef 103, ptr noundef @__FUNCTION__.create_realm_file, ptr noundef @.str.5.36, ptr noundef %94, i32 noundef %96, ptr noundef %98), !dbg !8164
  br label %101, !dbg !8166

99:                                               ; preds = %89
  call void @config_close(ptr noundef %7), !dbg !8167
  %100 = load ptr, ptr %6, align 8, !dbg !8168
  store ptr %100, ptr %3, align 8, !dbg !8169
  br label %107, !dbg !8169

101:                                              ; preds = %93, %85, %58, %50
  call void @llvm.dbg.label(metadata !8170), !dbg !8171
  call void @config_close(ptr noundef %7), !dbg !8172
  br label %102, !dbg !8172

102:                                              ; preds = %101, %36, %32
  call void @llvm.dbg.label(metadata !8173), !dbg !8174
  %103 = load ptr, ptr %6, align 8, !dbg !8175
  %104 = getelementptr inbounds %struct.realm_password_file_t, ptr %103, i32 0, i32 1, !dbg !8176
  %105 = load ptr, ptr %104, align 8, !dbg !8176
  call void @hash_free(ptr noundef %105), !dbg !8177
  %106 = load ptr, ptr %6, align 8, !dbg !8178
  call void @free(ptr noundef %106) #17, !dbg !8179
  store ptr null, ptr %3, align 8, !dbg !8180
  br label %107, !dbg !8180

107:                                              ; preds = %102, %99, %19
  %108 = load ptr, ptr %3, align 8, !dbg !8181
  ret ptr %108, !dbg !8181
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @destroy_realm_file(ptr noundef %0, ptr noundef %1) #0 !dbg !8182 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !8185, metadata !DIExpression()), !dbg !8186
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !8187, metadata !DIExpression()), !dbg !8188
  call void @llvm.dbg.declare(metadata ptr %5, metadata !8189, metadata !DIExpression()), !dbg !8190
  %6 = load ptr, ptr %3, align 8, !dbg !8191
  store ptr %6, ptr %5, align 8, !dbg !8190
  %7 = load ptr, ptr %5, align 8, !dbg !8192
  %8 = getelementptr inbounds %struct.realm_password_file_t, ptr %7, i32 0, i32 1, !dbg !8193
  %9 = load ptr, ptr %8, align 8, !dbg !8193
  call void @hash_free(ptr noundef %9), !dbg !8194
  %10 = load ptr, ptr %5, align 8, !dbg !8195
  call void @free(ptr noundef %10) #17, !dbg !8196
  ret void, !dbg !8197
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fourty_two_and_free(ptr noundef %0) #0 !dbg !8198 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !8199, metadata !DIExpression()), !dbg !8200
  %4 = load ptr, ptr %2, align 8, !dbg !8201
  %5 = icmp ne ptr %4, null, !dbg !8201
  %6 = xor i1 %5, true, !dbg !8201
  %7 = xor i1 %6, true, !dbg !8201
  %8 = zext i1 %7 to i32, !dbg !8201
  %9 = sext i32 %8 to i64, !dbg !8201
  %10 = icmp ne i64 %9, 0, !dbg !8201
  br i1 %10, label %11, label %22, !dbg !8203

11:                                               ; preds = %1
  call void @llvm.dbg.declare(metadata ptr %3, metadata !8204, metadata !DIExpression()), !dbg !8206
  %12 = load ptr, ptr %2, align 8, !dbg !8207
  store ptr %12, ptr %3, align 8, !dbg !8206
  br label %13, !dbg !8208

13:                                               ; preds = %17, %11
  %14 = load ptr, ptr %3, align 8, !dbg !8209
  %15 = load i8, ptr %14, align 1, !dbg !8210
  %16 = icmp ne i8 %15, 0, !dbg !8208
  br i1 %16, label %17, label %20, !dbg !8208

17:                                               ; preds = %13
  %18 = load ptr, ptr %3, align 8, !dbg !8211
  %19 = getelementptr inbounds i8, ptr %18, i32 1, !dbg !8211
  store ptr %19, ptr %3, align 8, !dbg !8211
  store i8 42, ptr %18, align 1, !dbg !8212
  br label %13, !dbg !8208, !llvm.loop !8213

20:                                               ; preds = %13
  %21 = load ptr, ptr %2, align 8, !dbg !8215
  call void @free(ptr noundef %21) #17, !dbg !8216
  br label %22, !dbg !8217

22:                                               ; preds = %20, %1
  ret void, !dbg !8218
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_status_error_debug(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3, ...) #0 !dbg !8219 {
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca [1 x %struct.__va_list_tag], align 16
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !8220, metadata !DIExpression()), !dbg !8221
  store i32 %1, ptr %6, align 4
  call void @llvm.dbg.declare(metadata ptr %6, metadata !8222, metadata !DIExpression()), !dbg !8221
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !8223, metadata !DIExpression()), !dbg !8221
  store ptr %3, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !8224, metadata !DIExpression()), !dbg !8221
  %10 = load volatile i8, ptr @quiet, align 1, !dbg !8225
  %11 = trunc i8 %10 to i1, !dbg !8225
  br i1 %11, label %20, label %12, !dbg !8221

12:                                               ; preds = %4
  call void @llvm.dbg.declare(metadata ptr %9, metadata !8227, metadata !DIExpression()), !dbg !8229
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !8229
  call void @llvm.va_start(ptr %13), !dbg !8229
  %14 = load ptr, ptr %5, align 8, !dbg !8229
  %15 = load i32, ptr %6, align 4, !dbg !8229
  %16 = load ptr, ptr %7, align 8, !dbg !8229
  %17 = load ptr, ptr %8, align 8, !dbg !8229
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !8229
  call void @status_out(ptr noundef %14, i32 noundef %15, ptr noundef %16, i32 noundef 4, ptr noundef %17, ptr noundef %18), !dbg !8229
  %19 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !8229
  call void @llvm.va_end(ptr %19), !dbg !8229
  br label %20, !dbg !8229

20:                                               ; preds = %12, %4
  ret void, !dbg !8221
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_http_authorize_shutdown() #0 !dbg !8230 {
  %1 = load ptr, ptr @realm_password_cache, align 8, !dbg !8231
  call void @cache_destroy(ptr noundef %1), !dbg !8232
  ret void, !dbg !8233
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @lwan_http_authorize(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 !dbg !678 {
  %5 = alloca i1, align 1
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  store ptr %0, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !8234, metadata !DIExpression()), !dbg !8235
  store ptr %1, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !8236, metadata !DIExpression()), !dbg !8237
  store ptr %2, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !8238, metadata !DIExpression()), !dbg !8239
  store ptr %3, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !8240, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.declare(metadata ptr %10, metadata !8242, metadata !DIExpression()), !dbg !8243
  %11 = load ptr, ptr %7, align 8, !dbg !8244
  %12 = getelementptr inbounds %struct.lwan_value_t_, ptr %11, i32 0, i32 0, !dbg !8246
  %13 = load ptr, ptr %12, align 8, !dbg !8246
  %14 = icmp ne ptr %13, null, !dbg !8244
  br i1 %14, label %16, label %15, !dbg !8247

15:                                               ; preds = %4
  br label %43, !dbg !8248

16:                                               ; preds = %4
  %17 = load ptr, ptr %7, align 8, !dbg !8249
  %18 = getelementptr inbounds %struct.lwan_value_t_, ptr %17, i32 0, i32 0, !dbg !8249
  %19 = load ptr, ptr %18, align 8, !dbg !8249
  %20 = call i32 @strncmp(ptr noundef %19, ptr noundef @.str.37.56, i64 noundef 6) #20, !dbg !8249
  %21 = sext i32 %20 to i64, !dbg !8249
  %22 = icmp ne i64 %21, 0, !dbg !8249
  br i1 %22, label %23, label %24, !dbg !8251

23:                                               ; preds = %16
  br label %43, !dbg !8252

24:                                               ; preds = %16
  %25 = load ptr, ptr %7, align 8, !dbg !8253
  %26 = getelementptr inbounds %struct.lwan_value_t_, ptr %25, i32 0, i32 0, !dbg !8254
  %27 = load ptr, ptr %26, align 8, !dbg !8255
  %28 = getelementptr inbounds i8, ptr %27, i64 6, !dbg !8255
  store ptr %28, ptr %26, align 8, !dbg !8255
  %29 = load ptr, ptr %7, align 8, !dbg !8256
  %30 = getelementptr inbounds %struct.lwan_value_t_, ptr %29, i32 0, i32 1, !dbg !8257
  %31 = load i64, ptr %30, align 8, !dbg !8258
  %32 = sub i64 %31, 6, !dbg !8258
  store i64 %32, ptr %30, align 8, !dbg !8258
  %33 = load ptr, ptr %6, align 8, !dbg !8259
  %34 = getelementptr inbounds %struct.lwan_request_t_, ptr %33, i32 0, i32 4, !dbg !8261
  %35 = load ptr, ptr %34, align 8, !dbg !8261
  %36 = getelementptr inbounds %struct.lwan_connection_t_, ptr %35, i32 0, i32 2, !dbg !8262
  %37 = load ptr, ptr %36, align 8, !dbg !8262
  %38 = load ptr, ptr %7, align 8, !dbg !8263
  %39 = load ptr, ptr %9, align 8, !dbg !8264
  %40 = call zeroext i1 @authorize(ptr noundef %37, ptr noundef %38, ptr noundef %39), !dbg !8265
  br i1 %40, label %41, label %42, !dbg !8266

41:                                               ; preds = %24
  store i1 true, ptr %5, align 1, !dbg !8267
  br label %73, !dbg !8267

42:                                               ; preds = %24
  br label %43, !dbg !8268

43:                                               ; preds = %42, %23, %15
  call void @llvm.dbg.label(metadata !8269), !dbg !8270
  %44 = load ptr, ptr %6, align 8, !dbg !8271
  %45 = getelementptr inbounds %struct.lwan_request_t_, ptr %44, i32 0, i32 4, !dbg !8272
  %46 = load ptr, ptr %45, align 8, !dbg !8272
  %47 = getelementptr inbounds %struct.lwan_connection_t_, ptr %46, i32 0, i32 2, !dbg !8273
  %48 = load ptr, ptr %47, align 8, !dbg !8273
  %49 = call ptr @coro_malloc(ptr noundef %48, i64 noundef 32), !dbg !8274
  store ptr %49, ptr %10, align 8, !dbg !8275
  %50 = load ptr, ptr %10, align 8, !dbg !8276
  %51 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %50, i64 0, !dbg !8276
  %52 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %51, i32 0, i32 0, !dbg !8277
  store ptr @.str.1.38, ptr %52, align 8, !dbg !8278
  %53 = load ptr, ptr %6, align 8, !dbg !8279
  %54 = getelementptr inbounds %struct.lwan_request_t_, ptr %53, i32 0, i32 4, !dbg !8280
  %55 = load ptr, ptr %54, align 8, !dbg !8280
  %56 = getelementptr inbounds %struct.lwan_connection_t_, ptr %55, i32 0, i32 2, !dbg !8281
  %57 = load ptr, ptr %56, align 8, !dbg !8281
  %58 = load ptr, ptr %8, align 8, !dbg !8282
  %59 = call ptr (ptr, ptr, ...) @coro_printf(ptr noundef %57, ptr noundef @lwan_http_authorize.authenticate_tmpl, ptr noundef %58), !dbg !8283
  %60 = load ptr, ptr %10, align 8, !dbg !8284
  %61 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %60, i64 0, !dbg !8284
  %62 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %61, i32 0, i32 1, !dbg !8285
  store ptr %59, ptr %62, align 8, !dbg !8286
  %63 = load ptr, ptr %10, align 8, !dbg !8287
  %64 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %63, i64 1, !dbg !8287
  %65 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %64, i32 0, i32 1, !dbg !8288
  store ptr null, ptr %65, align 8, !dbg !8289
  %66 = load ptr, ptr %10, align 8, !dbg !8290
  %67 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %66, i64 1, !dbg !8290
  %68 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %67, i32 0, i32 0, !dbg !8291
  store ptr null, ptr %68, align 8, !dbg !8292
  %69 = load ptr, ptr %10, align 8, !dbg !8293
  %70 = load ptr, ptr %6, align 8, !dbg !8294
  %71 = getelementptr inbounds %struct.lwan_request_t_, ptr %70, i32 0, i32 8, !dbg !8295
  %72 = getelementptr inbounds %struct.lwan_response_t_, ptr %71, i32 0, i32 3, !dbg !8296
  store ptr %69, ptr %72, align 8, !dbg !8297
  store i1 false, ptr %5, align 1, !dbg !8298
  br label %73, !dbg !8298

73:                                               ; preds = %43, %41
  %74 = load i1, ptr %5, align 1, !dbg !8299
  ret i1 %74, !dbg !8299
}

; Function Attrs: nounwind willreturn memory(read)
declare i32 @strncmp(ptr noundef, ptr noundef, i64 noundef) #8

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @authorize(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !8300 {
  %4 = alloca i1, align 1
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8, align 1
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !8303, metadata !DIExpression()), !dbg !8304
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !8305, metadata !DIExpression()), !dbg !8306
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !8307, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.declare(metadata ptr %8, metadata !8309, metadata !DIExpression()), !dbg !8310
  call void @llvm.dbg.declare(metadata ptr %9, metadata !8311, metadata !DIExpression()), !dbg !8312
  call void @llvm.dbg.declare(metadata ptr %10, metadata !8313, metadata !DIExpression()), !dbg !8314
  call void @llvm.dbg.declare(metadata ptr %11, metadata !8315, metadata !DIExpression()), !dbg !8316
  call void @llvm.dbg.declare(metadata ptr %12, metadata !8317, metadata !DIExpression()), !dbg !8318
  call void @llvm.dbg.declare(metadata ptr %13, metadata !8319, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.declare(metadata ptr %14, metadata !8321, metadata !DIExpression()), !dbg !8322
  store i8 0, ptr %14, align 1, !dbg !8322
  %15 = load ptr, ptr @realm_password_cache, align 8, !dbg !8323
  %16 = load ptr, ptr %5, align 8, !dbg !8324
  %17 = load ptr, ptr %7, align 8, !dbg !8325
  %18 = call ptr @cache_coro_get_and_ref_entry(ptr noundef %15, ptr noundef %16, ptr noundef %17), !dbg !8326
  store ptr %18, ptr %8, align 8, !dbg !8327
  %19 = load ptr, ptr %8, align 8, !dbg !8328
  %20 = icmp ne ptr %19, null, !dbg !8328
  %21 = xor i1 %20, true, !dbg !8328
  %22 = zext i1 %21 to i32, !dbg !8328
  %23 = sext i32 %22 to i64, !dbg !8328
  %24 = icmp ne i64 %23, 0, !dbg !8328
  br i1 %24, label %25, label %26, !dbg !8330

25:                                               ; preds = %3
  store i1 false, ptr %4, align 1, !dbg !8331
  br label %82, !dbg !8331

26:                                               ; preds = %3
  %27 = load ptr, ptr %6, align 8, !dbg !8332
  %28 = getelementptr inbounds %struct.lwan_value_t_, ptr %27, i32 0, i32 0, !dbg !8333
  %29 = load ptr, ptr %28, align 8, !dbg !8333
  %30 = load ptr, ptr %6, align 8, !dbg !8334
  %31 = getelementptr inbounds %struct.lwan_value_t_, ptr %30, i32 0, i32 1, !dbg !8335
  %32 = load i64, ptr %31, align 8, !dbg !8335
  %33 = call ptr @base64_decode(ptr noundef %29, i64 noundef %32, ptr noundef %13), !dbg !8336
  store ptr %33, ptr %9, align 8, !dbg !8337
  %34 = load ptr, ptr %9, align 8, !dbg !8338
  %35 = icmp ne ptr %34, null, !dbg !8338
  %36 = xor i1 %35, true, !dbg !8338
  %37 = zext i1 %36 to i32, !dbg !8338
  %38 = sext i32 %37 to i64, !dbg !8338
  %39 = icmp ne i64 %38, 0, !dbg !8338
  br i1 %39, label %40, label %41, !dbg !8340

40:                                               ; preds = %26
  store i1 false, ptr %4, align 1, !dbg !8341
  br label %82, !dbg !8341

41:                                               ; preds = %26
  %42 = load i64, ptr %13, align 8, !dbg !8342
  %43 = icmp uge i64 %42, 1024, !dbg !8342
  %44 = zext i1 %43 to i32, !dbg !8342
  %45 = sext i32 %44 to i64, !dbg !8342
  %46 = icmp ne i64 %45, 0, !dbg !8342
  br i1 %46, label %47, label %48, !dbg !8344

47:                                               ; preds = %41
  br label %78, !dbg !8345

48:                                               ; preds = %41
  %49 = load ptr, ptr %9, align 8, !dbg !8346
  %50 = load i64, ptr %13, align 8, !dbg !8347
  %51 = call ptr @memchr(ptr noundef %49, i32 noundef 58, i64 noundef %50) #20, !dbg !8348
  store ptr %51, ptr %10, align 8, !dbg !8349
  %52 = load ptr, ptr %10, align 8, !dbg !8350
  %53 = icmp ne ptr %52, null, !dbg !8350
  %54 = xor i1 %53, true, !dbg !8350
  %55 = zext i1 %54 to i32, !dbg !8350
  %56 = sext i32 %55 to i64, !dbg !8350
  %57 = icmp ne i64 %56, 0, !dbg !8350
  br i1 %57, label %58, label %59, !dbg !8352

58:                                               ; preds = %48
  br label %78, !dbg !8353

59:                                               ; preds = %48
  %60 = load ptr, ptr %10, align 8, !dbg !8354
  store i8 0, ptr %60, align 1, !dbg !8355
  %61 = load ptr, ptr %10, align 8, !dbg !8356
  %62 = getelementptr inbounds i8, ptr %61, i64 1, !dbg !8357
  store ptr %62, ptr %11, align 8, !dbg !8358
  %63 = load ptr, ptr %8, align 8, !dbg !8359
  %64 = getelementptr inbounds %struct.realm_password_file_t, ptr %63, i32 0, i32 1, !dbg !8360
  %65 = load ptr, ptr %64, align 8, !dbg !8360
  %66 = load ptr, ptr %9, align 8, !dbg !8361
  %67 = call ptr @hash_find(ptr noundef %65, ptr noundef %66), !dbg !8362
  store ptr %67, ptr %12, align 8, !dbg !8363
  %68 = load ptr, ptr %12, align 8, !dbg !8364
  %69 = icmp ne ptr %68, null, !dbg !8364
  br i1 %69, label %70, label %77, !dbg !8366

70:                                               ; preds = %59
  %71 = load ptr, ptr %11, align 8, !dbg !8367
  %72 = load ptr, ptr %12, align 8, !dbg !8368
  %73 = call i32 @strcmp(ptr noundef %71, ptr noundef %72) #20, !dbg !8369
  %74 = icmp ne i32 %73, 0, !dbg !8370
  %75 = xor i1 %74, true, !dbg !8370
  %76 = zext i1 %75 to i8, !dbg !8371
  store i8 %76, ptr %14, align 1, !dbg !8371
  br label %77, !dbg !8372

77:                                               ; preds = %70, %59
  br label %78, !dbg !8364

78:                                               ; preds = %77, %58, %47
  call void @llvm.dbg.label(metadata !8373), !dbg !8374
  %79 = load ptr, ptr %9, align 8, !dbg !8375
  call void @free(ptr noundef %79) #17, !dbg !8376
  %80 = load i8, ptr %14, align 1, !dbg !8377
  %81 = trunc i8 %80 to i1, !dbg !8377
  store i1 %81, ptr %4, align 1, !dbg !8378
  br label %82, !dbg !8378

82:                                               ; preds = %78, %40, %25
  %83 = load i1, ptr %4, align 1, !dbg !8379
  ret i1 %83, !dbg !8379
}

; Function Attrs: nounwind willreturn memory(read)
declare ptr @memchr(ptr noundef, i32 noundef, i64 noundef) #8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lwan_openat(ptr noundef %0, i32 noundef %1, ptr noundef %2, i32 noundef %3) #0 !dbg !8380 {
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store ptr %0, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !8518, metadata !DIExpression()), !dbg !8519
  store i32 %1, ptr %7, align 4
  call void @llvm.dbg.declare(metadata ptr %7, metadata !8520, metadata !DIExpression()), !dbg !8521
  store ptr %2, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !8522, metadata !DIExpression()), !dbg !8523
  store i32 %3, ptr %9, align 4
  call void @llvm.dbg.declare(metadata ptr %9, metadata !8524, metadata !DIExpression()), !dbg !8525
  call void @llvm.dbg.declare(metadata ptr %10, metadata !8526, metadata !DIExpression()), !dbg !8528
  store i32 5, ptr %10, align 4, !dbg !8528
  br label %12, !dbg !8529

12:                                               ; preds = %52, %4
  %13 = load i32, ptr %10, align 4, !dbg !8530
  %14 = icmp ne i32 %13, 0, !dbg !8532
  br i1 %14, label %15, label %55, !dbg !8532

15:                                               ; preds = %12
  call void @llvm.dbg.declare(metadata ptr %11, metadata !8533, metadata !DIExpression()), !dbg !8535
  %16 = load i32, ptr %7, align 4, !dbg !8536
  %17 = load ptr, ptr %8, align 8, !dbg !8537
  %18 = load i32, ptr %9, align 4, !dbg !8538
  %19 = call i32 (i32, ptr, i32, ...) @openat(i32 noundef %16, ptr noundef %17, i32 noundef %18), !dbg !8539
  store i32 %19, ptr %11, align 4, !dbg !8535
  %20 = load i32, ptr %11, align 4, !dbg !8540
  %21 = icmp sge i32 %20, 0, !dbg !8540
  %22 = xor i1 %21, true, !dbg !8540
  %23 = xor i1 %22, true, !dbg !8540
  %24 = zext i1 %23 to i32, !dbg !8540
  %25 = sext i32 %24 to i64, !dbg !8540
  %26 = icmp ne i64 %25, 0, !dbg !8540
  br i1 %26, label %27, label %37, !dbg !8542

27:                                               ; preds = %15
  %28 = load ptr, ptr %6, align 8, !dbg !8543
  %29 = getelementptr inbounds %struct.lwan_request_t_, ptr %28, i32 0, i32 4, !dbg !8545
  %30 = load ptr, ptr %29, align 8, !dbg !8545
  %31 = getelementptr inbounds %struct.lwan_connection_t_, ptr %30, i32 0, i32 2, !dbg !8546
  %32 = load ptr, ptr %31, align 8, !dbg !8546
  %33 = load i32, ptr %11, align 4, !dbg !8547
  %34 = sext i32 %33 to i64, !dbg !8548
  %35 = inttoptr i64 %34 to ptr, !dbg !8549
  call void @coro_defer(ptr noundef %32, ptr noundef @close, ptr noundef %35), !dbg !8550
  %36 = load i32, ptr %11, align 4, !dbg !8551
  store i32 %36, ptr %5, align 4, !dbg !8552
  br label %56, !dbg !8552

37:                                               ; preds = %15
  %38 = call ptr @__errno_location() #21, !dbg !8553
  %39 = load i32, ptr %38, align 4, !dbg !8553
  switch i32 %39, label %47 [
    i32 4, label %40
    i32 24, label %40
    i32 23, label %40
    i32 12, label %40
  ], !dbg !8554

40:                                               ; preds = %37, %37, %37, %37
  %41 = load ptr, ptr %6, align 8, !dbg !8555
  %42 = getelementptr inbounds %struct.lwan_request_t_, ptr %41, i32 0, i32 4, !dbg !8557
  %43 = load ptr, ptr %42, align 8, !dbg !8557
  %44 = getelementptr inbounds %struct.lwan_connection_t_, ptr %43, i32 0, i32 2, !dbg !8558
  %45 = load ptr, ptr %44, align 8, !dbg !8558
  %46 = call i32 @coro_yield(ptr noundef %45, i32 noundef 0), !dbg !8559
  br label %51, !dbg !8560

47:                                               ; preds = %37
  %48 = call ptr @__errno_location() #21, !dbg !8561
  %49 = load i32, ptr %48, align 4, !dbg !8561
  %50 = sub nsw i32 0, %49, !dbg !8562
  store i32 %50, ptr %5, align 4, !dbg !8563
  br label %56, !dbg !8563

51:                                               ; preds = %40
  br label %52, !dbg !8564

52:                                               ; preds = %51
  %53 = load i32, ptr %10, align 4, !dbg !8565
  %54 = add nsw i32 %53, -1, !dbg !8565
  store i32 %54, ptr %10, align 4, !dbg !8565
  br label %12, !dbg !8566, !llvm.loop !8567

55:                                               ; preds = %12
  store i32 -23, ptr %5, align 4, !dbg !8569
  br label %56, !dbg !8569

56:                                               ; preds = %55, %47, %27
  %57 = load i32, ptr %5, align 4, !dbg !8570
  ret i32 %57, !dbg !8570
}

declare i32 @openat(i32 noundef, ptr noundef, i32 noundef, ...) #5

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @lwan_writev(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 !dbg !8571 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !8580, metadata !DIExpression()), !dbg !8581
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !8582, metadata !DIExpression()), !dbg !8583
  store i32 %2, ptr %6, align 4
  call void @llvm.dbg.declare(metadata ptr %6, metadata !8584, metadata !DIExpression()), !dbg !8585
  call void @llvm.dbg.declare(metadata ptr %7, metadata !8586, metadata !DIExpression()), !dbg !8587
  store i64 0, ptr %7, align 8, !dbg !8587
  call void @llvm.dbg.declare(metadata ptr %8, metadata !8588, metadata !DIExpression()), !dbg !8589
  store i32 0, ptr %8, align 4, !dbg !8589
  call void @llvm.dbg.declare(metadata ptr %9, metadata !8590, metadata !DIExpression()), !dbg !8592
  store i32 5, ptr %9, align 4, !dbg !8592
  br label %11, !dbg !8593

11:                                               ; preds = %96, %3
  %12 = load i32, ptr %9, align 4, !dbg !8594
  %13 = icmp ne i32 %12, 0, !dbg !8596
  br i1 %13, label %14, label %103, !dbg !8596

14:                                               ; preds = %11
  call void @llvm.dbg.declare(metadata ptr %10, metadata !8597, metadata !DIExpression()), !dbg !8599
  %15 = load ptr, ptr %4, align 8, !dbg !8600
  %16 = getelementptr inbounds %struct.lwan_request_t_, ptr %15, i32 0, i32 1, !dbg !8601
  %17 = load i32, ptr %16, align 4, !dbg !8601
  %18 = load ptr, ptr %5, align 8, !dbg !8602
  %19 = load i32, ptr %8, align 4, !dbg !8603
  %20 = sext i32 %19 to i64, !dbg !8604
  %21 = getelementptr inbounds %struct.lwan_value_t_, ptr %18, i64 %20, !dbg !8604
  %22 = load i32, ptr %6, align 4, !dbg !8605
  %23 = load i32, ptr %8, align 4, !dbg !8606
  %24 = sub nsw i32 %22, %23, !dbg !8607
  %25 = call i64 @writev(i32 noundef %17, ptr noundef %21, i32 noundef %24), !dbg !8608
  store i64 %25, ptr %10, align 8, !dbg !8599
  %26 = load i64, ptr %10, align 8, !dbg !8609
  %27 = icmp slt i64 %26, 0, !dbg !8609
  %28 = zext i1 %27 to i32, !dbg !8609
  %29 = sext i32 %28 to i64, !dbg !8609
  %30 = icmp ne i64 %29, 0, !dbg !8609
  br i1 %30, label %31, label %38, !dbg !8611

31:                                               ; preds = %14
  %32 = load i32, ptr %9, align 4, !dbg !8612
  %33 = add nsw i32 %32, -1, !dbg !8612
  store i32 %33, ptr %9, align 4, !dbg !8612
  %34 = call ptr @__errno_location() #21, !dbg !8614
  %35 = load i32, ptr %34, align 4, !dbg !8614
  switch i32 %35, label %37 [
    i32 11, label %36
    i32 4, label %36
  ], !dbg !8615

36:                                               ; preds = %31, %31
  br label %96, !dbg !8616

37:                                               ; preds = %31
  br label %104, !dbg !8618

38:                                               ; preds = %14
  %39 = load i64, ptr %10, align 8, !dbg !8619
  %40 = load i64, ptr %7, align 8, !dbg !8620
  %41 = add nsw i64 %40, %39, !dbg !8620
  store i64 %41, ptr %7, align 8, !dbg !8620
  br label %42, !dbg !8621

42:                                               ; preds = %57, %38
  %43 = load i32, ptr %8, align 4, !dbg !8622
  %44 = load i32, ptr %6, align 4, !dbg !8623
  %45 = icmp slt i32 %43, %44, !dbg !8624
  br i1 %45, label %46, label %55, !dbg !8625

46:                                               ; preds = %42
  %47 = load i64, ptr %10, align 8, !dbg !8626
  %48 = load ptr, ptr %5, align 8, !dbg !8627
  %49 = load i32, ptr %8, align 4, !dbg !8628
  %50 = sext i32 %49 to i64, !dbg !8627
  %51 = getelementptr inbounds %struct.lwan_value_t_, ptr %48, i64 %50, !dbg !8627
  %52 = getelementptr inbounds %struct.lwan_value_t_, ptr %51, i32 0, i32 1, !dbg !8629
  %53 = load i64, ptr %52, align 8, !dbg !8629
  %54 = icmp sge i64 %47, %53, !dbg !8630
  br label %55

55:                                               ; preds = %46, %42
  %56 = phi i1 [ false, %42 ], [ %54, %46 ], !dbg !8631
  br i1 %56, label %57, label %68, !dbg !8621

57:                                               ; preds = %55
  %58 = load ptr, ptr %5, align 8, !dbg !8632
  %59 = load i32, ptr %8, align 4, !dbg !8634
  %60 = sext i32 %59 to i64, !dbg !8632
  %61 = getelementptr inbounds %struct.lwan_value_t_, ptr %58, i64 %60, !dbg !8632
  %62 = getelementptr inbounds %struct.lwan_value_t_, ptr %61, i32 0, i32 1, !dbg !8635
  %63 = load i64, ptr %62, align 8, !dbg !8635
  %64 = load i64, ptr %10, align 8, !dbg !8636
  %65 = sub nsw i64 %64, %63, !dbg !8636
  store i64 %65, ptr %10, align 8, !dbg !8636
  %66 = load i32, ptr %8, align 4, !dbg !8637
  %67 = add nsw i32 %66, 1, !dbg !8637
  store i32 %67, ptr %8, align 4, !dbg !8637
  br label %42, !dbg !8621, !llvm.loop !8638

68:                                               ; preds = %55
  %69 = load i32, ptr %8, align 4, !dbg !8640
  %70 = load i32, ptr %6, align 4, !dbg !8642
  %71 = icmp eq i32 %69, %70, !dbg !8643
  br i1 %71, label %72, label %74, !dbg !8644

72:                                               ; preds = %68
  %73 = load i64, ptr %7, align 8, !dbg !8645
  ret i64 %73, !dbg !8646

74:                                               ; preds = %68
  %75 = load ptr, ptr %5, align 8, !dbg !8647
  %76 = load i32, ptr %8, align 4, !dbg !8648
  %77 = sext i32 %76 to i64, !dbg !8647
  %78 = getelementptr inbounds %struct.lwan_value_t_, ptr %75, i64 %77, !dbg !8647
  %79 = getelementptr inbounds %struct.lwan_value_t_, ptr %78, i32 0, i32 0, !dbg !8649
  %80 = load ptr, ptr %79, align 8, !dbg !8649
  %81 = load i64, ptr %10, align 8, !dbg !8650
  %82 = getelementptr inbounds i8, ptr %80, i64 %81, !dbg !8651
  %83 = load ptr, ptr %5, align 8, !dbg !8652
  %84 = load i32, ptr %8, align 4, !dbg !8653
  %85 = sext i32 %84 to i64, !dbg !8652
  %86 = getelementptr inbounds %struct.lwan_value_t_, ptr %83, i64 %85, !dbg !8652
  %87 = getelementptr inbounds %struct.lwan_value_t_, ptr %86, i32 0, i32 0, !dbg !8654
  store ptr %82, ptr %87, align 8, !dbg !8655
  %88 = load i64, ptr %10, align 8, !dbg !8656
  %89 = load ptr, ptr %5, align 8, !dbg !8657
  %90 = load i32, ptr %8, align 4, !dbg !8658
  %91 = sext i32 %90 to i64, !dbg !8657
  %92 = getelementptr inbounds %struct.lwan_value_t_, ptr %89, i64 %91, !dbg !8657
  %93 = getelementptr inbounds %struct.lwan_value_t_, ptr %92, i32 0, i32 1, !dbg !8659
  %94 = load i64, ptr %93, align 8, !dbg !8660
  %95 = sub i64 %94, %88, !dbg !8660
  store i64 %95, ptr %93, align 8, !dbg !8660
  br label %96, !dbg !8657

96:                                               ; preds = %74, %36
  call void @llvm.dbg.label(metadata !8661), !dbg !8662
  %97 = load ptr, ptr %4, align 8, !dbg !8663
  %98 = getelementptr inbounds %struct.lwan_request_t_, ptr %97, i32 0, i32 4, !dbg !8664
  %99 = load ptr, ptr %98, align 8, !dbg !8664
  %100 = getelementptr inbounds %struct.lwan_connection_t_, ptr %99, i32 0, i32 2, !dbg !8665
  %101 = load ptr, ptr %100, align 8, !dbg !8665
  %102 = call i32 @coro_yield(ptr noundef %101, i32 noundef 0), !dbg !8666
  br label %11, !dbg !8667, !llvm.loop !8668

103:                                              ; preds = %11
  br label %104, !dbg !8669

104:                                              ; preds = %103, %37
  call void @llvm.dbg.label(metadata !8670), !dbg !8671
  %105 = load ptr, ptr %4, align 8, !dbg !8672
  %106 = getelementptr inbounds %struct.lwan_request_t_, ptr %105, i32 0, i32 4, !dbg !8673
  %107 = load ptr, ptr %106, align 8, !dbg !8673
  %108 = getelementptr inbounds %struct.lwan_connection_t_, ptr %107, i32 0, i32 2, !dbg !8674
  %109 = load ptr, ptr %108, align 8, !dbg !8674
  %110 = call i32 @coro_yield(ptr noundef %109, i32 noundef -1), !dbg !8675
  unreachable, !dbg !8676
}

declare i64 @writev(i32 noundef, ptr noundef, i32 noundef) #5

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @lwan_write(ptr noundef %0, ptr noundef %1, i64 noundef %2) #0 !dbg !8677 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !8680, metadata !DIExpression()), !dbg !8681
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !8682, metadata !DIExpression()), !dbg !8683
  store i64 %2, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !8684, metadata !DIExpression()), !dbg !8685
  call void @llvm.dbg.declare(metadata ptr %7, metadata !8686, metadata !DIExpression()), !dbg !8687
  store i64 0, ptr %7, align 8, !dbg !8687
  call void @llvm.dbg.declare(metadata ptr %8, metadata !8688, metadata !DIExpression()), !dbg !8690
  store i32 5, ptr %8, align 4, !dbg !8690
  br label %10, !dbg !8691

10:                                               ; preds = %50, %3
  %11 = load i32, ptr %8, align 4, !dbg !8692
  %12 = icmp ne i32 %11, 0, !dbg !8694
  br i1 %12, label %13, label %57, !dbg !8694

13:                                               ; preds = %10
  call void @llvm.dbg.declare(metadata ptr %9, metadata !8695, metadata !DIExpression()), !dbg !8697
  %14 = load ptr, ptr %4, align 8, !dbg !8698
  %15 = getelementptr inbounds %struct.lwan_request_t_, ptr %14, i32 0, i32 1, !dbg !8699
  %16 = load i32, ptr %15, align 4, !dbg !8699
  %17 = load ptr, ptr %5, align 8, !dbg !8700
  %18 = load i64, ptr %6, align 8, !dbg !8701
  %19 = call i64 @write(i32 noundef %16, ptr noundef %17, i64 noundef %18), !dbg !8702
  store i64 %19, ptr %9, align 8, !dbg !8697
  %20 = load i64, ptr %9, align 8, !dbg !8703
  %21 = icmp slt i64 %20, 0, !dbg !8703
  %22 = zext i1 %21 to i32, !dbg !8703
  %23 = sext i32 %22 to i64, !dbg !8703
  %24 = icmp ne i64 %23, 0, !dbg !8703
  br i1 %24, label %25, label %32, !dbg !8705

25:                                               ; preds = %13
  %26 = load i32, ptr %8, align 4, !dbg !8706
  %27 = add nsw i32 %26, -1, !dbg !8706
  store i32 %27, ptr %8, align 4, !dbg !8706
  %28 = call ptr @__errno_location() #21, !dbg !8708
  %29 = load i32, ptr %28, align 4, !dbg !8708
  switch i32 %29, label %31 [
    i32 11, label %30
    i32 4, label %30
  ], !dbg !8709

30:                                               ; preds = %25, %25
  br label %50, !dbg !8710

31:                                               ; preds = %25
  br label %58, !dbg !8712

32:                                               ; preds = %13
  %33 = load i64, ptr %9, align 8, !dbg !8713
  %34 = load i64, ptr %7, align 8, !dbg !8714
  %35 = add nsw i64 %34, %33, !dbg !8714
  store i64 %35, ptr %7, align 8, !dbg !8714
  %36 = load i64, ptr %7, align 8, !dbg !8715
  %37 = load i64, ptr %6, align 8, !dbg !8717
  %38 = icmp eq i64 %36, %37, !dbg !8718
  br i1 %38, label %39, label %41, !dbg !8719

39:                                               ; preds = %32
  %40 = load i64, ptr %7, align 8, !dbg !8720
  ret i64 %40, !dbg !8721

41:                                               ; preds = %32
  %42 = load i64, ptr %7, align 8, !dbg !8722
  %43 = load i64, ptr %6, align 8, !dbg !8724
  %44 = icmp ult i64 %42, %43, !dbg !8725
  br i1 %44, label %45, label %49, !dbg !8726

45:                                               ; preds = %41
  %46 = load ptr, ptr %5, align 8, !dbg !8727
  %47 = load i64, ptr %9, align 8, !dbg !8728
  %48 = getelementptr inbounds i8, ptr %46, i64 %47, !dbg !8729
  store ptr %48, ptr %5, align 8, !dbg !8730
  br label %49, !dbg !8731

49:                                               ; preds = %45, %41
  br label %50, !dbg !8724

50:                                               ; preds = %49, %30
  call void @llvm.dbg.label(metadata !8732), !dbg !8733
  %51 = load ptr, ptr %4, align 8, !dbg !8734
  %52 = getelementptr inbounds %struct.lwan_request_t_, ptr %51, i32 0, i32 4, !dbg !8735
  %53 = load ptr, ptr %52, align 8, !dbg !8735
  %54 = getelementptr inbounds %struct.lwan_connection_t_, ptr %53, i32 0, i32 2, !dbg !8736
  %55 = load ptr, ptr %54, align 8, !dbg !8736
  %56 = call i32 @coro_yield(ptr noundef %55, i32 noundef 0), !dbg !8737
  br label %10, !dbg !8738, !llvm.loop !8739

57:                                               ; preds = %10
  br label %58, !dbg !8740

58:                                               ; preds = %57, %31
  call void @llvm.dbg.label(metadata !8741), !dbg !8742
  %59 = load ptr, ptr %4, align 8, !dbg !8743
  %60 = getelementptr inbounds %struct.lwan_request_t_, ptr %59, i32 0, i32 4, !dbg !8744
  %61 = load ptr, ptr %60, align 8, !dbg !8744
  %62 = getelementptr inbounds %struct.lwan_connection_t_, ptr %61, i32 0, i32 2, !dbg !8745
  %63 = load ptr, ptr %62, align 8, !dbg !8745
  %64 = call i32 @coro_yield(ptr noundef %63, i32 noundef -1), !dbg !8746
  unreachable, !dbg !8747
}

declare i64 @write(i32 noundef, ptr noundef, i64 noundef) #5

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @lwan_send(ptr noundef %0, ptr noundef %1, i64 noundef %2, i32 noundef %3) #0 !dbg !8748 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !8751, metadata !DIExpression()), !dbg !8752
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !8753, metadata !DIExpression()), !dbg !8754
  store i64 %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !8755, metadata !DIExpression()), !dbg !8756
  store i32 %3, ptr %8, align 4
  call void @llvm.dbg.declare(metadata ptr %8, metadata !8757, metadata !DIExpression()), !dbg !8758
  call void @llvm.dbg.declare(metadata ptr %9, metadata !8759, metadata !DIExpression()), !dbg !8760
  store i64 0, ptr %9, align 8, !dbg !8760
  call void @llvm.dbg.declare(metadata ptr %10, metadata !8761, metadata !DIExpression()), !dbg !8763
  store i32 5, ptr %10, align 4, !dbg !8763
  br label %12, !dbg !8764

12:                                               ; preds = %53, %4
  %13 = load i32, ptr %10, align 4, !dbg !8765
  %14 = icmp ne i32 %13, 0, !dbg !8767
  br i1 %14, label %15, label %60, !dbg !8767

15:                                               ; preds = %12
  call void @llvm.dbg.declare(metadata ptr %11, metadata !8768, metadata !DIExpression()), !dbg !8770
  %16 = load ptr, ptr %5, align 8, !dbg !8771
  %17 = getelementptr inbounds %struct.lwan_request_t_, ptr %16, i32 0, i32 1, !dbg !8772
  %18 = load i32, ptr %17, align 4, !dbg !8772
  %19 = load ptr, ptr %6, align 8, !dbg !8773
  %20 = load i64, ptr %7, align 8, !dbg !8774
  %21 = load i32, ptr %8, align 4, !dbg !8775
  %22 = call i64 @send(i32 noundef %18, ptr noundef %19, i64 noundef %20, i32 noundef %21), !dbg !8776
  store i64 %22, ptr %11, align 8, !dbg !8770
  %23 = load i64, ptr %11, align 8, !dbg !8777
  %24 = icmp slt i64 %23, 0, !dbg !8777
  %25 = zext i1 %24 to i32, !dbg !8777
  %26 = sext i32 %25 to i64, !dbg !8777
  %27 = icmp ne i64 %26, 0, !dbg !8777
  br i1 %27, label %28, label %35, !dbg !8779

28:                                               ; preds = %15
  %29 = load i32, ptr %10, align 4, !dbg !8780
  %30 = add nsw i32 %29, -1, !dbg !8780
  store i32 %30, ptr %10, align 4, !dbg !8780
  %31 = call ptr @__errno_location() #21, !dbg !8782
  %32 = load i32, ptr %31, align 4, !dbg !8782
  switch i32 %32, label %34 [
    i32 11, label %33
    i32 4, label %33
  ], !dbg !8783

33:                                               ; preds = %28, %28
  br label %53, !dbg !8784

34:                                               ; preds = %28
  br label %61, !dbg !8786

35:                                               ; preds = %15
  %36 = load i64, ptr %11, align 8, !dbg !8787
  %37 = load i64, ptr %9, align 8, !dbg !8788
  %38 = add nsw i64 %37, %36, !dbg !8788
  store i64 %38, ptr %9, align 8, !dbg !8788
  %39 = load i64, ptr %9, align 8, !dbg !8789
  %40 = load i64, ptr %7, align 8, !dbg !8791
  %41 = icmp eq i64 %39, %40, !dbg !8792
  br i1 %41, label %42, label %44, !dbg !8793

42:                                               ; preds = %35
  %43 = load i64, ptr %9, align 8, !dbg !8794
  ret i64 %43, !dbg !8795

44:                                               ; preds = %35
  %45 = load i64, ptr %9, align 8, !dbg !8796
  %46 = load i64, ptr %7, align 8, !dbg !8798
  %47 = icmp ult i64 %45, %46, !dbg !8799
  br i1 %47, label %48, label %52, !dbg !8800

48:                                               ; preds = %44
  %49 = load ptr, ptr %6, align 8, !dbg !8801
  %50 = load i64, ptr %11, align 8, !dbg !8802
  %51 = getelementptr inbounds i8, ptr %49, i64 %50, !dbg !8803
  store ptr %51, ptr %6, align 8, !dbg !8804
  br label %52, !dbg !8805

52:                                               ; preds = %48, %44
  br label %53, !dbg !8798

53:                                               ; preds = %52, %33
  call void @llvm.dbg.label(metadata !8806), !dbg !8807
  %54 = load ptr, ptr %5, align 8, !dbg !8808
  %55 = getelementptr inbounds %struct.lwan_request_t_, ptr %54, i32 0, i32 4, !dbg !8809
  %56 = load ptr, ptr %55, align 8, !dbg !8809
  %57 = getelementptr inbounds %struct.lwan_connection_t_, ptr %56, i32 0, i32 2, !dbg !8810
  %58 = load ptr, ptr %57, align 8, !dbg !8810
  %59 = call i32 @coro_yield(ptr noundef %58, i32 noundef 0), !dbg !8811
  br label %12, !dbg !8812, !llvm.loop !8813

60:                                               ; preds = %12
  br label %61, !dbg !8814

61:                                               ; preds = %60, %34
  call void @llvm.dbg.label(metadata !8815), !dbg !8816
  %62 = load ptr, ptr %5, align 8, !dbg !8817
  %63 = getelementptr inbounds %struct.lwan_request_t_, ptr %62, i32 0, i32 4, !dbg !8818
  %64 = load ptr, ptr %63, align 8, !dbg !8818
  %65 = getelementptr inbounds %struct.lwan_connection_t_, ptr %64, i32 0, i32 2, !dbg !8819
  %66 = load ptr, ptr %65, align 8, !dbg !8819
  %67 = call i32 @coro_yield(ptr noundef %66, i32 noundef -1), !dbg !8820
  unreachable, !dbg !8821
}

declare i64 @send(i32 noundef, ptr noundef, i64 noundef, i32 noundef) #5

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @lwan_sendfile(ptr noundef %0, i32 noundef %1, i64 noundef %2, i64 noundef %3) #0 !dbg !8822 {
  %5 = alloca i64, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca ptr, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  %24 = alloca ptr, align 8
  %25 = alloca i32, align 4
  %26 = alloca i64, align 8
  %27 = alloca i64, align 8
  %28 = alloca i64, align 8
  store ptr %0, ptr %24, align 8
  call void @llvm.dbg.declare(metadata ptr %24, metadata !8825, metadata !DIExpression()), !dbg !8826
  store i32 %1, ptr %25, align 4
  call void @llvm.dbg.declare(metadata ptr %25, metadata !8827, metadata !DIExpression()), !dbg !8828
  store i64 %2, ptr %26, align 8
  call void @llvm.dbg.declare(metadata ptr %26, metadata !8829, metadata !DIExpression()), !dbg !8830
  store i64 %3, ptr %27, align 8
  call void @llvm.dbg.declare(metadata ptr %27, metadata !8831, metadata !DIExpression()), !dbg !8832
  %29 = load i64, ptr %27, align 8, !dbg !8833
  %30 = icmp ugt i64 %29, 7000, !dbg !8835
  br i1 %30, label %31, label %42, !dbg !8836

31:                                               ; preds = %4
  %32 = load i32, ptr %25, align 4, !dbg !8837
  %33 = load i64, ptr %26, align 8, !dbg !8837
  %34 = load i64, ptr %27, align 8, !dbg !8837
  %35 = call i32 @posix_fadvise(i32 noundef %32, i64 noundef %33, i64 noundef %34, i32 noundef 2) #17, !dbg !8837
  %36 = icmp slt i32 %35, 0, !dbg !8837
  %37 = zext i1 %36 to i32, !dbg !8837
  %38 = sext i32 %37 to i64, !dbg !8837
  %39 = icmp ne i64 %38, 0, !dbg !8837
  br i1 %39, label %40, label %41, !dbg !8840

40:                                               ; preds = %31
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.39.57, i32 noundef 240, ptr noundef @__FUNCTION__.lwan_sendfile, ptr noundef @.str.1.40), !dbg !8841
  br label %41, !dbg !8841

41:                                               ; preds = %40, %31
  br label %42, !dbg !8842

42:                                               ; preds = %41, %4
  call void @llvm.dbg.declare(metadata ptr %28, metadata !8843, metadata !DIExpression()), !dbg !8844
  %43 = load ptr, ptr %24, align 8, !dbg !8845
  %44 = getelementptr inbounds %struct.lwan_request_t_, ptr %43, i32 0, i32 4, !dbg !8846
  %45 = load ptr, ptr %44, align 8, !dbg !8846
  %46 = getelementptr inbounds %struct.lwan_connection_t_, ptr %45, i32 0, i32 2, !dbg !8847
  %47 = load ptr, ptr %46, align 8, !dbg !8847
  %48 = load i32, ptr %25, align 4, !dbg !8848
  %49 = load ptr, ptr %24, align 8, !dbg !8849
  %50 = getelementptr inbounds %struct.lwan_request_t_, ptr %49, i32 0, i32 1, !dbg !8850
  %51 = load i32, ptr %50, align 4, !dbg !8850
  %52 = load i64, ptr %26, align 8, !dbg !8851
  %53 = load i64, ptr %27, align 8, !dbg !8852
  store ptr %47, ptr %15, align 8
  call void @llvm.dbg.declare(metadata ptr %15, metadata !8853, metadata !DIExpression()), !dbg !8857
  store i32 %48, ptr %16, align 4
  call void @llvm.dbg.declare(metadata ptr %16, metadata !8859, metadata !DIExpression()), !dbg !8860
  store i32 %51, ptr %17, align 4
  call void @llvm.dbg.declare(metadata ptr %17, metadata !8861, metadata !DIExpression()), !dbg !8862
  store i64 %52, ptr %18, align 8
  call void @llvm.dbg.declare(metadata ptr %18, metadata !8863, metadata !DIExpression()), !dbg !8864
  store i64 %53, ptr %19, align 8
  call void @llvm.dbg.declare(metadata ptr %19, metadata !8865, metadata !DIExpression()), !dbg !8866
  call void @llvm.dbg.declare(metadata ptr %20, metadata !8867, metadata !DIExpression()), !dbg !8868
  store i64 0, ptr %20, align 8, !dbg !8868
  call void @llvm.dbg.declare(metadata ptr %21, metadata !8869, metadata !DIExpression()), !dbg !8870
  %54 = load i64, ptr %19, align 8, !dbg !8871
  store i64 %54, ptr %21, align 8, !dbg !8870
  br label %55, !dbg !8872

55:                                               ; preds = %80, %42
  call void @llvm.dbg.declare(metadata ptr %22, metadata !8873, metadata !DIExpression()), !dbg !8875
  %56 = load i32, ptr %17, align 4, !dbg !8876
  %57 = load i32, ptr %16, align 4, !dbg !8877
  %58 = load i64, ptr %21, align 8, !dbg !8878
  %59 = call i64 @sendfile(i32 noundef %56, i32 noundef %57, ptr noundef %18, i64 noundef %58) #17, !dbg !8879
  store i64 %59, ptr %22, align 8, !dbg !8875
  %60 = load i64, ptr %22, align 8, !dbg !8880
  %61 = icmp slt i64 %60, 0, !dbg !8882
  br i1 %61, label %62, label %71, !dbg !8883

62:                                               ; preds = %55
  %63 = call ptr @__errno_location() #21, !dbg !8884
  %64 = load i32, ptr %63, align 4, !dbg !8884
  switch i32 %64, label %68 [
    i32 11, label %65
    i32 4, label %65
  ], !dbg !8886

65:                                               ; preds = %62, %62
  %66 = load ptr, ptr %15, align 8, !dbg !8887
  %67 = call i32 @coro_yield(ptr noundef %66, i32 noundef 0) #17, !dbg !8889
  br label %80, !dbg !8890

68:                                               ; preds = %62
  %69 = load ptr, ptr %15, align 8, !dbg !8891
  %70 = call i32 @coro_yield(ptr noundef %69, i32 noundef -1) #17, !dbg !8892
  unreachable, !dbg !8893

71:                                               ; preds = %55
  %72 = load i64, ptr %22, align 8, !dbg !8894
  %73 = load i64, ptr %20, align 8, !dbg !8895
  %74 = add i64 %73, %72, !dbg !8895
  store i64 %74, ptr %20, align 8, !dbg !8895
  %75 = load i64, ptr %22, align 8, !dbg !8896
  %76 = load i64, ptr %21, align 8, !dbg !8897
  %77 = sub i64 %76, %75, !dbg !8897
  store i64 %77, ptr %21, align 8, !dbg !8897
  %78 = load ptr, ptr %15, align 8, !dbg !8898
  %79 = call i32 @coro_yield(ptr noundef %78, i32 noundef 0) #17, !dbg !8899
  br label %80, !dbg !8900

80:                                               ; preds = %71, %65
  %81 = load i64, ptr %21, align 8, !dbg !8901
  %82 = icmp ugt i64 %81, 0, !dbg !8902
  br i1 %82, label %55, label %83, !dbg !8900, !llvm.loop !8903

83:                                               ; preds = %80
  %84 = load i64, ptr %20, align 8, !dbg !8905
  store i64 %84, ptr %28, align 8, !dbg !8844
  %85 = load i64, ptr %28, align 8, !dbg !8906
  %86 = icmp slt i64 %85, 0, !dbg !8906
  %87 = zext i1 %86 to i32, !dbg !8906
  %88 = sext i32 %87 to i64, !dbg !8906
  %89 = icmp ne i64 %88, 0, !dbg !8906
  br i1 %89, label %90, label %152, !dbg !8908

90:                                               ; preds = %83
  %91 = call ptr @__errno_location() #21, !dbg !8909
  %92 = load i32, ptr %91, align 4, !dbg !8909
  switch i32 %92, label %151 [
    i32 38, label %93
    i32 22, label %93
  ], !dbg !8911

93:                                               ; preds = %90, %90
  %94 = load ptr, ptr %24, align 8, !dbg !8912
  %95 = getelementptr inbounds %struct.lwan_request_t_, ptr %94, i32 0, i32 4, !dbg !8914
  %96 = load ptr, ptr %95, align 8, !dbg !8914
  %97 = getelementptr inbounds %struct.lwan_connection_t_, ptr %96, i32 0, i32 2, !dbg !8915
  %98 = load ptr, ptr %97, align 8, !dbg !8915
  %99 = load i32, ptr %25, align 4, !dbg !8916
  %100 = load ptr, ptr %24, align 8, !dbg !8917
  %101 = getelementptr inbounds %struct.lwan_request_t_, ptr %100, i32 0, i32 1, !dbg !8918
  %102 = load i32, ptr %101, align 4, !dbg !8918
  %103 = load i64, ptr %26, align 8, !dbg !8919
  %104 = load i64, ptr %27, align 8, !dbg !8920
  store ptr %98, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !8921, metadata !DIExpression()), !dbg !8923
  store i32 %99, ptr %7, align 4
  call void @llvm.dbg.declare(metadata ptr %7, metadata !8925, metadata !DIExpression()), !dbg !8926
  store i32 %102, ptr %8, align 4
  call void @llvm.dbg.declare(metadata ptr %8, metadata !8927, metadata !DIExpression()), !dbg !8928
  store i64 %103, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !8929, metadata !DIExpression()), !dbg !8930
  store i64 %104, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %10, metadata !8931, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.declare(metadata ptr %11, metadata !8933, metadata !DIExpression()), !dbg !8934
  store i64 0, ptr %11, align 8, !dbg !8934
  call void @llvm.dbg.declare(metadata ptr %12, metadata !8935, metadata !DIExpression()), !dbg !8936
  %105 = load ptr, ptr %6, align 8, !dbg !8937
  %106 = call ptr @coro_malloc(ptr noundef %105, i64 noundef 1400) #17, !dbg !8938
  store ptr %106, ptr %12, align 8, !dbg !8936
  %107 = load i64, ptr %9, align 8, !dbg !8939
  %108 = icmp ne i64 %107, 0, !dbg !8939
  br i1 %108, label %109, label %115, !dbg !8941

109:                                              ; preds = %93
  %110 = load i32, ptr %7, align 4, !dbg !8942
  %111 = load i64, ptr %9, align 8, !dbg !8943
  %112 = call i64 @lseek(i32 noundef %110, i64 noundef %111, i32 noundef 0) #17, !dbg !8944
  %113 = icmp slt i64 %112, 0, !dbg !8945
  br i1 %113, label %114, label %115, !dbg !8946

114:                                              ; preds = %109
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.39.57, i32 noundef 179, ptr noundef @__FUNCTION__.sendfile_read_write, ptr noundef @.str.2.41) #17, !dbg !8947
  store i64 -1, ptr %5, align 8, !dbg !8949
  br label %149, !dbg !8949

115:                                              ; preds = %109, %93
  br label %116, !dbg !8950

116:                                              ; preds = %138, %115
  %117 = load i64, ptr %10, align 8, !dbg !8951
  %118 = icmp ugt i64 %117, 0, !dbg !8952
  br i1 %118, label %119, label %147, !dbg !8950

119:                                              ; preds = %116
  call void @llvm.dbg.declare(metadata ptr %13, metadata !8953, metadata !DIExpression()), !dbg !8955
  %120 = load i32, ptr %7, align 4, !dbg !8956
  %121 = load ptr, ptr %12, align 8, !dbg !8957
  %122 = call i64 @read(i32 noundef %120, ptr noundef %121, i64 noundef 1400) #17, !dbg !8958
  store i64 %122, ptr %13, align 8, !dbg !8955
  %123 = load i64, ptr %13, align 8, !dbg !8959
  %124 = icmp slt i64 %123, 0, !dbg !8961
  br i1 %124, label %125, label %128, !dbg !8962

125:                                              ; preds = %119
  %126 = load ptr, ptr %6, align 8, !dbg !8963
  %127 = call i32 @coro_yield(ptr noundef %126, i32 noundef -1) #17, !dbg !8965
  unreachable, !dbg !8966

128:                                              ; preds = %119
  call void @llvm.dbg.declare(metadata ptr %14, metadata !8967, metadata !DIExpression()), !dbg !8968
  %129 = load i32, ptr %8, align 4, !dbg !8969
  %130 = load ptr, ptr %12, align 8, !dbg !8970
  %131 = load i64, ptr %13, align 8, !dbg !8971
  %132 = call i64 @write(i32 noundef %129, ptr noundef %130, i64 noundef %131) #17, !dbg !8972
  store i64 %132, ptr %14, align 8, !dbg !8968
  %133 = load i64, ptr %14, align 8, !dbg !8973
  %134 = icmp slt i64 %133, 0, !dbg !8975
  br i1 %134, label %135, label %138, !dbg !8976

135:                                              ; preds = %128
  %136 = load ptr, ptr %6, align 8, !dbg !8977
  %137 = call i32 @coro_yield(ptr noundef %136, i32 noundef -1) #17, !dbg !8979
  unreachable, !dbg !8980

138:                                              ; preds = %128
  %139 = load i64, ptr %14, align 8, !dbg !8981
  %140 = load i64, ptr %11, align 8, !dbg !8982
  %141 = add nsw i64 %140, %139, !dbg !8982
  store i64 %141, ptr %11, align 8, !dbg !8982
  %142 = load i64, ptr %14, align 8, !dbg !8983
  %143 = load i64, ptr %10, align 8, !dbg !8984
  %144 = sub i64 %143, %142, !dbg !8984
  store i64 %144, ptr %10, align 8, !dbg !8984
  %145 = load ptr, ptr %6, align 8, !dbg !8985
  %146 = call i32 @coro_yield(ptr noundef %145, i32 noundef 0) #17, !dbg !8986
  br label %116, !dbg !8950, !llvm.loop !8987

147:                                              ; preds = %116
  %148 = load i64, ptr %11, align 8, !dbg !8989
  store i64 %148, ptr %5, align 8, !dbg !8990
  br label %149, !dbg !8990

149:                                              ; preds = %147, %114
  %150 = load i64, ptr %5, align 8, !dbg !8991
  store i64 %150, ptr %23, align 8, !dbg !8992
  br label %154, !dbg !8992

151:                                              ; preds = %90
  br label %152, !dbg !8993

152:                                              ; preds = %151, %83
  %153 = load i64, ptr %28, align 8, !dbg !8994
  store i64 %153, ptr %23, align 8, !dbg !8995
  br label %154, !dbg !8995

154:                                              ; preds = %152, %149
  %155 = load i64, ptr %23, align 8, !dbg !8996
  ret i64 %155, !dbg !8996
}

; Function Attrs: nounwind
declare i32 @posix_fadvise(i32 noundef, i64 noundef, i64 noundef, i32 noundef) #2

; Function Attrs: nounwind
declare i64 @sendfile(i32 noundef, i32 noundef, ptr noundef, i64 noundef) #2

; Function Attrs: nounwind
declare i64 @lseek(i32 noundef, i64 noundef, i32 noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_job_thread_init() #0 !dbg !8997 {
  %1 = alloca %struct.sched_param, align 4
  %2 = load i8, ptr @running, align 1, !dbg !8998
  %3 = trunc i8 %2 to i1, !dbg !8998
  br i1 %3, label %5, label %4, !dbg !9001

4:                                                ; preds = %0
  br label %6, !dbg !9001

5:                                                ; preds = %0
  call void @__assert_fail(ptr noundef @.str.42, ptr noundef @.str.1.43, i32 noundef 77, ptr noundef @__PRETTY_FUNCTION__.lwan_job_thread_init) #23, !dbg !8998
  unreachable, !dbg !8998

6:                                                ; preds = %4
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.1.43, i32 noundef 79, ptr noundef @__FUNCTION__.lwan_job_thread_init, ptr noundef @.str.2.44), !dbg !9002
  call void @list_head_init.45(ptr noundef @jobs), !dbg !9003
  store i8 1, ptr @running, align 1, !dbg !9004
  %7 = call i32 @pthread_create(ptr noundef @self, ptr noundef null, ptr noundef @job_thread, ptr noundef null) #17, !dbg !9005
  %8 = icmp slt i32 %7, 0, !dbg !9007
  br i1 %8, label %9, label %10, !dbg !9008

9:                                                ; preds = %6
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.1.43, i32 noundef 85, ptr noundef @__FUNCTION__.lwan_job_thread_init, ptr noundef @.str.3.46) #24, !dbg !9009
  unreachable, !dbg !9009

10:                                               ; preds = %6
  call void @llvm.dbg.declare(metadata ptr %1, metadata !9010, metadata !DIExpression()), !dbg !9015
  call void @llvm.memset.p0.i64(ptr align 4 %1, i8 0, i64 4, i1 false), !dbg !9015
  %11 = load i64, ptr @self, align 8, !dbg !9016
  %12 = call i32 @pthread_setschedparam(i64 noundef %11, i32 noundef 5, ptr noundef %1) #17, !dbg !9018
  %13 = icmp slt i32 %12, 0, !dbg !9019
  br i1 %13, label %14, label %15, !dbg !9020

14:                                               ; preds = %10
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.1.43, i32 noundef 92, ptr noundef @__FUNCTION__.lwan_job_thread_init, ptr noundef @.str.4.47.58), !dbg !9021
  br label %15, !dbg !9021

15:                                               ; preds = %14, %10
  ret void, !dbg !9022
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @list_head_init.45(ptr noundef %0) #0 !dbg !9023 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !9026, metadata !DIExpression()), !dbg !9027
  %3 = load ptr, ptr %2, align 8, !dbg !9028
  %4 = getelementptr inbounds %struct.list_head, ptr %3, i32 0, i32 0, !dbg !9029
  %5 = load ptr, ptr %2, align 8, !dbg !9030
  %6 = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 0, !dbg !9031
  %7 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %6, i32 0, i32 1, !dbg !9032
  store ptr %4, ptr %7, align 8, !dbg !9033
  %8 = load ptr, ptr %2, align 8, !dbg !9034
  %9 = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 0, !dbg !9035
  %10 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %9, i32 0, i32 0, !dbg !9036
  store ptr %4, ptr %10, align 8, !dbg !9037
  ret void, !dbg !9038
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @job_thread(ptr noundef %0) #0 !dbg !9039 {
  %2 = alloca ptr, align 8
  %3 = alloca %struct.anon.3, align 8
  %4 = alloca i8, align 1
  %5 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !9040, metadata !DIExpression()), !dbg !9041
  call void @llvm.dbg.declare(metadata ptr %3, metadata !9042, metadata !DIExpression()), !dbg !9047
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 @__const.job_thread.rgtp, i64 16, i1 false), !dbg !9047
  br label %6, !dbg !9048

6:                                                ; preds = %75, %1
  %7 = load i8, ptr @running, align 1, !dbg !9049
  %8 = trunc i8 %7 to i1, !dbg !9049
  br i1 %8, label %9, label %76, !dbg !9048

9:                                                ; preds = %6
  call void @llvm.dbg.declare(metadata ptr %4, metadata !9050, metadata !DIExpression()), !dbg !9052
  store i8 0, ptr %4, align 1, !dbg !9052
  %10 = call i32 @pthread_mutex_lock(ptr noundef @queue_mutex) #17, !dbg !9053
  %11 = icmp ne i32 %10, 0, !dbg !9053
  %12 = xor i1 %11, true, !dbg !9053
  %13 = xor i1 %12, true, !dbg !9053
  %14 = xor i1 %13, true, !dbg !9053
  %15 = zext i1 %14 to i32, !dbg !9053
  %16 = sext i32 %15 to i64, !dbg !9053
  %17 = icmp ne i64 %16, 0, !dbg !9053
  br i1 %17, label %18, label %48, !dbg !9055

18:                                               ; preds = %9
  call void @llvm.dbg.declare(metadata ptr %5, metadata !9056, metadata !DIExpression()), !dbg !9058
  %19 = load ptr, ptr @jobs, align 8, !dbg !9059
  %20 = call ptr @list_node_to_off_.48(ptr noundef %19, i64 noundef 0), !dbg !9059
  store ptr %20, ptr %5, align 8, !dbg !9059
  br label %21, !dbg !9059

21:                                               ; preds = %40, %18
  %22 = load ptr, ptr %5, align 8, !dbg !9061
  %23 = call ptr @list_node_from_off_.49(ptr noundef %22, i64 noundef 0), !dbg !9061
  %24 = icmp ne ptr %23, @jobs, !dbg !9061
  br i1 %24, label %25, label %46, !dbg !9059

25:                                               ; preds = %21
  %26 = load ptr, ptr %5, align 8, !dbg !9063
  %27 = getelementptr inbounds %struct.job_t, ptr %26, i32 0, i32 1, !dbg !9064
  %28 = load ptr, ptr %27, align 8, !dbg !9064
  %29 = load ptr, ptr %5, align 8, !dbg !9065
  %30 = getelementptr inbounds %struct.job_t, ptr %29, i32 0, i32 2, !dbg !9066
  %31 = load ptr, ptr %30, align 8, !dbg !9066
  %32 = call zeroext i1 %28(ptr noundef %31), !dbg !9063
  %33 = zext i1 %32 to i32, !dbg !9063
  %34 = load i8, ptr %4, align 1, !dbg !9067
  %35 = trunc i8 %34 to i1, !dbg !9067
  %36 = zext i1 %35 to i32, !dbg !9067
  %37 = or i32 %36, %33, !dbg !9067
  %38 = icmp ne i32 %37, 0, !dbg !9067
  %39 = zext i1 %38 to i8, !dbg !9067
  store i8 %39, ptr %4, align 1, !dbg !9067
  br label %40, !dbg !9068

40:                                               ; preds = %25
  %41 = load ptr, ptr %5, align 8, !dbg !9061
  %42 = call ptr @list_node_from_off_.49(ptr noundef %41, i64 noundef 0), !dbg !9061
  %43 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %42, i32 0, i32 0, !dbg !9061
  %44 = load ptr, ptr %43, align 8, !dbg !9061
  %45 = call ptr @list_node_to_off_.48(ptr noundef %44, i64 noundef 0), !dbg !9061
  store ptr %45, ptr %5, align 8, !dbg !9061
  br label %21, !dbg !9061, !llvm.loop !9069

46:                                               ; preds = %21
  %47 = call i32 @pthread_mutex_unlock(ptr noundef @queue_mutex) #17, !dbg !9071
  br label %48, !dbg !9072

48:                                               ; preds = %46, %9
  %49 = load i8, ptr %4, align 1, !dbg !9073
  %50 = trunc i8 %49 to i1, !dbg !9073
  br i1 %50, label %51, label %53, !dbg !9075

51:                                               ; preds = %48
  %52 = getelementptr inbounds %struct.anon.3, ptr %3, i32 0, i32 0, !dbg !9076
  store i64 1, ptr %52, align 8, !dbg !9077
  br label %62, !dbg !9078

53:                                               ; preds = %48
  %54 = getelementptr inbounds %struct.anon.3, ptr %3, i32 0, i32 0, !dbg !9079
  %55 = load i64, ptr %54, align 8, !dbg !9079
  %56 = icmp sle i64 %55, 15, !dbg !9081
  br i1 %56, label %57, label %61, !dbg !9082

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct.anon.3, ptr %3, i32 0, i32 0, !dbg !9083
  %59 = load i64, ptr %58, align 8, !dbg !9084
  %60 = add nsw i64 %59, 1, !dbg !9084
  store i64 %60, ptr %58, align 8, !dbg !9084
  br label %61, !dbg !9085

61:                                               ; preds = %57, %53
  br label %62

62:                                               ; preds = %61, %51
  %63 = call i32 @nanosleep(ptr noundef %3, ptr noundef null), !dbg !9086
  %64 = icmp slt i32 %63, 0, !dbg !9086
  %65 = zext i1 %64 to i32, !dbg !9086
  %66 = sext i32 %65 to i64, !dbg !9086
  %67 = icmp ne i64 %66, 0, !dbg !9086
  br i1 %67, label %68, label %75, !dbg !9088

68:                                               ; preds = %62
  %69 = call ptr @__errno_location() #21, !dbg !9089
  %70 = load i32, ptr %69, align 4, !dbg !9089
  %71 = icmp eq i32 %70, 4, !dbg !9092
  br i1 %71, label %72, label %74, !dbg !9093

72:                                               ; preds = %68
  %73 = call i32 @sleep(i32 noundef 1), !dbg !9094
  br label %74, !dbg !9094

74:                                               ; preds = %72, %68
  br label %75, !dbg !9095

75:                                               ; preds = %74, %62
  br label %6, !dbg !9048, !llvm.loop !9096

76:                                               ; preds = %6
  ret ptr null, !dbg !9098
}

; Function Attrs: nounwind
declare i32 @pthread_create(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: nounwind
declare i32 @pthread_setschedparam(i64 noundef, i32 noundef, ptr noundef) #2

declare i32 @nanosleep(ptr noundef, ptr noundef) #5

declare i32 @sleep(i32 noundef) #5

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_job_thread_shutdown() #0 !dbg !9099 {
  %1 = alloca ptr, align 8
  %2 = alloca ptr, align 8
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.1.43, i32 noundef 98, ptr noundef @__FUNCTION__.lwan_job_thread_shutdown, ptr noundef @.str.5.50), !dbg !9100
  %3 = call i32 @pthread_mutex_lock(ptr noundef @queue_mutex) #17, !dbg !9101
  %4 = icmp ne i32 %3, 0, !dbg !9101
  %5 = xor i1 %4, true, !dbg !9101
  %6 = xor i1 %5, true, !dbg !9101
  %7 = xor i1 %6, true, !dbg !9101
  %8 = zext i1 %7 to i32, !dbg !9101
  %9 = sext i32 %8 to i64, !dbg !9101
  %10 = icmp ne i64 %9, 0, !dbg !9101
  br i1 %10, label %11, label %41, !dbg !9103

11:                                               ; preds = %0
  call void @llvm.dbg.declare(metadata ptr %1, metadata !9104, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.declare(metadata ptr %2, metadata !9107, metadata !DIExpression()), !dbg !9108
  %12 = load ptr, ptr @jobs, align 8, !dbg !9109
  %13 = call ptr @list_node_to_off_.48(ptr noundef %12, i64 noundef 0), !dbg !9109
  store ptr %13, ptr %1, align 8, !dbg !9109
  %14 = load ptr, ptr %1, align 8, !dbg !9109
  %15 = call ptr @list_node_from_off_.49(ptr noundef %14, i64 noundef 0), !dbg !9109
  %16 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %15, i32 0, i32 0, !dbg !9109
  %17 = load ptr, ptr %16, align 8, !dbg !9109
  %18 = call ptr @list_node_to_off_.48(ptr noundef %17, i64 noundef 0), !dbg !9109
  store ptr %18, ptr %2, align 8, !dbg !9109
  br label %19, !dbg !9109

19:                                               ; preds = %27, %11
  %20 = load ptr, ptr %1, align 8, !dbg !9111
  %21 = call ptr @list_node_from_off_.49(ptr noundef %20, i64 noundef 0), !dbg !9111
  %22 = icmp ne ptr %21, @jobs, !dbg !9111
  br i1 %22, label %23, label %34, !dbg !9109

23:                                               ; preds = %19
  %24 = load ptr, ptr %1, align 8, !dbg !9113
  %25 = getelementptr inbounds %struct.job_t, ptr %24, i32 0, i32 0, !dbg !9115
  call void @list_del.51(ptr noundef %25), !dbg !9116
  %26 = load ptr, ptr %1, align 8, !dbg !9117
  call void @free(ptr noundef %26) #17, !dbg !9118
  br label %27, !dbg !9119

27:                                               ; preds = %23
  %28 = load ptr, ptr %2, align 8, !dbg !9111
  store ptr %28, ptr %1, align 8, !dbg !9111
  %29 = load ptr, ptr %1, align 8, !dbg !9111
  %30 = call ptr @list_node_from_off_.49(ptr noundef %29, i64 noundef 0), !dbg !9111
  %31 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %30, i32 0, i32 0, !dbg !9111
  %32 = load ptr, ptr %31, align 8, !dbg !9111
  %33 = call ptr @list_node_to_off_.48(ptr noundef %32, i64 noundef 0), !dbg !9111
  store ptr %33, ptr %2, align 8, !dbg !9111
  br label %19, !dbg !9111, !llvm.loop !9120

34:                                               ; preds = %19
  store i8 0, ptr @running, align 1, !dbg !9122
  %35 = load i64, ptr @self, align 8, !dbg !9123
  %36 = call i32 @pthread_tryjoin_np(i64 noundef %35, ptr noundef null) #17, !dbg !9125
  %37 = icmp slt i32 %36, 0, !dbg !9126
  br i1 %37, label %38, label %39, !dbg !9127

38:                                               ; preds = %34
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.1.43, i32 noundef 108, ptr noundef @__FUNCTION__.lwan_job_thread_shutdown, ptr noundef @.str.6.52) #24, !dbg !9128
  unreachable, !dbg !9128

39:                                               ; preds = %34
  %40 = call i32 @pthread_mutex_unlock(ptr noundef @queue_mutex) #17, !dbg !9129
  br label %41, !dbg !9130

41:                                               ; preds = %39, %0
  ret void, !dbg !9131
}

; Function Attrs: nounwind
declare i32 @pthread_tryjoin_np(i64 noundef, ptr noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_set_url_map(ptr noundef %0, ptr noundef %1) #0 !dbg !9132 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !9294, metadata !DIExpression()), !dbg !9295
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !9296, metadata !DIExpression()), !dbg !9297
  %6 = load ptr, ptr %3, align 8, !dbg !9298
  %7 = getelementptr inbounds %struct.lwan_t_, ptr %6, i32 0, i32 0, !dbg !9299
  call void @lwan_trie_destroy(ptr noundef %7), !dbg !9300
  %8 = load ptr, ptr %3, align 8, !dbg !9301
  %9 = getelementptr inbounds %struct.lwan_t_, ptr %8, i32 0, i32 0, !dbg !9301
  %10 = call zeroext i1 @lwan_trie_init(ptr noundef %9, ptr noundef @destroy_urlmap), !dbg !9301
  %11 = xor i1 %10, true, !dbg !9301
  %12 = zext i1 %11 to i32, !dbg !9301
  %13 = sext i32 %12 to i64, !dbg !9301
  %14 = icmp ne i64 %13, 0, !dbg !9301
  br i1 %14, label %15, label %16, !dbg !9303

15:                                               ; preds = %2
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.60, i32 noundef 253, ptr noundef @__FUNCTION__.lwan_set_url_map, ptr noundef @.str.1.61) #24, !dbg !9304
  unreachable, !dbg !9304

16:                                               ; preds = %2
  br label %17, !dbg !9305

17:                                               ; preds = %76, %16
  %18 = load ptr, ptr %4, align 8, !dbg !9306
  %19 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %18, i32 0, i32 2, !dbg !9309
  %20 = load ptr, ptr %19, align 8, !dbg !9309
  %21 = icmp ne ptr %20, null, !dbg !9310
  br i1 %21, label %22, label %79, !dbg !9310

22:                                               ; preds = %17
  call void @llvm.dbg.declare(metadata ptr %5, metadata !9311, metadata !DIExpression()), !dbg !9314
  %23 = load ptr, ptr %3, align 8, !dbg !9315
  %24 = getelementptr inbounds %struct.lwan_t_, ptr %23, i32 0, i32 0, !dbg !9316
  %25 = load ptr, ptr %4, align 8, !dbg !9317
  %26 = call ptr @add_url_map(ptr noundef %24, ptr noundef null, ptr noundef %25), !dbg !9318
  store ptr %26, ptr %5, align 8, !dbg !9314
  %27 = load ptr, ptr %5, align 8, !dbg !9319
  %28 = icmp ne ptr %27, null, !dbg !9319
  %29 = xor i1 %28, true, !dbg !9319
  %30 = zext i1 %29 to i32, !dbg !9319
  %31 = sext i32 %30 to i64, !dbg !9319
  %32 = icmp ne i64 %31, 0, !dbg !9319
  br i1 %32, label %33, label %34, !dbg !9321

33:                                               ; preds = %22
  br label %76, !dbg !9322

34:                                               ; preds = %22
  %35 = load ptr, ptr %5, align 8, !dbg !9323
  %36 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %35, i32 0, i32 5, !dbg !9325
  %37 = load ptr, ptr %36, align 8, !dbg !9325
  %38 = icmp ne ptr %37, null, !dbg !9323
  br i1 %38, label %39, label %72, !dbg !9326

39:                                               ; preds = %34
  %40 = load ptr, ptr %5, align 8, !dbg !9327
  %41 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %40, i32 0, i32 5, !dbg !9328
  %42 = load ptr, ptr %41, align 8, !dbg !9328
  %43 = getelementptr inbounds %struct.lwan_module_t_, ptr %42, i32 0, i32 1, !dbg !9329
  %44 = load ptr, ptr %43, align 8, !dbg !9329
  %45 = icmp ne ptr %44, null, !dbg !9327
  br i1 %45, label %46, label %72, !dbg !9330

46:                                               ; preds = %39
  %47 = load ptr, ptr %5, align 8, !dbg !9331
  %48 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %47, i32 0, i32 5, !dbg !9333
  %49 = load ptr, ptr %48, align 8, !dbg !9333
  %50 = getelementptr inbounds %struct.lwan_module_t_, ptr %49, i32 0, i32 1, !dbg !9334
  %51 = load ptr, ptr %50, align 8, !dbg !9334
  %52 = load ptr, ptr %5, align 8, !dbg !9335
  %53 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %52, i32 0, i32 6, !dbg !9336
  %54 = load ptr, ptr %53, align 8, !dbg !9336
  %55 = call ptr %51(ptr noundef %54), !dbg !9331
  %56 = load ptr, ptr %5, align 8, !dbg !9337
  %57 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %56, i32 0, i32 1, !dbg !9338
  store ptr %55, ptr %57, align 8, !dbg !9339
  %58 = load ptr, ptr %5, align 8, !dbg !9340
  %59 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %58, i32 0, i32 5, !dbg !9341
  %60 = load ptr, ptr %59, align 8, !dbg !9341
  %61 = getelementptr inbounds %struct.lwan_module_t_, ptr %60, i32 0, i32 5, !dbg !9342
  %62 = load i32, ptr %61, align 8, !dbg !9342
  %63 = load ptr, ptr %5, align 8, !dbg !9343
  %64 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %63, i32 0, i32 4, !dbg !9344
  store i32 %62, ptr %64, align 8, !dbg !9345
  %65 = load ptr, ptr %5, align 8, !dbg !9346
  %66 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %65, i32 0, i32 5, !dbg !9347
  %67 = load ptr, ptr %66, align 8, !dbg !9347
  %68 = getelementptr inbounds %struct.lwan_module_t_, ptr %67, i32 0, i32 4, !dbg !9348
  %69 = load ptr, ptr %68, align 8, !dbg !9348
  %70 = load ptr, ptr %5, align 8, !dbg !9349
  %71 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %70, i32 0, i32 0, !dbg !9350
  store ptr %69, ptr %71, align 8, !dbg !9351
  br label %75, !dbg !9352

72:                                               ; preds = %39, %34
  %73 = load ptr, ptr %5, align 8, !dbg !9353
  %74 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %73, i32 0, i32 4, !dbg !9355
  store i32 31, ptr %74, align 8, !dbg !9356
  br label %75

75:                                               ; preds = %72, %46
  br label %76, !dbg !9357

76:                                               ; preds = %75, %33
  %77 = load ptr, ptr %4, align 8, !dbg !9358
  %78 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %77, i32 1, !dbg !9358
  store ptr %78, ptr %4, align 8, !dbg !9358
  br label %17, !dbg !9359, !llvm.loop !9360

79:                                               ; preds = %17
  ret void, !dbg !9362
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_trie_destroy(ptr noundef %0) #0 !dbg !9363 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !9387, metadata !DIExpression()), !dbg !9388
  %3 = load ptr, ptr %2, align 8, !dbg !9389
  %4 = icmp ne ptr %3, null, !dbg !9389
  br i1 %4, label %5, label %10, !dbg !9391

5:                                                ; preds = %1
  %6 = load ptr, ptr %2, align 8, !dbg !9392
  %7 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %6, i32 0, i32 0, !dbg !9393
  %8 = load ptr, ptr %7, align 8, !dbg !9393
  %9 = icmp ne ptr %8, null, !dbg !9392
  br i1 %9, label %11, label %10, !dbg !9394

10:                                               ; preds = %5, %1
  br label %16, !dbg !9395

11:                                               ; preds = %5
  %12 = load ptr, ptr %2, align 8, !dbg !9396
  %13 = load ptr, ptr %2, align 8, !dbg !9397
  %14 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %13, i32 0, i32 0, !dbg !9398
  %15 = load ptr, ptr %14, align 8, !dbg !9398
  call void @lwan_trie_node_destroy(ptr noundef %12, ptr noundef %15), !dbg !9399
  br label %16, !dbg !9400

16:                                               ; preds = %11, %10
  ret void, !dbg !9400
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @destroy_urlmap(ptr noundef %0) #0 !dbg !9401 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !9402, metadata !DIExpression()), !dbg !9403
  call void @llvm.dbg.declare(metadata ptr %3, metadata !9404, metadata !DIExpression()), !dbg !9405
  %5 = load ptr, ptr %2, align 8, !dbg !9406
  store ptr %5, ptr %3, align 8, !dbg !9405
  %6 = load ptr, ptr %3, align 8, !dbg !9407
  %7 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %6, i32 0, i32 5, !dbg !9409
  %8 = load ptr, ptr %7, align 8, !dbg !9409
  %9 = icmp ne ptr %8, null, !dbg !9407
  br i1 %9, label %10, label %26, !dbg !9410

10:                                               ; preds = %1
  call void @llvm.dbg.declare(metadata ptr %4, metadata !9411, metadata !DIExpression()), !dbg !9413
  %11 = load ptr, ptr %3, align 8, !dbg !9414
  %12 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %11, i32 0, i32 5, !dbg !9415
  %13 = load ptr, ptr %12, align 8, !dbg !9415
  store ptr %13, ptr %4, align 8, !dbg !9413
  %14 = load ptr, ptr %4, align 8, !dbg !9416
  %15 = getelementptr inbounds %struct.lwan_module_t_, ptr %14, i32 0, i32 3, !dbg !9418
  %16 = load ptr, ptr %15, align 8, !dbg !9418
  %17 = icmp ne ptr %16, null, !dbg !9416
  br i1 %17, label %18, label %25, !dbg !9419

18:                                               ; preds = %10
  %19 = load ptr, ptr %4, align 8, !dbg !9420
  %20 = getelementptr inbounds %struct.lwan_module_t_, ptr %19, i32 0, i32 3, !dbg !9421
  %21 = load ptr, ptr %20, align 8, !dbg !9421
  %22 = load ptr, ptr %3, align 8, !dbg !9422
  %23 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %22, i32 0, i32 1, !dbg !9423
  %24 = load ptr, ptr %23, align 8, !dbg !9423
  call void %21(ptr noundef %24), !dbg !9420
  br label %25, !dbg !9420

25:                                               ; preds = %18, %10
  br label %36, !dbg !9424

26:                                               ; preds = %1
  %27 = load ptr, ptr %3, align 8, !dbg !9425
  %28 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %27, i32 0, i32 1, !dbg !9427
  %29 = load ptr, ptr %28, align 8, !dbg !9427
  %30 = icmp ne ptr %29, null, !dbg !9425
  br i1 %30, label %31, label %35, !dbg !9428

31:                                               ; preds = %26
  %32 = load ptr, ptr %3, align 8, !dbg !9429
  %33 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %32, i32 0, i32 1, !dbg !9431
  %34 = load ptr, ptr %33, align 8, !dbg !9431
  call void @hash_free(ptr noundef %34), !dbg !9432
  br label %35, !dbg !9433

35:                                               ; preds = %31, %26
  br label %36

36:                                               ; preds = %35, %25
  %37 = load ptr, ptr %3, align 8, !dbg !9434
  %38 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %37, i32 0, i32 7, !dbg !9435
  %39 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %38, i32 0, i32 0, !dbg !9436
  %40 = load ptr, ptr %39, align 8, !dbg !9436
  call void @free(ptr noundef %40) #17, !dbg !9437
  %41 = load ptr, ptr %3, align 8, !dbg !9438
  %42 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %41, i32 0, i32 7, !dbg !9439
  %43 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %42, i32 0, i32 1, !dbg !9440
  %44 = load ptr, ptr %43, align 8, !dbg !9440
  call void @free(ptr noundef %44) #17, !dbg !9441
  %45 = load ptr, ptr %3, align 8, !dbg !9442
  %46 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %45, i32 0, i32 2, !dbg !9443
  %47 = load ptr, ptr %46, align 8, !dbg !9443
  call void @free(ptr noundef %47) #17, !dbg !9444
  %48 = load ptr, ptr %3, align 8, !dbg !9445
  call void @free(ptr noundef %48) #17, !dbg !9446
  ret void, !dbg !9447
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @lwan_trie_init(ptr noundef %0, ptr noundef %1) #0 !dbg !9448 {
  %3 = alloca i1, align 1
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !9451, metadata !DIExpression()), !dbg !9452
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !9453, metadata !DIExpression()), !dbg !9454
  %6 = load ptr, ptr %4, align 8, !dbg !9455
  %7 = icmp ne ptr %6, null, !dbg !9455
  br i1 %7, label %9, label %8, !dbg !9457

8:                                                ; preds = %2
  store i1 false, ptr %3, align 1, !dbg !9458
  br label %15, !dbg !9458

9:                                                ; preds = %2
  %10 = load ptr, ptr %4, align 8, !dbg !9459
  %11 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %10, i32 0, i32 0, !dbg !9460
  store ptr null, ptr %11, align 8, !dbg !9461
  %12 = load ptr, ptr %5, align 8, !dbg !9462
  %13 = load ptr, ptr %4, align 8, !dbg !9463
  %14 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %13, i32 0, i32 1, !dbg !9464
  store ptr %12, ptr %14, align 8, !dbg !9465
  store i1 true, ptr %3, align 1, !dbg !9466
  br label %15, !dbg !9466

15:                                               ; preds = %9, %8
  %16 = load i1, ptr %3, align 1, !dbg !9467
  ret i1 %16, !dbg !9467
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @add_url_map(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !9468 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !9472, metadata !DIExpression()), !dbg !9473
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !9474, metadata !DIExpression()), !dbg !9475
  store ptr %2, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !9476, metadata !DIExpression()), !dbg !9477
  call void @llvm.dbg.declare(metadata ptr %7, metadata !9478, metadata !DIExpression()), !dbg !9479
  %8 = call noalias ptr @malloc(i64 noundef 72) #18, !dbg !9480
  store ptr %8, ptr %7, align 8, !dbg !9479
  %9 = load ptr, ptr %7, align 8, !dbg !9481
  %10 = icmp ne ptr %9, null, !dbg !9481
  br i1 %10, label %12, label %11, !dbg !9483

11:                                               ; preds = %3
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.60, i32 noundef 111, ptr noundef @__FUNCTION__.add_url_map, ptr noundef @.str.16.61) #24, !dbg !9484
  unreachable, !dbg !9484

12:                                               ; preds = %3
  %13 = load ptr, ptr %7, align 8, !dbg !9485
  %14 = load ptr, ptr %6, align 8, !dbg !9486
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %13, ptr align 8 %14, i64 72, i1 false), !dbg !9487
  %15 = load ptr, ptr %5, align 8, !dbg !9488
  %16 = icmp ne ptr %15, null, !dbg !9488
  br i1 %16, label %17, label %19, !dbg !9488

17:                                               ; preds = %12
  %18 = load ptr, ptr %5, align 8, !dbg !9489
  br label %23, !dbg !9488

19:                                               ; preds = %12
  %20 = load ptr, ptr %7, align 8, !dbg !9490
  %21 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %20, i32 0, i32 2, !dbg !9491
  %22 = load ptr, ptr %21, align 8, !dbg !9491
  br label %23, !dbg !9488

23:                                               ; preds = %19, %17
  %24 = phi ptr [ %18, %17 ], [ %22, %19 ], !dbg !9488
  %25 = call noalias ptr @strdup(ptr noundef %24) #17, !dbg !9492
  %26 = load ptr, ptr %7, align 8, !dbg !9493
  %27 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %26, i32 0, i32 2, !dbg !9494
  store ptr %25, ptr %27, align 8, !dbg !9495
  %28 = load ptr, ptr %7, align 8, !dbg !9496
  %29 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %28, i32 0, i32 2, !dbg !9497
  %30 = load ptr, ptr %29, align 8, !dbg !9497
  %31 = call i64 @strlen(ptr noundef %30) #20, !dbg !9498
  %32 = load ptr, ptr %7, align 8, !dbg !9499
  %33 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %32, i32 0, i32 3, !dbg !9500
  store i64 %31, ptr %33, align 8, !dbg !9501
  %34 = load ptr, ptr %4, align 8, !dbg !9502
  %35 = load ptr, ptr %7, align 8, !dbg !9503
  %36 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %35, i32 0, i32 2, !dbg !9504
  %37 = load ptr, ptr %36, align 8, !dbg !9504
  %38 = load ptr, ptr %7, align 8, !dbg !9505
  call void @lwan_trie_add(ptr noundef %34, ptr noundef %37, ptr noundef %38), !dbg !9506
  %39 = load ptr, ptr %7, align 8, !dbg !9507
  ret ptr %39, !dbg !9508
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_trie_add(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !9509 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %15 = alloca ptr, align 8
  %16 = alloca i8, align 1
  store ptr %0, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !9512, metadata !DIExpression()), !dbg !9513
  store ptr %1, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %10, metadata !9514, metadata !DIExpression()), !dbg !9515
  store ptr %2, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !9516, metadata !DIExpression()), !dbg !9517
  %17 = load ptr, ptr %9, align 8, !dbg !9518
  %18 = icmp ne ptr %17, null, !dbg !9518
  br i1 %18, label %19, label %26, !dbg !9518

19:                                               ; preds = %3
  %20 = load ptr, ptr %10, align 8, !dbg !9518
  %21 = icmp ne ptr %20, null, !dbg !9518
  br i1 %21, label %22, label %26, !dbg !9518

22:                                               ; preds = %19
  %23 = load ptr, ptr %11, align 8, !dbg !9518
  %24 = icmp ne ptr %23, null, !dbg !9518
  %25 = xor i1 %24, true, !dbg !9518
  br label %26, !dbg !9518

26:                                               ; preds = %22, %19, %3
  %27 = phi i1 [ true, %19 ], [ true, %3 ], [ %25, %22 ]
  %28 = zext i1 %27 to i32, !dbg !9518
  %29 = sext i32 %28 to i64, !dbg !9518
  %30 = icmp ne i64 %29, 0, !dbg !9518
  br i1 %30, label %31, label %32, !dbg !9520

31:                                               ; preds = %26
  br label %159, !dbg !9521

32:                                               ; preds = %26
  call void @llvm.dbg.declare(metadata ptr %12, metadata !9522, metadata !DIExpression()), !dbg !9524
  call void @llvm.dbg.declare(metadata ptr %13, metadata !9525, metadata !DIExpression()), !dbg !9526
  call void @llvm.dbg.declare(metadata ptr %14, metadata !9527, metadata !DIExpression()), !dbg !9528
  %33 = load ptr, ptr %10, align 8, !dbg !9529
  store ptr %33, ptr %14, align 8, !dbg !9528
  %34 = load ptr, ptr %9, align 8, !dbg !9530
  %35 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %34, i32 0, i32 0, !dbg !9532
  store ptr %35, ptr %12, align 8, !dbg !9533
  br label %36, !dbg !9534

36:                                               ; preds = %58, %32
  %37 = load ptr, ptr %10, align 8, !dbg !9535
  %38 = load i8, ptr %37, align 1, !dbg !9537
  %39 = icmp ne i8 %38, 0, !dbg !9538
  br i1 %39, label %40, label %68, !dbg !9538

40:                                               ; preds = %36
  br label %41, !dbg !9539

41:                                               ; preds = %40
  %42 = load ptr, ptr %12, align 8, !dbg !9540
  %43 = load ptr, ptr %42, align 8, !dbg !9540
  store ptr %43, ptr %13, align 8, !dbg !9540
  %44 = icmp ne ptr %43, null, !dbg !9540
  br i1 %44, label %52, label %45, !dbg !9543

45:                                               ; preds = %41
  %46 = call noalias ptr @calloc(i64 noundef 1, i64 noundef 80) #19, !dbg !9544
  store ptr %46, ptr %13, align 8, !dbg !9544
  %47 = load ptr, ptr %12, align 8, !dbg !9544
  store ptr %46, ptr %47, align 8, !dbg !9544
  %48 = load ptr, ptr %13, align 8, !dbg !9546
  %49 = icmp ne ptr %48, null, !dbg !9546
  br i1 %49, label %51, label %50, !dbg !9544

50:                                               ; preds = %45
  br label %158, !dbg !9546

51:                                               ; preds = %45
  br label %52, !dbg !9544

52:                                               ; preds = %51, %41
  %53 = load ptr, ptr %13, align 8, !dbg !9543
  %54 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %53, i32 0, i32 2, !dbg !9543
  %55 = load i32, ptr %54, align 8, !dbg !9543
  %56 = add nsw i32 %55, 1, !dbg !9543
  store i32 %56, ptr %54, align 8, !dbg !9543
  br label %57, !dbg !9543

57:                                               ; preds = %52
  br label %58, !dbg !9543

58:                                               ; preds = %57
  %59 = load ptr, ptr %13, align 8, !dbg !9548
  %60 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %59, i32 0, i32 0, !dbg !9549
  %61 = load ptr, ptr %10, align 8, !dbg !9550
  %62 = getelementptr inbounds i8, ptr %61, i32 1, !dbg !9550
  store ptr %62, ptr %10, align 8, !dbg !9550
  %63 = load i8, ptr %61, align 1, !dbg !9551
  %64 = sext i8 %63 to i32, !dbg !9551
  %65 = and i32 %64, 7, !dbg !9552
  %66 = sext i32 %65 to i64, !dbg !9548
  %67 = getelementptr inbounds [8 x ptr], ptr %60, i64 0, i64 %66, !dbg !9548
  store ptr %67, ptr %12, align 8, !dbg !9553
  br label %36, !dbg !9554, !llvm.loop !9555

68:                                               ; preds = %36
  br label %69, !dbg !9557

69:                                               ; preds = %68
  %70 = load ptr, ptr %12, align 8, !dbg !9558
  %71 = load ptr, ptr %70, align 8, !dbg !9558
  store ptr %71, ptr %13, align 8, !dbg !9558
  %72 = icmp ne ptr %71, null, !dbg !9558
  br i1 %72, label %80, label %73, !dbg !9561

73:                                               ; preds = %69
  %74 = call noalias ptr @calloc(i64 noundef 1, i64 noundef 80) #19, !dbg !9562
  store ptr %74, ptr %13, align 8, !dbg !9562
  %75 = load ptr, ptr %12, align 8, !dbg !9562
  store ptr %74, ptr %75, align 8, !dbg !9562
  %76 = load ptr, ptr %13, align 8, !dbg !9564
  %77 = icmp ne ptr %76, null, !dbg !9564
  br i1 %77, label %79, label %78, !dbg !9562

78:                                               ; preds = %73
  br label %158, !dbg !9564

79:                                               ; preds = %73
  br label %80, !dbg !9562

80:                                               ; preds = %79, %69
  %81 = load ptr, ptr %13, align 8, !dbg !9561
  %82 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %81, i32 0, i32 2, !dbg !9561
  %83 = load i32, ptr %82, align 8, !dbg !9561
  %84 = add nsw i32 %83, 1, !dbg !9561
  store i32 %84, ptr %82, align 8, !dbg !9561
  br label %85, !dbg !9561

85:                                               ; preds = %80
  call void @llvm.dbg.declare(metadata ptr %15, metadata !9566, metadata !DIExpression()), !dbg !9567
  %86 = load ptr, ptr %13, align 8, !dbg !9568
  %87 = load ptr, ptr %14, align 8, !dbg !9569
  %88 = load ptr, ptr %10, align 8, !dbg !9570
  %89 = load ptr, ptr %14, align 8, !dbg !9571
  %90 = ptrtoint ptr %88 to i64, !dbg !9572
  %91 = ptrtoint ptr %89 to i64, !dbg !9572
  %92 = sub i64 %90, %91, !dbg !9572
  store ptr %86, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !9573, metadata !DIExpression()), !dbg !9577
  store ptr %87, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !9579, metadata !DIExpression()), !dbg !9580
  store i64 %92, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !9581, metadata !DIExpression()), !dbg !9582
  call void @llvm.dbg.declare(metadata ptr %8, metadata !9583, metadata !DIExpression()), !dbg !9584
  %93 = load ptr, ptr %5, align 8, !dbg !9585
  %94 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %93, i32 0, i32 1, !dbg !9586
  %95 = load ptr, ptr %94, align 8, !dbg !9586
  store ptr %95, ptr %8, align 8, !dbg !9584
  %96 = load ptr, ptr %8, align 8, !dbg !9587
  %97 = icmp ne ptr %96, null, !dbg !9587
  br i1 %97, label %99, label %98, !dbg !9589

98:                                               ; preds = %85
  store ptr null, ptr %4, align 8, !dbg !9590
  br label %125, !dbg !9590

99:                                               ; preds = %85
  %100 = load ptr, ptr %8, align 8, !dbg !9591
  %101 = getelementptr inbounds %struct.anon.5, ptr %100, i32 0, i32 2, !dbg !9593
  %102 = load ptr, ptr %101, align 8, !dbg !9593
  %103 = icmp ne ptr %102, null, !dbg !9591
  br i1 %103, label %106, label %104, !dbg !9594

104:                                              ; preds = %99
  %105 = load ptr, ptr %8, align 8, !dbg !9595
  store ptr %105, ptr %4, align 8, !dbg !9596
  br label %125, !dbg !9596

106:                                              ; preds = %99
  br label %107, !dbg !9597

107:                                              ; preds = %120, %106
  %108 = load ptr, ptr %8, align 8, !dbg !9598
  %109 = icmp ne ptr %108, null, !dbg !9601
  br i1 %109, label %110, label %124, !dbg !9601

110:                                              ; preds = %107
  %111 = load ptr, ptr %8, align 8, !dbg !9602
  %112 = load ptr, ptr %111, align 8, !dbg !9605
  %113 = load ptr, ptr %6, align 8, !dbg !9606
  %114 = load i64, ptr %7, align 8, !dbg !9607
  %115 = sub i64 %114, 1, !dbg !9608
  %116 = call i32 @strncmp(ptr noundef %112, ptr noundef %113, i64 noundef %115) #20, !dbg !9609
  %117 = icmp ne i32 %116, 0, !dbg !9609
  br i1 %117, label %120, label %118, !dbg !9610

118:                                              ; preds = %110
  %119 = load ptr, ptr %8, align 8, !dbg !9611
  store ptr %119, ptr %4, align 8, !dbg !9612
  br label %125, !dbg !9612

120:                                              ; preds = %110
  %121 = load ptr, ptr %8, align 8, !dbg !9613
  %122 = getelementptr inbounds %struct.anon.5, ptr %121, i32 0, i32 2, !dbg !9614
  %123 = load ptr, ptr %122, align 8, !dbg !9614
  store ptr %123, ptr %8, align 8, !dbg !9615
  br label %107, !dbg !9616, !llvm.loop !9617

124:                                              ; preds = %107
  store ptr null, ptr %4, align 8, !dbg !9619
  br label %125, !dbg !9619

125:                                              ; preds = %124, %118, %104, %98
  %126 = load ptr, ptr %4, align 8, !dbg !9620
  store ptr %126, ptr %15, align 8, !dbg !9567
  call void @llvm.dbg.declare(metadata ptr %16, metadata !9621, metadata !DIExpression()), !dbg !9622
  %127 = load ptr, ptr %15, align 8, !dbg !9623
  %128 = icmp ne ptr %127, null, !dbg !9623
  %129 = zext i1 %128 to i8, !dbg !9622
  store i8 %129, ptr %16, align 1, !dbg !9622
  %130 = load ptr, ptr %15, align 8, !dbg !9624
  %131 = icmp ne ptr %130, null, !dbg !9624
  br i1 %131, label %138, label %132, !dbg !9626

132:                                              ; preds = %125
  %133 = call noalias ptr @malloc(i64 noundef 24) #18, !dbg !9627
  store ptr %133, ptr %15, align 8, !dbg !9629
  %134 = load ptr, ptr %15, align 8, !dbg !9630
  %135 = icmp ne ptr %134, null, !dbg !9630
  br i1 %135, label %137, label %136, !dbg !9632

136:                                              ; preds = %132
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.411, i32 noundef 85, ptr noundef @__FUNCTION__.lwan_trie_add, ptr noundef @.str.1.412) #24, !dbg !9633
  unreachable, !dbg !9633

137:                                              ; preds = %132
  br label %138, !dbg !9634

138:                                              ; preds = %137, %125
  %139 = load ptr, ptr %11, align 8, !dbg !9635
  %140 = load ptr, ptr %15, align 8, !dbg !9636
  %141 = getelementptr inbounds %struct.anon.5, ptr %140, i32 0, i32 1, !dbg !9637
  store ptr %139, ptr %141, align 8, !dbg !9638
  %142 = load i8, ptr %16, align 1, !dbg !9639
  %143 = trunc i8 %142 to i1, !dbg !9639
  br i1 %143, label %157, label %144, !dbg !9641

144:                                              ; preds = %138
  %145 = load ptr, ptr %14, align 8, !dbg !9642
  %146 = call noalias ptr @strdup(ptr noundef %145) #17, !dbg !9644
  %147 = load ptr, ptr %15, align 8, !dbg !9645
  %148 = getelementptr inbounds %struct.anon.5, ptr %147, i32 0, i32 0, !dbg !9646
  store ptr %146, ptr %148, align 8, !dbg !9647
  %149 = load ptr, ptr %13, align 8, !dbg !9648
  %150 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %149, i32 0, i32 1, !dbg !9649
  %151 = load ptr, ptr %150, align 8, !dbg !9649
  %152 = load ptr, ptr %15, align 8, !dbg !9650
  %153 = getelementptr inbounds %struct.anon.5, ptr %152, i32 0, i32 2, !dbg !9651
  store ptr %151, ptr %153, align 8, !dbg !9652
  %154 = load ptr, ptr %15, align 8, !dbg !9653
  %155 = load ptr, ptr %13, align 8, !dbg !9654
  %156 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %155, i32 0, i32 1, !dbg !9655
  store ptr %154, ptr %156, align 8, !dbg !9656
  br label %157, !dbg !9657

157:                                              ; preds = %144, %138
  br label %159, !dbg !9658

158:                                              ; preds = %78, %50
  call void @llvm.dbg.label(metadata !9659), !dbg !9660
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.411, i32 noundef 97, ptr noundef @__FUNCTION__.lwan_trie_add, ptr noundef @.str.2.413) #24, !dbg !9661
  unreachable, !dbg !9661

159:                                              ; preds = %157, %31
  ret void, !dbg !9662
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @lwan_trie_node_destroy(ptr noundef %0, ptr noundef %1) #0 !dbg !9663 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !9666, metadata !DIExpression()), !dbg !9667
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !9668, metadata !DIExpression()), !dbg !9669
  %9 = load ptr, ptr %4, align 8, !dbg !9670
  %10 = icmp ne ptr %9, null, !dbg !9670
  br i1 %10, label %12, label %11, !dbg !9672

11:                                               ; preds = %2
  br label %76, !dbg !9673

12:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata ptr %5, metadata !9674, metadata !DIExpression()), !dbg !9677
  %13 = load ptr, ptr %4, align 8, !dbg !9678
  %14 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %13, i32 0, i32 2, !dbg !9679
  %15 = load i32, ptr %14, align 8, !dbg !9679
  store i32 %15, ptr %5, align 4, !dbg !9677
  call void @llvm.dbg.declare(metadata ptr %6, metadata !9680, metadata !DIExpression()), !dbg !9682
  %16 = load ptr, ptr %4, align 8, !dbg !9683
  %17 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %16, i32 0, i32 1, !dbg !9684
  %18 = load ptr, ptr %17, align 8, !dbg !9684
  store ptr %18, ptr %6, align 8, !dbg !9682
  br label %19, !dbg !9685

19:                                               ; preds = %37, %12
  %20 = load ptr, ptr %6, align 8, !dbg !9686
  %21 = icmp ne ptr %20, null, !dbg !9688
  br i1 %21, label %22, label %43, !dbg !9688

22:                                               ; preds = %19
  call void @llvm.dbg.declare(metadata ptr %7, metadata !9689, metadata !DIExpression()), !dbg !9691
  %23 = load ptr, ptr %6, align 8, !dbg !9692
  %24 = getelementptr inbounds %struct.anon.5, ptr %23, i32 0, i32 2, !dbg !9693
  %25 = load ptr, ptr %24, align 8, !dbg !9693
  store ptr %25, ptr %7, align 8, !dbg !9691
  %26 = load ptr, ptr %3, align 8, !dbg !9694
  %27 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %26, i32 0, i32 1, !dbg !9696
  %28 = load ptr, ptr %27, align 8, !dbg !9696
  %29 = icmp ne ptr %28, null, !dbg !9694
  br i1 %29, label %30, label %37, !dbg !9697

30:                                               ; preds = %22
  %31 = load ptr, ptr %3, align 8, !dbg !9698
  %32 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %31, i32 0, i32 1, !dbg !9699
  %33 = load ptr, ptr %32, align 8, !dbg !9699
  %34 = load ptr, ptr %6, align 8, !dbg !9700
  %35 = getelementptr inbounds %struct.anon.5, ptr %34, i32 0, i32 1, !dbg !9701
  %36 = load ptr, ptr %35, align 8, !dbg !9701
  call void %33(ptr noundef %36), !dbg !9698
  br label %37, !dbg !9698

37:                                               ; preds = %30, %22
  %38 = load ptr, ptr %6, align 8, !dbg !9702
  %39 = getelementptr inbounds %struct.anon.5, ptr %38, i32 0, i32 0, !dbg !9703
  %40 = load ptr, ptr %39, align 8, !dbg !9703
  call void @free(ptr noundef %40) #17, !dbg !9704
  %41 = load ptr, ptr %6, align 8, !dbg !9705
  call void @free(ptr noundef %41) #17, !dbg !9706
  %42 = load ptr, ptr %7, align 8, !dbg !9707
  store ptr %42, ptr %6, align 8, !dbg !9708
  br label %19, !dbg !9709, !llvm.loop !9710

43:                                               ; preds = %19
  call void @llvm.dbg.declare(metadata ptr %8, metadata !9712, metadata !DIExpression()), !dbg !9714
  store i32 0, ptr %8, align 4, !dbg !9714
  br label %44, !dbg !9715

44:                                               ; preds = %71, %43
  %45 = load i32, ptr %5, align 4, !dbg !9716
  %46 = icmp sgt i32 %45, 0, !dbg !9718
  br i1 %46, label %47, label %50, !dbg !9719

47:                                               ; preds = %44
  %48 = load i32, ptr %8, align 4, !dbg !9720
  %49 = icmp slt i32 %48, 8, !dbg !9721
  br label %50

50:                                               ; preds = %47, %44
  %51 = phi i1 [ false, %44 ], [ %49, %47 ], !dbg !9722
  br i1 %51, label %52, label %74, !dbg !9723

52:                                               ; preds = %50
  %53 = load ptr, ptr %4, align 8, !dbg !9724
  %54 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %53, i32 0, i32 0, !dbg !9727
  %55 = load i32, ptr %8, align 4, !dbg !9728
  %56 = sext i32 %55 to i64, !dbg !9724
  %57 = getelementptr inbounds [8 x ptr], ptr %54, i64 0, i64 %56, !dbg !9724
  %58 = load ptr, ptr %57, align 8, !dbg !9724
  %59 = icmp ne ptr %58, null, !dbg !9724
  br i1 %59, label %60, label %70, !dbg !9729

60:                                               ; preds = %52
  %61 = load ptr, ptr %3, align 8, !dbg !9730
  %62 = load ptr, ptr %4, align 8, !dbg !9732
  %63 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %62, i32 0, i32 0, !dbg !9733
  %64 = load i32, ptr %8, align 4, !dbg !9734
  %65 = sext i32 %64 to i64, !dbg !9732
  %66 = getelementptr inbounds [8 x ptr], ptr %63, i64 0, i64 %65, !dbg !9732
  %67 = load ptr, ptr %66, align 8, !dbg !9732
  call void @lwan_trie_node_destroy(ptr noundef %61, ptr noundef %67), !dbg !9735
  %68 = load i32, ptr %5, align 4, !dbg !9736
  %69 = add nsw i32 %68, -1, !dbg !9736
  store i32 %69, ptr %5, align 4, !dbg !9736
  br label %70, !dbg !9737

70:                                               ; preds = %60, %52
  br label %71, !dbg !9738

71:                                               ; preds = %70
  %72 = load i32, ptr %8, align 4, !dbg !9739
  %73 = add nsw i32 %72, 1, !dbg !9739
  store i32 %73, ptr %8, align 4, !dbg !9739
  br label %44, !dbg !9740, !llvm.loop !9741

74:                                               ; preds = %50
  %75 = load ptr, ptr %4, align 8, !dbg !9743
  call void @free(ptr noundef %75) #17, !dbg !9744
  br label %76, !dbg !9745

76:                                               ; preds = %74, %11
  ret void, !dbg !9745
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @get_config_path(ptr noundef %0) #0 !dbg !9746 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !9749, metadata !DIExpression()), !dbg !9750
  call void @llvm.dbg.declare(metadata ptr %4, metadata !9751, metadata !DIExpression()), !dbg !9752
  store ptr null, ptr %4, align 8, !dbg !9752
  call void @llvm.dbg.declare(metadata ptr %5, metadata !9753, metadata !DIExpression()), !dbg !9754
  %7 = load ptr, ptr %3, align 8, !dbg !9755
  %8 = call i64 @readlink(ptr noundef @.str.2.62, ptr noundef %7, i64 noundef 4096) #17, !dbg !9756
  store i64 %8, ptr %5, align 8, !dbg !9757
  %9 = load i64, ptr %5, align 8, !dbg !9758
  %10 = icmp slt i64 %9, 0, !dbg !9760
  br i1 %10, label %11, label %12, !dbg !9761

11:                                               ; preds = %1
  br label %34, !dbg !9762

12:                                               ; preds = %1
  %13 = load ptr, ptr %3, align 8, !dbg !9763
  %14 = load i64, ptr %5, align 8, !dbg !9764
  %15 = getelementptr inbounds i8, ptr %13, i64 %14, !dbg !9763
  store i8 0, ptr %15, align 1, !dbg !9765
  %16 = load ptr, ptr %3, align 8, !dbg !9766
  %17 = call ptr @strrchr(ptr noundef %16, i32 noundef 47) #20, !dbg !9767
  store ptr %17, ptr %4, align 8, !dbg !9768
  %18 = load ptr, ptr %4, align 8, !dbg !9769
  %19 = icmp ne ptr %18, null, !dbg !9769
  br i1 %19, label %21, label %20, !dbg !9771

20:                                               ; preds = %12
  br label %34, !dbg !9772

21:                                               ; preds = %12
  call void @llvm.dbg.declare(metadata ptr %6, metadata !9773, metadata !DIExpression()), !dbg !9774
  %22 = load ptr, ptr %3, align 8, !dbg !9775
  %23 = load ptr, ptr %4, align 8, !dbg !9776
  %24 = getelementptr inbounds i8, ptr %23, i64 1, !dbg !9777
  %25 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %22, i64 noundef 4096, ptr noundef @.str.3.63, ptr noundef %24) #17, !dbg !9778
  store i32 %25, ptr %6, align 4, !dbg !9774
  %26 = load i32, ptr %6, align 4, !dbg !9779
  %27 = icmp slt i32 %26, 0, !dbg !9781
  br i1 %27, label %31, label %28, !dbg !9782

28:                                               ; preds = %21
  %29 = load i32, ptr %6, align 4, !dbg !9783
  %30 = icmp sge i32 %29, 4096, !dbg !9784
  br i1 %30, label %31, label %32, !dbg !9785

31:                                               ; preds = %28, %21
  br label %34, !dbg !9786

32:                                               ; preds = %28
  %33 = load ptr, ptr %3, align 8, !dbg !9787
  store ptr %33, ptr %2, align 8, !dbg !9788
  br label %35, !dbg !9788

34:                                               ; preds = %31, %20, %11
  call void @llvm.dbg.label(metadata !9789), !dbg !9790
  store ptr @.str.4.64, ptr %2, align 8, !dbg !9791
  br label %35, !dbg !9791

35:                                               ; preds = %34, %32
  %36 = load ptr, ptr %2, align 8, !dbg !9792
  ret ptr %36, !dbg !9792
}

; Function Attrs: nounwind
declare i64 @readlink(ptr noundef, ptr noundef, i64 noundef) #2

; Function Attrs: nounwind
declare i32 @snprintf(ptr noundef, i64 noundef, ptr noundef, ...) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_init(ptr noundef %0) #0 !dbg !9793 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !9796, metadata !DIExpression()), !dbg !9797
  %3 = load ptr, ptr %2, align 8, !dbg !9798
  call void @lwan_init_with_config(ptr noundef %3, ptr noundef @default_config), !dbg !9799
  ret void, !dbg !9800
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_init_with_config(ptr noundef %0, ptr noundef %1) #0 !dbg !9801 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i64, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !9805, metadata !DIExpression()), !dbg !9806
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !9807, metadata !DIExpression()), !dbg !9808
  %6 = load ptr, ptr %3, align 8, !dbg !9809
  call void @llvm.memset.p0.i64(ptr align 8 %6, i8 0, i64 80, i1 false), !dbg !9810
  %7 = load ptr, ptr %3, align 8, !dbg !9811
  %8 = getelementptr inbounds %struct.lwan_t_, ptr %7, i32 0, i32 4, !dbg !9812
  %9 = load ptr, ptr %4, align 8, !dbg !9813
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %9, i64 24, i1 false), !dbg !9814
  %10 = load ptr, ptr %3, align 8, !dbg !9815
  call void @lwan_status_init(ptr noundef %10), !dbg !9816
  call void @lwan_job_thread_init(), !dbg !9817
  call void @lwan_response_init(), !dbg !9818
  call void @lwan_tables_init(), !dbg !9819
  %11 = load ptr, ptr %3, align 8, !dbg !9820
  call void @lwan_module_init(ptr noundef %11), !dbg !9821
  %12 = load ptr, ptr %3, align 8, !dbg !9822
  %13 = call ptr @lwan_module_serve_files(), !dbg !9823
  call void @lwan_module_register(ptr noundef %12, ptr noundef %13), !dbg !9824
  %14 = load ptr, ptr %3, align 8, !dbg !9825
  %15 = call ptr @lwan_module_redirect(), !dbg !9826
  call void @lwan_module_register(ptr noundef %14, ptr noundef %15), !dbg !9827
  %16 = load ptr, ptr %4, align 8, !dbg !9828
  %17 = icmp eq ptr %16, @default_config, !dbg !9830
  br i1 %17, label %18, label %23, !dbg !9831

18:                                               ; preds = %2
  %19 = load ptr, ptr %3, align 8, !dbg !9832
  %20 = call zeroext i1 @setup_from_config(ptr noundef %19), !dbg !9835
  br i1 %20, label %22, label %21, !dbg !9836

21:                                               ; preds = %18
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_warning_debug(ptr noundef @.str.60, i32 noundef 473, ptr noundef @__FUNCTION__.lwan_init_with_config, ptr noundef @.str.5.65), !dbg !9837
  br label %22, !dbg !9837

22:                                               ; preds = %21, %18
  br label %23, !dbg !9838

23:                                               ; preds = %22, %2
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.60, i32 noundef 477, ptr noundef @__FUNCTION__.lwan_init_with_config, ptr noundef @.str.6.66), !dbg !9839
  %24 = load ptr, ptr %3, align 8, !dbg !9840
  %25 = getelementptr inbounds %struct.lwan_t_, ptr %24, i32 0, i32 4, !dbg !9842
  %26 = getelementptr inbounds %struct.lwan_config_t_, ptr %25, i32 0, i32 5, !dbg !9843
  %27 = load i16, ptr %26, align 8, !dbg !9843
  %28 = icmp ne i16 %27, 0, !dbg !9840
  br i1 %28, label %45, label %29, !dbg !9844

29:                                               ; preds = %23
  %30 = call zeroext i16 @get_number_of_cpus(), !dbg !9845
  %31 = load ptr, ptr %3, align 8, !dbg !9847
  %32 = getelementptr inbounds %struct.lwan_t_, ptr %31, i32 0, i32 2, !dbg !9848
  %33 = getelementptr inbounds %struct.anon, ptr %32, i32 0, i32 2, !dbg !9849
  store i16 %30, ptr %33, align 4, !dbg !9850
  %34 = load ptr, ptr %3, align 8, !dbg !9851
  %35 = getelementptr inbounds %struct.lwan_t_, ptr %34, i32 0, i32 2, !dbg !9853
  %36 = getelementptr inbounds %struct.anon, ptr %35, i32 0, i32 2, !dbg !9854
  %37 = load i16, ptr %36, align 4, !dbg !9854
  %38 = zext i16 %37 to i32, !dbg !9851
  %39 = icmp eq i32 %38, 1, !dbg !9855
  br i1 %39, label %40, label %44, !dbg !9856

40:                                               ; preds = %29
  %41 = load ptr, ptr %3, align 8, !dbg !9857
  %42 = getelementptr inbounds %struct.lwan_t_, ptr %41, i32 0, i32 2, !dbg !9858
  %43 = getelementptr inbounds %struct.anon, ptr %42, i32 0, i32 2, !dbg !9859
  store i16 2, ptr %43, align 4, !dbg !9860
  br label %44, !dbg !9857

44:                                               ; preds = %40, %29
  br label %53, !dbg !9861

45:                                               ; preds = %23
  %46 = load ptr, ptr %3, align 8, !dbg !9862
  %47 = getelementptr inbounds %struct.lwan_t_, ptr %46, i32 0, i32 4, !dbg !9864
  %48 = getelementptr inbounds %struct.lwan_config_t_, ptr %47, i32 0, i32 5, !dbg !9865
  %49 = load i16, ptr %48, align 8, !dbg !9865
  %50 = load ptr, ptr %3, align 8, !dbg !9866
  %51 = getelementptr inbounds %struct.lwan_t_, ptr %50, i32 0, i32 2, !dbg !9867
  %52 = getelementptr inbounds %struct.anon, ptr %51, i32 0, i32 2, !dbg !9868
  store i16 %49, ptr %52, align 4, !dbg !9869
  br label %53

53:                                               ; preds = %45, %44
  call void @llvm.dbg.declare(metadata ptr %5, metadata !9870, metadata !DIExpression()), !dbg !9872
  %54 = call i64 @setup_open_file_count_limits(), !dbg !9873
  store i64 %54, ptr %5, align 8, !dbg !9872
  %55 = load ptr, ptr %3, align 8, !dbg !9874
  %56 = load i64, ptr %5, align 8, !dbg !9875
  call void @allocate_connections(ptr noundef %55, i64 noundef %56), !dbg !9876
  %57 = load i64, ptr %5, align 8, !dbg !9877
  %58 = trunc i64 %57 to i32, !dbg !9878
  %59 = load ptr, ptr %3, align 8, !dbg !9879
  %60 = getelementptr inbounds %struct.lwan_t_, ptr %59, i32 0, i32 2, !dbg !9880
  %61 = getelementptr inbounds %struct.anon, ptr %60, i32 0, i32 2, !dbg !9881
  %62 = load i16, ptr %61, align 4, !dbg !9881
  %63 = zext i16 %62 to i32, !dbg !9882
  %64 = udiv i32 %58, %63, !dbg !9883
  %65 = load ptr, ptr %3, align 8, !dbg !9884
  %66 = getelementptr inbounds %struct.lwan_t_, ptr %65, i32 0, i32 2, !dbg !9885
  %67 = getelementptr inbounds %struct.anon, ptr %66, i32 0, i32 1, !dbg !9886
  store i32 %64, ptr %67, align 8, !dbg !9887
  %68 = load ptr, ptr %3, align 8, !dbg !9888
  %69 = getelementptr inbounds %struct.lwan_t_, ptr %68, i32 0, i32 2, !dbg !9888
  %70 = getelementptr inbounds %struct.anon, ptr %69, i32 0, i32 2, !dbg !9888
  %71 = load i16, ptr %70, align 4, !dbg !9888
  %72 = zext i16 %71 to i32, !dbg !9888
  %73 = load ptr, ptr %3, align 8, !dbg !9888
  %74 = getelementptr inbounds %struct.lwan_t_, ptr %73, i32 0, i32 2, !dbg !9888
  %75 = getelementptr inbounds %struct.anon, ptr %74, i32 0, i32 1, !dbg !9888
  %76 = load i32, ptr %75, align 8, !dbg !9888
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_info_debug(ptr noundef @.str.60, i32 noundef 492, ptr noundef @__FUNCTION__.lwan_init_with_config, ptr noundef @.str.7.67, i32 noundef %72, i32 noundef %76), !dbg !9888
  %77 = call ptr @signal(i32 noundef 13, ptr noundef inttoptr (i64 1 to ptr)) #17, !dbg !9889
  %78 = call i32 @close(i32 noundef 0), !dbg !9890
  %79 = load ptr, ptr %3, align 8, !dbg !9891
  call void @lwan_thread_init(ptr noundef %79), !dbg !9892
  %80 = load ptr, ptr %3, align 8, !dbg !9893
  call void @lwan_socket_init(ptr noundef %80), !dbg !9894
  %81 = call zeroext i1 @lwan_http_authorize_init(), !dbg !9895
  ret void, !dbg !9896
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_status_init(ptr noundef %0) #0 !dbg !9897 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !9968, metadata !DIExpression()), !dbg !9969
  store volatile i8 0, ptr @quiet, align 1, !dbg !9970
  %3 = load ptr, ptr %2, align 8, !dbg !9971
  ret void, !dbg !9972
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_response_init() #0 !dbg !1851 {
  %1 = load ptr, ptr @error_template, align 8, !dbg !9973
  %2 = icmp ne ptr %1, null, !dbg !9973
  br i1 %2, label %4, label %3, !dbg !9976

3:                                                ; preds = %0
  br label %5, !dbg !9976

4:                                                ; preds = %0
  call void @__assert_fail(ptr noundef @.str.2.94, ptr noundef @.str.3.95, i32 noundef 73, ptr noundef @__PRETTY_FUNCTION__.lwan_response_init) #23, !dbg !9973
  unreachable, !dbg !9973

5:                                                ; preds = %3
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.3.95, i32 noundef 75, ptr noundef @__FUNCTION__.lwan_response_init, ptr noundef @.str.4.96), !dbg !9977
  %6 = load ptr, ptr @error_template_str, align 8, !dbg !9978
  %7 = call ptr @lwan_tpl_compile_string(ptr noundef %6, ptr noundef @lwan_response_init.error_descriptor), !dbg !9979
  store ptr %7, ptr @error_template, align 8, !dbg !9980
  %8 = load ptr, ptr @error_template, align 8, !dbg !9981
  %9 = icmp ne ptr %8, null, !dbg !9981
  %10 = xor i1 %9, true, !dbg !9981
  %11 = zext i1 %10 to i32, !dbg !9981
  %12 = sext i32 %11 to i64, !dbg !9981
  %13 = icmp ne i64 %12, 0, !dbg !9981
  br i1 %13, label %14, label %15, !dbg !9983

14:                                               ; preds = %5
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.3.95, i32 noundef 79, ptr noundef @__FUNCTION__.lwan_response_init, ptr noundef @.str.5.97) #24, !dbg !9984
  unreachable, !dbg !9984

15:                                               ; preds = %5
  ret void, !dbg !9985
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_tables_init() #0 !dbg !9986 {
  %1 = alloca i64, align 8
  %2 = alloca i32, align 4
  %3 = alloca ptr, align 8
  %4 = alloca i64, align 8
  %5 = load i8, ptr @mime_entries_initialized, align 1, !dbg !9987
  %6 = trunc i8 %5 to i1, !dbg !9987
  br i1 %6, label %7, label %8, !dbg !9989

7:                                                ; preds = %0
  br label %44, !dbg !9990

8:                                                ; preds = %0
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.244, i32 noundef 40, ptr noundef @__FUNCTION__.lwan_tables_init, ptr noundef @.str.1.245), !dbg !9991
  call void @llvm.dbg.declare(metadata ptr %1, metadata !9992, metadata !DIExpression()), !dbg !9995
  store i64 28534, ptr %1, align 8, !dbg !9995
  call void @llvm.dbg.declare(metadata ptr %2, metadata !9996, metadata !DIExpression()), !dbg !9997
  %9 = call i32 @uncompress(ptr noundef @uncompressed_mime_entries, ptr noundef %1, ptr noundef @mime_entries_compressed, i64 noundef 7514), !dbg !9998
  store i32 %9, ptr %2, align 4, !dbg !9997
  %10 = load i32, ptr %2, align 4, !dbg !9999
  %11 = icmp ne i32 %10, 0, !dbg !10001
  br i1 %11, label %12, label %14, !dbg !10002

12:                                               ; preds = %8
  %13 = load i32, ptr %2, align 4, !dbg !10003
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_debug(ptr noundef @.str.244, i32 noundef 47, ptr noundef @__FUNCTION__.lwan_tables_init, ptr noundef @.str.2.246, i32 noundef %13) #24, !dbg !10003
  unreachable, !dbg !10003

14:                                               ; preds = %8
  %15 = load i64, ptr %1, align 8, !dbg !10004
  %16 = icmp ne i64 %15, 28534, !dbg !10006
  br i1 %16, label %17, label %19, !dbg !10007

17:                                               ; preds = %14
  %18 = load i64, ptr %1, align 8, !dbg !10008
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_debug(ptr noundef @.str.244, i32 noundef 51, ptr noundef @__FUNCTION__.lwan_tables_init, ptr noundef @.str.3.247, i32 noundef 28534, i64 noundef %18) #24, !dbg !10008
  unreachable, !dbg !10008

19:                                               ; preds = %14
  call void @llvm.dbg.declare(metadata ptr %3, metadata !10009, metadata !DIExpression()), !dbg !10010
  store ptr @uncompressed_mime_entries, ptr %3, align 8, !dbg !10010
  call void @llvm.dbg.declare(metadata ptr %4, metadata !10011, metadata !DIExpression()), !dbg !10013
  store i64 0, ptr %4, align 8, !dbg !10013
  br label %20, !dbg !10014

20:                                               ; preds = %40, %19
  %21 = load i64, ptr %4, align 8, !dbg !10015
  %22 = icmp ult i64 %21, 981, !dbg !10017
  br i1 %22, label %23, label %43, !dbg !10018

23:                                               ; preds = %20
  %24 = load ptr, ptr %3, align 8, !dbg !10019
  %25 = load i64, ptr %4, align 8, !dbg !10021
  %26 = getelementptr inbounds [981 x %struct.lwan_key_value_t_], ptr @mime_entries, i64 0, i64 %25, !dbg !10022
  %27 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %26, i32 0, i32 0, !dbg !10023
  store ptr %24, ptr %27, align 16, !dbg !10024
  %28 = load ptr, ptr %3, align 8, !dbg !10025
  %29 = getelementptr inbounds i8, ptr %28, i64 1, !dbg !10026
  %30 = call ptr @rawmemchr(ptr noundef %29, i32 noundef 0) #20, !dbg !10027
  %31 = getelementptr inbounds i8, ptr %30, i64 1, !dbg !10028
  store ptr %31, ptr %3, align 8, !dbg !10029
  %32 = load ptr, ptr %3, align 8, !dbg !10030
  %33 = load i64, ptr %4, align 8, !dbg !10031
  %34 = getelementptr inbounds [981 x %struct.lwan_key_value_t_], ptr @mime_entries, i64 0, i64 %33, !dbg !10032
  %35 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %34, i32 0, i32 1, !dbg !10033
  store ptr %32, ptr %35, align 8, !dbg !10034
  %36 = load ptr, ptr %3, align 8, !dbg !10035
  %37 = getelementptr inbounds i8, ptr %36, i64 1, !dbg !10036
  %38 = call ptr @rawmemchr(ptr noundef %37, i32 noundef 0) #20, !dbg !10037
  %39 = getelementptr inbounds i8, ptr %38, i64 1, !dbg !10038
  store ptr %39, ptr %3, align 8, !dbg !10039
  br label %40, !dbg !10040

40:                                               ; preds = %23
  %41 = load i64, ptr %4, align 8, !dbg !10041
  %42 = add i64 %41, 1, !dbg !10041
  store i64 %42, ptr %4, align 8, !dbg !10041
  br label %20, !dbg !10042, !llvm.loop !10043

43:                                               ; preds = %20
  store i8 1, ptr @mime_entries_initialized, align 1, !dbg !10045
  br label %44, !dbg !10046

44:                                               ; preds = %43, %7
  ret void, !dbg !10046
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @lwan_module_init(ptr noundef %0) #0 !dbg !10047 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !10048, metadata !DIExpression()), !dbg !10049
  %3 = load ptr, ptr %2, align 8, !dbg !10050
  %4 = getelementptr inbounds %struct.lwan_t_, ptr %3, i32 0, i32 3, !dbg !10052
  %5 = load ptr, ptr %4, align 8, !dbg !10052
  %6 = icmp ne ptr %5, null, !dbg !10050
  br i1 %6, label %11, label %7, !dbg !10053

7:                                                ; preds = %1
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.60, i32 noundef 56, ptr noundef @__FUNCTION__.lwan_module_init, ptr noundef @.str.18.93), !dbg !10054
  %8 = call ptr @hash_str_new(ptr noundef null, ptr noundef null), !dbg !10056
  %9 = load ptr, ptr %2, align 8, !dbg !10057
  %10 = getelementptr inbounds %struct.lwan_t_, ptr %9, i32 0, i32 3, !dbg !10058
  store ptr %8, ptr %10, align 8, !dbg !10059
  br label %11, !dbg !10060

11:                                               ; preds = %7, %1
  ret void, !dbg !10061
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @lwan_module_serve_files() #0 !dbg !2152 {
  ret ptr @lwan_module_serve_files.serve_files, !dbg !10062
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @lwan_module_register(ptr noundef %0, ptr noundef %1) #0 !dbg !10063 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !10066, metadata !DIExpression()), !dbg !10067
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !10068, metadata !DIExpression()), !dbg !10069
  %5 = load ptr, ptr %4, align 8, !dbg !10070
  %6 = getelementptr inbounds %struct.lwan_module_t_, ptr %5, i32 0, i32 0, !dbg !10072
  %7 = load ptr, ptr %6, align 8, !dbg !10072
  %8 = icmp ne ptr %7, null, !dbg !10070
  br i1 %8, label %11, label %9, !dbg !10073

9:                                                ; preds = %2
  %10 = load ptr, ptr %4, align 8, !dbg !10074
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_debug(ptr noundef @.str.60, i32 noundef 69, ptr noundef @__FUNCTION__.lwan_module_register, ptr noundef @.str.19.91, ptr noundef %10) #24, !dbg !10074
  unreachable, !dbg !10074

11:                                               ; preds = %2
  %12 = load ptr, ptr %4, align 8, !dbg !10075
  %13 = getelementptr inbounds %struct.lwan_module_t_, ptr %12, i32 0, i32 0, !dbg !10075
  %14 = load ptr, ptr %13, align 8, !dbg !10075
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.60, i32 noundef 71, ptr noundef @__FUNCTION__.lwan_module_register, ptr noundef @.str.20.92, ptr noundef %14), !dbg !10075
  %15 = load ptr, ptr %3, align 8, !dbg !10076
  %16 = getelementptr inbounds %struct.lwan_t_, ptr %15, i32 0, i32 3, !dbg !10077
  %17 = load ptr, ptr %16, align 8, !dbg !10077
  %18 = load ptr, ptr %4, align 8, !dbg !10078
  %19 = getelementptr inbounds %struct.lwan_module_t_, ptr %18, i32 0, i32 0, !dbg !10079
  %20 = load ptr, ptr %19, align 8, !dbg !10079
  %21 = load ptr, ptr %4, align 8, !dbg !10080
  %22 = call i32 @hash_add(ptr noundef %17, ptr noundef %20, ptr noundef %21), !dbg !10081
  ret void, !dbg !10082
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @lwan_module_redirect() #0 !dbg !1397 {
  ret ptr @lwan_module_redirect.redirect_module, !dbg !10083
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @setup_from_config(ptr noundef %0) #0 !dbg !10084 {
  %2 = alloca i1, align 1
  %3 = alloca ptr, align 8
  %4 = alloca %struct.config_t_, align 8
  %5 = alloca %struct.config_line_t_, align 8
  %6 = alloca i8, align 1
  %7 = alloca [4096 x i8], align 16
  %8 = alloca ptr, align 8
  %9 = alloca i64, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !10087, metadata !DIExpression()), !dbg !10088
  call void @llvm.dbg.declare(metadata ptr %4, metadata !10089, metadata !DIExpression()), !dbg !10130
  call void @llvm.dbg.declare(metadata ptr %5, metadata !10131, metadata !DIExpression()), !dbg !10150
  call void @llvm.dbg.declare(metadata ptr %6, metadata !10151, metadata !DIExpression()), !dbg !10152
  store i8 0, ptr %6, align 1, !dbg !10152
  call void @llvm.dbg.declare(metadata ptr %7, metadata !10153, metadata !DIExpression()), !dbg !10157
  call void @llvm.dbg.declare(metadata ptr %8, metadata !10158, metadata !DIExpression()), !dbg !10159
  %10 = getelementptr inbounds [4096 x i8], ptr %7, i64 0, i64 0, !dbg !10160
  %11 = call ptr @get_config_path(ptr noundef %10), !dbg !10161
  store ptr %11, ptr %8, align 8, !dbg !10162
  %12 = load ptr, ptr %8, align 8, !dbg !10163
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_info_debug(ptr noundef @.str.60, i32 noundef 334, ptr noundef @__FUNCTION__.setup_from_config, ptr noundef @.str.21.74, ptr noundef %12), !dbg !10163
  %13 = load ptr, ptr %3, align 8, !dbg !10164
  %14 = getelementptr inbounds %struct.lwan_t_, ptr %13, i32 0, i32 0, !dbg !10166
  %15 = call zeroext i1 @lwan_trie_init(ptr noundef %14, ptr noundef @destroy_urlmap), !dbg !10167
  br i1 %15, label %17, label %16, !dbg !10168

16:                                               ; preds = %1
  store i1 false, ptr %2, align 1, !dbg !10169
  br label %161, !dbg !10169

17:                                               ; preds = %1
  %18 = load ptr, ptr %8, align 8, !dbg !10170
  %19 = call zeroext i1 @config_open(ptr noundef %4, ptr noundef %18), !dbg !10172
  br i1 %19, label %21, label %20, !dbg !10173

20:                                               ; preds = %17
  store i1 false, ptr %2, align 1, !dbg !10174
  br label %161, !dbg !10174

21:                                               ; preds = %17
  br label %22, !dbg !10175

22:                                               ; preds = %149, %21
  %23 = call zeroext i1 @config_read_line(ptr noundef %4, ptr noundef %5), !dbg !10176
  br i1 %23, label %24, label %150, !dbg !10175

24:                                               ; preds = %22
  %25 = getelementptr inbounds %struct.config_line_t_, ptr %5, i32 0, i32 1, !dbg !10177
  %26 = load i32, ptr %25, align 8, !dbg !10177
  switch i32 %26, label %149 [
    i32 0, label %27
    i32 1, label %127
    i32 2, label %147
  ], !dbg !10179

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct.config_line_t_, ptr %5, i32 0, i32 0, !dbg !10180
  %29 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %28, i32 0, i32 0, !dbg !10183
  %30 = load ptr, ptr %29, align 8, !dbg !10183
  %31 = call i32 @strcmp(ptr noundef %30, ptr noundef @.str.22.75) #20, !dbg !10184
  %32 = icmp ne i32 %31, 0, !dbg !10184
  br i1 %32, label %44, label %33, !dbg !10185

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct.config_line_t_, ptr %5, i32 0, i32 0, !dbg !10186
  %35 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %34, i32 0, i32 1, !dbg !10187
  %36 = load ptr, ptr %35, align 8, !dbg !10187
  %37 = load i16, ptr getelementptr inbounds (%struct.lwan_config_t_, ptr @default_config, i32 0, i32 1), align 8, !dbg !10188
  %38 = zext i16 %37 to i64, !dbg !10189
  %39 = call i64 @parse_long(ptr noundef %36, i64 noundef %38), !dbg !10190
  %40 = trunc i64 %39 to i16, !dbg !10191
  %41 = load ptr, ptr %3, align 8, !dbg !10192
  %42 = getelementptr inbounds %struct.lwan_t_, ptr %41, i32 0, i32 4, !dbg !10193
  %43 = getelementptr inbounds %struct.lwan_config_t_, ptr %42, i32 0, i32 1, !dbg !10194
  store i16 %40, ptr %43, align 8, !dbg !10195
  br label %126, !dbg !10192

44:                                               ; preds = %27
  %45 = getelementptr inbounds %struct.config_line_t_, ptr %5, i32 0, i32 0, !dbg !10196
  %46 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %45, i32 0, i32 0, !dbg !10198
  %47 = load ptr, ptr %46, align 8, !dbg !10198
  %48 = call i32 @strcmp(ptr noundef %47, ptr noundef @.str.23.76) #20, !dbg !10199
  %49 = icmp ne i32 %48, 0, !dbg !10199
  br i1 %49, label %61, label %50, !dbg !10200

50:                                               ; preds = %44
  %51 = getelementptr inbounds %struct.config_line_t_, ptr %5, i32 0, i32 0, !dbg !10201
  %52 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %51, i32 0, i32 1, !dbg !10202
  %53 = load ptr, ptr %52, align 8, !dbg !10202
  %54 = load i8, ptr getelementptr inbounds (%struct.lwan_config_t_, ptr @default_config, i32 0, i32 2), align 2, !dbg !10203
  %55 = trunc i8 %54 to i1, !dbg !10203
  %56 = call zeroext i1 @parse_bool(ptr noundef %53, i1 noundef zeroext %55), !dbg !10204
  %57 = load ptr, ptr %3, align 8, !dbg !10205
  %58 = getelementptr inbounds %struct.lwan_t_, ptr %57, i32 0, i32 4, !dbg !10206
  %59 = getelementptr inbounds %struct.lwan_config_t_, ptr %58, i32 0, i32 2, !dbg !10207
  %60 = zext i1 %56 to i8, !dbg !10208
  store i8 %60, ptr %59, align 2, !dbg !10208
  br label %125, !dbg !10205

61:                                               ; preds = %44
  %62 = getelementptr inbounds %struct.config_line_t_, ptr %5, i32 0, i32 0, !dbg !10209
  %63 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %62, i32 0, i32 0, !dbg !10211
  %64 = load ptr, ptr %63, align 8, !dbg !10211
  %65 = call i32 @strcmp(ptr noundef %64, ptr noundef @.str.24.77) #20, !dbg !10212
  %66 = icmp ne i32 %65, 0, !dbg !10212
  br i1 %66, label %78, label %67, !dbg !10213

67:                                               ; preds = %61
  %68 = getelementptr inbounds %struct.config_line_t_, ptr %5, i32 0, i32 0, !dbg !10214
  %69 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %68, i32 0, i32 1, !dbg !10215
  %70 = load ptr, ptr %69, align 8, !dbg !10215
  %71 = load i8, ptr getelementptr inbounds (%struct.lwan_config_t_, ptr @default_config, i32 0, i32 3), align 1, !dbg !10216
  %72 = trunc i8 %71 to i1, !dbg !10216
  %73 = call zeroext i1 @parse_bool(ptr noundef %70, i1 noundef zeroext %72), !dbg !10217
  %74 = load ptr, ptr %3, align 8, !dbg !10218
  %75 = getelementptr inbounds %struct.lwan_t_, ptr %74, i32 0, i32 4, !dbg !10219
  %76 = getelementptr inbounds %struct.lwan_config_t_, ptr %75, i32 0, i32 3, !dbg !10220
  %77 = zext i1 %73 to i8, !dbg !10221
  store i8 %77, ptr %76, align 1, !dbg !10221
  br label %124, !dbg !10218

78:                                               ; preds = %61
  %79 = getelementptr inbounds %struct.config_line_t_, ptr %5, i32 0, i32 0, !dbg !10222
  %80 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %79, i32 0, i32 0, !dbg !10224
  %81 = load ptr, ptr %80, align 8, !dbg !10224
  %82 = call i32 @strcmp(ptr noundef %81, ptr noundef @.str.25.68) #20, !dbg !10225
  %83 = icmp ne i32 %82, 0, !dbg !10225
  br i1 %83, label %93, label %84, !dbg !10226

84:                                               ; preds = %78
  %85 = getelementptr inbounds %struct.config_line_t_, ptr %5, i32 0, i32 0, !dbg !10227
  %86 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %85, i32 0, i32 1, !dbg !10228
  %87 = load ptr, ptr %86, align 8, !dbg !10228
  %88 = load i32, ptr getelementptr inbounds (%struct.lwan_config_t_, ptr @default_config, i32 0, i32 4), align 4, !dbg !10229
  %89 = call i32 @parse_time_period(ptr noundef %87, i32 noundef %88), !dbg !10230
  %90 = load ptr, ptr %3, align 8, !dbg !10231
  %91 = getelementptr inbounds %struct.lwan_t_, ptr %90, i32 0, i32 4, !dbg !10232
  %92 = getelementptr inbounds %struct.lwan_config_t_, ptr %91, i32 0, i32 4, !dbg !10233
  store i32 %89, ptr %92, align 4, !dbg !10234
  br label %123, !dbg !10231

93:                                               ; preds = %78
  %94 = getelementptr inbounds %struct.config_line_t_, ptr %5, i32 0, i32 0, !dbg !10235
  %95 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %94, i32 0, i32 0, !dbg !10237
  %96 = load ptr, ptr %95, align 8, !dbg !10237
  %97 = call i32 @strcmp(ptr noundef %96, ptr noundef @.str.26.78) #20, !dbg !10238
  %98 = icmp ne i32 %97, 0, !dbg !10238
  br i1 %98, label %117, label %99, !dbg !10239

99:                                               ; preds = %93
  call void @llvm.dbg.declare(metadata ptr %9, metadata !10240, metadata !DIExpression()), !dbg !10242
  %100 = getelementptr inbounds %struct.config_line_t_, ptr %5, i32 0, i32 0, !dbg !10243
  %101 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %100, i32 0, i32 1, !dbg !10244
  %102 = load ptr, ptr %101, align 8, !dbg !10244
  %103 = load i16, ptr getelementptr inbounds (%struct.lwan_config_t_, ptr @default_config, i32 0, i32 5), align 8, !dbg !10245
  %104 = zext i16 %103 to i64, !dbg !10246
  %105 = call i64 @parse_long(ptr noundef %102, i64 noundef %104), !dbg !10247
  store i64 %105, ptr %9, align 8, !dbg !10242
  %106 = load i64, ptr %9, align 8, !dbg !10248
  %107 = icmp slt i64 %106, 0, !dbg !10250
  br i1 %107, label %108, label %111, !dbg !10251

108:                                              ; preds = %99
  %109 = load i64, ptr %9, align 8, !dbg !10252
  %110 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %4, ptr noundef @.str.27.79, i64 noundef %109), !dbg !10253
  br label %111, !dbg !10253

111:                                              ; preds = %108, %99
  %112 = load i64, ptr %9, align 8, !dbg !10254
  %113 = trunc i64 %112 to i16, !dbg !10255
  %114 = load ptr, ptr %3, align 8, !dbg !10256
  %115 = getelementptr inbounds %struct.lwan_t_, ptr %114, i32 0, i32 4, !dbg !10257
  %116 = getelementptr inbounds %struct.lwan_config_t_, ptr %115, i32 0, i32 5, !dbg !10258
  store i16 %113, ptr %116, align 8, !dbg !10259
  br label %122, !dbg !10260

117:                                              ; preds = %93
  %118 = getelementptr inbounds %struct.config_line_t_, ptr %5, i32 0, i32 0, !dbg !10261
  %119 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %118, i32 0, i32 0, !dbg !10262
  %120 = load ptr, ptr %119, align 8, !dbg !10262
  %121 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %4, ptr noundef @.str.28.80, ptr noundef %120), !dbg !10263
  br label %122

122:                                              ; preds = %117, %111
  br label %123

123:                                              ; preds = %122, %84
  br label %124

124:                                              ; preds = %123, %67
  br label %125

125:                                              ; preds = %124, %50
  br label %126

126:                                              ; preds = %125, %33
  br label %149, !dbg !10264

127:                                              ; preds = %24
  %128 = load i8, ptr %6, align 1, !dbg !10265
  %129 = trunc i8 %128 to i1, !dbg !10265
  br i1 %129, label %144, label %130, !dbg !10267

130:                                              ; preds = %127
  store i8 1, ptr %6, align 1, !dbg !10268
  %131 = getelementptr inbounds %struct.config_line_t_, ptr %5, i32 0, i32 0, !dbg !10270
  %132 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %131, i32 0, i32 0, !dbg !10272
  %133 = load ptr, ptr %132, align 8, !dbg !10272
  %134 = call i32 @strcmp(ptr noundef %133, ptr noundef @.str.29.81) #20, !dbg !10273
  %135 = icmp ne i32 %134, 0, !dbg !10273
  br i1 %135, label %138, label %136, !dbg !10274

136:                                              ; preds = %130
  %137 = load ptr, ptr %3, align 8, !dbg !10275
  call void @parse_listener(ptr noundef %4, ptr noundef %5, ptr noundef %137), !dbg !10276
  br label %143, !dbg !10276

138:                                              ; preds = %130
  %139 = getelementptr inbounds %struct.config_line_t_, ptr %5, i32 0, i32 0, !dbg !10277
  %140 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %139, i32 0, i32 0, !dbg !10278
  %141 = load ptr, ptr %140, align 8, !dbg !10278
  %142 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %4, ptr noundef @.str.30.82, ptr noundef %141), !dbg !10279
  br label %143

143:                                              ; preds = %138, %136
  br label %146, !dbg !10280

144:                                              ; preds = %127
  %145 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %4, ptr noundef @.str.31.83), !dbg !10281
  br label %146

146:                                              ; preds = %144, %143
  br label %149, !dbg !10283

147:                                              ; preds = %24
  %148 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %4, ptr noundef @.str.32.84), !dbg !10284
  br label %149, !dbg !10285

149:                                              ; preds = %147, %146, %126, %24
  br label %22, !dbg !10175, !llvm.loop !10286

150:                                              ; preds = %22
  %151 = getelementptr inbounds %struct.config_t_, ptr %4, i32 0, i32 2, !dbg !10288
  %152 = load ptr, ptr %151, align 8, !dbg !10288
  %153 = icmp ne ptr %152, null, !dbg !10290
  br i1 %153, label %154, label %160, !dbg !10291

154:                                              ; preds = %150
  %155 = load ptr, ptr %8, align 8, !dbg !10292
  %156 = getelementptr inbounds %struct.config_t_, ptr %4, i32 0, i32 1, !dbg !10292
  %157 = load i32, ptr %156, align 8, !dbg !10292
  %158 = getelementptr inbounds %struct.config_t_, ptr %4, i32 0, i32 2, !dbg !10292
  %159 = load ptr, ptr %158, align 8, !dbg !10292
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_debug(ptr noundef @.str.60, i32 noundef 384, ptr noundef @__FUNCTION__.setup_from_config, ptr noundef @.str.33.85, ptr noundef %155, i32 noundef %157, ptr noundef %159) #24, !dbg !10292
  unreachable, !dbg !10292

160:                                              ; preds = %150
  call void @config_close(ptr noundef %4), !dbg !10294
  store i1 true, ptr %2, align 1, !dbg !10295
  br label %161, !dbg !10295

161:                                              ; preds = %160, %20, %16
  %162 = load i1, ptr %2, align 1, !dbg !10296
  ret i1 %162, !dbg !10296
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i16 @get_number_of_cpus() #0 !dbg !10297 {
  %1 = alloca i16, align 2
  %2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !10300, metadata !DIExpression()), !dbg !10301
  %3 = call i64 @sysconf(i32 noundef 84) #17, !dbg !10302
  store i64 %3, ptr %2, align 8, !dbg !10301
  %4 = load i64, ptr %2, align 8, !dbg !10303
  %5 = icmp slt i64 %4, 0, !dbg !10303
  %6 = zext i1 %5 to i32, !dbg !10303
  %7 = sext i32 %6 to i64, !dbg !10303
  %8 = icmp ne i64 %7, 0, !dbg !10303
  br i1 %8, label %9, label %10, !dbg !10305

9:                                                ; preds = %0
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_warning_debug(ptr noundef @.str.60, i32 noundef 427, ptr noundef @__FUNCTION__.get_number_of_cpus, ptr noundef @.str.56), !dbg !10306
  store i16 1, ptr %1, align 2, !dbg !10308
  br label %13, !dbg !10308

10:                                               ; preds = %0
  %11 = load i64, ptr %2, align 8, !dbg !10309
  %12 = trunc i64 %11 to i16, !dbg !10310
  store i16 %12, ptr %1, align 2, !dbg !10311
  br label %13, !dbg !10311

13:                                               ; preds = %10, %9
  %14 = load i16, ptr %1, align 2, !dbg !10312
  ret i16 %14, !dbg !10312
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @setup_open_file_count_limits() #0 !dbg !10313 {
  %1 = alloca i64, align 8
  %2 = alloca %struct.anon.3, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !10316, metadata !DIExpression()), !dbg !10321
  %3 = call i32 @getrlimit(i32 noundef 7, ptr noundef %2) #17, !dbg !10322
  %4 = icmp slt i32 %3, 0, !dbg !10324
  br i1 %4, label %5, label %6, !dbg !10325

5:                                                ; preds = %0
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.60, i32 noundef 398, ptr noundef @__FUNCTION__.setup_open_file_count_limits, ptr noundef @.str.57) #24, !dbg !10326
  unreachable, !dbg !10326

6:                                                ; preds = %0
  %7 = getelementptr inbounds %struct.anon.3, ptr %2, i32 0, i32 1, !dbg !10327
  %8 = load i64, ptr %7, align 8, !dbg !10327
  %9 = getelementptr inbounds %struct.anon.3, ptr %2, i32 0, i32 0, !dbg !10329
  %10 = load i64, ptr %9, align 8, !dbg !10329
  %11 = icmp eq i64 %8, %10, !dbg !10330
  br i1 %11, label %12, label %15, !dbg !10331

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.anon.3, ptr %2, i32 0, i32 0, !dbg !10332
  %14 = load i64, ptr %13, align 8, !dbg !10332
  store i64 %14, ptr %1, align 8, !dbg !10333
  br label %41, !dbg !10333

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.anon.3, ptr %2, i32 0, i32 1, !dbg !10334
  %17 = load i64, ptr %16, align 8, !dbg !10334
  %18 = icmp eq i64 %17, -1, !dbg !10336
  br i1 %18, label %19, label %23, !dbg !10337

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.anon.3, ptr %2, i32 0, i32 0, !dbg !10338
  %21 = load i64, ptr %20, align 8, !dbg !10339
  %22 = mul i64 %21, 8, !dbg !10339
  store i64 %22, ptr %20, align 8, !dbg !10339
  br label %34, !dbg !10340

23:                                               ; preds = %15
  %24 = getelementptr inbounds %struct.anon.3, ptr %2, i32 0, i32 0, !dbg !10341
  %25 = load i64, ptr %24, align 8, !dbg !10341
  %26 = getelementptr inbounds %struct.anon.3, ptr %2, i32 0, i32 1, !dbg !10343
  %27 = load i64, ptr %26, align 8, !dbg !10343
  %28 = icmp ult i64 %25, %27, !dbg !10344
  br i1 %28, label %29, label %33, !dbg !10345

29:                                               ; preds = %23
  %30 = getelementptr inbounds %struct.anon.3, ptr %2, i32 0, i32 1, !dbg !10346
  %31 = load i64, ptr %30, align 8, !dbg !10346
  %32 = getelementptr inbounds %struct.anon.3, ptr %2, i32 0, i32 0, !dbg !10347
  store i64 %31, ptr %32, align 8, !dbg !10348
  br label %33, !dbg !10349

33:                                               ; preds = %29, %23
  br label %34

34:                                               ; preds = %33, %19
  %35 = call i32 @setrlimit(i32 noundef 7, ptr noundef %2) #17, !dbg !10350
  %36 = icmp slt i32 %35, 0, !dbg !10352
  br i1 %36, label %37, label %38, !dbg !10353

37:                                               ; preds = %34
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.60, i32 noundef 409, ptr noundef @__FUNCTION__.setup_open_file_count_limits, ptr noundef @.str.58) #24, !dbg !10354
  unreachable, !dbg !10354

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.anon.3, ptr %2, i32 0, i32 0, !dbg !10355
  %40 = load i64, ptr %39, align 8, !dbg !10355
  store i64 %40, ptr %1, align 8, !dbg !10356
  br label %41, !dbg !10356

41:                                               ; preds = %38, %12
  %42 = load i64, ptr %1, align 8, !dbg !10357
  ret i64 %42, !dbg !10357
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @allocate_connections(ptr noundef %0, i64 noundef %1) #0 !dbg !10358 {
  %3 = alloca ptr, align 8
  %4 = alloca i64, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !10361, metadata !DIExpression()), !dbg !10362
  store i64 %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !10363, metadata !DIExpression()), !dbg !10364
  %5 = load i64, ptr %4, align 8, !dbg !10365
  %6 = call noalias ptr @calloc(i64 noundef %5, i64 noundef 32) #19, !dbg !10366
  %7 = load ptr, ptr %3, align 8, !dbg !10367
  %8 = getelementptr inbounds %struct.lwan_t_, ptr %7, i32 0, i32 1, !dbg !10368
  store ptr %6, ptr %8, align 8, !dbg !10369
  %9 = load ptr, ptr %3, align 8, !dbg !10370
  %10 = getelementptr inbounds %struct.lwan_t_, ptr %9, i32 0, i32 1, !dbg !10372
  %11 = load ptr, ptr %10, align 8, !dbg !10372
  %12 = icmp ne ptr %11, null, !dbg !10370
  br i1 %12, label %14, label %13, !dbg !10373

13:                                               ; preds = %2
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.60, i32 noundef 419, ptr noundef @__FUNCTION__.allocate_connections, ptr noundef @.str.59) #24, !dbg !10374
  unreachable, !dbg !10374

14:                                               ; preds = %2
  ret void, !dbg !10375
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_status_info_debug(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3, ...) #0 !dbg !10376 {
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca [1 x %struct.__va_list_tag], align 16
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !10377, metadata !DIExpression()), !dbg !10378
  store i32 %1, ptr %6, align 4
  call void @llvm.dbg.declare(metadata ptr %6, metadata !10379, metadata !DIExpression()), !dbg !10378
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !10380, metadata !DIExpression()), !dbg !10378
  store ptr %3, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !10381, metadata !DIExpression()), !dbg !10378
  %10 = load volatile i8, ptr @quiet, align 1, !dbg !10382
  %11 = trunc i8 %10 to i1, !dbg !10382
  br i1 %11, label %20, label %12, !dbg !10378

12:                                               ; preds = %4
  call void @llvm.dbg.declare(metadata ptr %9, metadata !10384, metadata !DIExpression()), !dbg !10386
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !10386
  call void @llvm.va_start(ptr %13), !dbg !10386
  %14 = load ptr, ptr %5, align 8, !dbg !10386
  %15 = load i32, ptr %6, align 4, !dbg !10386
  %16 = load ptr, ptr %7, align 8, !dbg !10386
  %17 = load ptr, ptr %8, align 8, !dbg !10386
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !10386
  call void @status_out(ptr noundef %14, i32 noundef %15, ptr noundef %16, i32 noundef 1, ptr noundef %17, ptr noundef %18), !dbg !10386
  %19 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !10386
  call void @llvm.va_end(ptr %19), !dbg !10386
  br label %20, !dbg !10386

20:                                               ; preds = %12, %4
  ret void, !dbg !10378
}

; Function Attrs: nounwind
declare ptr @signal(i32 noundef, ptr noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_thread_init(ptr noundef %0) #0 !dbg !10387 {
  %2 = alloca ptr, align 8
  %3 = alloca i16, align 2
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !10458, metadata !DIExpression()), !dbg !10459
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.380, i32 noundef 414, ptr noundef @__FUNCTION__.lwan_thread_init, ptr noundef @.str.5.389), !dbg !10460
  %4 = load ptr, ptr %2, align 8, !dbg !10461
  %5 = getelementptr inbounds %struct.lwan_t_, ptr %4, i32 0, i32 2, !dbg !10462
  %6 = getelementptr inbounds %struct.anon, ptr %5, i32 0, i32 2, !dbg !10463
  %7 = load i16, ptr %6, align 4, !dbg !10463
  %8 = zext i16 %7 to i64, !dbg !10464
  %9 = call noalias ptr @calloc(i64 noundef %8, i64 noundef 104) #19, !dbg !10465
  %10 = load ptr, ptr %2, align 8, !dbg !10466
  %11 = getelementptr inbounds %struct.lwan_t_, ptr %10, i32 0, i32 2, !dbg !10467
  %12 = getelementptr inbounds %struct.anon, ptr %11, i32 0, i32 0, !dbg !10468
  store ptr %9, ptr %12, align 8, !dbg !10469
  %13 = load ptr, ptr %2, align 8, !dbg !10470
  %14 = getelementptr inbounds %struct.lwan_t_, ptr %13, i32 0, i32 2, !dbg !10472
  %15 = getelementptr inbounds %struct.anon, ptr %14, i32 0, i32 0, !dbg !10473
  %16 = load ptr, ptr %15, align 8, !dbg !10473
  %17 = icmp ne ptr %16, null, !dbg !10470
  br i1 %17, label %19, label %18, !dbg !10474

18:                                               ; preds = %1
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_debug(ptr noundef @.str.380, i32 noundef 418, ptr noundef @__FUNCTION__.lwan_thread_init, ptr noundef @.str.6.390) #24, !dbg !10475
  unreachable, !dbg !10475

19:                                               ; preds = %1
  call void @llvm.dbg.declare(metadata ptr %3, metadata !10476, metadata !DIExpression()), !dbg !10478
  store i16 0, ptr %3, align 2, !dbg !10478
  br label %20, !dbg !10479

20:                                               ; preds = %38, %19
  %21 = load i16, ptr %3, align 2, !dbg !10480
  %22 = sext i16 %21 to i32, !dbg !10480
  %23 = load ptr, ptr %2, align 8, !dbg !10482
  %24 = getelementptr inbounds %struct.lwan_t_, ptr %23, i32 0, i32 2, !dbg !10483
  %25 = getelementptr inbounds %struct.anon, ptr %24, i32 0, i32 2, !dbg !10484
  %26 = load i16, ptr %25, align 4, !dbg !10484
  %27 = zext i16 %26 to i32, !dbg !10482
  %28 = icmp slt i32 %22, %27, !dbg !10485
  br i1 %28, label %29, label %41, !dbg !10486

29:                                               ; preds = %20
  %30 = load ptr, ptr %2, align 8, !dbg !10487
  %31 = load ptr, ptr %2, align 8, !dbg !10488
  %32 = getelementptr inbounds %struct.lwan_t_, ptr %31, i32 0, i32 2, !dbg !10489
  %33 = getelementptr inbounds %struct.anon, ptr %32, i32 0, i32 0, !dbg !10490
  %34 = load ptr, ptr %33, align 8, !dbg !10490
  %35 = load i16, ptr %3, align 2, !dbg !10491
  %36 = sext i16 %35 to i64, !dbg !10488
  %37 = getelementptr inbounds %struct.lwan_thread_t_, ptr %34, i64 %36, !dbg !10488
  call void @create_thread(ptr noundef %30, ptr noundef %37), !dbg !10492
  br label %38, !dbg !10492

38:                                               ; preds = %29
  %39 = load i16, ptr %3, align 2, !dbg !10493
  %40 = add i16 %39, 1, !dbg !10493
  store i16 %40, ptr %3, align 2, !dbg !10493
  br label %20, !dbg !10494, !llvm.loop !10495

41:                                               ; preds = %20
  ret void, !dbg !10497
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_socket_init(ptr noundef %0) #0 !dbg !10498 {
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.linger, align 4
  %6 = alloca [1 x i32], align 4
  %7 = alloca [1 x i32], align 4
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !10569, metadata !DIExpression()), !dbg !10570
  call void @llvm.dbg.declare(metadata ptr %3, metadata !10571, metadata !DIExpression()), !dbg !10572
  call void @llvm.dbg.declare(metadata ptr %4, metadata !10573, metadata !DIExpression()), !dbg !10574
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.186, i32 noundef 233, ptr noundef @__FUNCTION__.lwan_socket_init, ptr noundef @.str.1.187), !dbg !10575
  %8 = call i32 @sd_listen_fds(i32 noundef 1), !dbg !10576
  store i32 %8, ptr %4, align 4, !dbg !10577
  %9 = load i32, ptr %4, align 4, !dbg !10578
  %10 = icmp sgt i32 %9, 1, !dbg !10580
  br i1 %10, label %11, label %12, !dbg !10581

11:                                               ; preds = %1
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_debug(ptr noundef @.str.186, i32 noundef 237, ptr noundef @__FUNCTION__.lwan_socket_init, ptr noundef @.str.2.188) #24, !dbg !10582
  unreachable, !dbg !10582

12:                                               ; preds = %1
  %13 = load i32, ptr %4, align 4, !dbg !10584
  %14 = icmp eq i32 %13, 1, !dbg !10586
  br i1 %14, label %15, label %17, !dbg !10587

15:                                               ; preds = %12
  %16 = call i32 @setup_socket_from_systemd(), !dbg !10588
  store i32 %16, ptr %3, align 4, !dbg !10590
  br label %20, !dbg !10591

17:                                               ; preds = %12
  %18 = load ptr, ptr %2, align 8, !dbg !10592
  %19 = call i32 @setup_socket_normally(ptr noundef %18), !dbg !10594
  store i32 %19, ptr %3, align 4, !dbg !10595
  br label %20

20:                                               ; preds = %17, %15
  br label %21

21:                                               ; preds = %20
  br label %22, !dbg !10596

22:                                               ; preds = %21
  %23 = load i32, ptr %3, align 4, !dbg !10597
  %24 = getelementptr inbounds %struct.linger, ptr %5, i32 0, i32 0, !dbg !10597
  store i32 1, ptr %24, align 4, !dbg !10597
  %25 = getelementptr inbounds %struct.linger, ptr %5, i32 0, i32 1, !dbg !10597
  store i32 1, ptr %25, align 4, !dbg !10597
  %26 = call i32 @setsockopt(i32 noundef %23, i32 noundef 1, i32 noundef 13, ptr noundef %5, i32 noundef 8) #17, !dbg !10597
  %27 = icmp slt i32 %26, 0, !dbg !10597
  br i1 %27, label %28, label %29, !dbg !10600

28:                                               ; preds = %22
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.186, i32 noundef 245, ptr noundef @__FUNCTION__.lwan_socket_init, ptr noundef @.str.3.189) #24, !dbg !10597
  unreachable, !dbg !10597

29:                                               ; preds = %22
  br label %30, !dbg !10600

30:                                               ; preds = %29
  br label %31, !dbg !10601

31:                                               ; preds = %30
  %32 = load i32, ptr %3, align 4, !dbg !10602
  %33 = getelementptr inbounds [1 x i32], ptr %6, i64 0, i64 0, !dbg !10602
  store i32 5, ptr %33, align 4, !dbg !10602
  %34 = getelementptr inbounds [1 x i32], ptr %6, i64 0, i64 0, !dbg !10602
  %35 = call i32 @setsockopt(i32 noundef %32, i32 noundef 6, i32 noundef 23, ptr noundef %34, i32 noundef 4) #17, !dbg !10602
  %36 = icmp slt i32 %35, 0, !dbg !10602
  br i1 %36, label %37, label %38, !dbg !10605

37:                                               ; preds = %31
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_warning_debug(ptr noundef @.str.186, i32 noundef 248, ptr noundef @__FUNCTION__.lwan_socket_init, ptr noundef @.str.4.190, ptr noundef @.str.5.191), !dbg !10602
  br label %38, !dbg !10602

38:                                               ; preds = %37, %31
  br label %39, !dbg !10605

39:                                               ; preds = %38
  br label %40, !dbg !10606

40:                                               ; preds = %39
  %41 = load i32, ptr %3, align 4, !dbg !10607
  %42 = getelementptr inbounds [1 x i32], ptr %7, i64 0, i64 0, !dbg !10607
  store i32 0, ptr %42, align 4, !dbg !10607
  %43 = getelementptr inbounds [1 x i32], ptr %7, i64 0, i64 0, !dbg !10607
  %44 = call i32 @setsockopt(i32 noundef %41, i32 noundef 6, i32 noundef 12, ptr noundef %43, i32 noundef 4) #17, !dbg !10607
  %45 = icmp slt i32 %44, 0, !dbg !10607
  br i1 %45, label %46, label %47, !dbg !10610

46:                                               ; preds = %40
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_warning_debug(ptr noundef @.str.186, i32 noundef 250, ptr noundef @__FUNCTION__.lwan_socket_init, ptr noundef @.str.4.190, ptr noundef @.str.6.192), !dbg !10607
  br label %47, !dbg !10607

47:                                               ; preds = %46, %40
  br label %48, !dbg !10610

48:                                               ; preds = %47
  %49 = load i32, ptr %3, align 4, !dbg !10611
  %50 = load ptr, ptr %2, align 8, !dbg !10612
  %51 = getelementptr inbounds %struct.lwan_t_, ptr %50, i32 0, i32 5, !dbg !10613
  store i32 %49, ptr %51, align 8, !dbg !10614
  ret void, !dbg !10615
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @sd_listen_fds(i32 noundef %0) #0 !dbg !10616 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  store i32 %0, ptr %2, align 4
  call void @llvm.dbg.declare(metadata ptr %2, metadata !10619, metadata !DIExpression()), !dbg !10620
  call void @llvm.dbg.declare(metadata ptr %3, metadata !10621, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.declare(metadata ptr %4, metadata !10623, metadata !DIExpression()), !dbg !10624
  call void @llvm.dbg.declare(metadata ptr %5, metadata !10625, metadata !DIExpression()), !dbg !10626
  call void @llvm.dbg.declare(metadata ptr %6, metadata !10627, metadata !DIExpression()), !dbg !10628
  store ptr null, ptr %6, align 8, !dbg !10628
  call void @llvm.dbg.declare(metadata ptr %7, metadata !10629, metadata !DIExpression()), !dbg !10630
  %9 = call ptr @getenv(ptr noundef @.str.430) #17, !dbg !10631
  store ptr %9, ptr %5, align 8, !dbg !10632
  %10 = load ptr, ptr %5, align 8, !dbg !10633
  %11 = icmp ne ptr %10, null, !dbg !10633
  br i1 %11, label %13, label %12, !dbg !10635

12:                                               ; preds = %1
  store i32 0, ptr %3, align 4, !dbg !10636
  br label %113, !dbg !10638

13:                                               ; preds = %1
  %14 = call ptr @__errno_location() #21, !dbg !10639
  store i32 0, ptr %14, align 4, !dbg !10640
  %15 = load ptr, ptr %5, align 8, !dbg !10641
  %16 = call i64 @strtoul(ptr noundef %15, ptr noundef %6, i32 noundef 10) #17, !dbg !10642
  store i64 %16, ptr %7, align 8, !dbg !10643
  %17 = call ptr @__errno_location() #21, !dbg !10644
  %18 = load i32, ptr %17, align 4, !dbg !10644
  %19 = icmp sgt i32 %18, 0, !dbg !10646
  br i1 %19, label %20, label %24, !dbg !10647

20:                                               ; preds = %13
  %21 = call ptr @__errno_location() #21, !dbg !10648
  %22 = load i32, ptr %21, align 4, !dbg !10648
  %23 = sub nsw i32 0, %22, !dbg !10650
  store i32 %23, ptr %3, align 4, !dbg !10651
  br label %113, !dbg !10652

24:                                               ; preds = %13
  %25 = load ptr, ptr %6, align 8, !dbg !10653
  %26 = icmp ne ptr %25, null, !dbg !10653
  br i1 %26, label %27, label %39, !dbg !10655

27:                                               ; preds = %24
  %28 = load ptr, ptr %6, align 8, !dbg !10656
  %29 = load ptr, ptr %5, align 8, !dbg !10657
  %30 = icmp eq ptr %28, %29, !dbg !10658
  br i1 %30, label %39, label %31, !dbg !10659

31:                                               ; preds = %27
  %32 = load ptr, ptr %6, align 8, !dbg !10660
  %33 = load i8, ptr %32, align 1, !dbg !10661
  %34 = sext i8 %33 to i32, !dbg !10661
  %35 = icmp ne i32 %34, 0, !dbg !10661
  br i1 %35, label %39, label %36, !dbg !10662

36:                                               ; preds = %31
  %37 = load i64, ptr %7, align 8, !dbg !10663
  %38 = icmp ule i64 %37, 0, !dbg !10664
  br i1 %38, label %39, label %40, !dbg !10665

39:                                               ; preds = %36, %31, %27, %24
  store i32 -22, ptr %3, align 4, !dbg !10666
  br label %113, !dbg !10668

40:                                               ; preds = %36
  %41 = call i32 @getpid() #17, !dbg !10669
  %42 = load i64, ptr %7, align 8, !dbg !10671
  %43 = trunc i64 %42 to i32, !dbg !10672
  %44 = icmp ne i32 %41, %43, !dbg !10673
  br i1 %44, label %45, label %46, !dbg !10674

45:                                               ; preds = %40
  store i32 0, ptr %3, align 4, !dbg !10675
  br label %113, !dbg !10677

46:                                               ; preds = %40
  %47 = call ptr @getenv(ptr noundef @.str.1.431) #17, !dbg !10678
  store ptr %47, ptr %5, align 8, !dbg !10679
  %48 = load ptr, ptr %5, align 8, !dbg !10680
  %49 = icmp ne ptr %48, null, !dbg !10680
  br i1 %49, label %51, label %50, !dbg !10682

50:                                               ; preds = %46
  store i32 0, ptr %3, align 4, !dbg !10683
  br label %113, !dbg !10685

51:                                               ; preds = %46
  %52 = call ptr @__errno_location() #21, !dbg !10686
  store i32 0, ptr %52, align 4, !dbg !10687
  %53 = load ptr, ptr %5, align 8, !dbg !10688
  %54 = call i64 @strtoul(ptr noundef %53, ptr noundef %6, i32 noundef 10) #17, !dbg !10689
  store i64 %54, ptr %7, align 8, !dbg !10690
  %55 = call ptr @__errno_location() #21, !dbg !10691
  %56 = load i32, ptr %55, align 4, !dbg !10691
  %57 = icmp sgt i32 %56, 0, !dbg !10693
  br i1 %57, label %58, label %62, !dbg !10694

58:                                               ; preds = %51
  %59 = call ptr @__errno_location() #21, !dbg !10695
  %60 = load i32, ptr %59, align 4, !dbg !10695
  %61 = sub nsw i32 0, %60, !dbg !10697
  store i32 %61, ptr %3, align 4, !dbg !10698
  br label %113, !dbg !10699

62:                                               ; preds = %51
  %63 = load ptr, ptr %6, align 8, !dbg !10700
  %64 = icmp ne ptr %63, null, !dbg !10700
  br i1 %64, label %65, label %74, !dbg !10702

65:                                               ; preds = %62
  %66 = load ptr, ptr %6, align 8, !dbg !10703
  %67 = load ptr, ptr %5, align 8, !dbg !10704
  %68 = icmp eq ptr %66, %67, !dbg !10705
  br i1 %68, label %74, label %69, !dbg !10706

69:                                               ; preds = %65
  %70 = load ptr, ptr %6, align 8, !dbg !10707
  %71 = load i8, ptr %70, align 1, !dbg !10708
  %72 = sext i8 %71 to i32, !dbg !10708
  %73 = icmp ne i32 %72, 0, !dbg !10708
  br i1 %73, label %74, label %75, !dbg !10709

74:                                               ; preds = %69, %65, %62
  store i32 -22, ptr %3, align 4, !dbg !10710
  br label %113, !dbg !10712

75:                                               ; preds = %69
  store i32 3, ptr %4, align 4, !dbg !10713
  br label %76, !dbg !10715

76:                                               ; preds = %107, %75
  %77 = load i32, ptr %4, align 4, !dbg !10716
  %78 = load i64, ptr %7, align 8, !dbg !10718
  %79 = trunc i64 %78 to i32, !dbg !10719
  %80 = add nsw i32 3, %79, !dbg !10720
  %81 = icmp slt i32 %77, %80, !dbg !10721
  br i1 %81, label %82, label %110, !dbg !10722

82:                                               ; preds = %76
  call void @llvm.dbg.declare(metadata ptr %8, metadata !10723, metadata !DIExpression()), !dbg !10725
  %83 = load i32, ptr %4, align 4, !dbg !10726
  %84 = call i32 (i32, i32, ...) @fcntl(i32 noundef %83, i32 noundef 1), !dbg !10727
  store i32 %84, ptr %8, align 4, !dbg !10728
  %85 = load i32, ptr %8, align 4, !dbg !10729
  %86 = icmp slt i32 %85, 0, !dbg !10731
  br i1 %86, label %87, label %91, !dbg !10732

87:                                               ; preds = %82
  %88 = call ptr @__errno_location() #21, !dbg !10733
  %89 = load i32, ptr %88, align 4, !dbg !10733
  %90 = sub nsw i32 0, %89, !dbg !10735
  store i32 %90, ptr %3, align 4, !dbg !10736
  br label %113, !dbg !10737

91:                                               ; preds = %82
  %92 = load i32, ptr %8, align 4, !dbg !10738
  %93 = and i32 %92, 1, !dbg !10740
  %94 = icmp ne i32 %93, 0, !dbg !10740
  br i1 %94, label %95, label %96, !dbg !10741

95:                                               ; preds = %91
  br label %107, !dbg !10742

96:                                               ; preds = %91
  %97 = load i32, ptr %4, align 4, !dbg !10743
  %98 = load i32, ptr %8, align 4, !dbg !10745
  %99 = or i32 %98, 1, !dbg !10746
  %100 = call i32 (i32, i32, ...) @fcntl(i32 noundef %97, i32 noundef 2, i32 noundef %99), !dbg !10747
  %101 = icmp slt i32 %100, 0, !dbg !10748
  br i1 %101, label %102, label %106, !dbg !10749

102:                                              ; preds = %96
  %103 = call ptr @__errno_location() #21, !dbg !10750
  %104 = load i32, ptr %103, align 4, !dbg !10750
  %105 = sub nsw i32 0, %104, !dbg !10752
  store i32 %105, ptr %3, align 4, !dbg !10753
  br label %113, !dbg !10754

106:                                              ; preds = %96
  br label %107, !dbg !10755

107:                                              ; preds = %106, %95
  %108 = load i32, ptr %4, align 4, !dbg !10756
  %109 = add nsw i32 %108, 1, !dbg !10756
  store i32 %109, ptr %4, align 4, !dbg !10756
  br label %76, !dbg !10757, !llvm.loop !10758

110:                                              ; preds = %76
  %111 = load i64, ptr %7, align 8, !dbg !10760
  %112 = trunc i64 %111 to i32, !dbg !10761
  store i32 %112, ptr %3, align 4, !dbg !10762
  br label %113, !dbg !10763

113:                                              ; preds = %110, %102, %87, %74, %58, %50, %45, %39, %20, %12
  call void @llvm.dbg.label(metadata !10764), !dbg !10765
  %114 = load i32, ptr %2, align 4, !dbg !10766
  %115 = icmp ne i32 %114, 0, !dbg !10766
  br i1 %115, label %116, label %119, !dbg !10768

116:                                              ; preds = %113
  %117 = call i32 @unsetenv(ptr noundef @.str.430) #17, !dbg !10769
  %118 = call i32 @unsetenv(ptr noundef @.str.1.431) #17, !dbg !10771
  br label %119, !dbg !10772

119:                                              ; preds = %116, %113
  %120 = load i32, ptr %3, align 4, !dbg !10773
  ret i32 %120, !dbg !10774
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @lwan_status_critical_debug(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3, ...) #13 !dbg !10775 {
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca [1 x %struct.__va_list_tag], align 16
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !10776, metadata !DIExpression()), !dbg !10777
  store i32 %1, ptr %6, align 4
  call void @llvm.dbg.declare(metadata ptr %6, metadata !10778, metadata !DIExpression()), !dbg !10777
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !10779, metadata !DIExpression()), !dbg !10777
  store ptr %3, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !10780, metadata !DIExpression()), !dbg !10777
  %10 = load volatile i8, ptr @quiet, align 1, !dbg !10781
  %11 = trunc i8 %10 to i1, !dbg !10781
  br i1 %11, label %20, label %12, !dbg !10777

12:                                               ; preds = %4
  call void @llvm.dbg.declare(metadata ptr %9, metadata !10783, metadata !DIExpression()), !dbg !10785
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !10785
  call void @llvm.va_start(ptr %13), !dbg !10785
  %14 = load ptr, ptr %5, align 8, !dbg !10785
  %15 = load i32, ptr %6, align 4, !dbg !10785
  %16 = load ptr, ptr %7, align 8, !dbg !10785
  %17 = load ptr, ptr %8, align 8, !dbg !10785
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !10785
  call void @status_out(ptr noundef %14, i32 noundef %15, ptr noundef %16, i32 noundef 16, ptr noundef %17, ptr noundef %18), !dbg !10785
  %19 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !10785
  call void @llvm.va_end(ptr %19), !dbg !10785
  br label %20, !dbg !10785

20:                                               ; preds = %12, %4
  call void @abort() #23, !dbg !10786
  unreachable, !dbg !10786
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setup_socket_from_systemd() #0 !dbg !10788 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata ptr %1, metadata !10791, metadata !DIExpression()), !dbg !10792
  store i32 3, ptr %1, align 4, !dbg !10792
  %3 = load i32, ptr %1, align 4, !dbg !10793
  %4 = call i32 @sd_is_socket_inet(i32 noundef %3, i32 noundef 0, i32 noundef 1, i32 noundef 1, i16 noundef zeroext 0), !dbg !10795
  %5 = icmp ne i32 %4, 0, !dbg !10795
  br i1 %5, label %7, label %6, !dbg !10796

6:                                                ; preds = %0
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_debug(ptr noundef @.str.186, i32 noundef 65, ptr noundef @__FUNCTION__.setup_socket_from_systemd, ptr noundef @.str.7.208) #24, !dbg !10797
  unreachable, !dbg !10797

7:                                                ; preds = %0
  call void @llvm.dbg.declare(metadata ptr %2, metadata !10798, metadata !DIExpression()), !dbg !10799
  %8 = load i32, ptr %1, align 4, !dbg !10800
  %9 = call i32 (i32, i32, ...) @fcntl(i32 noundef %8, i32 noundef 1), !dbg !10801
  store i32 %9, ptr %2, align 4, !dbg !10799
  %10 = load i32, ptr %2, align 4, !dbg !10802
  %11 = icmp slt i32 %10, 0, !dbg !10804
  br i1 %11, label %12, label %13, !dbg !10805

12:                                               ; preds = %7
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.186, i32 noundef 69, ptr noundef @__FUNCTION__.setup_socket_from_systemd, ptr noundef @.str.8.209) #24, !dbg !10806
  unreachable, !dbg !10806

13:                                               ; preds = %7
  %14 = load i32, ptr %1, align 4, !dbg !10807
  %15 = load i32, ptr %2, align 4, !dbg !10809
  %16 = or i32 %15, 1, !dbg !10810
  %17 = call i32 (i32, i32, ...) @fcntl(i32 noundef %14, i32 noundef 2, i32 noundef %16), !dbg !10811
  %18 = icmp slt i32 %17, 0, !dbg !10812
  br i1 %18, label %19, label %20, !dbg !10813

19:                                               ; preds = %13
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.186, i32 noundef 71, ptr noundef @__FUNCTION__.setup_socket_from_systemd, ptr noundef @.str.9.210) #24, !dbg !10814
  unreachable, !dbg !10814

20:                                               ; preds = %13
  %21 = load i32, ptr %1, align 4, !dbg !10815
  ret i32 %21, !dbg !10816
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setup_socket_normally(ptr noundef %0) #0 !dbg !10817 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca i16, align 2
  %11 = alloca ptr, align 8
  %12 = alloca %struct.addrinfo, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !10820, metadata !DIExpression()), !dbg !10821
  call void @llvm.dbg.declare(metadata ptr %3, metadata !10822, metadata !DIExpression()), !dbg !10823
  call void @llvm.dbg.declare(metadata ptr %4, metadata !10824, metadata !DIExpression()), !dbg !10825
  call void @llvm.dbg.declare(metadata ptr %5, metadata !10826, metadata !DIExpression()), !dbg !10827
  call void @llvm.dbg.declare(metadata ptr %6, metadata !10828, metadata !DIExpression()), !dbg !10830
  %15 = load ptr, ptr %2, align 8, !dbg !10830
  %16 = getelementptr inbounds %struct.lwan_t_, ptr %15, i32 0, i32 4, !dbg !10830
  %17 = getelementptr inbounds %struct.lwan_config_t_, ptr %16, i32 0, i32 0, !dbg !10830
  %18 = load ptr, ptr %17, align 8, !dbg !10830
  store ptr %18, ptr %6, align 8, !dbg !10830
  call void @llvm.dbg.declare(metadata ptr %7, metadata !10831, metadata !DIExpression()), !dbg !10830
  %19 = load ptr, ptr %6, align 8, !dbg !10830
  %20 = call i64 @strlen(ptr noundef %19) #20, !dbg !10830
  %21 = add i64 %20, 1, !dbg !10830
  store i64 %21, ptr %7, align 8, !dbg !10830
  call void @llvm.dbg.declare(metadata ptr %8, metadata !10832, metadata !DIExpression()), !dbg !10830
  %22 = load i64, ptr %7, align 8, !dbg !10830
  %23 = alloca i8, i64 %22, align 16, !dbg !10830
  store ptr %23, ptr %8, align 8, !dbg !10830
  %24 = load ptr, ptr %8, align 8, !dbg !10830
  %25 = load ptr, ptr %6, align 8, !dbg !10830
  %26 = load i64, ptr %7, align 8, !dbg !10830
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %24, ptr align 1 %25, i64 %26, i1 false), !dbg !10830
  store ptr %24, ptr %9, align 8, !dbg !10830
  %27 = load ptr, ptr %9, align 8, !dbg !10830
  store ptr %27, ptr %5, align 8, !dbg !10827
  call void @llvm.dbg.declare(metadata ptr %10, metadata !10833, metadata !DIExpression()), !dbg !10834
  %28 = load ptr, ptr %5, align 8, !dbg !10835
  %29 = call zeroext i16 @parse_listener.193(ptr noundef %28, ptr noundef %3, ptr noundef %4), !dbg !10836
  store i16 %29, ptr %10, align 2, !dbg !10834
  %30 = load i16, ptr %10, align 2, !dbg !10837
  %31 = zext i16 %30 to i32, !dbg !10837
  %32 = icmp eq i32 %31, 0, !dbg !10839
  br i1 %32, label %33, label %38, !dbg !10840

33:                                               ; preds = %1
  %34 = load ptr, ptr %2, align 8, !dbg !10841
  %35 = getelementptr inbounds %struct.lwan_t_, ptr %34, i32 0, i32 4, !dbg !10841
  %36 = getelementptr inbounds %struct.lwan_config_t_, ptr %35, i32 0, i32 0, !dbg !10841
  %37 = load ptr, ptr %36, align 8, !dbg !10841
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_debug(ptr noundef @.str.186, i32 noundef 206, ptr noundef @__FUNCTION__.setup_socket_normally, ptr noundef @.str.10.194, ptr noundef %37) #24, !dbg !10841
  unreachable, !dbg !10841

38:                                               ; preds = %1
  call void @llvm.dbg.declare(metadata ptr %11, metadata !10842, metadata !DIExpression()), !dbg !10860
  call void @llvm.dbg.declare(metadata ptr %12, metadata !10861, metadata !DIExpression()), !dbg !10862
  call void @llvm.memset.p0.i64(ptr align 8 %12, i8 0, i64 48, i1 false), !dbg !10862
  %39 = getelementptr inbounds %struct.addrinfo, ptr %12, i32 0, i32 0, !dbg !10863
  store i32 1, ptr %39, align 8, !dbg !10863
  %40 = getelementptr inbounds %struct.addrinfo, ptr %12, i32 0, i32 1, !dbg !10863
  %41 = load i16, ptr %10, align 2, !dbg !10864
  %42 = zext i16 %41 to i32, !dbg !10864
  store i32 %42, ptr %40, align 4, !dbg !10863
  %43 = getelementptr inbounds %struct.addrinfo, ptr %12, i32 0, i32 2, !dbg !10863
  store i32 1, ptr %43, align 8, !dbg !10863
  call void @llvm.dbg.declare(metadata ptr %13, metadata !10865, metadata !DIExpression()), !dbg !10866
  %44 = load ptr, ptr %3, align 8, !dbg !10867
  %45 = load ptr, ptr %4, align 8, !dbg !10868
  %46 = call i32 @getaddrinfo(ptr noundef %44, ptr noundef %45, ptr noundef %12, ptr noundef %11), !dbg !10869
  store i32 %46, ptr %13, align 4, !dbg !10866
  %47 = load i32, ptr %13, align 4, !dbg !10870
  %48 = icmp ne i32 %47, 0, !dbg !10870
  br i1 %48, label %49, label %52, !dbg !10872

49:                                               ; preds = %38
  %50 = load i32, ptr %13, align 4, !dbg !10873
  %51 = call ptr @gai_strerror(i32 noundef %50) #17, !dbg !10873
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_debug(ptr noundef @.str.186, i32 noundef 217, ptr noundef @__FUNCTION__.setup_socket_normally, ptr noundef @.str.11.195, ptr noundef %51) #24, !dbg !10873
  unreachable, !dbg !10873

52:                                               ; preds = %38
  call void @llvm.dbg.declare(metadata ptr %14, metadata !10874, metadata !DIExpression()), !dbg !10875
  %53 = load ptr, ptr %11, align 8, !dbg !10876
  %54 = load ptr, ptr %2, align 8, !dbg !10877
  %55 = getelementptr inbounds %struct.lwan_t_, ptr %54, i32 0, i32 4, !dbg !10878
  %56 = getelementptr inbounds %struct.lwan_config_t_, ptr %55, i32 0, i32 3, !dbg !10879
  %57 = load i8, ptr %56, align 1, !dbg !10879
  %58 = trunc i8 %57 to i1, !dbg !10879
  %59 = call i32 @bind_and_listen_addrinfos(ptr noundef %53, i1 noundef zeroext %58), !dbg !10880
  store i32 %59, ptr %14, align 4, !dbg !10875
  %60 = load ptr, ptr %11, align 8, !dbg !10881
  call void @freeaddrinfo(ptr noundef %60) #17, !dbg !10882
  %61 = load i32, ptr %14, align 4, !dbg !10883
  ret i32 %61, !dbg !10884
}

; Function Attrs: nounwind
declare i32 @setsockopt(i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i16 @parse_listener.193(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !10885 {
  %4 = alloca i16, align 2
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !10888, metadata !DIExpression()), !dbg !10889
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !10890, metadata !DIExpression()), !dbg !10891
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !10892, metadata !DIExpression()), !dbg !10893
  %8 = load ptr, ptr %5, align 8, !dbg !10894
  %9 = load i8, ptr %8, align 1, !dbg !10896
  %10 = sext i8 %9 to i32, !dbg !10896
  %11 = icmp eq i32 %10, 91, !dbg !10897
  br i1 %11, label %12, label %17, !dbg !10898

12:                                               ; preds = %3
  %13 = load ptr, ptr %5, align 8, !dbg !10899
  %14 = load ptr, ptr %6, align 8, !dbg !10900
  %15 = load ptr, ptr %7, align 8, !dbg !10901
  %16 = call zeroext i16 @parse_listener_ipv6(ptr noundef %13, ptr noundef %14, ptr noundef %15), !dbg !10902
  store i16 %16, ptr %4, align 2, !dbg !10903
  br label %22, !dbg !10903

17:                                               ; preds = %3
  %18 = load ptr, ptr %5, align 8, !dbg !10904
  %19 = load ptr, ptr %6, align 8, !dbg !10905
  %20 = load ptr, ptr %7, align 8, !dbg !10906
  %21 = call zeroext i16 @parse_listener_ipv4(ptr noundef %18, ptr noundef %19, ptr noundef %20), !dbg !10907
  store i16 %21, ptr %4, align 2, !dbg !10908
  br label %22, !dbg !10908

22:                                               ; preds = %17, %12
  %23 = load i16, ptr %4, align 2, !dbg !10909
  ret i16 %23, !dbg !10909
}

declare i32 @getaddrinfo(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #5

; Function Attrs: nounwind
declare ptr @gai_strerror(i32 noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bind_and_listen_addrinfos(ptr noundef %0, i1 noundef zeroext %1) #0 !dbg !10910 {
  %3 = alloca ptr, align 8
  %4 = alloca i8, align 1
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca [1 x i32], align 4
  %8 = alloca [1 x i32], align 4
  %9 = alloca %union.__SOCKADDR_ARG, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !10913, metadata !DIExpression()), !dbg !10914
  %10 = zext i1 %1 to i8
  store i8 %10, ptr %4, align 1
  call void @llvm.dbg.declare(metadata ptr %4, metadata !10915, metadata !DIExpression()), !dbg !10916
  call void @llvm.dbg.declare(metadata ptr %5, metadata !10917, metadata !DIExpression()), !dbg !10920
  %11 = load ptr, ptr %3, align 8, !dbg !10921
  store ptr %11, ptr %5, align 8, !dbg !10923
  br label %12, !dbg !10924

12:                                               ; preds = %70, %2
  %13 = load ptr, ptr %5, align 8, !dbg !10925
  %14 = icmp ne ptr %13, null, !dbg !10927
  br i1 %14, label %15, label %74, !dbg !10927

15:                                               ; preds = %12
  call void @llvm.dbg.declare(metadata ptr %6, metadata !10928, metadata !DIExpression()), !dbg !10930
  %16 = load ptr, ptr %5, align 8, !dbg !10931
  %17 = getelementptr inbounds %struct.addrinfo, ptr %16, i32 0, i32 1, !dbg !10932
  %18 = load i32, ptr %17, align 4, !dbg !10932
  %19 = load ptr, ptr %5, align 8, !dbg !10933
  %20 = getelementptr inbounds %struct.addrinfo, ptr %19, i32 0, i32 2, !dbg !10934
  %21 = load i32, ptr %20, align 8, !dbg !10934
  %22 = or i32 %21, 524288, !dbg !10935
  %23 = load ptr, ptr %5, align 8, !dbg !10936
  %24 = getelementptr inbounds %struct.addrinfo, ptr %23, i32 0, i32 3, !dbg !10937
  %25 = load i32, ptr %24, align 4, !dbg !10937
  %26 = call i32 @socket(i32 noundef %18, i32 noundef %22, i32 noundef %25) #17, !dbg !10938
  store i32 %26, ptr %6, align 4, !dbg !10930
  %27 = load i32, ptr %6, align 4, !dbg !10939
  %28 = icmp slt i32 %27, 0, !dbg !10941
  br i1 %28, label %29, label %30, !dbg !10942

29:                                               ; preds = %15
  br label %70, !dbg !10943

30:                                               ; preds = %15
  br label %31, !dbg !10944

31:                                               ; preds = %30
  %32 = load i32, ptr %6, align 4, !dbg !10945
  %33 = getelementptr inbounds [1 x i32], ptr %7, i64 0, i64 0, !dbg !10945
  store i32 1, ptr %33, align 4, !dbg !10945
  %34 = getelementptr inbounds [1 x i32], ptr %7, i64 0, i64 0, !dbg !10945
  %35 = call i32 @setsockopt(i32 noundef %32, i32 noundef 1, i32 noundef 2, ptr noundef %34, i32 noundef 4) #17, !dbg !10945
  %36 = icmp slt i32 %35, 0, !dbg !10945
  br i1 %36, label %37, label %38, !dbg !10948

37:                                               ; preds = %31
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.186, i32 noundef 186, ptr noundef @__FUNCTION__.bind_and_listen_addrinfos, ptr noundef @.str.3.189) #24, !dbg !10945
  unreachable, !dbg !10945

38:                                               ; preds = %31
  br label %39, !dbg !10948

39:                                               ; preds = %38
  br label %40, !dbg !10949

40:                                               ; preds = %39
  %41 = load i32, ptr %6, align 4, !dbg !10950
  %42 = getelementptr inbounds [1 x i32], ptr %8, i64 0, i64 0, !dbg !10950
  %43 = load i8, ptr %4, align 1, !dbg !10950
  %44 = trunc i8 %43 to i1, !dbg !10950
  %45 = zext i1 %44 to i32, !dbg !10950
  store i32 %45, ptr %42, align 4, !dbg !10950
  %46 = getelementptr inbounds [1 x i32], ptr %8, i64 0, i64 0, !dbg !10950
  %47 = call i32 @setsockopt(i32 noundef %41, i32 noundef 1, i32 noundef 15, ptr noundef %46, i32 noundef 4) #17, !dbg !10950
  %48 = icmp slt i32 %47, 0, !dbg !10950
  br i1 %48, label %49, label %50, !dbg !10953

49:                                               ; preds = %40
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_warning_debug(ptr noundef @.str.186, i32 noundef 188, ptr noundef @__FUNCTION__.bind_and_listen_addrinfos, ptr noundef @.str.4.190, ptr noundef @.str.15.196), !dbg !10950
  br label %50, !dbg !10950

50:                                               ; preds = %49, %40
  br label %51, !dbg !10953

51:                                               ; preds = %50
  %52 = load i32, ptr %6, align 4, !dbg !10954
  %53 = load ptr, ptr %5, align 8, !dbg !10956
  %54 = getelementptr inbounds %struct.addrinfo, ptr %53, i32 0, i32 5, !dbg !10957
  %55 = load ptr, ptr %54, align 8, !dbg !10957
  store ptr %55, ptr %9, align 8, !dbg !10956
  %56 = load ptr, ptr %5, align 8, !dbg !10958
  %57 = getelementptr inbounds %struct.addrinfo, ptr %56, i32 0, i32 4, !dbg !10959
  %58 = load i32, ptr %57, align 8, !dbg !10959
  %59 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %9, i32 0, i32 0, !dbg !10960
  %60 = load ptr, ptr %59, align 8, !dbg !10960
  %61 = call i32 @bind(i32 noundef %52, ptr %60, i32 noundef %58) #17, !dbg !10960
  %62 = icmp ne i32 %61, 0, !dbg !10960
  br i1 %62, label %67, label %63, !dbg !10961

63:                                               ; preds = %51
  %64 = load i32, ptr %6, align 4, !dbg !10962
  %65 = load ptr, ptr %5, align 8, !dbg !10963
  %66 = call i32 @listen_addrinfo(i32 noundef %64, ptr noundef %65), !dbg !10964
  ret i32 %66, !dbg !10965

67:                                               ; preds = %51
  %68 = load i32, ptr %6, align 4, !dbg !10966
  %69 = call i32 @close(i32 noundef %68), !dbg !10967
  br label %70, !dbg !10968

70:                                               ; preds = %67, %29
  %71 = load ptr, ptr %5, align 8, !dbg !10969
  %72 = getelementptr inbounds %struct.addrinfo, ptr %71, i32 0, i32 7, !dbg !10970
  %73 = load ptr, ptr %72, align 8, !dbg !10970
  store ptr %73, ptr %5, align 8, !dbg !10971
  br label %12, !dbg !10972, !llvm.loop !10973

74:                                               ; preds = %12
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_debug(ptr noundef @.str.186, i32 noundef 196, ptr noundef @__FUNCTION__.bind_and_listen_addrinfos, ptr noundef @.str.16.197) #24, !dbg !10975
  unreachable, !dbg !10975
}

; Function Attrs: nounwind
declare void @freeaddrinfo(ptr noundef) #2

; Function Attrs: nounwind
declare i32 @socket(i32 noundef, i32 noundef, i32 noundef) #2

; Function Attrs: nounwind
declare i32 @bind(i32 noundef, ptr, i32 noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @listen_addrinfo(i32 noundef %0, ptr noundef %1) #0 !dbg !10976 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca [1025 x i8], align 16
  %6 = alloca [32 x i8], align 16
  %7 = alloca i32, align 4
  store i32 %0, ptr %3, align 4
  call void @llvm.dbg.declare(metadata ptr %3, metadata !10979, metadata !DIExpression()), !dbg !10980
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !10981, metadata !DIExpression()), !dbg !10982
  %8 = load i32, ptr %3, align 4, !dbg !10983
  %9 = call i32 @get_backlog_size(), !dbg !10985
  %10 = call i32 @listen(i32 noundef %8, i32 noundef %9) #17, !dbg !10986
  %11 = icmp slt i32 %10, 0, !dbg !10987
  br i1 %11, label %12, label %13, !dbg !10988

12:                                               ; preds = %2
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.186, i32 noundef 141, ptr noundef @__FUNCTION__.listen_addrinfo, ptr noundef @.str.17.198) #24, !dbg !10989
  unreachable, !dbg !10989

13:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata ptr %5, metadata !10990, metadata !DIExpression()), !dbg !10994
  call void @llvm.dbg.declare(metadata ptr %6, metadata !10995, metadata !DIExpression()), !dbg !10996
  call void @llvm.dbg.declare(metadata ptr %7, metadata !10997, metadata !DIExpression()), !dbg !10998
  %14 = load ptr, ptr %4, align 8, !dbg !10999
  %15 = getelementptr inbounds %struct.addrinfo, ptr %14, i32 0, i32 5, !dbg !11000
  %16 = load ptr, ptr %15, align 8, !dbg !11000
  %17 = load ptr, ptr %4, align 8, !dbg !11001
  %18 = getelementptr inbounds %struct.addrinfo, ptr %17, i32 0, i32 4, !dbg !11002
  %19 = load i32, ptr %18, align 8, !dbg !11002
  %20 = getelementptr inbounds [1025 x i8], ptr %5, i64 0, i64 0, !dbg !11003
  %21 = getelementptr inbounds [32 x i8], ptr %6, i64 0, i64 0, !dbg !11004
  %22 = call i32 @getnameinfo(ptr noundef %16, i32 noundef %19, ptr noundef %20, i32 noundef 1025, ptr noundef %21, i32 noundef 32, i32 noundef 3), !dbg !11005
  store i32 %22, ptr %7, align 4, !dbg !10998
  %23 = load i32, ptr %7, align 4, !dbg !11006
  %24 = icmp ne i32 %23, 0, !dbg !11006
  br i1 %24, label %25, label %28, !dbg !11008

25:                                               ; preds = %13
  %26 = load i32, ptr %7, align 4, !dbg !11009
  %27 = call ptr @gai_strerror(i32 noundef %26) #17, !dbg !11009
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_debug(ptr noundef @.str.186, i32 noundef 147, ptr noundef @__FUNCTION__.listen_addrinfo, ptr noundef @.str.18.199, ptr noundef %27) #24, !dbg !11009
  unreachable, !dbg !11009

28:                                               ; preds = %13
  %29 = load ptr, ptr %4, align 8, !dbg !11010
  %30 = getelementptr inbounds %struct.addrinfo, ptr %29, i32 0, i32 1, !dbg !11012
  %31 = load i32, ptr %30, align 4, !dbg !11012
  %32 = icmp eq i32 %31, 10, !dbg !11013
  br i1 %32, label %33, label %36, !dbg !11014

33:                                               ; preds = %28
  %34 = getelementptr inbounds [1025 x i8], ptr %5, i64 0, i64 0, !dbg !11015
  %35 = getelementptr inbounds [32 x i8], ptr %6, i64 0, i64 0, !dbg !11015
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_info_debug(ptr noundef @.str.186, i32 noundef 150, ptr noundef @__FUNCTION__.listen_addrinfo, ptr noundef @.str.19.200, ptr noundef %34, ptr noundef %35), !dbg !11015
  br label %39, !dbg !11015

36:                                               ; preds = %28
  %37 = getelementptr inbounds [1025 x i8], ptr %5, i64 0, i64 0, !dbg !11016
  %38 = getelementptr inbounds [32 x i8], ptr %6, i64 0, i64 0, !dbg !11016
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_info_debug(ptr noundef @.str.186, i32 noundef 152, ptr noundef @__FUNCTION__.listen_addrinfo, ptr noundef @.str.20.201, ptr noundef %37, ptr noundef %38), !dbg !11016
  br label %39

39:                                               ; preds = %36, %33
  %40 = load i32, ptr %3, align 4, !dbg !11017
  ret i32 %40, !dbg !11018
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @get_backlog_size() #0 !dbg !11019 {
  %1 = alloca i32, align 4
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata ptr %1, metadata !11020, metadata !DIExpression()), !dbg !11021
  store i32 4096, ptr %1, align 4, !dbg !11021
  call void @llvm.dbg.declare(metadata ptr %2, metadata !11022, metadata !DIExpression()), !dbg !11057
  %4 = call noalias ptr @fopen(ptr noundef @.str.21.202, ptr noundef @.str.22.203), !dbg !11058
  store ptr %4, ptr %2, align 8, !dbg !11059
  %5 = load ptr, ptr %2, align 8, !dbg !11060
  %6 = icmp ne ptr %5, null, !dbg !11060
  br i1 %6, label %7, label %16, !dbg !11062

7:                                                ; preds = %0
  call void @llvm.dbg.declare(metadata ptr %3, metadata !11063, metadata !DIExpression()), !dbg !11065
  %8 = load ptr, ptr %2, align 8, !dbg !11066
  %9 = call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %8, ptr noundef @.str.23.204, ptr noundef %3), !dbg !11068
  %10 = icmp eq i32 %9, 1, !dbg !11069
  br i1 %10, label %11, label %13, !dbg !11070

11:                                               ; preds = %7
  %12 = load i32, ptr %3, align 4, !dbg !11071
  store i32 %12, ptr %1, align 4, !dbg !11072
  br label %13, !dbg !11073

13:                                               ; preds = %11, %7
  %14 = load ptr, ptr %2, align 8, !dbg !11074
  %15 = call i32 @fclose(ptr noundef %14), !dbg !11075
  br label %16, !dbg !11076

16:                                               ; preds = %13, %0
  %17 = load i32, ptr %1, align 4, !dbg !11077
  ret i32 %17, !dbg !11078
}

; Function Attrs: nounwind
declare i32 @listen(i32 noundef, i32 noundef) #2

declare i32 @getnameinfo(ptr noundef, i32 noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef) #5

declare i32 @__isoc99_fscanf(ptr noundef, ptr noundef, ...) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i16 @parse_listener_ipv6(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !11079 {
  %4 = alloca i16, align 2
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !11080, metadata !DIExpression()), !dbg !11081
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !11082, metadata !DIExpression()), !dbg !11083
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !11084, metadata !DIExpression()), !dbg !11085
  call void @llvm.dbg.declare(metadata ptr %8, metadata !11086, metadata !DIExpression()), !dbg !11087
  %9 = load ptr, ptr %5, align 8, !dbg !11088
  %10 = call ptr @strrchr(ptr noundef %9, i32 noundef 58) #20, !dbg !11089
  store ptr %10, ptr %8, align 8, !dbg !11087
  %11 = load ptr, ptr %8, align 8, !dbg !11090
  %12 = icmp ne ptr %11, null, !dbg !11090
  br i1 %12, label %14, label %13, !dbg !11092

13:                                               ; preds = %3
  store i16 0, ptr %4, align 2, !dbg !11093
  br label %40, !dbg !11093

14:                                               ; preds = %3
  %15 = load ptr, ptr %8, align 8, !dbg !11094
  %16 = getelementptr inbounds i8, ptr %15, i64 -1, !dbg !11096
  %17 = load i8, ptr %16, align 1, !dbg !11097
  %18 = sext i8 %17 to i32, !dbg !11097
  %19 = icmp eq i32 %18, 93, !dbg !11098
  br i1 %19, label %20, label %29, !dbg !11099

20:                                               ; preds = %14
  %21 = load ptr, ptr %8, align 8, !dbg !11100
  %22 = getelementptr inbounds i8, ptr %21, i64 -1, !dbg !11102
  store i8 0, ptr %22, align 1, !dbg !11103
  %23 = load ptr, ptr %5, align 8, !dbg !11104
  %24 = getelementptr inbounds i8, ptr %23, i64 1, !dbg !11105
  %25 = load ptr, ptr %6, align 8, !dbg !11106
  store ptr %24, ptr %25, align 8, !dbg !11107
  %26 = load ptr, ptr %8, align 8, !dbg !11108
  %27 = getelementptr inbounds i8, ptr %26, i64 1, !dbg !11109
  %28 = load ptr, ptr %7, align 8, !dbg !11110
  store ptr %27, ptr %28, align 8, !dbg !11111
  br label %39, !dbg !11112

29:                                               ; preds = %14
  %30 = load ptr, ptr %5, align 8, !dbg !11113
  %31 = load ptr, ptr %5, align 8, !dbg !11115
  %32 = call i64 @strlen(ptr noundef %31) #20, !dbg !11116
  %33 = sub i64 %32, 1, !dbg !11117
  %34 = getelementptr inbounds i8, ptr %30, i64 %33, !dbg !11113
  store i8 0, ptr %34, align 1, !dbg !11118
  %35 = load ptr, ptr %5, align 8, !dbg !11119
  %36 = getelementptr inbounds i8, ptr %35, i64 1, !dbg !11120
  %37 = load ptr, ptr %6, align 8, !dbg !11121
  store ptr %36, ptr %37, align 8, !dbg !11122
  %38 = load ptr, ptr %7, align 8, !dbg !11123
  store ptr @.str.12.205, ptr %38, align 8, !dbg !11124
  br label %39

39:                                               ; preds = %29, %20
  store i16 10, ptr %4, align 2, !dbg !11125
  br label %40, !dbg !11125

40:                                               ; preds = %39, %13
  %41 = load i16, ptr %4, align 2, !dbg !11126
  ret i16 %41, !dbg !11126
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i16 @parse_listener_ipv4(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !11127 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !11128, metadata !DIExpression()), !dbg !11129
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !11130, metadata !DIExpression()), !dbg !11131
  store ptr %2, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !11132, metadata !DIExpression()), !dbg !11133
  call void @llvm.dbg.declare(metadata ptr %7, metadata !11134, metadata !DIExpression()), !dbg !11135
  %8 = load ptr, ptr %4, align 8, !dbg !11136
  %9 = call ptr @strrchr(ptr noundef %8, i32 noundef 58) #20, !dbg !11137
  store ptr %9, ptr %7, align 8, !dbg !11135
  %10 = load ptr, ptr %7, align 8, !dbg !11138
  %11 = icmp ne ptr %10, null, !dbg !11138
  br i1 %11, label %23, label %12, !dbg !11140

12:                                               ; preds = %3
  %13 = load ptr, ptr %6, align 8, !dbg !11141
  store ptr @.str.12.205, ptr %13, align 8, !dbg !11143
  %14 = load ptr, ptr %4, align 8, !dbg !11144
  %15 = call ptr @strchr(ptr noundef %14, i32 noundef 46) #20, !dbg !11146
  %16 = icmp ne ptr %15, null, !dbg !11146
  br i1 %16, label %19, label %17, !dbg !11147

17:                                               ; preds = %12
  %18 = load ptr, ptr %5, align 8, !dbg !11148
  store ptr @.str.13.206, ptr %18, align 8, !dbg !11150
  br label %22, !dbg !11151

19:                                               ; preds = %12
  %20 = load ptr, ptr %4, align 8, !dbg !11152
  %21 = load ptr, ptr %5, align 8, !dbg !11154
  store ptr %20, ptr %21, align 8, !dbg !11155
  br label %22

22:                                               ; preds = %19, %17
  br label %37, !dbg !11156

23:                                               ; preds = %3
  %24 = load ptr, ptr %7, align 8, !dbg !11157
  store i8 0, ptr %24, align 1, !dbg !11159
  %25 = load ptr, ptr %4, align 8, !dbg !11160
  %26 = load ptr, ptr %5, align 8, !dbg !11161
  store ptr %25, ptr %26, align 8, !dbg !11162
  %27 = load ptr, ptr %7, align 8, !dbg !11163
  %28 = getelementptr inbounds i8, ptr %27, i64 1, !dbg !11164
  %29 = load ptr, ptr %6, align 8, !dbg !11165
  store ptr %28, ptr %29, align 8, !dbg !11166
  %30 = load ptr, ptr %5, align 8, !dbg !11167
  %31 = load ptr, ptr %30, align 8, !dbg !11169
  %32 = call i32 @strcmp(ptr noundef %31, ptr noundef @.str.14.207) #20, !dbg !11170
  %33 = icmp ne i32 %32, 0, !dbg !11170
  br i1 %33, label %36, label %34, !dbg !11171

34:                                               ; preds = %23
  %35 = load ptr, ptr %5, align 8, !dbg !11172
  store ptr @.str.13.206, ptr %35, align 8, !dbg !11174
  br label %36, !dbg !11175

36:                                               ; preds = %34, %23
  br label %37

37:                                               ; preds = %36, %22
  ret i16 2, !dbg !11176
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @sd_is_socket_inet(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i16 noundef zeroext %4) #0 !dbg !11177 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i16, align 2
  %12 = alloca %union.sockaddr_union, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %union.__SOCKADDR_ARG, align 8
  store i32 %0, ptr %7, align 4
  call void @llvm.dbg.declare(metadata ptr %7, metadata !11180, metadata !DIExpression()), !dbg !11181
  store i32 %1, ptr %8, align 4
  call void @llvm.dbg.declare(metadata ptr %8, metadata !11182, metadata !DIExpression()), !dbg !11183
  store i32 %2, ptr %9, align 4
  call void @llvm.dbg.declare(metadata ptr %9, metadata !11184, metadata !DIExpression()), !dbg !11185
  store i32 %3, ptr %10, align 4
  call void @llvm.dbg.declare(metadata ptr %10, metadata !11186, metadata !DIExpression()), !dbg !11187
  store i16 %4, ptr %11, align 2
  call void @llvm.dbg.declare(metadata ptr %11, metadata !11188, metadata !DIExpression()), !dbg !11189
  call void @llvm.dbg.declare(metadata ptr %12, metadata !11190, metadata !DIExpression()), !dbg !11242
  call void @llvm.memset.p0.i64(ptr align 8 %12, i8 0, i64 128, i1 false), !dbg !11242
  call void @llvm.dbg.declare(metadata ptr %13, metadata !11243, metadata !DIExpression()), !dbg !11244
  store i32 128, ptr %13, align 4, !dbg !11244
  call void @llvm.dbg.declare(metadata ptr %14, metadata !11245, metadata !DIExpression()), !dbg !11246
  %16 = load i32, ptr %8, align 4, !dbg !11247
  %17 = icmp ne i32 %16, 0, !dbg !11249
  br i1 %17, label %18, label %25, !dbg !11250

18:                                               ; preds = %5
  %19 = load i32, ptr %8, align 4, !dbg !11251
  %20 = icmp ne i32 %19, 2, !dbg !11252
  br i1 %20, label %21, label %25, !dbg !11253

21:                                               ; preds = %18
  %22 = load i32, ptr %8, align 4, !dbg !11254
  %23 = icmp ne i32 %22, 10, !dbg !11255
  br i1 %23, label %24, label %25, !dbg !11256

24:                                               ; preds = %21
  store i32 -22, ptr %6, align 4, !dbg !11257
  br label %109, !dbg !11257

25:                                               ; preds = %21, %18, %5
  %26 = load i32, ptr %7, align 4, !dbg !11258
  %27 = load i32, ptr %9, align 4, !dbg !11259
  %28 = load i32, ptr %10, align 4, !dbg !11260
  %29 = call i32 @sd_is_socket_internal(i32 noundef %26, i32 noundef %27, i32 noundef %28), !dbg !11261
  store i32 %29, ptr %14, align 4, !dbg !11262
  %30 = load i32, ptr %14, align 4, !dbg !11263
  %31 = icmp sle i32 %30, 0, !dbg !11265
  br i1 %31, label %32, label %34, !dbg !11266

32:                                               ; preds = %25
  %33 = load i32, ptr %14, align 4, !dbg !11267
  store i32 %33, ptr %6, align 4, !dbg !11268
  br label %109, !dbg !11268

34:                                               ; preds = %25
  %35 = load i32, ptr %7, align 4, !dbg !11269
  store ptr %12, ptr %15, align 8, !dbg !11271
  %36 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %15, i32 0, i32 0, !dbg !11272
  %37 = load ptr, ptr %36, align 8, !dbg !11272
  %38 = call i32 @getsockname(i32 noundef %35, ptr %37, ptr noundef %13) #17, !dbg !11272
  %39 = icmp slt i32 %38, 0, !dbg !11273
  br i1 %39, label %40, label %44, !dbg !11274

40:                                               ; preds = %34
  %41 = call ptr @__errno_location() #21, !dbg !11275
  %42 = load i32, ptr %41, align 4, !dbg !11275
  %43 = sub nsw i32 0, %42, !dbg !11276
  store i32 %43, ptr %6, align 4, !dbg !11277
  br label %109, !dbg !11277

44:                                               ; preds = %34
  %45 = load i32, ptr %13, align 4, !dbg !11278
  %46 = zext i32 %45 to i64, !dbg !11278
  %47 = icmp ult i64 %46, 2, !dbg !11280
  br i1 %47, label %48, label %49, !dbg !11281

48:                                               ; preds = %44
  store i32 -22, ptr %6, align 4, !dbg !11282
  br label %109, !dbg !11282

49:                                               ; preds = %44
  %50 = getelementptr inbounds %struct.sockaddr, ptr %12, i32 0, i32 0, !dbg !11283
  %51 = load i16, ptr %50, align 8, !dbg !11283
  %52 = zext i16 %51 to i32, !dbg !11285
  %53 = icmp ne i32 %52, 2, !dbg !11286
  br i1 %53, label %54, label %60, !dbg !11287

54:                                               ; preds = %49
  %55 = getelementptr inbounds %struct.sockaddr, ptr %12, i32 0, i32 0, !dbg !11288
  %56 = load i16, ptr %55, align 8, !dbg !11288
  %57 = zext i16 %56 to i32, !dbg !11289
  %58 = icmp ne i32 %57, 10, !dbg !11290
  br i1 %58, label %59, label %60, !dbg !11291

59:                                               ; preds = %54
  store i32 0, ptr %6, align 4, !dbg !11292
  br label %109, !dbg !11292

60:                                               ; preds = %54, %49
  %61 = load i32, ptr %8, align 4, !dbg !11293
  %62 = icmp sgt i32 %61, 0, !dbg !11295
  br i1 %62, label %63, label %71, !dbg !11296

63:                                               ; preds = %60
  %64 = getelementptr inbounds %struct.sockaddr, ptr %12, i32 0, i32 0, !dbg !11297
  %65 = load i16, ptr %64, align 8, !dbg !11297
  %66 = zext i16 %65 to i32, !dbg !11299
  %67 = load i32, ptr %8, align 4, !dbg !11300
  %68 = icmp ne i32 %66, %67, !dbg !11301
  br i1 %68, label %69, label %70, !dbg !11302

69:                                               ; preds = %63
  store i32 0, ptr %6, align 4, !dbg !11303
  br label %109, !dbg !11303

70:                                               ; preds = %63
  br label %71, !dbg !11300

71:                                               ; preds = %70, %60
  %72 = load i16, ptr %11, align 2, !dbg !11304
  %73 = zext i16 %72 to i32, !dbg !11304
  %74 = icmp sgt i32 %73, 0, !dbg !11306
  br i1 %74, label %75, label %108, !dbg !11307

75:                                               ; preds = %71
  %76 = getelementptr inbounds %struct.sockaddr, ptr %12, i32 0, i32 0, !dbg !11308
  %77 = load i16, ptr %76, align 8, !dbg !11308
  %78 = zext i16 %77 to i32, !dbg !11311
  %79 = icmp eq i32 %78, 2, !dbg !11312
  br i1 %79, label %80, label %94, !dbg !11313

80:                                               ; preds = %75
  %81 = load i32, ptr %13, align 4, !dbg !11314
  %82 = zext i32 %81 to i64, !dbg !11314
  %83 = icmp ult i64 %82, 16, !dbg !11317
  br i1 %83, label %84, label %85, !dbg !11318

84:                                               ; preds = %80
  store i32 -22, ptr %6, align 4, !dbg !11319
  br label %109, !dbg !11319

85:                                               ; preds = %80
  %86 = load i16, ptr %11, align 2, !dbg !11320
  %87 = call zeroext i16 @htons(i16 noundef zeroext %86) #21, !dbg !11321
  %88 = zext i16 %87 to i32, !dbg !11321
  %89 = getelementptr inbounds %struct.sockaddr_in, ptr %12, i32 0, i32 1, !dbg !11322
  %90 = load i16, ptr %89, align 2, !dbg !11322
  %91 = zext i16 %90 to i32, !dbg !11323
  %92 = icmp eq i32 %88, %91, !dbg !11324
  %93 = zext i1 %92 to i32, !dbg !11324
  store i32 %93, ptr %6, align 4, !dbg !11325
  br label %109, !dbg !11325

94:                                               ; preds = %75
  %95 = load i32, ptr %13, align 4, !dbg !11326
  %96 = zext i32 %95 to i64, !dbg !11326
  %97 = icmp ult i64 %96, 28, !dbg !11329
  br i1 %97, label %98, label %99, !dbg !11330

98:                                               ; preds = %94
  store i32 -22, ptr %6, align 4, !dbg !11331
  br label %109, !dbg !11331

99:                                               ; preds = %94
  %100 = load i16, ptr %11, align 2, !dbg !11332
  %101 = call zeroext i16 @htons(i16 noundef zeroext %100) #21, !dbg !11333
  %102 = zext i16 %101 to i32, !dbg !11333
  %103 = getelementptr inbounds %struct.sockaddr_in6, ptr %12, i32 0, i32 1, !dbg !11334
  %104 = load i16, ptr %103, align 2, !dbg !11334
  %105 = zext i16 %104 to i32, !dbg !11335
  %106 = icmp eq i32 %102, %105, !dbg !11336
  %107 = zext i1 %106 to i32, !dbg !11336
  store i32 %107, ptr %6, align 4, !dbg !11337
  br label %109, !dbg !11337

108:                                              ; preds = %71
  store i32 1, ptr %6, align 4, !dbg !11338
  br label %109, !dbg !11338

109:                                              ; preds = %108, %99, %98, %85, %84, %69, %59, %48, %40, %32, %24
  %110 = load i32, ptr %6, align 4, !dbg !11339
  ret i32 %110, !dbg !11339
}

declare i32 @fcntl(i32 noundef, i32 noundef, ...) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @sd_is_socket_internal(i32 noundef %0, i32 noundef %1, i32 noundef %2) #0 !dbg !11340 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.stat, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i32 %0, ptr %5, align 4
  call void @llvm.dbg.declare(metadata ptr %5, metadata !11343, metadata !DIExpression()), !dbg !11344
  store i32 %1, ptr %6, align 4
  call void @llvm.dbg.declare(metadata ptr %6, metadata !11345, metadata !DIExpression()), !dbg !11346
  store i32 %2, ptr %7, align 4
  call void @llvm.dbg.declare(metadata ptr %7, metadata !11347, metadata !DIExpression()), !dbg !11348
  call void @llvm.dbg.declare(metadata ptr %8, metadata !11349, metadata !DIExpression()), !dbg !11371
  %13 = load i32, ptr %5, align 4, !dbg !11372
  %14 = icmp slt i32 %13, 0, !dbg !11374
  br i1 %14, label %18, label %15, !dbg !11375

15:                                               ; preds = %3
  %16 = load i32, ptr %6, align 4, !dbg !11376
  %17 = icmp slt i32 %16, 0, !dbg !11377
  br i1 %17, label %18, label %19, !dbg !11378

18:                                               ; preds = %15, %3
  store i32 -22, ptr %4, align 4, !dbg !11379
  br label %84, !dbg !11379

19:                                               ; preds = %15
  %20 = load i32, ptr %5, align 4, !dbg !11380
  %21 = call i32 @fstat(i32 noundef %20, ptr noundef %8) #17, !dbg !11382
  %22 = icmp slt i32 %21, 0, !dbg !11383
  br i1 %22, label %23, label %27, !dbg !11384

23:                                               ; preds = %19
  %24 = call ptr @__errno_location() #21, !dbg !11385
  %25 = load i32, ptr %24, align 4, !dbg !11385
  %26 = sub nsw i32 0, %25, !dbg !11386
  store i32 %26, ptr %4, align 4, !dbg !11387
  br label %84, !dbg !11387

27:                                               ; preds = %19
  %28 = getelementptr inbounds %struct.stat, ptr %8, i32 0, i32 3, !dbg !11388
  %29 = load i32, ptr %28, align 8, !dbg !11388
  %30 = and i32 %29, 61440, !dbg !11388
  %31 = icmp eq i32 %30, 49152, !dbg !11388
  br i1 %31, label %33, label %32, !dbg !11390

32:                                               ; preds = %27
  store i32 0, ptr %4, align 4, !dbg !11391
  br label %84, !dbg !11391

33:                                               ; preds = %27
  %34 = load i32, ptr %6, align 4, !dbg !11392
  %35 = icmp ne i32 %34, 0, !dbg !11394
  br i1 %35, label %36, label %55, !dbg !11395

36:                                               ; preds = %33
  call void @llvm.dbg.declare(metadata ptr %9, metadata !11396, metadata !DIExpression()), !dbg !11398
  store i32 0, ptr %9, align 4, !dbg !11398
  call void @llvm.dbg.declare(metadata ptr %10, metadata !11399, metadata !DIExpression()), !dbg !11400
  store i32 4, ptr %10, align 4, !dbg !11400
  %37 = load i32, ptr %5, align 4, !dbg !11401
  %38 = call i32 @getsockopt(i32 noundef %37, i32 noundef 1, i32 noundef 3, ptr noundef %9, ptr noundef %10) #17, !dbg !11403
  %39 = icmp slt i32 %38, 0, !dbg !11404
  br i1 %39, label %40, label %44, !dbg !11405

40:                                               ; preds = %36
  %41 = call ptr @__errno_location() #21, !dbg !11406
  %42 = load i32, ptr %41, align 4, !dbg !11406
  %43 = sub nsw i32 0, %42, !dbg !11407
  store i32 %43, ptr %4, align 4, !dbg !11408
  br label %84, !dbg !11408

44:                                               ; preds = %36
  %45 = load i32, ptr %10, align 4, !dbg !11409
  %46 = zext i32 %45 to i64, !dbg !11409
  %47 = icmp ne i64 %46, 4, !dbg !11411
  br i1 %47, label %48, label %49, !dbg !11412

48:                                               ; preds = %44
  store i32 -22, ptr %4, align 4, !dbg !11413
  br label %84, !dbg !11413

49:                                               ; preds = %44
  %50 = load i32, ptr %9, align 4, !dbg !11414
  %51 = load i32, ptr %6, align 4, !dbg !11416
  %52 = icmp ne i32 %50, %51, !dbg !11417
  br i1 %52, label %53, label %54, !dbg !11418

53:                                               ; preds = %49
  store i32 0, ptr %4, align 4, !dbg !11419
  br label %84, !dbg !11419

54:                                               ; preds = %49
  br label %55, !dbg !11420

55:                                               ; preds = %54, %33
  %56 = load i32, ptr %7, align 4, !dbg !11421
  %57 = icmp sge i32 %56, 0, !dbg !11423
  br i1 %57, label %58, label %83, !dbg !11424

58:                                               ; preds = %55
  call void @llvm.dbg.declare(metadata ptr %11, metadata !11425, metadata !DIExpression()), !dbg !11427
  store i32 0, ptr %11, align 4, !dbg !11427
  call void @llvm.dbg.declare(metadata ptr %12, metadata !11428, metadata !DIExpression()), !dbg !11429
  store i32 4, ptr %12, align 4, !dbg !11429
  %59 = load i32, ptr %5, align 4, !dbg !11430
  %60 = call i32 @getsockopt(i32 noundef %59, i32 noundef 1, i32 noundef 30, ptr noundef %11, ptr noundef %12) #17, !dbg !11432
  %61 = icmp slt i32 %60, 0, !dbg !11433
  br i1 %61, label %62, label %66, !dbg !11434

62:                                               ; preds = %58
  %63 = call ptr @__errno_location() #21, !dbg !11435
  %64 = load i32, ptr %63, align 4, !dbg !11435
  %65 = sub nsw i32 0, %64, !dbg !11436
  store i32 %65, ptr %4, align 4, !dbg !11437
  br label %84, !dbg !11437

66:                                               ; preds = %58
  %67 = load i32, ptr %12, align 4, !dbg !11438
  %68 = zext i32 %67 to i64, !dbg !11438
  %69 = icmp ne i64 %68, 4, !dbg !11440
  br i1 %69, label %70, label %71, !dbg !11441

70:                                               ; preds = %66
  store i32 -22, ptr %4, align 4, !dbg !11442
  br label %84, !dbg !11442

71:                                               ; preds = %66
  %72 = load i32, ptr %11, align 4, !dbg !11443
  %73 = icmp ne i32 %72, 0, !dbg !11445
  %74 = xor i1 %73, true, !dbg !11445
  %75 = zext i1 %74 to i32, !dbg !11445
  %76 = load i32, ptr %7, align 4, !dbg !11446
  %77 = icmp ne i32 %76, 0, !dbg !11447
  %78 = xor i1 %77, true, !dbg !11447
  %79 = zext i1 %78 to i32, !dbg !11447
  %80 = icmp ne i32 %75, %79, !dbg !11448
  br i1 %80, label %81, label %82, !dbg !11449

81:                                               ; preds = %71
  store i32 0, ptr %4, align 4, !dbg !11450
  br label %84, !dbg !11450

82:                                               ; preds = %71
  br label %83, !dbg !11451

83:                                               ; preds = %82, %55
  store i32 1, ptr %4, align 4, !dbg !11452
  br label %84, !dbg !11452

84:                                               ; preds = %83, %81, %70, %62, %53, %48, %40, %32, %23, %18
  %85 = load i32, ptr %4, align 4, !dbg !11453
  ret i32 %85, !dbg !11453
}

; Function Attrs: nounwind
declare i32 @getsockname(i32 noundef, ptr, ptr noundef) #2

; Function Attrs: nounwind willreturn memory(none)
declare zeroext i16 @htons(i16 noundef zeroext) #9

; Function Attrs: nounwind
declare i32 @fstat(i32 noundef, ptr noundef) #2

; Function Attrs: nounwind
declare i32 @getsockopt(i32 noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) #2

; Function Attrs: nounwind
declare ptr @getenv(ptr noundef) #2

; Function Attrs: nounwind
declare i64 @strtoul(ptr noundef, ptr noundef, i32 noundef) #2

; Function Attrs: nounwind
declare i32 @getpid() #2

; Function Attrs: nounwind
declare i32 @unsetenv(ptr noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @create_thread(ptr noundef %0, ptr noundef %1) #0 !dbg !11454 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca %union.pthread_attr_t, align 8
  %6 = alloca %struct.epoll_event, align 1
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !11457, metadata !DIExpression()), !dbg !11458
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !11459, metadata !DIExpression()), !dbg !11460
  call void @llvm.dbg.declare(metadata ptr %5, metadata !11461, metadata !DIExpression()), !dbg !11467
  %7 = load ptr, ptr %4, align 8, !dbg !11468
  call void @llvm.memset.p0.i64(ptr align 8 %7, i8 0, i64 104, i1 false), !dbg !11469
  %8 = load ptr, ptr %3, align 8, !dbg !11470
  %9 = load ptr, ptr %4, align 8, !dbg !11471
  %10 = getelementptr inbounds %struct.lwan_thread_t_, ptr %9, i32 0, i32 0, !dbg !11472
  store ptr %8, ptr %10, align 8, !dbg !11473
  %11 = call i32 @epoll_create1(i32 noundef 524288) #17, !dbg !11474
  %12 = load ptr, ptr %4, align 8, !dbg !11476
  %13 = getelementptr inbounds %struct.lwan_thread_t_, ptr %12, i32 0, i32 2, !dbg !11477
  store i32 %11, ptr %13, align 8, !dbg !11478
  %14 = icmp slt i32 %11, 0, !dbg !11479
  br i1 %14, label %15, label %16, !dbg !11480

15:                                               ; preds = %2
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.380, i32 noundef 376, ptr noundef @__FUNCTION__.create_thread, ptr noundef @.str.8.391) #24, !dbg !11481
  unreachable, !dbg !11481

16:                                               ; preds = %2
  %17 = call i32 @pthread_attr_init(ptr noundef %5) #17, !dbg !11482
  %18 = icmp ne i32 %17, 0, !dbg !11482
  br i1 %18, label %19, label %20, !dbg !11484

19:                                               ; preds = %16
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.380, i32 noundef 379, ptr noundef @__FUNCTION__.create_thread, ptr noundef @.str.9.392) #24, !dbg !11485
  unreachable, !dbg !11485

20:                                               ; preds = %16
  %21 = call i32 @pthread_attr_setscope(ptr noundef %5, i32 noundef 0) #17, !dbg !11486
  %22 = icmp ne i32 %21, 0, !dbg !11486
  br i1 %22, label %23, label %24, !dbg !11488

23:                                               ; preds = %20
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.380, i32 noundef 382, ptr noundef @__FUNCTION__.create_thread, ptr noundef @.str.10.393) #24, !dbg !11489
  unreachable, !dbg !11489

24:                                               ; preds = %20
  %25 = call i32 @pthread_attr_setdetachstate(ptr noundef %5, i32 noundef 0) #17, !dbg !11490
  %26 = icmp ne i32 %25, 0, !dbg !11490
  br i1 %26, label %27, label %28, !dbg !11492

27:                                               ; preds = %24
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.380, i32 noundef 385, ptr noundef @__FUNCTION__.create_thread, ptr noundef @.str.11.394) #24, !dbg !11493
  unreachable, !dbg !11493

28:                                               ; preds = %24
  %29 = load ptr, ptr %4, align 8, !dbg !11494
  %30 = getelementptr inbounds %struct.lwan_thread_t_, ptr %29, i32 0, i32 3, !dbg !11496
  %31 = getelementptr inbounds [2 x i32], ptr %30, i64 0, i64 0, !dbg !11494
  %32 = call i32 @pipe2(ptr noundef %31, i32 noundef 526336) #17, !dbg !11497
  %33 = icmp slt i32 %32, 0, !dbg !11498
  br i1 %33, label %34, label %35, !dbg !11499

34:                                               ; preds = %28
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.380, i32 noundef 388, ptr noundef @__FUNCTION__.create_thread, ptr noundef @.str.12.395) #24, !dbg !11500
  unreachable, !dbg !11500

35:                                               ; preds = %28
  call void @llvm.dbg.declare(metadata ptr %6, metadata !11501, metadata !DIExpression()), !dbg !11513
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %6, ptr align 1 @__const.create_thread.event, i64 12, i1 false), !dbg !11513
  %36 = load ptr, ptr %4, align 8, !dbg !11514
  %37 = getelementptr inbounds %struct.lwan_thread_t_, ptr %36, i32 0, i32 2, !dbg !11516
  %38 = load i32, ptr %37, align 8, !dbg !11516
  %39 = load ptr, ptr %4, align 8, !dbg !11517
  %40 = getelementptr inbounds %struct.lwan_thread_t_, ptr %39, i32 0, i32 3, !dbg !11518
  %41 = getelementptr inbounds [2 x i32], ptr %40, i64 0, i64 0, !dbg !11517
  %42 = load i32, ptr %41, align 4, !dbg !11517
  %43 = call i32 @epoll_ctl(i32 noundef %38, i32 noundef 1, i32 noundef %42, ptr noundef %6) #17, !dbg !11519
  %44 = icmp slt i32 %43, 0, !dbg !11520
  br i1 %44, label %45, label %46, !dbg !11521

45:                                               ; preds = %35
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.380, i32 noundef 392, ptr noundef @__FUNCTION__.create_thread, ptr noundef @.str.13.396) #24, !dbg !11522
  unreachable, !dbg !11522

46:                                               ; preds = %35
  %47 = load ptr, ptr %4, align 8, !dbg !11523
  %48 = getelementptr inbounds %struct.lwan_thread_t_, ptr %47, i32 0, i32 4, !dbg !11525
  %49 = load ptr, ptr %4, align 8, !dbg !11526
  %50 = call i32 @pthread_create(ptr noundef %48, ptr noundef %5, ptr noundef @thread_io_loop, ptr noundef %49) #17, !dbg !11527
  %51 = icmp ne i32 %50, 0, !dbg !11527
  br i1 %51, label %52, label %53, !dbg !11528

52:                                               ; preds = %46
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.380, i32 noundef 395, ptr noundef @__FUNCTION__.create_thread, ptr noundef @.str.14.397) #24, !dbg !11529
  unreachable, !dbg !11529

53:                                               ; preds = %46
  %54 = call i32 @pthread_attr_destroy(ptr noundef %5) #17, !dbg !11530
  %55 = icmp ne i32 %54, 0, !dbg !11530
  br i1 %55, label %56, label %57, !dbg !11532

56:                                               ; preds = %53
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.380, i32 noundef 398, ptr noundef @__FUNCTION__.create_thread, ptr noundef @.str.15.398) #24, !dbg !11533
  unreachable, !dbg !11533

57:                                               ; preds = %53
  ret void, !dbg !11534
}

; Function Attrs: nounwind
declare i32 @epoll_create1(i32 noundef) #2

; Function Attrs: nounwind
declare i32 @pthread_attr_init(ptr noundef) #2

; Function Attrs: nounwind
declare i32 @pthread_attr_setscope(ptr noundef, i32 noundef) #2

; Function Attrs: nounwind
declare i32 @pthread_attr_setdetachstate(ptr noundef, i32 noundef) #2

; Function Attrs: nounwind
declare i32 @pipe2(ptr noundef, i32 noundef) #2

; Function Attrs: nounwind
declare i32 @epoll_ctl(i32 noundef, i32 noundef, i32 noundef, ptr noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @thread_io_loop(ptr noundef %0) #0 !dbg !11535 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca %struct.epoll_event, align 1
  %11 = alloca i32, align 4
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %15 = alloca ptr, align 8
  %16 = alloca ptr, align 8
  %17 = alloca ptr, align 8
  %18 = alloca ptr, align 8
  %19 = alloca ptr, align 8
  %20 = alloca ptr, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca ptr, align 8
  %24 = alloca ptr, align 8
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca ptr, align 8
  %29 = alloca ptr, align 8
  %30 = alloca %struct.coro_switcher_t_, align 8
  %31 = alloca %struct.death_queue_t, align 8
  %32 = alloca i32, align 4
  %33 = alloca ptr, align 8
  %34 = alloca ptr, align 8
  store ptr %0, ptr %23, align 8
  call void @llvm.dbg.declare(metadata ptr %23, metadata !11536, metadata !DIExpression()), !dbg !11537
  call void @llvm.dbg.declare(metadata ptr %24, metadata !11538, metadata !DIExpression()), !dbg !11539
  %35 = load ptr, ptr %23, align 8, !dbg !11540
  store ptr %35, ptr %24, align 8, !dbg !11539
  call void @llvm.dbg.declare(metadata ptr %25, metadata !11541, metadata !DIExpression()), !dbg !11542
  %36 = load ptr, ptr %24, align 8, !dbg !11543
  %37 = getelementptr inbounds %struct.lwan_thread_t_, ptr %36, i32 0, i32 2, !dbg !11544
  %38 = load i32, ptr %37, align 8, !dbg !11544
  store i32 %38, ptr %25, align 4, !dbg !11542
  call void @llvm.dbg.declare(metadata ptr %26, metadata !11545, metadata !DIExpression()), !dbg !11546
  %39 = load ptr, ptr %24, align 8, !dbg !11547
  %40 = getelementptr inbounds %struct.lwan_thread_t_, ptr %39, i32 0, i32 3, !dbg !11548
  %41 = getelementptr inbounds [2 x i32], ptr %40, i64 0, i64 0, !dbg !11547
  %42 = load i32, ptr %41, align 4, !dbg !11547
  store i32 %42, ptr %26, align 4, !dbg !11546
  call void @llvm.dbg.declare(metadata ptr %27, metadata !11549, metadata !DIExpression()), !dbg !11550
  %43 = load ptr, ptr %24, align 8, !dbg !11551
  %44 = getelementptr inbounds %struct.lwan_thread_t_, ptr %43, i32 0, i32 0, !dbg !11552
  %45 = load ptr, ptr %44, align 8, !dbg !11552
  %46 = getelementptr inbounds %struct.lwan_t_, ptr %45, i32 0, i32 2, !dbg !11553
  %47 = getelementptr inbounds %struct.anon, ptr %46, i32 0, i32 1, !dbg !11554
  %48 = load i32, ptr %47, align 8, !dbg !11554
  store i32 %48, ptr %21, align 4
  call void @llvm.dbg.declare(metadata ptr %21, metadata !11555, metadata !DIExpression()), !dbg !11559
  store i32 1024, ptr %22, align 4
  call void @llvm.dbg.declare(metadata ptr %22, metadata !11561, metadata !DIExpression()), !dbg !11562
  %49 = load i32, ptr %21, align 4, !dbg !11563
  %50 = load i32, ptr %22, align 4, !dbg !11564
  %51 = icmp slt i32 %49, %50, !dbg !11565
  br i1 %51, label %52, label %54, !dbg !11563

52:                                               ; preds = %1
  %53 = load i32, ptr %21, align 4, !dbg !11566
  br label %56, !dbg !11563

54:                                               ; preds = %1
  %55 = load i32, ptr %22, align 4, !dbg !11567
  br label %56, !dbg !11563

56:                                               ; preds = %54, %52
  %57 = phi i32 [ %53, %52 ], [ %55, %54 ], !dbg !11563
  store i32 %57, ptr %27, align 4, !dbg !11550
  call void @llvm.dbg.declare(metadata ptr %28, metadata !11568, metadata !DIExpression()), !dbg !11569
  %58 = load ptr, ptr %24, align 8, !dbg !11570
  %59 = getelementptr inbounds %struct.lwan_thread_t_, ptr %58, i32 0, i32 0, !dbg !11571
  %60 = load ptr, ptr %59, align 8, !dbg !11571
  %61 = getelementptr inbounds %struct.lwan_t_, ptr %60, i32 0, i32 1, !dbg !11572
  %62 = load ptr, ptr %61, align 8, !dbg !11572
  store ptr %62, ptr %28, align 8, !dbg !11569
  call void @llvm.dbg.declare(metadata ptr %29, metadata !11573, metadata !DIExpression()), !dbg !11575
  call void @llvm.dbg.declare(metadata ptr %30, metadata !11576, metadata !DIExpression()), !dbg !11582
  call void @llvm.dbg.declare(metadata ptr %31, metadata !11583, metadata !DIExpression()), !dbg !11590
  call void @llvm.dbg.declare(metadata ptr %32, metadata !11591, metadata !DIExpression()), !dbg !11592
  %63 = load ptr, ptr %24, align 8, !dbg !11593
  %64 = load ptr, ptr %24, align 8, !dbg !11593
  %65 = getelementptr inbounds %struct.lwan_thread_t_, ptr %64, i32 0, i32 0, !dbg !11593
  %66 = load ptr, ptr %65, align 8, !dbg !11593
  %67 = getelementptr inbounds %struct.lwan_t_, ptr %66, i32 0, i32 2, !dbg !11593
  %68 = getelementptr inbounds %struct.anon, ptr %67, i32 0, i32 0, !dbg !11593
  %69 = load ptr, ptr %68, align 8, !dbg !11593
  %70 = ptrtoint ptr %63 to i64, !dbg !11593
  %71 = ptrtoint ptr %69 to i64, !dbg !11593
  %72 = sub i64 %70, %71, !dbg !11593
  %73 = sdiv exact i64 %72, 104, !dbg !11593
  %74 = trunc i64 %73 to i16, !dbg !11593
  %75 = zext i16 %74 to i32, !dbg !11593
  %76 = add nsw i32 %75, 1, !dbg !11593
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.380, i32 noundef 313, ptr noundef @__FUNCTION__.thread_io_loop, ptr noundef @.str.16.399, i32 noundef %76), !dbg !11593
  %77 = load i32, ptr %27, align 4, !dbg !11594
  %78 = sext i32 %77 to i64, !dbg !11595
  %79 = call noalias ptr @calloc(i64 noundef %78, i64 noundef 12) #19, !dbg !11596
  store ptr %79, ptr %29, align 8, !dbg !11597
  %80 = load ptr, ptr %29, align 8, !dbg !11598
  %81 = icmp ne ptr %80, null, !dbg !11598
  %82 = xor i1 %81, true, !dbg !11598
  %83 = zext i1 %82 to i32, !dbg !11598
  %84 = sext i32 %83 to i64, !dbg !11598
  %85 = icmp ne i64 %84, 0, !dbg !11598
  br i1 %85, label %86, label %87, !dbg !11600

86:                                               ; preds = %56
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_debug(ptr noundef @.str.380, i32 noundef 317, ptr noundef @__FUNCTION__.thread_io_loop, ptr noundef @.str.17.400) #24, !dbg !11601
  unreachable, !dbg !11601

87:                                               ; preds = %56
  %88 = load ptr, ptr %28, align 8, !dbg !11602
  %89 = load ptr, ptr %24, align 8, !dbg !11603
  %90 = getelementptr inbounds %struct.lwan_thread_t_, ptr %89, i32 0, i32 0, !dbg !11604
  %91 = load ptr, ptr %90, align 8, !dbg !11604
  %92 = getelementptr inbounds %struct.lwan_t_, ptr %91, i32 0, i32 4, !dbg !11605
  %93 = getelementptr inbounds %struct.lwan_config_t_, ptr %92, i32 0, i32 1, !dbg !11606
  %94 = load i16, ptr %93, align 8, !dbg !11606
  call void @death_queue_init(ptr noundef %31, ptr noundef %88, i16 noundef zeroext %94), !dbg !11607
  br label %95, !dbg !11608

95:                                               ; preds = %360, %108, %87
  %96 = load i32, ptr %25, align 4, !dbg !11609
  %97 = load ptr, ptr %29, align 8, !dbg !11613
  %98 = load i32, ptr %27, align 4, !dbg !11614
  store ptr %31, ptr %20, align 8
  call void @llvm.dbg.declare(metadata ptr %20, metadata !11615, metadata !DIExpression()), !dbg !11620
  %99 = load ptr, ptr %20, align 8, !dbg !11622
  %100 = call zeroext i1 @death_queue_empty(ptr noundef %99), !dbg !11623
  %101 = zext i1 %100 to i64, !dbg !11623
  %102 = select i1 %100, i32 -1, i32 1000, !dbg !11623
  %103 = call i32 @epoll_wait(i32 noundef %96, ptr noundef %97, i32 noundef %98, i32 noundef %102), !dbg !11624
  store i32 %103, ptr %32, align 4, !dbg !11625
  switch i32 %103, label %110 [
    i32 -1, label %104
    i32 0, label %109
  ], !dbg !11626

104:                                              ; preds = %95
  %105 = call ptr @__errno_location() #21, !dbg !11627
  %106 = load i32, ptr %105, align 4, !dbg !11627
  switch i32 %106, label %108 [
    i32 9, label %107
    i32 22, label %107
  ], !dbg !11629

107:                                              ; preds = %104, %104
  br label %361, !dbg !11630

108:                                              ; preds = %104
  br label %95, !dbg !11632, !llvm.loop !11633

109:                                              ; preds = %95
  call void @death_queue_kill_waiting(ptr noundef %31), !dbg !11636
  br label %360, !dbg !11637

110:                                              ; preds = %95
  %111 = load ptr, ptr %24, align 8, !dbg !11638
  call void @update_date_cache(ptr noundef %111), !dbg !11639
  call void @llvm.dbg.declare(metadata ptr %33, metadata !11640, metadata !DIExpression()), !dbg !11642
  %112 = load ptr, ptr %29, align 8, !dbg !11643
  store ptr %112, ptr %33, align 8, !dbg !11642
  br label %113, !dbg !11644

113:                                              ; preds = %356, %110
  %114 = load i32, ptr %32, align 4, !dbg !11645
  %115 = add nsw i32 %114, -1, !dbg !11645
  store i32 %115, ptr %32, align 4, !dbg !11645
  %116 = icmp ne i32 %114, 0, !dbg !11647
  br i1 %116, label %117, label %359, !dbg !11647

117:                                              ; preds = %113
  call void @llvm.dbg.declare(metadata ptr %34, metadata !11648, metadata !DIExpression()), !dbg !11650
  %118 = load ptr, ptr %33, align 8, !dbg !11651
  %119 = getelementptr inbounds %struct.epoll_event, ptr %118, i32 0, i32 1, !dbg !11653
  %120 = load ptr, ptr %119, align 1, !dbg !11654
  %121 = icmp ne ptr %120, null, !dbg !11651
  br i1 %121, label %170, label %122, !dbg !11655

122:                                              ; preds = %117
  %123 = load i32, ptr %25, align 4, !dbg !11656
  %124 = load i32, ptr %26, align 4, !dbg !11658
  %125 = load ptr, ptr %28, align 8, !dbg !11659
  %126 = call ptr @grab_and_watch_client(i32 noundef %123, i32 noundef %124, ptr noundef %125), !dbg !11660
  store ptr %126, ptr %34, align 8, !dbg !11661
  %127 = load ptr, ptr %34, align 8, !dbg !11662
  %128 = icmp ne ptr %127, null, !dbg !11662
  %129 = xor i1 %128, true, !dbg !11662
  %130 = zext i1 %129 to i32, !dbg !11662
  %131 = sext i32 %130 to i64, !dbg !11662
  %132 = icmp ne i64 %131, 0, !dbg !11662
  br i1 %132, label %133, label %134, !dbg !11664

133:                                              ; preds = %122
  br label %356, !dbg !11665

134:                                              ; preds = %122
  %135 = load ptr, ptr %34, align 8, !dbg !11666
  store ptr %135, ptr %14, align 8
  call void @llvm.dbg.declare(metadata ptr %14, metadata !11667, metadata !DIExpression()), !dbg !11672
  store ptr %30, ptr %15, align 8
  call void @llvm.dbg.declare(metadata ptr %15, metadata !11674, metadata !DIExpression()), !dbg !11675
  store ptr %31, ptr %16, align 8
  call void @llvm.dbg.declare(metadata ptr %16, metadata !11676, metadata !DIExpression()), !dbg !11677
  %136 = load ptr, ptr %14, align 8, !dbg !11678
  %137 = getelementptr inbounds %struct.lwan_connection_t_, ptr %136, i32 0, i32 2, !dbg !11680
  %138 = load ptr, ptr %137, align 8, !dbg !11680
  %139 = icmp ne ptr %138, null, !dbg !11678
  br i1 %139, label %140, label %151, !dbg !11681

140:                                              ; preds = %134
  %141 = load ptr, ptr %14, align 8, !dbg !11682
  %142 = load i32, ptr %141, align 8, !dbg !11685
  %143 = and i32 %142, 4, !dbg !11686
  %144 = icmp ne i32 %143, 0, !dbg !11686
  br i1 %144, label %145, label %146, !dbg !11687

145:                                              ; preds = %140
  br label %169, !dbg !11688

146:                                              ; preds = %140
  %147 = load ptr, ptr %14, align 8, !dbg !11689
  %148 = getelementptr inbounds %struct.lwan_connection_t_, ptr %147, i32 0, i32 2, !dbg !11690
  %149 = load ptr, ptr %148, align 8, !dbg !11690
  %150 = load ptr, ptr %14, align 8, !dbg !11691
  call void @coro_reset(ptr noundef %149, ptr noundef @process_request_coro, ptr noundef %150) #17, !dbg !11692
  br label %162, !dbg !11693

151:                                              ; preds = %134
  %152 = load ptr, ptr %15, align 8, !dbg !11694
  %153 = load ptr, ptr %14, align 8, !dbg !11696
  %154 = call ptr @coro_new(ptr noundef %152, ptr noundef @process_request_coro, ptr noundef %153) #17, !dbg !11697
  %155 = load ptr, ptr %14, align 8, !dbg !11698
  %156 = getelementptr inbounds %struct.lwan_connection_t_, ptr %155, i32 0, i32 2, !dbg !11699
  store ptr %154, ptr %156, align 8, !dbg !11700
  %157 = load ptr, ptr %16, align 8, !dbg !11701
  %158 = load ptr, ptr %14, align 8, !dbg !11702
  call void @death_queue_insert(ptr noundef %157, ptr noundef %158), !dbg !11703
  %159 = load ptr, ptr %14, align 8, !dbg !11704
  %160 = load i32, ptr %159, align 8, !dbg !11705
  %161 = or i32 %160, 2, !dbg !11705
  store i32 %161, ptr %159, align 8, !dbg !11705
  br label %162

162:                                              ; preds = %151, %146
  %163 = load ptr, ptr %14, align 8, !dbg !11706
  %164 = load i32, ptr %163, align 8, !dbg !11707
  %165 = or i32 %164, 4, !dbg !11707
  store i32 %165, ptr %163, align 8, !dbg !11707
  %166 = load ptr, ptr %14, align 8, !dbg !11708
  %167 = load i32, ptr %166, align 8, !dbg !11709
  %168 = and i32 %167, -9, !dbg !11709
  store i32 %168, ptr %166, align 8, !dbg !11709
  br label %169, !dbg !11710

169:                                              ; preds = %162, %145
  br label %354, !dbg !11711

170:                                              ; preds = %117
  %171 = load ptr, ptr %33, align 8, !dbg !11712
  %172 = getelementptr inbounds %struct.epoll_event, ptr %171, i32 0, i32 1, !dbg !11714
  %173 = load ptr, ptr %172, align 1, !dbg !11715
  store ptr %173, ptr %34, align 8, !dbg !11716
  %174 = load ptr, ptr %33, align 8, !dbg !11717
  %175 = getelementptr inbounds %struct.epoll_event, ptr %174, i32 0, i32 0, !dbg !11717
  %176 = load i32, ptr %175, align 1, !dbg !11717
  %177 = and i32 %176, 8208, !dbg !11717
  %178 = zext i32 %177 to i64, !dbg !11717
  %179 = icmp ne i64 %178, 0, !dbg !11717
  br i1 %179, label %180, label %210, !dbg !11719

180:                                              ; preds = %170
  %181 = load ptr, ptr %34, align 8, !dbg !11720
  store ptr %31, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %12, metadata !11722, metadata !DIExpression()), !dbg !11726
  store ptr %181, ptr %13, align 8
  call void @llvm.dbg.declare(metadata ptr %13, metadata !11728, metadata !DIExpression()), !dbg !11729
  %182 = load ptr, ptr %12, align 8, !dbg !11730
  %183 = load ptr, ptr %13, align 8, !dbg !11731
  call void @death_queue_remove(ptr noundef %182, ptr noundef %183), !dbg !11732
  %184 = load ptr, ptr %13, align 8, !dbg !11733
  %185 = getelementptr inbounds %struct.lwan_connection_t_, ptr %184, i32 0, i32 2, !dbg !11733
  %186 = load ptr, ptr %185, align 8, !dbg !11733
  %187 = icmp ne ptr %186, null, !dbg !11733
  %188 = xor i1 %187, true, !dbg !11733
  %189 = zext i1 %187 to i32, !dbg !11733
  %190 = sext i32 %189 to i64, !dbg !11733
  br i1 %187, label %191, label %197, !dbg !11735

191:                                              ; preds = %180
  %192 = load ptr, ptr %13, align 8, !dbg !11736
  %193 = getelementptr inbounds %struct.lwan_connection_t_, ptr %192, i32 0, i32 2, !dbg !11738
  %194 = load ptr, ptr %193, align 8, !dbg !11738
  call void @coro_free(ptr noundef %194) #17, !dbg !11739
  %195 = load ptr, ptr %13, align 8, !dbg !11740
  %196 = getelementptr inbounds %struct.lwan_connection_t_, ptr %195, i32 0, i32 2, !dbg !11741
  store ptr null, ptr %196, align 8, !dbg !11742
  br label %197, !dbg !11743

197:                                              ; preds = %191, %180
  %198 = load ptr, ptr %13, align 8, !dbg !11744
  %199 = load i32, ptr %198, align 8, !dbg !11746
  %200 = and i32 %199, 2, !dbg !11747
  %201 = icmp ne i32 %200, 0, !dbg !11747
  br i1 %201, label %202, label %209, !dbg !11748

202:                                              ; preds = %197
  %203 = load ptr, ptr %13, align 8, !dbg !11749
  %204 = load i32, ptr %203, align 8, !dbg !11751
  %205 = and i32 %204, -3, !dbg !11751
  store i32 %205, ptr %203, align 8, !dbg !11751
  %206 = load ptr, ptr %13, align 8, !dbg !11752
  %207 = call i32 @lwan_connection_get_fd(ptr noundef %206) #20, !dbg !11753
  %208 = call i32 @close(i32 noundef %207) #17, !dbg !11754
  br label %209, !dbg !11755

209:                                              ; preds = %202, %197
  br label %356, !dbg !11756

210:                                              ; preds = %170
  %211 = load ptr, ptr %34, align 8, !dbg !11757
  store ptr %211, ptr %17, align 8
  call void @llvm.dbg.declare(metadata ptr %17, metadata !11667, metadata !DIExpression()), !dbg !11758
  store ptr %30, ptr %18, align 8
  call void @llvm.dbg.declare(metadata ptr %18, metadata !11674, metadata !DIExpression()), !dbg !11760
  store ptr %31, ptr %19, align 8
  call void @llvm.dbg.declare(metadata ptr %19, metadata !11676, metadata !DIExpression()), !dbg !11761
  %212 = load ptr, ptr %17, align 8, !dbg !11762
  %213 = getelementptr inbounds %struct.lwan_connection_t_, ptr %212, i32 0, i32 2, !dbg !11763
  %214 = load ptr, ptr %213, align 8, !dbg !11763
  %215 = icmp ne ptr %214, null, !dbg !11762
  br i1 %215, label %216, label %227, !dbg !11764

216:                                              ; preds = %210
  %217 = load ptr, ptr %17, align 8, !dbg !11765
  %218 = load i32, ptr %217, align 8, !dbg !11766
  %219 = and i32 %218, 4, !dbg !11767
  %220 = icmp ne i32 %219, 0, !dbg !11767
  br i1 %220, label %221, label %222, !dbg !11768

221:                                              ; preds = %216
  br label %245, !dbg !11769

222:                                              ; preds = %216
  %223 = load ptr, ptr %17, align 8, !dbg !11770
  %224 = getelementptr inbounds %struct.lwan_connection_t_, ptr %223, i32 0, i32 2, !dbg !11771
  %225 = load ptr, ptr %224, align 8, !dbg !11771
  %226 = load ptr, ptr %17, align 8, !dbg !11772
  call void @coro_reset(ptr noundef %225, ptr noundef @process_request_coro, ptr noundef %226) #17, !dbg !11773
  br label %238, !dbg !11774

227:                                              ; preds = %210
  %228 = load ptr, ptr %18, align 8, !dbg !11775
  %229 = load ptr, ptr %17, align 8, !dbg !11776
  %230 = call ptr @coro_new(ptr noundef %228, ptr noundef @process_request_coro, ptr noundef %229) #17, !dbg !11777
  %231 = load ptr, ptr %17, align 8, !dbg !11778
  %232 = getelementptr inbounds %struct.lwan_connection_t_, ptr %231, i32 0, i32 2, !dbg !11779
  store ptr %230, ptr %232, align 8, !dbg !11780
  %233 = load ptr, ptr %19, align 8, !dbg !11781
  %234 = load ptr, ptr %17, align 8, !dbg !11782
  call void @death_queue_insert(ptr noundef %233, ptr noundef %234), !dbg !11783
  %235 = load ptr, ptr %17, align 8, !dbg !11784
  %236 = load i32, ptr %235, align 8, !dbg !11785
  %237 = or i32 %236, 2, !dbg !11785
  store i32 %237, ptr %235, align 8, !dbg !11785
  br label %238

238:                                              ; preds = %227, %222
  %239 = load ptr, ptr %17, align 8, !dbg !11786
  %240 = load i32, ptr %239, align 8, !dbg !11787
  %241 = or i32 %240, 4, !dbg !11787
  store i32 %241, ptr %239, align 8, !dbg !11787
  %242 = load ptr, ptr %17, align 8, !dbg !11788
  %243 = load i32, ptr %242, align 8, !dbg !11789
  %244 = and i32 %243, -9, !dbg !11789
  store i32 %244, ptr %242, align 8, !dbg !11789
  br label %245, !dbg !11790

245:                                              ; preds = %238, %221
  %246 = load ptr, ptr %34, align 8, !dbg !11791
  %247 = load i32, ptr %25, align 4, !dbg !11792
  store ptr %31, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !11793, metadata !DIExpression()), !dbg !11797
  store ptr %246, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !11799, metadata !DIExpression()), !dbg !11800
  store i32 %247, ptr %6, align 4
  call void @llvm.dbg.declare(metadata ptr %6, metadata !11801, metadata !DIExpression()), !dbg !11802
  %248 = load ptr, ptr %5, align 8, !dbg !11803
  %249 = getelementptr inbounds %struct.lwan_connection_t_, ptr %248, i32 0, i32 2, !dbg !11803
  %250 = load ptr, ptr %249, align 8, !dbg !11803
  %251 = icmp ne ptr %250, null, !dbg !11803
  br i1 %251, label %252, label %257, !dbg !11806

252:                                              ; preds = %245
  %253 = load ptr, ptr %5, align 8, !dbg !11807
  %254 = load i32, ptr %253, align 8, !dbg !11809
  %255 = and i32 %254, 4, !dbg !11810
  %256 = icmp ne i32 %255, 0, !dbg !11810
  br i1 %256, label %259, label %258, !dbg !11811

257:                                              ; preds = %245
  call void @__assert_fail(ptr noundef @.str.20.401, ptr noundef @.str.380, i32 noundef 177, ptr noundef @__PRETTY_FUNCTION__.resume_coro_if_needed) #23, !dbg !11803
  unreachable, !dbg !11803

258:                                              ; preds = %252
  br label %353, !dbg !11812

259:                                              ; preds = %252
  call void @llvm.dbg.declare(metadata ptr %7, metadata !11813, metadata !DIExpression()), !dbg !11815
  %260 = load ptr, ptr %5, align 8, !dbg !11816
  %261 = getelementptr inbounds %struct.lwan_connection_t_, ptr %260, i32 0, i32 2, !dbg !11817
  %262 = load ptr, ptr %261, align 8, !dbg !11817
  %263 = call i32 @coro_resume(ptr noundef %262) #17, !dbg !11818
  store i32 %263, ptr %7, align 4, !dbg !11815
  %264 = load i32, ptr %7, align 4, !dbg !11819
  %265 = icmp slt i32 %264, 0, !dbg !11821
  br i1 %265, label %266, label %297, !dbg !11822

266:                                              ; preds = %259
  %267 = load ptr, ptr %4, align 8, !dbg !11823
  %268 = load ptr, ptr %5, align 8, !dbg !11825
  store ptr %267, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !11722, metadata !DIExpression()), !dbg !11826
  store ptr %268, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !11728, metadata !DIExpression()), !dbg !11828
  %269 = load ptr, ptr %2, align 8, !dbg !11829
  %270 = load ptr, ptr %3, align 8, !dbg !11830
  call void @death_queue_remove(ptr noundef %269, ptr noundef %270), !dbg !11831
  %271 = load ptr, ptr %3, align 8, !dbg !11832
  %272 = getelementptr inbounds %struct.lwan_connection_t_, ptr %271, i32 0, i32 2, !dbg !11832
  %273 = load ptr, ptr %272, align 8, !dbg !11832
  %274 = icmp ne ptr %273, null, !dbg !11832
  %275 = xor i1 %274, true, !dbg !11832
  %276 = zext i1 %274 to i32, !dbg !11832
  %277 = sext i32 %276 to i64, !dbg !11832
  br i1 %274, label %278, label %284, !dbg !11833

278:                                              ; preds = %266
  %279 = load ptr, ptr %3, align 8, !dbg !11834
  %280 = getelementptr inbounds %struct.lwan_connection_t_, ptr %279, i32 0, i32 2, !dbg !11835
  %281 = load ptr, ptr %280, align 8, !dbg !11835
  call void @coro_free(ptr noundef %281) #17, !dbg !11836
  %282 = load ptr, ptr %3, align 8, !dbg !11837
  %283 = getelementptr inbounds %struct.lwan_connection_t_, ptr %282, i32 0, i32 2, !dbg !11838
  store ptr null, ptr %283, align 8, !dbg !11839
  br label %284, !dbg !11840

284:                                              ; preds = %278, %266
  %285 = load ptr, ptr %3, align 8, !dbg !11841
  %286 = load i32, ptr %285, align 8, !dbg !11842
  %287 = and i32 %286, 2, !dbg !11843
  %288 = icmp ne i32 %287, 0, !dbg !11843
  br i1 %288, label %289, label %296, !dbg !11844

289:                                              ; preds = %284
  %290 = load ptr, ptr %3, align 8, !dbg !11845
  %291 = load i32, ptr %290, align 8, !dbg !11846
  %292 = and i32 %291, -3, !dbg !11846
  store i32 %292, ptr %290, align 8, !dbg !11846
  %293 = load ptr, ptr %3, align 8, !dbg !11847
  %294 = call i32 @lwan_connection_get_fd(ptr noundef %293) #20, !dbg !11848
  %295 = call i32 @close(i32 noundef %294) #17, !dbg !11849
  br label %296, !dbg !11850

296:                                              ; preds = %289, %284
  br label %353, !dbg !11851

297:                                              ; preds = %259
  call void @llvm.dbg.declare(metadata ptr %8, metadata !11852, metadata !DIExpression()), !dbg !11853
  %298 = load ptr, ptr %5, align 8, !dbg !11854
  %299 = load i32, ptr %298, align 8, !dbg !11856
  %300 = and i32 %299, 16, !dbg !11857
  %301 = icmp ne i32 %300, 0, !dbg !11857
  br i1 %301, label %302, label %303, !dbg !11858

302:                                              ; preds = %297
  store i8 1, ptr %8, align 1, !dbg !11859
  br label %332, !dbg !11861

303:                                              ; preds = %297
  call void @llvm.dbg.declare(metadata ptr %9, metadata !11862, metadata !DIExpression()), !dbg !11864
  %304 = load i32, ptr %7, align 4, !dbg !11865
  %305 = icmp eq i32 %304, 0, !dbg !11866
  %306 = zext i1 %305 to i8, !dbg !11864
  store i8 %306, ptr %9, align 1, !dbg !11864
  %307 = load i8, ptr %9, align 1, !dbg !11867
  %308 = trunc i8 %307 to i1, !dbg !11867
  br i1 %308, label %309, label %313, !dbg !11869

309:                                              ; preds = %303
  %310 = load ptr, ptr %5, align 8, !dbg !11870
  %311 = load i32, ptr %310, align 8, !dbg !11871
  %312 = or i32 %311, 4, !dbg !11871
  store i32 %312, ptr %310, align 8, !dbg !11871
  br label %317, !dbg !11870

313:                                              ; preds = %303
  %314 = load ptr, ptr %5, align 8, !dbg !11872
  %315 = load i32, ptr %314, align 8, !dbg !11873
  %316 = and i32 %315, -5, !dbg !11873
  store i32 %316, ptr %314, align 8, !dbg !11873
  br label %317

317:                                              ; preds = %313, %309
  %318 = load ptr, ptr %5, align 8, !dbg !11874
  %319 = load i32, ptr %318, align 8, !dbg !11875
  %320 = and i32 %319, 8, !dbg !11876
  %321 = icmp ne i32 %320, 0, !dbg !11877
  %322 = zext i1 %321 to i8, !dbg !11878
  store i8 %322, ptr %8, align 1, !dbg !11878
  %323 = load i8, ptr %9, align 1, !dbg !11879
  %324 = trunc i8 %323 to i1, !dbg !11879
  %325 = zext i1 %324 to i32, !dbg !11879
  %326 = load i8, ptr %8, align 1, !dbg !11881
  %327 = trunc i8 %326 to i1, !dbg !11881
  %328 = zext i1 %327 to i32, !dbg !11881
  %329 = icmp eq i32 %325, %328, !dbg !11882
  br i1 %329, label %330, label %331, !dbg !11883

330:                                              ; preds = %317
  br label %353, !dbg !11884

331:                                              ; preds = %317
  br label %332

332:                                              ; preds = %331, %302
  call void @llvm.dbg.declare(metadata ptr %10, metadata !11885, metadata !DIExpression()), !dbg !11886
  %333 = load i8, ptr %8, align 1, !dbg !11887
  %334 = trunc i8 %333 to i1, !dbg !11887
  %335 = zext i1 %334 to i64, !dbg !11888
  %336 = getelementptr inbounds [2 x i32], ptr @events_by_write_flag, i64 0, i64 %335, !dbg !11888
  %337 = load i32, ptr %336, align 4, !dbg !11888
  store i32 %337, ptr %10, align 1, !dbg !11889
  %338 = getelementptr inbounds %struct.epoll_event, ptr %10, i32 0, i32 1, !dbg !11889
  %339 = load ptr, ptr %5, align 8, !dbg !11890
  store ptr %339, ptr %338, align 1, !dbg !11891
  call void @llvm.dbg.declare(metadata ptr %11, metadata !11892, metadata !DIExpression()), !dbg !11893
  %340 = load ptr, ptr %5, align 8, !dbg !11894
  %341 = call i32 @lwan_connection_get_fd(ptr noundef %340) #20, !dbg !11895
  store i32 %341, ptr %11, align 4, !dbg !11893
  %342 = load i32, ptr %6, align 4, !dbg !11896
  %343 = load i32, ptr %11, align 4, !dbg !11896
  %344 = call i32 @epoll_ctl(i32 noundef %342, i32 noundef 3, i32 noundef %343, ptr noundef %10) #17, !dbg !11896
  %345 = icmp slt i32 %344, 0, !dbg !11896
  %346 = zext i1 %345 to i32, !dbg !11896
  %347 = sext i32 %346 to i64, !dbg !11896
  br i1 %345, label %348, label %349, !dbg !11898

348:                                              ; preds = %332
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.380, i32 noundef 212, ptr noundef @__FUNCTION__.resume_coro_if_needed, ptr noundef @.str.13.396) #17, !dbg !11899
  br label %349, !dbg !11899

349:                                              ; preds = %348, %332
  %350 = load ptr, ptr %5, align 8, !dbg !11900
  %351 = load i32, ptr %350, align 8, !dbg !11901
  %352 = xor i32 %351, 8, !dbg !11901
  store i32 %352, ptr %350, align 8, !dbg !11901
  br label %353, !dbg !11902

353:                                              ; preds = %349, %330, %296, %258
  br label %354

354:                                              ; preds = %353, %169
  %355 = load ptr, ptr %34, align 8, !dbg !11903
  call void @death_queue_move_to_last(ptr noundef %31, ptr noundef %355), !dbg !11904
  br label %356, !dbg !11905

356:                                              ; preds = %354, %209, %133
  %357 = load ptr, ptr %33, align 8, !dbg !11906
  %358 = getelementptr inbounds %struct.epoll_event, ptr %357, i32 1, !dbg !11906
  store ptr %358, ptr %33, align 8, !dbg !11906
  br label %113, !dbg !11907, !llvm.loop !11908

359:                                              ; preds = %113
  br label %360, !dbg !11910

360:                                              ; preds = %359, %109
  br label %95, !dbg !11911, !llvm.loop !11633

361:                                              ; preds = %107
  call void @llvm.dbg.label(metadata !11912), !dbg !11913
  %362 = load ptr, ptr %29, align 8, !dbg !11914
  call void @free(ptr noundef %362) #17, !dbg !11915
  ret ptr null, !dbg !11916
}

; Function Attrs: nounwind
declare i32 @pthread_attr_destroy(ptr noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @death_queue_init(ptr noundef %0, ptr noundef %1, i16 noundef zeroext %2) #0 !dbg !11917 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i16, align 2
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !11920, metadata !DIExpression()), !dbg !11921
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !11922, metadata !DIExpression()), !dbg !11923
  store i16 %2, ptr %6, align 2
  call void @llvm.dbg.declare(metadata ptr %6, metadata !11924, metadata !DIExpression()), !dbg !11925
  %7 = load ptr, ptr %5, align 8, !dbg !11926
  %8 = load ptr, ptr %4, align 8, !dbg !11927
  %9 = getelementptr inbounds %struct.death_queue_t, ptr %8, i32 0, i32 0, !dbg !11928
  store ptr %7, ptr %9, align 8, !dbg !11929
  %10 = load ptr, ptr %4, align 8, !dbg !11930
  %11 = getelementptr inbounds %struct.death_queue_t, ptr %10, i32 0, i32 2, !dbg !11931
  store i32 0, ptr %11, align 8, !dbg !11932
  %12 = load i16, ptr %6, align 2, !dbg !11933
  %13 = load ptr, ptr %4, align 8, !dbg !11934
  %14 = getelementptr inbounds %struct.death_queue_t, ptr %13, i32 0, i32 3, !dbg !11935
  store i16 %12, ptr %14, align 4, !dbg !11936
  %15 = load ptr, ptr %4, align 8, !dbg !11937
  %16 = getelementptr inbounds %struct.death_queue_t, ptr %15, i32 0, i32 1, !dbg !11938
  %17 = getelementptr inbounds %struct.lwan_connection_t_, ptr %16, i32 0, i32 4, !dbg !11939
  store i32 -1, ptr %17, align 8, !dbg !11940
  %18 = load ptr, ptr %4, align 8, !dbg !11941
  %19 = getelementptr inbounds %struct.death_queue_t, ptr %18, i32 0, i32 1, !dbg !11942
  %20 = getelementptr inbounds %struct.lwan_connection_t_, ptr %19, i32 0, i32 5, !dbg !11943
  store i32 -1, ptr %20, align 4, !dbg !11944
  ret void, !dbg !11945
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @death_queue_empty(ptr noundef %0) #0 !dbg !11946 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !11949, metadata !DIExpression()), !dbg !11950
  %3 = load ptr, ptr %2, align 8, !dbg !11951
  %4 = getelementptr inbounds %struct.death_queue_t, ptr %3, i32 0, i32 1, !dbg !11952
  %5 = getelementptr inbounds %struct.lwan_connection_t_, ptr %4, i32 0, i32 5, !dbg !11953
  %6 = load i32, ptr %5, align 4, !dbg !11953
  %7 = icmp slt i32 %6, 0, !dbg !11954
  ret i1 %7, !dbg !11955
}

declare i32 @epoll_wait(i32 noundef, ptr noundef, i32 noundef, i32 noundef) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal void @death_queue_kill_waiting(ptr noundef %0) #0 !dbg !11956 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !11959, metadata !DIExpression()), !dbg !11960
  %6 = load ptr, ptr %4, align 8, !dbg !11961
  %7 = getelementptr inbounds %struct.death_queue_t, ptr %6, i32 0, i32 2, !dbg !11962
  %8 = load i32, ptr %7, align 8, !dbg !11963
  %9 = add i32 %8, 1, !dbg !11963
  store i32 %9, ptr %7, align 8, !dbg !11963
  br label %10, !dbg !11964

10:                                               ; preds = %59, %1
  %11 = load ptr, ptr %4, align 8, !dbg !11965
  %12 = call zeroext i1 @death_queue_empty(ptr noundef %11), !dbg !11966
  %13 = xor i1 %12, true, !dbg !11967
  br i1 %13, label %14, label %60, !dbg !11964

14:                                               ; preds = %10
  call void @llvm.dbg.declare(metadata ptr %5, metadata !11968, metadata !DIExpression()), !dbg !11970
  %15 = load ptr, ptr %4, align 8, !dbg !11971
  %16 = load ptr, ptr %4, align 8, !dbg !11972
  %17 = getelementptr inbounds %struct.death_queue_t, ptr %16, i32 0, i32 1, !dbg !11973
  %18 = getelementptr inbounds %struct.lwan_connection_t_, ptr %17, i32 0, i32 5, !dbg !11974
  %19 = load i32, ptr %18, align 4, !dbg !11974
  %20 = call ptr @death_queue_idx_to_node(ptr noundef %15, i32 noundef %19), !dbg !11975
  store ptr %20, ptr %5, align 8, !dbg !11970
  %21 = load ptr, ptr %5, align 8, !dbg !11976
  %22 = getelementptr inbounds %struct.lwan_connection_t_, ptr %21, i32 0, i32 1, !dbg !11978
  %23 = load i32, ptr %22, align 4, !dbg !11978
  %24 = load ptr, ptr %4, align 8, !dbg !11979
  %25 = getelementptr inbounds %struct.death_queue_t, ptr %24, i32 0, i32 2, !dbg !11980
  %26 = load i32, ptr %25, align 8, !dbg !11980
  %27 = icmp ugt i32 %23, %26, !dbg !11981
  br i1 %27, label %28, label %29, !dbg !11982

28:                                               ; preds = %14
  br label %63, !dbg !11983

29:                                               ; preds = %14
  %30 = load ptr, ptr %4, align 8, !dbg !11984
  %31 = load ptr, ptr %5, align 8, !dbg !11985
  store ptr %30, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !11722, metadata !DIExpression()), !dbg !11986
  store ptr %31, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !11728, metadata !DIExpression()), !dbg !11988
  %32 = load ptr, ptr %2, align 8, !dbg !11989
  %33 = load ptr, ptr %3, align 8, !dbg !11990
  call void @death_queue_remove(ptr noundef %32, ptr noundef %33), !dbg !11991
  %34 = load ptr, ptr %3, align 8, !dbg !11992
  %35 = getelementptr inbounds %struct.lwan_connection_t_, ptr %34, i32 0, i32 2, !dbg !11992
  %36 = load ptr, ptr %35, align 8, !dbg !11992
  %37 = icmp ne ptr %36, null, !dbg !11992
  %38 = xor i1 %37, true, !dbg !11992
  %39 = zext i1 %37 to i32, !dbg !11992
  %40 = sext i32 %39 to i64, !dbg !11992
  br i1 %37, label %41, label %47, !dbg !11993

41:                                               ; preds = %29
  %42 = load ptr, ptr %3, align 8, !dbg !11994
  %43 = getelementptr inbounds %struct.lwan_connection_t_, ptr %42, i32 0, i32 2, !dbg !11995
  %44 = load ptr, ptr %43, align 8, !dbg !11995
  call void @coro_free(ptr noundef %44) #17, !dbg !11996
  %45 = load ptr, ptr %3, align 8, !dbg !11997
  %46 = getelementptr inbounds %struct.lwan_connection_t_, ptr %45, i32 0, i32 2, !dbg !11998
  store ptr null, ptr %46, align 8, !dbg !11999
  br label %47, !dbg !12000

47:                                               ; preds = %41, %29
  %48 = load ptr, ptr %3, align 8, !dbg !12001
  %49 = load i32, ptr %48, align 8, !dbg !12002
  %50 = and i32 %49, 2, !dbg !12003
  %51 = icmp ne i32 %50, 0, !dbg !12003
  br i1 %51, label %52, label %59, !dbg !12004

52:                                               ; preds = %47
  %53 = load ptr, ptr %3, align 8, !dbg !12005
  %54 = load i32, ptr %53, align 8, !dbg !12006
  %55 = and i32 %54, -3, !dbg !12006
  store i32 %55, ptr %53, align 8, !dbg !12006
  %56 = load ptr, ptr %3, align 8, !dbg !12007
  %57 = call i32 @lwan_connection_get_fd(ptr noundef %56) #20, !dbg !12008
  %58 = call i32 @close(i32 noundef %57) #17, !dbg !12009
  br label %59, !dbg !12010

59:                                               ; preds = %52, %47
  br label %10, !dbg !11964, !llvm.loop !12011

60:                                               ; preds = %10
  %61 = load ptr, ptr %4, align 8, !dbg !12013
  %62 = getelementptr inbounds %struct.death_queue_t, ptr %61, i32 0, i32 2, !dbg !12014
  store i32 0, ptr %62, align 8, !dbg !12015
  br label %63, !dbg !12016

63:                                               ; preds = %60, %28
  ret void, !dbg !12016
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @update_date_cache(ptr noundef %0) #0 !dbg !12017 {
  %2 = alloca ptr, align 8
  %3 = alloca i64, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !12020, metadata !DIExpression()), !dbg !12021
  call void @llvm.dbg.declare(metadata ptr %3, metadata !12022, metadata !DIExpression()), !dbg !12023
  %4 = call i64 @time(ptr noundef null) #17, !dbg !12024
  store i64 %4, ptr %3, align 8, !dbg !12023
  %5 = load i64, ptr %3, align 8, !dbg !12025
  %6 = load ptr, ptr %2, align 8, !dbg !12027
  %7 = getelementptr inbounds %struct.lwan_thread_t_, ptr %6, i32 0, i32 1, !dbg !12028
  %8 = getelementptr inbounds %struct.anon.27, ptr %7, i32 0, i32 2, !dbg !12029
  %9 = load i64, ptr %8, align 8, !dbg !12029
  %10 = icmp ne i64 %5, %9, !dbg !12030
  br i1 %10, label %11, label %34, !dbg !12031

11:                                               ; preds = %1
  %12 = load i64, ptr %3, align 8, !dbg !12032
  %13 = load ptr, ptr %2, align 8, !dbg !12034
  %14 = getelementptr inbounds %struct.lwan_thread_t_, ptr %13, i32 0, i32 1, !dbg !12035
  %15 = getelementptr inbounds %struct.anon.27, ptr %14, i32 0, i32 2, !dbg !12036
  store i64 %12, ptr %15, align 8, !dbg !12037
  %16 = load i64, ptr %3, align 8, !dbg !12038
  %17 = load ptr, ptr %2, align 8, !dbg !12039
  %18 = getelementptr inbounds %struct.lwan_thread_t_, ptr %17, i32 0, i32 1, !dbg !12040
  %19 = getelementptr inbounds %struct.anon.27, ptr %18, i32 0, i32 0, !dbg !12041
  %20 = getelementptr inbounds [30 x i8], ptr %19, i64 0, i64 0, !dbg !12039
  call void @lwan_format_rfc_time(i64 noundef %16, ptr noundef %20), !dbg !12042
  %21 = load i64, ptr %3, align 8, !dbg !12043
  %22 = load ptr, ptr %2, align 8, !dbg !12044
  %23 = getelementptr inbounds %struct.lwan_thread_t_, ptr %22, i32 0, i32 0, !dbg !12045
  %24 = load ptr, ptr %23, align 8, !dbg !12045
  %25 = getelementptr inbounds %struct.lwan_t_, ptr %24, i32 0, i32 4, !dbg !12046
  %26 = getelementptr inbounds %struct.lwan_config_t_, ptr %25, i32 0, i32 4, !dbg !12047
  %27 = load i32, ptr %26, align 4, !dbg !12047
  %28 = zext i32 %27 to i64, !dbg !12048
  %29 = add nsw i64 %21, %28, !dbg !12049
  %30 = load ptr, ptr %2, align 8, !dbg !12050
  %31 = getelementptr inbounds %struct.lwan_thread_t_, ptr %30, i32 0, i32 1, !dbg !12051
  %32 = getelementptr inbounds %struct.anon.27, ptr %31, i32 0, i32 1, !dbg !12052
  %33 = getelementptr inbounds [30 x i8], ptr %32, i64 0, i64 0, !dbg !12050
  call void @lwan_format_rfc_time(i64 noundef %29, ptr noundef %33), !dbg !12053
  br label %34, !dbg !12054

34:                                               ; preds = %11, %1
  ret void, !dbg !12055
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @grab_and_watch_client(i32 noundef %0, i32 noundef %1, ptr noundef %2) #0 !dbg !12056 {
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.epoll_event, align 1
  store i32 %0, ptr %5, align 4
  call void @llvm.dbg.declare(metadata ptr %5, metadata !12059, metadata !DIExpression()), !dbg !12060
  store i32 %1, ptr %6, align 4
  call void @llvm.dbg.declare(metadata ptr %6, metadata !12061, metadata !DIExpression()), !dbg !12062
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !12063, metadata !DIExpression()), !dbg !12064
  call void @llvm.dbg.declare(metadata ptr %8, metadata !12065, metadata !DIExpression()), !dbg !12066
  %10 = load i32, ptr %6, align 4, !dbg !12067
  %11 = call i64 @read(i32 noundef %10, ptr noundef %8, i64 noundef 4), !dbg !12067
  %12 = icmp ne i64 %11, 4, !dbg !12067
  %13 = zext i1 %12 to i32, !dbg !12067
  %14 = sext i32 %13 to i64, !dbg !12067
  %15 = icmp ne i64 %14, 0, !dbg !12067
  br i1 %15, label %16, label %17, !dbg !12069

16:                                               ; preds = %3
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.380, i32 noundef 285, ptr noundef @__FUNCTION__.grab_and_watch_client, ptr noundef @.str.18.403), !dbg !12070
  store ptr null, ptr %4, align 8, !dbg !12072
  br label %38, !dbg !12072

17:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata ptr %9, metadata !12073, metadata !DIExpression()), !dbg !12074
  %18 = getelementptr inbounds %struct.epoll_event, ptr %9, i32 0, i32 0, !dbg !12075
  %19 = load i32, ptr getelementptr inbounds ([2 x i32], ptr @events_by_write_flag, i64 0, i64 1), align 4, !dbg !12076
  store i32 %19, ptr %18, align 1, !dbg !12075
  %20 = getelementptr inbounds %struct.epoll_event, ptr %9, i32 0, i32 1, !dbg !12075
  %21 = load ptr, ptr %7, align 8, !dbg !12077
  %22 = load i32, ptr %8, align 4, !dbg !12078
  %23 = sext i32 %22 to i64, !dbg !12077
  %24 = getelementptr inbounds %struct.lwan_connection_t_, ptr %21, i64 %23, !dbg !12077
  store ptr %24, ptr %20, align 1, !dbg !12079
  %25 = load i32, ptr %5, align 4, !dbg !12080
  %26 = load i32, ptr %8, align 4, !dbg !12080
  %27 = call i32 @epoll_ctl(i32 noundef %25, i32 noundef 1, i32 noundef %26, ptr noundef %9) #17, !dbg !12080
  %28 = icmp slt i32 %27, 0, !dbg !12080
  %29 = zext i1 %28 to i32, !dbg !12080
  %30 = sext i32 %29 to i64, !dbg !12080
  %31 = icmp ne i64 %30, 0, !dbg !12080
  br i1 %31, label %32, label %33, !dbg !12082

32:                                               ; preds = %17
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.380, i32 noundef 294, ptr noundef @__FUNCTION__.grab_and_watch_client, ptr noundef @.str.13.396) #24, !dbg !12083
  unreachable, !dbg !12083

33:                                               ; preds = %17
  %34 = load ptr, ptr %7, align 8, !dbg !12084
  %35 = load i32, ptr %8, align 4, !dbg !12085
  %36 = sext i32 %35 to i64, !dbg !12084
  %37 = getelementptr inbounds %struct.lwan_connection_t_, ptr %34, i64 %36, !dbg !12084
  store ptr %37, ptr %4, align 8, !dbg !12086
  br label %38, !dbg !12086

38:                                               ; preds = %33, %16
  %39 = load ptr, ptr %4, align 8, !dbg !12087
  ret ptr %39, !dbg !12087
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @process_request_coro(ptr noundef %0) #0 !dbg !12088 {
  %2 = alloca i32, align 4
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca [4096 x i8], align 16
  %9 = alloca %struct.lwan_value_t_, align 8
  %10 = alloca ptr, align 8
  %11 = alloca %struct.lwan_request_t_, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !12089, metadata !DIExpression()), !dbg !12090
  call void @llvm.dbg.declare(metadata ptr %4, metadata !12091, metadata !DIExpression()), !dbg !12107
  %12 = load ptr, ptr %3, align 8, !dbg !12108
  %13 = call ptr @coro_malloc_full(ptr noundef %12, i64 noundef 32, ptr noundef @strbuf_free), !dbg !12109
  store ptr %13, ptr %4, align 8, !dbg !12107
  call void @llvm.dbg.declare(metadata ptr %5, metadata !12110, metadata !DIExpression()), !dbg !12111
  %14 = load ptr, ptr %3, align 8, !dbg !12112
  %15 = call ptr @coro_get_data(ptr noundef %14), !dbg !12113
  store ptr %15, ptr %5, align 8, !dbg !12111
  call void @llvm.dbg.declare(metadata ptr %6, metadata !12114, metadata !DIExpression()), !dbg !12115
  %16 = load ptr, ptr %5, align 8, !dbg !12116
  %17 = getelementptr inbounds %struct.lwan_connection_t_, ptr %16, i32 0, i32 3, !dbg !12117
  %18 = load ptr, ptr %17, align 8, !dbg !12117
  %19 = getelementptr inbounds %struct.lwan_thread_t_, ptr %18, i32 0, i32 0, !dbg !12118
  %20 = load ptr, ptr %19, align 8, !dbg !12118
  store ptr %20, ptr %6, align 8, !dbg !12115
  call void @llvm.dbg.declare(metadata ptr %7, metadata !12119, metadata !DIExpression()), !dbg !12120
  %21 = load ptr, ptr %5, align 8, !dbg !12121
  %22 = call i32 @lwan_connection_get_fd(ptr noundef %21) #20, !dbg !12122
  store i32 %22, ptr %7, align 4, !dbg !12120
  call void @llvm.dbg.declare(metadata ptr %8, metadata !12123, metadata !DIExpression()), !dbg !12124
  call void @llvm.dbg.declare(metadata ptr %9, metadata !12125, metadata !DIExpression()), !dbg !12131
  %23 = getelementptr inbounds %struct.lwan_value_t_, ptr %9, i32 0, i32 0, !dbg !12132
  %24 = getelementptr inbounds [4096 x i8], ptr %8, i64 0, i64 0, !dbg !12133
  store ptr %24, ptr %23, align 8, !dbg !12132
  %25 = getelementptr inbounds %struct.lwan_value_t_, ptr %9, i32 0, i32 1, !dbg !12132
  store i64 0, ptr %25, align 8, !dbg !12132
  call void @llvm.dbg.declare(metadata ptr %10, metadata !12134, metadata !DIExpression()), !dbg !12135
  store ptr null, ptr %10, align 8, !dbg !12135
  %26 = load ptr, ptr %4, align 8, !dbg !12136
  %27 = call zeroext i1 @strbuf_init(ptr noundef %26), !dbg !12137
  br label %28, !dbg !12138

28:                                               ; preds = %60, %1
  call void @llvm.dbg.declare(metadata ptr %11, metadata !12139, metadata !DIExpression()), !dbg !12188
  call void @llvm.memset.p0.i64(ptr align 8 %11, i8 0, i64 160, i1 false), !dbg !12188
  %29 = getelementptr inbounds %struct.lwan_request_t_, ptr %11, i32 0, i32 1, !dbg !12189
  %30 = load i32, ptr %7, align 4, !dbg !12190
  store i32 %30, ptr %29, align 4, !dbg !12189
  %31 = getelementptr inbounds %struct.lwan_request_t_, ptr %11, i32 0, i32 4, !dbg !12189
  %32 = load ptr, ptr %5, align 8, !dbg !12191
  store ptr %32, ptr %31, align 8, !dbg !12189
  %33 = getelementptr inbounds %struct.lwan_request_t_, ptr %11, i32 0, i32 8, !dbg !12189
  %34 = getelementptr inbounds %struct.lwan_response_t_, ptr %33, i32 0, i32 0, !dbg !12192
  %35 = load ptr, ptr %4, align 8, !dbg !12193
  store ptr %35, ptr %34, align 8, !dbg !12192
  %36 = load ptr, ptr %5, align 8, !dbg !12194
  %37 = getelementptr inbounds %struct.lwan_connection_t_, ptr %36, i32 0, i32 0, !dbg !12194
  %38 = load i32, ptr %37, align 8, !dbg !12194
  %39 = and i32 %38, 2, !dbg !12194
  %40 = icmp ne i32 %39, 0, !dbg !12194
  br i1 %40, label %41, label %42, !dbg !12197

41:                                               ; preds = %28
  br label %43, !dbg !12197

42:                                               ; preds = %28
  call void @__assert_fail(ptr noundef @.str.19.402, ptr noundef @.str.380, i32 noundef 158, ptr noundef @__PRETTY_FUNCTION__.process_request_coro) #23, !dbg !12194
  unreachable, !dbg !12194

43:                                               ; preds = %41
  %44 = load ptr, ptr %6, align 8, !dbg !12198
  %45 = load ptr, ptr %10, align 8, !dbg !12199
  %46 = call ptr @lwan_process_request(ptr noundef %44, ptr noundef %11, ptr noundef %9, ptr noundef %45), !dbg !12200
  store ptr %46, ptr %10, align 8, !dbg !12201
  %47 = load ptr, ptr %10, align 8, !dbg !12202
  %48 = icmp ne ptr %47, null, !dbg !12202
  br i1 %48, label %50, label %49, !dbg !12204

49:                                               ; preds = %43
  br label %61, !dbg !12205

50:                                               ; preds = %43
  %51 = load ptr, ptr %3, align 8, !dbg !12206
  %52 = call i32 @coro_yield(ptr noundef %51, i32 noundef 0), !dbg !12207
  %53 = load ptr, ptr %4, align 8, !dbg !12208
  %54 = call zeroext i1 @strbuf_reset_length(ptr noundef %53), !dbg !12208
  %55 = xor i1 %54, true, !dbg !12208
  %56 = zext i1 %55 to i32, !dbg !12208
  %57 = sext i32 %56 to i64, !dbg !12208
  %58 = icmp ne i64 %57, 0, !dbg !12208
  br i1 %58, label %59, label %60, !dbg !12210

59:                                               ; preds = %50
  store i32 -1, ptr %2, align 4, !dbg !12211
  br label %62, !dbg !12211

60:                                               ; preds = %50
  br label %28, !dbg !12138, !llvm.loop !12212

61:                                               ; preds = %49
  store i32 1, ptr %2, align 4, !dbg !12214
  br label %62, !dbg !12214

62:                                               ; preds = %61, %59
  %63 = load i32, ptr %2, align 4, !dbg !12215
  ret i32 %63, !dbg !12215
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @death_queue_insert(ptr noundef %0, ptr noundef %1) #0 !dbg !12216 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !12217, metadata !DIExpression()), !dbg !12218
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !12219, metadata !DIExpression()), !dbg !12220
  %6 = load ptr, ptr %4, align 8, !dbg !12221
  %7 = getelementptr inbounds %struct.lwan_connection_t_, ptr %6, i32 0, i32 5, !dbg !12222
  store i32 -1, ptr %7, align 4, !dbg !12223
  %8 = load ptr, ptr %3, align 8, !dbg !12224
  %9 = getelementptr inbounds %struct.death_queue_t, ptr %8, i32 0, i32 1, !dbg !12225
  %10 = getelementptr inbounds %struct.lwan_connection_t_, ptr %9, i32 0, i32 4, !dbg !12226
  %11 = load i32, ptr %10, align 8, !dbg !12226
  %12 = load ptr, ptr %4, align 8, !dbg !12227
  %13 = getelementptr inbounds %struct.lwan_connection_t_, ptr %12, i32 0, i32 4, !dbg !12228
  store i32 %11, ptr %13, align 8, !dbg !12229
  call void @llvm.dbg.declare(metadata ptr %5, metadata !12230, metadata !DIExpression()), !dbg !12231
  %14 = load ptr, ptr %3, align 8, !dbg !12232
  %15 = load ptr, ptr %3, align 8, !dbg !12233
  %16 = getelementptr inbounds %struct.death_queue_t, ptr %15, i32 0, i32 1, !dbg !12234
  %17 = getelementptr inbounds %struct.lwan_connection_t_, ptr %16, i32 0, i32 4, !dbg !12235
  %18 = load i32, ptr %17, align 8, !dbg !12235
  %19 = call ptr @death_queue_idx_to_node(ptr noundef %14, i32 noundef %18), !dbg !12236
  store ptr %19, ptr %5, align 8, !dbg !12231
  %20 = load ptr, ptr %3, align 8, !dbg !12237
  %21 = load ptr, ptr %4, align 8, !dbg !12238
  %22 = call i32 @death_queue_node_to_idx(ptr noundef %20, ptr noundef %21), !dbg !12239
  %23 = load ptr, ptr %5, align 8, !dbg !12240
  %24 = getelementptr inbounds %struct.lwan_connection_t_, ptr %23, i32 0, i32 5, !dbg !12241
  store i32 %22, ptr %24, align 4, !dbg !12242
  %25 = load ptr, ptr %3, align 8, !dbg !12243
  %26 = getelementptr inbounds %struct.death_queue_t, ptr %25, i32 0, i32 1, !dbg !12244
  %27 = getelementptr inbounds %struct.lwan_connection_t_, ptr %26, i32 0, i32 4, !dbg !12245
  store i32 %22, ptr %27, align 8, !dbg !12246
  ret void, !dbg !12247
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @death_queue_remove(ptr noundef %0, ptr noundef %1) #0 !dbg !12248 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !12249, metadata !DIExpression()), !dbg !12250
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !12251, metadata !DIExpression()), !dbg !12252
  call void @llvm.dbg.declare(metadata ptr %5, metadata !12253, metadata !DIExpression()), !dbg !12254
  %7 = load ptr, ptr %3, align 8, !dbg !12255
  %8 = load ptr, ptr %4, align 8, !dbg !12256
  %9 = getelementptr inbounds %struct.lwan_connection_t_, ptr %8, i32 0, i32 4, !dbg !12257
  %10 = load i32, ptr %9, align 8, !dbg !12257
  %11 = call ptr @death_queue_idx_to_node(ptr noundef %7, i32 noundef %10), !dbg !12258
  store ptr %11, ptr %5, align 8, !dbg !12254
  call void @llvm.dbg.declare(metadata ptr %6, metadata !12259, metadata !DIExpression()), !dbg !12260
  %12 = load ptr, ptr %3, align 8, !dbg !12261
  %13 = load ptr, ptr %4, align 8, !dbg !12262
  %14 = getelementptr inbounds %struct.lwan_connection_t_, ptr %13, i32 0, i32 5, !dbg !12263
  %15 = load i32, ptr %14, align 4, !dbg !12263
  %16 = call ptr @death_queue_idx_to_node(ptr noundef %12, i32 noundef %15), !dbg !12264
  store ptr %16, ptr %6, align 8, !dbg !12260
  %17 = load ptr, ptr %4, align 8, !dbg !12265
  %18 = getelementptr inbounds %struct.lwan_connection_t_, ptr %17, i32 0, i32 4, !dbg !12266
  %19 = load i32, ptr %18, align 8, !dbg !12266
  %20 = load ptr, ptr %6, align 8, !dbg !12267
  %21 = getelementptr inbounds %struct.lwan_connection_t_, ptr %20, i32 0, i32 4, !dbg !12268
  store i32 %19, ptr %21, align 8, !dbg !12269
  %22 = load ptr, ptr %4, align 8, !dbg !12270
  %23 = getelementptr inbounds %struct.lwan_connection_t_, ptr %22, i32 0, i32 5, !dbg !12271
  %24 = load i32, ptr %23, align 4, !dbg !12271
  %25 = load ptr, ptr %5, align 8, !dbg !12272
  %26 = getelementptr inbounds %struct.lwan_connection_t_, ptr %25, i32 0, i32 5, !dbg !12273
  store i32 %24, ptr %26, align 4, !dbg !12274
  ret void, !dbg !12275
}

; Function Attrs: alwaysinline nounwind willreturn memory(read) uwtable
define dso_local i32 @lwan_connection_get_fd(ptr noundef %0) #15 !dbg !12276 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !12279, metadata !DIExpression()), !dbg !12280
  %3 = load ptr, ptr %2, align 8, !dbg !12281
  %4 = load ptr, ptr %2, align 8, !dbg !12282
  %5 = getelementptr inbounds %struct.lwan_connection_t_, ptr %4, i32 0, i32 3, !dbg !12283
  %6 = load ptr, ptr %5, align 8, !dbg !12283
  %7 = getelementptr inbounds %struct.lwan_thread_t_, ptr %6, i32 0, i32 0, !dbg !12284
  %8 = load ptr, ptr %7, align 8, !dbg !12284
  %9 = getelementptr inbounds %struct.lwan_t_, ptr %8, i32 0, i32 1, !dbg !12285
  %10 = load ptr, ptr %9, align 8, !dbg !12285
  %11 = ptrtoint ptr %3 to i64, !dbg !12286
  %12 = ptrtoint ptr %10 to i64, !dbg !12286
  %13 = sub i64 %11, %12, !dbg !12286
  %14 = sdiv exact i64 %13, 32, !dbg !12286
  %15 = trunc i64 %14 to i32, !dbg !12287
  ret i32 %15, !dbg !12288
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @death_queue_move_to_last(ptr noundef %0, ptr noundef %1) #0 !dbg !12289 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !12290, metadata !DIExpression()), !dbg !12291
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !12292, metadata !DIExpression()), !dbg !12293
  %5 = load ptr, ptr %3, align 8, !dbg !12294
  %6 = getelementptr inbounds %struct.death_queue_t, ptr %5, i32 0, i32 2, !dbg !12295
  %7 = load i32, ptr %6, align 8, !dbg !12295
  %8 = load ptr, ptr %3, align 8, !dbg !12296
  %9 = getelementptr inbounds %struct.death_queue_t, ptr %8, i32 0, i32 3, !dbg !12297
  %10 = load i16, ptr %9, align 4, !dbg !12297
  %11 = zext i16 %10 to i32, !dbg !12296
  %12 = load ptr, ptr %4, align 8, !dbg !12298
  %13 = getelementptr inbounds %struct.lwan_connection_t_, ptr %12, i32 0, i32 0, !dbg !12299
  %14 = load i32, ptr %13, align 8, !dbg !12299
  %15 = and i32 %14, 5, !dbg !12300
  %16 = icmp ne i32 %15, 0, !dbg !12301
  %17 = xor i1 %16, true, !dbg !12301
  %18 = xor i1 %17, true, !dbg !12302
  %19 = zext i1 %18 to i32, !dbg !12302
  %20 = mul i32 %11, %19, !dbg !12303
  %21 = add i32 %7, %20, !dbg !12304
  %22 = load ptr, ptr %4, align 8, !dbg !12305
  %23 = getelementptr inbounds %struct.lwan_connection_t_, ptr %22, i32 0, i32 1, !dbg !12306
  store i32 %21, ptr %23, align 4, !dbg !12307
  %24 = load ptr, ptr %3, align 8, !dbg !12308
  %25 = load ptr, ptr %4, align 8, !dbg !12309
  call void @death_queue_remove(ptr noundef %24, ptr noundef %25), !dbg !12310
  %26 = load ptr, ptr %3, align 8, !dbg !12311
  %27 = load ptr, ptr %4, align 8, !dbg !12312
  call void @death_queue_insert(ptr noundef %26, ptr noundef %27), !dbg !12313
  ret void, !dbg !12314
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @death_queue_idx_to_node(ptr noundef %0, i32 noundef %1) #0 !dbg !12315 {
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !12318, metadata !DIExpression()), !dbg !12319
  store i32 %1, ptr %4, align 4
  call void @llvm.dbg.declare(metadata ptr %4, metadata !12320, metadata !DIExpression()), !dbg !12321
  %5 = load i32, ptr %4, align 4, !dbg !12322
  %6 = icmp slt i32 %5, 0, !dbg !12323
  br i1 %6, label %7, label %10, !dbg !12324

7:                                                ; preds = %2
  %8 = load ptr, ptr %3, align 8, !dbg !12325
  %9 = getelementptr inbounds %struct.death_queue_t, ptr %8, i32 0, i32 1, !dbg !12326
  br label %17, !dbg !12324

10:                                               ; preds = %2
  %11 = load ptr, ptr %3, align 8, !dbg !12327
  %12 = getelementptr inbounds %struct.death_queue_t, ptr %11, i32 0, i32 0, !dbg !12328
  %13 = load ptr, ptr %12, align 8, !dbg !12328
  %14 = load i32, ptr %4, align 4, !dbg !12329
  %15 = sext i32 %14 to i64, !dbg !12327
  %16 = getelementptr inbounds %struct.lwan_connection_t_, ptr %13, i64 %15, !dbg !12327
  br label %17, !dbg !12324

17:                                               ; preds = %10, %7
  %18 = phi ptr [ %9, %7 ], [ %16, %10 ], !dbg !12324
  ret ptr %18, !dbg !12330
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @death_queue_node_to_idx(ptr noundef %0, ptr noundef %1) #0 !dbg !12331 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !12334, metadata !DIExpression()), !dbg !12335
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !12336, metadata !DIExpression()), !dbg !12337
  %5 = load ptr, ptr %4, align 8, !dbg !12338
  %6 = load ptr, ptr %3, align 8, !dbg !12339
  %7 = getelementptr inbounds %struct.death_queue_t, ptr %6, i32 0, i32 1, !dbg !12340
  %8 = icmp eq ptr %5, %7, !dbg !12341
  br i1 %8, label %9, label %10, !dbg !12342

9:                                                ; preds = %2
  br label %20, !dbg !12342

10:                                               ; preds = %2
  %11 = load ptr, ptr %4, align 8, !dbg !12343
  %12 = load ptr, ptr %3, align 8, !dbg !12344
  %13 = getelementptr inbounds %struct.death_queue_t, ptr %12, i32 0, i32 0, !dbg !12345
  %14 = load ptr, ptr %13, align 8, !dbg !12345
  %15 = ptrtoint ptr %11 to i64, !dbg !12346
  %16 = ptrtoint ptr %14 to i64, !dbg !12346
  %17 = sub i64 %15, %16, !dbg !12346
  %18 = sdiv exact i64 %17, 32, !dbg !12346
  %19 = trunc i64 %18 to i32, !dbg !12347
  br label %20, !dbg !12342

20:                                               ; preds = %10, %9
  %21 = phi i32 [ -1, %9 ], [ %19, %10 ], !dbg !12342
  ret i32 %21, !dbg !12348
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @strbuf_free(ptr noundef %0) #0 !dbg !12349 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !12367, metadata !DIExpression()), !dbg !12368
  %3 = load ptr, ptr %2, align 8, !dbg !12369
  %4 = icmp ne ptr %3, null, !dbg !12369
  %5 = xor i1 %4, true, !dbg !12369
  %6 = zext i1 %5 to i32, !dbg !12369
  %7 = sext i32 %6 to i64, !dbg !12369
  %8 = icmp ne i64 %7, 0, !dbg !12369
  br i1 %8, label %9, label %10, !dbg !12371

9:                                                ; preds = %1
  br label %28, !dbg !12372

10:                                               ; preds = %1
  %11 = load ptr, ptr %2, align 8, !dbg !12373
  %12 = getelementptr inbounds %struct.strbuf_t_, ptr %11, i32 0, i32 2, !dbg !12375
  %13 = load i32, ptr %12, align 8, !dbg !12375
  %14 = and i32 %13, 1, !dbg !12376
  %15 = icmp ne i32 %14, 0, !dbg !12376
  br i1 %15, label %20, label %16, !dbg !12377

16:                                               ; preds = %10
  %17 = load ptr, ptr %2, align 8, !dbg !12378
  %18 = getelementptr inbounds %struct.strbuf_t_, ptr %17, i32 0, i32 0, !dbg !12379
  %19 = load ptr, ptr %18, align 8, !dbg !12380
  call void @free(ptr noundef %19) #17, !dbg !12381
  br label %20, !dbg !12381

20:                                               ; preds = %16, %10
  %21 = load ptr, ptr %2, align 8, !dbg !12382
  %22 = getelementptr inbounds %struct.strbuf_t_, ptr %21, i32 0, i32 2, !dbg !12384
  %23 = load i32, ptr %22, align 8, !dbg !12384
  %24 = and i32 %23, 2, !dbg !12385
  %25 = icmp ne i32 %24, 0, !dbg !12385
  br i1 %25, label %26, label %28, !dbg !12386

26:                                               ; preds = %20
  %27 = load ptr, ptr %2, align 8, !dbg !12387
  call void @free(ptr noundef %27) #17, !dbg !12388
  br label %28, !dbg !12388

28:                                               ; preds = %26, %20, %9
  ret void, !dbg !12389
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local zeroext i1 @strbuf_init(ptr noundef %0) #11 !dbg !12390 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !12393, metadata !DIExpression()), !dbg !12394
  %3 = load ptr, ptr %2, align 8, !dbg !12395
  %4 = call zeroext i1 @strbuf_init_with_size(ptr noundef %3, i64 noundef 64), !dbg !12396
  ret i1 %4, !dbg !12397
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @lwan_process_request(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 !dbg !12398 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i32, align 4
  %12 = alloca ptr, align 8
  %13 = alloca %struct.request_parser_helper, align 8
  store ptr %0, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !12401, metadata !DIExpression()), !dbg !12402
  store ptr %1, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !12403, metadata !DIExpression()), !dbg !12404
  store ptr %2, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !12405, metadata !DIExpression()), !dbg !12406
  store ptr %3, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %10, metadata !12407, metadata !DIExpression()), !dbg !12408
  call void @llvm.dbg.declare(metadata ptr %11, metadata !12409, metadata !DIExpression()), !dbg !12410
  call void @llvm.dbg.declare(metadata ptr %12, metadata !12411, metadata !DIExpression()), !dbg !12443
  call void @llvm.dbg.declare(metadata ptr %13, metadata !12444, metadata !DIExpression()), !dbg !12445
  call void @llvm.memset.p0.i64(ptr align 8 %13, i8 0, i64 168, i1 false), !dbg !12445
  %14 = getelementptr inbounds %struct.request_parser_helper, ptr %13, i32 0, i32 0, !dbg !12446
  %15 = load ptr, ptr %9, align 8, !dbg !12447
  store ptr %15, ptr %14, align 8, !dbg !12446
  %16 = getelementptr inbounds %struct.request_parser_helper, ptr %13, i32 0, i32 1, !dbg !12446
  %17 = load ptr, ptr %10, align 8, !dbg !12448
  store ptr %17, ptr %16, align 8, !dbg !12446
  %18 = load ptr, ptr %8, align 8, !dbg !12449
  store ptr %18, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !12450, metadata !DIExpression()), !dbg !12454
  store ptr %13, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !12456, metadata !DIExpression()), !dbg !12457
  %19 = load ptr, ptr %5, align 8, !dbg !12458
  %20 = load ptr, ptr %6, align 8, !dbg !12459
  %21 = load ptr, ptr %20, align 8, !dbg !12460
  %22 = load ptr, ptr %6, align 8, !dbg !12461
  %23 = call i32 @read_from_request_socket(ptr noundef %19, ptr noundef %21, ptr noundef %22, i64 noundef 4096, ptr noundef @read_request_finalizer), !dbg !12462
  store i32 %23, ptr %11, align 4, !dbg !12463
  %24 = load i32, ptr %11, align 4, !dbg !12464
  %25 = icmp ne i32 %24, 200, !dbg !12464
  %26 = zext i1 %25 to i32, !dbg !12464
  %27 = sext i32 %26 to i64, !dbg !12464
  %28 = icmp ne i64 %27, 0, !dbg !12464
  br i1 %28, label %29, label %36, !dbg !12466

29:                                               ; preds = %4
  %30 = load i32, ptr %11, align 4, !dbg !12467
  %31 = icmp ne i32 %30, 400, !dbg !12470
  br i1 %31, label %32, label %35, !dbg !12471

32:                                               ; preds = %29
  %33 = load ptr, ptr %8, align 8, !dbg !12472
  %34 = load i32, ptr %11, align 4, !dbg !12473
  call void @lwan_default_response(ptr noundef %33, i32 noundef %34), !dbg !12474
  br label %35, !dbg !12474

35:                                               ; preds = %32, %29
  br label %104, !dbg !12475

36:                                               ; preds = %4
  %37 = load ptr, ptr %8, align 8, !dbg !12476
  %38 = call i32 @parse_http_request(ptr noundef %37, ptr noundef %13), !dbg !12477
  store i32 %38, ptr %11, align 4, !dbg !12478
  %39 = load i32, ptr %11, align 4, !dbg !12479
  %40 = icmp ne i32 %39, 200, !dbg !12479
  %41 = zext i1 %40 to i32, !dbg !12479
  %42 = sext i32 %41 to i64, !dbg !12479
  %43 = icmp ne i64 %42, 0, !dbg !12479
  br i1 %43, label %44, label %47, !dbg !12481

44:                                               ; preds = %36
  %45 = load ptr, ptr %8, align 8, !dbg !12482
  %46 = load i32, ptr %11, align 4, !dbg !12484
  call void @lwan_default_response(ptr noundef %45, i32 noundef %46), !dbg !12485
  br label %104, !dbg !12486

47:                                               ; preds = %36
  %48 = load ptr, ptr %7, align 8, !dbg !12487
  %49 = getelementptr inbounds %struct.lwan_t_, ptr %48, i32 0, i32 0, !dbg !12488
  %50 = load ptr, ptr %8, align 8, !dbg !12489
  %51 = getelementptr inbounds %struct.lwan_request_t_, ptr %50, i32 0, i32 2, !dbg !12490
  %52 = getelementptr inbounds %struct.lwan_value_t_, ptr %51, i32 0, i32 0, !dbg !12491
  %53 = load ptr, ptr %52, align 8, !dbg !12491
  %54 = call ptr @lwan_trie_lookup_prefix(ptr noundef %49, ptr noundef %53), !dbg !12492
  store ptr %54, ptr %12, align 8, !dbg !12493
  %55 = load ptr, ptr %12, align 8, !dbg !12494
  %56 = icmp ne ptr %55, null, !dbg !12494
  %57 = xor i1 %56, true, !dbg !12494
  %58 = zext i1 %57 to i32, !dbg !12494
  %59 = sext i32 %58 to i64, !dbg !12494
  %60 = icmp ne i64 %59, 0, !dbg !12494
  br i1 %60, label %61, label %63, !dbg !12496

61:                                               ; preds = %47
  %62 = load ptr, ptr %8, align 8, !dbg !12497
  call void @lwan_default_response(ptr noundef %62, i32 noundef 404), !dbg !12499
  br label %104, !dbg !12500

63:                                               ; preds = %47
  %64 = load ptr, ptr %12, align 8, !dbg !12501
  %65 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %64, i32 0, i32 3, !dbg !12502
  %66 = load i64, ptr %65, align 8, !dbg !12502
  %67 = load ptr, ptr %8, align 8, !dbg !12503
  %68 = getelementptr inbounds %struct.lwan_request_t_, ptr %67, i32 0, i32 2, !dbg !12504
  %69 = getelementptr inbounds %struct.lwan_value_t_, ptr %68, i32 0, i32 0, !dbg !12505
  %70 = load ptr, ptr %69, align 8, !dbg !12506
  %71 = getelementptr inbounds i8, ptr %70, i64 %66, !dbg !12506
  store ptr %71, ptr %69, align 8, !dbg !12506
  %72 = load ptr, ptr %12, align 8, !dbg !12507
  %73 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %72, i32 0, i32 3, !dbg !12508
  %74 = load i64, ptr %73, align 8, !dbg !12508
  %75 = load ptr, ptr %8, align 8, !dbg !12509
  %76 = getelementptr inbounds %struct.lwan_request_t_, ptr %75, i32 0, i32 2, !dbg !12510
  %77 = getelementptr inbounds %struct.lwan_value_t_, ptr %76, i32 0, i32 1, !dbg !12511
  %78 = load i64, ptr %77, align 8, !dbg !12512
  %79 = sub i64 %78, %74, !dbg !12512
  store i64 %79, ptr %77, align 8, !dbg !12512
  %80 = load ptr, ptr %12, align 8, !dbg !12513
  %81 = load ptr, ptr %8, align 8, !dbg !12514
  %82 = call i32 @prepare_for_response(ptr noundef %80, ptr noundef %81, ptr noundef %13), !dbg !12515
  store i32 %82, ptr %11, align 4, !dbg !12516
  %83 = load i32, ptr %11, align 4, !dbg !12517
  %84 = icmp ne i32 %83, 200, !dbg !12517
  %85 = zext i1 %84 to i32, !dbg !12517
  %86 = sext i32 %85 to i64, !dbg !12517
  %87 = icmp ne i64 %86, 0, !dbg !12517
  br i1 %87, label %88, label %91, !dbg !12519

88:                                               ; preds = %63
  %89 = load ptr, ptr %8, align 8, !dbg !12520
  %90 = load i32, ptr %11, align 4, !dbg !12522
  call void @lwan_default_response(ptr noundef %89, i32 noundef %90), !dbg !12523
  br label %104, !dbg !12524

91:                                               ; preds = %63
  %92 = load ptr, ptr %12, align 8, !dbg !12525
  %93 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %92, i32 0, i32 0, !dbg !12526
  %94 = load ptr, ptr %93, align 8, !dbg !12526
  %95 = load ptr, ptr %8, align 8, !dbg !12527
  %96 = load ptr, ptr %8, align 8, !dbg !12528
  %97 = getelementptr inbounds %struct.lwan_request_t_, ptr %96, i32 0, i32 8, !dbg !12529
  %98 = load ptr, ptr %12, align 8, !dbg !12530
  %99 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %98, i32 0, i32 1, !dbg !12531
  %100 = load ptr, ptr %99, align 8, !dbg !12531
  %101 = call i32 %94(ptr noundef %95, ptr noundef %97, ptr noundef %100), !dbg !12525
  store i32 %101, ptr %11, align 4, !dbg !12532
  %102 = load ptr, ptr %8, align 8, !dbg !12533
  %103 = load i32, ptr %11, align 4, !dbg !12534
  call void @lwan_response(ptr noundef %102, i32 noundef %103), !dbg !12535
  br label %104, !dbg !12535

104:                                              ; preds = %91, %88, %61, %44, %35
  call void @llvm.dbg.label(metadata !12536), !dbg !12537
  %105 = getelementptr inbounds %struct.request_parser_helper, ptr %13, i32 0, i32 1, !dbg !12538
  %106 = load ptr, ptr %105, align 8, !dbg !12538
  ret ptr %106, !dbg !12539
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @strbuf_reset_length(ptr noundef %0) #0 !dbg !12540 {
  %2 = alloca i1, align 1
  %3 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !12541, metadata !DIExpression()), !dbg !12542
  %4 = load ptr, ptr %3, align 8, !dbg !12543
  %5 = getelementptr inbounds %struct.strbuf_t_, ptr %4, i32 0, i32 2, !dbg !12545
  %6 = load i32, ptr %5, align 8, !dbg !12545
  %7 = and i32 %6, 1, !dbg !12546
  %8 = icmp ne i32 %7, 0, !dbg !12546
  br i1 %8, label %9, label %31, !dbg !12547

9:                                                ; preds = %1
  %10 = load ptr, ptr %3, align 8, !dbg !12548
  %11 = getelementptr inbounds %struct.strbuf_t_, ptr %10, i32 0, i32 2, !dbg !12550
  %12 = load i32, ptr %11, align 8, !dbg !12551
  %13 = and i32 %12, -2, !dbg !12551
  store i32 %13, ptr %11, align 8, !dbg !12551
  %14 = load ptr, ptr %3, align 8, !dbg !12552
  %15 = getelementptr inbounds %struct.strbuf_t_, ptr %14, i32 0, i32 1, !dbg !12553
  %16 = getelementptr inbounds %struct.anon.3, ptr %15, i32 0, i32 0, !dbg !12554
  %17 = load i64, ptr %16, align 8, !dbg !12554
  %18 = call noalias ptr @malloc(i64 noundef %17) #18, !dbg !12555
  %19 = load ptr, ptr %3, align 8, !dbg !12556
  %20 = getelementptr inbounds %struct.strbuf_t_, ptr %19, i32 0, i32 0, !dbg !12557
  store ptr %18, ptr %20, align 8, !dbg !12558
  %21 = load ptr, ptr %3, align 8, !dbg !12559
  %22 = getelementptr inbounds %struct.strbuf_t_, ptr %21, i32 0, i32 0, !dbg !12559
  %23 = load ptr, ptr %22, align 8, !dbg !12559
  %24 = icmp ne ptr %23, null, !dbg !12559
  %25 = xor i1 %24, true, !dbg !12559
  %26 = zext i1 %25 to i32, !dbg !12559
  %27 = sext i32 %26 to i64, !dbg !12559
  %28 = icmp ne i64 %27, 0, !dbg !12559
  br i1 %28, label %29, label %30, !dbg !12561

29:                                               ; preds = %9
  store i1 false, ptr %2, align 1, !dbg !12562
  br label %39, !dbg !12562

30:                                               ; preds = %9
  br label %31, !dbg !12563

31:                                               ; preds = %30, %1
  %32 = load ptr, ptr %3, align 8, !dbg !12564
  %33 = getelementptr inbounds %struct.strbuf_t_, ptr %32, i32 0, i32 1, !dbg !12565
  %34 = getelementptr inbounds %struct.anon.3, ptr %33, i32 0, i32 1, !dbg !12566
  store i64 0, ptr %34, align 8, !dbg !12567
  %35 = load ptr, ptr %3, align 8, !dbg !12568
  %36 = getelementptr inbounds %struct.strbuf_t_, ptr %35, i32 0, i32 0, !dbg !12569
  %37 = load ptr, ptr %36, align 8, !dbg !12570
  %38 = getelementptr inbounds i8, ptr %37, i64 0, !dbg !12568
  store i8 0, ptr %38, align 1, !dbg !12571
  store i1 true, ptr %2, align 1, !dbg !12572
  br label %39, !dbg !12572

39:                                               ; preds = %31, %29
  %40 = load i1, ptr %2, align 1, !dbg !12573
  ret i1 %40, !dbg !12573
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @read_request_finalizer(i64 noundef %0, i64 noundef %1, ptr noundef %2) #0 !dbg !12574 {
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  store i64 %0, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !12578, metadata !DIExpression()), !dbg !12579
  store i64 %1, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %10, metadata !12580, metadata !DIExpression()), !dbg !12581
  store ptr %2, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !12582, metadata !DIExpression()), !dbg !12583
  %13 = load i64, ptr %9, align 8, !dbg !12584
  %14 = icmp ult i64 %13, 4, !dbg !12584
  %15 = zext i1 %14 to i32, !dbg !12584
  %16 = sext i32 %15 to i64, !dbg !12584
  %17 = icmp ne i64 %16, 0, !dbg !12584
  br i1 %17, label %18, label %19, !dbg !12586

18:                                               ; preds = %3
  store i32 2, ptr %8, align 4, !dbg !12587
  br label %98, !dbg !12587

19:                                               ; preds = %3
  %20 = load i64, ptr %9, align 8, !dbg !12588
  %21 = load i64, ptr %10, align 8, !dbg !12588
  %22 = icmp eq i64 %20, %21, !dbg !12588
  %23 = zext i1 %22 to i32, !dbg !12588
  %24 = sext i32 %23 to i64, !dbg !12588
  %25 = icmp ne i64 %24, 0, !dbg !12588
  br i1 %25, label %26, label %27, !dbg !12590

26:                                               ; preds = %19
  store i32 3, ptr %8, align 4, !dbg !12591
  br label %98, !dbg !12591

27:                                               ; preds = %19
  %28 = load ptr, ptr %11, align 8, !dbg !12592
  %29 = getelementptr inbounds %struct.request_parser_helper, ptr %28, i32 0, i32 1, !dbg !12592
  %30 = load ptr, ptr %29, align 8, !dbg !12592
  %31 = icmp ne ptr %30, null, !dbg !12592
  %32 = xor i1 %31, true, !dbg !12592
  %33 = xor i1 %32, true, !dbg !12592
  %34 = zext i1 %33 to i32, !dbg !12592
  %35 = sext i32 %34 to i64, !dbg !12592
  %36 = icmp ne i64 %35, 0, !dbg !12592
  br i1 %36, label %37, label %40, !dbg !12594

37:                                               ; preds = %27
  %38 = load ptr, ptr %11, align 8, !dbg !12595
  %39 = getelementptr inbounds %struct.request_parser_helper, ptr %38, i32 0, i32 1, !dbg !12597
  store ptr null, ptr %39, align 8, !dbg !12598
  store i32 0, ptr %8, align 4, !dbg !12599
  br label %98, !dbg !12599

40:                                               ; preds = %27
  %41 = load ptr, ptr %11, align 8, !dbg !12600
  %42 = getelementptr inbounds %struct.request_parser_helper, ptr %41, i32 0, i32 0, !dbg !12600
  %43 = load ptr, ptr %42, align 8, !dbg !12600
  %44 = getelementptr inbounds %struct.lwan_value_t_, ptr %43, i32 0, i32 0, !dbg !12600
  %45 = load ptr, ptr %44, align 8, !dbg !12600
  %46 = load i64, ptr %9, align 8, !dbg !12600
  %47 = getelementptr inbounds i8, ptr %45, i64 %46, !dbg !12600
  %48 = getelementptr inbounds i8, ptr %47, i64 -4, !dbg !12600
  %49 = call i32 @memcmp(ptr noundef %48, ptr noundef @.str.90, i64 noundef 4) #20, !dbg !12600
  %50 = icmp ne i32 %49, 0, !dbg !12600
  %51 = xor i1 %50, true, !dbg !12600
  %52 = xor i1 %51, true, !dbg !12600
  %53 = xor i1 %52, true, !dbg !12600
  %54 = zext i1 %53 to i32, !dbg !12600
  %55 = sext i32 %54 to i64, !dbg !12600
  %56 = icmp ne i64 %55, 0, !dbg !12600
  br i1 %56, label %57, label %58, !dbg !12602

57:                                               ; preds = %40
  store i32 0, ptr %8, align 4, !dbg !12603
  br label %98, !dbg !12603

58:                                               ; preds = %40
  %59 = load ptr, ptr %11, align 8, !dbg !12604
  %60 = getelementptr inbounds %struct.request_parser_helper, ptr %59, i32 0, i32 0, !dbg !12606
  %61 = load ptr, ptr %60, align 8, !dbg !12606
  %62 = getelementptr inbounds %struct.lwan_value_t_, ptr %61, i32 0, i32 0, !dbg !12607
  %63 = load ptr, ptr %62, align 8, !dbg !12607
  store ptr %63, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !12608, metadata !DIExpression()), !dbg !12609
  %64 = load ptr, ptr %7, align 8, !dbg !12611
  store ptr %64, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !12612, metadata !DIExpression()), !dbg !12616
  call void @llvm.dbg.declare(metadata ptr %5, metadata !12618, metadata !DIExpression()), !dbg !12619
  %65 = load ptr, ptr %4, align 8, !dbg !12620
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %5, ptr align 1 %65, i64 4, i1 false), !dbg !12621
  %66 = load i32, ptr %5, align 4, !dbg !12622
  switch i32 %66, label %70 [
    i32 542393671, label %67
    i32 1145128264, label %68
    i32 1414745936, label %69
  ], !dbg !12611

67:                                               ; preds = %58
  store i32 1, ptr %6, align 4, !dbg !12623
  br label %71, !dbg !12623

68:                                               ; preds = %58
  store i32 2, ptr %6, align 4, !dbg !12625
  br label %71, !dbg !12625

69:                                               ; preds = %58
  store i32 4, ptr %6, align 4, !dbg !12626
  br label %71, !dbg !12626

70:                                               ; preds = %58
  store i32 0, ptr %6, align 4, !dbg !12627
  br label %71, !dbg !12627

71:                                               ; preds = %70, %69, %68, %67
  %72 = load i32, ptr %6, align 4, !dbg !12628
  %73 = icmp eq i32 %72, 4, !dbg !12629
  br i1 %73, label %74, label %97, !dbg !12630

74:                                               ; preds = %71
  call void @llvm.dbg.declare(metadata ptr %12, metadata !12631, metadata !DIExpression()), !dbg !12633
  %75 = load ptr, ptr %11, align 8, !dbg !12634
  %76 = getelementptr inbounds %struct.request_parser_helper, ptr %75, i32 0, i32 0, !dbg !12635
  %77 = load ptr, ptr %76, align 8, !dbg !12635
  %78 = getelementptr inbounds %struct.lwan_value_t_, ptr %77, i32 0, i32 0, !dbg !12636
  %79 = load ptr, ptr %78, align 8, !dbg !12636
  %80 = call ptr @strrchr(ptr noundef %79, i32 noundef 10) #20, !dbg !12637
  store ptr %80, ptr %12, align 8, !dbg !12633
  %81 = load ptr, ptr %12, align 8, !dbg !12638
  %82 = icmp ne ptr %81, null, !dbg !12638
  br i1 %82, label %83, label %96, !dbg !12640

83:                                               ; preds = %74
  %84 = load ptr, ptr %12, align 8, !dbg !12641
  %85 = getelementptr inbounds i8, ptr %84, i64 -3, !dbg !12641
  %86 = call i32 @memcmp(ptr noundef %85, ptr noundef @.str.1.91, i64 noundef 3) #20, !dbg !12641
  %87 = icmp ne i32 %86, 0, !dbg !12641
  %88 = xor i1 %87, true, !dbg !12641
  %89 = xor i1 %88, true, !dbg !12641
  %90 = xor i1 %89, true, !dbg !12641
  %91 = zext i1 %90 to i32, !dbg !12641
  %92 = sext i32 %91 to i64, !dbg !12641
  %93 = icmp ne i64 %92, 0, !dbg !12641
  br i1 %93, label %94, label %95, !dbg !12644

94:                                               ; preds = %83
  store i32 0, ptr %8, align 4, !dbg !12645
  br label %98, !dbg !12645

95:                                               ; preds = %83
  br label %96, !dbg !12646

96:                                               ; preds = %95, %74
  br label %97, !dbg !12647

97:                                               ; preds = %96, %71
  store i32 1, ptr %8, align 4, !dbg !12648
  br label %98, !dbg !12648

98:                                               ; preds = %97, %94, %57, %37, %26, %18
  %99 = load i32, ptr %8, align 4, !dbg !12649
  ret i32 %99, !dbg !12649
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @read_from_request_socket(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3, ptr noundef %4) #0 !dbg !12650 {
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca i64, align 8
  %11 = alloca ptr, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  store ptr %0, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !12654, metadata !DIExpression()), !dbg !12655
  store ptr %1, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !12656, metadata !DIExpression()), !dbg !12657
  store ptr %2, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !12658, metadata !DIExpression()), !dbg !12659
  store i64 %3, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %10, metadata !12660, metadata !DIExpression()), !dbg !12661
  store ptr %4, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !12662, metadata !DIExpression()), !dbg !12663
  call void @llvm.dbg.declare(metadata ptr %12, metadata !12664, metadata !DIExpression()), !dbg !12665
  call void @llvm.dbg.declare(metadata ptr %13, metadata !12666, metadata !DIExpression()), !dbg !12667
  store i64 0, ptr %13, align 8, !dbg !12667
  call void @llvm.dbg.declare(metadata ptr %14, metadata !12668, metadata !DIExpression()), !dbg !12669
  store i32 16, ptr %14, align 4, !dbg !12669
  %15 = load ptr, ptr %9, align 8, !dbg !12670
  %16 = getelementptr inbounds %struct.request_parser_helper, ptr %15, i32 0, i32 1, !dbg !12672
  %17 = load ptr, ptr %16, align 8, !dbg !12672
  %18 = icmp ne ptr %17, null, !dbg !12670
  br i1 %18, label %19, label %45, !dbg !12673

19:                                               ; preds = %5
  %20 = load ptr, ptr %9, align 8, !dbg !12674
  %21 = getelementptr inbounds %struct.request_parser_helper, ptr %20, i32 0, i32 1, !dbg !12676
  %22 = load ptr, ptr %21, align 8, !dbg !12676
  %23 = load ptr, ptr %8, align 8, !dbg !12677
  %24 = getelementptr inbounds %struct.lwan_value_t_, ptr %23, i32 0, i32 0, !dbg !12678
  %25 = load ptr, ptr %24, align 8, !dbg !12678
  %26 = ptrtoint ptr %22 to i64, !dbg !12679
  %27 = ptrtoint ptr %25 to i64, !dbg !12679
  %28 = sub i64 %26, %27, !dbg !12679
  %29 = load ptr, ptr %8, align 8, !dbg !12680
  %30 = getelementptr inbounds %struct.lwan_value_t_, ptr %29, i32 0, i32 1, !dbg !12681
  %31 = load i64, ptr %30, align 8, !dbg !12682
  %32 = sub i64 %31, %28, !dbg !12682
  store i64 %32, ptr %30, align 8, !dbg !12682
  %33 = load ptr, ptr %8, align 8, !dbg !12683
  %34 = getelementptr inbounds %struct.lwan_value_t_, ptr %33, i32 0, i32 0, !dbg !12684
  %35 = load ptr, ptr %34, align 8, !dbg !12684
  %36 = load ptr, ptr %9, align 8, !dbg !12685
  %37 = getelementptr inbounds %struct.request_parser_helper, ptr %36, i32 0, i32 1, !dbg !12686
  %38 = load ptr, ptr %37, align 8, !dbg !12686
  %39 = load ptr, ptr %8, align 8, !dbg !12687
  %40 = getelementptr inbounds %struct.lwan_value_t_, ptr %39, i32 0, i32 1, !dbg !12688
  %41 = load i64, ptr %40, align 8, !dbg !12688
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %35, ptr align 1 %38, i64 %41, i1 false), !dbg !12689
  %42 = load ptr, ptr %8, align 8, !dbg !12690
  %43 = getelementptr inbounds %struct.lwan_value_t_, ptr %42, i32 0, i32 1, !dbg !12691
  %44 = load i64, ptr %43, align 8, !dbg !12691
  store i64 %44, ptr %13, align 8, !dbg !12692
  br label %124, !dbg !12693

45:                                               ; preds = %5
  br label %46, !dbg !12694

46:                                               ; preds = %141, %45
  %47 = load i32, ptr %14, align 4, !dbg !12695
  %48 = icmp sgt i32 %47, 0, !dbg !12698
  br i1 %48, label %49, label %144, !dbg !12699

49:                                               ; preds = %46
  %50 = load ptr, ptr %7, align 8, !dbg !12700
  %51 = getelementptr inbounds %struct.lwan_request_t_, ptr %50, i32 0, i32 1, !dbg !12702
  %52 = load i32, ptr %51, align 4, !dbg !12702
  %53 = load ptr, ptr %8, align 8, !dbg !12703
  %54 = getelementptr inbounds %struct.lwan_value_t_, ptr %53, i32 0, i32 0, !dbg !12704
  %55 = load ptr, ptr %54, align 8, !dbg !12704
  %56 = load i64, ptr %13, align 8, !dbg !12705
  %57 = getelementptr inbounds i8, ptr %55, i64 %56, !dbg !12706
  %58 = load i64, ptr %10, align 8, !dbg !12707
  %59 = load i64, ptr %13, align 8, !dbg !12708
  %60 = sub i64 %58, %59, !dbg !12709
  %61 = call i64 @read(i32 noundef %52, ptr noundef %57, i64 noundef %60), !dbg !12710
  store i64 %61, ptr %12, align 8, !dbg !12711
  %62 = load i64, ptr %12, align 8, !dbg !12712
  %63 = icmp eq i64 %62, 0, !dbg !12712
  %64 = zext i1 %63 to i32, !dbg !12712
  %65 = sext i32 %64 to i64, !dbg !12712
  %66 = icmp ne i64 %65, 0, !dbg !12712
  br i1 %66, label %67, label %74, !dbg !12714

67:                                               ; preds = %49
  %68 = load ptr, ptr %7, align 8, !dbg !12715
  %69 = getelementptr inbounds %struct.lwan_request_t_, ptr %68, i32 0, i32 4, !dbg !12717
  %70 = load ptr, ptr %69, align 8, !dbg !12717
  %71 = getelementptr inbounds %struct.lwan_connection_t_, ptr %70, i32 0, i32 2, !dbg !12718
  %72 = load ptr, ptr %71, align 8, !dbg !12718
  %73 = call i32 @coro_yield(ptr noundef %72, i32 noundef -1), !dbg !12719
  unreachable, !dbg !12720

74:                                               ; preds = %49
  %75 = load i64, ptr %12, align 8, !dbg !12721
  %76 = icmp slt i64 %75, 0, !dbg !12721
  %77 = zext i1 %76 to i32, !dbg !12721
  %78 = sext i32 %77 to i64, !dbg !12721
  %79 = icmp ne i64 %78, 0, !dbg !12721
  br i1 %79, label %80, label %112, !dbg !12723

80:                                               ; preds = %74
  %81 = call ptr @__errno_location() #21, !dbg !12724
  %82 = load i32, ptr %81, align 4, !dbg !12724
  switch i32 %82, label %97 [
    i32 11, label %83
    i32 4, label %83
  ], !dbg !12726

83:                                               ; preds = %80, %80
  br label %84, !dbg !12727

84:                                               ; preds = %138, %83
  call void @llvm.dbg.label(metadata !12728), !dbg !12730
  %85 = load ptr, ptr %7, align 8, !dbg !12731
  %86 = getelementptr inbounds %struct.lwan_request_t_, ptr %85, i32 0, i32 4, !dbg !12732
  %87 = load ptr, ptr %86, align 8, !dbg !12732
  %88 = getelementptr inbounds %struct.lwan_connection_t_, ptr %87, i32 0, i32 0, !dbg !12733
  %89 = load i32, ptr %88, align 8, !dbg !12734
  %90 = or i32 %89, 16, !dbg !12734
  store i32 %90, ptr %88, align 8, !dbg !12734
  %91 = load ptr, ptr %7, align 8, !dbg !12735
  %92 = getelementptr inbounds %struct.lwan_request_t_, ptr %91, i32 0, i32 4, !dbg !12736
  %93 = load ptr, ptr %92, align 8, !dbg !12736
  %94 = getelementptr inbounds %struct.lwan_connection_t_, ptr %93, i32 0, i32 2, !dbg !12737
  %95 = load ptr, ptr %94, align 8, !dbg !12737
  %96 = call i32 @coro_yield(ptr noundef %95, i32 noundef 0), !dbg !12738
  br label %141, !dbg !12739

97:                                               ; preds = %80
  %98 = load i64, ptr %13, align 8, !dbg !12740
  %99 = icmp ne i64 %98, 0, !dbg !12740
  %100 = xor i1 %99, true, !dbg !12740
  %101 = zext i1 %100 to i32, !dbg !12740
  %102 = sext i32 %101 to i64, !dbg !12740
  %103 = icmp ne i64 %102, 0, !dbg !12740
  br i1 %103, label %104, label %105, !dbg !12742

104:                                              ; preds = %97
  store i32 400, ptr %6, align 4, !dbg !12743
  br label %145, !dbg !12743

105:                                              ; preds = %97
  %106 = load ptr, ptr %7, align 8, !dbg !12744
  %107 = getelementptr inbounds %struct.lwan_request_t_, ptr %106, i32 0, i32 4, !dbg !12745
  %108 = load ptr, ptr %107, align 8, !dbg !12745
  %109 = getelementptr inbounds %struct.lwan_connection_t_, ptr %108, i32 0, i32 2, !dbg !12746
  %110 = load ptr, ptr %109, align 8, !dbg !12746
  %111 = call i32 @coro_yield(ptr noundef %110, i32 noundef -1), !dbg !12747
  unreachable, !dbg !12748

112:                                              ; preds = %74
  %113 = load i64, ptr %12, align 8, !dbg !12749
  %114 = load i64, ptr %13, align 8, !dbg !12750
  %115 = add i64 %114, %113, !dbg !12750
  store i64 %115, ptr %13, align 8, !dbg !12750
  %116 = load ptr, ptr %8, align 8, !dbg !12751
  %117 = getelementptr inbounds %struct.lwan_value_t_, ptr %116, i32 0, i32 0, !dbg !12752
  %118 = load ptr, ptr %117, align 8, !dbg !12752
  %119 = load i64, ptr %13, align 8, !dbg !12753
  %120 = getelementptr inbounds i8, ptr %118, i64 %119, !dbg !12751
  store i8 0, ptr %120, align 1, !dbg !12754
  %121 = load i64, ptr %13, align 8, !dbg !12755
  %122 = load ptr, ptr %8, align 8, !dbg !12756
  %123 = getelementptr inbounds %struct.lwan_value_t_, ptr %122, i32 0, i32 1, !dbg !12757
  store i64 %121, ptr %123, align 8, !dbg !12758
  br label %124, !dbg !12756

124:                                              ; preds = %112, %19
  call void @llvm.dbg.label(metadata !12759), !dbg !12760
  %125 = load ptr, ptr %11, align 8, !dbg !12761
  %126 = load i64, ptr %13, align 8, !dbg !12762
  %127 = load i64, ptr %10, align 8, !dbg !12763
  %128 = load ptr, ptr %9, align 8, !dbg !12764
  %129 = call i32 %125(i64 noundef %126, i64 noundef %127, ptr noundef %128), !dbg !12761
  switch i32 %129, label %140 [
    i32 0, label %130
    i32 1, label %137
    i32 2, label %138
    i32 3, label %139
  ], !dbg !12765

130:                                              ; preds = %124
  %131 = load ptr, ptr %7, align 8, !dbg !12766
  %132 = getelementptr inbounds %struct.lwan_request_t_, ptr %131, i32 0, i32 4, !dbg !12768
  %133 = load ptr, ptr %132, align 8, !dbg !12768
  %134 = getelementptr inbounds %struct.lwan_connection_t_, ptr %133, i32 0, i32 0, !dbg !12769
  %135 = load i32, ptr %134, align 8, !dbg !12770
  %136 = and i32 %135, -17, !dbg !12770
  store i32 %136, ptr %134, align 8, !dbg !12770
  store i32 200, ptr %6, align 4, !dbg !12771
  br label %145, !dbg !12771

137:                                              ; preds = %124
  br label %141, !dbg !12772

138:                                              ; preds = %124
  br label %84, !dbg !12773

139:                                              ; preds = %124
  store i32 413, ptr %6, align 4, !dbg !12774
  br label %145, !dbg !12774

140:                                              ; preds = %124
  br label %141, !dbg !12775

141:                                              ; preds = %140, %137, %84
  %142 = load i32, ptr %14, align 4, !dbg !12776
  %143 = add nsw i32 %142, -1, !dbg !12776
  store i32 %143, ptr %14, align 4, !dbg !12776
  br label %46, !dbg !12777, !llvm.loop !12778

144:                                              ; preds = %46
  store i32 408, ptr %6, align 4, !dbg !12780
  br label %145, !dbg !12780

145:                                              ; preds = %144, %139, %130, %104
  %146 = load i32, ptr %6, align 4, !dbg !12781
  ret i32 %146, !dbg !12781
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_default_response(ptr noundef %0, i32 noundef %1) #0 !dbg !12782 {
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.lwan_key_value_t_, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !12785, metadata !DIExpression()), !dbg !12786
  store i32 %1, ptr %4, align 4
  call void @llvm.dbg.declare(metadata ptr %4, metadata !12787, metadata !DIExpression()), !dbg !12788
  %6 = load ptr, ptr %3, align 8, !dbg !12789
  %7 = getelementptr inbounds %struct.lwan_request_t_, ptr %6, i32 0, i32 8, !dbg !12790
  %8 = getelementptr inbounds %struct.lwan_response_t_, ptr %7, i32 0, i32 1, !dbg !12791
  store ptr @.str.9.125, ptr %8, align 8, !dbg !12792
  %9 = load ptr, ptr @error_template, align 8, !dbg !12793
  %10 = load ptr, ptr %3, align 8, !dbg !12794
  %11 = getelementptr inbounds %struct.lwan_request_t_, ptr %10, i32 0, i32 8, !dbg !12795
  %12 = getelementptr inbounds %struct.lwan_response_t_, ptr %11, i32 0, i32 0, !dbg !12796
  %13 = load ptr, ptr %12, align 8, !dbg !12796
  %14 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %5, i32 0, i32 0, !dbg !12797
  %15 = load i32, ptr %4, align 4, !dbg !12798
  %16 = call ptr @lwan_http_status_as_string(i32 noundef %15) #20, !dbg !12799
  store ptr %16, ptr %14, align 8, !dbg !12797
  %17 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %5, i32 0, i32 1, !dbg !12797
  %18 = load i32, ptr %4, align 4, !dbg !12800
  %19 = call ptr @lwan_http_status_as_descriptive_string(i32 noundef %18) #20, !dbg !12801
  store ptr %19, ptr %17, align 8, !dbg !12797
  %20 = call ptr @lwan_tpl_apply_with_buffer(ptr noundef %9, ptr noundef %13, ptr noundef %5), !dbg !12802
  %21 = load ptr, ptr %3, align 8, !dbg !12803
  %22 = load i32, ptr %4, align 4, !dbg !12804
  call void @lwan_response(ptr noundef %21, i32 noundef %22), !dbg !12805
  ret void, !dbg !12806
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @parse_http_request(ptr noundef %0, ptr noundef %1) #0 !dbg !12807 {
  %3 = alloca i64, align 8
  %4 = alloca i8, align 1
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i8, align 1
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca i32, align 4
  %15 = alloca ptr, align 8
  %16 = alloca i32, align 4
  %17 = alloca ptr, align 8
  %18 = alloca ptr, align 8
  %19 = alloca ptr, align 8
  %20 = alloca ptr, align 8
  %21 = alloca i64, align 8
  %22 = alloca i32, align 4
  store ptr %0, ptr %17, align 8
  call void @llvm.dbg.declare(metadata ptr %17, metadata !12808, metadata !DIExpression()), !dbg !12809
  store ptr %1, ptr %18, align 8
  call void @llvm.dbg.declare(metadata ptr %18, metadata !12810, metadata !DIExpression()), !dbg !12811
  call void @llvm.dbg.declare(metadata ptr %19, metadata !12812, metadata !DIExpression()), !dbg !12813
  %23 = load ptr, ptr %18, align 8, !dbg !12814
  %24 = getelementptr inbounds %struct.request_parser_helper, ptr %23, i32 0, i32 0, !dbg !12815
  %25 = load ptr, ptr %24, align 8, !dbg !12815
  %26 = getelementptr inbounds %struct.lwan_value_t_, ptr %25, i32 0, i32 0, !dbg !12816
  %27 = load ptr, ptr %26, align 8, !dbg !12816
  store ptr %27, ptr %15, align 8
  call void @llvm.dbg.declare(metadata ptr %15, metadata !12817, metadata !DIExpression()), !dbg !12819
  br label %28, !dbg !12821

28:                                               ; preds = %49, %2
  %29 = load ptr, ptr %15, align 8, !dbg !12822
  %30 = load i8, ptr %29, align 1, !dbg !12823
  %31 = sext i8 %30 to i32, !dbg !12823
  %32 = icmp ne i32 %31, 0, !dbg !12823
  br i1 %32, label %33, label %47, !dbg !12824

33:                                               ; preds = %28
  %34 = load ptr, ptr %15, align 8, !dbg !12825
  %35 = load i8, ptr %34, align 1, !dbg !12826
  store i8 %35, ptr %4, align 1
  call void @llvm.dbg.declare(metadata ptr %4, metadata !12827, metadata !DIExpression()), !dbg !12831
  %36 = load i8, ptr %4, align 1, !dbg !12833
  %37 = sext i8 %36 to i64, !dbg !12834
  %38 = mul i64 16843009, %37, !dbg !12835
  %39 = xor i64 %38, 151653664, !dbg !12836
  store i64 %39, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !12837, metadata !DIExpression()), !dbg !12841
  %40 = load i64, ptr %3, align 8, !dbg !12843
  %41 = sub i64 %40, 16843009, !dbg !12844
  %42 = load i64, ptr %3, align 8, !dbg !12845
  %43 = xor i64 %42, -1, !dbg !12846
  %44 = and i64 %41, %43, !dbg !12847
  %45 = and i64 %44, 2155905152, !dbg !12848
  %46 = icmp ne i64 %45, 0, !dbg !12824
  br label %47

47:                                               ; preds = %33, %28
  %48 = phi i1 [ false, %28 ], [ %46, %33 ], !dbg !12849
  br i1 %48, label %49, label %52, !dbg !12821

49:                                               ; preds = %47
  %50 = load ptr, ptr %15, align 8, !dbg !12850
  %51 = getelementptr inbounds i8, ptr %50, i32 1, !dbg !12850
  store ptr %51, ptr %15, align 8, !dbg !12850
  br label %28, !dbg !12821, !llvm.loop !12851

52:                                               ; preds = %47
  %53 = load ptr, ptr %15, align 8, !dbg !12852
  store ptr %53, ptr %19, align 8, !dbg !12853
  %54 = load ptr, ptr %19, align 8, !dbg !12854
  %55 = load i8, ptr %54, align 1, !dbg !12854
  %56 = icmp ne i8 %55, 0, !dbg !12854
  %57 = xor i1 %56, true, !dbg !12854
  %58 = zext i1 %57 to i32, !dbg !12854
  %59 = sext i32 %58 to i64, !dbg !12854
  %60 = icmp ne i64 %59, 0, !dbg !12854
  br i1 %60, label %61, label %62, !dbg !12856

61:                                               ; preds = %52
  store i32 400, ptr %16, align 4, !dbg !12857
  br label %204, !dbg !12857

62:                                               ; preds = %52
  call void @llvm.dbg.declare(metadata ptr %20, metadata !12858, metadata !DIExpression()), !dbg !12859
  %63 = load ptr, ptr %17, align 8, !dbg !12860
  %64 = load ptr, ptr %19, align 8, !dbg !12861
  store ptr %63, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %12, metadata !12862, metadata !DIExpression()), !dbg !12863
  store ptr %64, ptr %13, align 8
  call void @llvm.dbg.declare(metadata ptr %13, metadata !12865, metadata !DIExpression()), !dbg !12866
  call void @llvm.dbg.declare(metadata ptr %14, metadata !12867, metadata !DIExpression()), !dbg !12868
  %65 = load ptr, ptr %13, align 8, !dbg !12869
  store ptr %65, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !12608, metadata !DIExpression()), !dbg !12870
  %66 = load ptr, ptr %11, align 8, !dbg !12872
  store ptr %66, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !12612, metadata !DIExpression()), !dbg !12873
  call void @llvm.dbg.declare(metadata ptr %9, metadata !12618, metadata !DIExpression()), !dbg !12875
  %67 = load ptr, ptr %8, align 8, !dbg !12876
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %9, ptr align 1 %67, i64 4, i1 false), !dbg !12877
  %68 = load i32, ptr %9, align 4, !dbg !12878
  switch i32 %68, label %72 [
    i32 542393671, label %69
    i32 1145128264, label %70
    i32 1414745936, label %71
  ], !dbg !12872

69:                                               ; preds = %62
  store i32 1, ptr %10, align 4, !dbg !12879
  br label %73, !dbg !12879

70:                                               ; preds = %62
  store i32 2, ptr %10, align 4, !dbg !12880
  br label %73, !dbg !12880

71:                                               ; preds = %62
  store i32 4, ptr %10, align 4, !dbg !12881
  br label %73, !dbg !12881

72:                                               ; preds = %62
  store i32 0, ptr %10, align 4, !dbg !12882
  br label %73, !dbg !12882

73:                                               ; preds = %72, %71, %70, %69
  %74 = load i32, ptr %10, align 4, !dbg !12883
  store i32 %74, ptr %14, align 4, !dbg !12868
  %75 = load i32, ptr %14, align 4, !dbg !12884
  %76 = load ptr, ptr %12, align 8, !dbg !12885
  %77 = load i32, ptr %76, align 8, !dbg !12886
  %78 = or i32 %77, %75, !dbg !12886
  store i32 %78, ptr %76, align 8, !dbg !12886
  %79 = load ptr, ptr %13, align 8, !dbg !12887
  %80 = load i32, ptr %14, align 4, !dbg !12888
  %81 = sext i32 %80 to i64, !dbg !12889
  %82 = getelementptr inbounds [5 x i8], ptr @identify_http_method.sizes, i64 0, i64 %81, !dbg !12889
  %83 = load i8, ptr %82, align 1, !dbg !12889
  %84 = sext i8 %83 to i32, !dbg !12889
  %85 = sext i32 %84 to i64, !dbg !12890
  %86 = getelementptr inbounds i8, ptr %79, i64 %85, !dbg !12890
  store ptr %86, ptr %20, align 8, !dbg !12859
  %87 = load ptr, ptr %19, align 8, !dbg !12891
  %88 = load ptr, ptr %20, align 8, !dbg !12891
  %89 = icmp eq ptr %87, %88, !dbg !12891
  %90 = zext i1 %89 to i32, !dbg !12891
  %91 = sext i32 %90 to i64, !dbg !12891
  %92 = icmp ne i64 %91, 0, !dbg !12891
  br i1 %92, label %93, label %94, !dbg !12893

93:                                               ; preds = %73
  store i32 405, ptr %16, align 4, !dbg !12894
  br label %204, !dbg !12894

94:                                               ; preds = %73
  %95 = load ptr, ptr %17, align 8, !dbg !12895
  %96 = load ptr, ptr %20, align 8, !dbg !12896
  %97 = load ptr, ptr %18, align 8, !dbg !12897
  %98 = call ptr @identify_http_path(ptr noundef %95, ptr noundef %96, ptr noundef %97), !dbg !12898
  store ptr %98, ptr %19, align 8, !dbg !12899
  %99 = load ptr, ptr %19, align 8, !dbg !12900
  %100 = icmp ne ptr %99, null, !dbg !12900
  %101 = xor i1 %100, true, !dbg !12900
  %102 = zext i1 %101 to i32, !dbg !12900
  %103 = sext i32 %102 to i64, !dbg !12900
  %104 = icmp ne i64 %103, 0, !dbg !12900
  br i1 %104, label %105, label %106, !dbg !12902

105:                                              ; preds = %94
  store i32 400, ptr %16, align 4, !dbg !12903
  br label %204, !dbg !12903

106:                                              ; preds = %94
  %107 = load ptr, ptr %18, align 8, !dbg !12904
  %108 = load ptr, ptr %19, align 8, !dbg !12905
  %109 = load ptr, ptr %18, align 8, !dbg !12906
  %110 = getelementptr inbounds %struct.request_parser_helper, ptr %109, i32 0, i32 0, !dbg !12907
  %111 = load ptr, ptr %110, align 8, !dbg !12907
  %112 = getelementptr inbounds %struct.lwan_value_t_, ptr %111, i32 0, i32 0, !dbg !12908
  %113 = load ptr, ptr %112, align 8, !dbg !12908
  %114 = load ptr, ptr %18, align 8, !dbg !12909
  %115 = getelementptr inbounds %struct.request_parser_helper, ptr %114, i32 0, i32 0, !dbg !12910
  %116 = load ptr, ptr %115, align 8, !dbg !12910
  %117 = getelementptr inbounds %struct.lwan_value_t_, ptr %116, i32 0, i32 1, !dbg !12911
  %118 = load i64, ptr %117, align 8, !dbg !12911
  %119 = getelementptr inbounds i8, ptr %113, i64 %118, !dbg !12912
  %120 = call ptr @parse_headers(ptr noundef %107, ptr noundef %108, ptr noundef %119), !dbg !12913
  store ptr %120, ptr %19, align 8, !dbg !12914
  %121 = load ptr, ptr %19, align 8, !dbg !12915
  %122 = icmp ne ptr %121, null, !dbg !12915
  %123 = xor i1 %122, true, !dbg !12915
  %124 = zext i1 %123 to i32, !dbg !12915
  %125 = sext i32 %124 to i64, !dbg !12915
  %126 = icmp ne i64 %125, 0, !dbg !12915
  br i1 %126, label %127, label %128, !dbg !12917

127:                                              ; preds = %106
  store i32 400, ptr %16, align 4, !dbg !12918
  br label %204, !dbg !12918

128:                                              ; preds = %106
  call void @llvm.dbg.declare(metadata ptr %21, metadata !12919, metadata !DIExpression()), !dbg !12920
  %129 = load ptr, ptr %17, align 8, !dbg !12921
  %130 = getelementptr inbounds %struct.lwan_request_t_, ptr %129, i32 0, i32 2, !dbg !12922
  %131 = getelementptr inbounds %struct.lwan_value_t_, ptr %130, i32 0, i32 0, !dbg !12923
  %132 = load ptr, ptr %131, align 8, !dbg !12923
  %133 = call i64 @url_decode(ptr noundef %132), !dbg !12924
  store i64 %133, ptr %21, align 8, !dbg !12920
  %134 = load i64, ptr %21, align 8, !dbg !12925
  %135 = icmp ne i64 %134, 0, !dbg !12925
  %136 = xor i1 %135, true, !dbg !12925
  %137 = zext i1 %136 to i32, !dbg !12925
  %138 = sext i32 %137 to i64, !dbg !12925
  %139 = icmp ne i64 %138, 0, !dbg !12925
  br i1 %139, label %140, label %141, !dbg !12927

140:                                              ; preds = %128
  store i32 400, ptr %16, align 4, !dbg !12928
  br label %204, !dbg !12928

141:                                              ; preds = %128
  %142 = load i64, ptr %21, align 8, !dbg !12929
  %143 = load ptr, ptr %17, align 8, !dbg !12930
  %144 = getelementptr inbounds %struct.lwan_request_t_, ptr %143, i32 0, i32 2, !dbg !12931
  %145 = getelementptr inbounds %struct.lwan_value_t_, ptr %144, i32 0, i32 1, !dbg !12932
  store i64 %142, ptr %145, align 8, !dbg !12933
  %146 = load ptr, ptr %17, align 8, !dbg !12934
  %147 = getelementptr inbounds %struct.lwan_request_t_, ptr %146, i32 0, i32 3, !dbg !12935
  %148 = getelementptr inbounds %struct.lwan_value_t_, ptr %147, i32 0, i32 1, !dbg !12936
  store i64 %142, ptr %148, align 8, !dbg !12937
  %149 = load ptr, ptr %17, align 8, !dbg !12938
  %150 = load ptr, ptr %18, align 8, !dbg !12939
  store ptr %149, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !12940, metadata !DIExpression()), !dbg !12942
  store ptr %150, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !12944, metadata !DIExpression()), !dbg !12945
  call void @llvm.dbg.declare(metadata ptr %7, metadata !12946, metadata !DIExpression()), !dbg !12947
  %151 = load ptr, ptr %5, align 8, !dbg !12948
  %152 = load i32, ptr %151, align 8, !dbg !12950
  %153 = and i32 %152, 32, !dbg !12951
  %154 = icmp ne i32 %153, 0, !dbg !12951
  br i1 %154, label %155, label %162, !dbg !12952

155:                                              ; preds = %141
  %156 = load ptr, ptr %6, align 8, !dbg !12953
  %157 = getelementptr inbounds %struct.request_parser_helper, ptr %156, i32 0, i32 11, !dbg !12954
  %158 = load i8, ptr %157, align 8, !dbg !12954
  %159 = sext i8 %158 to i32, !dbg !12953
  %160 = icmp eq i32 %159, 107, !dbg !12955
  %161 = zext i1 %160 to i8, !dbg !12956
  store i8 %161, ptr %7, align 1, !dbg !12956
  br label %169, !dbg !12957

162:                                              ; preds = %141
  %163 = load ptr, ptr %6, align 8, !dbg !12958
  %164 = getelementptr inbounds %struct.request_parser_helper, ptr %163, i32 0, i32 11, !dbg !12959
  %165 = load i8, ptr %164, align 8, !dbg !12959
  %166 = sext i8 %165 to i32, !dbg !12958
  %167 = icmp ne i32 %166, 99, !dbg !12960
  %168 = zext i1 %167 to i8, !dbg !12961
  store i8 %168, ptr %7, align 1, !dbg !12961
  br label %169

169:                                              ; preds = %162, %155
  %170 = load i8, ptr %7, align 1, !dbg !12962
  %171 = trunc i8 %170 to i1, !dbg !12962
  br i1 %171, label %172, label %178, !dbg !12964

172:                                              ; preds = %169
  %173 = load ptr, ptr %5, align 8, !dbg !12965
  %174 = getelementptr inbounds %struct.lwan_request_t_, ptr %173, i32 0, i32 4, !dbg !12966
  %175 = load ptr, ptr %174, align 8, !dbg !12966
  %176 = load i32, ptr %175, align 8, !dbg !12967
  %177 = or i32 %176, 1, !dbg !12967
  store i32 %177, ptr %175, align 8, !dbg !12967
  br label %184, !dbg !12965

178:                                              ; preds = %169
  %179 = load ptr, ptr %5, align 8, !dbg !12968
  %180 = getelementptr inbounds %struct.lwan_request_t_, ptr %179, i32 0, i32 4, !dbg !12969
  %181 = load ptr, ptr %180, align 8, !dbg !12969
  %182 = load i32, ptr %181, align 8, !dbg !12970
  %183 = and i32 %182, -2, !dbg !12970
  store i32 %183, ptr %181, align 8, !dbg !12970
  br label %184

184:                                              ; preds = %178, %172
  %185 = load ptr, ptr %17, align 8, !dbg !12971
  %186 = getelementptr inbounds %struct.lwan_request_t_, ptr %185, i32 0, i32 0, !dbg !12973
  %187 = load i32, ptr %186, align 8, !dbg !12973
  %188 = and i32 %187, 4, !dbg !12974
  %189 = icmp ne i32 %188, 0, !dbg !12974
  br i1 %189, label %190, label %203, !dbg !12975

190:                                              ; preds = %184
  call void @llvm.dbg.declare(metadata ptr %22, metadata !12976, metadata !DIExpression()), !dbg !12978
  %191 = load ptr, ptr %17, align 8, !dbg !12979
  %192 = load ptr, ptr %18, align 8, !dbg !12980
  %193 = load ptr, ptr %19, align 8, !dbg !12981
  %194 = call i32 @read_post_data(ptr noundef %191, ptr noundef %192, ptr noundef %193), !dbg !12982
  store i32 %194, ptr %22, align 4, !dbg !12978
  %195 = load i32, ptr %22, align 4, !dbg !12983
  %196 = icmp ne i32 %195, 200, !dbg !12983
  %197 = zext i1 %196 to i32, !dbg !12983
  %198 = sext i32 %197 to i64, !dbg !12983
  %199 = icmp ne i64 %198, 0, !dbg !12983
  br i1 %199, label %200, label %202, !dbg !12985

200:                                              ; preds = %190
  %201 = load i32, ptr %22, align 4, !dbg !12986
  store i32 %201, ptr %16, align 4, !dbg !12987
  br label %204, !dbg !12987

202:                                              ; preds = %190
  br label %203, !dbg !12988

203:                                              ; preds = %202, %184
  store i32 200, ptr %16, align 4, !dbg !12989
  br label %204, !dbg !12989

204:                                              ; preds = %203, %200, %140, %127, %105, %93, %61
  %205 = load i32, ptr %16, align 4, !dbg !12990
  ret i32 %205, !dbg !12990
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local ptr @lwan_trie_lookup_prefix(ptr noundef %0, ptr noundef %1) #11 !dbg !12991 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i8, align 1
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca i64, align 8
  %15 = alloca ptr, align 8
  %16 = alloca ptr, align 8
  %17 = alloca ptr, align 8
  %18 = alloca ptr, align 8
  %19 = alloca i8, align 1
  %20 = alloca i64, align 8
  %21 = alloca ptr, align 8
  %22 = alloca ptr, align 8
  %23 = alloca ptr, align 8
  %24 = alloca ptr, align 8
  store ptr %0, ptr %23, align 8
  call void @llvm.dbg.declare(metadata ptr %23, metadata !12994, metadata !DIExpression()), !dbg !12995
  store ptr %1, ptr %24, align 8
  call void @llvm.dbg.declare(metadata ptr %24, metadata !12996, metadata !DIExpression()), !dbg !12997
  %25 = load ptr, ptr %23, align 8, !dbg !12998
  %26 = load ptr, ptr %24, align 8, !dbg !12999
  store ptr %25, ptr %17, align 8
  call void @llvm.dbg.declare(metadata ptr %17, metadata !13000, metadata !DIExpression()), !dbg !13004
  store ptr %26, ptr %18, align 8
  call void @llvm.dbg.declare(metadata ptr %18, metadata !13006, metadata !DIExpression()), !dbg !13007
  store i8 1, ptr %19, align 1
  call void @llvm.dbg.declare(metadata ptr %19, metadata !13008, metadata !DIExpression()), !dbg !13009
  %27 = load ptr, ptr %17, align 8, !dbg !13010
  %28 = icmp ne ptr %27, null, !dbg !13010
  %29 = xor i1 %28, true, !dbg !13010
  %30 = zext i1 %29 to i32, !dbg !13010
  %31 = sext i32 %30 to i64, !dbg !13010
  br i1 %29, label %32, label %33, !dbg !13012

32:                                               ; preds = %2
  store ptr null, ptr %16, align 8, !dbg !13013
  br label %146, !dbg !13013

33:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata ptr %20, metadata !13014, metadata !DIExpression()), !dbg !13015
  call void @llvm.dbg.declare(metadata ptr %21, metadata !13016, metadata !DIExpression()), !dbg !13017
  %34 = load ptr, ptr %17, align 8, !dbg !13018
  %35 = load ptr, ptr %34, align 8, !dbg !13019
  %36 = load ptr, ptr %18, align 8, !dbg !13020
  %37 = load i8, ptr %19, align 1, !dbg !13021
  %38 = trunc i8 %37 to i1, !dbg !13021
  store ptr %35, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !13022, metadata !DIExpression()), !dbg !13026
  store ptr %36, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !13028, metadata !DIExpression()), !dbg !13029
  %39 = zext i1 %38 to i8
  store i8 %39, ptr %6, align 1
  call void @llvm.dbg.declare(metadata ptr %6, metadata !13030, metadata !DIExpression()), !dbg !13031
  store ptr %20, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !13032, metadata !DIExpression()), !dbg !13033
  call void @llvm.dbg.declare(metadata ptr %8, metadata !13034, metadata !DIExpression()), !dbg !13035
  call void @llvm.dbg.declare(metadata ptr %9, metadata !13036, metadata !DIExpression()), !dbg !13037
  store ptr null, ptr %9, align 8, !dbg !13037
  call void @llvm.dbg.declare(metadata ptr %10, metadata !13038, metadata !DIExpression()), !dbg !13039
  %40 = load ptr, ptr %5, align 8, !dbg !13040
  store ptr %40, ptr %10, align 8, !dbg !13039
  %41 = load ptr, ptr %4, align 8, !dbg !13041
  store ptr %41, ptr %8, align 8, !dbg !13043
  br label %42, !dbg !13044

42:                                               ; preds = %59, %33
  %43 = load ptr, ptr %8, align 8, !dbg !13045
  %44 = icmp ne ptr %43, null, !dbg !13045
  br i1 %44, label %45, label %50, !dbg !13047

45:                                               ; preds = %42
  %46 = load ptr, ptr %5, align 8, !dbg !13048
  %47 = load i8, ptr %46, align 1, !dbg !13049
  %48 = sext i8 %47 to i32, !dbg !13049
  %49 = icmp ne i32 %48, 0, !dbg !13047
  br label %50

50:                                               ; preds = %45, %42
  %51 = phi i1 [ false, %42 ], [ %49, %45 ], !dbg !13050
  br i1 %51, label %52, label %69, !dbg !13051

52:                                               ; preds = %50
  %53 = load ptr, ptr %8, align 8, !dbg !13052
  %54 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %53, i32 0, i32 1, !dbg !13055
  %55 = load ptr, ptr %54, align 8, !dbg !13055
  %56 = icmp ne ptr %55, null, !dbg !13052
  br i1 %56, label %57, label %59, !dbg !13056

57:                                               ; preds = %52
  %58 = load ptr, ptr %8, align 8, !dbg !13057
  store ptr %58, ptr %9, align 8, !dbg !13058
  br label %59, !dbg !13059

59:                                               ; preds = %57, %52
  %60 = load ptr, ptr %8, align 8, !dbg !13060
  %61 = load ptr, ptr %5, align 8, !dbg !13061
  %62 = getelementptr inbounds i8, ptr %61, i32 1, !dbg !13061
  store ptr %62, ptr %5, align 8, !dbg !13061
  %63 = load i8, ptr %61, align 1, !dbg !13062
  %64 = sext i8 %63 to i32, !dbg !13062
  %65 = and i32 %64, 7, !dbg !13063
  %66 = sext i32 %65 to i64, !dbg !13060
  %67 = getelementptr inbounds [8 x ptr], ptr %60, i64 0, i64 %66, !dbg !13060
  %68 = load ptr, ptr %67, align 8, !dbg !13060
  store ptr %68, ptr %8, align 8, !dbg !13064
  br label %42, !dbg !13065, !llvm.loop !13066

69:                                               ; preds = %50
  %70 = load ptr, ptr %5, align 8, !dbg !13068
  %71 = load ptr, ptr %10, align 8, !dbg !13069
  %72 = ptrtoint ptr %70 to i64, !dbg !13070
  %73 = ptrtoint ptr %71 to i64, !dbg !13070
  %74 = sub i64 %72, %73, !dbg !13070
  %75 = load ptr, ptr %7, align 8, !dbg !13071
  store i64 %74, ptr %75, align 8, !dbg !13072
  %76 = load ptr, ptr %8, align 8, !dbg !13073
  %77 = icmp ne ptr %76, null, !dbg !13073
  br i1 %77, label %78, label %85, !dbg !13075

78:                                               ; preds = %69
  %79 = load ptr, ptr %8, align 8, !dbg !13076
  %80 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %79, i32 0, i32 1, !dbg !13077
  %81 = load ptr, ptr %80, align 8, !dbg !13077
  %82 = icmp ne ptr %81, null, !dbg !13076
  br i1 %82, label %83, label %85, !dbg !13078

83:                                               ; preds = %78
  %84 = load ptr, ptr %8, align 8, !dbg !13079
  store ptr %84, ptr %3, align 8, !dbg !13080
  br label %94, !dbg !13080

85:                                               ; preds = %78, %69
  %86 = load i8, ptr %6, align 1, !dbg !13081
  %87 = trunc i8 %86 to i1, !dbg !13081
  br i1 %87, label %88, label %93, !dbg !13083

88:                                               ; preds = %85
  %89 = load ptr, ptr %9, align 8, !dbg !13084
  %90 = icmp ne ptr %89, null, !dbg !13084
  br i1 %90, label %91, label %93, !dbg !13085

91:                                               ; preds = %88
  %92 = load ptr, ptr %9, align 8, !dbg !13086
  store ptr %92, ptr %3, align 8, !dbg !13087
  br label %94, !dbg !13087

93:                                               ; preds = %88, %85
  store ptr null, ptr %3, align 8, !dbg !13088
  br label %94, !dbg !13088

94:                                               ; preds = %93, %91, %83
  %95 = load ptr, ptr %3, align 8, !dbg !13089
  store ptr %95, ptr %21, align 8, !dbg !13017
  %96 = load ptr, ptr %21, align 8, !dbg !13090
  %97 = icmp ne ptr %96, null, !dbg !13090
  br i1 %97, label %99, label %98, !dbg !13092

98:                                               ; preds = %94
  store ptr null, ptr %16, align 8, !dbg !13093
  br label %146, !dbg !13093

99:                                               ; preds = %94
  call void @llvm.dbg.declare(metadata ptr %22, metadata !13094, metadata !DIExpression()), !dbg !13095
  %100 = load ptr, ptr %21, align 8, !dbg !13096
  %101 = load ptr, ptr %18, align 8, !dbg !13097
  %102 = load i64, ptr %20, align 8, !dbg !13098
  store ptr %100, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %12, metadata !9573, metadata !DIExpression()), !dbg !13099
  store ptr %101, ptr %13, align 8
  call void @llvm.dbg.declare(metadata ptr %13, metadata !9579, metadata !DIExpression()), !dbg !13101
  store i64 %102, ptr %14, align 8
  call void @llvm.dbg.declare(metadata ptr %14, metadata !9581, metadata !DIExpression()), !dbg !13102
  call void @llvm.dbg.declare(metadata ptr %15, metadata !9583, metadata !DIExpression()), !dbg !13103
  %103 = load ptr, ptr %12, align 8, !dbg !13104
  %104 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %103, i32 0, i32 1, !dbg !13105
  %105 = load ptr, ptr %104, align 8, !dbg !13105
  store ptr %105, ptr %15, align 8, !dbg !13103
  %106 = load ptr, ptr %15, align 8, !dbg !13106
  %107 = icmp ne ptr %106, null, !dbg !13106
  br i1 %107, label %109, label %108, !dbg !13107

108:                                              ; preds = %99
  store ptr null, ptr %11, align 8, !dbg !13108
  br label %135, !dbg !13108

109:                                              ; preds = %99
  %110 = load ptr, ptr %15, align 8, !dbg !13109
  %111 = getelementptr inbounds %struct.anon.5, ptr %110, i32 0, i32 2, !dbg !13110
  %112 = load ptr, ptr %111, align 8, !dbg !13110
  %113 = icmp ne ptr %112, null, !dbg !13109
  br i1 %113, label %116, label %114, !dbg !13111

114:                                              ; preds = %109
  %115 = load ptr, ptr %15, align 8, !dbg !13112
  store ptr %115, ptr %11, align 8, !dbg !13113
  br label %135, !dbg !13113

116:                                              ; preds = %109
  br label %117, !dbg !13114

117:                                              ; preds = %130, %116
  %118 = load ptr, ptr %15, align 8, !dbg !13115
  %119 = icmp ne ptr %118, null, !dbg !13116
  br i1 %119, label %120, label %134, !dbg !13116

120:                                              ; preds = %117
  %121 = load ptr, ptr %15, align 8, !dbg !13117
  %122 = load ptr, ptr %121, align 8, !dbg !13118
  %123 = load ptr, ptr %13, align 8, !dbg !13119
  %124 = load i64, ptr %14, align 8, !dbg !13120
  %125 = sub i64 %124, 1, !dbg !13121
  %126 = call i32 @strncmp(ptr noundef %122, ptr noundef %123, i64 noundef %125) #20, !dbg !13122
  %127 = icmp ne i32 %126, 0, !dbg !13122
  br i1 %127, label %130, label %128, !dbg !13123

128:                                              ; preds = %120
  %129 = load ptr, ptr %15, align 8, !dbg !13124
  store ptr %129, ptr %11, align 8, !dbg !13125
  br label %135, !dbg !13125

130:                                              ; preds = %120
  %131 = load ptr, ptr %15, align 8, !dbg !13126
  %132 = getelementptr inbounds %struct.anon.5, ptr %131, i32 0, i32 2, !dbg !13127
  %133 = load ptr, ptr %132, align 8, !dbg !13127
  store ptr %133, ptr %15, align 8, !dbg !13128
  br label %117, !dbg !13129, !llvm.loop !13130

134:                                              ; preds = %117
  store ptr null, ptr %11, align 8, !dbg !13132
  br label %135, !dbg !13132

135:                                              ; preds = %134, %128, %114, %108
  %136 = load ptr, ptr %11, align 8, !dbg !13133
  store ptr %136, ptr %22, align 8, !dbg !13095
  %137 = load ptr, ptr %22, align 8, !dbg !13134
  %138 = icmp ne ptr %137, null, !dbg !13134
  br i1 %138, label %139, label %143, !dbg !13134

139:                                              ; preds = %135
  %140 = load ptr, ptr %22, align 8, !dbg !13135
  %141 = getelementptr inbounds %struct.anon.5, ptr %140, i32 0, i32 1, !dbg !13136
  %142 = load ptr, ptr %141, align 8, !dbg !13136
  br label %144, !dbg !13134

143:                                              ; preds = %135
  br label %144, !dbg !13134

144:                                              ; preds = %143, %139
  %145 = phi ptr [ %142, %139 ], [ null, %143 ], !dbg !13134
  store ptr %145, ptr %16, align 8, !dbg !13137
  br label %146, !dbg !13137

146:                                              ; preds = %144, %98, %32
  %147 = load ptr, ptr %16, align 8, !dbg !13138
  ret ptr %147, !dbg !13139
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @prepare_for_response(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !13140 {
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !13143, metadata !DIExpression()), !dbg !13144
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !13145, metadata !DIExpression()), !dbg !13146
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !13147, metadata !DIExpression()), !dbg !13148
  %8 = load ptr, ptr %5, align 8, !dbg !13149
  %9 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %8, i32 0, i32 4, !dbg !13151
  %10 = load i32, ptr %9, align 8, !dbg !13151
  %11 = and i32 %10, 1, !dbg !13152
  %12 = icmp ne i32 %11, 0, !dbg !13152
  br i1 %12, label %13, label %16, !dbg !13153

13:                                               ; preds = %3
  %14 = load ptr, ptr %6, align 8, !dbg !13154
  %15 = load ptr, ptr %7, align 8, !dbg !13155
  call void @parse_query_string(ptr noundef %14, ptr noundef %15), !dbg !13156
  br label %16, !dbg !13156

16:                                               ; preds = %13, %3
  %17 = load ptr, ptr %5, align 8, !dbg !13157
  %18 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %17, i32 0, i32 4, !dbg !13159
  %19 = load i32, ptr %18, align 8, !dbg !13159
  %20 = and i32 %19, 2, !dbg !13160
  %21 = icmp ne i32 %20, 0, !dbg !13160
  br i1 %21, label %22, label %25, !dbg !13161

22:                                               ; preds = %16
  %23 = load ptr, ptr %6, align 8, !dbg !13162
  %24 = load ptr, ptr %7, align 8, !dbg !13163
  call void @parse_if_modified_since(ptr noundef %23, ptr noundef %24), !dbg !13164
  br label %25, !dbg !13164

25:                                               ; preds = %22, %16
  %26 = load ptr, ptr %5, align 8, !dbg !13165
  %27 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %26, i32 0, i32 4, !dbg !13167
  %28 = load i32, ptr %27, align 8, !dbg !13167
  %29 = and i32 %28, 4, !dbg !13168
  %30 = icmp ne i32 %29, 0, !dbg !13168
  br i1 %30, label %31, label %34, !dbg !13169

31:                                               ; preds = %25
  %32 = load ptr, ptr %6, align 8, !dbg !13170
  %33 = load ptr, ptr %7, align 8, !dbg !13171
  call void @parse_range(ptr noundef %32, ptr noundef %33), !dbg !13172
  br label %34, !dbg !13172

34:                                               ; preds = %31, %25
  %35 = load ptr, ptr %5, align 8, !dbg !13173
  %36 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %35, i32 0, i32 4, !dbg !13175
  %37 = load i32, ptr %36, align 8, !dbg !13175
  %38 = and i32 %37, 8, !dbg !13176
  %39 = icmp ne i32 %38, 0, !dbg !13176
  br i1 %39, label %40, label %43, !dbg !13177

40:                                               ; preds = %34
  %41 = load ptr, ptr %6, align 8, !dbg !13178
  %42 = load ptr, ptr %7, align 8, !dbg !13179
  call void @parse_accept_encoding(ptr noundef %41, ptr noundef %42), !dbg !13180
  br label %43, !dbg !13180

43:                                               ; preds = %40, %34
  %44 = load ptr, ptr %6, align 8, !dbg !13181
  %45 = getelementptr inbounds %struct.lwan_request_t_, ptr %44, i32 0, i32 0, !dbg !13183
  %46 = load i32, ptr %45, align 8, !dbg !13183
  %47 = and i32 %46, 4, !dbg !13184
  %48 = icmp ne i32 %47, 0, !dbg !13184
  br i1 %48, label %49, label %60, !dbg !13185

49:                                               ; preds = %43
  %50 = load ptr, ptr %5, align 8, !dbg !13186
  %51 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %50, i32 0, i32 4, !dbg !13189
  %52 = load i32, ptr %51, align 8, !dbg !13189
  %53 = and i32 %52, 16, !dbg !13190
  %54 = icmp ne i32 %53, 0, !dbg !13190
  br i1 %54, label %55, label %58, !dbg !13191

55:                                               ; preds = %49
  %56 = load ptr, ptr %6, align 8, !dbg !13192
  %57 = load ptr, ptr %7, align 8, !dbg !13193
  call void @parse_post_data(ptr noundef %56, ptr noundef %57), !dbg !13194
  br label %59, !dbg !13194

58:                                               ; preds = %49
  store i32 405, ptr %4, align 4, !dbg !13195
  br label %117, !dbg !13195

59:                                               ; preds = %55
  br label %60, !dbg !13196

60:                                               ; preds = %59, %43
  %61 = load ptr, ptr %5, align 8, !dbg !13197
  %62 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %61, i32 0, i32 4, !dbg !13199
  %63 = load i32, ptr %62, align 8, !dbg !13199
  %64 = and i32 %63, 32, !dbg !13200
  %65 = icmp ne i32 %64, 0, !dbg !13200
  br i1 %65, label %66, label %81, !dbg !13201

66:                                               ; preds = %60
  %67 = load ptr, ptr %6, align 8, !dbg !13202
  %68 = load ptr, ptr %7, align 8, !dbg !13205
  %69 = getelementptr inbounds %struct.request_parser_helper, ptr %68, i32 0, i32 10, !dbg !13206
  %70 = load ptr, ptr %5, align 8, !dbg !13207
  %71 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %70, i32 0, i32 7, !dbg !13208
  %72 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %71, i32 0, i32 0, !dbg !13209
  %73 = load ptr, ptr %72, align 8, !dbg !13209
  %74 = load ptr, ptr %5, align 8, !dbg !13210
  %75 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %74, i32 0, i32 7, !dbg !13211
  %76 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %75, i32 0, i32 1, !dbg !13212
  %77 = load ptr, ptr %76, align 8, !dbg !13212
  %78 = call zeroext i1 @lwan_http_authorize(ptr noundef %67, ptr noundef %69, ptr noundef %73, ptr noundef %77), !dbg !13213
  br i1 %78, label %80, label %79, !dbg !13214

79:                                               ; preds = %66
  store i32 401, ptr %4, align 4, !dbg !13215
  br label %117, !dbg !13215

80:                                               ; preds = %66
  br label %81, !dbg !13216

81:                                               ; preds = %80, %60
  %82 = load ptr, ptr %5, align 8, !dbg !13217
  %83 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %82, i32 0, i32 4, !dbg !13219
  %84 = load i32, ptr %83, align 8, !dbg !13219
  %85 = and i32 %84, 64, !dbg !13220
  %86 = icmp ne i32 %85, 0, !dbg !13220
  br i1 %86, label %87, label %116, !dbg !13221

87:                                               ; preds = %81
  br label %88, !dbg !13222

88:                                               ; preds = %104, %87
  %89 = load ptr, ptr %6, align 8, !dbg !13224
  %90 = getelementptr inbounds %struct.lwan_request_t_, ptr %89, i32 0, i32 2, !dbg !13225
  %91 = getelementptr inbounds %struct.lwan_value_t_, ptr %90, i32 0, i32 0, !dbg !13226
  %92 = load ptr, ptr %91, align 8, !dbg !13226
  %93 = load i8, ptr %92, align 1, !dbg !13227
  %94 = sext i8 %93 to i32, !dbg !13227
  %95 = icmp eq i32 %94, 47, !dbg !13228
  br i1 %95, label %96, label %102, !dbg !13229

96:                                               ; preds = %88
  %97 = load ptr, ptr %6, align 8, !dbg !13230
  %98 = getelementptr inbounds %struct.lwan_request_t_, ptr %97, i32 0, i32 2, !dbg !13231
  %99 = getelementptr inbounds %struct.lwan_value_t_, ptr %98, i32 0, i32 1, !dbg !13232
  %100 = load i64, ptr %99, align 8, !dbg !13232
  %101 = icmp ugt i64 %100, 0, !dbg !13233
  br label %102

102:                                              ; preds = %96, %88
  %103 = phi i1 [ false, %88 ], [ %101, %96 ], !dbg !13234
  br i1 %103, label %104, label %115, !dbg !13222

104:                                              ; preds = %102
  %105 = load ptr, ptr %6, align 8, !dbg !13235
  %106 = getelementptr inbounds %struct.lwan_request_t_, ptr %105, i32 0, i32 2, !dbg !13237
  %107 = getelementptr inbounds %struct.lwan_value_t_, ptr %106, i32 0, i32 0, !dbg !13238
  %108 = load ptr, ptr %107, align 8, !dbg !13239
  %109 = getelementptr inbounds i8, ptr %108, i32 1, !dbg !13239
  store ptr %109, ptr %107, align 8, !dbg !13239
  %110 = load ptr, ptr %6, align 8, !dbg !13240
  %111 = getelementptr inbounds %struct.lwan_request_t_, ptr %110, i32 0, i32 2, !dbg !13241
  %112 = getelementptr inbounds %struct.lwan_value_t_, ptr %111, i32 0, i32 1, !dbg !13242
  %113 = load i64, ptr %112, align 8, !dbg !13243
  %114 = add i64 %113, -1, !dbg !13243
  store i64 %114, ptr %112, align 8, !dbg !13243
  br label %88, !dbg !13222, !llvm.loop !13244

115:                                              ; preds = %102
  br label %116, !dbg !13246

116:                                              ; preds = %115, %81
  store i32 200, ptr %4, align 4, !dbg !13247
  br label %117, !dbg !13247

117:                                              ; preds = %116, %79, %58
  %118 = load i32, ptr %4, align 4, !dbg !13248
  ret i32 %118, !dbg !13248
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_response(ptr noundef %0, i32 noundef %1) #0 !dbg !13249 {
  %3 = alloca i64, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca [25 x i8], align 16
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca ptr, align 8
  %16 = alloca i64, align 8
  %17 = alloca ptr, align 8
  %18 = alloca i64, align 8
  %19 = alloca ptr, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca ptr, align 8
  %23 = alloca i64, align 8
  %24 = alloca ptr, align 8
  %25 = alloca i32, align 4
  %26 = alloca [512 x i8], align 16
  %27 = alloca i32, align 4
  %28 = alloca i64, align 8
  %29 = alloca [2 x %struct.lwan_value_t_], align 16
  store ptr %0, ptr %24, align 8
  call void @llvm.dbg.declare(metadata ptr %24, metadata !13250, metadata !DIExpression()), !dbg !13251
  store i32 %1, ptr %25, align 4
  call void @llvm.dbg.declare(metadata ptr %25, metadata !13252, metadata !DIExpression()), !dbg !13253
  call void @llvm.dbg.declare(metadata ptr %26, metadata !13254, metadata !DIExpression()), !dbg !13255
  %30 = load ptr, ptr %24, align 8, !dbg !13256
  %31 = getelementptr inbounds %struct.lwan_request_t_, ptr %30, i32 0, i32 0, !dbg !13258
  %32 = load i32, ptr %31, align 8, !dbg !13258
  %33 = and i32 %32, 128, !dbg !13259
  %34 = icmp ne i32 %33, 0, !dbg !13259
  br i1 %34, label %35, label %56, !dbg !13260

35:                                               ; preds = %2
  %36 = load ptr, ptr %24, align 8, !dbg !13261
  %37 = getelementptr inbounds %struct.lwan_request_t_, ptr %36, i32 0, i32 8, !dbg !13261
  %38 = getelementptr inbounds %struct.lwan_response_t_, ptr %37, i32 0, i32 0, !dbg !13261
  %39 = load ptr, ptr %38, align 8, !dbg !13261
  %40 = call zeroext i1 @strbuf_reset_length(ptr noundef %39), !dbg !13261
  %41 = xor i1 %40, true, !dbg !13261
  %42 = zext i1 %41 to i32, !dbg !13261
  %43 = sext i32 %42 to i64, !dbg !13261
  %44 = icmp ne i64 %43, 0, !dbg !13261
  br i1 %44, label %45, label %52, !dbg !13264

45:                                               ; preds = %35
  %46 = load ptr, ptr %24, align 8, !dbg !13265
  %47 = getelementptr inbounds %struct.lwan_request_t_, ptr %46, i32 0, i32 4, !dbg !13266
  %48 = load ptr, ptr %47, align 8, !dbg !13266
  %49 = getelementptr inbounds %struct.lwan_connection_t_, ptr %48, i32 0, i32 2, !dbg !13267
  %50 = load ptr, ptr %49, align 8, !dbg !13267
  %51 = call i32 @coro_yield(ptr noundef %50, i32 noundef -1), !dbg !13268
  br label %52, !dbg !13268

52:                                               ; preds = %45, %35
  %53 = load ptr, ptr %24, align 8, !dbg !13269
  call void @lwan_response_send_chunk(ptr noundef %53), !dbg !13270
  %54 = load ptr, ptr %24, align 8, !dbg !13271
  %55 = load i32, ptr %25, align 4, !dbg !13272
  call void @log_request(ptr noundef %54, i32 noundef %55), !dbg !13273
  br label %604, !dbg !13274

56:                                               ; preds = %2
  %57 = load ptr, ptr %24, align 8, !dbg !13275
  %58 = getelementptr inbounds %struct.lwan_request_t_, ptr %57, i32 0, i32 0, !dbg !13275
  %59 = load i32, ptr %58, align 8, !dbg !13275
  %60 = and i32 %59, 64, !dbg !13275
  %61 = sext i32 %60 to i64, !dbg !13275
  %62 = icmp ne i64 %61, 0, !dbg !13275
  br i1 %62, label %63, label %64, !dbg !13277

63:                                               ; preds = %56
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.3.95, i32 noundef 136, ptr noundef @__FUNCTION__.lwan_response, ptr noundef @.str.8.107), !dbg !13278
  br label %604, !dbg !13280

64:                                               ; preds = %56
  %65 = load ptr, ptr %24, align 8, !dbg !13281
  %66 = getelementptr inbounds %struct.lwan_request_t_, ptr %65, i32 0, i32 8, !dbg !13281
  %67 = getelementptr inbounds %struct.lwan_response_t_, ptr %66, i32 0, i32 1, !dbg !13281
  %68 = load ptr, ptr %67, align 8, !dbg !13281
  %69 = icmp ne ptr %68, null, !dbg !13281
  %70 = xor i1 %69, true, !dbg !13281
  %71 = zext i1 %70 to i32, !dbg !13281
  %72 = sext i32 %71 to i64, !dbg !13281
  %73 = icmp ne i64 %72, 0, !dbg !13281
  br i1 %73, label %74, label %77, !dbg !13283

74:                                               ; preds = %64
  %75 = load ptr, ptr %24, align 8, !dbg !13284
  %76 = load i32, ptr %25, align 4, !dbg !13286
  call void @lwan_default_response(ptr noundef %75, i32 noundef %76), !dbg !13287
  br label %604, !dbg !13288

77:                                               ; preds = %64
  %78 = load ptr, ptr %24, align 8, !dbg !13289
  %79 = load i32, ptr %25, align 4, !dbg !13290
  call void @log_request(ptr noundef %78, i32 noundef %79), !dbg !13291
  %80 = load ptr, ptr %24, align 8, !dbg !13292
  %81 = getelementptr inbounds %struct.lwan_request_t_, ptr %80, i32 0, i32 8, !dbg !13294
  %82 = getelementptr inbounds %struct.lwan_response_t_, ptr %81, i32 0, i32 4, !dbg !13295
  %83 = getelementptr inbounds %struct.anon.5, ptr %82, i32 0, i32 0, !dbg !13296
  %84 = load ptr, ptr %83, align 8, !dbg !13296
  %85 = icmp ne ptr %84, null, !dbg !13292
  br i1 %85, label %86, label %109, !dbg !13297

86:                                               ; preds = %77
  call void @llvm.dbg.declare(metadata ptr %27, metadata !13298, metadata !DIExpression()), !dbg !13300
  %87 = load ptr, ptr %24, align 8, !dbg !13301
  %88 = getelementptr inbounds %struct.lwan_request_t_, ptr %87, i32 0, i32 8, !dbg !13302
  %89 = getelementptr inbounds %struct.lwan_response_t_, ptr %88, i32 0, i32 4, !dbg !13303
  %90 = getelementptr inbounds %struct.anon.5, ptr %89, i32 0, i32 0, !dbg !13304
  %91 = load ptr, ptr %90, align 8, !dbg !13304
  %92 = load ptr, ptr %24, align 8, !dbg !13305
  %93 = load ptr, ptr %24, align 8, !dbg !13306
  %94 = getelementptr inbounds %struct.lwan_request_t_, ptr %93, i32 0, i32 8, !dbg !13307
  %95 = getelementptr inbounds %struct.lwan_response_t_, ptr %94, i32 0, i32 4, !dbg !13308
  %96 = getelementptr inbounds %struct.anon.5, ptr %95, i32 0, i32 1, !dbg !13309
  %97 = load ptr, ptr %96, align 8, !dbg !13309
  %98 = call i32 %91(ptr noundef %92, ptr noundef %97), !dbg !13301
  store i32 %98, ptr %27, align 4, !dbg !13310
  %99 = load ptr, ptr %24, align 8, !dbg !13311
  %100 = getelementptr inbounds %struct.lwan_request_t_, ptr %99, i32 0, i32 8, !dbg !13312
  %101 = getelementptr inbounds %struct.lwan_response_t_, ptr %100, i32 0, i32 4, !dbg !13313
  %102 = getelementptr inbounds %struct.anon.5, ptr %101, i32 0, i32 0, !dbg !13314
  store ptr null, ptr %102, align 8, !dbg !13315
  %103 = load i32, ptr %27, align 4, !dbg !13316
  %104 = icmp uge i32 %103, 400, !dbg !13318
  br i1 %104, label %105, label %108, !dbg !13319

105:                                              ; preds = %86
  %106 = load ptr, ptr %24, align 8, !dbg !13320
  %107 = load i32, ptr %27, align 4, !dbg !13321
  call void @lwan_default_response(ptr noundef %106, i32 noundef %107), !dbg !13322
  br label %108, !dbg !13322

108:                                              ; preds = %105, %86
  br label %604, !dbg !13323

109:                                              ; preds = %77
  call void @llvm.dbg.declare(metadata ptr %28, metadata !13324, metadata !DIExpression()), !dbg !13325
  %110 = load ptr, ptr %24, align 8, !dbg !13326
  %111 = load i32, ptr %25, align 4, !dbg !13327
  %112 = getelementptr inbounds [512 x i8], ptr %26, i64 0, i64 0, !dbg !13328
  store ptr %110, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !13329, metadata !DIExpression()), !dbg !13333
  store i32 %111, ptr %5, align 4
  call void @llvm.dbg.declare(metadata ptr %5, metadata !13335, metadata !DIExpression()), !dbg !13336
  store ptr %112, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !13337, metadata !DIExpression()), !dbg !13338
  store i64 512, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !13339, metadata !DIExpression()), !dbg !13340
  call void @llvm.dbg.declare(metadata ptr %8, metadata !13341, metadata !DIExpression()), !dbg !13342
  call void @llvm.dbg.declare(metadata ptr %9, metadata !13343, metadata !DIExpression()), !dbg !13344
  %113 = load ptr, ptr %6, align 8, !dbg !13345
  %114 = load i64, ptr %7, align 8, !dbg !13346
  %115 = getelementptr inbounds i8, ptr %113, i64 %114, !dbg !13347
  store ptr %115, ptr %9, align 8, !dbg !13344
  call void @llvm.dbg.declare(metadata ptr %10, metadata !13348, metadata !DIExpression()), !dbg !13349
  call void @llvm.dbg.declare(metadata ptr %11, metadata !13350, metadata !DIExpression()), !dbg !13351
  store i8 0, ptr %11, align 1, !dbg !13351
  call void @llvm.dbg.declare(metadata ptr %12, metadata !13352, metadata !DIExpression()), !dbg !13353
  store i8 0, ptr %12, align 1, !dbg !13353
  %116 = load ptr, ptr %6, align 8, !dbg !13354
  store ptr %116, ptr %8, align 8, !dbg !13355
  %117 = load ptr, ptr %4, align 8, !dbg !13356
  %118 = load i32, ptr %117, align 8, !dbg !13358
  %119 = and i32 %118, 32, !dbg !13359
  %120 = icmp ne i32 %119, 0, !dbg !13359
  br i1 %120, label %121, label %132, !dbg !13360

121:                                              ; preds = %109
  %122 = load ptr, ptr %8, align 8, !dbg !13361
  %123 = getelementptr inbounds i8, ptr %122, i64 9, !dbg !13361
  %124 = load ptr, ptr %9, align 8, !dbg !13361
  %125 = icmp uge ptr %123, %124, !dbg !13361
  %126 = zext i1 %125 to i32, !dbg !13361
  %127 = sext i32 %126 to i64, !dbg !13361
  br i1 %125, label %128, label %129, !dbg !13364

128:                                              ; preds = %121
  store i64 0, ptr %3, align 8, !dbg !13361
  br label %558, !dbg !13361

129:                                              ; preds = %121
  %130 = load ptr, ptr %8, align 8, !dbg !13364
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %130, ptr align 1 @.str.10.110, i64 9, i1 false), !dbg !13364
  %131 = getelementptr inbounds i8, ptr %130, i64 9, !dbg !13364
  store ptr %131, ptr %8, align 8, !dbg !13364
  br label %143, !dbg !13364

132:                                              ; preds = %109
  %133 = load ptr, ptr %8, align 8, !dbg !13365
  %134 = getelementptr inbounds i8, ptr %133, i64 9, !dbg !13365
  %135 = load ptr, ptr %9, align 8, !dbg !13365
  %136 = icmp uge ptr %134, %135, !dbg !13365
  %137 = zext i1 %136 to i32, !dbg !13365
  %138 = sext i32 %137 to i64, !dbg !13365
  br i1 %136, label %139, label %140, !dbg !13368

139:                                              ; preds = %132
  store i64 0, ptr %3, align 8, !dbg !13365
  br label %558, !dbg !13365

140:                                              ; preds = %132
  %141 = load ptr, ptr %8, align 8, !dbg !13368
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %141, ptr align 1 @.str.11.111, i64 9, i1 false), !dbg !13368
  %142 = getelementptr inbounds i8, ptr %141, i64 9, !dbg !13368
  store ptr %142, ptr %8, align 8, !dbg !13368
  br label %143

143:                                              ; preds = %140, %129
  call void @llvm.dbg.declare(metadata ptr %13, metadata !13369, metadata !DIExpression()), !dbg !13371
  %144 = load i32, ptr %5, align 4, !dbg !13371
  %145 = call ptr @lwan_http_status_as_string_with_code(i32 noundef %144) #20, !dbg !13371
  %146 = call i64 @strlen(ptr noundef %145) #20, !dbg !13371
  store i64 %146, ptr %13, align 8, !dbg !13371
  %147 = load ptr, ptr %8, align 8, !dbg !13372
  %148 = load i64, ptr %13, align 8, !dbg !13372
  %149 = getelementptr inbounds i8, ptr %147, i64 %148, !dbg !13372
  %150 = load ptr, ptr %9, align 8, !dbg !13372
  %151 = icmp uge ptr %149, %150, !dbg !13372
  %152 = zext i1 %151 to i32, !dbg !13372
  %153 = sext i32 %152 to i64, !dbg !13372
  br i1 %151, label %154, label %155, !dbg !13375

154:                                              ; preds = %143
  store i64 0, ptr %3, align 8, !dbg !13372
  br label %558, !dbg !13372

155:                                              ; preds = %143
  %156 = load ptr, ptr %8, align 8, !dbg !13375
  %157 = load i32, ptr %5, align 4, !dbg !13375
  %158 = call ptr @lwan_http_status_as_string_with_code(i32 noundef %157) #20, !dbg !13375
  %159 = load i64, ptr %13, align 8, !dbg !13375
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %156, ptr align 1 %158, i64 %159, i1 false), !dbg !13375
  %160 = getelementptr inbounds i8, ptr %156, i64 %159, !dbg !13375
  store ptr %160, ptr %8, align 8, !dbg !13375
  %161 = load ptr, ptr %4, align 8, !dbg !13376
  %162 = load i32, ptr %161, align 8, !dbg !13378
  %163 = and i32 %162, 128, !dbg !13379
  %164 = icmp ne i32 %163, 0, !dbg !13379
  br i1 %164, label %165, label %176, !dbg !13380

165:                                              ; preds = %155
  %166 = load ptr, ptr %8, align 8, !dbg !13381
  %167 = getelementptr inbounds i8, ptr %166, i64 28, !dbg !13381
  %168 = load ptr, ptr %9, align 8, !dbg !13381
  %169 = icmp uge ptr %167, %168, !dbg !13381
  %170 = zext i1 %169 to i32, !dbg !13381
  %171 = sext i32 %170 to i64, !dbg !13381
  br i1 %169, label %172, label %173, !dbg !13385

172:                                              ; preds = %165
  store i64 0, ptr %3, align 8, !dbg !13381
  br label %558, !dbg !13381

173:                                              ; preds = %165
  %174 = load ptr, ptr %8, align 8, !dbg !13385
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %174, ptr align 1 @.str.12.112, i64 28, i1 false), !dbg !13385
  %175 = getelementptr inbounds i8, ptr %174, i64 28, !dbg !13385
  store ptr %175, ptr %8, align 8, !dbg !13385
  br label %258, !dbg !13386

176:                                              ; preds = %155
  %177 = load ptr, ptr %4, align 8, !dbg !13387
  %178 = load i32, ptr %177, align 8, !dbg !13389
  %179 = and i32 %178, 256, !dbg !13390
  %180 = icmp ne i32 %179, 0, !dbg !13390
  br i1 %180, label %181, label %182, !dbg !13391

181:                                              ; preds = %176
  br label %257, !dbg !13392

182:                                              ; preds = %176
  %183 = load ptr, ptr %8, align 8, !dbg !13394
  %184 = getelementptr inbounds i8, ptr %183, i64 18, !dbg !13394
  %185 = load ptr, ptr %9, align 8, !dbg !13394
  %186 = icmp uge ptr %184, %185, !dbg !13394
  %187 = zext i1 %186 to i32, !dbg !13394
  %188 = sext i32 %187 to i64, !dbg !13394
  br i1 %186, label %189, label %190, !dbg !13398

189:                                              ; preds = %182
  store i64 0, ptr %3, align 8, !dbg !13394
  br label %558, !dbg !13394

190:                                              ; preds = %182
  %191 = load ptr, ptr %8, align 8, !dbg !13398
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %191, ptr align 1 @.str.13.113, i64 18, i1 false), !dbg !13398
  %192 = getelementptr inbounds i8, ptr %191, i64 18, !dbg !13398
  store ptr %192, ptr %8, align 8, !dbg !13398
  %193 = load ptr, ptr %4, align 8, !dbg !13399
  %194 = getelementptr inbounds %struct.lwan_request_t_, ptr %193, i32 0, i32 8, !dbg !13401
  %195 = getelementptr inbounds %struct.lwan_response_t_, ptr %194, i32 0, i32 4, !dbg !13402
  %196 = load ptr, ptr %195, align 8, !dbg !13403
  %197 = icmp ne ptr %196, null, !dbg !13399
  br i1 %197, label %198, label %226, !dbg !13404

198:                                              ; preds = %190
  call void @llvm.dbg.declare(metadata ptr %14, metadata !13405, metadata !DIExpression()), !dbg !13407
  call void @llvm.dbg.declare(metadata ptr %15, metadata !13408, metadata !DIExpression()), !dbg !13407
  %199 = load ptr, ptr %4, align 8, !dbg !13407
  %200 = getelementptr inbounds %struct.lwan_request_t_, ptr %199, i32 0, i32 8, !dbg !13407
  %201 = getelementptr inbounds %struct.lwan_response_t_, ptr %200, i32 0, i32 2, !dbg !13407
  %202 = load i64, ptr %201, align 8, !dbg !13407
  %203 = call ptr @uint_to_string(i64 noundef %202, ptr noundef %10, ptr noundef %14) #17, !dbg !13407
  store ptr %203, ptr %15, align 8, !dbg !13407
  %204 = load ptr, ptr %8, align 8, !dbg !13409
  %205 = load i64, ptr %14, align 8, !dbg !13409
  %206 = getelementptr inbounds i8, ptr %204, i64 %205, !dbg !13409
  %207 = load ptr, ptr %9, align 8, !dbg !13409
  %208 = icmp uge ptr %206, %207, !dbg !13409
  %209 = zext i1 %208 to i32, !dbg !13409
  %210 = sext i32 %209 to i64, !dbg !13409
  br i1 %208, label %211, label %212, !dbg !13407

211:                                              ; preds = %198
  store i64 0, ptr %3, align 8, !dbg !13409
  br label %558, !dbg !13409

212:                                              ; preds = %198
  %213 = load ptr, ptr %8, align 8, !dbg !13411
  %214 = load i64, ptr %14, align 8, !dbg !13411
  %215 = getelementptr inbounds i8, ptr %213, i64 %214, !dbg !13411
  %216 = load ptr, ptr %9, align 8, !dbg !13411
  %217 = icmp uge ptr %215, %216, !dbg !13411
  %218 = zext i1 %217 to i32, !dbg !13411
  %219 = sext i32 %218 to i64, !dbg !13411
  br i1 %217, label %220, label %221, !dbg !13414

220:                                              ; preds = %212
  store i64 0, ptr %3, align 8, !dbg !13411
  br label %558, !dbg !13411

221:                                              ; preds = %212
  %222 = load ptr, ptr %8, align 8, !dbg !13414
  %223 = load ptr, ptr %15, align 8, !dbg !13414
  %224 = load i64, ptr %14, align 8, !dbg !13414
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %222, ptr align 1 %223, i64 %224, i1 false), !dbg !13414
  %225 = getelementptr inbounds i8, ptr %222, i64 %224, !dbg !13414
  store ptr %225, ptr %8, align 8, !dbg !13414
  br label %256, !dbg !13407

226:                                              ; preds = %190
  call void @llvm.dbg.declare(metadata ptr %16, metadata !13415, metadata !DIExpression()), !dbg !13417
  call void @llvm.dbg.declare(metadata ptr %17, metadata !13418, metadata !DIExpression()), !dbg !13417
  %227 = load ptr, ptr %4, align 8, !dbg !13417
  %228 = getelementptr inbounds %struct.lwan_request_t_, ptr %227, i32 0, i32 8, !dbg !13417
  %229 = load ptr, ptr %228, align 8, !dbg !13417
  %230 = getelementptr inbounds %struct.strbuf_t_, ptr %229, i32 0, i32 1, !dbg !13417
  %231 = getelementptr inbounds %struct.anon.3, ptr %230, i32 0, i32 1, !dbg !13417
  %232 = load i64, ptr %231, align 8, !dbg !13417
  %233 = call ptr @uint_to_string(i64 noundef %232, ptr noundef %10, ptr noundef %16) #17, !dbg !13417
  store ptr %233, ptr %17, align 8, !dbg !13417
  %234 = load ptr, ptr %8, align 8, !dbg !13419
  %235 = load i64, ptr %16, align 8, !dbg !13419
  %236 = getelementptr inbounds i8, ptr %234, i64 %235, !dbg !13419
  %237 = load ptr, ptr %9, align 8, !dbg !13419
  %238 = icmp uge ptr %236, %237, !dbg !13419
  %239 = zext i1 %238 to i32, !dbg !13419
  %240 = sext i32 %239 to i64, !dbg !13419
  br i1 %238, label %241, label %242, !dbg !13417

241:                                              ; preds = %226
  store i64 0, ptr %3, align 8, !dbg !13419
  br label %558, !dbg !13419

242:                                              ; preds = %226
  %243 = load ptr, ptr %8, align 8, !dbg !13421
  %244 = load i64, ptr %16, align 8, !dbg !13421
  %245 = getelementptr inbounds i8, ptr %243, i64 %244, !dbg !13421
  %246 = load ptr, ptr %9, align 8, !dbg !13421
  %247 = icmp uge ptr %245, %246, !dbg !13421
  %248 = zext i1 %247 to i32, !dbg !13421
  %249 = sext i32 %248 to i64, !dbg !13421
  br i1 %247, label %250, label %251, !dbg !13424

250:                                              ; preds = %242
  store i64 0, ptr %3, align 8, !dbg !13421
  br label %558, !dbg !13421

251:                                              ; preds = %242
  %252 = load ptr, ptr %8, align 8, !dbg !13424
  %253 = load ptr, ptr %17, align 8, !dbg !13424
  %254 = load i64, ptr %16, align 8, !dbg !13424
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %252, ptr align 1 %253, i64 %254, i1 false), !dbg !13424
  %255 = getelementptr inbounds i8, ptr %252, i64 %254, !dbg !13424
  store ptr %255, ptr %8, align 8, !dbg !13424
  br label %256

256:                                              ; preds = %251, %221
  br label %257

257:                                              ; preds = %256, %181
  br label %258

258:                                              ; preds = %257, %173
  %259 = load ptr, ptr %8, align 8, !dbg !13425
  %260 = getelementptr inbounds i8, ptr %259, i64 16, !dbg !13425
  %261 = load ptr, ptr %9, align 8, !dbg !13425
  %262 = icmp uge ptr %260, %261, !dbg !13425
  %263 = zext i1 %262 to i32, !dbg !13425
  %264 = sext i32 %263 to i64, !dbg !13425
  br i1 %262, label %265, label %266, !dbg !13428

265:                                              ; preds = %258
  store i64 0, ptr %3, align 8, !dbg !13425
  br label %558, !dbg !13425

266:                                              ; preds = %258
  %267 = load ptr, ptr %8, align 8, !dbg !13428
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %267, ptr align 1 @.str.14.114, i64 16, i1 false), !dbg !13428
  %268 = getelementptr inbounds i8, ptr %267, i64 16, !dbg !13428
  store ptr %268, ptr %8, align 8, !dbg !13428
  call void @llvm.dbg.declare(metadata ptr %18, metadata !13429, metadata !DIExpression()), !dbg !13431
  %269 = load ptr, ptr %4, align 8, !dbg !13431
  %270 = getelementptr inbounds %struct.lwan_request_t_, ptr %269, i32 0, i32 8, !dbg !13431
  %271 = getelementptr inbounds %struct.lwan_response_t_, ptr %270, i32 0, i32 1, !dbg !13431
  %272 = load ptr, ptr %271, align 8, !dbg !13431
  %273 = call i64 @strlen(ptr noundef %272) #20, !dbg !13431
  store i64 %273, ptr %18, align 8, !dbg !13431
  %274 = load ptr, ptr %8, align 8, !dbg !13432
  %275 = load i64, ptr %18, align 8, !dbg !13432
  %276 = getelementptr inbounds i8, ptr %274, i64 %275, !dbg !13432
  %277 = load ptr, ptr %9, align 8, !dbg !13432
  %278 = icmp uge ptr %276, %277, !dbg !13432
  %279 = zext i1 %278 to i32, !dbg !13432
  %280 = sext i32 %279 to i64, !dbg !13432
  br i1 %278, label %281, label %282, !dbg !13435

281:                                              ; preds = %266
  store i64 0, ptr %3, align 8, !dbg !13432
  br label %558, !dbg !13432

282:                                              ; preds = %266
  %283 = load ptr, ptr %8, align 8, !dbg !13435
  %284 = load ptr, ptr %4, align 8, !dbg !13435
  %285 = getelementptr inbounds %struct.lwan_request_t_, ptr %284, i32 0, i32 8, !dbg !13435
  %286 = getelementptr inbounds %struct.lwan_response_t_, ptr %285, i32 0, i32 1, !dbg !13435
  %287 = load ptr, ptr %286, align 8, !dbg !13435
  %288 = load i64, ptr %18, align 8, !dbg !13435
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %283, ptr align 1 %287, i64 %288, i1 false), !dbg !13435
  %289 = getelementptr inbounds i8, ptr %283, i64 %288, !dbg !13435
  store ptr %289, ptr %8, align 8, !dbg !13435
  %290 = load ptr, ptr %4, align 8, !dbg !13436
  %291 = getelementptr inbounds %struct.lwan_request_t_, ptr %290, i32 0, i32 4, !dbg !13438
  %292 = load ptr, ptr %291, align 8, !dbg !13438
  %293 = load i32, ptr %292, align 8, !dbg !13439
  %294 = and i32 %293, 1, !dbg !13440
  %295 = icmp ne i32 %294, 0, !dbg !13440
  br i1 %295, label %296, label %307, !dbg !13441

296:                                              ; preds = %282
  %297 = load ptr, ptr %8, align 8, !dbg !13442
  %298 = getelementptr inbounds i8, ptr %297, i64 24, !dbg !13442
  %299 = load ptr, ptr %9, align 8, !dbg !13442
  %300 = icmp uge ptr %298, %299, !dbg !13442
  %301 = zext i1 %300 to i32, !dbg !13442
  %302 = sext i32 %301 to i64, !dbg !13442
  br i1 %300, label %303, label %304, !dbg !13445

303:                                              ; preds = %296
  store i64 0, ptr %3, align 8, !dbg !13442
  br label %558, !dbg !13442

304:                                              ; preds = %296
  %305 = load ptr, ptr %8, align 8, !dbg !13445
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %305, ptr align 1 @.str.15.115, i64 24, i1 false), !dbg !13445
  %306 = getelementptr inbounds i8, ptr %305, i64 24, !dbg !13445
  store ptr %306, ptr %8, align 8, !dbg !13445
  br label %318, !dbg !13445

307:                                              ; preds = %282
  %308 = load ptr, ptr %8, align 8, !dbg !13446
  %309 = getelementptr inbounds i8, ptr %308, i64 19, !dbg !13446
  %310 = load ptr, ptr %9, align 8, !dbg !13446
  %311 = icmp uge ptr %309, %310, !dbg !13446
  %312 = zext i1 %311 to i32, !dbg !13446
  %313 = sext i32 %312 to i64, !dbg !13446
  br i1 %311, label %314, label %315, !dbg !13449

314:                                              ; preds = %307
  store i64 0, ptr %3, align 8, !dbg !13446
  br label %558, !dbg !13446

315:                                              ; preds = %307
  %316 = load ptr, ptr %8, align 8, !dbg !13449
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %316, ptr align 1 @.str.16.116, i64 19, i1 false), !dbg !13449
  %317 = getelementptr inbounds i8, ptr %316, i64 19, !dbg !13449
  store ptr %317, ptr %8, align 8, !dbg !13449
  br label %318

318:                                              ; preds = %315, %304
  %319 = load i32, ptr %5, align 4, !dbg !13450
  %320 = icmp ult i32 %319, 400, !dbg !13452
  br i1 %320, label %321, label %420, !dbg !13453

321:                                              ; preds = %318
  %322 = load ptr, ptr %4, align 8, !dbg !13454
  %323 = getelementptr inbounds %struct.lwan_request_t_, ptr %322, i32 0, i32 8, !dbg !13455
  %324 = getelementptr inbounds %struct.lwan_response_t_, ptr %323, i32 0, i32 3, !dbg !13456
  %325 = load ptr, ptr %324, align 8, !dbg !13456
  %326 = icmp ne ptr %325, null, !dbg !13454
  br i1 %326, label %327, label %420, !dbg !13457

327:                                              ; preds = %321
  call void @llvm.dbg.declare(metadata ptr %19, metadata !13458, metadata !DIExpression()), !dbg !13460
  %328 = load ptr, ptr %4, align 8, !dbg !13461
  %329 = getelementptr inbounds %struct.lwan_request_t_, ptr %328, i32 0, i32 8, !dbg !13463
  %330 = getelementptr inbounds %struct.lwan_response_t_, ptr %329, i32 0, i32 3, !dbg !13464
  %331 = load ptr, ptr %330, align 8, !dbg !13464
  store ptr %331, ptr %19, align 8, !dbg !13465
  br label %332, !dbg !13466

332:                                              ; preds = %416, %327
  %333 = load ptr, ptr %19, align 8, !dbg !13467
  %334 = load ptr, ptr %333, align 8, !dbg !13469
  %335 = icmp ne ptr %334, null, !dbg !13470
  br i1 %335, label %336, label %419, !dbg !13470

336:                                              ; preds = %332
  %337 = load ptr, ptr %19, align 8, !dbg !13471
  %338 = load ptr, ptr %337, align 8, !dbg !13471
  %339 = call i32 @strcmp(ptr noundef %338, ptr noundef @.str.17.117) #20, !dbg !13471
  %340 = icmp ne i32 %339, 0, !dbg !13471
  %341 = xor i1 %340, true, !dbg !13471
  %342 = zext i1 %341 to i32, !dbg !13471
  %343 = sext i32 %342 to i64, !dbg !13471
  br i1 %341, label %344, label %345, !dbg !13474

344:                                              ; preds = %336
  br label %416, !dbg !13475

345:                                              ; preds = %336
  %346 = load ptr, ptr %19, align 8, !dbg !13476
  %347 = load ptr, ptr %346, align 8, !dbg !13476
  %348 = call i32 @strcmp(ptr noundef %347, ptr noundef @.str.18.118) #20, !dbg !13476
  %349 = icmp ne i32 %348, 0, !dbg !13476
  %350 = xor i1 %349, true, !dbg !13476
  %351 = zext i1 %350 to i32, !dbg !13476
  %352 = sext i32 %351 to i64, !dbg !13476
  br i1 %350, label %353, label %354, !dbg !13478

353:                                              ; preds = %345
  store i8 1, ptr %11, align 1, !dbg !13479
  br label %354, !dbg !13480

354:                                              ; preds = %353, %345
  %355 = load ptr, ptr %19, align 8, !dbg !13481
  %356 = load ptr, ptr %355, align 8, !dbg !13481
  %357 = call i32 @strcmp(ptr noundef %356, ptr noundef @.str.19.119) #20, !dbg !13481
  %358 = icmp ne i32 %357, 0, !dbg !13481
  %359 = xor i1 %358, true, !dbg !13481
  %360 = zext i1 %359 to i32, !dbg !13481
  %361 = sext i32 %360 to i64, !dbg !13481
  br i1 %359, label %362, label %363, !dbg !13483

362:                                              ; preds = %354
  store i8 1, ptr %12, align 1, !dbg !13484
  br label %363, !dbg !13485

363:                                              ; preds = %362, %354
  %364 = load ptr, ptr %8, align 8, !dbg !13486
  %365 = getelementptr inbounds i8, ptr %364, i64 4, !dbg !13486
  %366 = load ptr, ptr %9, align 8, !dbg !13486
  %367 = icmp uge ptr %365, %366, !dbg !13486
  %368 = zext i1 %367 to i32, !dbg !13486
  %369 = sext i32 %368 to i64, !dbg !13486
  br i1 %367, label %370, label %371, !dbg !13488

370:                                              ; preds = %363
  store i64 0, ptr %3, align 8, !dbg !13486
  br label %558, !dbg !13486

371:                                              ; preds = %363
  %372 = load ptr, ptr %8, align 8, !dbg !13489
  %373 = getelementptr inbounds i8, ptr %372, i32 1, !dbg !13489
  store ptr %373, ptr %8, align 8, !dbg !13489
  store i8 13, ptr %372, align 1, !dbg !13489
  %374 = load ptr, ptr %8, align 8, !dbg !13490
  %375 = getelementptr inbounds i8, ptr %374, i32 1, !dbg !13490
  store ptr %375, ptr %8, align 8, !dbg !13490
  store i8 10, ptr %374, align 1, !dbg !13490
  call void @llvm.dbg.declare(metadata ptr %20, metadata !13491, metadata !DIExpression()), !dbg !13493
  %376 = load ptr, ptr %19, align 8, !dbg !13493
  %377 = load ptr, ptr %376, align 8, !dbg !13493
  %378 = call i64 @strlen(ptr noundef %377) #20, !dbg !13493
  store i64 %378, ptr %20, align 8, !dbg !13493
  %379 = load ptr, ptr %8, align 8, !dbg !13494
  %380 = load i64, ptr %20, align 8, !dbg !13494
  %381 = getelementptr inbounds i8, ptr %379, i64 %380, !dbg !13494
  %382 = load ptr, ptr %9, align 8, !dbg !13494
  %383 = icmp uge ptr %381, %382, !dbg !13494
  %384 = zext i1 %383 to i32, !dbg !13494
  %385 = sext i32 %384 to i64, !dbg !13494
  br i1 %383, label %386, label %387, !dbg !13497

386:                                              ; preds = %371
  store i64 0, ptr %3, align 8, !dbg !13494
  br label %558, !dbg !13494

387:                                              ; preds = %371
  %388 = load ptr, ptr %8, align 8, !dbg !13497
  %389 = load ptr, ptr %19, align 8, !dbg !13497
  %390 = load ptr, ptr %389, align 8, !dbg !13497
  %391 = load i64, ptr %20, align 8, !dbg !13497
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %388, ptr align 1 %390, i64 %391, i1 false), !dbg !13497
  %392 = getelementptr inbounds i8, ptr %388, i64 %391, !dbg !13497
  store ptr %392, ptr %8, align 8, !dbg !13497
  %393 = load ptr, ptr %8, align 8, !dbg !13498
  %394 = getelementptr inbounds i8, ptr %393, i32 1, !dbg !13498
  store ptr %394, ptr %8, align 8, !dbg !13498
  store i8 58, ptr %393, align 1, !dbg !13498
  %395 = load ptr, ptr %8, align 8, !dbg !13499
  %396 = getelementptr inbounds i8, ptr %395, i32 1, !dbg !13499
  store ptr %396, ptr %8, align 8, !dbg !13499
  store i8 32, ptr %395, align 1, !dbg !13499
  call void @llvm.dbg.declare(metadata ptr %21, metadata !13500, metadata !DIExpression()), !dbg !13502
  %397 = load ptr, ptr %19, align 8, !dbg !13502
  %398 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %397, i32 0, i32 1, !dbg !13502
  %399 = load ptr, ptr %398, align 8, !dbg !13502
  %400 = call i64 @strlen(ptr noundef %399) #20, !dbg !13502
  store i64 %400, ptr %21, align 8, !dbg !13502
  %401 = load ptr, ptr %8, align 8, !dbg !13503
  %402 = load i64, ptr %21, align 8, !dbg !13503
  %403 = getelementptr inbounds i8, ptr %401, i64 %402, !dbg !13503
  %404 = load ptr, ptr %9, align 8, !dbg !13503
  %405 = icmp uge ptr %403, %404, !dbg !13503
  %406 = zext i1 %405 to i32, !dbg !13503
  %407 = sext i32 %406 to i64, !dbg !13503
  br i1 %405, label %408, label %409, !dbg !13506

408:                                              ; preds = %387
  store i64 0, ptr %3, align 8, !dbg !13503
  br label %558, !dbg !13503

409:                                              ; preds = %387
  %410 = load ptr, ptr %8, align 8, !dbg !13506
  %411 = load ptr, ptr %19, align 8, !dbg !13506
  %412 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %411, i32 0, i32 1, !dbg !13506
  %413 = load ptr, ptr %412, align 8, !dbg !13506
  %414 = load i64, ptr %21, align 8, !dbg !13506
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %410, ptr align 1 %413, i64 %414, i1 false), !dbg !13506
  %415 = getelementptr inbounds i8, ptr %410, i64 %414, !dbg !13506
  store ptr %415, ptr %8, align 8, !dbg !13506
  br label %416, !dbg !13507

416:                                              ; preds = %409, %344
  %417 = load ptr, ptr %19, align 8, !dbg !13508
  %418 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %417, i32 1, !dbg !13508
  store ptr %418, ptr %19, align 8, !dbg !13508
  br label %332, !dbg !13509, !llvm.loop !13510

419:                                              ; preds = %332
  br label %472, !dbg !13512

420:                                              ; preds = %321, %318
  %421 = load i32, ptr %5, align 4, !dbg !13513
  %422 = icmp eq i32 %421, 401, !dbg !13515
  br i1 %422, label %423, label %471, !dbg !13516

423:                                              ; preds = %420
  call void @llvm.dbg.declare(metadata ptr %22, metadata !13517, metadata !DIExpression()), !dbg !13519
  %424 = load ptr, ptr %4, align 8, !dbg !13520
  %425 = getelementptr inbounds %struct.lwan_request_t_, ptr %424, i32 0, i32 8, !dbg !13522
  %426 = getelementptr inbounds %struct.lwan_response_t_, ptr %425, i32 0, i32 3, !dbg !13523
  %427 = load ptr, ptr %426, align 8, !dbg !13523
  store ptr %427, ptr %22, align 8, !dbg !13524
  br label %428, !dbg !13525

428:                                              ; preds = %467, %423
  %429 = load ptr, ptr %22, align 8, !dbg !13526
  %430 = load ptr, ptr %429, align 8, !dbg !13528
  %431 = icmp ne ptr %430, null, !dbg !13529
  br i1 %431, label %432, label %470, !dbg !13529

432:                                              ; preds = %428
  %433 = load ptr, ptr %22, align 8, !dbg !13530
  %434 = load ptr, ptr %433, align 8, !dbg !13533
  %435 = call i32 @strcmp(ptr noundef %434, ptr noundef @.str.20.120) #20, !dbg !13534
  %436 = icmp ne i32 %435, 0, !dbg !13534
  br i1 %436, label %467, label %437, !dbg !13535

437:                                              ; preds = %432
  %438 = load ptr, ptr %8, align 8, !dbg !13536
  %439 = getelementptr inbounds i8, ptr %438, i64 20, !dbg !13536
  %440 = load ptr, ptr %9, align 8, !dbg !13536
  %441 = icmp uge ptr %439, %440, !dbg !13536
  %442 = zext i1 %441 to i32, !dbg !13536
  %443 = sext i32 %442 to i64, !dbg !13536
  br i1 %441, label %444, label %445, !dbg !13540

444:                                              ; preds = %437
  store i64 0, ptr %3, align 8, !dbg !13536
  br label %558, !dbg !13536

445:                                              ; preds = %437
  %446 = load ptr, ptr %8, align 8, !dbg !13540
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %446, ptr align 1 @.str.21.121, i64 20, i1 false), !dbg !13540
  %447 = getelementptr inbounds i8, ptr %446, i64 20, !dbg !13540
  store ptr %447, ptr %8, align 8, !dbg !13540
  call void @llvm.dbg.declare(metadata ptr %23, metadata !13541, metadata !DIExpression()), !dbg !13543
  %448 = load ptr, ptr %22, align 8, !dbg !13543
  %449 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %448, i32 0, i32 1, !dbg !13543
  %450 = load ptr, ptr %449, align 8, !dbg !13543
  %451 = call i64 @strlen(ptr noundef %450) #20, !dbg !13543
  store i64 %451, ptr %23, align 8, !dbg !13543
  %452 = load ptr, ptr %8, align 8, !dbg !13544
  %453 = load i64, ptr %23, align 8, !dbg !13544
  %454 = getelementptr inbounds i8, ptr %452, i64 %453, !dbg !13544
  %455 = load ptr, ptr %9, align 8, !dbg !13544
  %456 = icmp uge ptr %454, %455, !dbg !13544
  %457 = zext i1 %456 to i32, !dbg !13544
  %458 = sext i32 %457 to i64, !dbg !13544
  br i1 %456, label %459, label %460, !dbg !13547

459:                                              ; preds = %445
  store i64 0, ptr %3, align 8, !dbg !13544
  br label %558, !dbg !13544

460:                                              ; preds = %445
  %461 = load ptr, ptr %8, align 8, !dbg !13547
  %462 = load ptr, ptr %22, align 8, !dbg !13547
  %463 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %462, i32 0, i32 1, !dbg !13547
  %464 = load ptr, ptr %463, align 8, !dbg !13547
  %465 = load i64, ptr %23, align 8, !dbg !13547
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %461, ptr align 1 %464, i64 %465, i1 false), !dbg !13547
  %466 = getelementptr inbounds i8, ptr %461, i64 %465, !dbg !13547
  store ptr %466, ptr %8, align 8, !dbg !13547
  br label %470, !dbg !13548

467:                                              ; preds = %432
  %468 = load ptr, ptr %22, align 8, !dbg !13549
  %469 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %468, i32 1, !dbg !13549
  store ptr %469, ptr %22, align 8, !dbg !13549
  br label %428, !dbg !13550, !llvm.loop !13551

470:                                              ; preds = %460, %428
  br label %471, !dbg !13553

471:                                              ; preds = %470, %420
  br label %472

472:                                              ; preds = %471, %419
  %473 = load i8, ptr %11, align 1, !dbg !13554
  %474 = trunc i8 %473 to i1, !dbg !13554
  %475 = xor i1 %474, true, !dbg !13554
  %476 = xor i1 %474, true, !dbg !13554
  %477 = zext i1 %476 to i32, !dbg !13554
  %478 = sext i32 %477 to i64, !dbg !13554
  br i1 %476, label %479, label %506, !dbg !13556

479:                                              ; preds = %472
  %480 = load ptr, ptr %8, align 8, !dbg !13557
  %481 = getelementptr inbounds i8, ptr %480, i64 8, !dbg !13557
  %482 = load ptr, ptr %9, align 8, !dbg !13557
  %483 = icmp uge ptr %481, %482, !dbg !13557
  %484 = zext i1 %483 to i32, !dbg !13557
  %485 = sext i32 %484 to i64, !dbg !13557
  br i1 %483, label %486, label %487, !dbg !13561

486:                                              ; preds = %479
  store i64 0, ptr %3, align 8, !dbg !13557
  br label %558, !dbg !13557

487:                                              ; preds = %479
  %488 = load ptr, ptr %8, align 8, !dbg !13561
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %488, ptr align 1 @.str.22.122, i64 8, i1 false), !dbg !13561
  %489 = getelementptr inbounds i8, ptr %488, i64 8, !dbg !13561
  store ptr %489, ptr %8, align 8, !dbg !13561
  %490 = load ptr, ptr %8, align 8, !dbg !13562
  %491 = getelementptr inbounds i8, ptr %490, i64 29, !dbg !13562
  %492 = load ptr, ptr %9, align 8, !dbg !13562
  %493 = icmp uge ptr %491, %492, !dbg !13562
  %494 = zext i1 %493 to i32, !dbg !13562
  %495 = sext i32 %494 to i64, !dbg !13562
  br i1 %493, label %496, label %497, !dbg !13565

496:                                              ; preds = %487
  store i64 0, ptr %3, align 8, !dbg !13562
  br label %558, !dbg !13562

497:                                              ; preds = %487
  %498 = load ptr, ptr %8, align 8, !dbg !13565
  %499 = load ptr, ptr %4, align 8, !dbg !13565
  %500 = getelementptr inbounds %struct.lwan_request_t_, ptr %499, i32 0, i32 4, !dbg !13565
  %501 = load ptr, ptr %500, align 8, !dbg !13565
  %502 = getelementptr inbounds %struct.lwan_connection_t_, ptr %501, i32 0, i32 3, !dbg !13565
  %503 = load ptr, ptr %502, align 8, !dbg !13565
  %504 = getelementptr inbounds %struct.lwan_thread_t_, ptr %503, i32 0, i32 1, !dbg !13565
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %498, ptr align 8 %504, i64 29, i1 false), !dbg !13565
  %505 = getelementptr inbounds i8, ptr %498, i64 29, !dbg !13565
  store ptr %505, ptr %8, align 8, !dbg !13565
  br label %506, !dbg !13566

506:                                              ; preds = %497, %472
  %507 = load i8, ptr %12, align 1, !dbg !13567
  %508 = trunc i8 %507 to i1, !dbg !13567
  %509 = xor i1 %508, true, !dbg !13567
  %510 = xor i1 %508, true, !dbg !13567
  %511 = zext i1 %510 to i32, !dbg !13567
  %512 = sext i32 %511 to i64, !dbg !13567
  br i1 %510, label %513, label %541, !dbg !13569

513:                                              ; preds = %506
  %514 = load ptr, ptr %8, align 8, !dbg !13570
  %515 = getelementptr inbounds i8, ptr %514, i64 11, !dbg !13570
  %516 = load ptr, ptr %9, align 8, !dbg !13570
  %517 = icmp uge ptr %515, %516, !dbg !13570
  %518 = zext i1 %517 to i32, !dbg !13570
  %519 = sext i32 %518 to i64, !dbg !13570
  br i1 %517, label %520, label %521, !dbg !13574

520:                                              ; preds = %513
  store i64 0, ptr %3, align 8, !dbg !13570
  br label %558, !dbg !13570

521:                                              ; preds = %513
  %522 = load ptr, ptr %8, align 8, !dbg !13574
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %522, ptr align 1 @.str.23.123, i64 11, i1 false), !dbg !13574
  %523 = getelementptr inbounds i8, ptr %522, i64 11, !dbg !13574
  store ptr %523, ptr %8, align 8, !dbg !13574
  %524 = load ptr, ptr %8, align 8, !dbg !13575
  %525 = getelementptr inbounds i8, ptr %524, i64 29, !dbg !13575
  %526 = load ptr, ptr %9, align 8, !dbg !13575
  %527 = icmp uge ptr %525, %526, !dbg !13575
  %528 = zext i1 %527 to i32, !dbg !13575
  %529 = sext i32 %528 to i64, !dbg !13575
  br i1 %527, label %530, label %531, !dbg !13578

530:                                              ; preds = %521
  store i64 0, ptr %3, align 8, !dbg !13575
  br label %558, !dbg !13575

531:                                              ; preds = %521
  %532 = load ptr, ptr %8, align 8, !dbg !13578
  %533 = load ptr, ptr %4, align 8, !dbg !13578
  %534 = getelementptr inbounds %struct.lwan_request_t_, ptr %533, i32 0, i32 4, !dbg !13578
  %535 = load ptr, ptr %534, align 8, !dbg !13578
  %536 = getelementptr inbounds %struct.lwan_connection_t_, ptr %535, i32 0, i32 3, !dbg !13578
  %537 = load ptr, ptr %536, align 8, !dbg !13578
  %538 = getelementptr inbounds %struct.lwan_thread_t_, ptr %537, i32 0, i32 1, !dbg !13578
  %539 = getelementptr inbounds %struct.anon.27, ptr %538, i32 0, i32 1, !dbg !13578
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %532, ptr align 2 %539, i64 29, i1 false), !dbg !13578
  %540 = getelementptr inbounds i8, ptr %532, i64 29, !dbg !13578
  store ptr %540, ptr %8, align 8, !dbg !13578
  br label %541, !dbg !13579

541:                                              ; preds = %531, %506
  %542 = load ptr, ptr %8, align 8, !dbg !13580
  %543 = getelementptr inbounds i8, ptr %542, i64 19, !dbg !13580
  %544 = load ptr, ptr %9, align 8, !dbg !13580
  %545 = icmp uge ptr %543, %544, !dbg !13580
  %546 = zext i1 %545 to i32, !dbg !13580
  %547 = sext i32 %546 to i64, !dbg !13580
  br i1 %545, label %548, label %549, !dbg !13583

548:                                              ; preds = %541
  store i64 0, ptr %3, align 8, !dbg !13580
  br label %558, !dbg !13580

549:                                              ; preds = %541
  %550 = load ptr, ptr %8, align 8, !dbg !13583
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %550, ptr align 1 @.str.24.124, i64 19, i1 false), !dbg !13583
  %551 = getelementptr inbounds i8, ptr %550, i64 19, !dbg !13583
  store ptr %551, ptr %8, align 8, !dbg !13583
  %552 = load ptr, ptr %8, align 8, !dbg !13584
  %553 = load ptr, ptr %6, align 8, !dbg !13585
  %554 = ptrtoint ptr %552 to i64, !dbg !13586
  %555 = ptrtoint ptr %553 to i64, !dbg !13586
  %556 = sub i64 %554, %555, !dbg !13586
  %557 = sub nsw i64 %556, 1, !dbg !13587
  store i64 %557, ptr %3, align 8, !dbg !13588
  br label %558, !dbg !13588

558:                                              ; preds = %549, %548, %530, %520, %496, %486, %459, %444, %408, %386, %370, %314, %303, %281, %265, %250, %241, %220, %211, %189, %172, %154, %139, %128
  %559 = load i64, ptr %3, align 8, !dbg !13589
  store i64 %559, ptr %28, align 8, !dbg !13325
  %560 = load i64, ptr %28, align 8, !dbg !13590
  %561 = icmp ne i64 %560, 0, !dbg !13590
  %562 = xor i1 %561, true, !dbg !13590
  %563 = zext i1 %562 to i32, !dbg !13590
  %564 = sext i32 %563 to i64, !dbg !13590
  %565 = icmp ne i64 %564, 0, !dbg !13590
  br i1 %565, label %566, label %568, !dbg !13592

566:                                              ; preds = %558
  %567 = load ptr, ptr %24, align 8, !dbg !13593
  call void @lwan_default_response(ptr noundef %567, i32 noundef 500), !dbg !13595
  br label %604, !dbg !13596

568:                                              ; preds = %558
  %569 = load ptr, ptr %24, align 8, !dbg !13597
  %570 = getelementptr inbounds %struct.lwan_request_t_, ptr %569, i32 0, i32 0, !dbg !13599
  %571 = load i32, ptr %570, align 8, !dbg !13599
  %572 = and i32 %571, 2, !dbg !13600
  %573 = icmp ne i32 %572, 0, !dbg !13600
  br i1 %573, label %574, label %579, !dbg !13601

574:                                              ; preds = %568
  %575 = load ptr, ptr %24, align 8, !dbg !13602
  %576 = getelementptr inbounds [512 x i8], ptr %26, i64 0, i64 0, !dbg !13604
  %577 = load i64, ptr %28, align 8, !dbg !13605
  %578 = call i64 @lwan_write(ptr noundef %575, ptr noundef %576, i64 noundef %577), !dbg !13606
  br label %604, !dbg !13607

579:                                              ; preds = %568
  call void @llvm.dbg.declare(metadata ptr %29, metadata !13608, metadata !DIExpression()), !dbg !13614
  %580 = getelementptr inbounds [2 x %struct.lwan_value_t_], ptr %29, i64 0, i64 0, !dbg !13615
  %581 = getelementptr inbounds %struct.lwan_value_t_, ptr %580, i32 0, i32 0, !dbg !13616
  %582 = getelementptr inbounds [512 x i8], ptr %26, i64 0, i64 0, !dbg !13617
  store ptr %582, ptr %581, align 16, !dbg !13616
  %583 = getelementptr inbounds %struct.lwan_value_t_, ptr %580, i32 0, i32 1, !dbg !13616
  %584 = load i64, ptr %28, align 8, !dbg !13618
  store i64 %584, ptr %583, align 8, !dbg !13616
  %585 = getelementptr inbounds %struct.lwan_value_t_, ptr %580, i64 1, !dbg !13615
  %586 = getelementptr inbounds %struct.lwan_value_t_, ptr %585, i32 0, i32 0, !dbg !13619
  %587 = load ptr, ptr %24, align 8, !dbg !13620
  %588 = getelementptr inbounds %struct.lwan_request_t_, ptr %587, i32 0, i32 8, !dbg !13620
  %589 = getelementptr inbounds %struct.lwan_response_t_, ptr %588, i32 0, i32 0, !dbg !13620
  %590 = load ptr, ptr %589, align 8, !dbg !13620
  %591 = getelementptr inbounds %struct.strbuf_t_, ptr %590, i32 0, i32 0, !dbg !13620
  %592 = load ptr, ptr %591, align 8, !dbg !13620
  store ptr %592, ptr %586, align 16, !dbg !13619
  %593 = getelementptr inbounds %struct.lwan_value_t_, ptr %585, i32 0, i32 1, !dbg !13619
  %594 = load ptr, ptr %24, align 8, !dbg !13621
  %595 = getelementptr inbounds %struct.lwan_request_t_, ptr %594, i32 0, i32 8, !dbg !13621
  %596 = getelementptr inbounds %struct.lwan_response_t_, ptr %595, i32 0, i32 0, !dbg !13621
  %597 = load ptr, ptr %596, align 8, !dbg !13621
  %598 = getelementptr inbounds %struct.strbuf_t_, ptr %597, i32 0, i32 1, !dbg !13621
  %599 = getelementptr inbounds %struct.anon.3, ptr %598, i32 0, i32 1, !dbg !13621
  %600 = load i64, ptr %599, align 8, !dbg !13621
  store i64 %600, ptr %593, align 8, !dbg !13619
  %601 = load ptr, ptr %24, align 8, !dbg !13622
  %602 = getelementptr inbounds [2 x %struct.lwan_value_t_], ptr %29, i64 0, i64 0, !dbg !13623
  %603 = call i64 @lwan_writev(ptr noundef %601, ptr noundef %602, i32 noundef 2), !dbg !13624
  br label %604, !dbg !13625

604:                                              ; preds = %579, %574, %566, %108, %74, %63, %52
  ret void, !dbg !13625
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_response_send_chunk(ptr noundef %0) #0 !dbg !1962 {
  %2 = alloca ptr, align 8
  %3 = alloca i64, align 8
  %4 = alloca [26 x i8], align 16
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca [3 x %struct.lwan_value_t_], align 16
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !13626, metadata !DIExpression()), !dbg !13627
  %8 = load ptr, ptr %2, align 8, !dbg !13628
  %9 = getelementptr inbounds %struct.lwan_request_t_, ptr %8, i32 0, i32 0, !dbg !13630
  %10 = load i32, ptr %9, align 8, !dbg !13630
  %11 = and i32 %10, 64, !dbg !13631
  %12 = icmp ne i32 %11, 0, !dbg !13631
  br i1 %12, label %22, label %13, !dbg !13632

13:                                               ; preds = %1
  %14 = load ptr, ptr %2, align 8, !dbg !13633
  %15 = call zeroext i1 @lwan_response_set_chunked(ptr noundef %14, i32 noundef 200), !dbg !13633
  %16 = xor i1 %15, true, !dbg !13633
  %17 = zext i1 %16 to i32, !dbg !13633
  %18 = sext i32 %17 to i64, !dbg !13633
  %19 = icmp ne i64 %18, 0, !dbg !13633
  br i1 %19, label %20, label %21, !dbg !13636

20:                                               ; preds = %13
  br label %98, !dbg !13637

21:                                               ; preds = %13
  br label %22, !dbg !13638

22:                                               ; preds = %21, %1
  call void @llvm.dbg.declare(metadata ptr %3, metadata !13639, metadata !DIExpression()), !dbg !13640
  %23 = load ptr, ptr %2, align 8, !dbg !13641
  %24 = getelementptr inbounds %struct.lwan_request_t_, ptr %23, i32 0, i32 8, !dbg !13641
  %25 = getelementptr inbounds %struct.lwan_response_t_, ptr %24, i32 0, i32 0, !dbg !13641
  %26 = load ptr, ptr %25, align 8, !dbg !13641
  %27 = getelementptr inbounds %struct.strbuf_t_, ptr %26, i32 0, i32 1, !dbg !13641
  %28 = getelementptr inbounds %struct.anon.3, ptr %27, i32 0, i32 1, !dbg !13641
  %29 = load i64, ptr %28, align 8, !dbg !13641
  store i64 %29, ptr %3, align 8, !dbg !13640
  %30 = load i64, ptr %3, align 8, !dbg !13642
  %31 = icmp ne i64 %30, 0, !dbg !13642
  %32 = xor i1 %31, true, !dbg !13642
  %33 = zext i1 %32 to i32, !dbg !13642
  %34 = sext i32 %33 to i64, !dbg !13642
  %35 = icmp ne i64 %34, 0, !dbg !13642
  br i1 %35, label %36, label %39, !dbg !13644

36:                                               ; preds = %22
  %37 = load ptr, ptr %2, align 8, !dbg !13645
  %38 = call i64 @lwan_send(ptr noundef %37, ptr noundef @lwan_response_send_chunk.last_chunk, i64 noundef 5, i32 noundef 0), !dbg !13647
  br label %98, !dbg !13648

39:                                               ; preds = %22
  call void @llvm.dbg.declare(metadata ptr %4, metadata !13649, metadata !DIExpression()), !dbg !13650
  call void @llvm.dbg.declare(metadata ptr %5, metadata !13651, metadata !DIExpression()), !dbg !13652
  %40 = getelementptr inbounds [26 x i8], ptr %4, i64 0, i64 0, !dbg !13653
  %41 = load i64, ptr %3, align 8, !dbg !13654
  %42 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %40, i64 noundef 26, ptr noundef @.str.25.133, i64 noundef %41) #17, !dbg !13655
  store i32 %42, ptr %5, align 4, !dbg !13652
  %43 = load i32, ptr %5, align 4, !dbg !13656
  %44 = icmp slt i32 %43, 0, !dbg !13656
  %45 = zext i1 %44 to i32, !dbg !13656
  %46 = sext i32 %45 to i64, !dbg !13656
  %47 = icmp ne i64 %46, 0, !dbg !13656
  br i1 %47, label %48, label %49, !dbg !13658

48:                                               ; preds = %39
  br label %91, !dbg !13659

49:                                               ; preds = %39
  call void @llvm.dbg.declare(metadata ptr %6, metadata !13660, metadata !DIExpression()), !dbg !13661
  %50 = load i32, ptr %5, align 4, !dbg !13662
  %51 = sext i32 %50 to i64, !dbg !13663
  store i64 %51, ptr %6, align 8, !dbg !13661
  call void @llvm.dbg.declare(metadata ptr %7, metadata !13664, metadata !DIExpression()), !dbg !13666
  %52 = getelementptr inbounds [3 x %struct.lwan_value_t_], ptr %7, i64 0, i64 0, !dbg !13667
  %53 = getelementptr inbounds %struct.lwan_value_t_, ptr %52, i32 0, i32 0, !dbg !13668
  %54 = getelementptr inbounds [26 x i8], ptr %4, i64 0, i64 0, !dbg !13669
  store ptr %54, ptr %53, align 16, !dbg !13668
  %55 = getelementptr inbounds %struct.lwan_value_t_, ptr %52, i32 0, i32 1, !dbg !13668
  %56 = load i64, ptr %6, align 8, !dbg !13670
  store i64 %56, ptr %55, align 8, !dbg !13668
  %57 = getelementptr inbounds %struct.lwan_value_t_, ptr %52, i64 1, !dbg !13667
  %58 = getelementptr inbounds %struct.lwan_value_t_, ptr %57, i32 0, i32 0, !dbg !13671
  %59 = load ptr, ptr %2, align 8, !dbg !13672
  %60 = getelementptr inbounds %struct.lwan_request_t_, ptr %59, i32 0, i32 8, !dbg !13672
  %61 = getelementptr inbounds %struct.lwan_response_t_, ptr %60, i32 0, i32 0, !dbg !13672
  %62 = load ptr, ptr %61, align 8, !dbg !13672
  %63 = getelementptr inbounds %struct.strbuf_t_, ptr %62, i32 0, i32 0, !dbg !13672
  %64 = load ptr, ptr %63, align 8, !dbg !13672
  store ptr %64, ptr %58, align 16, !dbg !13671
  %65 = getelementptr inbounds %struct.lwan_value_t_, ptr %57, i32 0, i32 1, !dbg !13671
  %66 = load i64, ptr %3, align 8, !dbg !13673
  store i64 %66, ptr %65, align 8, !dbg !13671
  %67 = getelementptr inbounds %struct.lwan_value_t_, ptr %57, i64 1, !dbg !13667
  %68 = getelementptr inbounds %struct.lwan_value_t_, ptr %67, i32 0, i32 0, !dbg !13674
  store ptr @.str.26.134, ptr %68, align 16, !dbg !13674
  %69 = getelementptr inbounds %struct.lwan_value_t_, ptr %67, i32 0, i32 1, !dbg !13674
  store i64 2, ptr %69, align 8, !dbg !13674
  %70 = load ptr, ptr %2, align 8, !dbg !13675
  %71 = getelementptr inbounds [3 x %struct.lwan_value_t_], ptr %7, i64 0, i64 0, !dbg !13676
  %72 = call i64 @lwan_writev(ptr noundef %70, ptr noundef %71, i32 noundef 3), !dbg !13677
  %73 = load ptr, ptr %2, align 8, !dbg !13678
  %74 = getelementptr inbounds %struct.lwan_request_t_, ptr %73, i32 0, i32 8, !dbg !13678
  %75 = getelementptr inbounds %struct.lwan_response_t_, ptr %74, i32 0, i32 0, !dbg !13678
  %76 = load ptr, ptr %75, align 8, !dbg !13678
  %77 = call zeroext i1 @strbuf_reset_length(ptr noundef %76), !dbg !13678
  %78 = xor i1 %77, true, !dbg !13678
  %79 = xor i1 %78, true, !dbg !13678
  %80 = zext i1 %79 to i32, !dbg !13678
  %81 = sext i32 %80 to i64, !dbg !13678
  %82 = icmp ne i64 %81, 0, !dbg !13678
  br i1 %82, label %83, label %90, !dbg !13680

83:                                               ; preds = %49
  %84 = load ptr, ptr %2, align 8, !dbg !13681
  %85 = getelementptr inbounds %struct.lwan_request_t_, ptr %84, i32 0, i32 4, !dbg !13683
  %86 = load ptr, ptr %85, align 8, !dbg !13683
  %87 = getelementptr inbounds %struct.lwan_connection_t_, ptr %86, i32 0, i32 2, !dbg !13684
  %88 = load ptr, ptr %87, align 8, !dbg !13684
  %89 = call i32 @coro_yield(ptr noundef %88, i32 noundef 0), !dbg !13685
  br label %98, !dbg !13686

90:                                               ; preds = %49
  br label %91, !dbg !13678

91:                                               ; preds = %90, %48
  call void @llvm.dbg.label(metadata !13687), !dbg !13688
  %92 = load ptr, ptr %2, align 8, !dbg !13689
  %93 = getelementptr inbounds %struct.lwan_request_t_, ptr %92, i32 0, i32 4, !dbg !13690
  %94 = load ptr, ptr %93, align 8, !dbg !13690
  %95 = getelementptr inbounds %struct.lwan_connection_t_, ptr %94, i32 0, i32 2, !dbg !13691
  %96 = load ptr, ptr %95, align 8, !dbg !13691
  %97 = call i32 @coro_yield(ptr noundef %96, i32 noundef -1), !dbg !13692
  unreachable, !dbg !13693

98:                                               ; preds = %83, %36, %20
  ret void, !dbg !13694
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @log_request(ptr noundef %0, i32 noundef %1) #0 !dbg !13695 {
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca [46 x i8], align 16
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !13696, metadata !DIExpression()), !dbg !13697
  store i32 %1, ptr %4, align 4
  call void @llvm.dbg.declare(metadata ptr %4, metadata !13698, metadata !DIExpression()), !dbg !13699
  call void @llvm.dbg.declare(metadata ptr %5, metadata !13700, metadata !DIExpression()), !dbg !13701
  %6 = load ptr, ptr %3, align 8, !dbg !13702
  %7 = getelementptr inbounds [46 x i8], ptr %5, i64 0, i64 0, !dbg !13702
  %8 = call ptr @lwan_request_get_remote_address(ptr noundef %6, ptr noundef %7), !dbg !13702
  %9 = load ptr, ptr %3, align 8, !dbg !13702
  %10 = getelementptr inbounds %struct.lwan_request_t_, ptr %9, i32 0, i32 4, !dbg !13702
  %11 = load ptr, ptr %10, align 8, !dbg !13702
  %12 = getelementptr inbounds %struct.lwan_connection_t_, ptr %11, i32 0, i32 3, !dbg !13702
  %13 = load ptr, ptr %12, align 8, !dbg !13702
  %14 = getelementptr inbounds %struct.lwan_thread_t_, ptr %13, i32 0, i32 1, !dbg !13702
  %15 = getelementptr inbounds %struct.anon.27, ptr %14, i32 0, i32 0, !dbg !13702
  %16 = getelementptr inbounds [30 x i8], ptr %15, i64 0, i64 0, !dbg !13702
  %17 = load ptr, ptr %3, align 8, !dbg !13702
  %18 = call ptr @get_request_method(ptr noundef %17), !dbg !13702
  %19 = load ptr, ptr %3, align 8, !dbg !13702
  %20 = getelementptr inbounds %struct.lwan_request_t_, ptr %19, i32 0, i32 3, !dbg !13702
  %21 = getelementptr inbounds %struct.lwan_value_t_, ptr %20, i32 0, i32 0, !dbg !13702
  %22 = load ptr, ptr %21, align 8, !dbg !13702
  %23 = load ptr, ptr %3, align 8, !dbg !13702
  %24 = getelementptr inbounds %struct.lwan_request_t_, ptr %23, i32 0, i32 0, !dbg !13702
  %25 = load i32, ptr %24, align 8, !dbg !13702
  %26 = and i32 %25, 32, !dbg !13702
  %27 = icmp ne i32 %26, 0, !dbg !13702
  %28 = zext i1 %27 to i64, !dbg !13702
  %29 = select i1 %27, ptr @.str.33.126, ptr @.str.34.127, !dbg !13702
  %30 = load i32, ptr %4, align 4, !dbg !13702
  %31 = load ptr, ptr %3, align 8, !dbg !13702
  %32 = getelementptr inbounds %struct.lwan_request_t_, ptr %31, i32 0, i32 8, !dbg !13702
  %33 = getelementptr inbounds %struct.lwan_response_t_, ptr %32, i32 0, i32 1, !dbg !13702
  %34 = load ptr, ptr %33, align 8, !dbg !13702
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.3.95, i32 noundef 115, ptr noundef @__FUNCTION__.log_request, ptr noundef @.str.32.128, ptr noundef %8, ptr noundef %16, ptr noundef %18, ptr noundef %22, ptr noundef %29, i32 noundef %30, ptr noundef %34), !dbg !13702
  ret void, !dbg !13703
}

; Function Attrs: noinline nounwind optnone willreturn memory(read) uwtable
define dso_local ptr @lwan_http_status_as_string_with_code(i32 noundef %0) #16 !dbg !13704 {
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  store i32 %0, ptr %3, align 4
  call void @llvm.dbg.declare(metadata ptr %3, metadata !13707, metadata !DIExpression()), !dbg !13708
  %4 = load i32, ptr %3, align 4, !dbg !13709
  switch i32 %4, label %21 [
    i32 200, label %5
    i32 206, label %6
    i32 301, label %7
    i32 304, label %8
    i32 400, label %9
    i32 401, label %10
    i32 403, label %11
    i32 404, label %12
    i32 405, label %13
    i32 408, label %14
    i32 413, label %15
    i32 416, label %16
    i32 418, label %17
    i32 500, label %18
    i32 501, label %19
    i32 503, label %20
  ], !dbg !13710

5:                                                ; preds = %1
  store ptr @.str.11.261, ptr %2, align 8, !dbg !13711
  br label %22, !dbg !13711

6:                                                ; preds = %1
  store ptr @.str.12.262, ptr %2, align 8, !dbg !13713
  br label %22, !dbg !13713

7:                                                ; preds = %1
  store ptr @.str.13.263, ptr %2, align 8, !dbg !13714
  br label %22, !dbg !13714

8:                                                ; preds = %1
  store ptr @.str.14.264, ptr %2, align 8, !dbg !13715
  br label %22, !dbg !13715

9:                                                ; preds = %1
  store ptr @.str.15.265, ptr %2, align 8, !dbg !13716
  br label %22, !dbg !13716

10:                                               ; preds = %1
  store ptr @.str.16.266, ptr %2, align 8, !dbg !13717
  br label %22, !dbg !13717

11:                                               ; preds = %1
  store ptr @.str.17.267, ptr %2, align 8, !dbg !13718
  br label %22, !dbg !13718

12:                                               ; preds = %1
  store ptr @.str.18.268, ptr %2, align 8, !dbg !13719
  br label %22, !dbg !13719

13:                                               ; preds = %1
  store ptr @.str.19.269, ptr %2, align 8, !dbg !13720
  br label %22, !dbg !13720

14:                                               ; preds = %1
  store ptr @.str.20.270, ptr %2, align 8, !dbg !13721
  br label %22, !dbg !13721

15:                                               ; preds = %1
  store ptr @.str.21.271, ptr %2, align 8, !dbg !13722
  br label %22, !dbg !13722

16:                                               ; preds = %1
  store ptr @.str.22.272, ptr %2, align 8, !dbg !13723
  br label %22, !dbg !13723

17:                                               ; preds = %1
  store ptr @.str.23.273, ptr %2, align 8, !dbg !13724
  br label %22, !dbg !13724

18:                                               ; preds = %1
  store ptr @.str.24.274, ptr %2, align 8, !dbg !13725
  br label %22, !dbg !13725

19:                                               ; preds = %1
  store ptr @.str.25.275, ptr %2, align 8, !dbg !13726
  br label %22, !dbg !13726

20:                                               ; preds = %1
  store ptr @.str.26.276, ptr %2, align 8, !dbg !13727
  br label %22, !dbg !13727

21:                                               ; preds = %1
  store ptr @.str.27.277, ptr %2, align 8, !dbg !13728
  br label %22, !dbg !13728

22:                                               ; preds = %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5
  %23 = load ptr, ptr %2, align 8, !dbg !13729
  ret ptr %23, !dbg !13729
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @lwan_request_get_remote_address(ptr noundef %0, ptr noundef align 1 dereferenceable(46) %1) #0 !dbg !13730 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca %struct.sockaddr_storage, align 8
  %7 = alloca i32, align 4
  %8 = alloca %union.__SOCKADDR_ARG, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !13733, metadata !DIExpression()), !dbg !13734
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !13735, metadata !DIExpression()), !dbg !13736
  call void @llvm.dbg.declare(metadata ptr %6, metadata !13737, metadata !DIExpression()), !dbg !13743
  call void @llvm.memset.p0.i64(ptr align 8 %6, i8 0, i64 128, i1 false), !dbg !13743
  call void @llvm.dbg.declare(metadata ptr %7, metadata !13744, metadata !DIExpression()), !dbg !13746
  store i32 128, ptr %7, align 4, !dbg !13746
  %9 = load ptr, ptr %4, align 8, !dbg !13747
  %10 = getelementptr inbounds %struct.lwan_request_t_, ptr %9, i32 0, i32 1, !dbg !13747
  %11 = load i32, ptr %10, align 4, !dbg !13747
  store ptr %6, ptr %8, align 8, !dbg !13747
  %12 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %8, i32 0, i32 0, !dbg !13747
  %13 = load ptr, ptr %12, align 8, !dbg !13747
  %14 = call i32 @getpeername(i32 noundef %11, ptr %13, ptr noundef %7) #17, !dbg !13747
  %15 = icmp slt i32 %14, 0, !dbg !13747
  %16 = zext i1 %15 to i32, !dbg !13747
  %17 = sext i32 %16 to i64, !dbg !13747
  %18 = icmp ne i64 %17, 0, !dbg !13747
  br i1 %18, label %19, label %20, !dbg !13749

19:                                               ; preds = %2
  store ptr null, ptr %3, align 8, !dbg !13750
  br label %33, !dbg !13750

20:                                               ; preds = %2
  %21 = getelementptr inbounds %struct.sockaddr_storage, ptr %6, i32 0, i32 0, !dbg !13751
  %22 = load i16, ptr %21, align 8, !dbg !13751
  %23 = zext i16 %22 to i32, !dbg !13753
  %24 = icmp eq i32 %23, 2, !dbg !13754
  br i1 %24, label %25, label %29, !dbg !13755

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.sockaddr_in, ptr %6, i32 0, i32 2, !dbg !13756
  %27 = load ptr, ptr %5, align 8, !dbg !13757
  %28 = call ptr @inet_ntop(i32 noundef 2, ptr noundef %26, ptr noundef %27, i32 noundef 46) #17, !dbg !13758
  store ptr %28, ptr %3, align 8, !dbg !13759
  br label %33, !dbg !13759

29:                                               ; preds = %20
  %30 = getelementptr inbounds %struct.sockaddr_in6, ptr %6, i32 0, i32 3, !dbg !13760
  %31 = load ptr, ptr %5, align 8, !dbg !13761
  %32 = call ptr @inet_ntop(i32 noundef 10, ptr noundef %30, ptr noundef %31, i32 noundef 46) #17, !dbg !13762
  store ptr %32, ptr %3, align 8, !dbg !13763
  br label %33, !dbg !13763

33:                                               ; preds = %29, %25, %19
  %34 = load ptr, ptr %3, align 8, !dbg !13764
  ret ptr %34, !dbg !13764
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @get_request_method(ptr noundef %0) #0 !dbg !13765 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !13768, metadata !DIExpression()), !dbg !13769
  %4 = load ptr, ptr %3, align 8, !dbg !13770
  %5 = getelementptr inbounds %struct.lwan_request_t_, ptr %4, i32 0, i32 0, !dbg !13772
  %6 = load i32, ptr %5, align 8, !dbg !13772
  %7 = and i32 %6, 1, !dbg !13773
  %8 = icmp ne i32 %7, 0, !dbg !13773
  br i1 %8, label %9, label %10, !dbg !13774

9:                                                ; preds = %1
  store ptr @.str.35.129, ptr %2, align 8, !dbg !13775
  br label %25, !dbg !13775

10:                                               ; preds = %1
  %11 = load ptr, ptr %3, align 8, !dbg !13776
  %12 = getelementptr inbounds %struct.lwan_request_t_, ptr %11, i32 0, i32 0, !dbg !13778
  %13 = load i32, ptr %12, align 8, !dbg !13778
  %14 = and i32 %13, 2, !dbg !13779
  %15 = icmp ne i32 %14, 0, !dbg !13779
  br i1 %15, label %16, label %17, !dbg !13780

16:                                               ; preds = %10
  store ptr @.str.36.130, ptr %2, align 8, !dbg !13781
  br label %25, !dbg !13781

17:                                               ; preds = %10
  %18 = load ptr, ptr %3, align 8, !dbg !13782
  %19 = getelementptr inbounds %struct.lwan_request_t_, ptr %18, i32 0, i32 0, !dbg !13784
  %20 = load i32, ptr %19, align 8, !dbg !13784
  %21 = and i32 %20, 4, !dbg !13785
  %22 = icmp ne i32 %21, 0, !dbg !13785
  br i1 %22, label %23, label %24, !dbg !13786

23:                                               ; preds = %17
  store ptr @.str.37.131, ptr %2, align 8, !dbg !13787
  br label %25, !dbg !13787

24:                                               ; preds = %17
  store ptr @.str.38.132, ptr %2, align 8, !dbg !13788
  br label %25, !dbg !13788

25:                                               ; preds = %24, %23, %16, %9
  %26 = load ptr, ptr %2, align 8, !dbg !13789
  ret ptr %26, !dbg !13789
}

; Function Attrs: nounwind
declare i32 @getpeername(i32 noundef, ptr, ptr noundef) #2

; Function Attrs: nounwind
declare ptr @inet_ntop(i32 noundef, ptr noundef, ptr noundef, i32 noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @lwan_response_set_chunked(ptr noundef %0, i32 noundef %1) #0 !dbg !13790 {
  %3 = alloca i64, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca [25 x i8], align 16
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca ptr, align 8
  %16 = alloca i64, align 8
  %17 = alloca ptr, align 8
  %18 = alloca i64, align 8
  %19 = alloca ptr, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca ptr, align 8
  %23 = alloca i64, align 8
  %24 = alloca i1, align 1
  %25 = alloca ptr, align 8
  %26 = alloca i32, align 4
  %27 = alloca [4096 x i8], align 16
  %28 = alloca i64, align 8
  store ptr %0, ptr %25, align 8
  call void @llvm.dbg.declare(metadata ptr %25, metadata !13793, metadata !DIExpression()), !dbg !13794
  store i32 %1, ptr %26, align 4
  call void @llvm.dbg.declare(metadata ptr %26, metadata !13795, metadata !DIExpression()), !dbg !13796
  call void @llvm.dbg.declare(metadata ptr %27, metadata !13797, metadata !DIExpression()), !dbg !13798
  call void @llvm.dbg.declare(metadata ptr %28, metadata !13799, metadata !DIExpression()), !dbg !13800
  %29 = load ptr, ptr %25, align 8, !dbg !13801
  %30 = getelementptr inbounds %struct.lwan_request_t_, ptr %29, i32 0, i32 0, !dbg !13803
  %31 = load i32, ptr %30, align 8, !dbg !13803
  %32 = and i32 %31, 64, !dbg !13804
  %33 = icmp ne i32 %32, 0, !dbg !13804
  br i1 %33, label %34, label %35, !dbg !13805

34:                                               ; preds = %2
  store i1 false, ptr %24, align 1, !dbg !13806
  br label %506, !dbg !13806

35:                                               ; preds = %2
  %36 = load ptr, ptr %25, align 8, !dbg !13807
  %37 = getelementptr inbounds %struct.lwan_request_t_, ptr %36, i32 0, i32 0, !dbg !13808
  %38 = load i32, ptr %37, align 8, !dbg !13809
  %39 = or i32 %38, 128, !dbg !13809
  store i32 %39, ptr %37, align 8, !dbg !13809
  %40 = load ptr, ptr %25, align 8, !dbg !13810
  %41 = load i32, ptr %26, align 4, !dbg !13811
  %42 = getelementptr inbounds [4096 x i8], ptr %27, i64 0, i64 0, !dbg !13812
  store ptr %40, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !13329, metadata !DIExpression()), !dbg !13813
  store i32 %41, ptr %5, align 4
  call void @llvm.dbg.declare(metadata ptr %5, metadata !13335, metadata !DIExpression()), !dbg !13815
  store ptr %42, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !13337, metadata !DIExpression()), !dbg !13816
  store i64 4096, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !13339, metadata !DIExpression()), !dbg !13817
  call void @llvm.dbg.declare(metadata ptr %8, metadata !13341, metadata !DIExpression()), !dbg !13818
  call void @llvm.dbg.declare(metadata ptr %9, metadata !13343, metadata !DIExpression()), !dbg !13819
  %43 = load ptr, ptr %6, align 8, !dbg !13820
  %44 = load i64, ptr %7, align 8, !dbg !13821
  %45 = getelementptr inbounds i8, ptr %43, i64 %44, !dbg !13822
  store ptr %45, ptr %9, align 8, !dbg !13819
  call void @llvm.dbg.declare(metadata ptr %10, metadata !13348, metadata !DIExpression()), !dbg !13823
  call void @llvm.dbg.declare(metadata ptr %11, metadata !13350, metadata !DIExpression()), !dbg !13824
  store i8 0, ptr %11, align 1, !dbg !13824
  call void @llvm.dbg.declare(metadata ptr %12, metadata !13352, metadata !DIExpression()), !dbg !13825
  store i8 0, ptr %12, align 1, !dbg !13825
  %46 = load ptr, ptr %6, align 8, !dbg !13826
  store ptr %46, ptr %8, align 8, !dbg !13827
  %47 = load ptr, ptr %4, align 8, !dbg !13828
  %48 = load i32, ptr %47, align 8, !dbg !13829
  %49 = and i32 %48, 32, !dbg !13830
  %50 = icmp ne i32 %49, 0, !dbg !13830
  br i1 %50, label %51, label %62, !dbg !13831

51:                                               ; preds = %35
  %52 = load ptr, ptr %8, align 8, !dbg !13832
  %53 = getelementptr inbounds i8, ptr %52, i64 9, !dbg !13832
  %54 = load ptr, ptr %9, align 8, !dbg !13832
  %55 = icmp uge ptr %53, %54, !dbg !13832
  %56 = zext i1 %55 to i32, !dbg !13832
  %57 = sext i32 %56 to i64, !dbg !13832
  br i1 %55, label %58, label %59, !dbg !13833

58:                                               ; preds = %51
  store i64 0, ptr %3, align 8, !dbg !13832
  br label %488, !dbg !13832

59:                                               ; preds = %51
  %60 = load ptr, ptr %8, align 8, !dbg !13833
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %60, ptr align 1 @.str.10.110, i64 9, i1 false), !dbg !13833
  %61 = getelementptr inbounds i8, ptr %60, i64 9, !dbg !13833
  store ptr %61, ptr %8, align 8, !dbg !13833
  br label %73, !dbg !13833

62:                                               ; preds = %35
  %63 = load ptr, ptr %8, align 8, !dbg !13834
  %64 = getelementptr inbounds i8, ptr %63, i64 9, !dbg !13834
  %65 = load ptr, ptr %9, align 8, !dbg !13834
  %66 = icmp uge ptr %64, %65, !dbg !13834
  %67 = zext i1 %66 to i32, !dbg !13834
  %68 = sext i32 %67 to i64, !dbg !13834
  br i1 %66, label %69, label %70, !dbg !13835

69:                                               ; preds = %62
  store i64 0, ptr %3, align 8, !dbg !13834
  br label %488, !dbg !13834

70:                                               ; preds = %62
  %71 = load ptr, ptr %8, align 8, !dbg !13835
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %71, ptr align 1 @.str.11.111, i64 9, i1 false), !dbg !13835
  %72 = getelementptr inbounds i8, ptr %71, i64 9, !dbg !13835
  store ptr %72, ptr %8, align 8, !dbg !13835
  br label %73

73:                                               ; preds = %70, %59
  call void @llvm.dbg.declare(metadata ptr %13, metadata !13369, metadata !DIExpression()), !dbg !13836
  %74 = load i32, ptr %5, align 4, !dbg !13836
  %75 = call ptr @lwan_http_status_as_string_with_code(i32 noundef %74) #20, !dbg !13836
  %76 = call i64 @strlen(ptr noundef %75) #20, !dbg !13836
  store i64 %76, ptr %13, align 8, !dbg !13836
  %77 = load ptr, ptr %8, align 8, !dbg !13837
  %78 = load i64, ptr %13, align 8, !dbg !13837
  %79 = getelementptr inbounds i8, ptr %77, i64 %78, !dbg !13837
  %80 = load ptr, ptr %9, align 8, !dbg !13837
  %81 = icmp uge ptr %79, %80, !dbg !13837
  %82 = zext i1 %81 to i32, !dbg !13837
  %83 = sext i32 %82 to i64, !dbg !13837
  br i1 %81, label %84, label %85, !dbg !13838

84:                                               ; preds = %73
  store i64 0, ptr %3, align 8, !dbg !13837
  br label %488, !dbg !13837

85:                                               ; preds = %73
  %86 = load ptr, ptr %8, align 8, !dbg !13838
  %87 = load i32, ptr %5, align 4, !dbg !13838
  %88 = call ptr @lwan_http_status_as_string_with_code(i32 noundef %87) #20, !dbg !13838
  %89 = load i64, ptr %13, align 8, !dbg !13838
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %86, ptr align 1 %88, i64 %89, i1 false), !dbg !13838
  %90 = getelementptr inbounds i8, ptr %86, i64 %89, !dbg !13838
  store ptr %90, ptr %8, align 8, !dbg !13838
  %91 = load ptr, ptr %4, align 8, !dbg !13839
  %92 = load i32, ptr %91, align 8, !dbg !13840
  %93 = and i32 %92, 128, !dbg !13841
  %94 = icmp ne i32 %93, 0, !dbg !13841
  br i1 %94, label %95, label %106, !dbg !13842

95:                                               ; preds = %85
  %96 = load ptr, ptr %8, align 8, !dbg !13843
  %97 = getelementptr inbounds i8, ptr %96, i64 28, !dbg !13843
  %98 = load ptr, ptr %9, align 8, !dbg !13843
  %99 = icmp uge ptr %97, %98, !dbg !13843
  %100 = zext i1 %99 to i32, !dbg !13843
  %101 = sext i32 %100 to i64, !dbg !13843
  br i1 %99, label %102, label %103, !dbg !13844

102:                                              ; preds = %95
  store i64 0, ptr %3, align 8, !dbg !13843
  br label %488, !dbg !13843

103:                                              ; preds = %95
  %104 = load ptr, ptr %8, align 8, !dbg !13844
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %104, ptr align 1 @.str.12.112, i64 28, i1 false), !dbg !13844
  %105 = getelementptr inbounds i8, ptr %104, i64 28, !dbg !13844
  store ptr %105, ptr %8, align 8, !dbg !13844
  br label %188, !dbg !13845

106:                                              ; preds = %85
  %107 = load ptr, ptr %4, align 8, !dbg !13846
  %108 = load i32, ptr %107, align 8, !dbg !13847
  %109 = and i32 %108, 256, !dbg !13848
  %110 = icmp ne i32 %109, 0, !dbg !13848
  br i1 %110, label %111, label %112, !dbg !13849

111:                                              ; preds = %106
  br label %187, !dbg !13850

112:                                              ; preds = %106
  %113 = load ptr, ptr %8, align 8, !dbg !13851
  %114 = getelementptr inbounds i8, ptr %113, i64 18, !dbg !13851
  %115 = load ptr, ptr %9, align 8, !dbg !13851
  %116 = icmp uge ptr %114, %115, !dbg !13851
  %117 = zext i1 %116 to i32, !dbg !13851
  %118 = sext i32 %117 to i64, !dbg !13851
  br i1 %116, label %119, label %120, !dbg !13852

119:                                              ; preds = %112
  store i64 0, ptr %3, align 8, !dbg !13851
  br label %488, !dbg !13851

120:                                              ; preds = %112
  %121 = load ptr, ptr %8, align 8, !dbg !13852
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %121, ptr align 1 @.str.13.113, i64 18, i1 false), !dbg !13852
  %122 = getelementptr inbounds i8, ptr %121, i64 18, !dbg !13852
  store ptr %122, ptr %8, align 8, !dbg !13852
  %123 = load ptr, ptr %4, align 8, !dbg !13853
  %124 = getelementptr inbounds %struct.lwan_request_t_, ptr %123, i32 0, i32 8, !dbg !13854
  %125 = getelementptr inbounds %struct.lwan_response_t_, ptr %124, i32 0, i32 4, !dbg !13855
  %126 = load ptr, ptr %125, align 8, !dbg !13856
  %127 = icmp ne ptr %126, null, !dbg !13853
  br i1 %127, label %128, label %156, !dbg !13857

128:                                              ; preds = %120
  call void @llvm.dbg.declare(metadata ptr %14, metadata !13405, metadata !DIExpression()), !dbg !13858
  call void @llvm.dbg.declare(metadata ptr %15, metadata !13408, metadata !DIExpression()), !dbg !13858
  %129 = load ptr, ptr %4, align 8, !dbg !13858
  %130 = getelementptr inbounds %struct.lwan_request_t_, ptr %129, i32 0, i32 8, !dbg !13858
  %131 = getelementptr inbounds %struct.lwan_response_t_, ptr %130, i32 0, i32 2, !dbg !13858
  %132 = load i64, ptr %131, align 8, !dbg !13858
  %133 = call ptr @uint_to_string(i64 noundef %132, ptr noundef %10, ptr noundef %14) #17, !dbg !13858
  store ptr %133, ptr %15, align 8, !dbg !13858
  %134 = load ptr, ptr %8, align 8, !dbg !13859
  %135 = load i64, ptr %14, align 8, !dbg !13859
  %136 = getelementptr inbounds i8, ptr %134, i64 %135, !dbg !13859
  %137 = load ptr, ptr %9, align 8, !dbg !13859
  %138 = icmp uge ptr %136, %137, !dbg !13859
  %139 = zext i1 %138 to i32, !dbg !13859
  %140 = sext i32 %139 to i64, !dbg !13859
  br i1 %138, label %141, label %142, !dbg !13858

141:                                              ; preds = %128
  store i64 0, ptr %3, align 8, !dbg !13859
  br label %488, !dbg !13859

142:                                              ; preds = %128
  %143 = load ptr, ptr %8, align 8, !dbg !13860
  %144 = load i64, ptr %14, align 8, !dbg !13860
  %145 = getelementptr inbounds i8, ptr %143, i64 %144, !dbg !13860
  %146 = load ptr, ptr %9, align 8, !dbg !13860
  %147 = icmp uge ptr %145, %146, !dbg !13860
  %148 = zext i1 %147 to i32, !dbg !13860
  %149 = sext i32 %148 to i64, !dbg !13860
  br i1 %147, label %150, label %151, !dbg !13861

150:                                              ; preds = %142
  store i64 0, ptr %3, align 8, !dbg !13860
  br label %488, !dbg !13860

151:                                              ; preds = %142
  %152 = load ptr, ptr %8, align 8, !dbg !13861
  %153 = load ptr, ptr %15, align 8, !dbg !13861
  %154 = load i64, ptr %14, align 8, !dbg !13861
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %152, ptr align 1 %153, i64 %154, i1 false), !dbg !13861
  %155 = getelementptr inbounds i8, ptr %152, i64 %154, !dbg !13861
  store ptr %155, ptr %8, align 8, !dbg !13861
  br label %186, !dbg !13858

156:                                              ; preds = %120
  call void @llvm.dbg.declare(metadata ptr %16, metadata !13415, metadata !DIExpression()), !dbg !13862
  call void @llvm.dbg.declare(metadata ptr %17, metadata !13418, metadata !DIExpression()), !dbg !13862
  %157 = load ptr, ptr %4, align 8, !dbg !13862
  %158 = getelementptr inbounds %struct.lwan_request_t_, ptr %157, i32 0, i32 8, !dbg !13862
  %159 = load ptr, ptr %158, align 8, !dbg !13862
  %160 = getelementptr inbounds %struct.strbuf_t_, ptr %159, i32 0, i32 1, !dbg !13862
  %161 = getelementptr inbounds %struct.anon.3, ptr %160, i32 0, i32 1, !dbg !13862
  %162 = load i64, ptr %161, align 8, !dbg !13862
  %163 = call ptr @uint_to_string(i64 noundef %162, ptr noundef %10, ptr noundef %16) #17, !dbg !13862
  store ptr %163, ptr %17, align 8, !dbg !13862
  %164 = load ptr, ptr %8, align 8, !dbg !13863
  %165 = load i64, ptr %16, align 8, !dbg !13863
  %166 = getelementptr inbounds i8, ptr %164, i64 %165, !dbg !13863
  %167 = load ptr, ptr %9, align 8, !dbg !13863
  %168 = icmp uge ptr %166, %167, !dbg !13863
  %169 = zext i1 %168 to i32, !dbg !13863
  %170 = sext i32 %169 to i64, !dbg !13863
  br i1 %168, label %171, label %172, !dbg !13862

171:                                              ; preds = %156
  store i64 0, ptr %3, align 8, !dbg !13863
  br label %488, !dbg !13863

172:                                              ; preds = %156
  %173 = load ptr, ptr %8, align 8, !dbg !13864
  %174 = load i64, ptr %16, align 8, !dbg !13864
  %175 = getelementptr inbounds i8, ptr %173, i64 %174, !dbg !13864
  %176 = load ptr, ptr %9, align 8, !dbg !13864
  %177 = icmp uge ptr %175, %176, !dbg !13864
  %178 = zext i1 %177 to i32, !dbg !13864
  %179 = sext i32 %178 to i64, !dbg !13864
  br i1 %177, label %180, label %181, !dbg !13865

180:                                              ; preds = %172
  store i64 0, ptr %3, align 8, !dbg !13864
  br label %488, !dbg !13864

181:                                              ; preds = %172
  %182 = load ptr, ptr %8, align 8, !dbg !13865
  %183 = load ptr, ptr %17, align 8, !dbg !13865
  %184 = load i64, ptr %16, align 8, !dbg !13865
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %182, ptr align 1 %183, i64 %184, i1 false), !dbg !13865
  %185 = getelementptr inbounds i8, ptr %182, i64 %184, !dbg !13865
  store ptr %185, ptr %8, align 8, !dbg !13865
  br label %186

186:                                              ; preds = %181, %151
  br label %187

187:                                              ; preds = %186, %111
  br label %188

188:                                              ; preds = %187, %103
  %189 = load ptr, ptr %8, align 8, !dbg !13866
  %190 = getelementptr inbounds i8, ptr %189, i64 16, !dbg !13866
  %191 = load ptr, ptr %9, align 8, !dbg !13866
  %192 = icmp uge ptr %190, %191, !dbg !13866
  %193 = zext i1 %192 to i32, !dbg !13866
  %194 = sext i32 %193 to i64, !dbg !13866
  br i1 %192, label %195, label %196, !dbg !13867

195:                                              ; preds = %188
  store i64 0, ptr %3, align 8, !dbg !13866
  br label %488, !dbg !13866

196:                                              ; preds = %188
  %197 = load ptr, ptr %8, align 8, !dbg !13867
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %197, ptr align 1 @.str.14.114, i64 16, i1 false), !dbg !13867
  %198 = getelementptr inbounds i8, ptr %197, i64 16, !dbg !13867
  store ptr %198, ptr %8, align 8, !dbg !13867
  call void @llvm.dbg.declare(metadata ptr %18, metadata !13429, metadata !DIExpression()), !dbg !13868
  %199 = load ptr, ptr %4, align 8, !dbg !13868
  %200 = getelementptr inbounds %struct.lwan_request_t_, ptr %199, i32 0, i32 8, !dbg !13868
  %201 = getelementptr inbounds %struct.lwan_response_t_, ptr %200, i32 0, i32 1, !dbg !13868
  %202 = load ptr, ptr %201, align 8, !dbg !13868
  %203 = call i64 @strlen(ptr noundef %202) #20, !dbg !13868
  store i64 %203, ptr %18, align 8, !dbg !13868
  %204 = load ptr, ptr %8, align 8, !dbg !13869
  %205 = load i64, ptr %18, align 8, !dbg !13869
  %206 = getelementptr inbounds i8, ptr %204, i64 %205, !dbg !13869
  %207 = load ptr, ptr %9, align 8, !dbg !13869
  %208 = icmp uge ptr %206, %207, !dbg !13869
  %209 = zext i1 %208 to i32, !dbg !13869
  %210 = sext i32 %209 to i64, !dbg !13869
  br i1 %208, label %211, label %212, !dbg !13870

211:                                              ; preds = %196
  store i64 0, ptr %3, align 8, !dbg !13869
  br label %488, !dbg !13869

212:                                              ; preds = %196
  %213 = load ptr, ptr %8, align 8, !dbg !13870
  %214 = load ptr, ptr %4, align 8, !dbg !13870
  %215 = getelementptr inbounds %struct.lwan_request_t_, ptr %214, i32 0, i32 8, !dbg !13870
  %216 = getelementptr inbounds %struct.lwan_response_t_, ptr %215, i32 0, i32 1, !dbg !13870
  %217 = load ptr, ptr %216, align 8, !dbg !13870
  %218 = load i64, ptr %18, align 8, !dbg !13870
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %213, ptr align 1 %217, i64 %218, i1 false), !dbg !13870
  %219 = getelementptr inbounds i8, ptr %213, i64 %218, !dbg !13870
  store ptr %219, ptr %8, align 8, !dbg !13870
  %220 = load ptr, ptr %4, align 8, !dbg !13871
  %221 = getelementptr inbounds %struct.lwan_request_t_, ptr %220, i32 0, i32 4, !dbg !13872
  %222 = load ptr, ptr %221, align 8, !dbg !13872
  %223 = load i32, ptr %222, align 8, !dbg !13873
  %224 = and i32 %223, 1, !dbg !13874
  %225 = icmp ne i32 %224, 0, !dbg !13874
  br i1 %225, label %226, label %237, !dbg !13875

226:                                              ; preds = %212
  %227 = load ptr, ptr %8, align 8, !dbg !13876
  %228 = getelementptr inbounds i8, ptr %227, i64 24, !dbg !13876
  %229 = load ptr, ptr %9, align 8, !dbg !13876
  %230 = icmp uge ptr %228, %229, !dbg !13876
  %231 = zext i1 %230 to i32, !dbg !13876
  %232 = sext i32 %231 to i64, !dbg !13876
  br i1 %230, label %233, label %234, !dbg !13877

233:                                              ; preds = %226
  store i64 0, ptr %3, align 8, !dbg !13876
  br label %488, !dbg !13876

234:                                              ; preds = %226
  %235 = load ptr, ptr %8, align 8, !dbg !13877
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %235, ptr align 1 @.str.15.115, i64 24, i1 false), !dbg !13877
  %236 = getelementptr inbounds i8, ptr %235, i64 24, !dbg !13877
  store ptr %236, ptr %8, align 8, !dbg !13877
  br label %248, !dbg !13877

237:                                              ; preds = %212
  %238 = load ptr, ptr %8, align 8, !dbg !13878
  %239 = getelementptr inbounds i8, ptr %238, i64 19, !dbg !13878
  %240 = load ptr, ptr %9, align 8, !dbg !13878
  %241 = icmp uge ptr %239, %240, !dbg !13878
  %242 = zext i1 %241 to i32, !dbg !13878
  %243 = sext i32 %242 to i64, !dbg !13878
  br i1 %241, label %244, label %245, !dbg !13879

244:                                              ; preds = %237
  store i64 0, ptr %3, align 8, !dbg !13878
  br label %488, !dbg !13878

245:                                              ; preds = %237
  %246 = load ptr, ptr %8, align 8, !dbg !13879
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %246, ptr align 1 @.str.16.116, i64 19, i1 false), !dbg !13879
  %247 = getelementptr inbounds i8, ptr %246, i64 19, !dbg !13879
  store ptr %247, ptr %8, align 8, !dbg !13879
  br label %248

248:                                              ; preds = %245, %234
  %249 = load i32, ptr %5, align 4, !dbg !13880
  %250 = icmp ult i32 %249, 400, !dbg !13881
  br i1 %250, label %251, label %350, !dbg !13882

251:                                              ; preds = %248
  %252 = load ptr, ptr %4, align 8, !dbg !13883
  %253 = getelementptr inbounds %struct.lwan_request_t_, ptr %252, i32 0, i32 8, !dbg !13884
  %254 = getelementptr inbounds %struct.lwan_response_t_, ptr %253, i32 0, i32 3, !dbg !13885
  %255 = load ptr, ptr %254, align 8, !dbg !13885
  %256 = icmp ne ptr %255, null, !dbg !13883
  br i1 %256, label %257, label %350, !dbg !13886

257:                                              ; preds = %251
  call void @llvm.dbg.declare(metadata ptr %19, metadata !13458, metadata !DIExpression()), !dbg !13887
  %258 = load ptr, ptr %4, align 8, !dbg !13888
  %259 = getelementptr inbounds %struct.lwan_request_t_, ptr %258, i32 0, i32 8, !dbg !13889
  %260 = getelementptr inbounds %struct.lwan_response_t_, ptr %259, i32 0, i32 3, !dbg !13890
  %261 = load ptr, ptr %260, align 8, !dbg !13890
  store ptr %261, ptr %19, align 8, !dbg !13891
  br label %262, !dbg !13892

262:                                              ; preds = %346, %257
  %263 = load ptr, ptr %19, align 8, !dbg !13893
  %264 = load ptr, ptr %263, align 8, !dbg !13894
  %265 = icmp ne ptr %264, null, !dbg !13895
  br i1 %265, label %266, label %349, !dbg !13895

266:                                              ; preds = %262
  %267 = load ptr, ptr %19, align 8, !dbg !13896
  %268 = load ptr, ptr %267, align 8, !dbg !13896
  %269 = call i32 @strcmp(ptr noundef %268, ptr noundef @.str.17.117) #20, !dbg !13896
  %270 = icmp ne i32 %269, 0, !dbg !13896
  %271 = xor i1 %270, true, !dbg !13896
  %272 = zext i1 %271 to i32, !dbg !13896
  %273 = sext i32 %272 to i64, !dbg !13896
  br i1 %271, label %274, label %275, !dbg !13897

274:                                              ; preds = %266
  br label %346, !dbg !13898

275:                                              ; preds = %266
  %276 = load ptr, ptr %19, align 8, !dbg !13899
  %277 = load ptr, ptr %276, align 8, !dbg !13899
  %278 = call i32 @strcmp(ptr noundef %277, ptr noundef @.str.18.118) #20, !dbg !13899
  %279 = icmp ne i32 %278, 0, !dbg !13899
  %280 = xor i1 %279, true, !dbg !13899
  %281 = zext i1 %280 to i32, !dbg !13899
  %282 = sext i32 %281 to i64, !dbg !13899
  br i1 %280, label %283, label %284, !dbg !13900

283:                                              ; preds = %275
  store i8 1, ptr %11, align 1, !dbg !13901
  br label %284, !dbg !13902

284:                                              ; preds = %283, %275
  %285 = load ptr, ptr %19, align 8, !dbg !13903
  %286 = load ptr, ptr %285, align 8, !dbg !13903
  %287 = call i32 @strcmp(ptr noundef %286, ptr noundef @.str.19.119) #20, !dbg !13903
  %288 = icmp ne i32 %287, 0, !dbg !13903
  %289 = xor i1 %288, true, !dbg !13903
  %290 = zext i1 %289 to i32, !dbg !13903
  %291 = sext i32 %290 to i64, !dbg !13903
  br i1 %289, label %292, label %293, !dbg !13904

292:                                              ; preds = %284
  store i8 1, ptr %12, align 1, !dbg !13905
  br label %293, !dbg !13906

293:                                              ; preds = %292, %284
  %294 = load ptr, ptr %8, align 8, !dbg !13907
  %295 = getelementptr inbounds i8, ptr %294, i64 4, !dbg !13907
  %296 = load ptr, ptr %9, align 8, !dbg !13907
  %297 = icmp uge ptr %295, %296, !dbg !13907
  %298 = zext i1 %297 to i32, !dbg !13907
  %299 = sext i32 %298 to i64, !dbg !13907
  br i1 %297, label %300, label %301, !dbg !13908

300:                                              ; preds = %293
  store i64 0, ptr %3, align 8, !dbg !13907
  br label %488, !dbg !13907

301:                                              ; preds = %293
  %302 = load ptr, ptr %8, align 8, !dbg !13909
  %303 = getelementptr inbounds i8, ptr %302, i32 1, !dbg !13909
  store ptr %303, ptr %8, align 8, !dbg !13909
  store i8 13, ptr %302, align 1, !dbg !13909
  %304 = load ptr, ptr %8, align 8, !dbg !13910
  %305 = getelementptr inbounds i8, ptr %304, i32 1, !dbg !13910
  store ptr %305, ptr %8, align 8, !dbg !13910
  store i8 10, ptr %304, align 1, !dbg !13910
  call void @llvm.dbg.declare(metadata ptr %20, metadata !13491, metadata !DIExpression()), !dbg !13911
  %306 = load ptr, ptr %19, align 8, !dbg !13911
  %307 = load ptr, ptr %306, align 8, !dbg !13911
  %308 = call i64 @strlen(ptr noundef %307) #20, !dbg !13911
  store i64 %308, ptr %20, align 8, !dbg !13911
  %309 = load ptr, ptr %8, align 8, !dbg !13912
  %310 = load i64, ptr %20, align 8, !dbg !13912
  %311 = getelementptr inbounds i8, ptr %309, i64 %310, !dbg !13912
  %312 = load ptr, ptr %9, align 8, !dbg !13912
  %313 = icmp uge ptr %311, %312, !dbg !13912
  %314 = zext i1 %313 to i32, !dbg !13912
  %315 = sext i32 %314 to i64, !dbg !13912
  br i1 %313, label %316, label %317, !dbg !13913

316:                                              ; preds = %301
  store i64 0, ptr %3, align 8, !dbg !13912
  br label %488, !dbg !13912

317:                                              ; preds = %301
  %318 = load ptr, ptr %8, align 8, !dbg !13913
  %319 = load ptr, ptr %19, align 8, !dbg !13913
  %320 = load ptr, ptr %319, align 8, !dbg !13913
  %321 = load i64, ptr %20, align 8, !dbg !13913
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %318, ptr align 1 %320, i64 %321, i1 false), !dbg !13913
  %322 = getelementptr inbounds i8, ptr %318, i64 %321, !dbg !13913
  store ptr %322, ptr %8, align 8, !dbg !13913
  %323 = load ptr, ptr %8, align 8, !dbg !13914
  %324 = getelementptr inbounds i8, ptr %323, i32 1, !dbg !13914
  store ptr %324, ptr %8, align 8, !dbg !13914
  store i8 58, ptr %323, align 1, !dbg !13914
  %325 = load ptr, ptr %8, align 8, !dbg !13915
  %326 = getelementptr inbounds i8, ptr %325, i32 1, !dbg !13915
  store ptr %326, ptr %8, align 8, !dbg !13915
  store i8 32, ptr %325, align 1, !dbg !13915
  call void @llvm.dbg.declare(metadata ptr %21, metadata !13500, metadata !DIExpression()), !dbg !13916
  %327 = load ptr, ptr %19, align 8, !dbg !13916
  %328 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %327, i32 0, i32 1, !dbg !13916
  %329 = load ptr, ptr %328, align 8, !dbg !13916
  %330 = call i64 @strlen(ptr noundef %329) #20, !dbg !13916
  store i64 %330, ptr %21, align 8, !dbg !13916
  %331 = load ptr, ptr %8, align 8, !dbg !13917
  %332 = load i64, ptr %21, align 8, !dbg !13917
  %333 = getelementptr inbounds i8, ptr %331, i64 %332, !dbg !13917
  %334 = load ptr, ptr %9, align 8, !dbg !13917
  %335 = icmp uge ptr %333, %334, !dbg !13917
  %336 = zext i1 %335 to i32, !dbg !13917
  %337 = sext i32 %336 to i64, !dbg !13917
  br i1 %335, label %338, label %339, !dbg !13918

338:                                              ; preds = %317
  store i64 0, ptr %3, align 8, !dbg !13917
  br label %488, !dbg !13917

339:                                              ; preds = %317
  %340 = load ptr, ptr %8, align 8, !dbg !13918
  %341 = load ptr, ptr %19, align 8, !dbg !13918
  %342 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %341, i32 0, i32 1, !dbg !13918
  %343 = load ptr, ptr %342, align 8, !dbg !13918
  %344 = load i64, ptr %21, align 8, !dbg !13918
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %340, ptr align 1 %343, i64 %344, i1 false), !dbg !13918
  %345 = getelementptr inbounds i8, ptr %340, i64 %344, !dbg !13918
  store ptr %345, ptr %8, align 8, !dbg !13918
  br label %346, !dbg !13919

346:                                              ; preds = %339, %274
  %347 = load ptr, ptr %19, align 8, !dbg !13920
  %348 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %347, i32 1, !dbg !13920
  store ptr %348, ptr %19, align 8, !dbg !13920
  br label %262, !dbg !13921, !llvm.loop !13922

349:                                              ; preds = %262
  br label %402, !dbg !13924

350:                                              ; preds = %251, %248
  %351 = load i32, ptr %5, align 4, !dbg !13925
  %352 = icmp eq i32 %351, 401, !dbg !13926
  br i1 %352, label %353, label %401, !dbg !13927

353:                                              ; preds = %350
  call void @llvm.dbg.declare(metadata ptr %22, metadata !13517, metadata !DIExpression()), !dbg !13928
  %354 = load ptr, ptr %4, align 8, !dbg !13929
  %355 = getelementptr inbounds %struct.lwan_request_t_, ptr %354, i32 0, i32 8, !dbg !13930
  %356 = getelementptr inbounds %struct.lwan_response_t_, ptr %355, i32 0, i32 3, !dbg !13931
  %357 = load ptr, ptr %356, align 8, !dbg !13931
  store ptr %357, ptr %22, align 8, !dbg !13932
  br label %358, !dbg !13933

358:                                              ; preds = %397, %353
  %359 = load ptr, ptr %22, align 8, !dbg !13934
  %360 = load ptr, ptr %359, align 8, !dbg !13935
  %361 = icmp ne ptr %360, null, !dbg !13936
  br i1 %361, label %362, label %400, !dbg !13936

362:                                              ; preds = %358
  %363 = load ptr, ptr %22, align 8, !dbg !13937
  %364 = load ptr, ptr %363, align 8, !dbg !13938
  %365 = call i32 @strcmp(ptr noundef %364, ptr noundef @.str.20.120) #20, !dbg !13939
  %366 = icmp ne i32 %365, 0, !dbg !13939
  br i1 %366, label %397, label %367, !dbg !13940

367:                                              ; preds = %362
  %368 = load ptr, ptr %8, align 8, !dbg !13941
  %369 = getelementptr inbounds i8, ptr %368, i64 20, !dbg !13941
  %370 = load ptr, ptr %9, align 8, !dbg !13941
  %371 = icmp uge ptr %369, %370, !dbg !13941
  %372 = zext i1 %371 to i32, !dbg !13941
  %373 = sext i32 %372 to i64, !dbg !13941
  br i1 %371, label %374, label %375, !dbg !13942

374:                                              ; preds = %367
  store i64 0, ptr %3, align 8, !dbg !13941
  br label %488, !dbg !13941

375:                                              ; preds = %367
  %376 = load ptr, ptr %8, align 8, !dbg !13942
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %376, ptr align 1 @.str.21.121, i64 20, i1 false), !dbg !13942
  %377 = getelementptr inbounds i8, ptr %376, i64 20, !dbg !13942
  store ptr %377, ptr %8, align 8, !dbg !13942
  call void @llvm.dbg.declare(metadata ptr %23, metadata !13541, metadata !DIExpression()), !dbg !13943
  %378 = load ptr, ptr %22, align 8, !dbg !13943
  %379 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %378, i32 0, i32 1, !dbg !13943
  %380 = load ptr, ptr %379, align 8, !dbg !13943
  %381 = call i64 @strlen(ptr noundef %380) #20, !dbg !13943
  store i64 %381, ptr %23, align 8, !dbg !13943
  %382 = load ptr, ptr %8, align 8, !dbg !13944
  %383 = load i64, ptr %23, align 8, !dbg !13944
  %384 = getelementptr inbounds i8, ptr %382, i64 %383, !dbg !13944
  %385 = load ptr, ptr %9, align 8, !dbg !13944
  %386 = icmp uge ptr %384, %385, !dbg !13944
  %387 = zext i1 %386 to i32, !dbg !13944
  %388 = sext i32 %387 to i64, !dbg !13944
  br i1 %386, label %389, label %390, !dbg !13945

389:                                              ; preds = %375
  store i64 0, ptr %3, align 8, !dbg !13944
  br label %488, !dbg !13944

390:                                              ; preds = %375
  %391 = load ptr, ptr %8, align 8, !dbg !13945
  %392 = load ptr, ptr %22, align 8, !dbg !13945
  %393 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %392, i32 0, i32 1, !dbg !13945
  %394 = load ptr, ptr %393, align 8, !dbg !13945
  %395 = load i64, ptr %23, align 8, !dbg !13945
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %391, ptr align 1 %394, i64 %395, i1 false), !dbg !13945
  %396 = getelementptr inbounds i8, ptr %391, i64 %395, !dbg !13945
  store ptr %396, ptr %8, align 8, !dbg !13945
  br label %400, !dbg !13946

397:                                              ; preds = %362
  %398 = load ptr, ptr %22, align 8, !dbg !13947
  %399 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %398, i32 1, !dbg !13947
  store ptr %399, ptr %22, align 8, !dbg !13947
  br label %358, !dbg !13948, !llvm.loop !13949

400:                                              ; preds = %390, %358
  br label %401, !dbg !13951

401:                                              ; preds = %400, %350
  br label %402

402:                                              ; preds = %401, %349
  %403 = load i8, ptr %11, align 1, !dbg !13952
  %404 = trunc i8 %403 to i1, !dbg !13952
  %405 = xor i1 %404, true, !dbg !13952
  %406 = xor i1 %404, true, !dbg !13952
  %407 = zext i1 %406 to i32, !dbg !13952
  %408 = sext i32 %407 to i64, !dbg !13952
  br i1 %406, label %409, label %436, !dbg !13953

409:                                              ; preds = %402
  %410 = load ptr, ptr %8, align 8, !dbg !13954
  %411 = getelementptr inbounds i8, ptr %410, i64 8, !dbg !13954
  %412 = load ptr, ptr %9, align 8, !dbg !13954
  %413 = icmp uge ptr %411, %412, !dbg !13954
  %414 = zext i1 %413 to i32, !dbg !13954
  %415 = sext i32 %414 to i64, !dbg !13954
  br i1 %413, label %416, label %417, !dbg !13955

416:                                              ; preds = %409
  store i64 0, ptr %3, align 8, !dbg !13954
  br label %488, !dbg !13954

417:                                              ; preds = %409
  %418 = load ptr, ptr %8, align 8, !dbg !13955
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %418, ptr align 1 @.str.22.122, i64 8, i1 false), !dbg !13955
  %419 = getelementptr inbounds i8, ptr %418, i64 8, !dbg !13955
  store ptr %419, ptr %8, align 8, !dbg !13955
  %420 = load ptr, ptr %8, align 8, !dbg !13956
  %421 = getelementptr inbounds i8, ptr %420, i64 29, !dbg !13956
  %422 = load ptr, ptr %9, align 8, !dbg !13956
  %423 = icmp uge ptr %421, %422, !dbg !13956
  %424 = zext i1 %423 to i32, !dbg !13956
  %425 = sext i32 %424 to i64, !dbg !13956
  br i1 %423, label %426, label %427, !dbg !13957

426:                                              ; preds = %417
  store i64 0, ptr %3, align 8, !dbg !13956
  br label %488, !dbg !13956

427:                                              ; preds = %417
  %428 = load ptr, ptr %8, align 8, !dbg !13957
  %429 = load ptr, ptr %4, align 8, !dbg !13957
  %430 = getelementptr inbounds %struct.lwan_request_t_, ptr %429, i32 0, i32 4, !dbg !13957
  %431 = load ptr, ptr %430, align 8, !dbg !13957
  %432 = getelementptr inbounds %struct.lwan_connection_t_, ptr %431, i32 0, i32 3, !dbg !13957
  %433 = load ptr, ptr %432, align 8, !dbg !13957
  %434 = getelementptr inbounds %struct.lwan_thread_t_, ptr %433, i32 0, i32 1, !dbg !13957
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %428, ptr align 8 %434, i64 29, i1 false), !dbg !13957
  %435 = getelementptr inbounds i8, ptr %428, i64 29, !dbg !13957
  store ptr %435, ptr %8, align 8, !dbg !13957
  br label %436, !dbg !13958

436:                                              ; preds = %427, %402
  %437 = load i8, ptr %12, align 1, !dbg !13959
  %438 = trunc i8 %437 to i1, !dbg !13959
  %439 = xor i1 %438, true, !dbg !13959
  %440 = xor i1 %438, true, !dbg !13959
  %441 = zext i1 %440 to i32, !dbg !13959
  %442 = sext i32 %441 to i64, !dbg !13959
  br i1 %440, label %443, label %471, !dbg !13960

443:                                              ; preds = %436
  %444 = load ptr, ptr %8, align 8, !dbg !13961
  %445 = getelementptr inbounds i8, ptr %444, i64 11, !dbg !13961
  %446 = load ptr, ptr %9, align 8, !dbg !13961
  %447 = icmp uge ptr %445, %446, !dbg !13961
  %448 = zext i1 %447 to i32, !dbg !13961
  %449 = sext i32 %448 to i64, !dbg !13961
  br i1 %447, label %450, label %451, !dbg !13962

450:                                              ; preds = %443
  store i64 0, ptr %3, align 8, !dbg !13961
  br label %488, !dbg !13961

451:                                              ; preds = %443
  %452 = load ptr, ptr %8, align 8, !dbg !13962
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %452, ptr align 1 @.str.23.123, i64 11, i1 false), !dbg !13962
  %453 = getelementptr inbounds i8, ptr %452, i64 11, !dbg !13962
  store ptr %453, ptr %8, align 8, !dbg !13962
  %454 = load ptr, ptr %8, align 8, !dbg !13963
  %455 = getelementptr inbounds i8, ptr %454, i64 29, !dbg !13963
  %456 = load ptr, ptr %9, align 8, !dbg !13963
  %457 = icmp uge ptr %455, %456, !dbg !13963
  %458 = zext i1 %457 to i32, !dbg !13963
  %459 = sext i32 %458 to i64, !dbg !13963
  br i1 %457, label %460, label %461, !dbg !13964

460:                                              ; preds = %451
  store i64 0, ptr %3, align 8, !dbg !13963
  br label %488, !dbg !13963

461:                                              ; preds = %451
  %462 = load ptr, ptr %8, align 8, !dbg !13964
  %463 = load ptr, ptr %4, align 8, !dbg !13964
  %464 = getelementptr inbounds %struct.lwan_request_t_, ptr %463, i32 0, i32 4, !dbg !13964
  %465 = load ptr, ptr %464, align 8, !dbg !13964
  %466 = getelementptr inbounds %struct.lwan_connection_t_, ptr %465, i32 0, i32 3, !dbg !13964
  %467 = load ptr, ptr %466, align 8, !dbg !13964
  %468 = getelementptr inbounds %struct.lwan_thread_t_, ptr %467, i32 0, i32 1, !dbg !13964
  %469 = getelementptr inbounds %struct.anon.27, ptr %468, i32 0, i32 1, !dbg !13964
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %462, ptr align 2 %469, i64 29, i1 false), !dbg !13964
  %470 = getelementptr inbounds i8, ptr %462, i64 29, !dbg !13964
  store ptr %470, ptr %8, align 8, !dbg !13964
  br label %471, !dbg !13965

471:                                              ; preds = %461, %436
  %472 = load ptr, ptr %8, align 8, !dbg !13966
  %473 = getelementptr inbounds i8, ptr %472, i64 19, !dbg !13966
  %474 = load ptr, ptr %9, align 8, !dbg !13966
  %475 = icmp uge ptr %473, %474, !dbg !13966
  %476 = zext i1 %475 to i32, !dbg !13966
  %477 = sext i32 %476 to i64, !dbg !13966
  br i1 %475, label %478, label %479, !dbg !13967

478:                                              ; preds = %471
  store i64 0, ptr %3, align 8, !dbg !13966
  br label %488, !dbg !13966

479:                                              ; preds = %471
  %480 = load ptr, ptr %8, align 8, !dbg !13967
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %480, ptr align 1 @.str.24.124, i64 19, i1 false), !dbg !13967
  %481 = getelementptr inbounds i8, ptr %480, i64 19, !dbg !13967
  store ptr %481, ptr %8, align 8, !dbg !13967
  %482 = load ptr, ptr %8, align 8, !dbg !13968
  %483 = load ptr, ptr %6, align 8, !dbg !13969
  %484 = ptrtoint ptr %482 to i64, !dbg !13970
  %485 = ptrtoint ptr %483 to i64, !dbg !13970
  %486 = sub i64 %484, %485, !dbg !13970
  %487 = sub nsw i64 %486, 1, !dbg !13971
  store i64 %487, ptr %3, align 8, !dbg !13972
  br label %488, !dbg !13972

488:                                              ; preds = %479, %478, %460, %450, %426, %416, %389, %374, %338, %316, %300, %244, %233, %211, %195, %180, %171, %150, %141, %119, %102, %84, %69, %58
  %489 = load i64, ptr %3, align 8, !dbg !13973
  store i64 %489, ptr %28, align 8, !dbg !13974
  %490 = load i64, ptr %28, align 8, !dbg !13975
  %491 = icmp ne i64 %490, 0, !dbg !13975
  %492 = xor i1 %491, true, !dbg !13975
  %493 = zext i1 %492 to i32, !dbg !13975
  %494 = sext i32 %493 to i64, !dbg !13975
  %495 = icmp ne i64 %494, 0, !dbg !13975
  br i1 %495, label %496, label %497, !dbg !13977

496:                                              ; preds = %488
  store i1 false, ptr %24, align 1, !dbg !13978
  br label %506, !dbg !13978

497:                                              ; preds = %488
  %498 = load ptr, ptr %25, align 8, !dbg !13979
  %499 = getelementptr inbounds %struct.lwan_request_t_, ptr %498, i32 0, i32 0, !dbg !13980
  %500 = load i32, ptr %499, align 8, !dbg !13981
  %501 = or i32 %500, 64, !dbg !13981
  store i32 %501, ptr %499, align 8, !dbg !13981
  %502 = load ptr, ptr %25, align 8, !dbg !13982
  %503 = getelementptr inbounds [4096 x i8], ptr %27, i64 0, i64 0, !dbg !13983
  %504 = load i64, ptr %28, align 8, !dbg !13984
  %505 = call i64 @lwan_send(ptr noundef %502, ptr noundef %503, i64 noundef %504, i32 noundef 32768), !dbg !13985
  store i1 true, ptr %24, align 1, !dbg !13986
  br label %506, !dbg !13986

506:                                              ; preds = %497, %496, %34
  %507 = load i1, ptr %24, align 1, !dbg !13987
  ret i1 %507, !dbg !13987
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @parse_query_string(ptr noundef %0, ptr noundef %1) #0 !dbg !13988 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !13989, metadata !DIExpression()), !dbg !13990
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !13991, metadata !DIExpression()), !dbg !13992
  %5 = load ptr, ptr %3, align 8, !dbg !13993
  %6 = load ptr, ptr %4, align 8, !dbg !13994
  %7 = getelementptr inbounds %struct.request_parser_helper, ptr %6, i32 0, i32 5, !dbg !13995
  %8 = load ptr, ptr %3, align 8, !dbg !13996
  %9 = getelementptr inbounds %struct.lwan_request_t_, ptr %8, i32 0, i32 5, !dbg !13997
  %10 = getelementptr inbounds %struct.lwan_value_t_, ptr %9, i32 0, i32 0, !dbg !13998
  %11 = load ptr, ptr %3, align 8, !dbg !13999
  %12 = getelementptr inbounds %struct.lwan_request_t_, ptr %11, i32 0, i32 5, !dbg !14000
  %13 = getelementptr inbounds %struct.lwan_value_t_, ptr %12, i32 0, i32 1, !dbg !14001
  call void @parse_urlencoded_keyvalues(ptr noundef %5, ptr noundef %7, ptr noundef %10, ptr noundef %13), !dbg !14002
  ret void, !dbg !14003
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @parse_if_modified_since(ptr noundef %0, ptr noundef %1) #0 !dbg !14004 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca %struct.tm, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !14005, metadata !DIExpression()), !dbg !14006
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !14007, metadata !DIExpression()), !dbg !14008
  %7 = load ptr, ptr %4, align 8, !dbg !14009
  %8 = getelementptr inbounds %struct.request_parser_helper, ptr %7, i32 0, i32 3, !dbg !14009
  %9 = getelementptr inbounds %struct.lwan_value_t_, ptr %8, i32 0, i32 1, !dbg !14009
  %10 = load i64, ptr %9, align 8, !dbg !14009
  %11 = icmp ne i64 %10, 0, !dbg !14009
  %12 = xor i1 %11, true, !dbg !14009
  %13 = zext i1 %12 to i32, !dbg !14009
  %14 = sext i32 %13 to i64, !dbg !14009
  %15 = icmp ne i64 %14, 0, !dbg !14009
  br i1 %15, label %16, label %17, !dbg !14011

16:                                               ; preds = %2
  br label %41, !dbg !14012

17:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata ptr %5, metadata !14013, metadata !DIExpression()), !dbg !14028
  call void @llvm.dbg.declare(metadata ptr %6, metadata !14029, metadata !DIExpression()), !dbg !14030
  %18 = load ptr, ptr %4, align 8, !dbg !14031
  %19 = getelementptr inbounds %struct.request_parser_helper, ptr %18, i32 0, i32 3, !dbg !14032
  %20 = getelementptr inbounds %struct.lwan_value_t_, ptr %19, i32 0, i32 0, !dbg !14033
  %21 = load ptr, ptr %20, align 8, !dbg !14033
  %22 = call ptr @strptime(ptr noundef %21, ptr noundef @.str.3.89, ptr noundef %5) #17, !dbg !14034
  store ptr %22, ptr %6, align 8, !dbg !14030
  %23 = load ptr, ptr %6, align 8, !dbg !14035
  %24 = icmp ne ptr %23, null, !dbg !14035
  %25 = xor i1 %24, true, !dbg !14035
  %26 = zext i1 %25 to i32, !dbg !14035
  %27 = sext i32 %26 to i64, !dbg !14035
  %28 = icmp ne i64 %27, 0, !dbg !14035
  br i1 %28, label %29, label %30, !dbg !14037

29:                                               ; preds = %17
  br label %41, !dbg !14038

30:                                               ; preds = %17
  %31 = load ptr, ptr %6, align 8, !dbg !14039
  %32 = load i8, ptr %31, align 1, !dbg !14039
  %33 = sext i8 %32 to i64, !dbg !14039
  %34 = icmp ne i64 %33, 0, !dbg !14039
  br i1 %34, label %35, label %36, !dbg !14041

35:                                               ; preds = %30
  br label %41, !dbg !14042

36:                                               ; preds = %30
  %37 = call i64 @timegm(ptr noundef %5) #17, !dbg !14043
  %38 = load ptr, ptr %3, align 8, !dbg !14044
  %39 = getelementptr inbounds %struct.lwan_request_t_, ptr %38, i32 0, i32 7, !dbg !14045
  %40 = getelementptr inbounds %struct.anon.2, ptr %39, i32 0, i32 0, !dbg !14046
  store i64 %37, ptr %40, align 8, !dbg !14047
  br label %41, !dbg !14048

41:                                               ; preds = %36, %35, %29, %16
  ret void, !dbg !14048
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @parse_range(ptr noundef %0, ptr noundef %1) #0 !dbg !14049 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !14050, metadata !DIExpression()), !dbg !14051
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !14052, metadata !DIExpression()), !dbg !14053
  %8 = load ptr, ptr %4, align 8, !dbg !14054
  %9 = getelementptr inbounds %struct.request_parser_helper, ptr %8, i32 0, i32 4, !dbg !14054
  %10 = getelementptr inbounds %struct.lwan_value_t_, ptr %9, i32 0, i32 1, !dbg !14054
  %11 = load i64, ptr %10, align 8, !dbg !14054
  %12 = icmp ule i64 %11, 6, !dbg !14054
  %13 = zext i1 %12 to i32, !dbg !14054
  %14 = sext i32 %13 to i64, !dbg !14054
  %15 = icmp ne i64 %14, 0, !dbg !14054
  br i1 %15, label %16, label %17, !dbg !14056

16:                                               ; preds = %2
  br label %83, !dbg !14057

17:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata ptr %5, metadata !14058, metadata !DIExpression()), !dbg !14059
  %18 = load ptr, ptr %4, align 8, !dbg !14060
  %19 = getelementptr inbounds %struct.request_parser_helper, ptr %18, i32 0, i32 4, !dbg !14061
  %20 = getelementptr inbounds %struct.lwan_value_t_, ptr %19, i32 0, i32 0, !dbg !14062
  %21 = load ptr, ptr %20, align 8, !dbg !14062
  store ptr %21, ptr %5, align 8, !dbg !14059
  %22 = load ptr, ptr %5, align 8, !dbg !14063
  %23 = call i32 @strncmp(ptr noundef %22, ptr noundef @.str.4.85, i64 noundef 6) #20, !dbg !14063
  %24 = sext i32 %23 to i64, !dbg !14063
  %25 = icmp ne i64 %24, 0, !dbg !14063
  br i1 %25, label %26, label %27, !dbg !14065

26:                                               ; preds = %17
  br label %83, !dbg !14066

27:                                               ; preds = %17
  %28 = load ptr, ptr %5, align 8, !dbg !14067
  %29 = getelementptr inbounds i8, ptr %28, i64 6, !dbg !14067
  store ptr %29, ptr %5, align 8, !dbg !14067
  call void @llvm.dbg.declare(metadata ptr %6, metadata !14068, metadata !DIExpression()), !dbg !14069
  call void @llvm.dbg.declare(metadata ptr %7, metadata !14070, metadata !DIExpression()), !dbg !14071
  %30 = load ptr, ptr %5, align 8, !dbg !14072
  %31 = call i32 (ptr, ptr, ...) @__isoc99_sscanf(ptr noundef %30, ptr noundef @.str.5.86, ptr noundef %6, ptr noundef %7) #17, !dbg !14074
  %32 = icmp eq i32 %31, 2, !dbg !14075
  br i1 %32, label %33, label %44, !dbg !14076

33:                                               ; preds = %27
  %34 = load i64, ptr %6, align 8, !dbg !14077
  %35 = load ptr, ptr %3, align 8, !dbg !14079
  %36 = getelementptr inbounds %struct.lwan_request_t_, ptr %35, i32 0, i32 7, !dbg !14080
  %37 = getelementptr inbounds %struct.anon.2, ptr %36, i32 0, i32 1, !dbg !14081
  %38 = getelementptr inbounds %struct.anon.3, ptr %37, i32 0, i32 0, !dbg !14082
  store i64 %34, ptr %38, align 8, !dbg !14083
  %39 = load i64, ptr %7, align 8, !dbg !14084
  %40 = load ptr, ptr %3, align 8, !dbg !14085
  %41 = getelementptr inbounds %struct.lwan_request_t_, ptr %40, i32 0, i32 7, !dbg !14086
  %42 = getelementptr inbounds %struct.anon.2, ptr %41, i32 0, i32 1, !dbg !14087
  %43 = getelementptr inbounds %struct.anon.3, ptr %42, i32 0, i32 1, !dbg !14088
  store i64 %39, ptr %43, align 8, !dbg !14089
  br label %83, !dbg !14090

44:                                               ; preds = %27
  %45 = load ptr, ptr %5, align 8, !dbg !14091
  %46 = call i32 (ptr, ptr, ...) @__isoc99_sscanf(ptr noundef %45, ptr noundef @.str.6.87, ptr noundef %7) #17, !dbg !14093
  %47 = icmp eq i32 %46, 1, !dbg !14094
  br i1 %47, label %48, label %58, !dbg !14095

48:                                               ; preds = %44
  %49 = load ptr, ptr %3, align 8, !dbg !14096
  %50 = getelementptr inbounds %struct.lwan_request_t_, ptr %49, i32 0, i32 7, !dbg !14098
  %51 = getelementptr inbounds %struct.anon.2, ptr %50, i32 0, i32 1, !dbg !14099
  %52 = getelementptr inbounds %struct.anon.3, ptr %51, i32 0, i32 0, !dbg !14100
  store i64 0, ptr %52, align 8, !dbg !14101
  %53 = load i64, ptr %7, align 8, !dbg !14102
  %54 = load ptr, ptr %3, align 8, !dbg !14103
  %55 = getelementptr inbounds %struct.lwan_request_t_, ptr %54, i32 0, i32 7, !dbg !14104
  %56 = getelementptr inbounds %struct.anon.2, ptr %55, i32 0, i32 1, !dbg !14105
  %57 = getelementptr inbounds %struct.anon.3, ptr %56, i32 0, i32 1, !dbg !14106
  store i64 %53, ptr %57, align 8, !dbg !14107
  br label %82, !dbg !14108

58:                                               ; preds = %44
  %59 = load ptr, ptr %5, align 8, !dbg !14109
  %60 = call i32 (ptr, ptr, ...) @__isoc99_sscanf(ptr noundef %59, ptr noundef @.str.7.88, ptr noundef %6) #17, !dbg !14111
  %61 = icmp eq i32 %60, 1, !dbg !14112
  br i1 %61, label %62, label %72, !dbg !14113

62:                                               ; preds = %58
  %63 = load i64, ptr %6, align 8, !dbg !14114
  %64 = load ptr, ptr %3, align 8, !dbg !14116
  %65 = getelementptr inbounds %struct.lwan_request_t_, ptr %64, i32 0, i32 7, !dbg !14117
  %66 = getelementptr inbounds %struct.anon.2, ptr %65, i32 0, i32 1, !dbg !14118
  %67 = getelementptr inbounds %struct.anon.3, ptr %66, i32 0, i32 0, !dbg !14119
  store i64 %63, ptr %67, align 8, !dbg !14120
  %68 = load ptr, ptr %3, align 8, !dbg !14121
  %69 = getelementptr inbounds %struct.lwan_request_t_, ptr %68, i32 0, i32 7, !dbg !14122
  %70 = getelementptr inbounds %struct.anon.2, ptr %69, i32 0, i32 1, !dbg !14123
  %71 = getelementptr inbounds %struct.anon.3, ptr %70, i32 0, i32 1, !dbg !14124
  store i64 -1, ptr %71, align 8, !dbg !14125
  br label %81, !dbg !14126

72:                                               ; preds = %58
  %73 = load ptr, ptr %3, align 8, !dbg !14127
  %74 = getelementptr inbounds %struct.lwan_request_t_, ptr %73, i32 0, i32 7, !dbg !14129
  %75 = getelementptr inbounds %struct.anon.2, ptr %74, i32 0, i32 1, !dbg !14130
  %76 = getelementptr inbounds %struct.anon.3, ptr %75, i32 0, i32 0, !dbg !14131
  store i64 -1, ptr %76, align 8, !dbg !14132
  %77 = load ptr, ptr %3, align 8, !dbg !14133
  %78 = getelementptr inbounds %struct.lwan_request_t_, ptr %77, i32 0, i32 7, !dbg !14134
  %79 = getelementptr inbounds %struct.anon.2, ptr %78, i32 0, i32 1, !dbg !14135
  %80 = getelementptr inbounds %struct.anon.3, ptr %79, i32 0, i32 1, !dbg !14136
  store i64 -1, ptr %80, align 8, !dbg !14137
  br label %81

81:                                               ; preds = %72, %62
  br label %82

82:                                               ; preds = %81, %48
  br label %83

83:                                               ; preds = %82, %33, %26, %16
  ret void, !dbg !14138
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @parse_accept_encoding(ptr noundef %0, ptr noundef %1) #0 !dbg !1769 {
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !14139, metadata !DIExpression()), !dbg !14140
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !14141, metadata !DIExpression()), !dbg !14142
  %8 = load ptr, ptr %6, align 8, !dbg !14143
  %9 = getelementptr inbounds %struct.request_parser_helper, ptr %8, i32 0, i32 2, !dbg !14145
  %10 = getelementptr inbounds %struct.lwan_value_t_, ptr %9, i32 0, i32 1, !dbg !14146
  %11 = load i64, ptr %10, align 8, !dbg !14146
  %12 = icmp ne i64 %11, 0, !dbg !14143
  br i1 %12, label %14, label %13, !dbg !14147

13:                                               ; preds = %2
  br label %52, !dbg !14148

14:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata ptr %7, metadata !14149, metadata !DIExpression()), !dbg !14151
  %15 = load ptr, ptr %6, align 8, !dbg !14152
  %16 = getelementptr inbounds %struct.request_parser_helper, ptr %15, i32 0, i32 2, !dbg !14153
  %17 = getelementptr inbounds %struct.lwan_value_t_, ptr %16, i32 0, i32 0, !dbg !14154
  %18 = load ptr, ptr %17, align 8, !dbg !14154
  store ptr %18, ptr %7, align 8, !dbg !14151
  br label %19, !dbg !14155

19:                                               ; preds = %49, %14
  %20 = load ptr, ptr %7, align 8, !dbg !14156
  %21 = icmp ne ptr %20, null, !dbg !14156
  br i1 %21, label %22, label %27, !dbg !14158

22:                                               ; preds = %19
  %23 = load ptr, ptr %7, align 8, !dbg !14159
  %24 = load i8, ptr %23, align 1, !dbg !14160
  %25 = sext i8 %24 to i32, !dbg !14160
  %26 = icmp ne i32 %25, 0, !dbg !14158
  br label %27

27:                                               ; preds = %22, %19
  %28 = phi i1 [ false, %19 ], [ %26, %22 ], !dbg !14161
  br i1 %28, label %29, label %52, !dbg !14162

29:                                               ; preds = %27
  %30 = load ptr, ptr %7, align 8, !dbg !14163
  store ptr %30, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !12612, metadata !DIExpression()), !dbg !14165
  call void @llvm.dbg.declare(metadata ptr %4, metadata !12618, metadata !DIExpression()), !dbg !14167
  %31 = load ptr, ptr %3, align 8, !dbg !14168
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %4, ptr align 1 %31, i64 4, i1 false), !dbg !14169
  %32 = load i32, ptr %4, align 4, !dbg !14170
  switch i32 %32, label %43 [
    i32 1818649956, label %33
    i32 1717920800, label %33
    i32 1885960807, label %38
    i32 1769629472, label %38
  ], !dbg !14163

33:                                               ; preds = %29, %29
  %34 = load ptr, ptr %5, align 8, !dbg !14171
  %35 = getelementptr inbounds %struct.lwan_request_t_, ptr %34, i32 0, i32 0, !dbg !14173
  %36 = load i32, ptr %35, align 8, !dbg !14174
  %37 = or i32 %36, 8, !dbg !14174
  store i32 %37, ptr %35, align 8, !dbg !14174
  br label %43, !dbg !14175

38:                                               ; preds = %29, %29
  %39 = load ptr, ptr %5, align 8, !dbg !14176
  %40 = getelementptr inbounds %struct.lwan_request_t_, ptr %39, i32 0, i32 0, !dbg !14177
  %41 = load i32, ptr %40, align 8, !dbg !14178
  %42 = or i32 %41, 16, !dbg !14178
  store i32 %42, ptr %40, align 8, !dbg !14178
  br label %43, !dbg !14179

43:                                               ; preds = %38, %33, %29
  %44 = load ptr, ptr %7, align 8, !dbg !14180
  %45 = call ptr @strchr(ptr noundef %44, i32 noundef 44) #20, !dbg !14182
  store ptr %45, ptr %7, align 8, !dbg !14183
  %46 = icmp ne ptr %45, null, !dbg !14183
  br i1 %46, label %48, label %47, !dbg !14184

47:                                               ; preds = %43
  br label %52, !dbg !14185

48:                                               ; preds = %43
  br label %49, !dbg !14186

49:                                               ; preds = %48
  %50 = load ptr, ptr %7, align 8, !dbg !14187
  %51 = getelementptr inbounds i8, ptr %50, i32 1, !dbg !14187
  store ptr %51, ptr %7, align 8, !dbg !14187
  br label %19, !dbg !14188, !llvm.loop !14189

52:                                               ; preds = %47, %27, %13
  ret void, !dbg !14191
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @parse_post_data(ptr noundef %0, ptr noundef %1) #0 !dbg !1847 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !14192, metadata !DIExpression()), !dbg !14193
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !14194, metadata !DIExpression()), !dbg !14195
  %5 = load ptr, ptr %4, align 8, !dbg !14196
  %6 = getelementptr inbounds %struct.request_parser_helper, ptr %5, i32 0, i32 9, !dbg !14198
  %7 = getelementptr inbounds %struct.lwan_value_t_, ptr %6, i32 0, i32 1, !dbg !14199
  %8 = load i64, ptr %7, align 8, !dbg !14199
  %9 = icmp ne i64 %8, 33, !dbg !14200
  br i1 %9, label %10, label %11, !dbg !14201

10:                                               ; preds = %2
  br label %30, !dbg !14202

11:                                               ; preds = %2
  %12 = load ptr, ptr %4, align 8, !dbg !14203
  %13 = getelementptr inbounds %struct.request_parser_helper, ptr %12, i32 0, i32 9, !dbg !14203
  %14 = getelementptr inbounds %struct.lwan_value_t_, ptr %13, i32 0, i32 0, !dbg !14203
  %15 = load ptr, ptr %14, align 8, !dbg !14203
  %16 = call i32 @strcmp(ptr noundef %15, ptr noundef @parse_post_data.content_type) #20, !dbg !14203
  %17 = sext i32 %16 to i64, !dbg !14203
  %18 = icmp ne i64 %17, 0, !dbg !14203
  br i1 %18, label %19, label %20, !dbg !14205

19:                                               ; preds = %11
  br label %30, !dbg !14206

20:                                               ; preds = %11
  %21 = load ptr, ptr %3, align 8, !dbg !14207
  %22 = load ptr, ptr %4, align 8, !dbg !14208
  %23 = getelementptr inbounds %struct.request_parser_helper, ptr %22, i32 0, i32 8, !dbg !14209
  %24 = load ptr, ptr %3, align 8, !dbg !14210
  %25 = getelementptr inbounds %struct.lwan_request_t_, ptr %24, i32 0, i32 6, !dbg !14211
  %26 = getelementptr inbounds %struct.lwan_value_t_, ptr %25, i32 0, i32 0, !dbg !14212
  %27 = load ptr, ptr %3, align 8, !dbg !14213
  %28 = getelementptr inbounds %struct.lwan_request_t_, ptr %27, i32 0, i32 6, !dbg !14214
  %29 = getelementptr inbounds %struct.lwan_value_t_, ptr %28, i32 0, i32 1, !dbg !14215
  call void @parse_urlencoded_keyvalues(ptr noundef %21, ptr noundef %23, ptr noundef %26, ptr noundef %29), !dbg !14216
  br label %30, !dbg !14217

30:                                               ; preds = %20, %19, %10
  ret void, !dbg !14217
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @parse_urlencoded_keyvalues(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 !dbg !14218 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i64, align 8
  %12 = alloca [256 x %struct.lwan_key_value_t_], align 16
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !14222, metadata !DIExpression()), !dbg !14223
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !14224, metadata !DIExpression()), !dbg !14225
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !14226, metadata !DIExpression()), !dbg !14227
  store ptr %3, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !14228, metadata !DIExpression()), !dbg !14229
  %15 = load ptr, ptr %6, align 8, !dbg !14230
  %16 = getelementptr inbounds %struct.lwan_value_t_, ptr %15, i32 0, i32 0, !dbg !14232
  %17 = load ptr, ptr %16, align 8, !dbg !14232
  %18 = icmp ne ptr %17, null, !dbg !14230
  br i1 %18, label %20, label %19, !dbg !14233

19:                                               ; preds = %4
  br label %166, !dbg !14234

20:                                               ; preds = %4
  call void @llvm.dbg.declare(metadata ptr %9, metadata !14235, metadata !DIExpression()), !dbg !14236
  %21 = load ptr, ptr %6, align 8, !dbg !14237
  %22 = getelementptr inbounds %struct.lwan_value_t_, ptr %21, i32 0, i32 0, !dbg !14238
  %23 = load ptr, ptr %22, align 8, !dbg !14238
  store ptr %23, ptr %9, align 8, !dbg !14236
  call void @llvm.dbg.declare(metadata ptr %10, metadata !14239, metadata !DIExpression()), !dbg !14240
  store ptr null, ptr %10, align 8, !dbg !14240
  call void @llvm.dbg.declare(metadata ptr %11, metadata !14241, metadata !DIExpression()), !dbg !14242
  store i64 0, ptr %11, align 8, !dbg !14242
  call void @llvm.dbg.declare(metadata ptr %12, metadata !14243, metadata !DIExpression()), !dbg !14245
  call void @llvm.dbg.declare(metadata ptr %13, metadata !14246, metadata !DIExpression()), !dbg !14248
  %24 = load ptr, ptr %9, align 8, !dbg !14249
  store ptr %24, ptr %13, align 8, !dbg !14248
  br label %25, !dbg !14250

25:                                               ; preds = %85, %20
  %26 = load ptr, ptr %13, align 8, !dbg !14251
  %27 = load i8, ptr %26, align 1, !dbg !14253
  %28 = icmp ne i8 %27, 0, !dbg !14254
  br i1 %28, label %29, label %88, !dbg !14254

29:                                               ; preds = %25
  %30 = load ptr, ptr %13, align 8, !dbg !14255
  %31 = load i8, ptr %30, align 1, !dbg !14257
  %32 = sext i8 %31 to i32, !dbg !14257
  switch i32 %32, label %84 [
    i32 61, label %33
    i32 38, label %37
    i32 59, label %37
  ], !dbg !14258

33:                                               ; preds = %29
  %34 = load ptr, ptr %13, align 8, !dbg !14259
  store i8 0, ptr %34, align 1, !dbg !14261
  %35 = load ptr, ptr %13, align 8, !dbg !14262
  %36 = getelementptr inbounds i8, ptr %35, i64 1, !dbg !14263
  store ptr %36, ptr %10, align 8, !dbg !14264
  br label %84, !dbg !14265

37:                                               ; preds = %29, %29
  %38 = load ptr, ptr %13, align 8, !dbg !14266
  store i8 0, ptr %38, align 1, !dbg !14267
  br label %39, !dbg !14268

39:                                               ; preds = %37
  %40 = load ptr, ptr %9, align 8, !dbg !14269
  %41 = call i64 @url_decode(ptr noundef %40), !dbg !14269
  %42 = icmp ne i64 %41, 0, !dbg !14269
  %43 = xor i1 %42, true, !dbg !14269
  %44 = xor i1 %43, true, !dbg !14269
  %45 = zext i1 %44 to i32, !dbg !14269
  %46 = sext i32 %45 to i64, !dbg !14269
  %47 = icmp ne i64 %46, 0, !dbg !14269
  br i1 %47, label %48, label %80, !dbg !14272

48:                                               ; preds = %39
  %49 = load ptr, ptr %9, align 8, !dbg !14273
  %50 = load i64, ptr %11, align 8, !dbg !14273
  %51 = getelementptr inbounds [256 x %struct.lwan_key_value_t_], ptr %12, i64 0, i64 %50, !dbg !14273
  %52 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %51, i32 0, i32 0, !dbg !14273
  store ptr %49, ptr %52, align 16, !dbg !14273
  %53 = load ptr, ptr %10, align 8, !dbg !14275
  %54 = call i64 @url_decode(ptr noundef %53), !dbg !14275
  %55 = icmp ne i64 %54, 0, !dbg !14275
  %56 = xor i1 %55, true, !dbg !14275
  %57 = xor i1 %56, true, !dbg !14275
  %58 = zext i1 %57 to i32, !dbg !14275
  %59 = sext i32 %58 to i64, !dbg !14275
  %60 = icmp ne i64 %59, 0, !dbg !14275
  br i1 %60, label %61, label %66, !dbg !14273

61:                                               ; preds = %48
  %62 = load ptr, ptr %10, align 8, !dbg !14275
  %63 = load i64, ptr %11, align 8, !dbg !14275
  %64 = getelementptr inbounds [256 x %struct.lwan_key_value_t_], ptr %12, i64 0, i64 %63, !dbg !14275
  %65 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %64, i32 0, i32 1, !dbg !14275
  store ptr %62, ptr %65, align 8, !dbg !14275
  br label %70, !dbg !14275

66:                                               ; preds = %48
  %67 = load i64, ptr %11, align 8, !dbg !14275
  %68 = getelementptr inbounds [256 x %struct.lwan_key_value_t_], ptr %12, i64 0, i64 %67, !dbg !14275
  %69 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %68, i32 0, i32 1, !dbg !14275
  store ptr @.str.2.84, ptr %69, align 8, !dbg !14275
  br label %70

70:                                               ; preds = %66, %61
  %71 = load i64, ptr %11, align 8, !dbg !14273
  %72 = add i64 %71, 1, !dbg !14273
  store i64 %72, ptr %11, align 8, !dbg !14273
  %73 = load i64, ptr %11, align 8, !dbg !14277
  %74 = icmp uge i64 %73, 256, !dbg !14277
  %75 = zext i1 %74 to i32, !dbg !14277
  %76 = sext i32 %75 to i64, !dbg !14277
  %77 = icmp ne i64 %76, 0, !dbg !14277
  br i1 %77, label %78, label %79, !dbg !14273

78:                                               ; preds = %70
  br label %132, !dbg !14277

79:                                               ; preds = %70
  br label %80, !dbg !14273

80:                                               ; preds = %79, %39
  br label %81, !dbg !14272

81:                                               ; preds = %80
  %82 = load ptr, ptr %13, align 8, !dbg !14279
  %83 = getelementptr inbounds i8, ptr %82, i64 1, !dbg !14280
  store ptr %83, ptr %9, align 8, !dbg !14281
  store ptr null, ptr %10, align 8, !dbg !14282
  br label %84, !dbg !14283

84:                                               ; preds = %81, %33, %29
  br label %85, !dbg !14284

85:                                               ; preds = %84
  %86 = load ptr, ptr %13, align 8, !dbg !14285
  %87 = getelementptr inbounds i8, ptr %86, i32 1, !dbg !14285
  store ptr %87, ptr %13, align 8, !dbg !14285
  br label %25, !dbg !14286, !llvm.loop !14287

88:                                               ; preds = %25
  br label %89, !dbg !14289

89:                                               ; preds = %88
  %90 = load ptr, ptr %9, align 8, !dbg !14290
  %91 = call i64 @url_decode(ptr noundef %90), !dbg !14290
  %92 = icmp ne i64 %91, 0, !dbg !14290
  %93 = xor i1 %92, true, !dbg !14290
  %94 = xor i1 %93, true, !dbg !14290
  %95 = zext i1 %94 to i32, !dbg !14290
  %96 = sext i32 %95 to i64, !dbg !14290
  %97 = icmp ne i64 %96, 0, !dbg !14290
  br i1 %97, label %98, label %130, !dbg !14293

98:                                               ; preds = %89
  %99 = load ptr, ptr %9, align 8, !dbg !14294
  %100 = load i64, ptr %11, align 8, !dbg !14294
  %101 = getelementptr inbounds [256 x %struct.lwan_key_value_t_], ptr %12, i64 0, i64 %100, !dbg !14294
  %102 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %101, i32 0, i32 0, !dbg !14294
  store ptr %99, ptr %102, align 16, !dbg !14294
  %103 = load ptr, ptr %10, align 8, !dbg !14296
  %104 = call i64 @url_decode(ptr noundef %103), !dbg !14296
  %105 = icmp ne i64 %104, 0, !dbg !14296
  %106 = xor i1 %105, true, !dbg !14296
  %107 = xor i1 %106, true, !dbg !14296
  %108 = zext i1 %107 to i32, !dbg !14296
  %109 = sext i32 %108 to i64, !dbg !14296
  %110 = icmp ne i64 %109, 0, !dbg !14296
  br i1 %110, label %111, label %116, !dbg !14294

111:                                              ; preds = %98
  %112 = load ptr, ptr %10, align 8, !dbg !14296
  %113 = load i64, ptr %11, align 8, !dbg !14296
  %114 = getelementptr inbounds [256 x %struct.lwan_key_value_t_], ptr %12, i64 0, i64 %113, !dbg !14296
  %115 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %114, i32 0, i32 1, !dbg !14296
  store ptr %112, ptr %115, align 8, !dbg !14296
  br label %120, !dbg !14296

116:                                              ; preds = %98
  %117 = load i64, ptr %11, align 8, !dbg !14296
  %118 = getelementptr inbounds [256 x %struct.lwan_key_value_t_], ptr %12, i64 0, i64 %117, !dbg !14296
  %119 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %118, i32 0, i32 1, !dbg !14296
  store ptr @.str.2.84, ptr %119, align 8, !dbg !14296
  br label %120

120:                                              ; preds = %116, %111
  %121 = load i64, ptr %11, align 8, !dbg !14294
  %122 = add i64 %121, 1, !dbg !14294
  store i64 %122, ptr %11, align 8, !dbg !14294
  %123 = load i64, ptr %11, align 8, !dbg !14298
  %124 = icmp uge i64 %123, 256, !dbg !14298
  %125 = zext i1 %124 to i32, !dbg !14298
  %126 = sext i32 %125 to i64, !dbg !14298
  %127 = icmp ne i64 %126, 0, !dbg !14298
  br i1 %127, label %128, label %129, !dbg !14294

128:                                              ; preds = %120
  br label %132, !dbg !14298

129:                                              ; preds = %120
  br label %130, !dbg !14294

130:                                              ; preds = %129, %89
  br label %131, !dbg !14293

131:                                              ; preds = %130
  br label %132, !dbg !14293

132:                                              ; preds = %131, %128, %78
  call void @llvm.dbg.label(metadata !14300), !dbg !14301
  %133 = load i64, ptr %11, align 8, !dbg !14302
  %134 = getelementptr inbounds [256 x %struct.lwan_key_value_t_], ptr %12, i64 0, i64 %133, !dbg !14303
  %135 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %134, i32 0, i32 1, !dbg !14304
  store ptr null, ptr %135, align 8, !dbg !14305
  %136 = load i64, ptr %11, align 8, !dbg !14306
  %137 = getelementptr inbounds [256 x %struct.lwan_key_value_t_], ptr %12, i64 0, i64 %136, !dbg !14307
  %138 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %137, i32 0, i32 0, !dbg !14308
  store ptr null, ptr %138, align 16, !dbg !14309
  call void @llvm.dbg.declare(metadata ptr %14, metadata !14310, metadata !DIExpression()), !dbg !14311
  %139 = load ptr, ptr %5, align 8, !dbg !14312
  %140 = getelementptr inbounds %struct.lwan_request_t_, ptr %139, i32 0, i32 4, !dbg !14313
  %141 = load ptr, ptr %140, align 8, !dbg !14313
  %142 = getelementptr inbounds %struct.lwan_connection_t_, ptr %141, i32 0, i32 2, !dbg !14314
  %143 = load ptr, ptr %142, align 8, !dbg !14314
  %144 = load i64, ptr %11, align 8, !dbg !14315
  %145 = add i64 1, %144, !dbg !14316
  %146 = mul i64 %145, 16, !dbg !14317
  %147 = call ptr @coro_malloc(ptr noundef %143, i64 noundef %146), !dbg !14318
  store ptr %147, ptr %14, align 8, !dbg !14311
  %148 = load ptr, ptr %14, align 8, !dbg !14319
  %149 = icmp ne ptr %148, null, !dbg !14319
  %150 = xor i1 %149, true, !dbg !14319
  %151 = xor i1 %150, true, !dbg !14319
  %152 = zext i1 %151 to i32, !dbg !14319
  %153 = sext i32 %152 to i64, !dbg !14319
  %154 = icmp ne i64 %153, 0, !dbg !14319
  br i1 %154, label %155, label %166, !dbg !14321

155:                                              ; preds = %132
  %156 = getelementptr inbounds [256 x %struct.lwan_key_value_t_], ptr %12, i64 0, i64 0, !dbg !14322
  %157 = load i64, ptr %11, align 8, !dbg !14324
  call void @qsort(ptr noundef %156, i64 noundef %157, i64 noundef 16, ptr noundef @key_value_compare_qsort_key), !dbg !14325
  %158 = load ptr, ptr %14, align 8, !dbg !14326
  %159 = getelementptr inbounds [256 x %struct.lwan_key_value_t_], ptr %12, i64 0, i64 0, !dbg !14327
  %160 = load i64, ptr %11, align 8, !dbg !14328
  %161 = add i64 1, %160, !dbg !14329
  %162 = mul i64 %161, 16, !dbg !14330
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %158, ptr align 16 %159, i64 %162, i1 false), !dbg !14327
  %163 = load ptr, ptr %7, align 8, !dbg !14331
  store ptr %158, ptr %163, align 8, !dbg !14332
  %164 = load i64, ptr %11, align 8, !dbg !14333
  %165 = load ptr, ptr %8, align 8, !dbg !14334
  store i64 %164, ptr %165, align 8, !dbg !14335
  br label %166, !dbg !14336

166:                                              ; preds = %155, %132, %19
  ret void, !dbg !14337
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @url_decode(ptr noundef %0) #0 !dbg !14338 {
  %2 = alloca i8, align 1
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i64, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca i8, align 1
  store ptr %0, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !14341, metadata !DIExpression()), !dbg !14342
  %11 = load ptr, ptr %7, align 8, !dbg !14343
  %12 = icmp ne ptr %11, null, !dbg !14343
  %13 = xor i1 %12, true, !dbg !14343
  %14 = zext i1 %13 to i32, !dbg !14343
  %15 = sext i32 %14 to i64, !dbg !14343
  %16 = icmp ne i64 %15, 0, !dbg !14343
  br i1 %16, label %17, label %18, !dbg !14345

17:                                               ; preds = %1
  store i64 0, ptr %6, align 8, !dbg !14346
  br label %178, !dbg !14346

18:                                               ; preds = %1
  call void @llvm.dbg.declare(metadata ptr %8, metadata !14347, metadata !DIExpression()), !dbg !14348
  call void @llvm.dbg.declare(metadata ptr %9, metadata !14349, metadata !DIExpression()), !dbg !14350
  %19 = load ptr, ptr %7, align 8, !dbg !14351
  store ptr %19, ptr %8, align 8, !dbg !14353
  store ptr %19, ptr %9, align 8, !dbg !14354
  br label %20, !dbg !14355

20:                                               ; preds = %168, %18
  %21 = load ptr, ptr %8, align 8, !dbg !14356
  %22 = load i8, ptr %21, align 1, !dbg !14358
  %23 = icmp ne i8 %22, 0, !dbg !14359
  br i1 %23, label %24, label %171, !dbg !14359

24:                                               ; preds = %20
  %25 = load ptr, ptr %8, align 8, !dbg !14360
  %26 = load i8, ptr %25, align 1, !dbg !14363
  %27 = sext i8 %26 to i32, !dbg !14363
  %28 = icmp eq i32 %27, 37, !dbg !14364
  br i1 %28, label %29, label %153, !dbg !14365

29:                                               ; preds = %24
  %30 = load ptr, ptr %8, align 8, !dbg !14366
  %31 = getelementptr inbounds i8, ptr %30, i64 1, !dbg !14366
  %32 = load i8, ptr %31, align 1, !dbg !14366
  store i8 %32, ptr %4, align 1
  call void @llvm.dbg.declare(metadata ptr %4, metadata !14367, metadata !DIExpression()), !dbg !14371
  %33 = load i8, ptr %4, align 1, !dbg !14373
  %34 = sext i8 %33 to i32, !dbg !14373
  %35 = icmp sge i32 %34, 48, !dbg !14374
  br i1 %35, label %36, label %40, !dbg !14375

36:                                               ; preds = %29
  %37 = load i8, ptr %4, align 1, !dbg !14376
  %38 = sext i8 %37 to i32, !dbg !14376
  %39 = icmp sle i32 %38, 57, !dbg !14377
  br i1 %39, label %58, label %40, !dbg !14378

40:                                               ; preds = %36, %29
  %41 = load i8, ptr %4, align 1, !dbg !14379
  %42 = sext i8 %41 to i32, !dbg !14379
  %43 = icmp sge i32 %42, 97, !dbg !14380
  br i1 %43, label %44, label %48, !dbg !14381

44:                                               ; preds = %40
  %45 = load i8, ptr %4, align 1, !dbg !14382
  %46 = sext i8 %45 to i32, !dbg !14382
  %47 = icmp sle i32 %46, 102, !dbg !14383
  br i1 %47, label %58, label %48, !dbg !14384

48:                                               ; preds = %44, %40
  %49 = load i8, ptr %4, align 1, !dbg !14385
  %50 = sext i8 %49 to i32, !dbg !14385
  %51 = icmp sge i32 %50, 65, !dbg !14386
  br i1 %51, label %52, label %56, !dbg !14387

52:                                               ; preds = %48
  %53 = load i8, ptr %4, align 1, !dbg !14388
  %54 = sext i8 %53 to i32, !dbg !14388
  %55 = icmp sle i32 %54, 70, !dbg !14389
  br label %56

56:                                               ; preds = %52, %48
  %57 = phi i1 [ false, %48 ], [ %55, %52 ], !dbg !14390
  br label %58, !dbg !14384

58:                                               ; preds = %56, %44, %36
  %59 = phi i1 [ true, %44 ], [ true, %36 ], [ %57, %56 ]
  br i1 %59, label %60, label %91, !dbg !14366

60:                                               ; preds = %58
  %61 = load ptr, ptr %8, align 8, !dbg !14366
  %62 = getelementptr inbounds i8, ptr %61, i64 2, !dbg !14366
  %63 = load i8, ptr %62, align 1, !dbg !14366
  store i8 %63, ptr %5, align 1
  call void @llvm.dbg.declare(metadata ptr %5, metadata !14367, metadata !DIExpression()), !dbg !14391
  %64 = load i8, ptr %5, align 1, !dbg !14393
  %65 = sext i8 %64 to i32, !dbg !14393
  %66 = icmp sge i32 %65, 48, !dbg !14394
  br i1 %66, label %67, label %71, !dbg !14395

67:                                               ; preds = %60
  %68 = load i8, ptr %5, align 1, !dbg !14396
  %69 = sext i8 %68 to i32, !dbg !14396
  %70 = icmp sle i32 %69, 57, !dbg !14397
  br i1 %70, label %89, label %71, !dbg !14398

71:                                               ; preds = %67, %60
  %72 = load i8, ptr %5, align 1, !dbg !14399
  %73 = sext i8 %72 to i32, !dbg !14399
  %74 = icmp sge i32 %73, 97, !dbg !14400
  br i1 %74, label %75, label %79, !dbg !14401

75:                                               ; preds = %71
  %76 = load i8, ptr %5, align 1, !dbg !14402
  %77 = sext i8 %76 to i32, !dbg !14402
  %78 = icmp sle i32 %77, 102, !dbg !14403
  br i1 %78, label %89, label %79, !dbg !14404

79:                                               ; preds = %75, %71
  %80 = load i8, ptr %5, align 1, !dbg !14405
  %81 = sext i8 %80 to i32, !dbg !14405
  %82 = icmp sge i32 %81, 65, !dbg !14406
  br i1 %82, label %83, label %87, !dbg !14407

83:                                               ; preds = %79
  %84 = load i8, ptr %5, align 1, !dbg !14408
  %85 = sext i8 %84 to i32, !dbg !14408
  %86 = icmp sle i32 %85, 70, !dbg !14409
  br label %87

87:                                               ; preds = %83, %79
  %88 = phi i1 [ false, %79 ], [ %86, %83 ], !dbg !14410
  br label %89, !dbg !14404

89:                                               ; preds = %87, %75, %67
  %90 = phi i1 [ true, %75 ], [ true, %67 ], [ %88, %87 ]
  br label %91

91:                                               ; preds = %89, %58
  %92 = phi i1 [ false, %58 ], [ %90, %89 ], !dbg !14411
  %93 = xor i1 %92, true, !dbg !14366
  %94 = xor i1 %93, true, !dbg !14366
  %95 = zext i1 %94 to i32, !dbg !14366
  %96 = sext i32 %95 to i64, !dbg !14366
  %97 = icmp ne i64 %96, 0, !dbg !14366
  br i1 %97, label %98, label %153, !dbg !14412

98:                                               ; preds = %91
  call void @llvm.dbg.declare(metadata ptr %10, metadata !14413, metadata !DIExpression()), !dbg !14415
  %99 = load ptr, ptr %8, align 8, !dbg !14416
  %100 = getelementptr inbounds i8, ptr %99, i64 1, !dbg !14416
  %101 = load i8, ptr %100, align 1, !dbg !14416
  store i8 %101, ptr %2, align 1
  call void @llvm.dbg.declare(metadata ptr %2, metadata !14417, metadata !DIExpression()), !dbg !14421
  %102 = load i8, ptr %2, align 1, !dbg !14423
  %103 = sext i8 %102 to i32, !dbg !14423
  %104 = icmp sle i32 %103, 57, !dbg !14424
  br i1 %104, label %105, label %109, !dbg !14425

105:                                              ; preds = %98
  %106 = load i8, ptr %2, align 1, !dbg !14426
  %107 = sext i8 %106 to i32, !dbg !14426
  %108 = sub nsw i32 %107, 48, !dbg !14427
  br label %114, !dbg !14425

109:                                              ; preds = %98
  %110 = load i8, ptr %2, align 1, !dbg !14428
  %111 = sext i8 %110 to i32, !dbg !14428
  %112 = and i32 %111, 7, !dbg !14429
  %113 = add nsw i32 %112, 9, !dbg !14430
  br label %114, !dbg !14425

114:                                              ; preds = %109, %105
  %115 = phi i32 [ %108, %105 ], [ %113, %109 ], !dbg !14425
  %116 = trunc i32 %115 to i8, !dbg !14431
  %117 = sext i8 %116 to i32, !dbg !14432
  %118 = shl i32 %117, 4, !dbg !14433
  %119 = load ptr, ptr %8, align 8, !dbg !14434
  %120 = getelementptr inbounds i8, ptr %119, i64 2, !dbg !14434
  %121 = load i8, ptr %120, align 1, !dbg !14434
  store i8 %121, ptr %3, align 1
  call void @llvm.dbg.declare(metadata ptr %3, metadata !14417, metadata !DIExpression()), !dbg !14435
  %122 = load i8, ptr %3, align 1, !dbg !14437
  %123 = sext i8 %122 to i32, !dbg !14437
  %124 = icmp sle i32 %123, 57, !dbg !14438
  br i1 %124, label %125, label %129, !dbg !14439

125:                                              ; preds = %114
  %126 = load i8, ptr %3, align 1, !dbg !14440
  %127 = sext i8 %126 to i32, !dbg !14440
  %128 = sub nsw i32 %127, 48, !dbg !14441
  br label %134, !dbg !14439

129:                                              ; preds = %114
  %130 = load i8, ptr %3, align 1, !dbg !14442
  %131 = sext i8 %130 to i32, !dbg !14442
  %132 = and i32 %131, 7, !dbg !14443
  %133 = add nsw i32 %132, 9, !dbg !14444
  br label %134, !dbg !14439

134:                                              ; preds = %129, %125
  %135 = phi i32 [ %128, %125 ], [ %133, %129 ], !dbg !14439
  %136 = trunc i32 %135 to i8, !dbg !14445
  %137 = sext i8 %136 to i32, !dbg !14446
  %138 = or i32 %118, %137, !dbg !14447
  %139 = trunc i32 %138 to i8, !dbg !14448
  store i8 %139, ptr %10, align 1, !dbg !14415
  %140 = load i8, ptr %10, align 1, !dbg !14449
  %141 = icmp ne i8 %140, 0, !dbg !14449
  %142 = xor i1 %141, true, !dbg !14449
  %143 = zext i1 %142 to i32, !dbg !14449
  %144 = sext i32 %143 to i64, !dbg !14449
  %145 = icmp ne i64 %144, 0, !dbg !14449
  br i1 %145, label %146, label %147, !dbg !14451

146:                                              ; preds = %134
  store i64 0, ptr %6, align 8, !dbg !14452
  br label %178, !dbg !14452

147:                                              ; preds = %134
  %148 = load i8, ptr %10, align 1, !dbg !14453
  %149 = load ptr, ptr %9, align 8, !dbg !14454
  %150 = getelementptr inbounds i8, ptr %149, i32 1, !dbg !14454
  store ptr %150, ptr %9, align 8, !dbg !14454
  store i8 %148, ptr %149, align 1, !dbg !14455
  %151 = load ptr, ptr %8, align 8, !dbg !14456
  %152 = getelementptr inbounds i8, ptr %151, i64 2, !dbg !14456
  store ptr %152, ptr %8, align 8, !dbg !14456
  br label %167, !dbg !14457

153:                                              ; preds = %91, %24
  %154 = load ptr, ptr %8, align 8, !dbg !14458
  %155 = load i8, ptr %154, align 1, !dbg !14460
  %156 = sext i8 %155 to i32, !dbg !14460
  %157 = icmp eq i32 %156, 43, !dbg !14461
  br i1 %157, label %158, label %161, !dbg !14462

158:                                              ; preds = %153
  %159 = load ptr, ptr %9, align 8, !dbg !14463
  %160 = getelementptr inbounds i8, ptr %159, i32 1, !dbg !14463
  store ptr %160, ptr %9, align 8, !dbg !14463
  store i8 32, ptr %159, align 1, !dbg !14465
  br label %166, !dbg !14466

161:                                              ; preds = %153
  %162 = load ptr, ptr %8, align 8, !dbg !14467
  %163 = load i8, ptr %162, align 1, !dbg !14469
  %164 = load ptr, ptr %9, align 8, !dbg !14470
  %165 = getelementptr inbounds i8, ptr %164, i32 1, !dbg !14470
  store ptr %165, ptr %9, align 8, !dbg !14470
  store i8 %163, ptr %164, align 1, !dbg !14471
  br label %166

166:                                              ; preds = %161, %158
  br label %167

167:                                              ; preds = %166, %147
  br label %168, !dbg !14472

168:                                              ; preds = %167
  %169 = load ptr, ptr %8, align 8, !dbg !14473
  %170 = getelementptr inbounds i8, ptr %169, i32 1, !dbg !14473
  store ptr %170, ptr %8, align 8, !dbg !14473
  br label %20, !dbg !14474, !llvm.loop !14475

171:                                              ; preds = %20
  %172 = load ptr, ptr %9, align 8, !dbg !14477
  store i8 0, ptr %172, align 1, !dbg !14478
  %173 = load ptr, ptr %9, align 8, !dbg !14479
  %174 = load ptr, ptr %7, align 8, !dbg !14480
  %175 = ptrtoint ptr %173 to i64, !dbg !14481
  %176 = ptrtoint ptr %174 to i64, !dbg !14481
  %177 = sub i64 %175, %176, !dbg !14481
  store i64 %177, ptr %6, align 8, !dbg !14482
  br label %178, !dbg !14482

178:                                              ; preds = %171, %146, %17
  %179 = load i64, ptr %6, align 8, !dbg !14483
  ret i64 %179, !dbg !14483
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @key_value_compare_qsort_key(ptr noundef %0, ptr noundef %1) #0 !dbg !14484 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !14485, metadata !DIExpression()), !dbg !14486
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !14487, metadata !DIExpression()), !dbg !14488
  %5 = load ptr, ptr %3, align 8, !dbg !14489
  %6 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %5, i32 0, i32 0, !dbg !14490
  %7 = load ptr, ptr %6, align 8, !dbg !14490
  %8 = load ptr, ptr %4, align 8, !dbg !14491
  %9 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %8, i32 0, i32 0, !dbg !14492
  %10 = load ptr, ptr %9, align 8, !dbg !14492
  %11 = call i32 @strcmp(ptr noundef %7, ptr noundef %10) #20, !dbg !14493
  ret i32 %11, !dbg !14494
}

declare void @qsort(ptr noundef, i64 noundef, i64 noundef, ptr noundef) #5

; Function Attrs: nounwind
declare ptr @strptime(ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: nounwind
declare i64 @timegm(ptr noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @identify_http_path(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !1827 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !14495, metadata !DIExpression()), !dbg !14496
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !14497, metadata !DIExpression()), !dbg !14498
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !14499, metadata !DIExpression()), !dbg !14500
  call void @llvm.dbg.declare(metadata ptr %8, metadata !14501, metadata !DIExpression()), !dbg !14502
  %12 = load ptr, ptr %6, align 8, !dbg !14503
  %13 = load ptr, ptr %7, align 8, !dbg !14504
  %14 = getelementptr inbounds %struct.request_parser_helper, ptr %13, i32 0, i32 0, !dbg !14505
  %15 = load ptr, ptr %14, align 8, !dbg !14505
  %16 = getelementptr inbounds %struct.lwan_value_t_, ptr %15, i32 0, i32 1, !dbg !14506
  %17 = load i64, ptr %16, align 8, !dbg !14506
  %18 = load ptr, ptr %6, align 8, !dbg !14507
  %19 = load ptr, ptr %7, align 8, !dbg !14508
  %20 = getelementptr inbounds %struct.request_parser_helper, ptr %19, i32 0, i32 0, !dbg !14509
  %21 = load ptr, ptr %20, align 8, !dbg !14509
  %22 = getelementptr inbounds %struct.lwan_value_t_, ptr %21, i32 0, i32 0, !dbg !14510
  %23 = load ptr, ptr %22, align 8, !dbg !14510
  %24 = ptrtoint ptr %18 to i64, !dbg !14511
  %25 = ptrtoint ptr %23 to i64, !dbg !14511
  %26 = sub i64 %24, %25, !dbg !14511
  %27 = sub i64 %17, %26, !dbg !14512
  %28 = call ptr @memchr(ptr noundef %12, i32 noundef 13, i64 noundef %27) #20, !dbg !14513
  store ptr %28, ptr %8, align 8, !dbg !14502
  %29 = load ptr, ptr %8, align 8, !dbg !14514
  %30 = icmp ne ptr %29, null, !dbg !14514
  %31 = xor i1 %30, true, !dbg !14514
  %32 = zext i1 %31 to i32, !dbg !14514
  %33 = sext i32 %32 to i64, !dbg !14514
  %34 = icmp ne i64 %33, 0, !dbg !14514
  br i1 %34, label %35, label %36, !dbg !14516

35:                                               ; preds = %3
  store ptr null, ptr %4, align 8, !dbg !14517
  br label %194, !dbg !14517

36:                                               ; preds = %3
  %37 = load ptr, ptr %8, align 8, !dbg !14518
  %38 = load ptr, ptr %6, align 8, !dbg !14518
  %39 = ptrtoint ptr %37 to i64, !dbg !14518
  %40 = ptrtoint ptr %38 to i64, !dbg !14518
  %41 = sub i64 %39, %40, !dbg !14518
  %42 = icmp ult i64 %41, 10, !dbg !14518
  %43 = zext i1 %42 to i32, !dbg !14518
  %44 = sext i32 %43 to i64, !dbg !14518
  %45 = icmp ne i64 %44, 0, !dbg !14518
  br i1 %45, label %46, label %47, !dbg !14520

46:                                               ; preds = %36
  store ptr null, ptr %4, align 8, !dbg !14521
  br label %194, !dbg !14521

47:                                               ; preds = %36
  %48 = load ptr, ptr %8, align 8, !dbg !14522
  store i8 0, ptr %48, align 1, !dbg !14523
  call void @llvm.dbg.declare(metadata ptr %9, metadata !14524, metadata !DIExpression()), !dbg !14525
  %49 = load ptr, ptr %8, align 8, !dbg !14526
  %50 = getelementptr inbounds i8, ptr %49, i64 -9, !dbg !14527
  store ptr %50, ptr %9, align 8, !dbg !14525
  %51 = load ptr, ptr %9, align 8, !dbg !14528
  %52 = getelementptr inbounds i8, ptr %51, i64 1, !dbg !14528
  %53 = load i8, ptr %52, align 1, !dbg !14528
  %54 = sext i8 %53 to i32, !dbg !14528
  %55 = icmp ne i32 %54, 72, !dbg !14528
  %56 = zext i1 %55 to i32, !dbg !14528
  %57 = sext i32 %56 to i64, !dbg !14528
  %58 = icmp ne i64 %57, 0, !dbg !14528
  br i1 %58, label %59, label %60, !dbg !14530

59:                                               ; preds = %47
  store ptr null, ptr %4, align 8, !dbg !14531
  br label %194, !dbg !14531

60:                                               ; preds = %47
  %61 = load ptr, ptr %9, align 8, !dbg !14532
  store i8 0, ptr %61, align 1, !dbg !14533
  %62 = load ptr, ptr %9, align 8, !dbg !14534
  %63 = getelementptr inbounds i8, ptr %62, i64 6, !dbg !14534
  %64 = load i8, ptr %63, align 1, !dbg !14534
  %65 = sext i8 %64 to i32, !dbg !14534
  %66 = icmp ne i32 %65, 49, !dbg !14534
  %67 = zext i1 %66 to i32, !dbg !14534
  %68 = sext i32 %67 to i64, !dbg !14534
  %69 = icmp ne i64 %68, 0, !dbg !14534
  br i1 %69, label %70, label %71, !dbg !14536

70:                                               ; preds = %60
  store ptr null, ptr %4, align 8, !dbg !14537
  br label %194, !dbg !14537

71:                                               ; preds = %60
  %72 = load ptr, ptr %9, align 8, !dbg !14538
  %73 = getelementptr inbounds i8, ptr %72, i64 8, !dbg !14540
  %74 = load i8, ptr %73, align 1, !dbg !14541
  %75 = sext i8 %74 to i32, !dbg !14541
  %76 = icmp eq i32 %75, 48, !dbg !14542
  br i1 %76, label %77, label %82, !dbg !14543

77:                                               ; preds = %71
  %78 = load ptr, ptr %5, align 8, !dbg !14544
  %79 = getelementptr inbounds %struct.lwan_request_t_, ptr %78, i32 0, i32 0, !dbg !14545
  %80 = load i32, ptr %79, align 8, !dbg !14546
  %81 = or i32 %80, 32, !dbg !14546
  store i32 %81, ptr %79, align 8, !dbg !14546
  br label %82, !dbg !14544

82:                                               ; preds = %77, %71
  %83 = load ptr, ptr %6, align 8, !dbg !14547
  %84 = load i8, ptr %83, align 1, !dbg !14547
  %85 = sext i8 %84 to i32, !dbg !14547
  %86 = icmp ne i32 %85, 47, !dbg !14547
  %87 = zext i1 %86 to i32, !dbg !14547
  %88 = sext i32 %87 to i64, !dbg !14547
  %89 = icmp ne i64 %88, 0, !dbg !14547
  br i1 %89, label %90, label %91, !dbg !14549

90:                                               ; preds = %82
  store ptr null, ptr %4, align 8, !dbg !14550
  br label %194, !dbg !14550

91:                                               ; preds = %82
  %92 = load ptr, ptr %6, align 8, !dbg !14551
  %93 = load ptr, ptr %5, align 8, !dbg !14552
  %94 = getelementptr inbounds %struct.lwan_request_t_, ptr %93, i32 0, i32 2, !dbg !14553
  %95 = getelementptr inbounds %struct.lwan_value_t_, ptr %94, i32 0, i32 0, !dbg !14554
  store ptr %92, ptr %95, align 8, !dbg !14555
  %96 = load ptr, ptr %9, align 8, !dbg !14556
  %97 = load ptr, ptr %6, align 8, !dbg !14557
  %98 = ptrtoint ptr %96 to i64, !dbg !14558
  %99 = ptrtoint ptr %97 to i64, !dbg !14558
  %100 = sub i64 %98, %99, !dbg !14558
  %101 = load ptr, ptr %5, align 8, !dbg !14559
  %102 = getelementptr inbounds %struct.lwan_request_t_, ptr %101, i32 0, i32 2, !dbg !14560
  %103 = getelementptr inbounds %struct.lwan_value_t_, ptr %102, i32 0, i32 1, !dbg !14561
  store i64 %100, ptr %103, align 8, !dbg !14562
  call void @llvm.dbg.declare(metadata ptr %10, metadata !14563, metadata !DIExpression()), !dbg !14564
  %104 = load ptr, ptr %6, align 8, !dbg !14565
  %105 = load ptr, ptr %5, align 8, !dbg !14566
  %106 = getelementptr inbounds %struct.lwan_request_t_, ptr %105, i32 0, i32 2, !dbg !14567
  %107 = getelementptr inbounds %struct.lwan_value_t_, ptr %106, i32 0, i32 1, !dbg !14568
  %108 = load i64, ptr %107, align 8, !dbg !14568
  %109 = call ptr @memrchr(ptr noundef %104, i32 noundef 35, i64 noundef %108) #20, !dbg !14569
  store ptr %109, ptr %10, align 8, !dbg !14564
  %110 = load ptr, ptr %10, align 8, !dbg !14570
  %111 = icmp ne ptr %110, null, !dbg !14570
  br i1 %111, label %112, label %138, !dbg !14572

112:                                              ; preds = %91
  %113 = load ptr, ptr %10, align 8, !dbg !14573
  store i8 0, ptr %113, align 1, !dbg !14575
  %114 = load ptr, ptr %10, align 8, !dbg !14576
  %115 = getelementptr inbounds i8, ptr %114, i64 1, !dbg !14577
  %116 = load ptr, ptr %7, align 8, !dbg !14578
  %117 = getelementptr inbounds %struct.request_parser_helper, ptr %116, i32 0, i32 6, !dbg !14579
  %118 = getelementptr inbounds %struct.lwan_value_t_, ptr %117, i32 0, i32 0, !dbg !14580
  store ptr %115, ptr %118, align 8, !dbg !14581
  %119 = load ptr, ptr %9, align 8, !dbg !14582
  %120 = load ptr, ptr %10, align 8, !dbg !14583
  %121 = ptrtoint ptr %119 to i64, !dbg !14584
  %122 = ptrtoint ptr %120 to i64, !dbg !14584
  %123 = sub i64 %121, %122, !dbg !14584
  %124 = sub nsw i64 %123, 1, !dbg !14585
  %125 = load ptr, ptr %7, align 8, !dbg !14586
  %126 = getelementptr inbounds %struct.request_parser_helper, ptr %125, i32 0, i32 6, !dbg !14587
  %127 = getelementptr inbounds %struct.lwan_value_t_, ptr %126, i32 0, i32 1, !dbg !14588
  store i64 %124, ptr %127, align 8, !dbg !14589
  %128 = load ptr, ptr %7, align 8, !dbg !14590
  %129 = getelementptr inbounds %struct.request_parser_helper, ptr %128, i32 0, i32 6, !dbg !14591
  %130 = getelementptr inbounds %struct.lwan_value_t_, ptr %129, i32 0, i32 1, !dbg !14592
  %131 = load i64, ptr %130, align 8, !dbg !14592
  %132 = add i64 %131, 1, !dbg !14593
  %133 = load ptr, ptr %5, align 8, !dbg !14594
  %134 = getelementptr inbounds %struct.lwan_request_t_, ptr %133, i32 0, i32 2, !dbg !14595
  %135 = getelementptr inbounds %struct.lwan_value_t_, ptr %134, i32 0, i32 1, !dbg !14596
  %136 = load i64, ptr %135, align 8, !dbg !14597
  %137 = sub i64 %136, %132, !dbg !14597
  store i64 %137, ptr %135, align 8, !dbg !14597
  br label %138, !dbg !14598

138:                                              ; preds = %112, %91
  call void @llvm.dbg.declare(metadata ptr %11, metadata !14599, metadata !DIExpression()), !dbg !14600
  %139 = load ptr, ptr %6, align 8, !dbg !14601
  %140 = load ptr, ptr %5, align 8, !dbg !14602
  %141 = getelementptr inbounds %struct.lwan_request_t_, ptr %140, i32 0, i32 2, !dbg !14603
  %142 = getelementptr inbounds %struct.lwan_value_t_, ptr %141, i32 0, i32 1, !dbg !14604
  %143 = load i64, ptr %142, align 8, !dbg !14604
  %144 = call ptr @memchr(ptr noundef %139, i32 noundef 63, i64 noundef %143) #20, !dbg !14605
  store ptr %144, ptr %11, align 8, !dbg !14600
  %145 = load ptr, ptr %11, align 8, !dbg !14606
  %146 = icmp ne ptr %145, null, !dbg !14606
  br i1 %146, label %147, label %180, !dbg !14608

147:                                              ; preds = %138
  %148 = load ptr, ptr %11, align 8, !dbg !14609
  store i8 0, ptr %148, align 1, !dbg !14611
  %149 = load ptr, ptr %11, align 8, !dbg !14612
  %150 = getelementptr inbounds i8, ptr %149, i64 1, !dbg !14613
  %151 = load ptr, ptr %7, align 8, !dbg !14614
  %152 = getelementptr inbounds %struct.request_parser_helper, ptr %151, i32 0, i32 5, !dbg !14615
  %153 = getelementptr inbounds %struct.lwan_value_t_, ptr %152, i32 0, i32 0, !dbg !14616
  store ptr %150, ptr %153, align 8, !dbg !14617
  %154 = load ptr, ptr %10, align 8, !dbg !14618
  %155 = icmp ne ptr %154, null, !dbg !14618
  br i1 %155, label %156, label %158, !dbg !14618

156:                                              ; preds = %147
  %157 = load ptr, ptr %10, align 8, !dbg !14619
  br label %160, !dbg !14618

158:                                              ; preds = %147
  %159 = load ptr, ptr %9, align 8, !dbg !14620
  br label %160, !dbg !14618

160:                                              ; preds = %158, %156
  %161 = phi ptr [ %157, %156 ], [ %159, %158 ], !dbg !14618
  %162 = load ptr, ptr %11, align 8, !dbg !14621
  %163 = ptrtoint ptr %161 to i64, !dbg !14622
  %164 = ptrtoint ptr %162 to i64, !dbg !14622
  %165 = sub i64 %163, %164, !dbg !14622
  %166 = sub nsw i64 %165, 1, !dbg !14623
  %167 = load ptr, ptr %7, align 8, !dbg !14624
  %168 = getelementptr inbounds %struct.request_parser_helper, ptr %167, i32 0, i32 5, !dbg !14625
  %169 = getelementptr inbounds %struct.lwan_value_t_, ptr %168, i32 0, i32 1, !dbg !14626
  store i64 %166, ptr %169, align 8, !dbg !14627
  %170 = load ptr, ptr %7, align 8, !dbg !14628
  %171 = getelementptr inbounds %struct.request_parser_helper, ptr %170, i32 0, i32 5, !dbg !14629
  %172 = getelementptr inbounds %struct.lwan_value_t_, ptr %171, i32 0, i32 1, !dbg !14630
  %173 = load i64, ptr %172, align 8, !dbg !14630
  %174 = add i64 %173, 1, !dbg !14631
  %175 = load ptr, ptr %5, align 8, !dbg !14632
  %176 = getelementptr inbounds %struct.lwan_request_t_, ptr %175, i32 0, i32 2, !dbg !14633
  %177 = getelementptr inbounds %struct.lwan_value_t_, ptr %176, i32 0, i32 1, !dbg !14634
  %178 = load i64, ptr %177, align 8, !dbg !14635
  %179 = sub i64 %178, %174, !dbg !14635
  store i64 %179, ptr %177, align 8, !dbg !14635
  br label %180, !dbg !14636

180:                                              ; preds = %160, %138
  %181 = load ptr, ptr %6, align 8, !dbg !14637
  %182 = load ptr, ptr %5, align 8, !dbg !14638
  %183 = getelementptr inbounds %struct.lwan_request_t_, ptr %182, i32 0, i32 3, !dbg !14639
  %184 = getelementptr inbounds %struct.lwan_value_t_, ptr %183, i32 0, i32 0, !dbg !14640
  store ptr %181, ptr %184, align 8, !dbg !14641
  %185 = load ptr, ptr %5, align 8, !dbg !14642
  %186 = getelementptr inbounds %struct.lwan_request_t_, ptr %185, i32 0, i32 2, !dbg !14643
  %187 = getelementptr inbounds %struct.lwan_value_t_, ptr %186, i32 0, i32 1, !dbg !14644
  %188 = load i64, ptr %187, align 8, !dbg !14644
  %189 = load ptr, ptr %5, align 8, !dbg !14645
  %190 = getelementptr inbounds %struct.lwan_request_t_, ptr %189, i32 0, i32 3, !dbg !14646
  %191 = getelementptr inbounds %struct.lwan_value_t_, ptr %190, i32 0, i32 1, !dbg !14647
  store i64 %188, ptr %191, align 8, !dbg !14648
  %192 = load ptr, ptr %8, align 8, !dbg !14649
  %193 = getelementptr inbounds i8, ptr %192, i64 1, !dbg !14650
  store ptr %193, ptr %4, align 8, !dbg !14651
  br label %194, !dbg !14651

194:                                              ; preds = %180, %90, %70, %59, %46, %35
  %195 = load ptr, ptr %4, align 8, !dbg !14652
  ret ptr %195, !dbg !14652
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @parse_headers(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !1738 {
  %4 = alloca ptr, align 8
  %5 = alloca i16, align 2
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca i64, align 8
  %15 = alloca ptr, align 8
  %16 = alloca ptr, align 8
  %17 = alloca ptr, align 8
  %18 = alloca ptr, align 8
  %19 = alloca ptr, align 8
  %20 = alloca ptr, align 8
  %21 = alloca ptr, align 8
  store ptr %0, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !14653, metadata !DIExpression()), !dbg !14654
  store ptr %1, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %10, metadata !14655, metadata !DIExpression()), !dbg !14656
  store ptr %2, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !14657, metadata !DIExpression()), !dbg !14658
  call void @llvm.dbg.declare(metadata ptr %12, metadata !14659, metadata !DIExpression()), !dbg !14661
  %22 = load ptr, ptr %10, align 8, !dbg !14662
  store ptr %22, ptr %12, align 8, !dbg !14661
  br label %23, !dbg !14663

23:                                               ; preds = %539, %3
  %24 = load ptr, ptr %12, align 8, !dbg !14664
  %25 = load i8, ptr %24, align 1, !dbg !14666
  %26 = icmp ne i8 %25, 0, !dbg !14667
  br i1 %26, label %27, label %542, !dbg !14667

27:                                               ; preds = %23
  call void @llvm.dbg.declare(metadata ptr %13, metadata !14668, metadata !DIExpression()), !dbg !14670
  call void @llvm.dbg.declare(metadata ptr %14, metadata !14671, metadata !DIExpression()), !dbg !14672
  br label %28, !dbg !14673

28:                                               ; preds = %389, %253, %27
  call void @llvm.dbg.label(metadata !14674), !dbg !14675
  %29 = load ptr, ptr %12, align 8, !dbg !14676
  %30 = getelementptr inbounds i8, ptr %29, i64 4, !dbg !14678
  %31 = load ptr, ptr %11, align 8, !dbg !14679
  %32 = icmp uge ptr %30, %31, !dbg !14680
  br i1 %32, label %33, label %34, !dbg !14681

33:                                               ; preds = %28
  br label %542, !dbg !14682

34:                                               ; preds = %28
  %35 = load ptr, ptr %12, align 8, !dbg !14683
  store ptr %35, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !14684, metadata !DIExpression()), !dbg !14690
  call void @llvm.dbg.declare(metadata ptr %5, metadata !14692, metadata !DIExpression()), !dbg !14693
  %36 = load ptr, ptr %4, align 8, !dbg !14694
  call void @llvm.memcpy.p0.p0.i64(ptr align 2 %5, ptr align 1 %36, i64 2, i1 false), !dbg !14695
  %37 = load i16, ptr %5, align 2, !dbg !14696
  %38 = sext i16 %37 to i32, !dbg !14683
  switch i32 %38, label %47 [
    i32 2573, label %39
  ], !dbg !14683

39:                                               ; preds = %34
  %40 = load ptr, ptr %12, align 8, !dbg !14697
  store i8 0, ptr %40, align 1, !dbg !14699
  %41 = load ptr, ptr %12, align 8, !dbg !14700
  %42 = getelementptr inbounds i8, ptr %41, i64 3, !dbg !14701
  %43 = getelementptr inbounds i8, ptr %42, i64 -1, !dbg !14702
  %44 = load ptr, ptr %9, align 8, !dbg !14703
  %45 = getelementptr inbounds %struct.request_parser_helper, ptr %44, i32 0, i32 1, !dbg !14704
  store ptr %43, ptr %45, align 8, !dbg !14705
  %46 = load ptr, ptr %12, align 8, !dbg !14706
  store ptr %46, ptr %8, align 8, !dbg !14707
  br label %544, !dbg !14707

47:                                               ; preds = %34
  %48 = load ptr, ptr %12, align 8, !dbg !14708
  store ptr %48, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !12612, metadata !DIExpression()), !dbg !14709
  call void @llvm.dbg.declare(metadata ptr %7, metadata !12618, metadata !DIExpression()), !dbg !14711
  %49 = load ptr, ptr %6, align 8, !dbg !14712
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %7, ptr align 1 %49, i64 4, i1 false), !dbg !14713
  %50 = load i32, ptr %7, align 4, !dbg !14714
  %51 = or i32 %50, 538976288, !dbg !14708
  switch i32 %51, label %526 [
    i32 1668179245, label %52
    i32 1887007789, label %119
    i32 1852140589, label %186
    i32 1701012321, label %253
    i32 1752462689, label %256
    i32 1852731235, label %323
    i32 1953394531, label %389
    i32 1831691881, label %392
    i32 1735287154, label %459
  ], !dbg !14708

52:                                               ; preds = %47
  br label %53, !dbg !14715

53:                                               ; preds = %52
  call void @llvm.dbg.declare(metadata ptr %15, metadata !14717, metadata !DIExpression()), !dbg !14719
  %54 = load ptr, ptr %12, align 8, !dbg !14719
  %55 = getelementptr inbounds i8, ptr %54, i64 9, !dbg !14719
  store ptr %55, ptr %12, align 8, !dbg !14719
  %56 = load ptr, ptr %12, align 8, !dbg !14720
  %57 = load ptr, ptr %11, align 8, !dbg !14720
  %58 = icmp uge ptr %56, %57, !dbg !14720
  br i1 %58, label %59, label %60, !dbg !14719

59:                                               ; preds = %53
  store ptr null, ptr %8, align 8, !dbg !14720
  br label %544, !dbg !14720

60:                                               ; preds = %53
  %61 = load ptr, ptr %12, align 8, !dbg !14722
  %62 = getelementptr inbounds i8, ptr %61, i32 1, !dbg !14722
  store ptr %62, ptr %12, align 8, !dbg !14722
  %63 = load i8, ptr %61, align 1, !dbg !14722
  %64 = sext i8 %63 to i32, !dbg !14722
  %65 = icmp ne i32 %64, 58, !dbg !14722
  %66 = zext i1 %65 to i32, !dbg !14722
  %67 = sext i32 %66 to i64, !dbg !14722
  %68 = icmp ne i64 %67, 0, !dbg !14722
  br i1 %68, label %69, label %70, !dbg !14719

69:                                               ; preds = %60
  br label %527, !dbg !14722

70:                                               ; preds = %60
  %71 = load ptr, ptr %12, align 8, !dbg !14724
  %72 = getelementptr inbounds i8, ptr %71, i32 1, !dbg !14724
  store ptr %72, ptr %12, align 8, !dbg !14724
  %73 = load i8, ptr %71, align 1, !dbg !14724
  %74 = sext i8 %73 to i32, !dbg !14724
  %75 = icmp ne i32 %74, 32, !dbg !14724
  %76 = zext i1 %75 to i32, !dbg !14724
  %77 = sext i32 %76 to i64, !dbg !14724
  %78 = icmp ne i64 %77, 0, !dbg !14724
  br i1 %78, label %79, label %80, !dbg !14719

79:                                               ; preds = %70
  br label %527, !dbg !14724

80:                                               ; preds = %70
  %81 = load ptr, ptr %12, align 8, !dbg !14726
  %82 = call ptr @strchr(ptr noundef %81, i32 noundef 13) #20, !dbg !14726
  store ptr %82, ptr %15, align 8, !dbg !14726
  %83 = icmp ne ptr %82, null, !dbg !14726
  %84 = xor i1 %83, true, !dbg !14726
  %85 = xor i1 %84, true, !dbg !14726
  %86 = zext i1 %85 to i32, !dbg !14726
  %87 = sext i32 %86 to i64, !dbg !14726
  %88 = icmp ne i64 %87, 0, !dbg !14726
  br i1 %88, label %89, label %108, !dbg !14719

89:                                               ; preds = %80
  %90 = load ptr, ptr %15, align 8, !dbg !14728
  store i8 0, ptr %90, align 1, !dbg !14728
  %91 = load ptr, ptr %12, align 8, !dbg !14728
  store ptr %91, ptr %13, align 8, !dbg !14728
  %92 = load ptr, ptr %15, align 8, !dbg !14728
  %93 = getelementptr inbounds i8, ptr %92, i64 1, !dbg !14728
  store ptr %93, ptr %12, align 8, !dbg !14728
  %94 = load ptr, ptr %15, align 8, !dbg !14728
  %95 = load ptr, ptr %13, align 8, !dbg !14728
  %96 = ptrtoint ptr %94 to i64, !dbg !14728
  %97 = ptrtoint ptr %95 to i64, !dbg !14728
  %98 = sub i64 %96, %97, !dbg !14728
  store i64 %98, ptr %14, align 8, !dbg !14728
  %99 = load ptr, ptr %12, align 8, !dbg !14730
  %100 = load i8, ptr %99, align 1, !dbg !14730
  %101 = sext i8 %100 to i32, !dbg !14730
  %102 = icmp ne i32 %101, 10, !dbg !14730
  %103 = zext i1 %102 to i32, !dbg !14730
  %104 = sext i32 %103 to i64, !dbg !14730
  %105 = icmp ne i64 %104, 0, !dbg !14730
  br i1 %105, label %106, label %107, !dbg !14728

106:                                              ; preds = %89
  br label %527, !dbg !14730

107:                                              ; preds = %89
  br label %109, !dbg !14728

108:                                              ; preds = %80
  br label %527, !dbg !14726

109:                                              ; preds = %107
  br label %110, !dbg !14719

110:                                              ; preds = %109
  %111 = load ptr, ptr %13, align 8, !dbg !14732
  %112 = load ptr, ptr %9, align 8, !dbg !14733
  %113 = getelementptr inbounds %struct.request_parser_helper, ptr %112, i32 0, i32 2, !dbg !14734
  %114 = getelementptr inbounds %struct.lwan_value_t_, ptr %113, i32 0, i32 0, !dbg !14735
  store ptr %111, ptr %114, align 8, !dbg !14736
  %115 = load i64, ptr %14, align 8, !dbg !14737
  %116 = load ptr, ptr %9, align 8, !dbg !14738
  %117 = getelementptr inbounds %struct.request_parser_helper, ptr %116, i32 0, i32 2, !dbg !14739
  %118 = getelementptr inbounds %struct.lwan_value_t_, ptr %117, i32 0, i32 1, !dbg !14740
  store i64 %115, ptr %118, align 8, !dbg !14741
  br label %526, !dbg !14742

119:                                              ; preds = %47
  br label %120, !dbg !14743

120:                                              ; preds = %119
  call void @llvm.dbg.declare(metadata ptr %16, metadata !14744, metadata !DIExpression()), !dbg !14746
  %121 = load ptr, ptr %12, align 8, !dbg !14746
  %122 = getelementptr inbounds i8, ptr %121, i64 5, !dbg !14746
  store ptr %122, ptr %12, align 8, !dbg !14746
  %123 = load ptr, ptr %12, align 8, !dbg !14747
  %124 = load ptr, ptr %11, align 8, !dbg !14747
  %125 = icmp uge ptr %123, %124, !dbg !14747
  br i1 %125, label %126, label %127, !dbg !14746

126:                                              ; preds = %120
  store ptr null, ptr %8, align 8, !dbg !14747
  br label %544, !dbg !14747

127:                                              ; preds = %120
  %128 = load ptr, ptr %12, align 8, !dbg !14749
  %129 = getelementptr inbounds i8, ptr %128, i32 1, !dbg !14749
  store ptr %129, ptr %12, align 8, !dbg !14749
  %130 = load i8, ptr %128, align 1, !dbg !14749
  %131 = sext i8 %130 to i32, !dbg !14749
  %132 = icmp ne i32 %131, 58, !dbg !14749
  %133 = zext i1 %132 to i32, !dbg !14749
  %134 = sext i32 %133 to i64, !dbg !14749
  %135 = icmp ne i64 %134, 0, !dbg !14749
  br i1 %135, label %136, label %137, !dbg !14746

136:                                              ; preds = %127
  br label %527, !dbg !14749

137:                                              ; preds = %127
  %138 = load ptr, ptr %12, align 8, !dbg !14751
  %139 = getelementptr inbounds i8, ptr %138, i32 1, !dbg !14751
  store ptr %139, ptr %12, align 8, !dbg !14751
  %140 = load i8, ptr %138, align 1, !dbg !14751
  %141 = sext i8 %140 to i32, !dbg !14751
  %142 = icmp ne i32 %141, 32, !dbg !14751
  %143 = zext i1 %142 to i32, !dbg !14751
  %144 = sext i32 %143 to i64, !dbg !14751
  %145 = icmp ne i64 %144, 0, !dbg !14751
  br i1 %145, label %146, label %147, !dbg !14746

146:                                              ; preds = %137
  br label %527, !dbg !14751

147:                                              ; preds = %137
  %148 = load ptr, ptr %12, align 8, !dbg !14753
  %149 = call ptr @strchr(ptr noundef %148, i32 noundef 13) #20, !dbg !14753
  store ptr %149, ptr %16, align 8, !dbg !14753
  %150 = icmp ne ptr %149, null, !dbg !14753
  %151 = xor i1 %150, true, !dbg !14753
  %152 = xor i1 %151, true, !dbg !14753
  %153 = zext i1 %152 to i32, !dbg !14753
  %154 = sext i32 %153 to i64, !dbg !14753
  %155 = icmp ne i64 %154, 0, !dbg !14753
  br i1 %155, label %156, label %175, !dbg !14746

156:                                              ; preds = %147
  %157 = load ptr, ptr %16, align 8, !dbg !14755
  store i8 0, ptr %157, align 1, !dbg !14755
  %158 = load ptr, ptr %12, align 8, !dbg !14755
  store ptr %158, ptr %13, align 8, !dbg !14755
  %159 = load ptr, ptr %16, align 8, !dbg !14755
  %160 = getelementptr inbounds i8, ptr %159, i64 1, !dbg !14755
  store ptr %160, ptr %12, align 8, !dbg !14755
  %161 = load ptr, ptr %16, align 8, !dbg !14755
  %162 = load ptr, ptr %13, align 8, !dbg !14755
  %163 = ptrtoint ptr %161 to i64, !dbg !14755
  %164 = ptrtoint ptr %162 to i64, !dbg !14755
  %165 = sub i64 %163, %164, !dbg !14755
  store i64 %165, ptr %14, align 8, !dbg !14755
  %166 = load ptr, ptr %12, align 8, !dbg !14757
  %167 = load i8, ptr %166, align 1, !dbg !14757
  %168 = sext i8 %167 to i32, !dbg !14757
  %169 = icmp ne i32 %168, 10, !dbg !14757
  %170 = zext i1 %169 to i32, !dbg !14757
  %171 = sext i32 %170 to i64, !dbg !14757
  %172 = icmp ne i64 %171, 0, !dbg !14757
  br i1 %172, label %173, label %174, !dbg !14755

173:                                              ; preds = %156
  br label %527, !dbg !14757

174:                                              ; preds = %156
  br label %176, !dbg !14755

175:                                              ; preds = %147
  br label %527, !dbg !14753

176:                                              ; preds = %174
  br label %177, !dbg !14746

177:                                              ; preds = %176
  %178 = load ptr, ptr %13, align 8, !dbg !14759
  %179 = load ptr, ptr %9, align 8, !dbg !14760
  %180 = getelementptr inbounds %struct.request_parser_helper, ptr %179, i32 0, i32 9, !dbg !14761
  %181 = getelementptr inbounds %struct.lwan_value_t_, ptr %180, i32 0, i32 0, !dbg !14762
  store ptr %178, ptr %181, align 8, !dbg !14763
  %182 = load i64, ptr %14, align 8, !dbg !14764
  %183 = load ptr, ptr %9, align 8, !dbg !14765
  %184 = getelementptr inbounds %struct.request_parser_helper, ptr %183, i32 0, i32 9, !dbg !14766
  %185 = getelementptr inbounds %struct.lwan_value_t_, ptr %184, i32 0, i32 1, !dbg !14767
  store i64 %182, ptr %185, align 8, !dbg !14768
  br label %526, !dbg !14769

186:                                              ; preds = %47
  br label %187, !dbg !14770

187:                                              ; preds = %186
  call void @llvm.dbg.declare(metadata ptr %17, metadata !14771, metadata !DIExpression()), !dbg !14773
  %188 = load ptr, ptr %12, align 8, !dbg !14773
  %189 = getelementptr inbounds i8, ptr %188, i64 7, !dbg !14773
  store ptr %189, ptr %12, align 8, !dbg !14773
  %190 = load ptr, ptr %12, align 8, !dbg !14774
  %191 = load ptr, ptr %11, align 8, !dbg !14774
  %192 = icmp uge ptr %190, %191, !dbg !14774
  br i1 %192, label %193, label %194, !dbg !14773

193:                                              ; preds = %187
  store ptr null, ptr %8, align 8, !dbg !14774
  br label %544, !dbg !14774

194:                                              ; preds = %187
  %195 = load ptr, ptr %12, align 8, !dbg !14776
  %196 = getelementptr inbounds i8, ptr %195, i32 1, !dbg !14776
  store ptr %196, ptr %12, align 8, !dbg !14776
  %197 = load i8, ptr %195, align 1, !dbg !14776
  %198 = sext i8 %197 to i32, !dbg !14776
  %199 = icmp ne i32 %198, 58, !dbg !14776
  %200 = zext i1 %199 to i32, !dbg !14776
  %201 = sext i32 %200 to i64, !dbg !14776
  %202 = icmp ne i64 %201, 0, !dbg !14776
  br i1 %202, label %203, label %204, !dbg !14773

203:                                              ; preds = %194
  br label %527, !dbg !14776

204:                                              ; preds = %194
  %205 = load ptr, ptr %12, align 8, !dbg !14778
  %206 = getelementptr inbounds i8, ptr %205, i32 1, !dbg !14778
  store ptr %206, ptr %12, align 8, !dbg !14778
  %207 = load i8, ptr %205, align 1, !dbg !14778
  %208 = sext i8 %207 to i32, !dbg !14778
  %209 = icmp ne i32 %208, 32, !dbg !14778
  %210 = zext i1 %209 to i32, !dbg !14778
  %211 = sext i32 %210 to i64, !dbg !14778
  %212 = icmp ne i64 %211, 0, !dbg !14778
  br i1 %212, label %213, label %214, !dbg !14773

213:                                              ; preds = %204
  br label %527, !dbg !14778

214:                                              ; preds = %204
  %215 = load ptr, ptr %12, align 8, !dbg !14780
  %216 = call ptr @strchr(ptr noundef %215, i32 noundef 13) #20, !dbg !14780
  store ptr %216, ptr %17, align 8, !dbg !14780
  %217 = icmp ne ptr %216, null, !dbg !14780
  %218 = xor i1 %217, true, !dbg !14780
  %219 = xor i1 %218, true, !dbg !14780
  %220 = zext i1 %219 to i32, !dbg !14780
  %221 = sext i32 %220 to i64, !dbg !14780
  %222 = icmp ne i64 %221, 0, !dbg !14780
  br i1 %222, label %223, label %242, !dbg !14773

223:                                              ; preds = %214
  %224 = load ptr, ptr %17, align 8, !dbg !14782
  store i8 0, ptr %224, align 1, !dbg !14782
  %225 = load ptr, ptr %12, align 8, !dbg !14782
  store ptr %225, ptr %13, align 8, !dbg !14782
  %226 = load ptr, ptr %17, align 8, !dbg !14782
  %227 = getelementptr inbounds i8, ptr %226, i64 1, !dbg !14782
  store ptr %227, ptr %12, align 8, !dbg !14782
  %228 = load ptr, ptr %17, align 8, !dbg !14782
  %229 = load ptr, ptr %13, align 8, !dbg !14782
  %230 = ptrtoint ptr %228 to i64, !dbg !14782
  %231 = ptrtoint ptr %229 to i64, !dbg !14782
  %232 = sub i64 %230, %231, !dbg !14782
  store i64 %232, ptr %14, align 8, !dbg !14782
  %233 = load ptr, ptr %12, align 8, !dbg !14784
  %234 = load i8, ptr %233, align 1, !dbg !14784
  %235 = sext i8 %234 to i32, !dbg !14784
  %236 = icmp ne i32 %235, 10, !dbg !14784
  %237 = zext i1 %236 to i32, !dbg !14784
  %238 = sext i32 %237 to i64, !dbg !14784
  %239 = icmp ne i64 %238, 0, !dbg !14784
  br i1 %239, label %240, label %241, !dbg !14782

240:                                              ; preds = %223
  br label %527, !dbg !14784

241:                                              ; preds = %223
  br label %243, !dbg !14782

242:                                              ; preds = %214
  br label %527, !dbg !14780

243:                                              ; preds = %241
  br label %244, !dbg !14773

244:                                              ; preds = %243
  %245 = load ptr, ptr %13, align 8, !dbg !14786
  %246 = load ptr, ptr %9, align 8, !dbg !14787
  %247 = getelementptr inbounds %struct.request_parser_helper, ptr %246, i32 0, i32 7, !dbg !14788
  %248 = getelementptr inbounds %struct.lwan_value_t_, ptr %247, i32 0, i32 0, !dbg !14789
  store ptr %245, ptr %248, align 8, !dbg !14790
  %249 = load i64, ptr %14, align 8, !dbg !14791
  %250 = load ptr, ptr %9, align 8, !dbg !14792
  %251 = getelementptr inbounds %struct.request_parser_helper, ptr %250, i32 0, i32 7, !dbg !14793
  %252 = getelementptr inbounds %struct.lwan_value_t_, ptr %251, i32 0, i32 1, !dbg !14794
  store i64 %249, ptr %252, align 8, !dbg !14795
  br label %526, !dbg !14796

253:                                              ; preds = %47
  %254 = load ptr, ptr %12, align 8, !dbg !14797
  %255 = getelementptr inbounds i8, ptr %254, i64 6, !dbg !14797
  store ptr %255, ptr %12, align 8, !dbg !14797
  br label %28, !dbg !14798

256:                                              ; preds = %47
  br label %257, !dbg !14799

257:                                              ; preds = %256
  call void @llvm.dbg.declare(metadata ptr %18, metadata !14800, metadata !DIExpression()), !dbg !14802
  %258 = load ptr, ptr %12, align 8, !dbg !14802
  %259 = getelementptr inbounds i8, ptr %258, i64 13, !dbg !14802
  store ptr %259, ptr %12, align 8, !dbg !14802
  %260 = load ptr, ptr %12, align 8, !dbg !14803
  %261 = load ptr, ptr %11, align 8, !dbg !14803
  %262 = icmp uge ptr %260, %261, !dbg !14803
  br i1 %262, label %263, label %264, !dbg !14802

263:                                              ; preds = %257
  store ptr null, ptr %8, align 8, !dbg !14803
  br label %544, !dbg !14803

264:                                              ; preds = %257
  %265 = load ptr, ptr %12, align 8, !dbg !14805
  %266 = getelementptr inbounds i8, ptr %265, i32 1, !dbg !14805
  store ptr %266, ptr %12, align 8, !dbg !14805
  %267 = load i8, ptr %265, align 1, !dbg !14805
  %268 = sext i8 %267 to i32, !dbg !14805
  %269 = icmp ne i32 %268, 58, !dbg !14805
  %270 = zext i1 %269 to i32, !dbg !14805
  %271 = sext i32 %270 to i64, !dbg !14805
  %272 = icmp ne i64 %271, 0, !dbg !14805
  br i1 %272, label %273, label %274, !dbg !14802

273:                                              ; preds = %264
  br label %527, !dbg !14805

274:                                              ; preds = %264
  %275 = load ptr, ptr %12, align 8, !dbg !14807
  %276 = getelementptr inbounds i8, ptr %275, i32 1, !dbg !14807
  store ptr %276, ptr %12, align 8, !dbg !14807
  %277 = load i8, ptr %275, align 1, !dbg !14807
  %278 = sext i8 %277 to i32, !dbg !14807
  %279 = icmp ne i32 %278, 32, !dbg !14807
  %280 = zext i1 %279 to i32, !dbg !14807
  %281 = sext i32 %280 to i64, !dbg !14807
  %282 = icmp ne i64 %281, 0, !dbg !14807
  br i1 %282, label %283, label %284, !dbg !14802

283:                                              ; preds = %274
  br label %527, !dbg !14807

284:                                              ; preds = %274
  %285 = load ptr, ptr %12, align 8, !dbg !14809
  %286 = call ptr @strchr(ptr noundef %285, i32 noundef 13) #20, !dbg !14809
  store ptr %286, ptr %18, align 8, !dbg !14809
  %287 = icmp ne ptr %286, null, !dbg !14809
  %288 = xor i1 %287, true, !dbg !14809
  %289 = xor i1 %288, true, !dbg !14809
  %290 = zext i1 %289 to i32, !dbg !14809
  %291 = sext i32 %290 to i64, !dbg !14809
  %292 = icmp ne i64 %291, 0, !dbg !14809
  br i1 %292, label %293, label %312, !dbg !14802

293:                                              ; preds = %284
  %294 = load ptr, ptr %18, align 8, !dbg !14811
  store i8 0, ptr %294, align 1, !dbg !14811
  %295 = load ptr, ptr %12, align 8, !dbg !14811
  store ptr %295, ptr %13, align 8, !dbg !14811
  %296 = load ptr, ptr %18, align 8, !dbg !14811
  %297 = getelementptr inbounds i8, ptr %296, i64 1, !dbg !14811
  store ptr %297, ptr %12, align 8, !dbg !14811
  %298 = load ptr, ptr %18, align 8, !dbg !14811
  %299 = load ptr, ptr %13, align 8, !dbg !14811
  %300 = ptrtoint ptr %298 to i64, !dbg !14811
  %301 = ptrtoint ptr %299 to i64, !dbg !14811
  %302 = sub i64 %300, %301, !dbg !14811
  store i64 %302, ptr %14, align 8, !dbg !14811
  %303 = load ptr, ptr %12, align 8, !dbg !14813
  %304 = load i8, ptr %303, align 1, !dbg !14813
  %305 = sext i8 %304 to i32, !dbg !14813
  %306 = icmp ne i32 %305, 10, !dbg !14813
  %307 = zext i1 %306 to i32, !dbg !14813
  %308 = sext i32 %307 to i64, !dbg !14813
  %309 = icmp ne i64 %308, 0, !dbg !14813
  br i1 %309, label %310, label %311, !dbg !14811

310:                                              ; preds = %293
  br label %527, !dbg !14813

311:                                              ; preds = %293
  br label %313, !dbg !14811

312:                                              ; preds = %284
  br label %527, !dbg !14809

313:                                              ; preds = %311
  br label %314, !dbg !14802

314:                                              ; preds = %313
  %315 = load ptr, ptr %13, align 8, !dbg !14815
  %316 = load ptr, ptr %9, align 8, !dbg !14816
  %317 = getelementptr inbounds %struct.request_parser_helper, ptr %316, i32 0, i32 10, !dbg !14817
  %318 = getelementptr inbounds %struct.lwan_value_t_, ptr %317, i32 0, i32 0, !dbg !14818
  store ptr %315, ptr %318, align 8, !dbg !14819
  %319 = load i64, ptr %14, align 8, !dbg !14820
  %320 = load ptr, ptr %9, align 8, !dbg !14821
  %321 = getelementptr inbounds %struct.request_parser_helper, ptr %320, i32 0, i32 10, !dbg !14822
  %322 = getelementptr inbounds %struct.lwan_value_t_, ptr %321, i32 0, i32 1, !dbg !14823
  store i64 %319, ptr %322, align 8, !dbg !14824
  br label %526, !dbg !14825

323:                                              ; preds = %47
  br label %324, !dbg !14826

324:                                              ; preds = %323
  call void @llvm.dbg.declare(metadata ptr %19, metadata !14827, metadata !DIExpression()), !dbg !14829
  %325 = load ptr, ptr %12, align 8, !dbg !14829
  %326 = getelementptr inbounds i8, ptr %325, i64 10, !dbg !14829
  store ptr %326, ptr %12, align 8, !dbg !14829
  %327 = load ptr, ptr %12, align 8, !dbg !14830
  %328 = load ptr, ptr %11, align 8, !dbg !14830
  %329 = icmp uge ptr %327, %328, !dbg !14830
  br i1 %329, label %330, label %331, !dbg !14829

330:                                              ; preds = %324
  store ptr null, ptr %8, align 8, !dbg !14830
  br label %544, !dbg !14830

331:                                              ; preds = %324
  %332 = load ptr, ptr %12, align 8, !dbg !14832
  %333 = getelementptr inbounds i8, ptr %332, i32 1, !dbg !14832
  store ptr %333, ptr %12, align 8, !dbg !14832
  %334 = load i8, ptr %332, align 1, !dbg !14832
  %335 = sext i8 %334 to i32, !dbg !14832
  %336 = icmp ne i32 %335, 58, !dbg !14832
  %337 = zext i1 %336 to i32, !dbg !14832
  %338 = sext i32 %337 to i64, !dbg !14832
  %339 = icmp ne i64 %338, 0, !dbg !14832
  br i1 %339, label %340, label %341, !dbg !14829

340:                                              ; preds = %331
  br label %527, !dbg !14832

341:                                              ; preds = %331
  %342 = load ptr, ptr %12, align 8, !dbg !14834
  %343 = getelementptr inbounds i8, ptr %342, i32 1, !dbg !14834
  store ptr %343, ptr %12, align 8, !dbg !14834
  %344 = load i8, ptr %342, align 1, !dbg !14834
  %345 = sext i8 %344 to i32, !dbg !14834
  %346 = icmp ne i32 %345, 32, !dbg !14834
  %347 = zext i1 %346 to i32, !dbg !14834
  %348 = sext i32 %347 to i64, !dbg !14834
  %349 = icmp ne i64 %348, 0, !dbg !14834
  br i1 %349, label %350, label %351, !dbg !14829

350:                                              ; preds = %341
  br label %527, !dbg !14834

351:                                              ; preds = %341
  %352 = load ptr, ptr %12, align 8, !dbg !14836
  %353 = call ptr @strchr(ptr noundef %352, i32 noundef 13) #20, !dbg !14836
  store ptr %353, ptr %19, align 8, !dbg !14836
  %354 = icmp ne ptr %353, null, !dbg !14836
  %355 = xor i1 %354, true, !dbg !14836
  %356 = xor i1 %355, true, !dbg !14836
  %357 = zext i1 %356 to i32, !dbg !14836
  %358 = sext i32 %357 to i64, !dbg !14836
  %359 = icmp ne i64 %358, 0, !dbg !14836
  br i1 %359, label %360, label %379, !dbg !14829

360:                                              ; preds = %351
  %361 = load ptr, ptr %19, align 8, !dbg !14838
  store i8 0, ptr %361, align 1, !dbg !14838
  %362 = load ptr, ptr %12, align 8, !dbg !14838
  store ptr %362, ptr %13, align 8, !dbg !14838
  %363 = load ptr, ptr %19, align 8, !dbg !14838
  %364 = getelementptr inbounds i8, ptr %363, i64 1, !dbg !14838
  store ptr %364, ptr %12, align 8, !dbg !14838
  %365 = load ptr, ptr %19, align 8, !dbg !14838
  %366 = load ptr, ptr %13, align 8, !dbg !14838
  %367 = ptrtoint ptr %365 to i64, !dbg !14838
  %368 = ptrtoint ptr %366 to i64, !dbg !14838
  %369 = sub i64 %367, %368, !dbg !14838
  store i64 %369, ptr %14, align 8, !dbg !14838
  %370 = load ptr, ptr %12, align 8, !dbg !14840
  %371 = load i8, ptr %370, align 1, !dbg !14840
  %372 = sext i8 %371 to i32, !dbg !14840
  %373 = icmp ne i32 %372, 10, !dbg !14840
  %374 = zext i1 %373 to i32, !dbg !14840
  %375 = sext i32 %374 to i64, !dbg !14840
  %376 = icmp ne i64 %375, 0, !dbg !14840
  br i1 %376, label %377, label %378, !dbg !14838

377:                                              ; preds = %360
  br label %527, !dbg !14840

378:                                              ; preds = %360
  br label %380, !dbg !14838

379:                                              ; preds = %351
  br label %527, !dbg !14836

380:                                              ; preds = %378
  br label %381, !dbg !14829

381:                                              ; preds = %380
  %382 = load ptr, ptr %13, align 8, !dbg !14842
  %383 = load i8, ptr %382, align 1, !dbg !14843
  %384 = sext i8 %383 to i32, !dbg !14843
  %385 = or i32 %384, 32, !dbg !14844
  %386 = trunc i32 %385 to i8, !dbg !14845
  %387 = load ptr, ptr %9, align 8, !dbg !14846
  %388 = getelementptr inbounds %struct.request_parser_helper, ptr %387, i32 0, i32 11, !dbg !14847
  store i8 %386, ptr %388, align 8, !dbg !14848
  br label %526, !dbg !14849

389:                                              ; preds = %47
  %390 = load ptr, ptr %12, align 8, !dbg !14850
  %391 = getelementptr inbounds i8, ptr %390, i64 7, !dbg !14850
  store ptr %391, ptr %12, align 8, !dbg !14850
  br label %28, !dbg !14851

392:                                              ; preds = %47
  br label %393, !dbg !14852

393:                                              ; preds = %392
  call void @llvm.dbg.declare(metadata ptr %20, metadata !14853, metadata !DIExpression()), !dbg !14855
  %394 = load ptr, ptr %12, align 8, !dbg !14855
  %395 = getelementptr inbounds i8, ptr %394, i64 17, !dbg !14855
  store ptr %395, ptr %12, align 8, !dbg !14855
  %396 = load ptr, ptr %12, align 8, !dbg !14856
  %397 = load ptr, ptr %11, align 8, !dbg !14856
  %398 = icmp uge ptr %396, %397, !dbg !14856
  br i1 %398, label %399, label %400, !dbg !14855

399:                                              ; preds = %393
  store ptr null, ptr %8, align 8, !dbg !14856
  br label %544, !dbg !14856

400:                                              ; preds = %393
  %401 = load ptr, ptr %12, align 8, !dbg !14858
  %402 = getelementptr inbounds i8, ptr %401, i32 1, !dbg !14858
  store ptr %402, ptr %12, align 8, !dbg !14858
  %403 = load i8, ptr %401, align 1, !dbg !14858
  %404 = sext i8 %403 to i32, !dbg !14858
  %405 = icmp ne i32 %404, 58, !dbg !14858
  %406 = zext i1 %405 to i32, !dbg !14858
  %407 = sext i32 %406 to i64, !dbg !14858
  %408 = icmp ne i64 %407, 0, !dbg !14858
  br i1 %408, label %409, label %410, !dbg !14855

409:                                              ; preds = %400
  br label %527, !dbg !14858

410:                                              ; preds = %400
  %411 = load ptr, ptr %12, align 8, !dbg !14860
  %412 = getelementptr inbounds i8, ptr %411, i32 1, !dbg !14860
  store ptr %412, ptr %12, align 8, !dbg !14860
  %413 = load i8, ptr %411, align 1, !dbg !14860
  %414 = sext i8 %413 to i32, !dbg !14860
  %415 = icmp ne i32 %414, 32, !dbg !14860
  %416 = zext i1 %415 to i32, !dbg !14860
  %417 = sext i32 %416 to i64, !dbg !14860
  %418 = icmp ne i64 %417, 0, !dbg !14860
  br i1 %418, label %419, label %420, !dbg !14855

419:                                              ; preds = %410
  br label %527, !dbg !14860

420:                                              ; preds = %410
  %421 = load ptr, ptr %12, align 8, !dbg !14862
  %422 = call ptr @strchr(ptr noundef %421, i32 noundef 13) #20, !dbg !14862
  store ptr %422, ptr %20, align 8, !dbg !14862
  %423 = icmp ne ptr %422, null, !dbg !14862
  %424 = xor i1 %423, true, !dbg !14862
  %425 = xor i1 %424, true, !dbg !14862
  %426 = zext i1 %425 to i32, !dbg !14862
  %427 = sext i32 %426 to i64, !dbg !14862
  %428 = icmp ne i64 %427, 0, !dbg !14862
  br i1 %428, label %429, label %448, !dbg !14855

429:                                              ; preds = %420
  %430 = load ptr, ptr %20, align 8, !dbg !14864
  store i8 0, ptr %430, align 1, !dbg !14864
  %431 = load ptr, ptr %12, align 8, !dbg !14864
  store ptr %431, ptr %13, align 8, !dbg !14864
  %432 = load ptr, ptr %20, align 8, !dbg !14864
  %433 = getelementptr inbounds i8, ptr %432, i64 1, !dbg !14864
  store ptr %433, ptr %12, align 8, !dbg !14864
  %434 = load ptr, ptr %20, align 8, !dbg !14864
  %435 = load ptr, ptr %13, align 8, !dbg !14864
  %436 = ptrtoint ptr %434 to i64, !dbg !14864
  %437 = ptrtoint ptr %435 to i64, !dbg !14864
  %438 = sub i64 %436, %437, !dbg !14864
  store i64 %438, ptr %14, align 8, !dbg !14864
  %439 = load ptr, ptr %12, align 8, !dbg !14866
  %440 = load i8, ptr %439, align 1, !dbg !14866
  %441 = sext i8 %440 to i32, !dbg !14866
  %442 = icmp ne i32 %441, 10, !dbg !14866
  %443 = zext i1 %442 to i32, !dbg !14866
  %444 = sext i32 %443 to i64, !dbg !14866
  %445 = icmp ne i64 %444, 0, !dbg !14866
  br i1 %445, label %446, label %447, !dbg !14864

446:                                              ; preds = %429
  br label %527, !dbg !14866

447:                                              ; preds = %429
  br label %449, !dbg !14864

448:                                              ; preds = %420
  br label %527, !dbg !14862

449:                                              ; preds = %447
  br label %450, !dbg !14855

450:                                              ; preds = %449
  %451 = load ptr, ptr %13, align 8, !dbg !14868
  %452 = load ptr, ptr %9, align 8, !dbg !14869
  %453 = getelementptr inbounds %struct.request_parser_helper, ptr %452, i32 0, i32 3, !dbg !14870
  %454 = getelementptr inbounds %struct.lwan_value_t_, ptr %453, i32 0, i32 0, !dbg !14871
  store ptr %451, ptr %454, align 8, !dbg !14872
  %455 = load i64, ptr %14, align 8, !dbg !14873
  %456 = load ptr, ptr %9, align 8, !dbg !14874
  %457 = getelementptr inbounds %struct.request_parser_helper, ptr %456, i32 0, i32 3, !dbg !14875
  %458 = getelementptr inbounds %struct.lwan_value_t_, ptr %457, i32 0, i32 1, !dbg !14876
  store i64 %455, ptr %458, align 8, !dbg !14877
  br label %526, !dbg !14878

459:                                              ; preds = %47
  br label %460, !dbg !14879

460:                                              ; preds = %459
  call void @llvm.dbg.declare(metadata ptr %21, metadata !14880, metadata !DIExpression()), !dbg !14882
  %461 = load ptr, ptr %12, align 8, !dbg !14882
  %462 = getelementptr inbounds i8, ptr %461, i64 5, !dbg !14882
  store ptr %462, ptr %12, align 8, !dbg !14882
  %463 = load ptr, ptr %12, align 8, !dbg !14883
  %464 = load ptr, ptr %11, align 8, !dbg !14883
  %465 = icmp uge ptr %463, %464, !dbg !14883
  br i1 %465, label %466, label %467, !dbg !14882

466:                                              ; preds = %460
  store ptr null, ptr %8, align 8, !dbg !14883
  br label %544, !dbg !14883

467:                                              ; preds = %460
  %468 = load ptr, ptr %12, align 8, !dbg !14885
  %469 = getelementptr inbounds i8, ptr %468, i32 1, !dbg !14885
  store ptr %469, ptr %12, align 8, !dbg !14885
  %470 = load i8, ptr %468, align 1, !dbg !14885
  %471 = sext i8 %470 to i32, !dbg !14885
  %472 = icmp ne i32 %471, 58, !dbg !14885
  %473 = zext i1 %472 to i32, !dbg !14885
  %474 = sext i32 %473 to i64, !dbg !14885
  %475 = icmp ne i64 %474, 0, !dbg !14885
  br i1 %475, label %476, label %477, !dbg !14882

476:                                              ; preds = %467
  br label %527, !dbg !14885

477:                                              ; preds = %467
  %478 = load ptr, ptr %12, align 8, !dbg !14887
  %479 = getelementptr inbounds i8, ptr %478, i32 1, !dbg !14887
  store ptr %479, ptr %12, align 8, !dbg !14887
  %480 = load i8, ptr %478, align 1, !dbg !14887
  %481 = sext i8 %480 to i32, !dbg !14887
  %482 = icmp ne i32 %481, 32, !dbg !14887
  %483 = zext i1 %482 to i32, !dbg !14887
  %484 = sext i32 %483 to i64, !dbg !14887
  %485 = icmp ne i64 %484, 0, !dbg !14887
  br i1 %485, label %486, label %487, !dbg !14882

486:                                              ; preds = %477
  br label %527, !dbg !14887

487:                                              ; preds = %477
  %488 = load ptr, ptr %12, align 8, !dbg !14889
  %489 = call ptr @strchr(ptr noundef %488, i32 noundef 13) #20, !dbg !14889
  store ptr %489, ptr %21, align 8, !dbg !14889
  %490 = icmp ne ptr %489, null, !dbg !14889
  %491 = xor i1 %490, true, !dbg !14889
  %492 = xor i1 %491, true, !dbg !14889
  %493 = zext i1 %492 to i32, !dbg !14889
  %494 = sext i32 %493 to i64, !dbg !14889
  %495 = icmp ne i64 %494, 0, !dbg !14889
  br i1 %495, label %496, label %515, !dbg !14882

496:                                              ; preds = %487
  %497 = load ptr, ptr %21, align 8, !dbg !14891
  store i8 0, ptr %497, align 1, !dbg !14891
  %498 = load ptr, ptr %12, align 8, !dbg !14891
  store ptr %498, ptr %13, align 8, !dbg !14891
  %499 = load ptr, ptr %21, align 8, !dbg !14891
  %500 = getelementptr inbounds i8, ptr %499, i64 1, !dbg !14891
  store ptr %500, ptr %12, align 8, !dbg !14891
  %501 = load ptr, ptr %21, align 8, !dbg !14891
  %502 = load ptr, ptr %13, align 8, !dbg !14891
  %503 = ptrtoint ptr %501 to i64, !dbg !14891
  %504 = ptrtoint ptr %502 to i64, !dbg !14891
  %505 = sub i64 %503, %504, !dbg !14891
  store i64 %505, ptr %14, align 8, !dbg !14891
  %506 = load ptr, ptr %12, align 8, !dbg !14893
  %507 = load i8, ptr %506, align 1, !dbg !14893
  %508 = sext i8 %507 to i32, !dbg !14893
  %509 = icmp ne i32 %508, 10, !dbg !14893
  %510 = zext i1 %509 to i32, !dbg !14893
  %511 = sext i32 %510 to i64, !dbg !14893
  %512 = icmp ne i64 %511, 0, !dbg !14893
  br i1 %512, label %513, label %514, !dbg !14891

513:                                              ; preds = %496
  br label %527, !dbg !14893

514:                                              ; preds = %496
  br label %516, !dbg !14891

515:                                              ; preds = %487
  br label %527, !dbg !14889

516:                                              ; preds = %514
  br label %517, !dbg !14882

517:                                              ; preds = %516
  %518 = load ptr, ptr %13, align 8, !dbg !14895
  %519 = load ptr, ptr %9, align 8, !dbg !14896
  %520 = getelementptr inbounds %struct.request_parser_helper, ptr %519, i32 0, i32 4, !dbg !14897
  %521 = getelementptr inbounds %struct.lwan_value_t_, ptr %520, i32 0, i32 0, !dbg !14898
  store ptr %518, ptr %521, align 8, !dbg !14899
  %522 = load i64, ptr %14, align 8, !dbg !14900
  %523 = load ptr, ptr %9, align 8, !dbg !14901
  %524 = getelementptr inbounds %struct.request_parser_helper, ptr %523, i32 0, i32 4, !dbg !14902
  %525 = getelementptr inbounds %struct.lwan_value_t_, ptr %524, i32 0, i32 1, !dbg !14903
  store i64 %522, ptr %525, align 8, !dbg !14904
  br label %526, !dbg !14905

526:                                              ; preds = %517, %450, %381, %314, %244, %177, %110, %47
  br label %527, !dbg !14906

527:                                              ; preds = %526, %515, %513, %486, %476, %448, %446, %419, %409, %379, %377, %350, %340, %312, %310, %283, %273, %242, %240, %213, %203, %175, %173, %146, %136, %108, %106, %79, %69
  call void @llvm.dbg.label(metadata !14907), !dbg !14908
  %528 = load ptr, ptr %12, align 8, !dbg !14909
  %529 = load ptr, ptr %11, align 8, !dbg !14910
  %530 = load ptr, ptr %12, align 8, !dbg !14911
  %531 = ptrtoint ptr %529 to i64, !dbg !14912
  %532 = ptrtoint ptr %530 to i64, !dbg !14912
  %533 = sub i64 %531, %532, !dbg !14912
  %534 = call ptr @memchr(ptr noundef %528, i32 noundef 10, i64 noundef %533) #20, !dbg !14913
  store ptr %534, ptr %12, align 8, !dbg !14914
  %535 = load ptr, ptr %12, align 8, !dbg !14915
  %536 = icmp ne ptr %535, null, !dbg !14915
  br i1 %536, label %538, label %537, !dbg !14917

537:                                              ; preds = %527
  br label %542, !dbg !14918

538:                                              ; preds = %527
  br label %539, !dbg !14919

539:                                              ; preds = %538
  %540 = load ptr, ptr %12, align 8, !dbg !14920
  %541 = getelementptr inbounds i8, ptr %540, i32 1, !dbg !14920
  store ptr %541, ptr %12, align 8, !dbg !14920
  store ptr %541, ptr %10, align 8, !dbg !14921
  br label %23, !dbg !14922, !llvm.loop !14923

542:                                              ; preds = %537, %33, %23
  %543 = load ptr, ptr %10, align 8, !dbg !14925
  store ptr %543, ptr %8, align 8, !dbg !14926
  br label %544, !dbg !14926

544:                                              ; preds = %542, %466, %399, %330, %263, %193, %126, %59, %39
  %545 = load ptr, ptr %8, align 8, !dbg !14927
  ret ptr %545, !dbg !14927
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @read_post_data(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !14928 {
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i64, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !14931, metadata !DIExpression()), !dbg !14932
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !14933, metadata !DIExpression()), !dbg !14934
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !14935, metadata !DIExpression()), !dbg !14936
  call void @llvm.dbg.declare(metadata ptr %8, metadata !14937, metadata !DIExpression()), !dbg !14938
  %12 = load ptr, ptr %6, align 8, !dbg !14939
  %13 = getelementptr inbounds %struct.request_parser_helper, ptr %12, i32 0, i32 1, !dbg !14939
  %14 = load ptr, ptr %13, align 8, !dbg !14939
  %15 = icmp ne ptr %14, null, !dbg !14939
  %16 = xor i1 %15, true, !dbg !14939
  %17 = zext i1 %16 to i32, !dbg !14939
  %18 = sext i32 %17 to i64, !dbg !14939
  %19 = icmp ne i64 %18, 0, !dbg !14939
  br i1 %19, label %20, label %21, !dbg !14941

20:                                               ; preds = %3
  store i32 400, ptr %4, align 4, !dbg !14942
  br label %96, !dbg !14942

21:                                               ; preds = %3
  %22 = load ptr, ptr %6, align 8, !dbg !14943
  %23 = getelementptr inbounds %struct.request_parser_helper, ptr %22, i32 0, i32 7, !dbg !14943
  %24 = getelementptr inbounds %struct.lwan_value_t_, ptr %23, i32 0, i32 0, !dbg !14943
  %25 = load ptr, ptr %24, align 8, !dbg !14943
  %26 = icmp ne ptr %25, null, !dbg !14943
  %27 = xor i1 %26, true, !dbg !14943
  %28 = zext i1 %27 to i32, !dbg !14943
  %29 = sext i32 %28 to i64, !dbg !14943
  %30 = icmp ne i64 %29, 0, !dbg !14943
  br i1 %30, label %31, label %32, !dbg !14945

31:                                               ; preds = %21
  store i32 400, ptr %4, align 4, !dbg !14946
  br label %96, !dbg !14946

32:                                               ; preds = %21
  %33 = load ptr, ptr %6, align 8, !dbg !14947
  %34 = getelementptr inbounds %struct.request_parser_helper, ptr %33, i32 0, i32 7, !dbg !14948
  %35 = getelementptr inbounds %struct.lwan_value_t_, ptr %34, i32 0, i32 0, !dbg !14949
  %36 = load ptr, ptr %35, align 8, !dbg !14949
  %37 = call i64 @parse_long(ptr noundef %36, i64 noundef 4096), !dbg !14950
  store i64 %37, ptr %8, align 8, !dbg !14951
  %38 = load i64, ptr %8, align 8, !dbg !14952
  %39 = icmp sgt i64 %38, 4096, !dbg !14952
  %40 = zext i1 %39 to i32, !dbg !14952
  %41 = sext i32 %40 to i64, !dbg !14952
  %42 = icmp ne i64 %41, 0, !dbg !14952
  br i1 %42, label %43, label %44, !dbg !14954

43:                                               ; preds = %32
  store i32 413, ptr %4, align 4, !dbg !14955
  br label %96, !dbg !14955

44:                                               ; preds = %32
  %45 = load i64, ptr %8, align 8, !dbg !14956
  %46 = icmp slt i64 %45, 0, !dbg !14956
  %47 = zext i1 %46 to i32, !dbg !14956
  %48 = sext i32 %47 to i64, !dbg !14956
  %49 = icmp ne i64 %48, 0, !dbg !14956
  br i1 %49, label %50, label %51, !dbg !14958

50:                                               ; preds = %44
  store i32 400, ptr %4, align 4, !dbg !14959
  br label %96, !dbg !14959

51:                                               ; preds = %44
  call void @llvm.dbg.declare(metadata ptr %9, metadata !14960, metadata !DIExpression()), !dbg !14961
  %52 = load i64, ptr %8, align 8, !dbg !14962
  store i64 %52, ptr %9, align 8, !dbg !14961
  call void @llvm.dbg.declare(metadata ptr %10, metadata !14963, metadata !DIExpression()), !dbg !14964
  %53 = load ptr, ptr %6, align 8, !dbg !14965
  %54 = getelementptr inbounds %struct.request_parser_helper, ptr %53, i32 0, i32 0, !dbg !14966
  %55 = load ptr, ptr %54, align 8, !dbg !14966
  %56 = getelementptr inbounds %struct.lwan_value_t_, ptr %55, i32 0, i32 0, !dbg !14967
  %57 = load ptr, ptr %56, align 8, !dbg !14967
  %58 = load ptr, ptr %6, align 8, !dbg !14968
  %59 = getelementptr inbounds %struct.request_parser_helper, ptr %58, i32 0, i32 0, !dbg !14969
  %60 = load ptr, ptr %59, align 8, !dbg !14969
  %61 = getelementptr inbounds %struct.lwan_value_t_, ptr %60, i32 0, i32 1, !dbg !14970
  %62 = load i64, ptr %61, align 8, !dbg !14970
  %63 = getelementptr inbounds i8, ptr %57, i64 %62, !dbg !14971
  store ptr %63, ptr %10, align 8, !dbg !14964
  call void @llvm.dbg.declare(metadata ptr %11, metadata !14972, metadata !DIExpression()), !dbg !14973
  %64 = load ptr, ptr %10, align 8, !dbg !14974
  %65 = load ptr, ptr %6, align 8, !dbg !14975
  %66 = getelementptr inbounds %struct.request_parser_helper, ptr %65, i32 0, i32 1, !dbg !14976
  %67 = load ptr, ptr %66, align 8, !dbg !14976
  %68 = ptrtoint ptr %64 to i64, !dbg !14977
  %69 = ptrtoint ptr %67 to i64, !dbg !14977
  %70 = sub i64 %68, %69, !dbg !14977
  store i64 %70, ptr %11, align 8, !dbg !14973
  %71 = load i64, ptr %11, align 8, !dbg !14978
  %72 = load i64, ptr %9, align 8, !dbg !14980
  %73 = icmp eq i64 %71, %72, !dbg !14981
  br i1 %73, label %74, label %90, !dbg !14982

74:                                               ; preds = %51
  %75 = load ptr, ptr %6, align 8, !dbg !14983
  %76 = getelementptr inbounds %struct.request_parser_helper, ptr %75, i32 0, i32 1, !dbg !14985
  %77 = load ptr, ptr %76, align 8, !dbg !14985
  %78 = load ptr, ptr %6, align 8, !dbg !14986
  %79 = getelementptr inbounds %struct.request_parser_helper, ptr %78, i32 0, i32 8, !dbg !14987
  %80 = getelementptr inbounds %struct.lwan_value_t_, ptr %79, i32 0, i32 0, !dbg !14988
  store ptr %77, ptr %80, align 8, !dbg !14989
  %81 = load i64, ptr %9, align 8, !dbg !14990
  %82 = load ptr, ptr %6, align 8, !dbg !14991
  %83 = getelementptr inbounds %struct.request_parser_helper, ptr %82, i32 0, i32 8, !dbg !14992
  %84 = getelementptr inbounds %struct.lwan_value_t_, ptr %83, i32 0, i32 1, !dbg !14993
  store i64 %81, ptr %84, align 8, !dbg !14994
  %85 = load i64, ptr %9, align 8, !dbg !14995
  %86 = load ptr, ptr %6, align 8, !dbg !14996
  %87 = getelementptr inbounds %struct.request_parser_helper, ptr %86, i32 0, i32 1, !dbg !14997
  %88 = load ptr, ptr %87, align 8, !dbg !14998
  %89 = getelementptr inbounds i8, ptr %88, i64 %85, !dbg !14998
  store ptr %89, ptr %87, align 8, !dbg !14998
  store i32 200, ptr %4, align 4, !dbg !14999
  br label %96, !dbg !14999

90:                                               ; preds = %51
  %91 = load i64, ptr %9, align 8, !dbg !15000
  %92 = load i64, ptr %11, align 8, !dbg !15002
  %93 = icmp ugt i64 %91, %92, !dbg !15003
  br i1 %93, label %94, label %95, !dbg !15004

94:                                               ; preds = %90
  store i32 413, ptr %4, align 4, !dbg !15005
  br label %96, !dbg !15005

95:                                               ; preds = %90
  store i32 501, ptr %4, align 4, !dbg !15006
  br label %96, !dbg !15006

96:                                               ; preds = %95, %94, %74, %50, %43, %31, %20
  %97 = load i32, ptr %4, align 4, !dbg !15007
  ret i32 %97, !dbg !15007
}

; Function Attrs: nounwind willreturn memory(read)
declare ptr @memrchr(ptr noundef, i32 noundef, i64 noundef) #8

; Function Attrs: alwaysinline nounwind willreturn memory(read) uwtable
define dso_local ptr @lwan_http_status_as_string(i32 noundef %0) #15 !dbg !15008 {
  %2 = alloca i32, align 4
  store i32 %0, ptr %2, align 4
  call void @llvm.dbg.declare(metadata ptr %2, metadata !15009, metadata !DIExpression()), !dbg !15010
  %3 = load i32, ptr %2, align 4, !dbg !15011
  %4 = call ptr @lwan_http_status_as_string_with_code(i32 noundef %3) #20, !dbg !15012
  %5 = getelementptr inbounds i8, ptr %4, i64 4, !dbg !15013
  ret ptr %5, !dbg !15014
}

; Function Attrs: noinline nounwind optnone willreturn memory(read) uwtable
define dso_local ptr @lwan_http_status_as_descriptive_string(i32 noundef %0) #16 !dbg !15015 {
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  store i32 %0, ptr %3, align 4
  call void @llvm.dbg.declare(metadata ptr %3, metadata !15016, metadata !DIExpression()), !dbg !15017
  %4 = load i32, ptr %3, align 4, !dbg !15018
  switch i32 %4, label %21 [
    i32 200, label %5
    i32 206, label %6
    i32 301, label %7
    i32 304, label %8
    i32 400, label %9
    i32 401, label %10
    i32 403, label %11
    i32 404, label %12
    i32 405, label %13
    i32 408, label %14
    i32 413, label %15
    i32 416, label %16
    i32 418, label %17
    i32 500, label %18
    i32 501, label %19
    i32 503, label %20
  ], !dbg !15019

5:                                                ; preds = %1
  store ptr @.str.28.282, ptr %2, align 8, !dbg !15020
  br label %22, !dbg !15020

6:                                                ; preds = %1
  store ptr @.str.29.283, ptr %2, align 8, !dbg !15022
  br label %22, !dbg !15022

7:                                                ; preds = %1
  store ptr @.str.30.284, ptr %2, align 8, !dbg !15023
  br label %22, !dbg !15023

8:                                                ; preds = %1
  store ptr @.str.31.285, ptr %2, align 8, !dbg !15024
  br label %22, !dbg !15024

9:                                                ; preds = %1
  store ptr @.str.32.286, ptr %2, align 8, !dbg !15025
  br label %22, !dbg !15025

10:                                               ; preds = %1
  store ptr @.str.33.287, ptr %2, align 8, !dbg !15026
  br label %22, !dbg !15026

11:                                               ; preds = %1
  store ptr @.str.34.288, ptr %2, align 8, !dbg !15027
  br label %22, !dbg !15027

12:                                               ; preds = %1
  store ptr @.str.35.289, ptr %2, align 8, !dbg !15028
  br label %22, !dbg !15028

13:                                               ; preds = %1
  store ptr @.str.36.290, ptr %2, align 8, !dbg !15029
  br label %22, !dbg !15029

14:                                               ; preds = %1
  store ptr @.str.37.291, ptr %2, align 8, !dbg !15030
  br label %22, !dbg !15030

15:                                               ; preds = %1
  store ptr @.str.38.292, ptr %2, align 8, !dbg !15031
  br label %22, !dbg !15031

16:                                               ; preds = %1
  store ptr @.str.39.293, ptr %2, align 8, !dbg !15032
  br label %22, !dbg !15032

17:                                               ; preds = %1
  store ptr @.str.40.294, ptr %2, align 8, !dbg !15033
  br label %22, !dbg !15033

18:                                               ; preds = %1
  store ptr @.str.41.295, ptr %2, align 8, !dbg !15034
  br label %22, !dbg !15034

19:                                               ; preds = %1
  store ptr @.str.42.296, ptr %2, align 8, !dbg !15035
  br label %22, !dbg !15035

20:                                               ; preds = %1
  store ptr @.str.43.297, ptr %2, align 8, !dbg !15036
  br label %22, !dbg !15036

21:                                               ; preds = %1
  store ptr @.str.44.298, ptr %2, align 8, !dbg !15037
  br label %22, !dbg !15037

22:                                               ; preds = %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5
  %23 = load ptr, ptr %2, align 8, !dbg !15038
  ret ptr %23, !dbg !15038
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @lwan_tpl_apply_with_buffer(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !15039 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !15042, metadata !DIExpression()), !dbg !15043
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !15044, metadata !DIExpression()), !dbg !15045
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !15046, metadata !DIExpression()), !dbg !15047
  %8 = load ptr, ptr %6, align 8, !dbg !15048
  %9 = call zeroext i1 @strbuf_reset_length(ptr noundef %8), !dbg !15048
  %10 = xor i1 %9, true, !dbg !15048
  %11 = zext i1 %10 to i32, !dbg !15048
  %12 = sext i32 %11 to i64, !dbg !15048
  %13 = icmp ne i64 %12, 0, !dbg !15048
  br i1 %13, label %14, label %15, !dbg !15050

14:                                               ; preds = %3
  store ptr null, ptr %4, align 8, !dbg !15051
  br label %35, !dbg !15051

15:                                               ; preds = %3
  %16 = load ptr, ptr %6, align 8, !dbg !15052
  %17 = load ptr, ptr %5, align 8, !dbg !15052
  %18 = getelementptr inbounds %struct.lwan_value_t_, ptr %17, i32 0, i32 1, !dbg !15052
  %19 = load i64, ptr %18, align 8, !dbg !15052
  %20 = call zeroext i1 @strbuf_grow_to(ptr noundef %16, i64 noundef %19), !dbg !15052
  %21 = xor i1 %20, true, !dbg !15052
  %22 = zext i1 %21 to i32, !dbg !15052
  %23 = sext i32 %22 to i64, !dbg !15052
  %24 = icmp ne i64 %23, 0, !dbg !15052
  br i1 %24, label %25, label %26, !dbg !15054

25:                                               ; preds = %15
  store ptr null, ptr %4, align 8, !dbg !15055
  br label %35, !dbg !15055

26:                                               ; preds = %15
  %27 = load ptr, ptr %5, align 8, !dbg !15056
  %28 = load ptr, ptr %5, align 8, !dbg !15057
  %29 = getelementptr inbounds %struct.lwan_value_t_, ptr %28, i32 0, i32 0, !dbg !15058
  %30 = load ptr, ptr %29, align 8, !dbg !15058
  %31 = load ptr, ptr %6, align 8, !dbg !15059
  %32 = load ptr, ptr %7, align 8, !dbg !15060
  %33 = call ptr @apply_until(ptr noundef %27, ptr noundef %30, ptr noundef %31, ptr noundef %32, ptr noundef null), !dbg !15061
  %34 = load ptr, ptr %6, align 8, !dbg !15062
  store ptr %34, ptr %4, align 8, !dbg !15063
  br label %35, !dbg !15063

35:                                               ; preds = %26, %25, %14
  %36 = load ptr, ptr %4, align 8, !dbg !15064
  ret ptr %36, !dbg !15064
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @strbuf_grow_to(ptr noundef %0, i64 noundef %1) #0 !dbg !15065 {
  %3 = alloca ptr, align 8
  %4 = alloca i64, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !15068, metadata !DIExpression()), !dbg !15069
  store i64 %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !15070, metadata !DIExpression()), !dbg !15071
  %5 = load ptr, ptr %3, align 8, !dbg !15072
  %6 = load i64, ptr %4, align 8, !dbg !15073
  %7 = add i64 %6, 1, !dbg !15074
  %8 = call zeroext i1 @grow_buffer_if_needed(ptr noundef %5, i64 noundef %7), !dbg !15075
  ret i1 %8, !dbg !15076
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @apply_until(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4) #0 !dbg !3095 {
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca %struct.coro_switcher_t_, align 8
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %15 = alloca ptr, align 8
  %16 = alloca ptr, align 8
  %17 = alloca i8, align 1
  %18 = alloca ptr, align 8
  %19 = alloca ptr, align 8
  %20 = alloca i8, align 1
  %21 = alloca i32, align 4
  store ptr %0, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !15077, metadata !DIExpression()), !dbg !15078
  store ptr %1, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !15079, metadata !DIExpression()), !dbg !15080
  store ptr %2, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !15081, metadata !DIExpression()), !dbg !15082
  store ptr %3, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %10, metadata !15083, metadata !DIExpression()), !dbg !15084
  store ptr %4, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !15085, metadata !DIExpression()), !dbg !15086
  call void @llvm.dbg.declare(metadata ptr %12, metadata !15087, metadata !DIExpression()), !dbg !15093
  call void @llvm.dbg.declare(metadata ptr %13, metadata !15094, metadata !DIExpression()), !dbg !15095
  store ptr null, ptr %13, align 8, !dbg !15095
  call void @llvm.dbg.declare(metadata ptr %14, metadata !15096, metadata !DIExpression()), !dbg !15097
  %22 = load ptr, ptr %8, align 8, !dbg !15098
  store ptr %22, ptr %14, align 8, !dbg !15097
  %23 = load ptr, ptr %14, align 8, !dbg !15099
  %24 = icmp ne ptr %23, null, !dbg !15099
  %25 = xor i1 %24, true, !dbg !15099
  %26 = zext i1 %25 to i32, !dbg !15099
  %27 = sext i32 %26 to i64, !dbg !15099
  %28 = icmp ne i64 %27, 0, !dbg !15099
  br i1 %28, label %29, label %30, !dbg !15101

29:                                               ; preds = %5
  store ptr null, ptr %6, align 8, !dbg !15102
  br label %431, !dbg !15102

30:                                               ; preds = %5
  br label %31, !dbg !15103

31:                                               ; preds = %30
  %32 = load ptr, ptr %14, align 8, !dbg !15104
  %33 = getelementptr inbounds %struct.chunk, ptr %32, i32 0, i32 0, !dbg !15104
  %34 = load i32, ptr %33, align 8, !dbg !15104
  %35 = zext i32 %34 to i64, !dbg !15104
  %36 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %35, !dbg !15104
  %37 = load ptr, ptr %36, align 8, !dbg !15104
  br label %433, !dbg !15104

38:                                               ; No predecessors!
  br label %39, !dbg !15104

39:                                               ; preds = %433, %38
  call void @llvm.dbg.label(metadata !15106), !dbg !15107
  %40 = load ptr, ptr %9, align 8, !dbg !15108
  %41 = load ptr, ptr %14, align 8, !dbg !15109
  %42 = getelementptr inbounds %struct.chunk, ptr %41, i32 0, i32 1, !dbg !15109
  %43 = load ptr, ptr %42, align 8, !dbg !15109
  %44 = getelementptr inbounds %struct.strbuf_t_, ptr %43, i32 0, i32 0, !dbg !15109
  %45 = load ptr, ptr %44, align 8, !dbg !15109
  %46 = load ptr, ptr %14, align 8, !dbg !15110
  %47 = getelementptr inbounds %struct.chunk, ptr %46, i32 0, i32 1, !dbg !15110
  %48 = load ptr, ptr %47, align 8, !dbg !15110
  %49 = getelementptr inbounds %struct.strbuf_t_, ptr %48, i32 0, i32 1, !dbg !15110
  %50 = getelementptr inbounds %struct.anon.3, ptr %49, i32 0, i32 1, !dbg !15110
  %51 = load i64, ptr %50, align 8, !dbg !15110
  %52 = call zeroext i1 @strbuf_append_str(ptr noundef %40, ptr noundef %45, i64 noundef %51), !dbg !15111
  br label %53, !dbg !15112

53:                                               ; preds = %39
  %54 = load ptr, ptr %14, align 8, !dbg !15113
  %55 = getelementptr inbounds %struct.chunk, ptr %54, i32 1, !dbg !15113
  store ptr %55, ptr %14, align 8, !dbg !15113
  br label %56, !dbg !15113

56:                                               ; preds = %53
  %57 = load ptr, ptr %14, align 8, !dbg !15115
  %58 = getelementptr inbounds %struct.chunk, ptr %57, i32 0, i32 0, !dbg !15115
  %59 = load i32, ptr %58, align 8, !dbg !15115
  %60 = zext i32 %59 to i64, !dbg !15115
  %61 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %60, !dbg !15115
  %62 = load ptr, ptr %61, align 8, !dbg !15115
  br label %433, !dbg !15115

63:                                               ; No predecessors!
  br label %64, !dbg !15113

64:                                               ; preds = %63
  br label %65, !dbg !15113

65:                                               ; preds = %433, %64
  call void @llvm.dbg.label(metadata !15117), !dbg !15118
  %66 = load ptr, ptr %9, align 8, !dbg !15119
  %67 = load ptr, ptr %14, align 8, !dbg !15120
  %68 = getelementptr inbounds %struct.chunk, ptr %67, i32 0, i32 1, !dbg !15121
  %69 = load ptr, ptr %68, align 8, !dbg !15121
  %70 = ptrtoint ptr %69 to i64, !dbg !15122
  %71 = trunc i64 %70 to i8, !dbg !15123
  %72 = call zeroext i1 @strbuf_append_char(ptr noundef %66, i8 noundef signext %71), !dbg !15124
  br label %73, !dbg !15125

73:                                               ; preds = %65
  %74 = load ptr, ptr %14, align 8, !dbg !15126
  %75 = getelementptr inbounds %struct.chunk, ptr %74, i32 1, !dbg !15126
  store ptr %75, ptr %14, align 8, !dbg !15126
  br label %76, !dbg !15126

76:                                               ; preds = %73
  %77 = load ptr, ptr %14, align 8, !dbg !15128
  %78 = getelementptr inbounds %struct.chunk, ptr %77, i32 0, i32 0, !dbg !15128
  %79 = load i32, ptr %78, align 8, !dbg !15128
  %80 = zext i32 %79 to i64, !dbg !15128
  %81 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %80, !dbg !15128
  %82 = load ptr, ptr %81, align 8, !dbg !15128
  br label %433, !dbg !15128

83:                                               ; No predecessors!
  br label %84, !dbg !15126

84:                                               ; preds = %83
  br label %85, !dbg !15126

85:                                               ; preds = %433, %84
  call void @llvm.dbg.label(metadata !15130), !dbg !15131
  call void @llvm.dbg.declare(metadata ptr %15, metadata !15132, metadata !DIExpression()), !dbg !15149
  %86 = load ptr, ptr %14, align 8, !dbg !15150
  %87 = getelementptr inbounds %struct.chunk, ptr %86, i32 0, i32 1, !dbg !15151
  %88 = load ptr, ptr %87, align 8, !dbg !15151
  store ptr %88, ptr %15, align 8, !dbg !15149
  %89 = load ptr, ptr %15, align 8, !dbg !15152
  %90 = getelementptr inbounds %struct.lwan_var_descriptor_t_, ptr %89, i32 0, i32 2, !dbg !15153
  %91 = load ptr, ptr %90, align 8, !dbg !15153
  %92 = load ptr, ptr %9, align 8, !dbg !15154
  %93 = load ptr, ptr %10, align 8, !dbg !15155
  %94 = load ptr, ptr %15, align 8, !dbg !15156
  %95 = getelementptr inbounds %struct.lwan_var_descriptor_t_, ptr %94, i32 0, i32 1, !dbg !15157
  %96 = load i64, ptr %95, align 8, !dbg !15157
  %97 = getelementptr inbounds i8, ptr %93, i64 %96, !dbg !15158
  call void %91(ptr noundef %92, ptr noundef %97), !dbg !15152
  br label %98, !dbg !15159

98:                                               ; preds = %85
  %99 = load ptr, ptr %14, align 8, !dbg !15160
  %100 = getelementptr inbounds %struct.chunk, ptr %99, i32 1, !dbg !15160
  store ptr %100, ptr %14, align 8, !dbg !15160
  br label %101, !dbg !15160

101:                                              ; preds = %98
  %102 = load ptr, ptr %14, align 8, !dbg !15162
  %103 = getelementptr inbounds %struct.chunk, ptr %102, i32 0, i32 0, !dbg !15162
  %104 = load i32, ptr %103, align 8, !dbg !15162
  %105 = zext i32 %104 to i64, !dbg !15162
  %106 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %105, !dbg !15162
  %107 = load ptr, ptr %106, align 8, !dbg !15162
  br label %433, !dbg !15162

108:                                              ; No predecessors!
  br label %109, !dbg !15160

109:                                              ; preds = %108
  br label %110, !dbg !15164

110:                                              ; preds = %433, %109
  call void @llvm.dbg.label(metadata !15165), !dbg !15166
  %111 = load ptr, ptr %9, align 8, !dbg !15167
  %112 = load ptr, ptr %10, align 8, !dbg !15168
  %113 = load ptr, ptr %14, align 8, !dbg !15169
  %114 = getelementptr inbounds %struct.chunk, ptr %113, i32 0, i32 1, !dbg !15170
  %115 = load ptr, ptr %114, align 8, !dbg !15170
  %116 = ptrtoint ptr %115 to i64, !dbg !15171
  %117 = getelementptr inbounds i8, ptr %112, i64 %116, !dbg !15172
  call void @lwan_append_str_to_strbuf(ptr noundef %111, ptr noundef %117), !dbg !15173
  br label %118, !dbg !15174

118:                                              ; preds = %110
  %119 = load ptr, ptr %14, align 8, !dbg !15175
  %120 = getelementptr inbounds %struct.chunk, ptr %119, i32 1, !dbg !15175
  store ptr %120, ptr %14, align 8, !dbg !15175
  br label %121, !dbg !15175

121:                                              ; preds = %118
  %122 = load ptr, ptr %14, align 8, !dbg !15177
  %123 = getelementptr inbounds %struct.chunk, ptr %122, i32 0, i32 0, !dbg !15177
  %124 = load i32, ptr %123, align 8, !dbg !15177
  %125 = zext i32 %124 to i64, !dbg !15177
  %126 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %125, !dbg !15177
  %127 = load ptr, ptr %126, align 8, !dbg !15177
  br label %433, !dbg !15177

128:                                              ; No predecessors!
  br label %129, !dbg !15175

129:                                              ; preds = %128
  br label %130, !dbg !15175

130:                                              ; preds = %433, %129
  call void @llvm.dbg.label(metadata !15179), !dbg !15180
  %131 = load ptr, ptr %9, align 8, !dbg !15181
  %132 = load ptr, ptr %10, align 8, !dbg !15182
  %133 = load ptr, ptr %14, align 8, !dbg !15183
  %134 = getelementptr inbounds %struct.chunk, ptr %133, i32 0, i32 1, !dbg !15184
  %135 = load ptr, ptr %134, align 8, !dbg !15184
  %136 = ptrtoint ptr %135 to i64, !dbg !15185
  %137 = getelementptr inbounds i8, ptr %132, i64 %136, !dbg !15186
  call void @lwan_append_str_escaped_to_strbuf(ptr noundef %131, ptr noundef %137), !dbg !15187
  br label %138, !dbg !15188

138:                                              ; preds = %130
  %139 = load ptr, ptr %14, align 8, !dbg !15189
  %140 = getelementptr inbounds %struct.chunk, ptr %139, i32 1, !dbg !15189
  store ptr %140, ptr %14, align 8, !dbg !15189
  br label %141, !dbg !15189

141:                                              ; preds = %138
  %142 = load ptr, ptr %14, align 8, !dbg !15191
  %143 = getelementptr inbounds %struct.chunk, ptr %142, i32 0, i32 0, !dbg !15191
  %144 = load i32, ptr %143, align 8, !dbg !15191
  %145 = zext i32 %144 to i64, !dbg !15191
  %146 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %145, !dbg !15191
  %147 = load ptr, ptr %146, align 8, !dbg !15191
  br label %433, !dbg !15191

148:                                              ; No predecessors!
  br label %149, !dbg !15189

149:                                              ; preds = %148
  br label %150, !dbg !15189

150:                                              ; preds = %433, %149
  call void @llvm.dbg.label(metadata !15193), !dbg !15194
  call void @llvm.dbg.declare(metadata ptr %16, metadata !15195, metadata !DIExpression()), !dbg !15202
  %151 = load ptr, ptr %14, align 8, !dbg !15203
  %152 = getelementptr inbounds %struct.chunk, ptr %151, i32 0, i32 1, !dbg !15204
  %153 = load ptr, ptr %152, align 8, !dbg !15204
  store ptr %153, ptr %16, align 8, !dbg !15202
  call void @llvm.dbg.declare(metadata ptr %17, metadata !15205, metadata !DIExpression()), !dbg !15206
  %154 = load ptr, ptr %16, align 8, !dbg !15207
  %155 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %154, i32 0, i32 1, !dbg !15208
  %156 = load ptr, ptr %155, align 8, !dbg !15208
  %157 = getelementptr inbounds %struct.lwan_var_descriptor_t_, ptr %156, i32 0, i32 3, !dbg !15209
  %158 = load ptr, ptr %157, align 8, !dbg !15209
  %159 = load ptr, ptr %10, align 8, !dbg !15210
  %160 = load ptr, ptr %16, align 8, !dbg !15211
  %161 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %160, i32 0, i32 1, !dbg !15212
  %162 = load ptr, ptr %161, align 8, !dbg !15212
  %163 = getelementptr inbounds %struct.lwan_var_descriptor_t_, ptr %162, i32 0, i32 1, !dbg !15213
  %164 = load i64, ptr %163, align 8, !dbg !15213
  %165 = getelementptr inbounds i8, ptr %159, i64 %164, !dbg !15214
  %166 = call zeroext i1 %158(ptr noundef %165), !dbg !15207
  %167 = zext i1 %166 to i8, !dbg !15206
  store i8 %167, ptr %17, align 1, !dbg !15206
  %168 = load ptr, ptr %14, align 8, !dbg !15215
  %169 = getelementptr inbounds %struct.chunk, ptr %168, i32 0, i32 2, !dbg !15217
  %170 = load i32, ptr %169, align 8, !dbg !15217
  %171 = and i32 %170, 1, !dbg !15218
  %172 = icmp ne i32 %171, 0, !dbg !15218
  br i1 %172, label %173, label %178, !dbg !15219

173:                                              ; preds = %150
  %174 = load i8, ptr %17, align 1, !dbg !15220
  %175 = trunc i8 %174 to i1, !dbg !15220
  %176 = xor i1 %175, true, !dbg !15221
  %177 = zext i1 %176 to i8, !dbg !15222
  store i8 %177, ptr %17, align 1, !dbg !15222
  br label %178, !dbg !15223

178:                                              ; preds = %173, %150
  %179 = load i8, ptr %17, align 1, !dbg !15224
  %180 = trunc i8 %179 to i1, !dbg !15224
  br i1 %180, label %181, label %185, !dbg !15226

181:                                              ; preds = %178
  %182 = load ptr, ptr %16, align 8, !dbg !15227
  %183 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %182, i32 0, i32 0, !dbg !15229
  %184 = load ptr, ptr %183, align 8, !dbg !15229
  store ptr %184, ptr %14, align 8, !dbg !15230
  br label %195, !dbg !15231

185:                                              ; preds = %178
  %186 = load ptr, ptr %7, align 8, !dbg !15232
  %187 = load ptr, ptr %14, align 8, !dbg !15234
  %188 = getelementptr inbounds %struct.chunk, ptr %187, i64 1, !dbg !15235
  %189 = load ptr, ptr %9, align 8, !dbg !15236
  %190 = load ptr, ptr %10, align 8, !dbg !15237
  %191 = load ptr, ptr %16, align 8, !dbg !15238
  %192 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %191, i32 0, i32 0, !dbg !15239
  %193 = load ptr, ptr %192, align 8, !dbg !15239
  %194 = call ptr @apply_until(ptr noundef %186, ptr noundef %188, ptr noundef %189, ptr noundef %190, ptr noundef %193), !dbg !15240
  store ptr %194, ptr %14, align 8, !dbg !15241
  br label %195

195:                                              ; preds = %185, %181
  br label %196, !dbg !15242

196:                                              ; preds = %195
  %197 = load ptr, ptr %14, align 8, !dbg !15243
  %198 = getelementptr inbounds %struct.chunk, ptr %197, i32 1, !dbg !15243
  store ptr %198, ptr %14, align 8, !dbg !15243
  br label %199, !dbg !15243

199:                                              ; preds = %196
  %200 = load ptr, ptr %14, align 8, !dbg !15245
  %201 = getelementptr inbounds %struct.chunk, ptr %200, i32 0, i32 0, !dbg !15245
  %202 = load i32, ptr %201, align 8, !dbg !15245
  %203 = zext i32 %202 to i64, !dbg !15245
  %204 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %203, !dbg !15245
  %205 = load ptr, ptr %204, align 8, !dbg !15245
  br label %433, !dbg !15245

206:                                              ; No predecessors!
  br label %207, !dbg !15243

207:                                              ; preds = %206
  br label %208, !dbg !15247

208:                                              ; preds = %433, %207
  call void @llvm.dbg.label(metadata !15248), !dbg !15249
  %209 = load ptr, ptr %11, align 8, !dbg !15250
  %210 = load ptr, ptr %14, align 8, !dbg !15250
  %211 = icmp eq ptr %209, %210, !dbg !15250
  %212 = xor i1 %211, true, !dbg !15250
  %213 = xor i1 %212, true, !dbg !15250
  %214 = zext i1 %213 to i32, !dbg !15250
  %215 = sext i32 %214 to i64, !dbg !15250
  %216 = icmp ne i64 %215, 0, !dbg !15250
  br i1 %216, label %217, label %218, !dbg !15252

217:                                              ; preds = %208
  br label %429, !dbg !15253

218:                                              ; preds = %208
  br label %219, !dbg !15254

219:                                              ; preds = %218
  %220 = load ptr, ptr %14, align 8, !dbg !15255
  %221 = getelementptr inbounds %struct.chunk, ptr %220, i32 1, !dbg !15255
  store ptr %221, ptr %14, align 8, !dbg !15255
  br label %222, !dbg !15255

222:                                              ; preds = %219
  %223 = load ptr, ptr %14, align 8, !dbg !15257
  %224 = getelementptr inbounds %struct.chunk, ptr %223, i32 0, i32 0, !dbg !15257
  %225 = load i32, ptr %224, align 8, !dbg !15257
  %226 = zext i32 %225 to i64, !dbg !15257
  %227 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %226, !dbg !15257
  %228 = load ptr, ptr %227, align 8, !dbg !15257
  br label %433, !dbg !15257

229:                                              ; No predecessors!
  br label %230, !dbg !15255

230:                                              ; preds = %229
  br label %231, !dbg !15255

231:                                              ; preds = %433, %230
  call void @llvm.dbg.label(metadata !15259), !dbg !15260
  call void @llvm.dbg.declare(metadata ptr %18, metadata !15261, metadata !DIExpression()), !dbg !15263
  %232 = load ptr, ptr %14, align 8, !dbg !15264
  %233 = getelementptr inbounds %struct.chunk, ptr %232, i32 0, i32 1, !dbg !15265
  %234 = load ptr, ptr %233, align 8, !dbg !15265
  %235 = load ptr, ptr %10, align 8, !dbg !15266
  %236 = call ptr @lwan_tpl_apply(ptr noundef %234, ptr noundef %235), !dbg !15267
  store ptr %236, ptr %18, align 8, !dbg !15263
  %237 = load ptr, ptr %9, align 8, !dbg !15268
  %238 = load ptr, ptr %18, align 8, !dbg !15269
  %239 = getelementptr inbounds %struct.strbuf_t_, ptr %238, i32 0, i32 0, !dbg !15269
  %240 = load ptr, ptr %239, align 8, !dbg !15269
  %241 = load ptr, ptr %18, align 8, !dbg !15270
  %242 = getelementptr inbounds %struct.strbuf_t_, ptr %241, i32 0, i32 1, !dbg !15270
  %243 = getelementptr inbounds %struct.anon.3, ptr %242, i32 0, i32 1, !dbg !15270
  %244 = load i64, ptr %243, align 8, !dbg !15270
  %245 = call zeroext i1 @strbuf_append_str(ptr noundef %237, ptr noundef %240, i64 noundef %244), !dbg !15271
  %246 = load ptr, ptr %18, align 8, !dbg !15272
  call void @strbuf_free(ptr noundef %246), !dbg !15273
  br label %247, !dbg !15274

247:                                              ; preds = %231
  %248 = load ptr, ptr %14, align 8, !dbg !15275
  %249 = getelementptr inbounds %struct.chunk, ptr %248, i32 1, !dbg !15275
  store ptr %249, ptr %14, align 8, !dbg !15275
  br label %250, !dbg !15275

250:                                              ; preds = %247
  %251 = load ptr, ptr %14, align 8, !dbg !15277
  %252 = getelementptr inbounds %struct.chunk, ptr %251, i32 0, i32 0, !dbg !15277
  %253 = load i32, ptr %252, align 8, !dbg !15277
  %254 = zext i32 %253 to i64, !dbg !15277
  %255 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %254, !dbg !15277
  %256 = load ptr, ptr %255, align 8, !dbg !15277
  br label %433, !dbg !15277

257:                                              ; No predecessors!
  br label %258, !dbg !15275

258:                                              ; preds = %257
  br label %259, !dbg !15279

259:                                              ; preds = %433, %258
  call void @llvm.dbg.label(metadata !15280), !dbg !15281
  %260 = load ptr, ptr %13, align 8, !dbg !15282
  %261 = icmp ne ptr %260, null, !dbg !15282
  %262 = zext i1 %261 to i32, !dbg !15282
  %263 = sext i32 %262 to i64, !dbg !15282
  %264 = icmp ne i64 %263, 0, !dbg !15282
  br i1 %264, label %265, label %278, !dbg !15284

265:                                              ; preds = %259
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_warning_debug(ptr noundef @.str.7.320, i32 noundef 1234, ptr noundef @__FUNCTION__.apply_until, ptr noundef @.str.53.376), !dbg !15285
  br label %266, !dbg !15287

266:                                              ; preds = %265
  %267 = load ptr, ptr %14, align 8, !dbg !15288
  %268 = getelementptr inbounds %struct.chunk, ptr %267, i32 1, !dbg !15288
  store ptr %268, ptr %14, align 8, !dbg !15288
  br label %269, !dbg !15288

269:                                              ; preds = %266
  %270 = load ptr, ptr %14, align 8, !dbg !15290
  %271 = getelementptr inbounds %struct.chunk, ptr %270, i32 0, i32 0, !dbg !15290
  %272 = load i32, ptr %271, align 8, !dbg !15290
  %273 = zext i32 %272 to i64, !dbg !15290
  %274 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %273, !dbg !15290
  %275 = load ptr, ptr %274, align 8, !dbg !15290
  br label %433, !dbg !15290

276:                                              ; No predecessors!
  br label %277, !dbg !15288

277:                                              ; preds = %276
  br label %278, !dbg !15292

278:                                              ; preds = %277, %259
  call void @llvm.dbg.declare(metadata ptr %19, metadata !15293, metadata !DIExpression()), !dbg !15294
  %279 = load ptr, ptr %14, align 8, !dbg !15295
  %280 = getelementptr inbounds %struct.chunk, ptr %279, i32 0, i32 1, !dbg !15296
  %281 = load ptr, ptr %280, align 8, !dbg !15296
  store ptr %281, ptr %19, align 8, !dbg !15294
  %282 = load ptr, ptr %19, align 8, !dbg !15297
  %283 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %282, i32 0, i32 1, !dbg !15298
  %284 = load ptr, ptr %283, align 8, !dbg !15298
  %285 = getelementptr inbounds %struct.lwan_var_descriptor_t_, ptr %284, i32 0, i32 4, !dbg !15299
  %286 = load ptr, ptr %285, align 8, !dbg !15299
  %287 = load ptr, ptr %10, align 8, !dbg !15300
  %288 = call ptr @coro_new(ptr noundef %12, ptr noundef %286, ptr noundef %287), !dbg !15301
  store ptr %288, ptr %13, align 8, !dbg !15302
  call void @llvm.dbg.declare(metadata ptr %20, metadata !15303, metadata !DIExpression()), !dbg !15304
  %289 = load ptr, ptr %13, align 8, !dbg !15305
  %290 = call i32 @coro_resume_value(ptr noundef %289, i32 noundef 0), !dbg !15306
  %291 = icmp ne i32 %290, 0, !dbg !15306
  %292 = zext i1 %291 to i8, !dbg !15304
  store i8 %292, ptr %20, align 1, !dbg !15304
  call void @llvm.dbg.declare(metadata ptr %21, metadata !15307, metadata !DIExpression()), !dbg !15308
  %293 = load ptr, ptr %14, align 8, !dbg !15309
  %294 = getelementptr inbounds %struct.chunk, ptr %293, i32 0, i32 2, !dbg !15310
  %295 = load i32, ptr %294, align 8, !dbg !15310
  %296 = and i32 %295, 1, !dbg !15311
  store i32 %296, ptr %21, align 4, !dbg !15308
  %297 = load i32, ptr %21, align 4, !dbg !15312
  %298 = icmp ne i32 %297, 0, !dbg !15312
  br i1 %298, label %299, label %304, !dbg !15314

299:                                              ; preds = %278
  %300 = load i8, ptr %20, align 1, !dbg !15315
  %301 = trunc i8 %300 to i1, !dbg !15315
  %302 = xor i1 %301, true, !dbg !15316
  %303 = zext i1 %302 to i8, !dbg !15317
  store i8 %303, ptr %20, align 1, !dbg !15317
  br label %304, !dbg !15318

304:                                              ; preds = %299, %278
  %305 = load i8, ptr %20, align 1, !dbg !15319
  %306 = trunc i8 %305 to i1, !dbg !15319
  br i1 %306, label %342, label %307, !dbg !15321

307:                                              ; preds = %304
  %308 = load ptr, ptr %19, align 8, !dbg !15322
  %309 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %308, i32 0, i32 0, !dbg !15324
  %310 = load ptr, ptr %309, align 8, !dbg !15324
  store ptr %310, ptr %14, align 8, !dbg !15325
  %311 = load i32, ptr %21, align 4, !dbg !15326
  %312 = icmp ne i32 %311, 0, !dbg !15326
  br i1 %312, label %313, label %316, !dbg !15328

313:                                              ; preds = %307
  %314 = load ptr, ptr %13, align 8, !dbg !15329
  %315 = call i32 @coro_resume_value(ptr noundef %314, i32 noundef 1), !dbg !15330
  br label %316, !dbg !15330

316:                                              ; preds = %313, %307
  %317 = load ptr, ptr %13, align 8, !dbg !15331
  call void @coro_free(ptr noundef %317), !dbg !15332
  store ptr null, ptr %13, align 8, !dbg !15333
  %318 = load i32, ptr %21, align 4, !dbg !15334
  %319 = icmp ne i32 %318, 0, !dbg !15334
  br i1 %319, label %320, label %329, !dbg !15336

320:                                              ; preds = %316
  br label %321, !dbg !15337

321:                                              ; preds = %320
  %322 = load ptr, ptr %14, align 8, !dbg !15338
  %323 = getelementptr inbounds %struct.chunk, ptr %322, i32 0, i32 0, !dbg !15338
  %324 = load i32, ptr %323, align 8, !dbg !15338
  %325 = zext i32 %324 to i64, !dbg !15338
  %326 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %325, !dbg !15338
  %327 = load ptr, ptr %326, align 8, !dbg !15338
  br label %433, !dbg !15338

328:                                              ; No predecessors!
  br label %329, !dbg !15338

329:                                              ; preds = %328, %316
  br label %330, !dbg !15340

330:                                              ; preds = %329
  %331 = load ptr, ptr %14, align 8, !dbg !15341
  %332 = getelementptr inbounds %struct.chunk, ptr %331, i32 1, !dbg !15341
  store ptr %332, ptr %14, align 8, !dbg !15341
  br label %333, !dbg !15341

333:                                              ; preds = %330
  %334 = load ptr, ptr %14, align 8, !dbg !15343
  %335 = getelementptr inbounds %struct.chunk, ptr %334, i32 0, i32 0, !dbg !15343
  %336 = load i32, ptr %335, align 8, !dbg !15343
  %337 = zext i32 %336 to i64, !dbg !15343
  %338 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %337, !dbg !15343
  %339 = load ptr, ptr %338, align 8, !dbg !15343
  br label %433, !dbg !15343

340:                                              ; No predecessors!
  br label %341, !dbg !15341

341:                                              ; preds = %340
  br label %342, !dbg !15345

342:                                              ; preds = %341, %304
  %343 = load ptr, ptr %7, align 8, !dbg !15346
  %344 = load ptr, ptr %14, align 8, !dbg !15347
  %345 = getelementptr inbounds %struct.chunk, ptr %344, i64 1, !dbg !15348
  %346 = load ptr, ptr %9, align 8, !dbg !15349
  %347 = load ptr, ptr %10, align 8, !dbg !15350
  %348 = load ptr, ptr %14, align 8, !dbg !15351
  %349 = call ptr @apply_until(ptr noundef %343, ptr noundef %345, ptr noundef %346, ptr noundef %347, ptr noundef %348), !dbg !15352
  store ptr %349, ptr %14, align 8, !dbg !15353
  br label %350, !dbg !15354

350:                                              ; preds = %342
  %351 = load ptr, ptr %14, align 8, !dbg !15355
  %352 = getelementptr inbounds %struct.chunk, ptr %351, i32 0, i32 0, !dbg !15355
  %353 = load i32, ptr %352, align 8, !dbg !15355
  %354 = zext i32 %353 to i64, !dbg !15355
  %355 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %354, !dbg !15355
  %356 = load ptr, ptr %355, align 8, !dbg !15355
  br label %433, !dbg !15355

357:                                              ; No predecessors!
  br label %358, !dbg !15355

358:                                              ; preds = %433, %357
  call void @llvm.dbg.label(metadata !15357), !dbg !15358
  %359 = load ptr, ptr %11, align 8, !dbg !15359
  %360 = load ptr, ptr %14, align 8, !dbg !15361
  %361 = getelementptr inbounds %struct.chunk, ptr %360, i32 0, i32 1, !dbg !15362
  %362 = load ptr, ptr %361, align 8, !dbg !15362
  %363 = icmp eq ptr %359, %362, !dbg !15363
  br i1 %363, label %364, label %365, !dbg !15364

364:                                              ; preds = %358
  br label %429, !dbg !15365

365:                                              ; preds = %358
  %366 = load ptr, ptr %13, align 8, !dbg !15366
  %367 = icmp ne ptr %366, null, !dbg !15366
  %368 = xor i1 %367, true, !dbg !15366
  %369 = zext i1 %368 to i32, !dbg !15366
  %370 = sext i32 %369 to i64, !dbg !15366
  %371 = icmp ne i64 %370, 0, !dbg !15366
  br i1 %371, label %372, label %391, !dbg !15368

372:                                              ; preds = %365
  %373 = load ptr, ptr %14, align 8, !dbg !15369
  %374 = getelementptr inbounds %struct.chunk, ptr %373, i32 0, i32 2, !dbg !15372
  %375 = load i32, ptr %374, align 8, !dbg !15372
  %376 = icmp ne i32 %375, 0, !dbg !15369
  br i1 %376, label %378, label %377, !dbg !15373

377:                                              ; preds = %372
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_warning_debug(ptr noundef @.str.7.320, i32 noundef 1268, ptr noundef @__FUNCTION__.apply_until, ptr noundef @.str.54.377), !dbg !15374
  br label %378, !dbg !15374

378:                                              ; preds = %377, %372
  br label %379, !dbg !15375

379:                                              ; preds = %378
  %380 = load ptr, ptr %14, align 8, !dbg !15376
  %381 = getelementptr inbounds %struct.chunk, ptr %380, i32 1, !dbg !15376
  store ptr %381, ptr %14, align 8, !dbg !15376
  br label %382, !dbg !15376

382:                                              ; preds = %379
  %383 = load ptr, ptr %14, align 8, !dbg !15378
  %384 = getelementptr inbounds %struct.chunk, ptr %383, i32 0, i32 0, !dbg !15378
  %385 = load i32, ptr %384, align 8, !dbg !15378
  %386 = zext i32 %385 to i64, !dbg !15378
  %387 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %386, !dbg !15378
  %388 = load ptr, ptr %387, align 8, !dbg !15378
  br label %433, !dbg !15378

389:                                              ; No predecessors!
  br label %390, !dbg !15376

390:                                              ; preds = %389
  br label %391, !dbg !15380

391:                                              ; preds = %390, %365
  %392 = load ptr, ptr %13, align 8, !dbg !15381
  %393 = call i32 @coro_resume_value(ptr noundef %392, i32 noundef 0), !dbg !15383
  %394 = icmp ne i32 %393, 0, !dbg !15383
  br i1 %394, label %409, label %395, !dbg !15384

395:                                              ; preds = %391
  %396 = load ptr, ptr %13, align 8, !dbg !15385
  call void @coro_free(ptr noundef %396), !dbg !15387
  store ptr null, ptr %13, align 8, !dbg !15388
  br label %397, !dbg !15389

397:                                              ; preds = %395
  %398 = load ptr, ptr %14, align 8, !dbg !15390
  %399 = getelementptr inbounds %struct.chunk, ptr %398, i32 1, !dbg !15390
  store ptr %399, ptr %14, align 8, !dbg !15390
  br label %400, !dbg !15390

400:                                              ; preds = %397
  %401 = load ptr, ptr %14, align 8, !dbg !15392
  %402 = getelementptr inbounds %struct.chunk, ptr %401, i32 0, i32 0, !dbg !15392
  %403 = load i32, ptr %402, align 8, !dbg !15392
  %404 = zext i32 %403 to i64, !dbg !15392
  %405 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %404, !dbg !15392
  %406 = load ptr, ptr %405, align 8, !dbg !15392
  br label %433, !dbg !15392

407:                                              ; No predecessors!
  br label %408, !dbg !15390

408:                                              ; preds = %407
  br label %409, !dbg !15394

409:                                              ; preds = %408, %391
  %410 = load ptr, ptr %7, align 8, !dbg !15395
  %411 = load ptr, ptr %14, align 8, !dbg !15396
  %412 = getelementptr inbounds %struct.chunk, ptr %411, i32 0, i32 1, !dbg !15397
  %413 = load ptr, ptr %412, align 8, !dbg !15397
  %414 = getelementptr inbounds %struct.chunk, ptr %413, i64 1, !dbg !15398
  %415 = load ptr, ptr %9, align 8, !dbg !15399
  %416 = load ptr, ptr %10, align 8, !dbg !15400
  %417 = load ptr, ptr %14, align 8, !dbg !15401
  %418 = getelementptr inbounds %struct.chunk, ptr %417, i32 0, i32 1, !dbg !15402
  %419 = load ptr, ptr %418, align 8, !dbg !15402
  %420 = call ptr @apply_until(ptr noundef %410, ptr noundef %414, ptr noundef %415, ptr noundef %416, ptr noundef %419), !dbg !15403
  store ptr %420, ptr %14, align 8, !dbg !15404
  br label %421, !dbg !15405

421:                                              ; preds = %409
  %422 = load ptr, ptr %14, align 8, !dbg !15406
  %423 = getelementptr inbounds %struct.chunk, ptr %422, i32 0, i32 0, !dbg !15406
  %424 = load i32, ptr %423, align 8, !dbg !15406
  %425 = zext i32 %424 to i64, !dbg !15406
  %426 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %425, !dbg !15406
  %427 = load ptr, ptr %426, align 8, !dbg !15406
  br label %433, !dbg !15406

428:                                              ; No predecessors!
  br label %429, !dbg !15406

429:                                              ; preds = %433, %428, %364, %217
  call void @llvm.dbg.label(metadata !15408), !dbg !15409
  %430 = load ptr, ptr %14, align 8, !dbg !15410
  store ptr %430, ptr %6, align 8, !dbg !15411
  br label %431, !dbg !15411

431:                                              ; preds = %429, %29
  %432 = load ptr, ptr %6, align 8, !dbg !15412
  ret ptr %432, !dbg !15412

433:                                              ; preds = %421, %400, %382, %350, %333, %321, %269, %250, %222, %199, %141, %121, %101, %76, %56, %31
  %434 = phi ptr [ %37, %31 ], [ %62, %56 ], [ %82, %76 ], [ %107, %101 ], [ %127, %121 ], [ %147, %141 ], [ %205, %199 ], [ %228, %222 ], [ %256, %250 ], [ %275, %269 ], [ %327, %321 ], [ %339, %333 ], [ %356, %350 ], [ %388, %382 ], [ %406, %400 ], [ %427, %421 ]
  indirectbr ptr %434, [label %39, label %65, label %85, label %110, label %130, label %259, label %358, label %150, label %208, label %231, label %429]
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @strbuf_append_str(ptr noundef %0, ptr noundef %1, i64 noundef %2) #0 !dbg !15413 {
  %4 = alloca i1, align 1
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !15416, metadata !DIExpression()), !dbg !15417
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !15418, metadata !DIExpression()), !dbg !15419
  store i64 %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !15420, metadata !DIExpression()), !dbg !15421
  %8 = load i64, ptr %7, align 8, !dbg !15422
  %9 = icmp ne i64 %8, 0, !dbg !15422
  br i1 %9, label %13, label %10, !dbg !15424

10:                                               ; preds = %3
  %11 = load ptr, ptr %6, align 8, !dbg !15425
  %12 = call i64 @strlen(ptr noundef %11) #20, !dbg !15426
  store i64 %12, ptr %7, align 8, !dbg !15427
  br label %13, !dbg !15428

13:                                               ; preds = %10, %3
  %14 = load ptr, ptr %5, align 8, !dbg !15429
  %15 = load ptr, ptr %5, align 8, !dbg !15429
  %16 = getelementptr inbounds %struct.strbuf_t_, ptr %15, i32 0, i32 1, !dbg !15429
  %17 = getelementptr inbounds %struct.anon.3, ptr %16, i32 0, i32 1, !dbg !15429
  %18 = load i64, ptr %17, align 8, !dbg !15429
  %19 = load i64, ptr %7, align 8, !dbg !15429
  %20 = add i64 %18, %19, !dbg !15429
  %21 = add i64 %20, 2, !dbg !15429
  %22 = call zeroext i1 @grow_buffer_if_needed(ptr noundef %14, i64 noundef %21), !dbg !15429
  %23 = xor i1 %22, true, !dbg !15429
  %24 = zext i1 %23 to i32, !dbg !15429
  %25 = sext i32 %24 to i64, !dbg !15429
  %26 = icmp ne i64 %25, 0, !dbg !15429
  br i1 %26, label %27, label %28, !dbg !15431

27:                                               ; preds = %13
  store i1 false, ptr %4, align 1, !dbg !15432
  br label %54, !dbg !15432

28:                                               ; preds = %13
  %29 = load ptr, ptr %5, align 8, !dbg !15433
  %30 = getelementptr inbounds %struct.strbuf_t_, ptr %29, i32 0, i32 0, !dbg !15434
  %31 = load ptr, ptr %30, align 8, !dbg !15435
  %32 = load ptr, ptr %5, align 8, !dbg !15436
  %33 = getelementptr inbounds %struct.strbuf_t_, ptr %32, i32 0, i32 1, !dbg !15437
  %34 = getelementptr inbounds %struct.anon.3, ptr %33, i32 0, i32 1, !dbg !15438
  %35 = load i64, ptr %34, align 8, !dbg !15438
  %36 = getelementptr inbounds i8, ptr %31, i64 %35, !dbg !15439
  %37 = load ptr, ptr %6, align 8, !dbg !15440
  %38 = load i64, ptr %7, align 8, !dbg !15441
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %36, ptr align 1 %37, i64 %38, i1 false), !dbg !15442
  %39 = load i64, ptr %7, align 8, !dbg !15443
  %40 = load ptr, ptr %5, align 8, !dbg !15444
  %41 = getelementptr inbounds %struct.strbuf_t_, ptr %40, i32 0, i32 1, !dbg !15445
  %42 = getelementptr inbounds %struct.anon.3, ptr %41, i32 0, i32 1, !dbg !15446
  %43 = load i64, ptr %42, align 8, !dbg !15447
  %44 = add i64 %43, %39, !dbg !15447
  store i64 %44, ptr %42, align 8, !dbg !15447
  %45 = load ptr, ptr %5, align 8, !dbg !15448
  %46 = getelementptr inbounds %struct.strbuf_t_, ptr %45, i32 0, i32 0, !dbg !15449
  %47 = load ptr, ptr %46, align 8, !dbg !15450
  %48 = load ptr, ptr %5, align 8, !dbg !15451
  %49 = getelementptr inbounds %struct.strbuf_t_, ptr %48, i32 0, i32 1, !dbg !15452
  %50 = getelementptr inbounds %struct.anon.3, ptr %49, i32 0, i32 1, !dbg !15453
  %51 = load i64, ptr %50, align 8, !dbg !15453
  %52 = add i64 %51, 1, !dbg !15454
  %53 = getelementptr inbounds i8, ptr %47, i64 %52, !dbg !15448
  store i8 0, ptr %53, align 1, !dbg !15455
  store i1 true, ptr %4, align 1, !dbg !15456
  br label %54, !dbg !15456

54:                                               ; preds = %28, %27
  %55 = load i1, ptr %4, align 1, !dbg !15457
  ret i1 %55, !dbg !15457
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @strbuf_append_char(ptr noundef %0, i8 noundef signext %1) #0 !dbg !15458 {
  %3 = alloca i1, align 1
  %4 = alloca ptr, align 8
  %5 = alloca i8, align 1
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !15461, metadata !DIExpression()), !dbg !15462
  store i8 %1, ptr %5, align 1
  call void @llvm.dbg.declare(metadata ptr %5, metadata !15463, metadata !DIExpression()), !dbg !15464
  %6 = load ptr, ptr %4, align 8, !dbg !15465
  %7 = load ptr, ptr %4, align 8, !dbg !15465
  %8 = getelementptr inbounds %struct.strbuf_t_, ptr %7, i32 0, i32 1, !dbg !15465
  %9 = getelementptr inbounds %struct.anon.3, ptr %8, i32 0, i32 1, !dbg !15465
  %10 = load i64, ptr %9, align 8, !dbg !15465
  %11 = add i64 %10, 2, !dbg !15465
  %12 = call zeroext i1 @grow_buffer_if_needed(ptr noundef %6, i64 noundef %11), !dbg !15465
  %13 = xor i1 %12, true, !dbg !15465
  %14 = zext i1 %13 to i32, !dbg !15465
  %15 = sext i32 %14 to i64, !dbg !15465
  %16 = icmp ne i64 %15, 0, !dbg !15465
  br i1 %16, label %17, label %18, !dbg !15467

17:                                               ; preds = %2
  store i1 false, ptr %3, align 1, !dbg !15468
  br label %37, !dbg !15468

18:                                               ; preds = %2
  %19 = load i8, ptr %5, align 1, !dbg !15469
  %20 = load ptr, ptr %4, align 8, !dbg !15470
  %21 = getelementptr inbounds %struct.strbuf_t_, ptr %20, i32 0, i32 0, !dbg !15471
  %22 = load ptr, ptr %21, align 8, !dbg !15472
  %23 = load ptr, ptr %4, align 8, !dbg !15473
  %24 = getelementptr inbounds %struct.strbuf_t_, ptr %23, i32 0, i32 1, !dbg !15474
  %25 = getelementptr inbounds %struct.anon.3, ptr %24, i32 0, i32 1, !dbg !15475
  %26 = load i64, ptr %25, align 8, !dbg !15476
  %27 = add i64 %26, 1, !dbg !15476
  store i64 %27, ptr %25, align 8, !dbg !15476
  %28 = getelementptr inbounds i8, ptr %22, i64 %26, !dbg !15477
  store i8 %19, ptr %28, align 1, !dbg !15478
  %29 = load ptr, ptr %4, align 8, !dbg !15479
  %30 = getelementptr inbounds %struct.strbuf_t_, ptr %29, i32 0, i32 0, !dbg !15480
  %31 = load ptr, ptr %30, align 8, !dbg !15481
  %32 = load ptr, ptr %4, align 8, !dbg !15482
  %33 = getelementptr inbounds %struct.strbuf_t_, ptr %32, i32 0, i32 1, !dbg !15483
  %34 = getelementptr inbounds %struct.anon.3, ptr %33, i32 0, i32 1, !dbg !15484
  %35 = load i64, ptr %34, align 8, !dbg !15484
  %36 = getelementptr inbounds i8, ptr %31, i64 %35, !dbg !15485
  store i8 0, ptr %36, align 1, !dbg !15486
  store i1 true, ptr %3, align 1, !dbg !15487
  br label %37, !dbg !15487

37:                                               ; preds = %18, %17
  %38 = load i1, ptr %3, align 1, !dbg !15488
  ret i1 %38, !dbg !15488
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_append_str_to_strbuf(ptr noundef %0, ptr noundef %1) #0 !dbg !15489 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !15490, metadata !DIExpression()), !dbg !15491
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !15492, metadata !DIExpression()), !dbg !15493
  call void @llvm.dbg.declare(metadata ptr %5, metadata !15494, metadata !DIExpression()), !dbg !15495
  %6 = load ptr, ptr %4, align 8, !dbg !15496
  %7 = load ptr, ptr %6, align 8, !dbg !15497
  store ptr %7, ptr %5, align 8, !dbg !15495
  %8 = load ptr, ptr %5, align 8, !dbg !15498
  %9 = icmp ne ptr %8, null, !dbg !15498
  %10 = xor i1 %9, true, !dbg !15498
  %11 = xor i1 %10, true, !dbg !15498
  %12 = zext i1 %11 to i32, !dbg !15498
  %13 = sext i32 %12 to i64, !dbg !15498
  %14 = icmp ne i64 %13, 0, !dbg !15498
  br i1 %14, label %15, label %19, !dbg !15500

15:                                               ; preds = %2
  %16 = load ptr, ptr %3, align 8, !dbg !15501
  %17 = load ptr, ptr %5, align 8, !dbg !15502
  %18 = call zeroext i1 @strbuf_append_str(ptr noundef %16, ptr noundef %17, i64 noundef 0), !dbg !15503
  br label %19, !dbg !15503

19:                                               ; preds = %15, %2
  ret void, !dbg !15504
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_append_str_escaped_to_strbuf(ptr noundef %0, ptr noundef %1) #0 !dbg !15505 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !15506, metadata !DIExpression()), !dbg !15507
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !15508, metadata !DIExpression()), !dbg !15509
  %7 = load ptr, ptr %4, align 8, !dbg !15510
  %8 = icmp ne ptr %7, null, !dbg !15510
  %9 = xor i1 %8, true, !dbg !15510
  %10 = zext i1 %9 to i32, !dbg !15510
  %11 = sext i32 %10 to i64, !dbg !15510
  %12 = icmp ne i64 %11, 0, !dbg !15510
  br i1 %12, label %13, label %14, !dbg !15512

13:                                               ; preds = %2
  br label %92, !dbg !15513

14:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata ptr %5, metadata !15514, metadata !DIExpression()), !dbg !15515
  %15 = load ptr, ptr %4, align 8, !dbg !15516
  %16 = load ptr, ptr %15, align 8, !dbg !15517
  store ptr %16, ptr %5, align 8, !dbg !15515
  %17 = load ptr, ptr %5, align 8, !dbg !15518
  %18 = icmp ne ptr %17, null, !dbg !15518
  %19 = xor i1 %18, true, !dbg !15518
  %20 = zext i1 %19 to i32, !dbg !15518
  %21 = sext i32 %20 to i64, !dbg !15518
  %22 = icmp ne i64 %21, 0, !dbg !15518
  br i1 %22, label %23, label %24, !dbg !15520

23:                                               ; preds = %14
  br label %92, !dbg !15521

24:                                               ; preds = %14
  call void @llvm.dbg.declare(metadata ptr %6, metadata !15522, metadata !DIExpression()), !dbg !15524
  %25 = load ptr, ptr %5, align 8, !dbg !15525
  store ptr %25, ptr %6, align 8, !dbg !15524
  br label %26, !dbg !15526

26:                                               ; preds = %89, %24
  %27 = load ptr, ptr %6, align 8, !dbg !15527
  %28 = load i8, ptr %27, align 1, !dbg !15529
  %29 = icmp ne i8 %28, 0, !dbg !15530
  br i1 %29, label %30, label %92, !dbg !15530

30:                                               ; preds = %26
  %31 = load ptr, ptr %6, align 8, !dbg !15531
  %32 = load i8, ptr %31, align 1, !dbg !15534
  %33 = sext i8 %32 to i32, !dbg !15534
  %34 = icmp eq i32 %33, 60, !dbg !15535
  br i1 %34, label %35, label %38, !dbg !15536

35:                                               ; preds = %30
  %36 = load ptr, ptr %3, align 8, !dbg !15537
  %37 = call zeroext i1 @strbuf_append_str(ptr noundef %36, ptr noundef @.str.1.308, i64 noundef 4), !dbg !15538
  br label %88, !dbg !15538

38:                                               ; preds = %30
  %39 = load ptr, ptr %6, align 8, !dbg !15539
  %40 = load i8, ptr %39, align 1, !dbg !15541
  %41 = sext i8 %40 to i32, !dbg !15541
  %42 = icmp eq i32 %41, 62, !dbg !15542
  br i1 %42, label %43, label %46, !dbg !15543

43:                                               ; preds = %38
  %44 = load ptr, ptr %3, align 8, !dbg !15544
  %45 = call zeroext i1 @strbuf_append_str(ptr noundef %44, ptr noundef @.str.2.309, i64 noundef 4), !dbg !15545
  br label %87, !dbg !15545

46:                                               ; preds = %38
  %47 = load ptr, ptr %6, align 8, !dbg !15546
  %48 = load i8, ptr %47, align 1, !dbg !15548
  %49 = sext i8 %48 to i32, !dbg !15548
  %50 = icmp eq i32 %49, 38, !dbg !15549
  br i1 %50, label %51, label %54, !dbg !15550

51:                                               ; preds = %46
  %52 = load ptr, ptr %3, align 8, !dbg !15551
  %53 = call zeroext i1 @strbuf_append_str(ptr noundef %52, ptr noundef @.str.3.310, i64 noundef 5), !dbg !15552
  br label %86, !dbg !15552

54:                                               ; preds = %46
  %55 = load ptr, ptr %6, align 8, !dbg !15553
  %56 = load i8, ptr %55, align 1, !dbg !15555
  %57 = sext i8 %56 to i32, !dbg !15555
  %58 = icmp eq i32 %57, 34, !dbg !15556
  br i1 %58, label %59, label %62, !dbg !15557

59:                                               ; preds = %54
  %60 = load ptr, ptr %3, align 8, !dbg !15558
  %61 = call zeroext i1 @strbuf_append_str(ptr noundef %60, ptr noundef @.str.4.311, i64 noundef 6), !dbg !15559
  br label %85, !dbg !15559

62:                                               ; preds = %54
  %63 = load ptr, ptr %6, align 8, !dbg !15560
  %64 = load i8, ptr %63, align 1, !dbg !15562
  %65 = sext i8 %64 to i32, !dbg !15562
  %66 = icmp eq i32 %65, 39, !dbg !15563
  br i1 %66, label %67, label %70, !dbg !15564

67:                                               ; preds = %62
  %68 = load ptr, ptr %3, align 8, !dbg !15565
  %69 = call zeroext i1 @strbuf_append_str(ptr noundef %68, ptr noundef @.str.5.312, i64 noundef 6), !dbg !15566
  br label %84, !dbg !15566

70:                                               ; preds = %62
  %71 = load ptr, ptr %6, align 8, !dbg !15567
  %72 = load i8, ptr %71, align 1, !dbg !15569
  %73 = sext i8 %72 to i32, !dbg !15569
  %74 = icmp eq i32 %73, 47, !dbg !15570
  br i1 %74, label %75, label %78, !dbg !15571

75:                                               ; preds = %70
  %76 = load ptr, ptr %3, align 8, !dbg !15572
  %77 = call zeroext i1 @strbuf_append_str(ptr noundef %76, ptr noundef @.str.6.313, i64 noundef 6), !dbg !15573
  br label %83, !dbg !15573

78:                                               ; preds = %70
  %79 = load ptr, ptr %3, align 8, !dbg !15574
  %80 = load ptr, ptr %6, align 8, !dbg !15575
  %81 = load i8, ptr %80, align 1, !dbg !15576
  %82 = call zeroext i1 @strbuf_append_char(ptr noundef %79, i8 noundef signext %81), !dbg !15577
  br label %83

83:                                               ; preds = %78, %75
  br label %84

84:                                               ; preds = %83, %67
  br label %85

85:                                               ; preds = %84, %59
  br label %86

86:                                               ; preds = %85, %51
  br label %87

87:                                               ; preds = %86, %43
  br label %88

88:                                               ; preds = %87, %35
  br label %89, !dbg !15578

89:                                               ; preds = %88
  %90 = load ptr, ptr %6, align 8, !dbg !15579
  %91 = getelementptr inbounds i8, ptr %90, i32 1, !dbg !15579
  store ptr %91, ptr %6, align 8, !dbg !15579
  br label %26, !dbg !15580, !llvm.loop !15581

92:                                               ; preds = %26, %23, %13
  ret void, !dbg !15583
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @lwan_tpl_apply(ptr noundef %0, ptr noundef %1) #0 !dbg !15584 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !15587, metadata !DIExpression()), !dbg !15588
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !15589, metadata !DIExpression()), !dbg !15590
  call void @llvm.dbg.declare(metadata ptr %5, metadata !15591, metadata !DIExpression()), !dbg !15592
  %6 = load ptr, ptr %3, align 8, !dbg !15593
  %7 = getelementptr inbounds %struct.lwan_value_t_, ptr %6, i32 0, i32 1, !dbg !15594
  %8 = load i64, ptr %7, align 8, !dbg !15594
  %9 = call ptr @strbuf_new_with_size(i64 noundef %8), !dbg !15595
  store ptr %9, ptr %5, align 8, !dbg !15592
  %10 = load ptr, ptr %3, align 8, !dbg !15596
  %11 = load ptr, ptr %5, align 8, !dbg !15597
  %12 = load ptr, ptr %4, align 8, !dbg !15598
  %13 = call ptr @lwan_tpl_apply_with_buffer(ptr noundef %10, ptr noundef %11, ptr noundef %12), !dbg !15599
  ret ptr %13, !dbg !15600
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @strbuf_new_with_size(i64 noundef %0) #0 !dbg !15601 {
  %2 = alloca i64, align 8
  %3 = alloca ptr, align 8
  store i64 %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !15604, metadata !DIExpression()), !dbg !15605
  call void @llvm.dbg.declare(metadata ptr %3, metadata !15606, metadata !DIExpression()), !dbg !15607
  %4 = call noalias ptr @malloc(i64 noundef 32) #18, !dbg !15608
  store ptr %4, ptr %3, align 8, !dbg !15607
  %5 = load ptr, ptr %3, align 8, !dbg !15609
  %6 = load i64, ptr %2, align 8, !dbg !15609
  %7 = call zeroext i1 @strbuf_init_with_size(ptr noundef %5, i64 noundef %6), !dbg !15609
  %8 = xor i1 %7, true, !dbg !15609
  %9 = zext i1 %8 to i32, !dbg !15609
  %10 = sext i32 %9 to i64, !dbg !15609
  %11 = icmp ne i64 %10, 0, !dbg !15609
  br i1 %11, label %12, label %14, !dbg !15611

12:                                               ; preds = %1
  %13 = load ptr, ptr %3, align 8, !dbg !15612
  call void @free(ptr noundef %13) #17, !dbg !15614
  store ptr null, ptr %3, align 8, !dbg !15615
  br label %19, !dbg !15616

14:                                               ; preds = %1
  %15 = load ptr, ptr %3, align 8, !dbg !15617
  %16 = getelementptr inbounds %struct.strbuf_t_, ptr %15, i32 0, i32 2, !dbg !15619
  %17 = load i32, ptr %16, align 8, !dbg !15620
  %18 = or i32 %17, 2, !dbg !15620
  store i32 %18, ptr %16, align 8, !dbg !15620
  br label %19

19:                                               ; preds = %14, %12
  %20 = load ptr, ptr %3, align 8, !dbg !15621
  ret ptr %20, !dbg !15622
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @strbuf_init_with_size(ptr noundef %0, i64 noundef %1) #0 !dbg !15623 {
  %3 = alloca i1, align 1
  %4 = alloca ptr, align 8
  %5 = alloca i64, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !15624, metadata !DIExpression()), !dbg !15625
  store i64 %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !15626, metadata !DIExpression()), !dbg !15627
  %6 = load ptr, ptr %4, align 8, !dbg !15628
  %7 = icmp ne ptr %6, null, !dbg !15628
  %8 = xor i1 %7, true, !dbg !15628
  %9 = zext i1 %8 to i32, !dbg !15628
  %10 = sext i32 %9 to i64, !dbg !15628
  %11 = icmp ne i64 %10, 0, !dbg !15628
  br i1 %11, label %12, label %13, !dbg !15630

12:                                               ; preds = %2
  store i1 false, ptr %3, align 1, !dbg !15631
  br label %31, !dbg !15631

13:                                               ; preds = %2
  %14 = load ptr, ptr %4, align 8, !dbg !15632
  call void @llvm.memset.p0.i64(ptr align 8 %14, i8 0, i64 32, i1 false), !dbg !15633
  %15 = load ptr, ptr %4, align 8, !dbg !15634
  %16 = load i64, ptr %5, align 8, !dbg !15634
  %17 = call zeroext i1 @grow_buffer_if_needed(ptr noundef %15, i64 noundef %16), !dbg !15634
  %18 = xor i1 %17, true, !dbg !15634
  %19 = zext i1 %18 to i32, !dbg !15634
  %20 = sext i32 %19 to i64, !dbg !15634
  %21 = icmp ne i64 %20, 0, !dbg !15634
  br i1 %21, label %22, label %23, !dbg !15636

22:                                               ; preds = %13
  store i1 false, ptr %3, align 1, !dbg !15637
  br label %31, !dbg !15637

23:                                               ; preds = %13
  %24 = load ptr, ptr %4, align 8, !dbg !15638
  %25 = getelementptr inbounds %struct.strbuf_t_, ptr %24, i32 0, i32 1, !dbg !15639
  %26 = getelementptr inbounds %struct.anon.3, ptr %25, i32 0, i32 1, !dbg !15640
  store i64 0, ptr %26, align 8, !dbg !15641
  %27 = load ptr, ptr %4, align 8, !dbg !15642
  %28 = getelementptr inbounds %struct.strbuf_t_, ptr %27, i32 0, i32 0, !dbg !15643
  %29 = load ptr, ptr %28, align 8, !dbg !15644
  %30 = getelementptr inbounds i8, ptr %29, i64 0, !dbg !15642
  store i8 0, ptr %30, align 1, !dbg !15645
  store i1 true, ptr %3, align 1, !dbg !15646
  br label %31, !dbg !15646

31:                                               ; preds = %23, %22, %12
  %32 = load i1, ptr %3, align 1, !dbg !15647
  ret i1 %32, !dbg !15647
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @grow_buffer_if_needed(ptr noundef %0, i64 noundef %1) #0 !dbg !15648 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i1, align 1
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca ptr, align 8
  %10 = alloca i64, align 8
  %11 = alloca ptr, align 8
  store ptr %0, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !15649, metadata !DIExpression()), !dbg !15650
  store i64 %1, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !15651, metadata !DIExpression()), !dbg !15652
  %12 = load ptr, ptr %6, align 8, !dbg !15653
  %13 = getelementptr inbounds %struct.strbuf_t_, ptr %12, i32 0, i32 2, !dbg !15655
  %14 = load i32, ptr %13, align 8, !dbg !15655
  %15 = and i32 %14, 1, !dbg !15656
  %16 = icmp ne i32 %15, 0, !dbg !15656
  br i1 %16, label %17, label %66, !dbg !15657

17:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata ptr %8, metadata !15658, metadata !DIExpression()), !dbg !15660
  %18 = load i64, ptr %7, align 8, !dbg !15661
  %19 = add i64 %18, 1, !dbg !15662
  %20 = load ptr, ptr %6, align 8, !dbg !15663
  %21 = getelementptr inbounds %struct.strbuf_t_, ptr %20, i32 0, i32 1, !dbg !15664
  %22 = getelementptr inbounds %struct.anon.3, ptr %21, i32 0, i32 1, !dbg !15665
  %23 = load i64, ptr %22, align 8, !dbg !15665
  store i64 %19, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !15666, metadata !DIExpression()), !dbg !15670
  store i64 %23, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !15672, metadata !DIExpression()), !dbg !15673
  %24 = load i64, ptr %3, align 8, !dbg !15674
  %25 = load i64, ptr %4, align 8, !dbg !15675
  %26 = icmp ugt i64 %24, %25, !dbg !15676
  br i1 %26, label %27, label %29, !dbg !15677

27:                                               ; preds = %17
  %28 = load i64, ptr %3, align 8, !dbg !15678
  br label %31, !dbg !15677

29:                                               ; preds = %17
  %30 = load i64, ptr %4, align 8, !dbg !15679
  br label %31, !dbg !15677

31:                                               ; preds = %29, %27
  %32 = phi i64 [ %28, %27 ], [ %30, %29 ], !dbg !15677
  %33 = call i64 @find_next_power_of_two(i64 noundef %32), !dbg !15680
  store i64 %33, ptr %8, align 8, !dbg !15660
  call void @llvm.dbg.declare(metadata ptr %9, metadata !15681, metadata !DIExpression()), !dbg !15682
  %34 = load i64, ptr %8, align 8, !dbg !15683
  %35 = call noalias ptr @malloc(i64 noundef %34) #18, !dbg !15684
  store ptr %35, ptr %9, align 8, !dbg !15682
  %36 = load ptr, ptr %9, align 8, !dbg !15685
  %37 = icmp ne ptr %36, null, !dbg !15685
  br i1 %37, label %39, label %38, !dbg !15687

38:                                               ; preds = %31
  store i1 false, ptr %5, align 1, !dbg !15688
  br label %101, !dbg !15688

39:                                               ; preds = %31
  %40 = load ptr, ptr %9, align 8, !dbg !15689
  %41 = load ptr, ptr %6, align 8, !dbg !15690
  %42 = getelementptr inbounds %struct.strbuf_t_, ptr %41, i32 0, i32 0, !dbg !15691
  %43 = load ptr, ptr %42, align 8, !dbg !15692
  %44 = load ptr, ptr %6, align 8, !dbg !15693
  %45 = getelementptr inbounds %struct.strbuf_t_, ptr %44, i32 0, i32 1, !dbg !15694
  %46 = getelementptr inbounds %struct.anon.3, ptr %45, i32 0, i32 1, !dbg !15695
  %47 = load i64, ptr %46, align 8, !dbg !15695
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %40, ptr align 1 %43, i64 %47, i1 false), !dbg !15696
  %48 = load ptr, ptr %9, align 8, !dbg !15697
  %49 = load ptr, ptr %6, align 8, !dbg !15698
  %50 = getelementptr inbounds %struct.strbuf_t_, ptr %49, i32 0, i32 1, !dbg !15699
  %51 = getelementptr inbounds %struct.anon.3, ptr %50, i32 0, i32 1, !dbg !15700
  %52 = load i64, ptr %51, align 8, !dbg !15700
  %53 = add i64 %52, 1, !dbg !15701
  %54 = getelementptr inbounds i8, ptr %48, i64 %53, !dbg !15697
  store i8 0, ptr %54, align 1, !dbg !15702
  %55 = load ptr, ptr %6, align 8, !dbg !15703
  %56 = getelementptr inbounds %struct.strbuf_t_, ptr %55, i32 0, i32 2, !dbg !15704
  %57 = load i32, ptr %56, align 8, !dbg !15705
  %58 = and i32 %57, -2, !dbg !15705
  store i32 %58, ptr %56, align 8, !dbg !15705
  %59 = load i64, ptr %8, align 8, !dbg !15706
  %60 = load ptr, ptr %6, align 8, !dbg !15707
  %61 = getelementptr inbounds %struct.strbuf_t_, ptr %60, i32 0, i32 1, !dbg !15708
  %62 = getelementptr inbounds %struct.anon.3, ptr %61, i32 0, i32 0, !dbg !15709
  store i64 %59, ptr %62, align 8, !dbg !15710
  %63 = load ptr, ptr %9, align 8, !dbg !15711
  %64 = load ptr, ptr %6, align 8, !dbg !15712
  %65 = getelementptr inbounds %struct.strbuf_t_, ptr %64, i32 0, i32 0, !dbg !15713
  store ptr %63, ptr %65, align 8, !dbg !15714
  store i1 true, ptr %5, align 1, !dbg !15715
  br label %101, !dbg !15715

66:                                               ; preds = %2
  %67 = load ptr, ptr %6, align 8, !dbg !15716
  %68 = getelementptr inbounds %struct.strbuf_t_, ptr %67, i32 0, i32 1, !dbg !15716
  %69 = getelementptr inbounds %struct.anon.3, ptr %68, i32 0, i32 0, !dbg !15716
  %70 = load i64, ptr %69, align 8, !dbg !15716
  %71 = load i64, ptr %7, align 8, !dbg !15716
  %72 = icmp ult i64 %70, %71, !dbg !15716
  %73 = zext i1 %72 to i32, !dbg !15716
  %74 = sext i32 %73 to i64, !dbg !15716
  %75 = icmp ne i64 %74, 0, !dbg !15716
  br i1 %75, label %76, label %100, !dbg !15718

76:                                               ; preds = %66
  call void @llvm.dbg.declare(metadata ptr %10, metadata !15719, metadata !DIExpression()), !dbg !15721
  %77 = load i64, ptr %7, align 8, !dbg !15722
  %78 = call i64 @find_next_power_of_two(i64 noundef %77), !dbg !15723
  store i64 %78, ptr %10, align 8, !dbg !15721
  call void @llvm.dbg.declare(metadata ptr %11, metadata !15724, metadata !DIExpression()), !dbg !15725
  %79 = load ptr, ptr %6, align 8, !dbg !15726
  %80 = getelementptr inbounds %struct.strbuf_t_, ptr %79, i32 0, i32 0, !dbg !15727
  %81 = load ptr, ptr %80, align 8, !dbg !15728
  %82 = load i64, ptr %10, align 8, !dbg !15729
  %83 = add i64 %82, 1, !dbg !15730
  %84 = call ptr @realloc(ptr noundef %81, i64 noundef %83) #22, !dbg !15731
  store ptr %84, ptr %11, align 8, !dbg !15725
  %85 = load ptr, ptr %11, align 8, !dbg !15732
  %86 = icmp ne ptr %85, null, !dbg !15732
  %87 = xor i1 %86, true, !dbg !15732
  %88 = zext i1 %87 to i32, !dbg !15732
  %89 = sext i32 %88 to i64, !dbg !15732
  %90 = icmp ne i64 %89, 0, !dbg !15732
  br i1 %90, label %91, label %92, !dbg !15734

91:                                               ; preds = %76
  store i1 false, ptr %5, align 1, !dbg !15735
  br label %101, !dbg !15735

92:                                               ; preds = %76
  %93 = load i64, ptr %10, align 8, !dbg !15736
  %94 = load ptr, ptr %6, align 8, !dbg !15737
  %95 = getelementptr inbounds %struct.strbuf_t_, ptr %94, i32 0, i32 1, !dbg !15738
  %96 = getelementptr inbounds %struct.anon.3, ptr %95, i32 0, i32 0, !dbg !15739
  store i64 %93, ptr %96, align 8, !dbg !15740
  %97 = load ptr, ptr %11, align 8, !dbg !15741
  %98 = load ptr, ptr %6, align 8, !dbg !15742
  %99 = getelementptr inbounds %struct.strbuf_t_, ptr %98, i32 0, i32 0, !dbg !15743
  store ptr %97, ptr %99, align 8, !dbg !15744
  br label %100, !dbg !15745

100:                                              ; preds = %92, %66
  store i1 true, ptr %5, align 1, !dbg !15746
  br label %101, !dbg !15746

101:                                              ; preds = %100, %91, %39, %38
  %102 = load i1, ptr %5, align 1, !dbg !15747
  ret i1 %102, !dbg !15747
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @find_next_power_of_two(i64 noundef %0) #0 !dbg !15748 {
  %2 = alloca i64, align 8
  store i64 %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !15751, metadata !DIExpression()), !dbg !15752
  %3 = load i64, ptr %2, align 8, !dbg !15753
  %4 = add i64 %3, -1, !dbg !15753
  store i64 %4, ptr %2, align 8, !dbg !15753
  %5 = load i64, ptr %2, align 8, !dbg !15754
  %6 = lshr i64 %5, 1, !dbg !15755
  %7 = load i64, ptr %2, align 8, !dbg !15756
  %8 = or i64 %7, %6, !dbg !15756
  store i64 %8, ptr %2, align 8, !dbg !15756
  %9 = load i64, ptr %2, align 8, !dbg !15757
  %10 = lshr i64 %9, 2, !dbg !15758
  %11 = load i64, ptr %2, align 8, !dbg !15759
  %12 = or i64 %11, %10, !dbg !15759
  store i64 %12, ptr %2, align 8, !dbg !15759
  %13 = load i64, ptr %2, align 8, !dbg !15760
  %14 = lshr i64 %13, 4, !dbg !15761
  %15 = load i64, ptr %2, align 8, !dbg !15762
  %16 = or i64 %15, %14, !dbg !15762
  store i64 %16, ptr %2, align 8, !dbg !15762
  %17 = load i64, ptr %2, align 8, !dbg !15763
  %18 = lshr i64 %17, 8, !dbg !15764
  %19 = load i64, ptr %2, align 8, !dbg !15765
  %20 = or i64 %19, %18, !dbg !15765
  store i64 %20, ptr %2, align 8, !dbg !15765
  %21 = load i64, ptr %2, align 8, !dbg !15766
  %22 = lshr i64 %21, 16, !dbg !15767
  %23 = load i64, ptr %2, align 8, !dbg !15768
  %24 = or i64 %23, %22, !dbg !15768
  store i64 %24, ptr %2, align 8, !dbg !15768
  %25 = load i64, ptr %2, align 8, !dbg !15769
  %26 = add i64 %25, 1, !dbg !15770
  ret i64 %26, !dbg !15771
}

; Function Attrs: nounwind willreturn memory(read)
declare i32 @memcmp(ptr noundef, ptr noundef, i64 noundef) #8

; Function Attrs: nounwind
declare i64 @time(ptr noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_format_rfc_time(i64 noundef %0, ptr noundef %1) #0 !dbg !15772 {
  %3 = alloca i64, align 8
  %4 = alloca ptr, align 8
  %5 = alloca %struct.tm, align 8
  store i64 %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !15775, metadata !DIExpression()), !dbg !15776
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !15777, metadata !DIExpression()), !dbg !15778
  call void @llvm.dbg.declare(metadata ptr %5, metadata !15779, metadata !DIExpression()), !dbg !15793
  %6 = call ptr @gmtime_r(ptr noundef %3, ptr noundef %5) #17, !dbg !15794
  %7 = icmp ne ptr %6, null, !dbg !15794
  %8 = xor i1 %7, true, !dbg !15794
  %9 = zext i1 %8 to i32, !dbg !15794
  %10 = sext i32 %9 to i64, !dbg !15794
  %11 = icmp ne i64 %10, 0, !dbg !15794
  br i1 %11, label %12, label %13, !dbg !15796

12:                                               ; preds = %2
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.380, i32 noundef 241, ptr noundef @__FUNCTION__.lwan_format_rfc_time, ptr noundef @.str.1.381), !dbg !15797
  br label %22, !dbg !15799

13:                                               ; preds = %2
  %14 = load ptr, ptr %4, align 8, !dbg !15800
  %15 = call i64 @strftime(ptr noundef %14, i64 noundef 30, ptr noundef @.str.2.382, ptr noundef %5) #17, !dbg !15800
  %16 = icmp ne i64 %15, 0, !dbg !15800
  %17 = xor i1 %16, true, !dbg !15800
  %18 = zext i1 %17 to i32, !dbg !15800
  %19 = sext i32 %18 to i64, !dbg !15800
  %20 = icmp ne i64 %19, 0, !dbg !15800
  br i1 %20, label %21, label %22, !dbg !15802

21:                                               ; preds = %13
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.380, i32 noundef 246, ptr noundef @__FUNCTION__.lwan_format_rfc_time, ptr noundef @.str.3.383), !dbg !15803
  br label %22, !dbg !15803

22:                                               ; preds = %21, %13, %12
  ret void, !dbg !15804
}

; Function Attrs: nounwind
declare ptr @gmtime_r(ptr noundef, ptr noundef) #2

; Function Attrs: nounwind
declare i64 @strftime(ptr noundef, i64 noundef, ptr noundef, ptr noundef) #2

; Function Attrs: nounwind
declare i32 @getrlimit(i32 noundef, ptr noundef) #2

; Function Attrs: nounwind
declare i32 @setrlimit(i32 noundef, ptr noundef) #2

; Function Attrs: nounwind
declare i64 @sysconf(i32 noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @parse_listener(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !15805 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !15810, metadata !DIExpression()), !dbg !15811
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !15812, metadata !DIExpression()), !dbg !15813
  store ptr %2, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !15814, metadata !DIExpression()), !dbg !15815
  %8 = load ptr, ptr %5, align 8, !dbg !15816
  %9 = getelementptr inbounds %struct.config_line_t_, ptr %8, i32 0, i32 0, !dbg !15817
  %10 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %9, i32 0, i32 1, !dbg !15818
  %11 = load ptr, ptr %10, align 8, !dbg !15818
  %12 = call noalias ptr @strdup(ptr noundef %11) #17, !dbg !15819
  %13 = load ptr, ptr %6, align 8, !dbg !15820
  %14 = getelementptr inbounds %struct.lwan_t_, ptr %13, i32 0, i32 4, !dbg !15821
  %15 = getelementptr inbounds %struct.lwan_config_t_, ptr %14, i32 0, i32 0, !dbg !15822
  store ptr %12, ptr %15, align 8, !dbg !15823
  br label %16, !dbg !15824

16:                                               ; preds = %62, %3
  %17 = load ptr, ptr %4, align 8, !dbg !15825
  %18 = load ptr, ptr %5, align 8, !dbg !15826
  %19 = call zeroext i1 @config_read_line(ptr noundef %17, ptr noundef %18), !dbg !15827
  br i1 %19, label %20, label %63, !dbg !15824

20:                                               ; preds = %16
  %21 = load ptr, ptr %5, align 8, !dbg !15828
  %22 = getelementptr inbounds %struct.config_line_t_, ptr %21, i32 0, i32 1, !dbg !15830
  %23 = load i32, ptr %22, align 8, !dbg !15830
  switch i32 %23, label %62 [
    i32 0, label %24
    i32 1, label %27
    i32 2, label %61
  ], !dbg !15831

24:                                               ; preds = %20
  %25 = load ptr, ptr %4, align 8, !dbg !15832
  %26 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %25, ptr noundef @.str.34.86), !dbg !15834
  br label %66, !dbg !15835

27:                                               ; preds = %20
  %28 = load ptr, ptr %5, align 8, !dbg !15836
  %29 = getelementptr inbounds %struct.config_line_t_, ptr %28, i32 0, i32 0, !dbg !15838
  %30 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %29, i32 0, i32 0, !dbg !15839
  %31 = load ptr, ptr %30, align 8, !dbg !15839
  %32 = call i32 @strcmp(ptr noundef %31, ptr noundef @.str.35.87) #20, !dbg !15840
  %33 = icmp ne i32 %32, 0, !dbg !15840
  br i1 %33, label %38, label %34, !dbg !15841

34:                                               ; preds = %27
  %35 = load ptr, ptr %4, align 8, !dbg !15842
  %36 = load ptr, ptr %5, align 8, !dbg !15844
  %37 = load ptr, ptr %6, align 8, !dbg !15845
  call void @parse_listener_prefix(ptr noundef %35, ptr noundef %36, ptr noundef %37, ptr noundef null), !dbg !15846
  br label %60, !dbg !15847

38:                                               ; preds = %27
  call void @llvm.dbg.declare(metadata ptr %7, metadata !15848, metadata !DIExpression()), !dbg !15850
  %39 = load ptr, ptr %6, align 8, !dbg !15851
  %40 = load ptr, ptr %5, align 8, !dbg !15852
  %41 = getelementptr inbounds %struct.config_line_t_, ptr %40, i32 0, i32 0, !dbg !15853
  %42 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %41, i32 0, i32 0, !dbg !15854
  %43 = load ptr, ptr %42, align 8, !dbg !15854
  %44 = call ptr @lwan_module_find(ptr noundef %39, ptr noundef %43), !dbg !15855
  store ptr %44, ptr %7, align 8, !dbg !15850
  %45 = load ptr, ptr %7, align 8, !dbg !15856
  %46 = icmp ne ptr %45, null, !dbg !15856
  br i1 %46, label %54, label %47, !dbg !15858

47:                                               ; preds = %38
  %48 = load ptr, ptr %4, align 8, !dbg !15859
  %49 = load ptr, ptr %5, align 8, !dbg !15861
  %50 = getelementptr inbounds %struct.config_line_t_, ptr %49, i32 0, i32 0, !dbg !15862
  %51 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %50, i32 0, i32 0, !dbg !15863
  %52 = load ptr, ptr %51, align 8, !dbg !15863
  %53 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %48, ptr noundef @.str.36.88, ptr noundef %52), !dbg !15864
  br label %59, !dbg !15865

54:                                               ; preds = %38
  %55 = load ptr, ptr %4, align 8, !dbg !15866
  %56 = load ptr, ptr %5, align 8, !dbg !15868
  %57 = load ptr, ptr %6, align 8, !dbg !15869
  %58 = load ptr, ptr %7, align 8, !dbg !15870
  call void @parse_listener_prefix(ptr noundef %55, ptr noundef %56, ptr noundef %57, ptr noundef %58), !dbg !15871
  br label %59

59:                                               ; preds = %54, %47
  br label %60

60:                                               ; preds = %59, %34
  br label %62, !dbg !15872

61:                                               ; preds = %20
  br label %66, !dbg !15873

62:                                               ; preds = %60, %20
  br label %16, !dbg !15824, !llvm.loop !15874

63:                                               ; preds = %16
  %64 = load ptr, ptr %4, align 8, !dbg !15876
  %65 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %64, ptr noundef @.str.37.69), !dbg !15877
  br label %66, !dbg !15878

66:                                               ; preds = %63, %61, %24
  ret void, !dbg !15878
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @parse_listener_prefix(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 !dbg !15879 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca %struct.lwan_url_map_t_, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca i64, align 8
  %15 = alloca ptr, align 8
  %16 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !15882, metadata !DIExpression()), !dbg !15883
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !15884, metadata !DIExpression()), !dbg !15885
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !15886, metadata !DIExpression()), !dbg !15887
  store ptr %3, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !15888, metadata !DIExpression()), !dbg !15889
  call void @llvm.dbg.declare(metadata ptr %9, metadata !15890, metadata !DIExpression()), !dbg !15891
  call void @llvm.memset.p0.i64(ptr align 8 %9, i8 0, i64 72, i1 false), !dbg !15891
  call void @llvm.dbg.declare(metadata ptr %10, metadata !15892, metadata !DIExpression()), !dbg !15893
  %17 = call ptr @hash_str_new(ptr noundef @free, ptr noundef @free), !dbg !15894
  store ptr %17, ptr %10, align 8, !dbg !15893
  call void @llvm.dbg.declare(metadata ptr %11, metadata !15895, metadata !DIExpression()), !dbg !15896
  store ptr null, ptr %11, align 8, !dbg !15896
  call void @llvm.dbg.declare(metadata ptr %12, metadata !15897, metadata !DIExpression()), !dbg !15898
  call void @llvm.dbg.declare(metadata ptr %13, metadata !15899, metadata !DIExpression()), !dbg !15901
  %18 = load ptr, ptr %6, align 8, !dbg !15901
  %19 = getelementptr inbounds %struct.config_line_t_, ptr %18, i32 0, i32 0, !dbg !15901
  %20 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %19, i32 0, i32 1, !dbg !15901
  %21 = load ptr, ptr %20, align 8, !dbg !15901
  store ptr %21, ptr %13, align 8, !dbg !15901
  call void @llvm.dbg.declare(metadata ptr %14, metadata !15902, metadata !DIExpression()), !dbg !15901
  %22 = load ptr, ptr %13, align 8, !dbg !15901
  %23 = call i64 @strlen(ptr noundef %22) #20, !dbg !15901
  %24 = add i64 %23, 1, !dbg !15901
  store i64 %24, ptr %14, align 8, !dbg !15901
  call void @llvm.dbg.declare(metadata ptr %15, metadata !15903, metadata !DIExpression()), !dbg !15901
  %25 = load i64, ptr %14, align 8, !dbg !15901
  %26 = alloca i8, i64 %25, align 16, !dbg !15901
  store ptr %26, ptr %15, align 8, !dbg !15901
  %27 = load ptr, ptr %15, align 8, !dbg !15901
  %28 = load ptr, ptr %13, align 8, !dbg !15901
  %29 = load i64, ptr %14, align 8, !dbg !15901
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %27, ptr align 1 %28, i64 %29, i1 false), !dbg !15901
  store ptr %27, ptr %16, align 8, !dbg !15901
  %30 = load ptr, ptr %16, align 8, !dbg !15901
  store ptr %30, ptr %12, align 8, !dbg !15898
  br label %31, !dbg !15904

31:                                               ; preds = %126, %4
  %32 = load ptr, ptr %5, align 8, !dbg !15905
  %33 = load ptr, ptr %6, align 8, !dbg !15906
  %34 = call zeroext i1 @config_read_line(ptr noundef %32, ptr noundef %33), !dbg !15907
  br i1 %34, label %35, label %127, !dbg !15904

35:                                               ; preds = %31
  %36 = load ptr, ptr %6, align 8, !dbg !15908
  %37 = getelementptr inbounds %struct.config_line_t_, ptr %36, i32 0, i32 1, !dbg !15910
  %38 = load i32, ptr %37, align 8, !dbg !15910
  switch i32 %38, label %126 [
    i32 0, label %39
    i32 1, label %107
    i32 2, label %125
  ], !dbg !15911

39:                                               ; preds = %35
  %40 = load ptr, ptr %6, align 8, !dbg !15912
  %41 = getelementptr inbounds %struct.config_line_t_, ptr %40, i32 0, i32 0, !dbg !15915
  %42 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %41, i32 0, i32 0, !dbg !15916
  %43 = load ptr, ptr %42, align 8, !dbg !15916
  %44 = call i32 @strcmp(ptr noundef %43, ptr noundef @.str.38.89) #20, !dbg !15917
  %45 = icmp ne i32 %44, 0, !dbg !15917
  br i1 %45, label %69, label %46, !dbg !15918

46:                                               ; preds = %39
  %47 = load ptr, ptr %8, align 8, !dbg !15919
  %48 = icmp ne ptr %47, null, !dbg !15919
  br i1 %48, label %49, label %52, !dbg !15922

49:                                               ; preds = %46
  %50 = load ptr, ptr %5, align 8, !dbg !15923
  %51 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %50, ptr noundef @.str.39.70), !dbg !15925
  br label %202, !dbg !15926

52:                                               ; preds = %46
  %53 = load ptr, ptr %7, align 8, !dbg !15927
  %54 = load ptr, ptr %6, align 8, !dbg !15928
  %55 = getelementptr inbounds %struct.config_line_t_, ptr %54, i32 0, i32 0, !dbg !15929
  %56 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %55, i32 0, i32 1, !dbg !15930
  %57 = load ptr, ptr %56, align 8, !dbg !15930
  %58 = call ptr @lwan_module_find(ptr noundef %53, ptr noundef %57), !dbg !15931
  store ptr %58, ptr %8, align 8, !dbg !15932
  %59 = load ptr, ptr %8, align 8, !dbg !15933
  %60 = icmp ne ptr %59, null, !dbg !15933
  br i1 %60, label %68, label %61, !dbg !15935

61:                                               ; preds = %52
  %62 = load ptr, ptr %5, align 8, !dbg !15936
  %63 = load ptr, ptr %6, align 8, !dbg !15938
  %64 = getelementptr inbounds %struct.config_line_t_, ptr %63, i32 0, i32 0, !dbg !15939
  %65 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %64, i32 0, i32 1, !dbg !15940
  %66 = load ptr, ptr %65, align 8, !dbg !15940
  %67 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %62, ptr noundef @.str.40.90, ptr noundef %66), !dbg !15941
  br label %202, !dbg !15942

68:                                               ; preds = %52
  br label %106, !dbg !15943

69:                                               ; preds = %39
  %70 = load ptr, ptr %6, align 8, !dbg !15944
  %71 = getelementptr inbounds %struct.config_line_t_, ptr %70, i32 0, i32 0, !dbg !15946
  %72 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %71, i32 0, i32 0, !dbg !15947
  %73 = load ptr, ptr %72, align 8, !dbg !15947
  %74 = call i32 @strcmp(ptr noundef %73, ptr noundef @.str.41) #20, !dbg !15948
  %75 = icmp ne i32 %74, 0, !dbg !15948
  br i1 %75, label %92, label %76, !dbg !15949

76:                                               ; preds = %69
  %77 = load ptr, ptr %6, align 8, !dbg !15950
  %78 = getelementptr inbounds %struct.config_line_t_, ptr %77, i32 0, i32 0, !dbg !15952
  %79 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %78, i32 0, i32 1, !dbg !15953
  %80 = load ptr, ptr %79, align 8, !dbg !15953
  %81 = call ptr @find_handler_symbol(ptr noundef %80), !dbg !15954
  store ptr %81, ptr %11, align 8, !dbg !15955
  %82 = load ptr, ptr %11, align 8, !dbg !15956
  %83 = icmp ne ptr %82, null, !dbg !15956
  br i1 %83, label %91, label %84, !dbg !15958

84:                                               ; preds = %76
  %85 = load ptr, ptr %5, align 8, !dbg !15959
  %86 = load ptr, ptr %6, align 8, !dbg !15961
  %87 = getelementptr inbounds %struct.config_line_t_, ptr %86, i32 0, i32 0, !dbg !15962
  %88 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %87, i32 0, i32 1, !dbg !15963
  %89 = load ptr, ptr %88, align 8, !dbg !15963
  %90 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %85, ptr noundef @.str.42.71, ptr noundef %89), !dbg !15964
  br label %202, !dbg !15965

91:                                               ; preds = %76
  br label %105, !dbg !15966

92:                                               ; preds = %69
  %93 = load ptr, ptr %10, align 8, !dbg !15967
  %94 = load ptr, ptr %6, align 8, !dbg !15969
  %95 = getelementptr inbounds %struct.config_line_t_, ptr %94, i32 0, i32 0, !dbg !15970
  %96 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %95, i32 0, i32 0, !dbg !15971
  %97 = load ptr, ptr %96, align 8, !dbg !15971
  %98 = call noalias ptr @strdup(ptr noundef %97) #17, !dbg !15972
  %99 = load ptr, ptr %6, align 8, !dbg !15973
  %100 = getelementptr inbounds %struct.config_line_t_, ptr %99, i32 0, i32 0, !dbg !15974
  %101 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %100, i32 0, i32 1, !dbg !15975
  %102 = load ptr, ptr %101, align 8, !dbg !15975
  %103 = call noalias ptr @strdup(ptr noundef %102) #17, !dbg !15976
  %104 = call i32 @hash_add(ptr noundef %93, ptr noundef %98, ptr noundef %103), !dbg !15977
  br label %105

105:                                              ; preds = %92, %91
  br label %106

106:                                              ; preds = %105, %68
  br label %126, !dbg !15978

107:                                              ; preds = %35
  %108 = load ptr, ptr %6, align 8, !dbg !15979
  %109 = getelementptr inbounds %struct.config_line_t_, ptr %108, i32 0, i32 0, !dbg !15981
  %110 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %109, i32 0, i32 0, !dbg !15982
  %111 = load ptr, ptr %110, align 8, !dbg !15982
  %112 = call i32 @strcmp(ptr noundef %111, ptr noundef @.str.43) #20, !dbg !15983
  %113 = icmp ne i32 %112, 0, !dbg !15983
  br i1 %113, label %117, label %114, !dbg !15984

114:                                              ; preds = %107
  %115 = load ptr, ptr %5, align 8, !dbg !15985
  %116 = load ptr, ptr %6, align 8, !dbg !15987
  call void @parse_listener_prefix_authorization(ptr noundef %115, ptr noundef %116, ptr noundef %9), !dbg !15988
  br label %124, !dbg !15989

117:                                              ; preds = %107
  %118 = load ptr, ptr %5, align 8, !dbg !15990
  %119 = load ptr, ptr %6, align 8, !dbg !15992
  %120 = getelementptr inbounds %struct.config_line_t_, ptr %119, i32 0, i32 0, !dbg !15993
  %121 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %120, i32 0, i32 0, !dbg !15994
  %122 = load ptr, ptr %121, align 8, !dbg !15994
  %123 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %118, ptr noundef @.str.44, ptr noundef %122), !dbg !15995
  br label %202, !dbg !15996

124:                                              ; preds = %114
  br label %126, !dbg !15997

125:                                              ; preds = %35
  br label %130, !dbg !15998

126:                                              ; preds = %124, %106, %35
  br label %31, !dbg !15904, !llvm.loop !15999

127:                                              ; preds = %31
  %128 = load ptr, ptr %5, align 8, !dbg !16001
  %129 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %128, ptr noundef @.str.45), !dbg !16002
  br label %202, !dbg !16003

130:                                              ; preds = %125
  call void @llvm.dbg.label(metadata !16004), !dbg !16005
  %131 = load ptr, ptr %8, align 8, !dbg !16006
  %132 = load ptr, ptr %11, align 8, !dbg !16008
  %133 = icmp eq ptr %131, %132, !dbg !16009
  br i1 %133, label %134, label %140, !dbg !16010

134:                                              ; preds = %130
  %135 = load ptr, ptr %11, align 8, !dbg !16011
  %136 = icmp ne ptr %135, null, !dbg !16011
  br i1 %136, label %140, label %137, !dbg !16012

137:                                              ; preds = %134
  %138 = load ptr, ptr %5, align 8, !dbg !16013
  %139 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %138, ptr noundef @.str.46), !dbg !16015
  br label %202, !dbg !16016

140:                                              ; preds = %134, %130
  %141 = load ptr, ptr %8, align 8, !dbg !16017
  %142 = icmp ne ptr %141, null, !dbg !16017
  br i1 %142, label %143, label %149, !dbg !16019

143:                                              ; preds = %140
  %144 = load ptr, ptr %11, align 8, !dbg !16020
  %145 = icmp ne ptr %144, null, !dbg !16020
  br i1 %145, label %146, label %149, !dbg !16021

146:                                              ; preds = %143
  %147 = load ptr, ptr %5, align 8, !dbg !16022
  %148 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %147, ptr noundef @.str.47), !dbg !16024
  br label %202, !dbg !16025

149:                                              ; preds = %143, %140
  %150 = load ptr, ptr %11, align 8, !dbg !16026
  %151 = icmp ne ptr %150, null, !dbg !16026
  br i1 %151, label %152, label %161, !dbg !16028

152:                                              ; preds = %149
  %153 = load ptr, ptr %11, align 8, !dbg !16029
  %154 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %9, i32 0, i32 0, !dbg !16031
  store ptr %153, ptr %154, align 8, !dbg !16032
  %155 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %9, i32 0, i32 4, !dbg !16033
  %156 = load i32, ptr %155, align 8, !dbg !16034
  %157 = or i32 %156, 31, !dbg !16034
  store i32 %157, ptr %155, align 8, !dbg !16034
  %158 = load ptr, ptr %10, align 8, !dbg !16035
  %159 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %9, i32 0, i32 1, !dbg !16036
  store ptr %158, ptr %159, align 8, !dbg !16037
  %160 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %9, i32 0, i32 5, !dbg !16038
  store ptr null, ptr %160, align 8, !dbg !16039
  store ptr null, ptr %10, align 8, !dbg !16040
  br label %197, !dbg !16041

161:                                              ; preds = %149
  %162 = load ptr, ptr %8, align 8, !dbg !16042
  %163 = icmp ne ptr %162, null, !dbg !16042
  br i1 %163, label %164, label %193, !dbg !16044

164:                                              ; preds = %161
  %165 = load ptr, ptr %8, align 8, !dbg !16045
  %166 = getelementptr inbounds %struct.lwan_module_t_, ptr %165, i32 0, i32 2, !dbg !16046
  %167 = load ptr, ptr %166, align 8, !dbg !16046
  %168 = icmp ne ptr %167, null, !dbg !16045
  br i1 %168, label %169, label %193, !dbg !16047

169:                                              ; preds = %164
  %170 = load ptr, ptr %8, align 8, !dbg !16048
  %171 = getelementptr inbounds %struct.lwan_module_t_, ptr %170, i32 0, i32 4, !dbg !16049
  %172 = load ptr, ptr %171, align 8, !dbg !16049
  %173 = icmp ne ptr %172, null, !dbg !16048
  br i1 %173, label %174, label %193, !dbg !16050

174:                                              ; preds = %169
  %175 = load ptr, ptr %8, align 8, !dbg !16051
  %176 = getelementptr inbounds %struct.lwan_module_t_, ptr %175, i32 0, i32 2, !dbg !16053
  %177 = load ptr, ptr %176, align 8, !dbg !16053
  %178 = load ptr, ptr %10, align 8, !dbg !16054
  %179 = call ptr %177(ptr noundef %178), !dbg !16051
  %180 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %9, i32 0, i32 1, !dbg !16055
  store ptr %179, ptr %180, align 8, !dbg !16056
  %181 = load ptr, ptr %8, align 8, !dbg !16057
  %182 = getelementptr inbounds %struct.lwan_module_t_, ptr %181, i32 0, i32 4, !dbg !16058
  %183 = load ptr, ptr %182, align 8, !dbg !16058
  %184 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %9, i32 0, i32 0, !dbg !16059
  store ptr %183, ptr %184, align 8, !dbg !16060
  %185 = load ptr, ptr %8, align 8, !dbg !16061
  %186 = getelementptr inbounds %struct.lwan_module_t_, ptr %185, i32 0, i32 5, !dbg !16062
  %187 = load i32, ptr %186, align 8, !dbg !16062
  %188 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %9, i32 0, i32 4, !dbg !16063
  %189 = load i32, ptr %188, align 8, !dbg !16064
  %190 = or i32 %189, %187, !dbg !16064
  store i32 %190, ptr %188, align 8, !dbg !16064
  %191 = load ptr, ptr %8, align 8, !dbg !16065
  %192 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %9, i32 0, i32 5, !dbg !16066
  store ptr %191, ptr %192, align 8, !dbg !16067
  br label %196, !dbg !16068

193:                                              ; preds = %169, %164, %161
  %194 = load ptr, ptr %5, align 8, !dbg !16069
  %195 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %194, ptr noundef @.str.48), !dbg !16071
  br label %202, !dbg !16072

196:                                              ; preds = %174
  br label %197

197:                                              ; preds = %196, %152
  %198 = load ptr, ptr %7, align 8, !dbg !16073
  %199 = getelementptr inbounds %struct.lwan_t_, ptr %198, i32 0, i32 0, !dbg !16074
  %200 = load ptr, ptr %12, align 8, !dbg !16075
  %201 = call ptr @add_url_map(ptr noundef %199, ptr noundef %200, ptr noundef %9), !dbg !16076
  br label %202, !dbg !16076

202:                                              ; preds = %197, %193, %146, %137, %127, %117, %84, %61, %49
  call void @llvm.dbg.label(metadata !16077), !dbg !16078
  %203 = load ptr, ptr %10, align 8, !dbg !16079
  call void @hash_free(ptr noundef %203), !dbg !16080
  ret void, !dbg !16081
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @lwan_module_find(ptr noundef %0, ptr noundef %1) #0 !dbg !16082 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !16085, metadata !DIExpression()), !dbg !16086
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !16087, metadata !DIExpression()), !dbg !16088
  %5 = load ptr, ptr %3, align 8, !dbg !16089
  %6 = getelementptr inbounds %struct.lwan_t_, ptr %5, i32 0, i32 3, !dbg !16090
  %7 = load ptr, ptr %6, align 8, !dbg !16090
  %8 = load ptr, ptr %4, align 8, !dbg !16091
  %9 = call ptr @hash_find(ptr noundef %7, ptr noundef %8), !dbg !16092
  ret ptr %9, !dbg !16093
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @find_handler_symbol(ptr noundef %0) #0 !dbg !16094 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !16097, metadata !DIExpression()), !dbg !16098
  call void @llvm.dbg.declare(metadata ptr %3, metadata !16099, metadata !DIExpression()), !dbg !16100
  %4 = load ptr, ptr %2, align 8, !dbg !16101
  %5 = call ptr @dlsym(ptr noundef inttoptr (i64 -1 to ptr), ptr noundef %4) #17, !dbg !16102
  store ptr %5, ptr %3, align 8, !dbg !16100
  %6 = load ptr, ptr %3, align 8, !dbg !16103
  %7 = icmp ne ptr %6, null, !dbg !16103
  br i1 %7, label %11, label %8, !dbg !16105

8:                                                ; preds = %1
  %9 = load ptr, ptr %2, align 8, !dbg !16106
  %10 = call ptr @dlsym(ptr noundef null, ptr noundef %9) #17, !dbg !16107
  store ptr %10, ptr %3, align 8, !dbg !16108
  br label %11, !dbg !16109

11:                                               ; preds = %8, %1
  %12 = load ptr, ptr %3, align 8, !dbg !16110
  ret ptr %12, !dbg !16111
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @parse_listener_prefix_authorization(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !16112 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !16115, metadata !DIExpression()), !dbg !16116
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !16117, metadata !DIExpression()), !dbg !16118
  store ptr %2, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !16119, metadata !DIExpression()), !dbg !16120
  %7 = load ptr, ptr %5, align 8, !dbg !16121
  %8 = getelementptr inbounds %struct.config_line_t_, ptr %7, i32 0, i32 0, !dbg !16123
  %9 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %8, i32 0, i32 1, !dbg !16124
  %10 = load ptr, ptr %9, align 8, !dbg !16124
  %11 = call i32 @strcmp(ptr noundef %10, ptr noundef @.str.49) #20, !dbg !16125
  %12 = icmp ne i32 %11, 0, !dbg !16125
  br i1 %12, label %13, label %16, !dbg !16126

13:                                               ; preds = %3
  %14 = load ptr, ptr %4, align 8, !dbg !16127
  %15 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %14, ptr noundef @.str.50), !dbg !16129
  br label %115, !dbg !16130

16:                                               ; preds = %3
  %17 = load ptr, ptr %6, align 8, !dbg !16131
  %18 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %17, i32 0, i32 7, !dbg !16132
  call void @llvm.memset.p0.i64(ptr align 8 %18, i8 0, i64 16, i1 false), !dbg !16133
  br label %19, !dbg !16134

19:                                               ; preds = %103, %16
  %20 = load ptr, ptr %4, align 8, !dbg !16135
  %21 = load ptr, ptr %5, align 8, !dbg !16136
  %22 = call zeroext i1 @config_read_line(ptr noundef %20, ptr noundef %21), !dbg !16137
  br i1 %22, label %23, label %104, !dbg !16134

23:                                               ; preds = %19
  %24 = load ptr, ptr %5, align 8, !dbg !16138
  %25 = getelementptr inbounds %struct.config_line_t_, ptr %24, i32 0, i32 1, !dbg !16140
  %26 = load i32, ptr %25, align 8, !dbg !16140
  switch i32 %26, label %103 [
    i32 0, label %27
    i32 1, label %69
    i32 2, label %76
  ], !dbg !16141

27:                                               ; preds = %23
  %28 = load ptr, ptr %5, align 8, !dbg !16142
  %29 = getelementptr inbounds %struct.config_line_t_, ptr %28, i32 0, i32 0, !dbg !16145
  %30 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %29, i32 0, i32 0, !dbg !16146
  %31 = load ptr, ptr %30, align 8, !dbg !16146
  %32 = call i32 @strcmp(ptr noundef %31, ptr noundef @.str.51) #20, !dbg !16147
  %33 = icmp ne i32 %32, 0, !dbg !16147
  br i1 %33, label %47, label %34, !dbg !16148

34:                                               ; preds = %27
  %35 = load ptr, ptr %6, align 8, !dbg !16149
  %36 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %35, i32 0, i32 7, !dbg !16151
  %37 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %36, i32 0, i32 0, !dbg !16152
  %38 = load ptr, ptr %37, align 8, !dbg !16152
  call void @free(ptr noundef %38) #17, !dbg !16153
  %39 = load ptr, ptr %5, align 8, !dbg !16154
  %40 = getelementptr inbounds %struct.config_line_t_, ptr %39, i32 0, i32 0, !dbg !16155
  %41 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %40, i32 0, i32 1, !dbg !16156
  %42 = load ptr, ptr %41, align 8, !dbg !16156
  %43 = call noalias ptr @strdup(ptr noundef %42) #17, !dbg !16157
  %44 = load ptr, ptr %6, align 8, !dbg !16158
  %45 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %44, i32 0, i32 7, !dbg !16159
  %46 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %45, i32 0, i32 0, !dbg !16160
  store ptr %43, ptr %46, align 8, !dbg !16161
  br label %68, !dbg !16162

47:                                               ; preds = %27
  %48 = load ptr, ptr %5, align 8, !dbg !16163
  %49 = getelementptr inbounds %struct.config_line_t_, ptr %48, i32 0, i32 0, !dbg !16165
  %50 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %49, i32 0, i32 0, !dbg !16166
  %51 = load ptr, ptr %50, align 8, !dbg !16166
  %52 = call i32 @strcmp(ptr noundef %51, ptr noundef @.str.52) #20, !dbg !16167
  %53 = icmp ne i32 %52, 0, !dbg !16167
  br i1 %53, label %67, label %54, !dbg !16168

54:                                               ; preds = %47
  %55 = load ptr, ptr %6, align 8, !dbg !16169
  %56 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %55, i32 0, i32 7, !dbg !16171
  %57 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %56, i32 0, i32 1, !dbg !16172
  %58 = load ptr, ptr %57, align 8, !dbg !16172
  call void @free(ptr noundef %58) #17, !dbg !16173
  %59 = load ptr, ptr %5, align 8, !dbg !16174
  %60 = getelementptr inbounds %struct.config_line_t_, ptr %59, i32 0, i32 0, !dbg !16175
  %61 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %60, i32 0, i32 1, !dbg !16176
  %62 = load ptr, ptr %61, align 8, !dbg !16176
  %63 = call noalias ptr @strdup(ptr noundef %62) #17, !dbg !16177
  %64 = load ptr, ptr %6, align 8, !dbg !16178
  %65 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %64, i32 0, i32 7, !dbg !16179
  %66 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %65, i32 0, i32 1, !dbg !16180
  store ptr %63, ptr %66, align 8, !dbg !16181
  br label %67, !dbg !16182

67:                                               ; preds = %54, %47
  br label %68

68:                                               ; preds = %67, %34
  br label %103, !dbg !16183

69:                                               ; preds = %23
  %70 = load ptr, ptr %4, align 8, !dbg !16184
  %71 = load ptr, ptr %5, align 8, !dbg !16185
  %72 = getelementptr inbounds %struct.config_line_t_, ptr %71, i32 0, i32 0, !dbg !16186
  %73 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %72, i32 0, i32 0, !dbg !16187
  %74 = load ptr, ptr %73, align 8, !dbg !16187
  %75 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %70, ptr noundef @.str.53, ptr noundef %74), !dbg !16188
  br label %106, !dbg !16189

76:                                               ; preds = %23
  %77 = load ptr, ptr %6, align 8, !dbg !16190
  %78 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %77, i32 0, i32 7, !dbg !16192
  %79 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %78, i32 0, i32 0, !dbg !16193
  %80 = load ptr, ptr %79, align 8, !dbg !16193
  %81 = icmp ne ptr %80, null, !dbg !16190
  br i1 %81, label %87, label %82, !dbg !16194

82:                                               ; preds = %76
  %83 = call noalias ptr @strdup(ptr noundef @.str.54) #17, !dbg !16195
  %84 = load ptr, ptr %6, align 8, !dbg !16196
  %85 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %84, i32 0, i32 7, !dbg !16197
  %86 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %85, i32 0, i32 0, !dbg !16198
  store ptr %83, ptr %86, align 8, !dbg !16199
  br label %87, !dbg !16196

87:                                               ; preds = %82, %76
  %88 = load ptr, ptr %6, align 8, !dbg !16200
  %89 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %88, i32 0, i32 7, !dbg !16202
  %90 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %89, i32 0, i32 1, !dbg !16203
  %91 = load ptr, ptr %90, align 8, !dbg !16203
  %92 = icmp ne ptr %91, null, !dbg !16200
  br i1 %92, label %98, label %93, !dbg !16204

93:                                               ; preds = %87
  %94 = call noalias ptr @strdup(ptr noundef @.str.55) #17, !dbg !16205
  %95 = load ptr, ptr %6, align 8, !dbg !16206
  %96 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %95, i32 0, i32 7, !dbg !16207
  %97 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %96, i32 0, i32 1, !dbg !16208
  store ptr %94, ptr %97, align 8, !dbg !16209
  br label %98, !dbg !16206

98:                                               ; preds = %93, %87
  %99 = load ptr, ptr %6, align 8, !dbg !16210
  %100 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %99, i32 0, i32 4, !dbg !16211
  %101 = load i32, ptr %100, align 8, !dbg !16212
  %102 = or i32 %101, 32, !dbg !16212
  store i32 %102, ptr %100, align 8, !dbg !16212
  br label %105, !dbg !16213

103:                                              ; preds = %68, %23
  br label %19, !dbg !16134, !llvm.loop !16214

104:                                              ; preds = %19
  br label %105, !dbg !16134

105:                                              ; preds = %104, %98
  call void @llvm.dbg.label(metadata !16216), !dbg !16217
  br label %115, !dbg !16218

106:                                              ; preds = %69
  call void @llvm.dbg.label(metadata !16219), !dbg !16220
  %107 = load ptr, ptr %6, align 8, !dbg !16221
  %108 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %107, i32 0, i32 7, !dbg !16222
  %109 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %108, i32 0, i32 0, !dbg !16223
  %110 = load ptr, ptr %109, align 8, !dbg !16223
  call void @free(ptr noundef %110) #17, !dbg !16224
  %111 = load ptr, ptr %6, align 8, !dbg !16225
  %112 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %111, i32 0, i32 7, !dbg !16226
  %113 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %112, i32 0, i32 1, !dbg !16227
  %114 = load ptr, ptr %113, align 8, !dbg !16227
  call void @free(ptr noundef %114) #17, !dbg !16228
  br label %115, !dbg !16229

115:                                              ; preds = %106, %105, %13
  ret void, !dbg !16229
}

; Function Attrs: nounwind
declare ptr @dlsym(ptr noundef, ptr noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @redirect_init(ptr noundef %0) #0 !dbg !16230 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !16231, metadata !DIExpression()), !dbg !16232
  call void @llvm.dbg.declare(metadata ptr %3, metadata !16233, metadata !DIExpression()), !dbg !16239
  %4 = load ptr, ptr %2, align 8, !dbg !16240
  store ptr %4, ptr %3, align 8, !dbg !16239
  %5 = load ptr, ptr %3, align 8, !dbg !16241
  %6 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %5, i32 0, i32 0, !dbg !16242
  %7 = load ptr, ptr %6, align 8, !dbg !16242
  %8 = icmp ne ptr %7, null, !dbg !16243
  br i1 %8, label %9, label %14, !dbg !16243

9:                                                ; preds = %1
  %10 = load ptr, ptr %3, align 8, !dbg !16244
  %11 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %10, i32 0, i32 0, !dbg !16245
  %12 = load ptr, ptr %11, align 8, !dbg !16245
  %13 = call noalias ptr @strdup(ptr noundef %12) #17, !dbg !16246
  br label %15, !dbg !16243

14:                                               ; preds = %1
  br label %15, !dbg !16243

15:                                               ; preds = %14, %9
  %16 = phi ptr [ %13, %9 ], [ null, %14 ], !dbg !16243
  ret ptr %16, !dbg !16247
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @redirect_init_from_hash(ptr noundef %0) #0 !dbg !16248 {
  %2 = alloca ptr, align 8
  %3 = alloca %union.__SOCKADDR_ARG, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !16249, metadata !DIExpression()), !dbg !16250
  call void @llvm.dbg.declare(metadata ptr %3, metadata !16251, metadata !DIExpression()), !dbg !16252
  %4 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %3, i32 0, i32 0, !dbg !16253
  %5 = load ptr, ptr %2, align 8, !dbg !16254
  %6 = call ptr @hash_find(ptr noundef %5, ptr noundef @.str.1.83), !dbg !16255
  store ptr %6, ptr %4, align 8, !dbg !16253
  %7 = call ptr @redirect_init(ptr noundef %3), !dbg !16256
  ret ptr %7, !dbg !16257
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @redirect_handle_cb(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !16258 {
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !16259, metadata !DIExpression()), !dbg !16260
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !16261, metadata !DIExpression()), !dbg !16262
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !16263, metadata !DIExpression()), !dbg !16264
  %9 = load ptr, ptr %7, align 8, !dbg !16265
  %10 = icmp ne ptr %9, null, !dbg !16265
  %11 = xor i1 %10, true, !dbg !16265
  %12 = zext i1 %11 to i32, !dbg !16265
  %13 = sext i32 %12 to i64, !dbg !16265
  %14 = icmp ne i64 %13, 0, !dbg !16265
  br i1 %14, label %15, label %16, !dbg !16267

15:                                               ; preds = %3
  store i32 500, ptr %4, align 4, !dbg !16268
  br label %47, !dbg !16268

16:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata ptr %8, metadata !16269, metadata !DIExpression()), !dbg !16270
  %17 = load ptr, ptr %5, align 8, !dbg !16271
  %18 = getelementptr inbounds %struct.lwan_request_t_, ptr %17, i32 0, i32 4, !dbg !16272
  %19 = load ptr, ptr %18, align 8, !dbg !16272
  %20 = getelementptr inbounds %struct.lwan_connection_t_, ptr %19, i32 0, i32 2, !dbg !16273
  %21 = load ptr, ptr %20, align 8, !dbg !16273
  %22 = call ptr @coro_malloc(ptr noundef %21, i64 noundef 32), !dbg !16274
  store ptr %22, ptr %8, align 8, !dbg !16270
  %23 = load ptr, ptr %8, align 8, !dbg !16275
  %24 = icmp ne ptr %23, null, !dbg !16275
  %25 = xor i1 %24, true, !dbg !16275
  %26 = zext i1 %25 to i32, !dbg !16275
  %27 = sext i32 %26 to i64, !dbg !16275
  %28 = icmp ne i64 %27, 0, !dbg !16275
  br i1 %28, label %29, label %30, !dbg !16277

29:                                               ; preds = %16
  store i32 500, ptr %4, align 4, !dbg !16278
  br label %47, !dbg !16278

30:                                               ; preds = %16
  %31 = load ptr, ptr %8, align 8, !dbg !16279
  %32 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %31, i64 0, !dbg !16279
  %33 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %32, i32 0, i32 0, !dbg !16280
  store ptr @.str.2.82, ptr %33, align 8, !dbg !16281
  %34 = load ptr, ptr %7, align 8, !dbg !16282
  %35 = load ptr, ptr %8, align 8, !dbg !16283
  %36 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %35, i64 0, !dbg !16283
  %37 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %36, i32 0, i32 1, !dbg !16284
  store ptr %34, ptr %37, align 8, !dbg !16285
  %38 = load ptr, ptr %8, align 8, !dbg !16286
  %39 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %38, i64 1, !dbg !16286
  %40 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %39, i32 0, i32 0, !dbg !16287
  store ptr null, ptr %40, align 8, !dbg !16288
  %41 = load ptr, ptr %8, align 8, !dbg !16289
  %42 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %41, i64 1, !dbg !16289
  %43 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %42, i32 0, i32 1, !dbg !16290
  store ptr null, ptr %43, align 8, !dbg !16291
  %44 = load ptr, ptr %8, align 8, !dbg !16292
  %45 = load ptr, ptr %6, align 8, !dbg !16293
  %46 = getelementptr inbounds %struct.lwan_response_t_, ptr %45, i32 0, i32 3, !dbg !16294
  store ptr %44, ptr %46, align 8, !dbg !16295
  store i32 301, ptr %4, align 4, !dbg !16296
  br label %47, !dbg !16296

47:                                               ; preds = %30, %29, %15
  %48 = load i32, ptr %4, align 4, !dbg !16297
  ret i32 %48, !dbg !16297
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @serve_files_init(ptr noundef %0) #0 !dbg !16298 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !16299, metadata !DIExpression()), !dbg !16300
  call void @llvm.dbg.declare(metadata ptr %4, metadata !16301, metadata !DIExpression()), !dbg !16309
  %9 = load ptr, ptr %3, align 8, !dbg !16310
  store ptr %9, ptr %4, align 8, !dbg !16309
  call void @llvm.dbg.declare(metadata ptr %5, metadata !16311, metadata !DIExpression()), !dbg !16312
  call void @llvm.dbg.declare(metadata ptr %6, metadata !16313, metadata !DIExpression()), !dbg !16314
  call void @llvm.dbg.declare(metadata ptr %7, metadata !16315, metadata !DIExpression()), !dbg !16316
  call void @llvm.dbg.declare(metadata ptr %8, metadata !16317, metadata !DIExpression()), !dbg !16318
  %10 = load ptr, ptr %4, align 8, !dbg !16319
  %11 = getelementptr inbounds %struct.lwan_serve_files_settings_t, ptr %10, i32 0, i32 0, !dbg !16321
  %12 = load ptr, ptr %11, align 8, !dbg !16321
  %13 = icmp ne ptr %12, null, !dbg !16319
  br i1 %13, label %15, label %14, !dbg !16322

14:                                               ; preds = %1
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_error_debug(ptr noundef @.str.1.142, i32 noundef 646, ptr noundef @__FUNCTION__.serve_files_init, ptr noundef @.str.2.147), !dbg !16323
  store ptr null, ptr %2, align 8, !dbg !16325
  br label %108, !dbg !16325

15:                                               ; preds = %1
  %16 = load ptr, ptr %4, align 8, !dbg !16326
  %17 = getelementptr inbounds %struct.lwan_serve_files_settings_t, ptr %16, i32 0, i32 0, !dbg !16327
  %18 = load ptr, ptr %17, align 8, !dbg !16327
  %19 = call ptr @realpath(ptr noundef %18, ptr noundef null) #17, !dbg !16328
  store ptr %19, ptr %5, align 8, !dbg !16329
  %20 = load ptr, ptr %5, align 8, !dbg !16330
  %21 = icmp ne ptr %20, null, !dbg !16330
  br i1 %21, label %26, label %22, !dbg !16332

22:                                               ; preds = %15
  %23 = load ptr, ptr %4, align 8, !dbg !16333
  %24 = getelementptr inbounds %struct.lwan_serve_files_settings_t, ptr %23, i32 0, i32 0, !dbg !16333
  %25 = load ptr, ptr %24, align 8, !dbg !16333
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.1.142, i32 noundef 653, ptr noundef @__FUNCTION__.serve_files_init, ptr noundef @.str.3.148, ptr noundef %25), !dbg !16333
  br label %107, !dbg !16335

26:                                               ; preds = %15
  %27 = load ptr, ptr %5, align 8, !dbg !16336
  %28 = call i32 @try_open_directory(ptr noundef %27, ptr noundef %8), !dbg !16337
  store i32 %28, ptr %6, align 4, !dbg !16338
  %29 = load i32, ptr %6, align 4, !dbg !16339
  %30 = icmp slt i32 %29, 0, !dbg !16341
  br i1 %30, label %31, label %33, !dbg !16342

31:                                               ; preds = %26
  %32 = load ptr, ptr %5, align 8, !dbg !16343
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.1.142, i32 noundef 660, ptr noundef @__FUNCTION__.serve_files_init, ptr noundef @.str.4.149, ptr noundef %32), !dbg !16343
  br label %105, !dbg !16345

33:                                               ; preds = %26
  %34 = call noalias ptr @malloc(i64 noundef 64) #18, !dbg !16346
  store ptr %34, ptr %7, align 8, !dbg !16347
  %35 = load ptr, ptr %7, align 8, !dbg !16348
  %36 = icmp ne ptr %35, null, !dbg !16348
  br i1 %36, label %38, label %37, !dbg !16350

37:                                               ; preds = %33
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.1.142, i32 noundef 666, ptr noundef @__FUNCTION__.serve_files_init, ptr noundef @.str.5.150), !dbg !16351
  br label %102, !dbg !16353

38:                                               ; preds = %33
  %39 = load ptr, ptr %7, align 8, !dbg !16354
  %40 = call ptr @cache_create(ptr noundef @create_cache_entry, ptr noundef @destroy_cache_entry, ptr noundef %39, i64 noundef 5), !dbg !16355
  %41 = load ptr, ptr %7, align 8, !dbg !16356
  %42 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %41, i32 0, i32 0, !dbg !16357
  store ptr %40, ptr %42, align 8, !dbg !16358
  %43 = load ptr, ptr %7, align 8, !dbg !16359
  %44 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %43, i32 0, i32 0, !dbg !16361
  %45 = load ptr, ptr %44, align 8, !dbg !16361
  %46 = icmp ne ptr %45, null, !dbg !16359
  br i1 %46, label %48, label %47, !dbg !16362

47:                                               ; preds = %38
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_error_debug(ptr noundef @.str.1.142, i32 noundef 673, ptr noundef @__FUNCTION__.serve_files_init, ptr noundef @.str.6.151), !dbg !16363
  br label %100, !dbg !16365

48:                                               ; preds = %38
  %49 = load ptr, ptr @directory_list_tpl_str, align 8, !dbg !16366
  %50 = call ptr @lwan_tpl_compile_string(ptr noundef %49, ptr noundef @file_list_desc), !dbg !16367
  %51 = load ptr, ptr %7, align 8, !dbg !16368
  %52 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %51, i32 0, i32 4, !dbg !16369
  store ptr %50, ptr %52, align 8, !dbg !16370
  %53 = load ptr, ptr %7, align 8, !dbg !16371
  %54 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %53, i32 0, i32 4, !dbg !16373
  %55 = load ptr, ptr %54, align 8, !dbg !16373
  %56 = icmp ne ptr %55, null, !dbg !16371
  br i1 %56, label %58, label %57, !dbg !16374

57:                                               ; preds = %48
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_error_debug(ptr noundef @.str.1.142, i32 noundef 680, ptr noundef @__FUNCTION__.serve_files_init, ptr noundef @.str.7.152), !dbg !16375
  br label %96, !dbg !16377

58:                                               ; preds = %48
  %59 = load ptr, ptr %5, align 8, !dbg !16378
  %60 = load ptr, ptr %7, align 8, !dbg !16379
  %61 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %60, i32 0, i32 1, !dbg !16380
  %62 = getelementptr inbounds %struct.anon.6, ptr %61, i32 0, i32 0, !dbg !16381
  store ptr %59, ptr %62, align 8, !dbg !16382
  %63 = load ptr, ptr %5, align 8, !dbg !16383
  %64 = call i64 @strlen(ptr noundef %63) #20, !dbg !16384
  %65 = load ptr, ptr %7, align 8, !dbg !16385
  %66 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %65, i32 0, i32 1, !dbg !16386
  %67 = getelementptr inbounds %struct.anon.6, ptr %66, i32 0, i32 1, !dbg !16387
  store i64 %64, ptr %67, align 8, !dbg !16388
  %68 = load i32, ptr %6, align 4, !dbg !16389
  %69 = load ptr, ptr %7, align 8, !dbg !16390
  %70 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %69, i32 0, i32 1, !dbg !16391
  %71 = getelementptr inbounds %struct.anon.6, ptr %70, i32 0, i32 2, !dbg !16392
  store i32 %68, ptr %71, align 8, !dbg !16393
  %72 = load i32, ptr %8, align 4, !dbg !16394
  %73 = load ptr, ptr %7, align 8, !dbg !16395
  %74 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %73, i32 0, i32 2, !dbg !16396
  store i32 %72, ptr %74, align 8, !dbg !16397
  %75 = load ptr, ptr %4, align 8, !dbg !16398
  %76 = getelementptr inbounds %struct.lwan_serve_files_settings_t, ptr %75, i32 0, i32 1, !dbg !16399
  %77 = load ptr, ptr %76, align 8, !dbg !16399
  %78 = icmp ne ptr %77, null, !dbg !16398
  br i1 %78, label %79, label %83, !dbg !16398

79:                                               ; preds = %58
  %80 = load ptr, ptr %4, align 8, !dbg !16400
  %81 = getelementptr inbounds %struct.lwan_serve_files_settings_t, ptr %80, i32 0, i32 1, !dbg !16401
  %82 = load ptr, ptr %81, align 8, !dbg !16401
  br label %84, !dbg !16398

83:                                               ; preds = %58
  br label %84, !dbg !16398

84:                                               ; preds = %83, %79
  %85 = phi ptr [ %82, %79 ], [ @.str.8.153, %83 ], !dbg !16398
  %86 = load ptr, ptr %7, align 8, !dbg !16402
  %87 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %86, i32 0, i32 3, !dbg !16403
  store ptr %85, ptr %87, align 8, !dbg !16404
  %88 = load ptr, ptr %4, align 8, !dbg !16405
  %89 = getelementptr inbounds %struct.lwan_serve_files_settings_t, ptr %88, i32 0, i32 2, !dbg !16406
  %90 = load i8, ptr %89, align 8, !dbg !16406
  %91 = trunc i8 %90 to i1, !dbg !16406
  %92 = load ptr, ptr %7, align 8, !dbg !16407
  %93 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %92, i32 0, i32 5, !dbg !16408
  %94 = zext i1 %91 to i8, !dbg !16409
  store i8 %94, ptr %93, align 8, !dbg !16409
  %95 = load ptr, ptr %7, align 8, !dbg !16410
  store ptr %95, ptr %2, align 8, !dbg !16411
  br label %108, !dbg !16411

96:                                               ; preds = %57
  call void @llvm.dbg.label(metadata !16412), !dbg !16413
  %97 = load ptr, ptr %7, align 8, !dbg !16414
  %98 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %97, i32 0, i32 0, !dbg !16415
  %99 = load ptr, ptr %98, align 8, !dbg !16415
  call void @cache_destroy(ptr noundef %99), !dbg !16416
  br label %100, !dbg !16416

100:                                              ; preds = %96, %47
  call void @llvm.dbg.label(metadata !16417), !dbg !16418
  %101 = load ptr, ptr %7, align 8, !dbg !16419
  call void @free(ptr noundef %101) #17, !dbg !16420
  br label %102, !dbg !16420

102:                                              ; preds = %100, %37
  call void @llvm.dbg.label(metadata !16421), !dbg !16422
  %103 = load i32, ptr %6, align 4, !dbg !16423
  %104 = call i32 @close(i32 noundef %103), !dbg !16424
  br label %105, !dbg !16424

105:                                              ; preds = %102, %31
  call void @llvm.dbg.label(metadata !16425), !dbg !16426
  %106 = load ptr, ptr %5, align 8, !dbg !16427
  call void @free(ptr noundef %106) #17, !dbg !16428
  br label %107, !dbg !16428

107:                                              ; preds = %105, %22
  call void @llvm.dbg.label(metadata !16429), !dbg !16430
  store ptr null, ptr %2, align 8, !dbg !16431
  br label %108, !dbg !16431

108:                                              ; preds = %107, %84, %14
  %109 = load ptr, ptr %2, align 8, !dbg !16432
  ret ptr %109, !dbg !16432
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @serve_files_init_from_hash(ptr noundef %0) #0 !dbg !16433 {
  %2 = alloca ptr, align 8
  %3 = alloca %struct.lwan_serve_files_settings_t, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !16434, metadata !DIExpression()), !dbg !16435
  call void @llvm.dbg.declare(metadata ptr %3, metadata !16436, metadata !DIExpression()), !dbg !16437
  %4 = getelementptr inbounds %struct.lwan_serve_files_settings_t, ptr %3, i32 0, i32 0, !dbg !16438
  %5 = load ptr, ptr %2, align 8, !dbg !16439
  %6 = call ptr @hash_find(ptr noundef %5, ptr noundef @.str.39.144), !dbg !16440
  store ptr %6, ptr %4, align 8, !dbg !16438
  %7 = getelementptr inbounds %struct.lwan_serve_files_settings_t, ptr %3, i32 0, i32 1, !dbg !16438
  %8 = load ptr, ptr %2, align 8, !dbg !16441
  %9 = call ptr @hash_find(ptr noundef %8, ptr noundef @.str.40.145), !dbg !16442
  store ptr %9, ptr %7, align 8, !dbg !16438
  %10 = getelementptr inbounds %struct.lwan_serve_files_settings_t, ptr %3, i32 0, i32 2, !dbg !16438
  %11 = load ptr, ptr %2, align 8, !dbg !16443
  %12 = call ptr @hash_find(ptr noundef %11, ptr noundef @.str.41.146), !dbg !16444
  %13 = call zeroext i1 @parse_bool(ptr noundef %12, i1 noundef zeroext true), !dbg !16445
  %14 = zext i1 %13 to i8, !dbg !16438
  store i8 %14, ptr %10, align 8, !dbg !16438
  %15 = call ptr @serve_files_init(ptr noundef %3), !dbg !16446
  ret ptr %15, !dbg !16447
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @serve_files_shutdown(ptr noundef %0) #0 !dbg !16448 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !16449, metadata !DIExpression()), !dbg !16450
  call void @llvm.dbg.declare(metadata ptr %3, metadata !16451, metadata !DIExpression()), !dbg !16452
  %4 = load ptr, ptr %2, align 8, !dbg !16453
  store ptr %4, ptr %3, align 8, !dbg !16452
  %5 = load ptr, ptr %3, align 8, !dbg !16454
  %6 = icmp ne ptr %5, null, !dbg !16454
  br i1 %6, label %8, label %7, !dbg !16456

7:                                                ; preds = %1
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_warning_debug(ptr noundef @.str.1.142, i32 noundef 723, ptr noundef @__FUNCTION__.serve_files_shutdown, ptr noundef @.str.42.143), !dbg !16457
  br label %25, !dbg !16459

8:                                                ; preds = %1
  %9 = load ptr, ptr %3, align 8, !dbg !16460
  %10 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %9, i32 0, i32 4, !dbg !16461
  %11 = load ptr, ptr %10, align 8, !dbg !16461
  call void @lwan_tpl_free(ptr noundef %11), !dbg !16462
  %12 = load ptr, ptr %3, align 8, !dbg !16463
  %13 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %12, i32 0, i32 0, !dbg !16464
  %14 = load ptr, ptr %13, align 8, !dbg !16464
  call void @cache_destroy(ptr noundef %14), !dbg !16465
  %15 = load ptr, ptr %3, align 8, !dbg !16466
  %16 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %15, i32 0, i32 1, !dbg !16467
  %17 = getelementptr inbounds %struct.anon.6, ptr %16, i32 0, i32 2, !dbg !16468
  %18 = load i32, ptr %17, align 8, !dbg !16468
  %19 = call i32 @close(i32 noundef %18), !dbg !16469
  %20 = load ptr, ptr %3, align 8, !dbg !16470
  %21 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %20, i32 0, i32 1, !dbg !16471
  %22 = getelementptr inbounds %struct.anon.6, ptr %21, i32 0, i32 0, !dbg !16472
  %23 = load ptr, ptr %22, align 8, !dbg !16472
  call void @free(ptr noundef %23) #17, !dbg !16473
  %24 = load ptr, ptr %3, align 8, !dbg !16474
  call void @free(ptr noundef %24) #17, !dbg !16475
  br label %25, !dbg !16476

25:                                               ; preds = %8, %7
  ret void, !dbg !16476
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @serve_files_handle_cb(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !16477 {
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !16478, metadata !DIExpression()), !dbg !16479
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !16480, metadata !DIExpression()), !dbg !16481
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !16482, metadata !DIExpression()), !dbg !16483
  call void @llvm.dbg.declare(metadata ptr %8, metadata !16484, metadata !DIExpression()), !dbg !16485
  store i32 404, ptr %8, align 4, !dbg !16485
  call void @llvm.dbg.declare(metadata ptr %9, metadata !16486, metadata !DIExpression()), !dbg !16487
  %12 = load ptr, ptr %7, align 8, !dbg !16488
  store ptr %12, ptr %9, align 8, !dbg !16487
  call void @llvm.dbg.declare(metadata ptr %10, metadata !16489, metadata !DIExpression()), !dbg !16490
  %13 = load ptr, ptr %9, align 8, !dbg !16491
  %14 = icmp ne ptr %13, null, !dbg !16491
  %15 = xor i1 %14, true, !dbg !16491
  %16 = zext i1 %15 to i32, !dbg !16491
  %17 = sext i32 %16 to i64, !dbg !16491
  %18 = icmp ne i64 %17, 0, !dbg !16491
  br i1 %18, label %19, label %20, !dbg !16493

19:                                               ; preds = %3
  store i32 500, ptr %8, align 4, !dbg !16494
  br label %65, !dbg !16496

20:                                               ; preds = %3
  %21 = load ptr, ptr %9, align 8, !dbg !16497
  %22 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %21, i32 0, i32 0, !dbg !16498
  %23 = load ptr, ptr %22, align 8, !dbg !16498
  %24 = load ptr, ptr %5, align 8, !dbg !16499
  %25 = getelementptr inbounds %struct.lwan_request_t_, ptr %24, i32 0, i32 4, !dbg !16500
  %26 = load ptr, ptr %25, align 8, !dbg !16500
  %27 = getelementptr inbounds %struct.lwan_connection_t_, ptr %26, i32 0, i32 2, !dbg !16501
  %28 = load ptr, ptr %27, align 8, !dbg !16501
  %29 = load ptr, ptr %5, align 8, !dbg !16502
  %30 = getelementptr inbounds %struct.lwan_request_t_, ptr %29, i32 0, i32 2, !dbg !16503
  %31 = getelementptr inbounds %struct.lwan_value_t_, ptr %30, i32 0, i32 0, !dbg !16504
  %32 = load ptr, ptr %31, align 8, !dbg !16504
  %33 = call ptr @cache_coro_get_and_ref_entry(ptr noundef %23, ptr noundef %28, ptr noundef %32), !dbg !16505
  store ptr %33, ptr %10, align 8, !dbg !16506
  %34 = load ptr, ptr %10, align 8, !dbg !16507
  %35 = icmp ne ptr %34, null, !dbg !16507
  %36 = xor i1 %35, true, !dbg !16507
  %37 = xor i1 %36, true, !dbg !16507
  %38 = zext i1 %37 to i32, !dbg !16507
  %39 = sext i32 %38 to i64, !dbg !16507
  %40 = icmp ne i64 %39, 0, !dbg !16507
  br i1 %40, label %41, label %64, !dbg !16509

41:                                               ; preds = %20
  call void @llvm.dbg.declare(metadata ptr %11, metadata !16510, metadata !DIExpression()), !dbg !16512
  %42 = load ptr, ptr %10, align 8, !dbg !16513
  store ptr %42, ptr %11, align 8, !dbg !16512
  %43 = load ptr, ptr %11, align 8, !dbg !16514
  %44 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %43, i32 0, i32 2, !dbg !16515
  %45 = load ptr, ptr %44, align 8, !dbg !16515
  %46 = load ptr, ptr %6, align 8, !dbg !16516
  %47 = getelementptr inbounds %struct.lwan_response_t_, ptr %46, i32 0, i32 1, !dbg !16517
  store ptr %45, ptr %47, align 8, !dbg !16518
  %48 = load ptr, ptr %11, align 8, !dbg !16519
  %49 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %48, i32 0, i32 3, !dbg !16520
  %50 = load ptr, ptr %49, align 8, !dbg !16520
  %51 = getelementptr inbounds %struct.cache_funcs_t_, ptr %50, i32 0, i32 0, !dbg !16521
  %52 = load ptr, ptr %51, align 8, !dbg !16521
  %53 = load ptr, ptr %6, align 8, !dbg !16522
  %54 = getelementptr inbounds %struct.lwan_response_t_, ptr %53, i32 0, i32 4, !dbg !16523
  %55 = getelementptr inbounds %struct.anon.5, ptr %54, i32 0, i32 0, !dbg !16524
  store ptr %52, ptr %55, align 8, !dbg !16525
  %56 = load ptr, ptr %10, align 8, !dbg !16526
  %57 = load ptr, ptr %6, align 8, !dbg !16527
  %58 = getelementptr inbounds %struct.lwan_response_t_, ptr %57, i32 0, i32 4, !dbg !16528
  %59 = getelementptr inbounds %struct.anon.5, ptr %58, i32 0, i32 1, !dbg !16529
  store ptr %56, ptr %59, align 8, !dbg !16530
  %60 = load ptr, ptr %9, align 8, !dbg !16531
  %61 = load ptr, ptr %6, align 8, !dbg !16532
  %62 = getelementptr inbounds %struct.lwan_response_t_, ptr %61, i32 0, i32 4, !dbg !16533
  %63 = getelementptr inbounds %struct.anon.5, ptr %62, i32 0, i32 2, !dbg !16534
  store ptr %60, ptr %63, align 8, !dbg !16535
  store i32 200, ptr %4, align 4, !dbg !16536
  br label %70, !dbg !16536

64:                                               ; preds = %20
  br label %65, !dbg !16507

65:                                               ; preds = %64, %19
  call void @llvm.dbg.label(metadata !16537), !dbg !16538
  %66 = load ptr, ptr %6, align 8, !dbg !16539
  %67 = getelementptr inbounds %struct.lwan_response_t_, ptr %66, i32 0, i32 4, !dbg !16540
  %68 = getelementptr inbounds %struct.anon.5, ptr %67, i32 0, i32 0, !dbg !16541
  store ptr null, ptr %68, align 8, !dbg !16542
  %69 = load i32, ptr %8, align 4, !dbg !16543
  store i32 %69, ptr %4, align 4, !dbg !16544
  br label %70, !dbg !16544

70:                                               ; preds = %65, %41
  %71 = load i32, ptr %4, align 4, !dbg !16545
  ret i32 %71, !dbg !16545
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_tpl_free(ptr noundef %0) #0 !dbg !16546 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !16549, metadata !DIExpression()), !dbg !16550
  call void @llvm.dbg.declare(metadata ptr %3, metadata !16551, metadata !DIExpression()), !dbg !16552
  %4 = load ptr, ptr %2, align 8, !dbg !16553
  %5 = icmp ne ptr %4, null, !dbg !16553
  br i1 %5, label %7, label %6, !dbg !16555

6:                                                ; preds = %1
  br label %32, !dbg !16556

7:                                                ; preds = %1
  %8 = load ptr, ptr %2, align 8, !dbg !16557
  %9 = getelementptr inbounds %struct.lwan_value_t_, ptr %8, i32 0, i32 0, !dbg !16559
  %10 = load ptr, ptr %9, align 8, !dbg !16559
  %11 = icmp ne ptr %10, null, !dbg !16557
  br i1 %11, label %12, label %30, !dbg !16560

12:                                               ; preds = %7
  %13 = load ptr, ptr %2, align 8, !dbg !16561
  %14 = getelementptr inbounds %struct.lwan_value_t_, ptr %13, i32 0, i32 0, !dbg !16564
  %15 = load ptr, ptr %14, align 8, !dbg !16564
  store ptr %15, ptr %3, align 8, !dbg !16565
  br label %16, !dbg !16566

16:                                               ; preds = %23, %12
  %17 = load ptr, ptr %3, align 8, !dbg !16567
  %18 = getelementptr inbounds %struct.chunk, ptr %17, i32 0, i32 0, !dbg !16569
  %19 = load i32, ptr %18, align 8, !dbg !16569
  %20 = icmp ne i32 %19, 10, !dbg !16570
  br i1 %20, label %21, label %26, !dbg !16571

21:                                               ; preds = %16
  %22 = load ptr, ptr %3, align 8, !dbg !16572
  call void @free_chunk(ptr noundef %22), !dbg !16573
  br label %23, !dbg !16573

23:                                               ; preds = %21
  %24 = load ptr, ptr %3, align 8, !dbg !16574
  %25 = getelementptr inbounds %struct.chunk, ptr %24, i32 1, !dbg !16574
  store ptr %25, ptr %3, align 8, !dbg !16574
  br label %16, !dbg !16575, !llvm.loop !16576

26:                                               ; preds = %16
  %27 = load ptr, ptr %2, align 8, !dbg !16578
  %28 = getelementptr inbounds %struct.lwan_value_t_, ptr %27, i32 0, i32 0, !dbg !16579
  %29 = load ptr, ptr %28, align 8, !dbg !16579
  call void @free(ptr noundef %29) #17, !dbg !16580
  br label %30, !dbg !16581

30:                                               ; preds = %26, %7
  %31 = load ptr, ptr %2, align 8, !dbg !16582
  call void @free(ptr noundef %31) #17, !dbg !16583
  br label %32, !dbg !16584

32:                                               ; preds = %30, %6
  ret void, !dbg !16584
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_chunk(ptr noundef %0) #0 !dbg !16585 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !16588, metadata !DIExpression()), !dbg !16589
  %3 = load ptr, ptr %2, align 8, !dbg !16590
  %4 = icmp ne ptr %3, null, !dbg !16590
  br i1 %4, label %6, label %5, !dbg !16592

5:                                                ; preds = %1
  br label %30, !dbg !16593

6:                                                ; preds = %1
  %7 = load ptr, ptr %2, align 8, !dbg !16594
  %8 = getelementptr inbounds %struct.chunk, ptr %7, i32 0, i32 2, !dbg !16596
  %9 = load i32, ptr %8, align 8, !dbg !16596
  %10 = and i32 %9, 4, !dbg !16597
  %11 = icmp ne i32 %10, 0, !dbg !16597
  br i1 %11, label %12, label %13, !dbg !16598

12:                                               ; preds = %6
  br label %30, !dbg !16599

13:                                               ; preds = %6
  %14 = load ptr, ptr %2, align 8, !dbg !16600
  %15 = getelementptr inbounds %struct.chunk, ptr %14, i32 0, i32 0, !dbg !16601
  %16 = load i32, ptr %15, align 8, !dbg !16601
  switch i32 %16, label %30 [
    i32 10, label %17
    i32 1, label %17
    i32 2, label %17
    i32 3, label %17
    i32 4, label %17
    i32 8, label %17
    i32 6, label %17
    i32 7, label %18
    i32 5, label %18
    i32 0, label %22
    i32 9, label %26
  ], !dbg !16602

17:                                               ; preds = %13, %13, %13, %13, %13, %13, %13
  br label %30, !dbg !16603

18:                                               ; preds = %13, %13
  %19 = load ptr, ptr %2, align 8, !dbg !16605
  %20 = getelementptr inbounds %struct.chunk, ptr %19, i32 0, i32 1, !dbg !16606
  %21 = load ptr, ptr %20, align 8, !dbg !16606
  call void @free(ptr noundef %21) #17, !dbg !16607
  br label %30, !dbg !16608

22:                                               ; preds = %13
  %23 = load ptr, ptr %2, align 8, !dbg !16609
  %24 = getelementptr inbounds %struct.chunk, ptr %23, i32 0, i32 1, !dbg !16610
  %25 = load ptr, ptr %24, align 8, !dbg !16610
  call void @strbuf_free(ptr noundef %25), !dbg !16611
  br label %30, !dbg !16612

26:                                               ; preds = %13
  %27 = load ptr, ptr %2, align 8, !dbg !16613
  %28 = getelementptr inbounds %struct.chunk, ptr %27, i32 0, i32 1, !dbg !16614
  %29 = load ptr, ptr %28, align 8, !dbg !16614
  call void @lwan_tpl_free(ptr noundef %29), !dbg !16615
  br label %30, !dbg !16616

30:                                               ; preds = %26, %22, %18, %17, %13, %12, %5
  ret void, !dbg !16617
}

; Function Attrs: nounwind
declare ptr @realpath(ptr noundef, ptr noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_open_directory(ptr noundef %0, ptr noundef %1) #0 !dbg !16618 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !16621, metadata !DIExpression()), !dbg !16622
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !16623, metadata !DIExpression()), !dbg !16624
  call void @llvm.dbg.declare(metadata ptr %6, metadata !16625, metadata !DIExpression()), !dbg !16626
  %7 = load ptr, ptr %5, align 8, !dbg !16627
  store i32 788480, ptr %7, align 4, !dbg !16628
  %8 = load ptr, ptr %4, align 8, !dbg !16629
  %9 = load ptr, ptr %5, align 8, !dbg !16630
  %10 = load i32, ptr %9, align 4, !dbg !16631
  %11 = or i32 %10, 65536, !dbg !16632
  %12 = call i32 (ptr, i32, ...) @open(ptr noundef %8, i32 noundef %11), !dbg !16633
  store i32 %12, ptr %6, align 4, !dbg !16634
  %13 = load i32, ptr %6, align 4, !dbg !16635
  %14 = icmp slt i32 %13, 0, !dbg !16637
  br i1 %14, label %15, label %36, !dbg !16638

15:                                               ; preds = %2
  %16 = load ptr, ptr %5, align 8, !dbg !16639
  %17 = load i32, ptr %16, align 4, !dbg !16641
  %18 = and i32 %17, -262145, !dbg !16641
  store i32 %18, ptr %16, align 4, !dbg !16641
  %19 = load ptr, ptr %4, align 8, !dbg !16642
  %20 = load ptr, ptr %5, align 8, !dbg !16643
  %21 = load i32, ptr %20, align 4, !dbg !16644
  %22 = or i32 %21, 65536, !dbg !16645
  %23 = call i32 (ptr, i32, ...) @open(ptr noundef %19, i32 noundef %22), !dbg !16646
  store i32 %23, ptr %6, align 4, !dbg !16647
  %24 = load i32, ptr %6, align 4, !dbg !16648
  %25 = icmp slt i32 %24, 0, !dbg !16650
  br i1 %25, label %26, label %35, !dbg !16651

26:                                               ; preds = %15
  %27 = load ptr, ptr %5, align 8, !dbg !16652
  %28 = load i32, ptr %27, align 4, !dbg !16654
  %29 = and i32 %28, -2049, !dbg !16654
  store i32 %29, ptr %27, align 4, !dbg !16654
  %30 = load ptr, ptr %4, align 8, !dbg !16655
  %31 = load ptr, ptr %5, align 8, !dbg !16656
  %32 = load i32, ptr %31, align 4, !dbg !16657
  %33 = or i32 %32, 65536, !dbg !16658
  %34 = call i32 (ptr, i32, ...) @open(ptr noundef %30, i32 noundef %33), !dbg !16659
  store i32 %34, ptr %6, align 4, !dbg !16660
  br label %35, !dbg !16661

35:                                               ; preds = %26, %15
  br label %36, !dbg !16662

36:                                               ; preds = %35, %2
  %37 = load i32, ptr %6, align 4, !dbg !16663
  %38 = icmp slt i32 %37, 0, !dbg !16665
  br i1 %38, label %39, label %40, !dbg !16666

39:                                               ; preds = %36
  store i32 -1, ptr %3, align 4, !dbg !16667
  br label %49, !dbg !16667

40:                                               ; preds = %36
  %41 = load i32, ptr %6, align 4, !dbg !16668
  %42 = call i32 @close(i32 noundef %41), !dbg !16669
  %43 = load ptr, ptr %4, align 8, !dbg !16670
  %44 = load ptr, ptr %5, align 8, !dbg !16671
  %45 = load i32, ptr %44, align 4, !dbg !16672
  %46 = or i32 %45, 65536, !dbg !16673
  %47 = or i32 %46, 2097152, !dbg !16674
  %48 = call i32 (ptr, i32, ...) @open(ptr noundef %43, i32 noundef %47), !dbg !16675
  store i32 %48, ptr %3, align 4, !dbg !16676
  br label %49, !dbg !16676

49:                                               ; preds = %40, %39
  %50 = load i32, ptr %3, align 4, !dbg !16677
  ret i32 %50, !dbg !16677
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @create_cache_entry(ptr noundef %0, ptr noundef %1) #0 !dbg !16678 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca %struct.stat, align 8
  %9 = alloca ptr, align 8
  %10 = alloca [4096 x i8], align 16
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !16681, metadata !DIExpression()), !dbg !16682
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !16683, metadata !DIExpression()), !dbg !16684
  call void @llvm.dbg.declare(metadata ptr %6, metadata !16685, metadata !DIExpression()), !dbg !16686
  %11 = load ptr, ptr %5, align 8, !dbg !16687
  store ptr %11, ptr %6, align 8, !dbg !16686
  call void @llvm.dbg.declare(metadata ptr %7, metadata !16688, metadata !DIExpression()), !dbg !16689
  call void @llvm.dbg.declare(metadata ptr %8, metadata !16690, metadata !DIExpression()), !dbg !16691
  call void @llvm.dbg.declare(metadata ptr %9, metadata !16692, metadata !DIExpression()), !dbg !16693
  call void @llvm.dbg.declare(metadata ptr %10, metadata !16694, metadata !DIExpression()), !dbg !16695
  %12 = load ptr, ptr %6, align 8, !dbg !16696
  %13 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %12, i32 0, i32 1, !dbg !16696
  %14 = getelementptr inbounds %struct.anon.6, ptr %13, i32 0, i32 2, !dbg !16696
  %15 = load i32, ptr %14, align 8, !dbg !16696
  %16 = load ptr, ptr %6, align 8, !dbg !16696
  %17 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %16, i32 0, i32 1, !dbg !16696
  %18 = getelementptr inbounds %struct.anon.6, ptr %17, i32 0, i32 0, !dbg !16696
  %19 = load ptr, ptr %18, align 8, !dbg !16696
  %20 = load ptr, ptr %4, align 8, !dbg !16696
  %21 = getelementptr inbounds [4096 x i8], ptr %10, i64 0, i64 0, !dbg !16696
  %22 = call ptr @realpathat2(i32 noundef %15, ptr noundef %19, ptr noundef %20, ptr noundef %21, ptr noundef %8), !dbg !16696
  %23 = icmp ne ptr %22, null, !dbg !16696
  %24 = xor i1 %23, true, !dbg !16696
  %25 = zext i1 %24 to i32, !dbg !16696
  %26 = sext i32 %25 to i64, !dbg !16696
  %27 = icmp ne i64 %26, 0, !dbg !16696
  br i1 %27, label %28, label %29, !dbg !16698

28:                                               ; preds = %2
  store ptr null, ptr %3, align 8, !dbg !16699
  br label %82, !dbg !16699

29:                                               ; preds = %2
  %30 = getelementptr inbounds [4096 x i8], ptr %10, i64 0, i64 0, !dbg !16700
  %31 = load ptr, ptr %6, align 8, !dbg !16700
  %32 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %31, i32 0, i32 1, !dbg !16700
  %33 = getelementptr inbounds %struct.anon.6, ptr %32, i32 0, i32 0, !dbg !16700
  %34 = load ptr, ptr %33, align 8, !dbg !16700
  %35 = load ptr, ptr %6, align 8, !dbg !16700
  %36 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %35, i32 0, i32 1, !dbg !16700
  %37 = getelementptr inbounds %struct.anon.6, ptr %36, i32 0, i32 1, !dbg !16700
  %38 = load i64, ptr %37, align 8, !dbg !16700
  %39 = call i32 @strncmp(ptr noundef %30, ptr noundef %34, i64 noundef %38) #20, !dbg !16700
  %40 = sext i32 %39 to i64, !dbg !16700
  %41 = icmp ne i64 %40, 0, !dbg !16700
  br i1 %41, label %42, label %43, !dbg !16702

42:                                               ; preds = %29
  store ptr null, ptr %3, align 8, !dbg !16703
  br label %82, !dbg !16703

43:                                               ; preds = %29
  %44 = load ptr, ptr %6, align 8, !dbg !16704
  %45 = load ptr, ptr %4, align 8, !dbg !16705
  %46 = getelementptr inbounds [4096 x i8], ptr %10, i64 0, i64 0, !dbg !16706
  %47 = call ptr @get_funcs(ptr noundef %44, ptr noundef %45, ptr noundef %46, ptr noundef %8), !dbg !16707
  store ptr %47, ptr %9, align 8, !dbg !16708
  %48 = load ptr, ptr %9, align 8, !dbg !16709
  %49 = icmp ne ptr %48, null, !dbg !16709
  %50 = xor i1 %49, true, !dbg !16709
  %51 = zext i1 %50 to i32, !dbg !16709
  %52 = sext i32 %51 to i64, !dbg !16709
  %53 = icmp ne i64 %52, 0, !dbg !16709
  br i1 %53, label %54, label %55, !dbg !16711

54:                                               ; preds = %43
  store ptr null, ptr %3, align 8, !dbg !16712
  br label %82, !dbg !16712

55:                                               ; preds = %43
  %56 = load ptr, ptr %6, align 8, !dbg !16713
  %57 = getelementptr inbounds [4096 x i8], ptr %10, i64 0, i64 0, !dbg !16714
  %58 = load ptr, ptr %9, align 8, !dbg !16715
  %59 = call ptr @create_cache_entry_from_funcs(ptr noundef %56, ptr noundef %57, ptr noundef %8, ptr noundef %58), !dbg !16716
  store ptr %59, ptr %7, align 8, !dbg !16717
  %60 = load ptr, ptr %7, align 8, !dbg !16718
  %61 = icmp ne ptr %60, null, !dbg !16718
  %62 = xor i1 %61, true, !dbg !16718
  %63 = zext i1 %62 to i32, !dbg !16718
  %64 = sext i32 %63 to i64, !dbg !16718
  %65 = icmp ne i64 %64, 0, !dbg !16718
  br i1 %65, label %66, label %67, !dbg !16720

66:                                               ; preds = %55
  store ptr null, ptr %3, align 8, !dbg !16721
  br label %82, !dbg !16721

67:                                               ; preds = %55
  %68 = getelementptr inbounds %struct.stat, ptr %8, i32 0, i32 12, !dbg !16722
  %69 = getelementptr inbounds %struct.anon.3, ptr %68, i32 0, i32 0, !dbg !16722
  %70 = load i64, ptr %69, align 8, !dbg !16722
  %71 = load ptr, ptr %7, align 8, !dbg !16723
  %72 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %71, i32 0, i32 1, !dbg !16724
  %73 = getelementptr inbounds %struct.anon.7, ptr %72, i32 0, i32 0, !dbg !16725
  %74 = getelementptr inbounds [31 x i8], ptr %73, i64 0, i64 0, !dbg !16723
  call void @lwan_format_rfc_time(i64 noundef %70, ptr noundef %74), !dbg !16726
  %75 = getelementptr inbounds %struct.stat, ptr %8, i32 0, i32 12, !dbg !16727
  %76 = getelementptr inbounds %struct.anon.3, ptr %75, i32 0, i32 0, !dbg !16727
  %77 = load i64, ptr %76, align 8, !dbg !16727
  %78 = load ptr, ptr %7, align 8, !dbg !16728
  %79 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %78, i32 0, i32 1, !dbg !16729
  %80 = getelementptr inbounds %struct.anon.7, ptr %79, i32 0, i32 1, !dbg !16730
  store i64 %77, ptr %80, align 8, !dbg !16731
  %81 = load ptr, ptr %7, align 8, !dbg !16732
  store ptr %81, ptr %3, align 8, !dbg !16733
  br label %82, !dbg !16733

82:                                               ; preds = %67, %66, %54, %42, %28
  %83 = load ptr, ptr %3, align 8, !dbg !16734
  ret ptr %83, !dbg !16734
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @destroy_cache_entry(ptr noundef %0, ptr noundef %1) #0 !dbg !16735 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !16738, metadata !DIExpression()), !dbg !16739
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !16740, metadata !DIExpression()), !dbg !16741
  call void @llvm.dbg.declare(metadata ptr %5, metadata !16742, metadata !DIExpression()), !dbg !16743
  %6 = load ptr, ptr %3, align 8, !dbg !16744
  store ptr %6, ptr %5, align 8, !dbg !16743
  %7 = load ptr, ptr %5, align 8, !dbg !16745
  %8 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %7, i32 0, i32 3, !dbg !16746
  %9 = load ptr, ptr %8, align 8, !dbg !16746
  %10 = getelementptr inbounds %struct.cache_funcs_t_, ptr %9, i32 0, i32 2, !dbg !16747
  %11 = load ptr, ptr %10, align 8, !dbg !16747
  %12 = load ptr, ptr %5, align 8, !dbg !16748
  %13 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %12, i64 1, !dbg !16749
  call void %11(ptr noundef %13), !dbg !16745
  %14 = load ptr, ptr %5, align 8, !dbg !16750
  call void @free(ptr noundef %14) #17, !dbg !16751
  ret void, !dbg !16752
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @lwan_tpl_compile_string(ptr noundef %0, ptr noundef %1) #0 !dbg !16753 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !16756, metadata !DIExpression()), !dbg !16757
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !16758, metadata !DIExpression()), !dbg !16759
  call void @llvm.dbg.declare(metadata ptr %6, metadata !16760, metadata !DIExpression()), !dbg !16761
  %7 = call noalias ptr @calloc(i64 noundef 1, i64 noundef 16) #19, !dbg !16762
  store ptr %7, ptr %6, align 8, !dbg !16763
  %8 = load ptr, ptr %6, align 8, !dbg !16764
  %9 = icmp ne ptr %8, null, !dbg !16764
  br i1 %9, label %10, label %18, !dbg !16766

10:                                               ; preds = %2
  %11 = load ptr, ptr %6, align 8, !dbg !16767
  %12 = load ptr, ptr %4, align 8, !dbg !16770
  %13 = load ptr, ptr %5, align 8, !dbg !16771
  %14 = call zeroext i1 @parse_string(ptr noundef %11, ptr noundef %12, ptr noundef %13), !dbg !16772
  br i1 %14, label %15, label %17, !dbg !16773

15:                                               ; preds = %10
  %16 = load ptr, ptr %6, align 8, !dbg !16774
  store ptr %16, ptr %3, align 8, !dbg !16775
  br label %20, !dbg !16775

17:                                               ; preds = %10
  br label %18, !dbg !16776

18:                                               ; preds = %17, %2
  %19 = load ptr, ptr %6, align 8, !dbg !16777
  call void @lwan_tpl_free(ptr noundef %19), !dbg !16778
  store ptr null, ptr %3, align 8, !dbg !16779
  br label %20, !dbg !16779

20:                                               ; preds = %18, %15
  %21 = load ptr, ptr %3, align 8, !dbg !16780
  ret ptr %21, !dbg !16780
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @parse_string(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !16781 {
  %4 = alloca i1, align 1
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca %struct.parser, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !16784, metadata !DIExpression()), !dbg !16785
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !16786, metadata !DIExpression()), !dbg !16787
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !16788, metadata !DIExpression()), !dbg !16789
  call void @llvm.dbg.declare(metadata ptr %8, metadata !16790, metadata !DIExpression()), !dbg !16831
  call void @llvm.memset.p0.i64(ptr align 8 %8, i8 0, i64 224, i1 false), !dbg !16831
  %11 = getelementptr inbounds %struct.parser, ptr %8, i32 0, i32 0, !dbg !16832
  %12 = load ptr, ptr %5, align 8, !dbg !16833
  store ptr %12, ptr %11, align 8, !dbg !16832
  %13 = getelementptr inbounds %struct.parser, ptr %8, i32 0, i32 1, !dbg !16832
  %14 = load ptr, ptr %7, align 8, !dbg !16834
  store ptr %14, ptr %13, align 8, !dbg !16832
  %15 = getelementptr inbounds %struct.parser, ptr %8, i32 0, i32 6, !dbg !16832
  %16 = getelementptr inbounds %struct.anon.2.79, ptr %15, i32 0, i32 2, !dbg !16835
  store i64 16, ptr %16, align 8, !dbg !16835
  call void @llvm.dbg.declare(metadata ptr %9, metadata !16836, metadata !DIExpression()), !dbg !16842
  store ptr @parser_text, ptr %9, align 8, !dbg !16842
  call void @llvm.dbg.declare(metadata ptr %10, metadata !16843, metadata !DIExpression()), !dbg !16844
  store ptr null, ptr %10, align 8, !dbg !16844
  %17 = load ptr, ptr %7, align 8, !dbg !16845
  %18 = load ptr, ptr %6, align 8, !dbg !16847
  %19 = call zeroext i1 @parser_init(ptr noundef %8, ptr noundef %17, ptr noundef %18), !dbg !16848
  br i1 %19, label %21, label %20, !dbg !16849

20:                                               ; preds = %3
  store i1 false, ptr %4, align 1, !dbg !16850
  br label %42, !dbg !16850

21:                                               ; preds = %3
  br label %22, !dbg !16851

22:                                               ; preds = %35, %21
  %23 = load ptr, ptr %9, align 8, !dbg !16852
  %24 = icmp ne ptr %23, null, !dbg !16852
  br i1 %24, label %25, label %33, !dbg !16853

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.parser, ptr %8, i32 0, i32 3, !dbg !16854
  %27 = call zeroext i1 @lex_next(ptr noundef %26, ptr noundef %10), !dbg !16855
  br i1 %27, label %28, label %33, !dbg !16856

28:                                               ; preds = %25
  %29 = load ptr, ptr %10, align 8, !dbg !16857
  %30 = getelementptr inbounds %struct.item, ptr %29, i32 0, i32 0, !dbg !16858
  %31 = load i32, ptr %30, align 8, !dbg !16858
  %32 = icmp ne i32 %31, 0, !dbg !16859
  br label %33

33:                                               ; preds = %28, %25, %22
  %34 = phi i1 [ false, %25 ], [ false, %22 ], [ %32, %28 ], !dbg !16860
  br i1 %34, label %35, label %39, !dbg !16851

35:                                               ; preds = %33
  %36 = load ptr, ptr %9, align 8, !dbg !16861
  %37 = load ptr, ptr %10, align 8, !dbg !16862
  %38 = call ptr %36(ptr noundef %8, ptr noundef %37), !dbg !16861
  store ptr %38, ptr %9, align 8, !dbg !16863
  br label %22, !dbg !16851, !llvm.loop !16864

39:                                               ; preds = %33
  %40 = load ptr, ptr %10, align 8, !dbg !16866
  %41 = call zeroext i1 @parser_shutdown(ptr noundef %8, ptr noundef %40), !dbg !16867
  store i1 %41, ptr %4, align 1, !dbg !16868
  br label %42, !dbg !16868

42:                                               ; preds = %39, %20
  %43 = load i1, ptr %4, align 1, !dbg !16869
  ret i1 %43, !dbg !16869
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @parser_text(ptr noundef %0, ptr noundef %1) #0 !dbg !16870 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !16871, metadata !DIExpression()), !dbg !16872
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !16873, metadata !DIExpression()), !dbg !16874
  %7 = load ptr, ptr %5, align 8, !dbg !16875
  %8 = getelementptr inbounds %struct.item, ptr %7, i32 0, i32 0, !dbg !16877
  %9 = load i32, ptr %8, align 8, !dbg !16877
  %10 = icmp eq i32 %9, 3, !dbg !16878
  br i1 %10, label %11, label %12, !dbg !16879

11:                                               ; preds = %2
  store ptr @parser_meta, ptr %3, align 8, !dbg !16880
  br label %77, !dbg !16880

12:                                               ; preds = %2
  %13 = load ptr, ptr %5, align 8, !dbg !16881
  %14 = getelementptr inbounds %struct.item, ptr %13, i32 0, i32 0, !dbg !16883
  %15 = load i32, ptr %14, align 8, !dbg !16883
  %16 = icmp eq i32 %15, 6, !dbg !16884
  br i1 %16, label %17, label %67, !dbg !16885

17:                                               ; preds = %12
  %18 = load ptr, ptr %5, align 8, !dbg !16886
  %19 = getelementptr inbounds %struct.item, ptr %18, i32 0, i32 1, !dbg !16889
  %20 = getelementptr inbounds %struct.lwan_value_t_, ptr %19, i32 0, i32 1, !dbg !16890
  %21 = load i64, ptr %20, align 8, !dbg !16890
  %22 = icmp eq i64 %21, 1, !dbg !16891
  br i1 %22, label %23, label %32, !dbg !16892

23:                                               ; preds = %17
  %24 = load ptr, ptr %4, align 8, !dbg !16893
  %25 = load ptr, ptr %5, align 8, !dbg !16895
  %26 = getelementptr inbounds %struct.item, ptr %25, i32 0, i32 1, !dbg !16896
  %27 = getelementptr inbounds %struct.lwan_value_t_, ptr %26, i32 0, i32 0, !dbg !16897
  %28 = load ptr, ptr %27, align 8, !dbg !16897
  %29 = load i8, ptr %28, align 1, !dbg !16898
  %30 = sext i8 %29 to i64, !dbg !16899
  %31 = inttoptr i64 %30 to ptr, !dbg !16900
  call void @emit_chunk(ptr noundef %24, i32 noundef 1, i32 noundef 0, ptr noundef %31), !dbg !16901
  br label %56, !dbg !16902

32:                                               ; preds = %17
  call void @llvm.dbg.declare(metadata ptr %6, metadata !16903, metadata !DIExpression()), !dbg !16905
  %33 = load ptr, ptr %5, align 8, !dbg !16906
  %34 = getelementptr inbounds %struct.item, ptr %33, i32 0, i32 1, !dbg !16907
  %35 = getelementptr inbounds %struct.lwan_value_t_, ptr %34, i32 0, i32 1, !dbg !16908
  %36 = load i64, ptr %35, align 8, !dbg !16908
  %37 = call ptr @strbuf_new_with_size(i64 noundef %36), !dbg !16909
  store ptr %37, ptr %6, align 8, !dbg !16905
  %38 = load ptr, ptr %6, align 8, !dbg !16910
  %39 = icmp ne ptr %38, null, !dbg !16910
  br i1 %39, label %43, label %40, !dbg !16912

40:                                               ; preds = %32
  %41 = load ptr, ptr %5, align 8, !dbg !16913
  %42 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %41, ptr noundef @.str.9.343), !dbg !16914
  store ptr %42, ptr %3, align 8, !dbg !16915
  br label %77, !dbg !16915

43:                                               ; preds = %32
  %44 = load ptr, ptr %6, align 8, !dbg !16916
  %45 = load ptr, ptr %5, align 8, !dbg !16917
  %46 = getelementptr inbounds %struct.item, ptr %45, i32 0, i32 1, !dbg !16918
  %47 = getelementptr inbounds %struct.lwan_value_t_, ptr %46, i32 0, i32 0, !dbg !16919
  %48 = load ptr, ptr %47, align 8, !dbg !16919
  %49 = load ptr, ptr %5, align 8, !dbg !16920
  %50 = getelementptr inbounds %struct.item, ptr %49, i32 0, i32 1, !dbg !16921
  %51 = getelementptr inbounds %struct.lwan_value_t_, ptr %50, i32 0, i32 1, !dbg !16922
  %52 = load i64, ptr %51, align 8, !dbg !16922
  %53 = call zeroext i1 @strbuf_set(ptr noundef %44, ptr noundef %48, i64 noundef %52), !dbg !16923
  %54 = load ptr, ptr %4, align 8, !dbg !16924
  %55 = load ptr, ptr %6, align 8, !dbg !16925
  call void @emit_chunk(ptr noundef %54, i32 noundef 0, i32 noundef 0, ptr noundef %55), !dbg !16926
  br label %56

56:                                               ; preds = %43, %23
  %57 = load ptr, ptr %5, align 8, !dbg !16927
  %58 = getelementptr inbounds %struct.item, ptr %57, i32 0, i32 1, !dbg !16928
  %59 = getelementptr inbounds %struct.lwan_value_t_, ptr %58, i32 0, i32 1, !dbg !16929
  %60 = load i64, ptr %59, align 8, !dbg !16929
  %61 = load ptr, ptr %4, align 8, !dbg !16930
  %62 = getelementptr inbounds %struct.parser, ptr %61, i32 0, i32 0, !dbg !16931
  %63 = load ptr, ptr %62, align 8, !dbg !16931
  %64 = getelementptr inbounds %struct.lwan_value_t_, ptr %63, i32 0, i32 1, !dbg !16932
  %65 = load i64, ptr %64, align 8, !dbg !16933
  %66 = add i64 %65, %60, !dbg !16933
  store i64 %66, ptr %64, align 8, !dbg !16933
  store ptr @parser_text, ptr %3, align 8, !dbg !16934
  br label %77, !dbg !16934

67:                                               ; preds = %12
  %68 = load ptr, ptr %5, align 8, !dbg !16935
  %69 = getelementptr inbounds %struct.item, ptr %68, i32 0, i32 0, !dbg !16937
  %70 = load i32, ptr %69, align 8, !dbg !16937
  %71 = icmp eq i32 %70, 1, !dbg !16938
  br i1 %71, label %72, label %74, !dbg !16939

72:                                               ; preds = %67
  %73 = load ptr, ptr %4, align 8, !dbg !16940
  call void @emit_chunk(ptr noundef %73, i32 noundef 10, i32 noundef 0, ptr noundef null), !dbg !16942
  store ptr null, ptr %3, align 8, !dbg !16943
  br label %77, !dbg !16943

74:                                               ; preds = %67
  %75 = load ptr, ptr %5, align 8, !dbg !16944
  %76 = call ptr @unexpected_lexeme(ptr noundef %75), !dbg !16945
  store ptr %76, ptr %3, align 8, !dbg !16946
  br label %77, !dbg !16946

77:                                               ; preds = %74, %72, %56, %40, %11
  %78 = load ptr, ptr %3, align 8, !dbg !16947
  ret ptr %78, !dbg !16947
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @parser_init(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !16948 {
  %4 = alloca i1, align 1
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !16951, metadata !DIExpression()), !dbg !16952
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !16953, metadata !DIExpression()), !dbg !16954
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !16955, metadata !DIExpression()), !dbg !16956
  call void @llvm.dbg.declare(metadata ptr %8, metadata !16957, metadata !DIExpression()), !dbg !16958
  %9 = load ptr, ptr %5, align 8, !dbg !16959
  %10 = load ptr, ptr %6, align 8, !dbg !16961
  %11 = call i32 @symtab_push(ptr noundef %9, ptr noundef %10), !dbg !16962
  %12 = icmp slt i32 %11, 0, !dbg !16963
  br i1 %12, label %13, label %14, !dbg !16964

13:                                               ; preds = %3
  store i1 false, ptr %4, align 1, !dbg !16965
  br label %38, !dbg !16965

14:                                               ; preds = %3
  %15 = load ptr, ptr %5, align 8, !dbg !16966
  %16 = getelementptr inbounds %struct.parser, ptr %15, i32 0, i32 6, !dbg !16967
  %17 = getelementptr inbounds %struct.anon.2.79, ptr %16, i32 0, i32 2, !dbg !16968
  %18 = load i64, ptr %17, align 8, !dbg !16968
  %19 = call ptr @reallocarray(ptr noundef null, i64 noundef %18, i64 noundef 24) #17, !dbg !16969
  store ptr %19, ptr %8, align 8, !dbg !16970
  %20 = load ptr, ptr %8, align 8, !dbg !16971
  %21 = load ptr, ptr %5, align 8, !dbg !16972
  %22 = getelementptr inbounds %struct.parser, ptr %21, i32 0, i32 6, !dbg !16973
  %23 = getelementptr inbounds %struct.anon.2.79, ptr %22, i32 0, i32 0, !dbg !16974
  store ptr %20, ptr %23, align 8, !dbg !16975
  %24 = load ptr, ptr %5, align 8, !dbg !16976
  %25 = getelementptr inbounds %struct.parser, ptr %24, i32 0, i32 0, !dbg !16977
  %26 = load ptr, ptr %25, align 8, !dbg !16977
  %27 = getelementptr inbounds %struct.lwan_value_t_, ptr %26, i32 0, i32 0, !dbg !16978
  store ptr %20, ptr %27, align 8, !dbg !16979
  %28 = load ptr, ptr %8, align 8, !dbg !16980
  %29 = icmp ne ptr %28, null, !dbg !16980
  br i1 %29, label %32, label %30, !dbg !16982

30:                                               ; preds = %14
  %31 = load ptr, ptr %5, align 8, !dbg !16983
  call void @symtab_pop(ptr noundef %31), !dbg !16985
  store i1 false, ptr %4, align 1, !dbg !16986
  br label %38, !dbg !16986

32:                                               ; preds = %14
  %33 = load ptr, ptr %5, align 8, !dbg !16987
  %34 = getelementptr inbounds %struct.parser, ptr %33, i32 0, i32 3, !dbg !16988
  %35 = load ptr, ptr %7, align 8, !dbg !16989
  call void @lex_init(ptr noundef %34, ptr noundef %35), !dbg !16990
  %36 = load ptr, ptr %5, align 8, !dbg !16991
  %37 = getelementptr inbounds %struct.parser, ptr %36, i32 0, i32 5, !dbg !16992
  call void @list_head_init.336(ptr noundef %37), !dbg !16993
  store i1 true, ptr %4, align 1, !dbg !16994
  br label %38, !dbg !16994

38:                                               ; preds = %32, %30, %13
  %39 = load i1, ptr %4, align 1, !dbg !16995
  ret i1 %39, !dbg !16995
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @lex_next(ptr noundef %0, ptr noundef %1) #0 !dbg !16996 {
  %3 = alloca i1, align 1
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !17000, metadata !DIExpression()), !dbg !17001
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !17002, metadata !DIExpression()), !dbg !17003
  br label %6, !dbg !17004

6:                                                ; preds = %16, %2
  %7 = load ptr, ptr %4, align 8, !dbg !17005
  %8 = getelementptr inbounds %struct.lexer, ptr %7, i32 0, i32 0, !dbg !17006
  %9 = load ptr, ptr %8, align 8, !dbg !17006
  %10 = icmp ne ptr %9, null, !dbg !17004
  br i1 %10, label %11, label %24, !dbg !17004

11:                                               ; preds = %6
  %12 = load ptr, ptr %4, align 8, !dbg !17007
  %13 = load ptr, ptr %5, align 8, !dbg !17010
  %14 = call zeroext i1 @consume_item(ptr noundef %12, ptr noundef %13), !dbg !17011
  br i1 %14, label %15, label %16, !dbg !17012

15:                                               ; preds = %11
  store i1 true, ptr %3, align 1, !dbg !17013
  br label %28, !dbg !17013

16:                                               ; preds = %11
  %17 = load ptr, ptr %4, align 8, !dbg !17014
  %18 = getelementptr inbounds %struct.lexer, ptr %17, i32 0, i32 0, !dbg !17015
  %19 = load ptr, ptr %18, align 8, !dbg !17015
  %20 = load ptr, ptr %4, align 8, !dbg !17016
  %21 = call ptr %19(ptr noundef %20), !dbg !17014
  %22 = load ptr, ptr %4, align 8, !dbg !17017
  %23 = getelementptr inbounds %struct.lexer, ptr %22, i32 0, i32 0, !dbg !17018
  store ptr %21, ptr %23, align 8, !dbg !17019
  br label %6, !dbg !17004, !llvm.loop !17020

24:                                               ; preds = %6
  %25 = load ptr, ptr %4, align 8, !dbg !17022
  %26 = load ptr, ptr %5, align 8, !dbg !17023
  %27 = call zeroext i1 @consume_item(ptr noundef %25, ptr noundef %26), !dbg !17024
  store i1 %27, ptr %3, align 1, !dbg !17025
  br label %28, !dbg !17025

28:                                               ; preds = %24, %15
  %29 = load i1, ptr %3, align 1, !dbg !17026
  ret i1 %29, !dbg !17026
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @parser_shutdown(ptr noundef %0, ptr noundef %1) #0 !dbg !17027 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i8, align 1
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !17030, metadata !DIExpression()), !dbg !17031
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !17032, metadata !DIExpression()), !dbg !17033
  call void @llvm.dbg.declare(metadata ptr %5, metadata !17034, metadata !DIExpression()), !dbg !17035
  store i8 1, ptr %5, align 1, !dbg !17035
  %8 = load ptr, ptr %4, align 8, !dbg !17036
  %9 = getelementptr inbounds %struct.item, ptr %8, i32 0, i32 0, !dbg !17038
  %10 = load i32, ptr %9, align 8, !dbg !17038
  %11 = icmp eq i32 %10, 0, !dbg !17039
  br i1 %11, label %12, label %32, !dbg !17040

12:                                               ; preds = %2
  %13 = load ptr, ptr %4, align 8, !dbg !17041
  %14 = getelementptr inbounds %struct.item, ptr %13, i32 0, i32 1, !dbg !17042
  %15 = getelementptr inbounds %struct.lwan_value_t_, ptr %14, i32 0, i32 0, !dbg !17043
  %16 = load ptr, ptr %15, align 8, !dbg !17043
  %17 = icmp ne ptr %16, null, !dbg !17041
  br i1 %17, label %18, label %32, !dbg !17044

18:                                               ; preds = %12
  %19 = load ptr, ptr %4, align 8, !dbg !17045
  %20 = getelementptr inbounds %struct.item, ptr %19, i32 0, i32 1, !dbg !17045
  %21 = getelementptr inbounds %struct.lwan_value_t_, ptr %20, i32 0, i32 1, !dbg !17045
  %22 = load i64, ptr %21, align 8, !dbg !17045
  %23 = trunc i64 %22 to i32, !dbg !17045
  %24 = load ptr, ptr %4, align 8, !dbg !17045
  %25 = getelementptr inbounds %struct.item, ptr %24, i32 0, i32 1, !dbg !17045
  %26 = getelementptr inbounds %struct.lwan_value_t_, ptr %25, i32 0, i32 0, !dbg !17045
  %27 = load ptr, ptr %26, align 8, !dbg !17045
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_error_debug(ptr noundef @.str.7.320, i32 noundef 1041, ptr noundef @__FUNCTION__.parser_shutdown, ptr noundef @.str.44.321, i32 noundef %23, ptr noundef %27), !dbg !17045
  %28 = load ptr, ptr %4, align 8, !dbg !17047
  %29 = getelementptr inbounds %struct.item, ptr %28, i32 0, i32 1, !dbg !17048
  %30 = getelementptr inbounds %struct.lwan_value_t_, ptr %29, i32 0, i32 0, !dbg !17049
  %31 = load ptr, ptr %30, align 8, !dbg !17049
  call void @free(ptr noundef %31) #17, !dbg !17050
  store i8 0, ptr %5, align 1, !dbg !17051
  br label %32, !dbg !17052

32:                                               ; preds = %18, %12, %2
  %33 = load ptr, ptr %3, align 8, !dbg !17053
  %34 = getelementptr inbounds %struct.parser, ptr %33, i32 0, i32 5, !dbg !17055
  %35 = call zeroext i1 @list_empty.322(ptr noundef %34), !dbg !17056
  br i1 %35, label %78, label %36, !dbg !17057

36:                                               ; preds = %32
  call void @llvm.dbg.declare(metadata ptr %6, metadata !17058, metadata !DIExpression()), !dbg !17060
  call void @llvm.dbg.declare(metadata ptr %7, metadata !17061, metadata !DIExpression()), !dbg !17062
  %37 = load ptr, ptr %3, align 8, !dbg !17063
  %38 = getelementptr inbounds %struct.parser, ptr %37, i32 0, i32 5, !dbg !17063
  %39 = getelementptr inbounds %struct.list_head, ptr %38, i32 0, i32 0, !dbg !17063
  %40 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %39, i32 0, i32 0, !dbg !17063
  %41 = load ptr, ptr %40, align 8, !dbg !17063
  %42 = call ptr @list_node_to_off_.323(ptr noundef %41, i64 noundef 0), !dbg !17063
  store ptr %42, ptr %6, align 8, !dbg !17063
  %43 = load ptr, ptr %6, align 8, !dbg !17063
  %44 = call ptr @list_node_from_off_.324(ptr noundef %43, i64 noundef 0), !dbg !17063
  %45 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %44, i32 0, i32 0, !dbg !17063
  %46 = load ptr, ptr %45, align 8, !dbg !17063
  %47 = call ptr @list_node_to_off_.323(ptr noundef %46, i64 noundef 0), !dbg !17063
  store ptr %47, ptr %7, align 8, !dbg !17063
  br label %48, !dbg !17063

48:                                               ; preds = %70, %36
  %49 = load ptr, ptr %6, align 8, !dbg !17065
  %50 = call ptr @list_node_from_off_.324(ptr noundef %49, i64 noundef 0), !dbg !17065
  %51 = load ptr, ptr %3, align 8, !dbg !17065
  %52 = getelementptr inbounds %struct.parser, ptr %51, i32 0, i32 5, !dbg !17065
  %53 = getelementptr inbounds %struct.list_head, ptr %52, i32 0, i32 0, !dbg !17065
  %54 = icmp ne ptr %50, %53, !dbg !17065
  br i1 %54, label %55, label %77, !dbg !17063

55:                                               ; preds = %48
  %56 = load ptr, ptr %6, align 8, !dbg !17067
  %57 = getelementptr inbounds %struct.stacked_item, ptr %56, i32 0, i32 1, !dbg !17067
  %58 = getelementptr inbounds %struct.item, ptr %57, i32 0, i32 1, !dbg !17067
  %59 = getelementptr inbounds %struct.lwan_value_t_, ptr %58, i32 0, i32 1, !dbg !17067
  %60 = load i64, ptr %59, align 8, !dbg !17067
  %61 = trunc i64 %60 to i32, !dbg !17067
  %62 = load ptr, ptr %6, align 8, !dbg !17067
  %63 = getelementptr inbounds %struct.stacked_item, ptr %62, i32 0, i32 1, !dbg !17067
  %64 = getelementptr inbounds %struct.item, ptr %63, i32 0, i32 1, !dbg !17067
  %65 = getelementptr inbounds %struct.lwan_value_t_, ptr %64, i32 0, i32 0, !dbg !17067
  %66 = load ptr, ptr %65, align 8, !dbg !17067
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_error_debug(ptr noundef @.str.7.320, i32 noundef 1052, ptr noundef @__FUNCTION__.parser_shutdown, ptr noundef @.str.45.325, i32 noundef %61, ptr noundef %66), !dbg !17067
  %67 = load ptr, ptr %6, align 8, !dbg !17069
  %68 = getelementptr inbounds %struct.stacked_item, ptr %67, i32 0, i32 0, !dbg !17070
  call void @list_del.326(ptr noundef %68), !dbg !17071
  %69 = load ptr, ptr %6, align 8, !dbg !17072
  call void @free(ptr noundef %69) #17, !dbg !17073
  br label %70, !dbg !17074

70:                                               ; preds = %55
  %71 = load ptr, ptr %7, align 8, !dbg !17065
  store ptr %71, ptr %6, align 8, !dbg !17065
  %72 = load ptr, ptr %6, align 8, !dbg !17065
  %73 = call ptr @list_node_from_off_.324(ptr noundef %72, i64 noundef 0), !dbg !17065
  %74 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %73, i32 0, i32 0, !dbg !17065
  %75 = load ptr, ptr %74, align 8, !dbg !17065
  %76 = call ptr @list_node_to_off_.323(ptr noundef %75, i64 noundef 0), !dbg !17065
  store ptr %76, ptr %7, align 8, !dbg !17065
  br label %48, !dbg !17065, !llvm.loop !17075

77:                                               ; preds = %48
  store i8 0, ptr %5, align 1, !dbg !17077
  br label %78, !dbg !17078

78:                                               ; preds = %77, %32
  %79 = load ptr, ptr %3, align 8, !dbg !17079
  call void @symtab_pop(ptr noundef %79), !dbg !17080
  %80 = load ptr, ptr %3, align 8, !dbg !17081
  %81 = getelementptr inbounds %struct.parser, ptr %80, i32 0, i32 2, !dbg !17083
  %82 = load ptr, ptr %81, align 8, !dbg !17083
  %83 = icmp ne ptr %82, null, !dbg !17081
  br i1 %83, label %84, label %93, !dbg !17084

84:                                               ; preds = %78
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_error_debug(ptr noundef @.str.7.320, i32 noundef 1062, ptr noundef @__FUNCTION__.parser_shutdown, ptr noundef @.str.46.327), !dbg !17085
  br label %85, !dbg !17087

85:                                               ; preds = %90, %84
  %86 = load ptr, ptr %3, align 8, !dbg !17088
  %87 = getelementptr inbounds %struct.parser, ptr %86, i32 0, i32 2, !dbg !17089
  %88 = load ptr, ptr %87, align 8, !dbg !17089
  %89 = icmp ne ptr %88, null, !dbg !17087
  br i1 %89, label %90, label %92, !dbg !17087

90:                                               ; preds = %85
  %91 = load ptr, ptr %3, align 8, !dbg !17090
  call void @symtab_pop(ptr noundef %91), !dbg !17091
  br label %85, !dbg !17087, !llvm.loop !17092

92:                                               ; preds = %85
  store i8 0, ptr %5, align 1, !dbg !17094
  br label %93, !dbg !17095

93:                                               ; preds = %92, %78
  %94 = load ptr, ptr %3, align 8, !dbg !17096
  %95 = getelementptr inbounds %struct.parser, ptr %94, i32 0, i32 4, !dbg !17098
  %96 = load i32, ptr %95, align 8, !dbg !17098
  %97 = and i32 %96, 1, !dbg !17099
  %98 = icmp ne i32 %97, 0, !dbg !17099
  br i1 %98, label %99, label %100, !dbg !17100

99:                                               ; preds = %93
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_error_debug(ptr noundef @.str.7.320, i32 noundef 1071, ptr noundef @__FUNCTION__.parser_shutdown, ptr noundef @.str.47.328), !dbg !17101
  store i8 0, ptr %5, align 1, !dbg !17103
  br label %100, !dbg !17104

100:                                              ; preds = %99, %93
  %101 = load ptr, ptr %3, align 8, !dbg !17105
  %102 = getelementptr inbounds %struct.parser, ptr %101, i32 0, i32 4, !dbg !17107
  %103 = load i32, ptr %102, align 8, !dbg !17107
  %104 = and i32 %103, 2, !dbg !17108
  %105 = icmp ne i32 %104, 0, !dbg !17108
  br i1 %105, label %106, label %107, !dbg !17109

106:                                              ; preds = %100
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_error_debug(ptr noundef @.str.7.320, i32 noundef 1075, ptr noundef @__FUNCTION__.parser_shutdown, ptr noundef @.str.48.329), !dbg !17110
  store i8 0, ptr %5, align 1, !dbg !17112
  br label %107, !dbg !17113

107:                                              ; preds = %106, %100
  %108 = load i8, ptr %5, align 1, !dbg !17114
  %109 = trunc i8 %108 to i1, !dbg !17114
  br i1 %109, label %110, label %114, !dbg !17116

110:                                              ; preds = %107
  %111 = load ptr, ptr %3, align 8, !dbg !17117
  %112 = call zeroext i1 @post_process_template(ptr noundef %111), !dbg !17118
  %113 = zext i1 %112 to i8, !dbg !17119
  store i8 %113, ptr %5, align 1, !dbg !17119
  br label %114, !dbg !17120

114:                                              ; preds = %110, %107
  %115 = load i8, ptr %5, align 1, !dbg !17121
  %116 = trunc i8 %115 to i1, !dbg !17121
  br i1 %116, label %119, label %117, !dbg !17123

117:                                              ; preds = %114
  %118 = load ptr, ptr %3, align 8, !dbg !17124
  call void @emit_chunk(ptr noundef %118, i32 noundef 10, i32 noundef 0, ptr noundef null), !dbg !17126
  br label %119, !dbg !17127

119:                                              ; preds = %117, %114
  %120 = load i8, ptr %5, align 1, !dbg !17128
  %121 = trunc i8 %120 to i1, !dbg !17128
  ret i1 %121, !dbg !17129
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @list_empty.322(ptr noundef %0) #0 !dbg !17130 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !17135, metadata !DIExpression()), !dbg !17136
  %3 = load ptr, ptr %2, align 8, !dbg !17137
  %4 = load ptr, ptr %2, align 8, !dbg !17138
  %5 = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 0, !dbg !17139
  %6 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %5, i32 0, i32 0, !dbg !17140
  %7 = load ptr, ptr %6, align 8, !dbg !17140
  %8 = load ptr, ptr %2, align 8, !dbg !17141
  %9 = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 0, !dbg !17142
  %10 = icmp eq ptr %7, %9, !dbg !17143
  ret i1 %10, !dbg !17144
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @list_node_to_off_.323(ptr noundef %0, i64 noundef %1) #0 !dbg !17145 {
  %3 = alloca ptr, align 8
  %4 = alloca i64, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !17148, metadata !DIExpression()), !dbg !17149
  store i64 %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !17150, metadata !DIExpression()), !dbg !17151
  %5 = load ptr, ptr %3, align 8, !dbg !17152
  %6 = load i64, ptr %4, align 8, !dbg !17153
  %7 = sub i64 0, %6, !dbg !17154
  %8 = getelementptr inbounds i8, ptr %5, i64 %7, !dbg !17154
  ret ptr %8, !dbg !17155
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @list_node_from_off_.324(ptr noundef %0, i64 noundef %1) #0 !dbg !17156 {
  %3 = alloca ptr, align 8
  %4 = alloca i64, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !17159, metadata !DIExpression()), !dbg !17160
  store i64 %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !17161, metadata !DIExpression()), !dbg !17162
  %5 = load ptr, ptr %3, align 8, !dbg !17163
  %6 = load i64, ptr %4, align 8, !dbg !17164
  %7 = getelementptr inbounds i8, ptr %5, i64 %6, !dbg !17165
  ret ptr %7, !dbg !17166
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @list_del.326(ptr noundef %0) #0 !dbg !17167 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !17170, metadata !DIExpression()), !dbg !17171
  %3 = load ptr, ptr %2, align 8, !dbg !17172
  %4 = load ptr, ptr %2, align 8, !dbg !17173
  %5 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %4, i32 0, i32 1, !dbg !17174
  %6 = load ptr, ptr %5, align 8, !dbg !17174
  %7 = load ptr, ptr %2, align 8, !dbg !17175
  %8 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %7, i32 0, i32 0, !dbg !17176
  %9 = load ptr, ptr %8, align 8, !dbg !17176
  %10 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %9, i32 0, i32 1, !dbg !17177
  store ptr %6, ptr %10, align 8, !dbg !17178
  %11 = load ptr, ptr %2, align 8, !dbg !17179
  %12 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %11, i32 0, i32 0, !dbg !17180
  %13 = load ptr, ptr %12, align 8, !dbg !17180
  %14 = load ptr, ptr %2, align 8, !dbg !17181
  %15 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %14, i32 0, i32 1, !dbg !17182
  %16 = load ptr, ptr %15, align 8, !dbg !17182
  %17 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %16, i32 0, i32 0, !dbg !17183
  store ptr %13, ptr %17, align 8, !dbg !17184
  ret void, !dbg !17185
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @symtab_pop(ptr noundef %0) #0 !dbg !17186 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !17189, metadata !DIExpression()), !dbg !17190
  call void @llvm.dbg.declare(metadata ptr %3, metadata !17191, metadata !DIExpression()), !dbg !17192
  %4 = load ptr, ptr %2, align 8, !dbg !17193
  %5 = getelementptr inbounds %struct.parser, ptr %4, i32 0, i32 2, !dbg !17194
  %6 = load ptr, ptr %5, align 8, !dbg !17194
  store ptr %6, ptr %3, align 8, !dbg !17192
  %7 = load ptr, ptr %3, align 8, !dbg !17195
  %8 = icmp ne ptr %7, null, !dbg !17195
  br i1 %8, label %9, label %10, !dbg !17198

9:                                                ; preds = %1
  br label %11, !dbg !17198

10:                                               ; preds = %1
  call void @__assert_fail(ptr noundef @.str.34.335, ptr noundef @.str.7.320, i32 noundef 236, ptr noundef @__PRETTY_FUNCTION__.symtab_pop) #23, !dbg !17195
  unreachable, !dbg !17195

11:                                               ; preds = %9
  %12 = load ptr, ptr %3, align 8, !dbg !17199
  %13 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %12, i32 0, i32 0, !dbg !17200
  %14 = load ptr, ptr %13, align 8, !dbg !17200
  call void @hash_free(ptr noundef %14), !dbg !17201
  %15 = load ptr, ptr %3, align 8, !dbg !17202
  %16 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %15, i32 0, i32 1, !dbg !17203
  %17 = load ptr, ptr %16, align 8, !dbg !17203
  %18 = load ptr, ptr %2, align 8, !dbg !17204
  %19 = getelementptr inbounds %struct.parser, ptr %18, i32 0, i32 2, !dbg !17205
  store ptr %17, ptr %19, align 8, !dbg !17206
  %20 = load ptr, ptr %3, align 8, !dbg !17207
  call void @free(ptr noundef %20) #17, !dbg !17208
  ret void, !dbg !17209
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @post_process_template(ptr noundef %0) #0 !dbg !17210 {
  %2 = alloca i1, align 1
  %3 = alloca ptr, align 8
  %4 = alloca i64, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca i8, align 1
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !17213, metadata !DIExpression()), !dbg !17214
  call void @llvm.dbg.declare(metadata ptr %4, metadata !17215, metadata !DIExpression()), !dbg !17216
  call void @llvm.dbg.declare(metadata ptr %5, metadata !17217, metadata !DIExpression()), !dbg !17218
  call void @llvm.dbg.declare(metadata ptr %6, metadata !17219, metadata !DIExpression()), !dbg !17220
  store i64 0, ptr %4, align 8, !dbg !17221
  br label %13, !dbg !17223

13:                                               ; preds = %225, %1
  %14 = load i64, ptr %4, align 8, !dbg !17224
  %15 = load ptr, ptr %3, align 8, !dbg !17226
  %16 = getelementptr inbounds %struct.parser, ptr %15, i32 0, i32 6, !dbg !17227
  %17 = getelementptr inbounds %struct.anon.2.79, ptr %16, i32 0, i32 1, !dbg !17228
  %18 = load i64, ptr %17, align 8, !dbg !17228
  %19 = icmp ult i64 %14, %18, !dbg !17229
  br i1 %19, label %20, label %228, !dbg !17230

20:                                               ; preds = %13
  call void @llvm.dbg.declare(metadata ptr %7, metadata !17231, metadata !DIExpression()), !dbg !17233
  %21 = load ptr, ptr %3, align 8, !dbg !17234
  %22 = getelementptr inbounds %struct.parser, ptr %21, i32 0, i32 6, !dbg !17235
  %23 = getelementptr inbounds %struct.anon.2.79, ptr %22, i32 0, i32 0, !dbg !17236
  %24 = load ptr, ptr %23, align 8, !dbg !17236
  %25 = load i64, ptr %4, align 8, !dbg !17237
  %26 = getelementptr inbounds %struct.chunk, ptr %24, i64 %25, !dbg !17234
  store ptr %26, ptr %7, align 8, !dbg !17233
  %27 = load ptr, ptr %7, align 8, !dbg !17238
  %28 = getelementptr inbounds %struct.chunk, ptr %27, i32 0, i32 0, !dbg !17240
  %29 = load i32, ptr %28, align 8, !dbg !17240
  %30 = icmp eq i32 %29, 7, !dbg !17241
  br i1 %30, label %31, label %88, !dbg !17242

31:                                               ; preds = %20
  %32 = load ptr, ptr %7, align 8, !dbg !17243
  store ptr %32, ptr %5, align 8, !dbg !17246
  br label %33, !dbg !17247

33:                                               ; preds = %54, %31
  %34 = load ptr, ptr %7, align 8, !dbg !17248
  %35 = getelementptr inbounds %struct.chunk, ptr %34, i32 0, i32 0, !dbg !17252
  %36 = load i32, ptr %35, align 8, !dbg !17252
  %37 = icmp eq i32 %36, 10, !dbg !17253
  br i1 %37, label %38, label %39, !dbg !17254

38:                                               ; preds = %33
  br label %57, !dbg !17255

39:                                               ; preds = %33
  %40 = load ptr, ptr %7, align 8, !dbg !17256
  %41 = getelementptr inbounds %struct.chunk, ptr %40, i32 0, i32 0, !dbg !17258
  %42 = load i32, ptr %41, align 8, !dbg !17258
  %43 = icmp eq i32 %42, 8, !dbg !17259
  br i1 %43, label %44, label %53, !dbg !17260

44:                                               ; preds = %39
  %45 = load ptr, ptr %7, align 8, !dbg !17261
  %46 = getelementptr inbounds %struct.chunk, ptr %45, i32 0, i32 1, !dbg !17262
  %47 = load ptr, ptr %46, align 8, !dbg !17262
  %48 = load ptr, ptr %5, align 8, !dbg !17263
  %49 = getelementptr inbounds %struct.chunk, ptr %48, i32 0, i32 1, !dbg !17264
  %50 = load ptr, ptr %49, align 8, !dbg !17264
  %51 = icmp eq ptr %47, %50, !dbg !17265
  br i1 %51, label %52, label %53, !dbg !17266

52:                                               ; preds = %44
  br label %57, !dbg !17267

53:                                               ; preds = %44, %39
  br label %54, !dbg !17268

54:                                               ; preds = %53
  %55 = load ptr, ptr %7, align 8, !dbg !17269
  %56 = getelementptr inbounds %struct.chunk, ptr %55, i32 1, !dbg !17269
  store ptr %56, ptr %7, align 8, !dbg !17269
  br label %33, !dbg !17270, !llvm.loop !17271

57:                                               ; preds = %52, %38
  call void @llvm.dbg.declare(metadata ptr %8, metadata !17274, metadata !DIExpression()), !dbg !17275
  %58 = call noalias ptr @malloc(i64 noundef 16) #18, !dbg !17276
  store ptr %58, ptr %8, align 8, !dbg !17275
  %59 = load ptr, ptr %8, align 8, !dbg !17277
  %60 = icmp ne ptr %59, null, !dbg !17277
  br i1 %60, label %62, label %61, !dbg !17279

61:                                               ; preds = %57
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.7.320, i32 noundef 944, ptr noundef @__FUNCTION__.post_process_template, ptr noundef @.str.49.331) #24, !dbg !17280
  unreachable, !dbg !17280

62:                                               ; preds = %57
  %63 = load ptr, ptr %5, align 8, !dbg !17281
  %64 = getelementptr inbounds %struct.chunk, ptr %63, i32 0, i32 1, !dbg !17282
  %65 = load ptr, ptr %64, align 8, !dbg !17282
  %66 = load ptr, ptr %8, align 8, !dbg !17283
  %67 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %66, i32 0, i32 1, !dbg !17284
  store ptr %65, ptr %67, align 8, !dbg !17285
  %68 = load ptr, ptr %7, align 8, !dbg !17286
  %69 = load ptr, ptr %8, align 8, !dbg !17287
  %70 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %69, i32 0, i32 0, !dbg !17288
  store ptr %68, ptr %70, align 8, !dbg !17289
  %71 = load ptr, ptr %8, align 8, !dbg !17290
  %72 = load ptr, ptr %5, align 8, !dbg !17291
  %73 = getelementptr inbounds %struct.chunk, ptr %72, i32 0, i32 1, !dbg !17292
  store ptr %71, ptr %73, align 8, !dbg !17293
  %74 = load ptr, ptr %5, align 8, !dbg !17294
  %75 = getelementptr inbounds %struct.chunk, ptr %74, i32 0, i32 2, !dbg !17295
  %76 = load i32, ptr %75, align 8, !dbg !17296
  %77 = and i32 %76, -5, !dbg !17296
  store i32 %77, ptr %75, align 8, !dbg !17296
  %78 = load ptr, ptr %5, align 8, !dbg !17297
  %79 = load ptr, ptr %3, align 8, !dbg !17297
  %80 = getelementptr inbounds %struct.parser, ptr %79, i32 0, i32 6, !dbg !17297
  %81 = getelementptr inbounds %struct.anon.2.79, ptr %80, i32 0, i32 0, !dbg !17297
  %82 = load ptr, ptr %81, align 8, !dbg !17297
  %83 = ptrtoint ptr %78 to i64, !dbg !17297
  %84 = ptrtoint ptr %82 to i64, !dbg !17297
  %85 = sub i64 %83, %84, !dbg !17297
  %86 = sdiv exact i64 %85, 24, !dbg !17297
  %87 = add i64 %86, 1, !dbg !17298
  store i64 %87, ptr %4, align 8, !dbg !17299
  br label %224, !dbg !17300

88:                                               ; preds = %20
  %89 = load ptr, ptr %7, align 8, !dbg !17301
  %90 = getelementptr inbounds %struct.chunk, ptr %89, i32 0, i32 0, !dbg !17303
  %91 = load i32, ptr %90, align 8, !dbg !17303
  %92 = icmp eq i32 %91, 5, !dbg !17304
  br i1 %92, label %93, label %167, !dbg !17305

93:                                               ; preds = %88
  call void @llvm.dbg.declare(metadata ptr %9, metadata !17306, metadata !DIExpression()), !dbg !17308
  %94 = load ptr, ptr %7, align 8, !dbg !17309
  %95 = getelementptr inbounds %struct.chunk, ptr %94, i32 0, i32 2, !dbg !17310
  %96 = load i32, ptr %95, align 8, !dbg !17310
  store i32 %96, ptr %9, align 4, !dbg !17308
  %97 = load ptr, ptr %7, align 8, !dbg !17311
  store ptr %97, ptr %5, align 8, !dbg !17313
  br label %98, !dbg !17314

98:                                               ; preds = %122, %93
  %99 = load ptr, ptr %7, align 8, !dbg !17315
  %100 = getelementptr inbounds %struct.chunk, ptr %99, i32 0, i32 0, !dbg !17319
  %101 = load i32, ptr %100, align 8, !dbg !17319
  %102 = icmp eq i32 %101, 10, !dbg !17320
  br i1 %102, label %103, label %104, !dbg !17321

103:                                              ; preds = %98
  br label %125, !dbg !17322

104:                                              ; preds = %98
  %105 = load ptr, ptr %7, align 8, !dbg !17323
  %106 = getelementptr inbounds %struct.chunk, ptr %105, i32 0, i32 0, !dbg !17325
  %107 = load i32, ptr %106, align 8, !dbg !17325
  %108 = icmp eq i32 %107, 6, !dbg !17326
  br i1 %108, label %109, label %121, !dbg !17327

109:                                              ; preds = %104
  %110 = load ptr, ptr %7, align 8, !dbg !17328
  %111 = getelementptr inbounds %struct.chunk, ptr %110, i32 0, i32 1, !dbg !17329
  %112 = load ptr, ptr %111, align 8, !dbg !17329
  %113 = load ptr, ptr %5, align 8, !dbg !17330
  %114 = icmp eq ptr %112, %113, !dbg !17331
  br i1 %114, label %115, label %121, !dbg !17332

115:                                              ; preds = %109
  %116 = load i32, ptr %9, align 4, !dbg !17333
  %117 = load ptr, ptr %7, align 8, !dbg !17335
  %118 = getelementptr inbounds %struct.chunk, ptr %117, i32 0, i32 2, !dbg !17336
  %119 = load i32, ptr %118, align 8, !dbg !17337
  %120 = or i32 %119, %116, !dbg !17337
  store i32 %120, ptr %118, align 8, !dbg !17337
  br label %125, !dbg !17338

121:                                              ; preds = %109, %104
  br label %122, !dbg !17339

122:                                              ; preds = %121
  %123 = load ptr, ptr %7, align 8, !dbg !17340
  %124 = getelementptr inbounds %struct.chunk, ptr %123, i32 1, !dbg !17340
  store ptr %124, ptr %7, align 8, !dbg !17340
  br label %98, !dbg !17341, !llvm.loop !17342

125:                                              ; preds = %115, %103
  call void @llvm.dbg.declare(metadata ptr %10, metadata !17345, metadata !DIExpression()), !dbg !17346
  %126 = call noalias ptr @malloc(i64 noundef 16) #18, !dbg !17347
  store ptr %126, ptr %10, align 8, !dbg !17346
  %127 = load ptr, ptr %10, align 8, !dbg !17348
  %128 = icmp ne ptr %127, null, !dbg !17348
  br i1 %128, label %130, label %129, !dbg !17350

129:                                              ; preds = %125
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.7.320, i32 noundef 966, ptr noundef @__FUNCTION__.post_process_template, ptr noundef @.str.49.331) #24, !dbg !17351
  unreachable, !dbg !17351

130:                                              ; preds = %125
  %131 = load ptr, ptr %5, align 8, !dbg !17352
  %132 = getelementptr inbounds %struct.chunk, ptr %131, i32 0, i32 1, !dbg !17353
  %133 = load ptr, ptr %132, align 8, !dbg !17353
  %134 = load ptr, ptr %10, align 8, !dbg !17354
  %135 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %134, i32 0, i32 1, !dbg !17355
  store ptr %133, ptr %135, align 8, !dbg !17356
  %136 = load ptr, ptr %10, align 8, !dbg !17357
  %137 = load ptr, ptr %5, align 8, !dbg !17358
  %138 = getelementptr inbounds %struct.chunk, ptr %137, i32 0, i32 1, !dbg !17359
  store ptr %136, ptr %138, align 8, !dbg !17360
  %139 = load ptr, ptr %5, align 8, !dbg !17361
  %140 = getelementptr inbounds %struct.chunk, ptr %139, i32 0, i32 2, !dbg !17362
  %141 = load i32, ptr %140, align 8, !dbg !17363
  %142 = and i32 %141, -5, !dbg !17363
  store i32 %142, ptr %140, align 8, !dbg !17363
  %143 = load ptr, ptr %7, align 8, !dbg !17364
  %144 = getelementptr inbounds %struct.chunk, ptr %143, i32 0, i32 0, !dbg !17366
  %145 = load i32, ptr %144, align 8, !dbg !17366
  %146 = icmp eq i32 %145, 10, !dbg !17367
  br i1 %146, label %147, label %151, !dbg !17368

147:                                              ; preds = %130
  %148 = load ptr, ptr %7, align 8, !dbg !17369
  %149 = load ptr, ptr %10, align 8, !dbg !17370
  %150 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %149, i32 0, i32 0, !dbg !17371
  store ptr %148, ptr %150, align 8, !dbg !17372
  br label %156, !dbg !17370

151:                                              ; preds = %130
  %152 = load ptr, ptr %7, align 8, !dbg !17373
  %153 = getelementptr inbounds %struct.chunk, ptr %152, i64 1, !dbg !17374
  %154 = load ptr, ptr %10, align 8, !dbg !17375
  %155 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %154, i32 0, i32 0, !dbg !17376
  store ptr %153, ptr %155, align 8, !dbg !17377
  br label %156

156:                                              ; preds = %151, %147
  %157 = load ptr, ptr %5, align 8, !dbg !17378
  %158 = load ptr, ptr %3, align 8, !dbg !17378
  %159 = getelementptr inbounds %struct.parser, ptr %158, i32 0, i32 6, !dbg !17378
  %160 = getelementptr inbounds %struct.anon.2.79, ptr %159, i32 0, i32 0, !dbg !17378
  %161 = load ptr, ptr %160, align 8, !dbg !17378
  %162 = ptrtoint ptr %157 to i64, !dbg !17378
  %163 = ptrtoint ptr %161 to i64, !dbg !17378
  %164 = sub i64 %162, %163, !dbg !17378
  %165 = sdiv exact i64 %164, 24, !dbg !17378
  %166 = add i64 %165, 1, !dbg !17379
  store i64 %166, ptr %4, align 8, !dbg !17380
  br label %223, !dbg !17381

167:                                              ; preds = %88
  %168 = load ptr, ptr %7, align 8, !dbg !17382
  %169 = getelementptr inbounds %struct.chunk, ptr %168, i32 0, i32 0, !dbg !17384
  %170 = load i32, ptr %169, align 8, !dbg !17384
  %171 = icmp eq i32 %170, 2, !dbg !17385
  br i1 %171, label %172, label %215, !dbg !17386

172:                                              ; preds = %167
  call void @llvm.dbg.declare(metadata ptr %11, metadata !17387, metadata !DIExpression()), !dbg !17389
  %173 = load ptr, ptr %7, align 8, !dbg !17390
  %174 = getelementptr inbounds %struct.chunk, ptr %173, i32 0, i32 1, !dbg !17391
  %175 = load ptr, ptr %174, align 8, !dbg !17391
  store ptr %175, ptr %11, align 8, !dbg !17389
  call void @llvm.dbg.declare(metadata ptr %12, metadata !17392, metadata !DIExpression()), !dbg !17393
  %176 = load ptr, ptr %7, align 8, !dbg !17394
  %177 = getelementptr inbounds %struct.chunk, ptr %176, i32 0, i32 2, !dbg !17395
  %178 = load i32, ptr %177, align 8, !dbg !17395
  %179 = and i32 %178, 2, !dbg !17396
  %180 = icmp ne i32 %179, 0, !dbg !17394
  %181 = zext i1 %180 to i8, !dbg !17393
  store i8 %181, ptr %12, align 1, !dbg !17393
  %182 = load ptr, ptr %11, align 8, !dbg !17397
  %183 = getelementptr inbounds %struct.lwan_var_descriptor_t_, ptr %182, i32 0, i32 2, !dbg !17399
  %184 = load ptr, ptr %183, align 8, !dbg !17399
  %185 = icmp eq ptr %184, @lwan_append_str_to_strbuf, !dbg !17400
  br i1 %185, label %186, label %202, !dbg !17401

186:                                              ; preds = %172
  %187 = load i8, ptr %12, align 1, !dbg !17402
  %188 = trunc i8 %187 to i1, !dbg !17402
  br i1 %188, label %189, label %192, !dbg !17405

189:                                              ; preds = %186
  %190 = load ptr, ptr %7, align 8, !dbg !17406
  %191 = getelementptr inbounds %struct.chunk, ptr %190, i32 0, i32 0, !dbg !17407
  store i32 4, ptr %191, align 8, !dbg !17408
  br label %195, !dbg !17406

192:                                              ; preds = %186
  %193 = load ptr, ptr %7, align 8, !dbg !17409
  %194 = getelementptr inbounds %struct.chunk, ptr %193, i32 0, i32 0, !dbg !17410
  store i32 3, ptr %194, align 8, !dbg !17411
  br label %195

195:                                              ; preds = %192, %189
  %196 = load ptr, ptr %11, align 8, !dbg !17412
  %197 = getelementptr inbounds %struct.lwan_var_descriptor_t_, ptr %196, i32 0, i32 1, !dbg !17413
  %198 = load i64, ptr %197, align 8, !dbg !17413
  %199 = inttoptr i64 %198 to ptr, !dbg !17414
  %200 = load ptr, ptr %7, align 8, !dbg !17415
  %201 = getelementptr inbounds %struct.chunk, ptr %200, i32 0, i32 1, !dbg !17416
  store ptr %199, ptr %201, align 8, !dbg !17417
  br label %214, !dbg !17418

202:                                              ; preds = %172
  %203 = load i8, ptr %12, align 1, !dbg !17419
  %204 = trunc i8 %203 to i1, !dbg !17419
  br i1 %204, label %205, label %206, !dbg !17421

205:                                              ; preds = %202
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_error_debug(ptr noundef @.str.7.320, i32 noundef 989, ptr noundef @__FUNCTION__.post_process_template, ptr noundef @.str.50.332), !dbg !17422
  store i1 false, ptr %2, align 1, !dbg !17424
  br label %273, !dbg !17424

206:                                              ; preds = %202
  %207 = load ptr, ptr %11, align 8, !dbg !17425
  %208 = getelementptr inbounds %struct.lwan_var_descriptor_t_, ptr %207, i32 0, i32 2, !dbg !17427
  %209 = load ptr, ptr %208, align 8, !dbg !17427
  %210 = icmp ne ptr %209, null, !dbg !17425
  br i1 %210, label %212, label %211, !dbg !17428

211:                                              ; preds = %206
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_error_debug(ptr noundef @.str.7.320, i32 noundef 992, ptr noundef @__FUNCTION__.post_process_template, ptr noundef @.str.51.333), !dbg !17429
  store i1 false, ptr %2, align 1, !dbg !17431
  br label %273, !dbg !17431

212:                                              ; preds = %206
  br label %213

213:                                              ; preds = %212
  br label %214

214:                                              ; preds = %213, %195
  br label %222, !dbg !17432

215:                                              ; preds = %167
  %216 = load ptr, ptr %7, align 8, !dbg !17433
  %217 = getelementptr inbounds %struct.chunk, ptr %216, i32 0, i32 0, !dbg !17435
  %218 = load i32, ptr %217, align 8, !dbg !17435
  %219 = icmp eq i32 %218, 10, !dbg !17436
  br i1 %219, label %220, label %221, !dbg !17437

220:                                              ; preds = %215
  br label %228, !dbg !17438

221:                                              ; preds = %215
  br label %222

222:                                              ; preds = %221, %214
  br label %223

223:                                              ; preds = %222, %156
  br label %224

224:                                              ; preds = %223, %62
  br label %225, !dbg !17440

225:                                              ; preds = %224
  %226 = load i64, ptr %4, align 8, !dbg !17441
  %227 = add i64 %226, 1, !dbg !17441
  store i64 %227, ptr %4, align 8, !dbg !17441
  br label %13, !dbg !17442, !llvm.loop !17443

228:                                              ; preds = %220, %13
  %229 = load ptr, ptr %3, align 8, !dbg !17445
  %230 = getelementptr inbounds %struct.parser, ptr %229, i32 0, i32 6, !dbg !17447
  %231 = getelementptr inbounds %struct.anon.2.79, ptr %230, i32 0, i32 2, !dbg !17448
  %232 = load i64, ptr %231, align 8, !dbg !17448
  %233 = load ptr, ptr %3, align 8, !dbg !17449
  %234 = getelementptr inbounds %struct.parser, ptr %233, i32 0, i32 6, !dbg !17450
  %235 = getelementptr inbounds %struct.anon.2.79, ptr %234, i32 0, i32 1, !dbg !17451
  %236 = load i64, ptr %235, align 8, !dbg !17451
  %237 = icmp ne i64 %232, %236, !dbg !17452
  br i1 %237, label %238, label %264, !dbg !17453

238:                                              ; preds = %228
  %239 = load ptr, ptr %3, align 8, !dbg !17454
  %240 = getelementptr inbounds %struct.parser, ptr %239, i32 0, i32 6, !dbg !17454
  %241 = getelementptr inbounds %struct.anon.2.79, ptr %240, i32 0, i32 2, !dbg !17454
  %242 = load i64, ptr %241, align 8, !dbg !17454
  %243 = load ptr, ptr %3, align 8, !dbg !17454
  %244 = getelementptr inbounds %struct.parser, ptr %243, i32 0, i32 6, !dbg !17454
  %245 = getelementptr inbounds %struct.anon.2.79, ptr %244, i32 0, i32 1, !dbg !17454
  %246 = load i64, ptr %245, align 8, !dbg !17454
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.7.320, i32 noundef 1002, ptr noundef @__FUNCTION__.post_process_template, ptr noundef @.str.52.334, i64 noundef %242, i64 noundef %246), !dbg !17454
  %247 = load ptr, ptr %3, align 8, !dbg !17456
  %248 = getelementptr inbounds %struct.parser, ptr %247, i32 0, i32 6, !dbg !17457
  %249 = getelementptr inbounds %struct.anon.2.79, ptr %248, i32 0, i32 0, !dbg !17458
  %250 = load ptr, ptr %249, align 8, !dbg !17458
  %251 = load ptr, ptr %3, align 8, !dbg !17459
  %252 = getelementptr inbounds %struct.parser, ptr %251, i32 0, i32 6, !dbg !17460
  %253 = getelementptr inbounds %struct.anon.2.79, ptr %252, i32 0, i32 1, !dbg !17461
  %254 = load i64, ptr %253, align 8, !dbg !17461
  %255 = call ptr @reallocarray(ptr noundef %250, i64 noundef %254, i64 noundef 24) #17, !dbg !17462
  store ptr %255, ptr %6, align 8, !dbg !17463
  %256 = load ptr, ptr %6, align 8, !dbg !17464
  %257 = icmp ne ptr %256, null, !dbg !17464
  br i1 %257, label %258, label %263, !dbg !17466

258:                                              ; preds = %238
  %259 = load ptr, ptr %6, align 8, !dbg !17467
  %260 = load ptr, ptr %3, align 8, !dbg !17468
  %261 = getelementptr inbounds %struct.parser, ptr %260, i32 0, i32 6, !dbg !17469
  %262 = getelementptr inbounds %struct.anon.2.79, ptr %261, i32 0, i32 0, !dbg !17470
  store ptr %259, ptr %262, align 8, !dbg !17471
  br label %263, !dbg !17468

263:                                              ; preds = %258, %238
  br label %264, !dbg !17472

264:                                              ; preds = %263, %228
  %265 = load ptr, ptr %3, align 8, !dbg !17473
  %266 = getelementptr inbounds %struct.parser, ptr %265, i32 0, i32 6, !dbg !17474
  %267 = getelementptr inbounds %struct.anon.2.79, ptr %266, i32 0, i32 0, !dbg !17475
  %268 = load ptr, ptr %267, align 8, !dbg !17475
  %269 = load ptr, ptr %3, align 8, !dbg !17476
  %270 = getelementptr inbounds %struct.parser, ptr %269, i32 0, i32 0, !dbg !17477
  %271 = load ptr, ptr %270, align 8, !dbg !17477
  %272 = getelementptr inbounds %struct.lwan_value_t_, ptr %271, i32 0, i32 0, !dbg !17478
  store ptr %268, ptr %272, align 8, !dbg !17479
  store i1 true, ptr %2, align 1, !dbg !17480
  br label %273, !dbg !17480

273:                                              ; preds = %264, %211, %205
  %274 = load i1, ptr %2, align 1, !dbg !17481
  ret i1 %274, !dbg !17481
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_chunk(ptr noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef %3) #0 !dbg !17482 {
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !17485, metadata !DIExpression()), !dbg !17486
  store i32 %1, ptr %6, align 4
  call void @llvm.dbg.declare(metadata ptr %6, metadata !17487, metadata !DIExpression()), !dbg !17488
  store i32 %2, ptr %7, align 4
  call void @llvm.dbg.declare(metadata ptr %7, metadata !17489, metadata !DIExpression()), !dbg !17490
  store ptr %3, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !17491, metadata !DIExpression()), !dbg !17492
  call void @llvm.dbg.declare(metadata ptr %9, metadata !17493, metadata !DIExpression()), !dbg !17494
  %10 = load ptr, ptr %5, align 8, !dbg !17495
  %11 = getelementptr inbounds %struct.parser, ptr %10, i32 0, i32 6, !dbg !17497
  %12 = getelementptr inbounds %struct.anon.2.79, ptr %11, i32 0, i32 1, !dbg !17498
  %13 = load i64, ptr %12, align 8, !dbg !17498
  %14 = load ptr, ptr %5, align 8, !dbg !17499
  %15 = getelementptr inbounds %struct.parser, ptr %14, i32 0, i32 6, !dbg !17500
  %16 = getelementptr inbounds %struct.anon.2.79, ptr %15, i32 0, i32 2, !dbg !17501
  %17 = load i64, ptr %16, align 8, !dbg !17501
  %18 = icmp uge i64 %13, %17, !dbg !17502
  br i1 %18, label %19, label %46, !dbg !17503

19:                                               ; preds = %4
  %20 = load ptr, ptr %5, align 8, !dbg !17504
  %21 = getelementptr inbounds %struct.parser, ptr %20, i32 0, i32 6, !dbg !17506
  %22 = getelementptr inbounds %struct.anon.2.79, ptr %21, i32 0, i32 2, !dbg !17507
  %23 = load i64, ptr %22, align 8, !dbg !17508
  %24 = add i64 %23, 16, !dbg !17508
  store i64 %24, ptr %22, align 8, !dbg !17508
  %25 = load ptr, ptr %5, align 8, !dbg !17509
  %26 = getelementptr inbounds %struct.parser, ptr %25, i32 0, i32 6, !dbg !17510
  %27 = getelementptr inbounds %struct.anon.2.79, ptr %26, i32 0, i32 0, !dbg !17511
  %28 = load ptr, ptr %27, align 8, !dbg !17511
  %29 = load ptr, ptr %5, align 8, !dbg !17512
  %30 = getelementptr inbounds %struct.parser, ptr %29, i32 0, i32 6, !dbg !17513
  %31 = getelementptr inbounds %struct.anon.2.79, ptr %30, i32 0, i32 2, !dbg !17514
  %32 = load i64, ptr %31, align 8, !dbg !17514
  %33 = call ptr @reallocarray(ptr noundef %28, i64 noundef %32, i64 noundef 24) #17, !dbg !17515
  store ptr %33, ptr %9, align 8, !dbg !17516
  %34 = load ptr, ptr %9, align 8, !dbg !17517
  %35 = icmp ne ptr %34, null, !dbg !17517
  br i1 %35, label %37, label %36, !dbg !17519

36:                                               ; preds = %19
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.7.320, i32 noundef 521, ptr noundef @__FUNCTION__.emit_chunk, ptr noundef @.str.36.330) #24, !dbg !17520
  unreachable, !dbg !17520

37:                                               ; preds = %19
  %38 = load ptr, ptr %9, align 8, !dbg !17521
  %39 = load ptr, ptr %5, align 8, !dbg !17522
  %40 = getelementptr inbounds %struct.parser, ptr %39, i32 0, i32 6, !dbg !17523
  %41 = getelementptr inbounds %struct.anon.2.79, ptr %40, i32 0, i32 0, !dbg !17524
  store ptr %38, ptr %41, align 8, !dbg !17525
  %42 = load ptr, ptr %5, align 8, !dbg !17526
  %43 = getelementptr inbounds %struct.parser, ptr %42, i32 0, i32 0, !dbg !17527
  %44 = load ptr, ptr %43, align 8, !dbg !17527
  %45 = getelementptr inbounds %struct.lwan_value_t_, ptr %44, i32 0, i32 0, !dbg !17528
  store ptr %38, ptr %45, align 8, !dbg !17529
  br label %46, !dbg !17530

46:                                               ; preds = %37, %4
  %47 = load ptr, ptr %5, align 8, !dbg !17531
  %48 = getelementptr inbounds %struct.parser, ptr %47, i32 0, i32 6, !dbg !17532
  %49 = getelementptr inbounds %struct.anon.2.79, ptr %48, i32 0, i32 0, !dbg !17533
  %50 = load ptr, ptr %49, align 8, !dbg !17533
  %51 = load ptr, ptr %5, align 8, !dbg !17534
  %52 = getelementptr inbounds %struct.parser, ptr %51, i32 0, i32 6, !dbg !17535
  %53 = getelementptr inbounds %struct.anon.2.79, ptr %52, i32 0, i32 1, !dbg !17536
  %54 = load i64, ptr %53, align 8, !dbg !17537
  %55 = add i64 %54, 1, !dbg !17537
  store i64 %55, ptr %53, align 8, !dbg !17537
  %56 = getelementptr inbounds %struct.chunk, ptr %50, i64 %54, !dbg !17531
  store ptr %56, ptr %9, align 8, !dbg !17538
  %57 = load i32, ptr %6, align 4, !dbg !17539
  %58 = load ptr, ptr %9, align 8, !dbg !17540
  %59 = getelementptr inbounds %struct.chunk, ptr %58, i32 0, i32 0, !dbg !17541
  store i32 %57, ptr %59, align 8, !dbg !17542
  %60 = load i32, ptr %7, align 4, !dbg !17543
  %61 = load ptr, ptr %9, align 8, !dbg !17544
  %62 = getelementptr inbounds %struct.chunk, ptr %61, i32 0, i32 2, !dbg !17545
  store i32 %60, ptr %62, align 8, !dbg !17546
  %63 = load ptr, ptr %8, align 8, !dbg !17547
  %64 = load ptr, ptr %9, align 8, !dbg !17548
  %65 = getelementptr inbounds %struct.chunk, ptr %64, i32 0, i32 1, !dbg !17549
  store ptr %63, ptr %65, align 8, !dbg !17550
  ret void, !dbg !17551
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @consume_item(ptr noundef %0, ptr noundef %1) #0 !dbg !17552 {
  %3 = alloca i1, align 1
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !17553, metadata !DIExpression()), !dbg !17554
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !17555, metadata !DIExpression()), !dbg !17556
  %6 = load ptr, ptr %4, align 8, !dbg !17557
  %7 = getelementptr inbounds %struct.lexer, ptr %6, i32 0, i32 4, !dbg !17559
  %8 = getelementptr inbounds %struct.anon.0.80, ptr %7, i32 0, i32 3, !dbg !17560
  %9 = load i64, ptr %8, align 8, !dbg !17560
  %10 = icmp ne i64 %9, 0, !dbg !17557
  br i1 %10, label %12, label %11, !dbg !17561

11:                                               ; preds = %2
  store i1 false, ptr %3, align 1, !dbg !17562
  br label %36, !dbg !17562

12:                                               ; preds = %2
  %13 = load ptr, ptr %4, align 8, !dbg !17563
  %14 = getelementptr inbounds %struct.lexer, ptr %13, i32 0, i32 4, !dbg !17564
  %15 = getelementptr inbounds %struct.anon.0.80, ptr %14, i32 0, i32 0, !dbg !17565
  %16 = load ptr, ptr %4, align 8, !dbg !17566
  %17 = getelementptr inbounds %struct.lexer, ptr %16, i32 0, i32 4, !dbg !17567
  %18 = getelementptr inbounds %struct.anon.0.80, ptr %17, i32 0, i32 1, !dbg !17568
  %19 = load i64, ptr %18, align 8, !dbg !17568
  %20 = getelementptr inbounds [4 x %struct.item], ptr %15, i64 0, i64 %19, !dbg !17563
  %21 = load ptr, ptr %5, align 8, !dbg !17569
  store ptr %20, ptr %21, align 8, !dbg !17570
  %22 = load ptr, ptr %4, align 8, !dbg !17571
  %23 = getelementptr inbounds %struct.lexer, ptr %22, i32 0, i32 4, !dbg !17572
  %24 = getelementptr inbounds %struct.anon.0.80, ptr %23, i32 0, i32 1, !dbg !17573
  %25 = load i64, ptr %24, align 8, !dbg !17573
  %26 = add i64 %25, 1, !dbg !17574
  %27 = urem i64 %26, 4, !dbg !17575
  %28 = load ptr, ptr %4, align 8, !dbg !17576
  %29 = getelementptr inbounds %struct.lexer, ptr %28, i32 0, i32 4, !dbg !17577
  %30 = getelementptr inbounds %struct.anon.0.80, ptr %29, i32 0, i32 1, !dbg !17578
  store i64 %27, ptr %30, align 8, !dbg !17579
  %31 = load ptr, ptr %4, align 8, !dbg !17580
  %32 = getelementptr inbounds %struct.lexer, ptr %31, i32 0, i32 4, !dbg !17581
  %33 = getelementptr inbounds %struct.anon.0.80, ptr %32, i32 0, i32 3, !dbg !17582
  %34 = load i64, ptr %33, align 8, !dbg !17583
  %35 = add i64 %34, -1, !dbg !17583
  store i64 %35, ptr %33, align 8, !dbg !17583
  store i1 true, ptr %3, align 1, !dbg !17584
  br label %36, !dbg !17584

36:                                               ; preds = %12, %11
  %37 = load i1, ptr %3, align 1, !dbg !17585
  ret i1 %37, !dbg !17585
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @symtab_push(ptr noundef %0, ptr noundef %1) #0 !dbg !17586 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !17589, metadata !DIExpression()), !dbg !17590
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !17591, metadata !DIExpression()), !dbg !17592
  call void @llvm.dbg.declare(metadata ptr %6, metadata !17593, metadata !DIExpression()), !dbg !17594
  %7 = load ptr, ptr %5, align 8, !dbg !17595
  %8 = icmp ne ptr %7, null, !dbg !17595
  br i1 %8, label %10, label %9, !dbg !17597

9:                                                ; preds = %2
  store i32 -19, ptr %3, align 4, !dbg !17598
  br label %57, !dbg !17598

10:                                               ; preds = %2
  %11 = call noalias ptr @malloc(i64 noundef 16) #18, !dbg !17599
  store ptr %11, ptr %6, align 8, !dbg !17600
  %12 = load ptr, ptr %6, align 8, !dbg !17601
  %13 = icmp ne ptr %12, null, !dbg !17601
  br i1 %13, label %18, label %14, !dbg !17603

14:                                               ; preds = %10
  %15 = call ptr @__errno_location() #21, !dbg !17604
  %16 = load i32, ptr %15, align 4, !dbg !17604
  %17 = sub nsw i32 0, %16, !dbg !17605
  store i32 %17, ptr %3, align 4, !dbg !17606
  br label %57, !dbg !17606

18:                                               ; preds = %10
  %19 = call ptr @hash_str_new(ptr noundef null, ptr noundef null), !dbg !17607
  %20 = load ptr, ptr %6, align 8, !dbg !17608
  %21 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %20, i32 0, i32 0, !dbg !17609
  store ptr %19, ptr %21, align 8, !dbg !17610
  %22 = load ptr, ptr %6, align 8, !dbg !17611
  %23 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %22, i32 0, i32 0, !dbg !17613
  %24 = load ptr, ptr %23, align 8, !dbg !17613
  %25 = icmp ne ptr %24, null, !dbg !17611
  br i1 %25, label %28, label %26, !dbg !17614

26:                                               ; preds = %18
  %27 = load ptr, ptr %6, align 8, !dbg !17615
  call void @free(ptr noundef %27) #17, !dbg !17617
  store i32 -12, ptr %3, align 4, !dbg !17618
  br label %57, !dbg !17618

28:                                               ; preds = %18
  %29 = load ptr, ptr %4, align 8, !dbg !17619
  %30 = getelementptr inbounds %struct.parser, ptr %29, i32 0, i32 2, !dbg !17620
  %31 = load ptr, ptr %30, align 8, !dbg !17620
  %32 = load ptr, ptr %6, align 8, !dbg !17621
  %33 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %32, i32 0, i32 1, !dbg !17622
  store ptr %31, ptr %33, align 8, !dbg !17623
  %34 = load ptr, ptr %6, align 8, !dbg !17624
  %35 = load ptr, ptr %4, align 8, !dbg !17625
  %36 = getelementptr inbounds %struct.parser, ptr %35, i32 0, i32 2, !dbg !17626
  store ptr %34, ptr %36, align 8, !dbg !17627
  br label %37, !dbg !17628

37:                                               ; preds = %53, %28
  %38 = load ptr, ptr %5, align 8, !dbg !17629
  %39 = getelementptr inbounds %struct.lwan_var_descriptor_t_, ptr %38, i32 0, i32 0, !dbg !17632
  %40 = load ptr, ptr %39, align 8, !dbg !17632
  %41 = icmp ne ptr %40, null, !dbg !17633
  br i1 %41, label %42, label %56, !dbg !17633

42:                                               ; preds = %37
  %43 = load ptr, ptr %4, align 8, !dbg !17634
  %44 = getelementptr inbounds %struct.parser, ptr %43, i32 0, i32 2, !dbg !17635
  %45 = load ptr, ptr %44, align 8, !dbg !17635
  %46 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %45, i32 0, i32 0, !dbg !17636
  %47 = load ptr, ptr %46, align 8, !dbg !17636
  %48 = load ptr, ptr %5, align 8, !dbg !17637
  %49 = getelementptr inbounds %struct.lwan_var_descriptor_t_, ptr %48, i32 0, i32 0, !dbg !17638
  %50 = load ptr, ptr %49, align 8, !dbg !17638
  %51 = load ptr, ptr %5, align 8, !dbg !17639
  %52 = call i32 @hash_add(ptr noundef %47, ptr noundef %50, ptr noundef %51), !dbg !17640
  br label %53, !dbg !17640

53:                                               ; preds = %42
  %54 = load ptr, ptr %5, align 8, !dbg !17641
  %55 = getelementptr inbounds %struct.lwan_var_descriptor_t_, ptr %54, i32 1, !dbg !17641
  store ptr %55, ptr %5, align 8, !dbg !17641
  br label %37, !dbg !17642, !llvm.loop !17643

56:                                               ; preds = %37
  store i32 0, ptr %3, align 4, !dbg !17645
  br label %57, !dbg !17645

57:                                               ; preds = %56, %26, %14, %9
  %58 = load i32, ptr %3, align 4, !dbg !17646
  ret i32 %58, !dbg !17646
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @lex_init(ptr noundef %0, ptr noundef %1) #0 !dbg !17647 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !17650, metadata !DIExpression()), !dbg !17651
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !17652, metadata !DIExpression()), !dbg !17653
  %5 = load ptr, ptr %3, align 8, !dbg !17654
  %6 = getelementptr inbounds %struct.lexer, ptr %5, i32 0, i32 0, !dbg !17655
  store ptr @lex_text, ptr %6, align 8, !dbg !17656
  %7 = load ptr, ptr %4, align 8, !dbg !17657
  %8 = load ptr, ptr %3, align 8, !dbg !17658
  %9 = getelementptr inbounds %struct.lexer, ptr %8, i32 0, i32 1, !dbg !17659
  store ptr %7, ptr %9, align 8, !dbg !17660
  %10 = load ptr, ptr %3, align 8, !dbg !17661
  %11 = getelementptr inbounds %struct.lexer, ptr %10, i32 0, i32 2, !dbg !17662
  store ptr %7, ptr %11, align 8, !dbg !17663
  %12 = load ptr, ptr %4, align 8, !dbg !17664
  %13 = call ptr @rawmemchr(ptr noundef %12, i32 noundef 0) #20, !dbg !17665
  %14 = load ptr, ptr %3, align 8, !dbg !17666
  %15 = getelementptr inbounds %struct.lexer, ptr %14, i32 0, i32 3, !dbg !17667
  store ptr %13, ptr %15, align 8, !dbg !17668
  ret void, !dbg !17669
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @list_head_init.336(ptr noundef %0) #0 !dbg !17670 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !17674, metadata !DIExpression()), !dbg !17675
  %3 = load ptr, ptr %2, align 8, !dbg !17676
  %4 = getelementptr inbounds %struct.list_head, ptr %3, i32 0, i32 0, !dbg !17677
  %5 = load ptr, ptr %2, align 8, !dbg !17678
  %6 = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 0, !dbg !17679
  %7 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %6, i32 0, i32 1, !dbg !17680
  store ptr %4, ptr %7, align 8, !dbg !17681
  %8 = load ptr, ptr %2, align 8, !dbg !17682
  %9 = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 0, !dbg !17683
  %10 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %9, i32 0, i32 0, !dbg !17684
  store ptr %4, ptr %10, align 8, !dbg !17685
  ret void, !dbg !17686
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @lex_text(ptr noundef %0) #0 !dbg !17687 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !17688, metadata !DIExpression()), !dbg !17689
  br label %4, !dbg !17690

4:                                                ; preds = %33, %1
  %5 = load ptr, ptr %3, align 8, !dbg !17691
  %6 = getelementptr inbounds %struct.lexer, ptr %5, i32 0, i32 2, !dbg !17694
  %7 = load ptr, ptr %6, align 8, !dbg !17694
  %8 = call i64 @strlen(ptr noundef @left_meta) #20, !dbg !17695
  %9 = call i32 @strncmp(ptr noundef %7, ptr noundef @left_meta, i64 noundef %8) #20, !dbg !17696
  %10 = icmp ne i32 %9, 0, !dbg !17696
  br i1 %10, label %22, label %11, !dbg !17697

11:                                               ; preds = %4
  %12 = load ptr, ptr %3, align 8, !dbg !17698
  %13 = getelementptr inbounds %struct.lexer, ptr %12, i32 0, i32 2, !dbg !17701
  %14 = load ptr, ptr %13, align 8, !dbg !17701
  %15 = load ptr, ptr %3, align 8, !dbg !17702
  %16 = getelementptr inbounds %struct.lexer, ptr %15, i32 0, i32 1, !dbg !17703
  %17 = load ptr, ptr %16, align 8, !dbg !17703
  %18 = icmp ugt ptr %14, %17, !dbg !17704
  br i1 %18, label %19, label %21, !dbg !17705

19:                                               ; preds = %11
  %20 = load ptr, ptr %3, align 8, !dbg !17706
  call void @emit(ptr noundef %20, i32 noundef 6), !dbg !17707
  br label %21, !dbg !17707

21:                                               ; preds = %19, %11
  store ptr @lex_left_meta, ptr %2, align 8, !dbg !17708
  br label %49, !dbg !17708

22:                                               ; preds = %4
  %23 = load ptr, ptr %3, align 8, !dbg !17709
  %24 = getelementptr inbounds %struct.lexer, ptr %23, i32 0, i32 2, !dbg !17711
  %25 = load ptr, ptr %24, align 8, !dbg !17711
  %26 = call i64 @strlen(ptr noundef @right_meta) #20, !dbg !17712
  %27 = call i32 @strncmp(ptr noundef %25, ptr noundef @right_meta, i64 noundef %26) #20, !dbg !17713
  %28 = icmp ne i32 %27, 0, !dbg !17713
  br i1 %28, label %32, label %29, !dbg !17714

29:                                               ; preds = %22
  %30 = load ptr, ptr %3, align 8, !dbg !17715
  %31 = call ptr (ptr, ptr, ...) @lex_error(ptr noundef %30, ptr noundef @.str.38.337), !dbg !17716
  store ptr %31, ptr %2, align 8, !dbg !17717
  br label %49, !dbg !17717

32:                                               ; preds = %22
  br label %33, !dbg !17718

33:                                               ; preds = %32
  %34 = load ptr, ptr %3, align 8, !dbg !17719
  %35 = call i32 @next(ptr noundef %34), !dbg !17720
  %36 = icmp ne i32 %35, -1, !dbg !17721
  br i1 %36, label %4, label %37, !dbg !17718, !llvm.loop !17722

37:                                               ; preds = %33
  %38 = load ptr, ptr %3, align 8, !dbg !17724
  %39 = getelementptr inbounds %struct.lexer, ptr %38, i32 0, i32 2, !dbg !17726
  %40 = load ptr, ptr %39, align 8, !dbg !17726
  %41 = load ptr, ptr %3, align 8, !dbg !17727
  %42 = getelementptr inbounds %struct.lexer, ptr %41, i32 0, i32 1, !dbg !17728
  %43 = load ptr, ptr %42, align 8, !dbg !17728
  %44 = icmp ugt ptr %40, %43, !dbg !17729
  br i1 %44, label %45, label %47, !dbg !17730

45:                                               ; preds = %37
  %46 = load ptr, ptr %3, align 8, !dbg !17731
  call void @emit(ptr noundef %46, i32 noundef 6), !dbg !17732
  br label %47, !dbg !17732

47:                                               ; preds = %45, %37
  %48 = load ptr, ptr %3, align 8, !dbg !17733
  call void @emit(ptr noundef %48, i32 noundef 1), !dbg !17734
  store ptr null, ptr %2, align 8, !dbg !17735
  br label %49, !dbg !17735

49:                                               ; preds = %47, %29, %21
  %50 = load ptr, ptr %2, align 8, !dbg !17736
  ret ptr %50, !dbg !17736
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit(ptr noundef %0, i32 noundef %1) #0 !dbg !17737 {
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.item, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !17740, metadata !DIExpression()), !dbg !17741
  store i32 %1, ptr %4, align 4
  call void @llvm.dbg.declare(metadata ptr %4, metadata !17742, metadata !DIExpression()), !dbg !17743
  call void @llvm.dbg.declare(metadata ptr %5, metadata !17744, metadata !DIExpression()), !dbg !17745
  %6 = getelementptr inbounds %struct.item, ptr %5, i32 0, i32 0, !dbg !17746
  %7 = load i32, ptr %4, align 4, !dbg !17747
  store i32 %7, ptr %6, align 8, !dbg !17746
  %8 = getelementptr inbounds %struct.item, ptr %5, i32 0, i32 1, !dbg !17746
  %9 = getelementptr inbounds %struct.lwan_value_t_, ptr %8, i32 0, i32 0, !dbg !17748
  %10 = load ptr, ptr %3, align 8, !dbg !17749
  %11 = getelementptr inbounds %struct.lexer, ptr %10, i32 0, i32 1, !dbg !17750
  %12 = load ptr, ptr %11, align 8, !dbg !17750
  store ptr %12, ptr %9, align 8, !dbg !17748
  %13 = getelementptr inbounds %struct.lwan_value_t_, ptr %8, i32 0, i32 1, !dbg !17748
  %14 = load ptr, ptr %3, align 8, !dbg !17751
  %15 = getelementptr inbounds %struct.lexer, ptr %14, i32 0, i32 2, !dbg !17752
  %16 = load ptr, ptr %15, align 8, !dbg !17752
  %17 = load ptr, ptr %3, align 8, !dbg !17753
  %18 = getelementptr inbounds %struct.lexer, ptr %17, i32 0, i32 1, !dbg !17754
  %19 = load ptr, ptr %18, align 8, !dbg !17754
  %20 = ptrtoint ptr %16 to i64, !dbg !17755
  %21 = ptrtoint ptr %19 to i64, !dbg !17755
  %22 = sub i64 %20, %21, !dbg !17755
  store i64 %22, ptr %13, align 8, !dbg !17748
  %23 = load ptr, ptr %3, align 8, !dbg !17756
  call void @emit_item(ptr noundef %23, ptr noundef %5), !dbg !17757
  ret void, !dbg !17758
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @lex_left_meta(ptr noundef %0) #0 !dbg !17759 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !17760, metadata !DIExpression()), !dbg !17761
  %5 = call i64 @strlen(ptr noundef @left_meta) #20, !dbg !17762
  %6 = load ptr, ptr %3, align 8, !dbg !17763
  %7 = getelementptr inbounds %struct.lexer, ptr %6, i32 0, i32 2, !dbg !17764
  %8 = load ptr, ptr %7, align 8, !dbg !17765
  %9 = getelementptr inbounds i8, ptr %8, i64 %5, !dbg !17765
  store ptr %9, ptr %7, align 8, !dbg !17765
  call void @llvm.dbg.declare(metadata ptr %4, metadata !17766, metadata !DIExpression()), !dbg !17767
  %10 = load ptr, ptr %3, align 8, !dbg !17768
  %11 = call i32 @next(ptr noundef %10), !dbg !17769
  store i32 %11, ptr %4, align 4, !dbg !17767
  %12 = load i32, ptr %4, align 4, !dbg !17770
  %13 = icmp eq i32 %12, 33, !dbg !17772
  br i1 %13, label %14, label %15, !dbg !17773

14:                                               ; preds = %1
  store ptr @lex_comment, ptr %2, align 8, !dbg !17774
  br label %18, !dbg !17774

15:                                               ; preds = %1
  %16 = load ptr, ptr %3, align 8, !dbg !17775
  call void @backup(ptr noundef %16), !dbg !17776
  %17 = load ptr, ptr %3, align 8, !dbg !17777
  call void @emit(ptr noundef %17, i32 noundef 3), !dbg !17778
  store ptr @lex_inside_action, ptr %2, align 8, !dbg !17779
  br label %18, !dbg !17779

18:                                               ; preds = %15, %14
  %19 = load ptr, ptr %2, align 8, !dbg !17780
  ret ptr %19, !dbg !17780
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @lex_error(ptr noundef %0, ptr noundef %1, ...) #0 !dbg !17781 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca %struct.item, align 8
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !17784, metadata !DIExpression()), !dbg !17785
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !17786, metadata !DIExpression()), !dbg !17787
  call void @llvm.dbg.declare(metadata ptr %5, metadata !17788, metadata !DIExpression()), !dbg !17789
  call void @llvm.dbg.declare(metadata ptr %6, metadata !17790, metadata !DIExpression()), !dbg !17802
  %7 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %6, i64 0, i64 0, !dbg !17803
  call void @llvm.va_start(ptr %7), !dbg !17803
  %8 = load ptr, ptr %4, align 8, !dbg !17804
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %6, i64 0, i64 0, !dbg !17805
  %10 = call ptr @error_vitem(ptr noundef %5, ptr noundef %8, ptr noundef %9), !dbg !17806
  %11 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %6, i64 0, i64 0, !dbg !17807
  call void @llvm.va_end(ptr %11), !dbg !17807
  %12 = load ptr, ptr %3, align 8, !dbg !17808
  call void @emit_item(ptr noundef %12, ptr noundef %5), !dbg !17809
  ret ptr null, !dbg !17810
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @next(ptr noundef %0) #0 !dbg !17811 {
  %2 = alloca i32, align 4
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !17814, metadata !DIExpression()), !dbg !17815
  %5 = load ptr, ptr %3, align 8, !dbg !17816
  %6 = getelementptr inbounds %struct.lexer, ptr %5, i32 0, i32 2, !dbg !17818
  %7 = load ptr, ptr %6, align 8, !dbg !17818
  %8 = load ptr, ptr %3, align 8, !dbg !17819
  %9 = getelementptr inbounds %struct.lexer, ptr %8, i32 0, i32 3, !dbg !17820
  %10 = load ptr, ptr %9, align 8, !dbg !17820
  %11 = icmp uge ptr %7, %10, !dbg !17821
  br i1 %11, label %12, label %13, !dbg !17822

12:                                               ; preds = %1
  store i32 -1, ptr %2, align 4, !dbg !17823
  br label %24, !dbg !17823

13:                                               ; preds = %1
  call void @llvm.dbg.declare(metadata ptr %4, metadata !17824, metadata !DIExpression()), !dbg !17825
  %14 = load ptr, ptr %3, align 8, !dbg !17826
  %15 = getelementptr inbounds %struct.lexer, ptr %14, i32 0, i32 2, !dbg !17827
  %16 = load ptr, ptr %15, align 8, !dbg !17827
  %17 = load i8, ptr %16, align 1, !dbg !17828
  %18 = sext i8 %17 to i32, !dbg !17828
  store i32 %18, ptr %4, align 4, !dbg !17825
  %19 = load ptr, ptr %3, align 8, !dbg !17829
  %20 = getelementptr inbounds %struct.lexer, ptr %19, i32 0, i32 2, !dbg !17830
  %21 = load ptr, ptr %20, align 8, !dbg !17831
  %22 = getelementptr inbounds i8, ptr %21, i32 1, !dbg !17831
  store ptr %22, ptr %20, align 8, !dbg !17831
  %23 = load i32, ptr %4, align 4, !dbg !17832
  store i32 %23, ptr %2, align 4, !dbg !17833
  br label %24, !dbg !17833

24:                                               ; preds = %13, %12
  %25 = load i32, ptr %2, align 4, !dbg !17834
  ret i32 %25, !dbg !17834
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @error_vitem(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !17835 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !17839, metadata !DIExpression()), !dbg !17840
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !17841, metadata !DIExpression()), !dbg !17842
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !17843, metadata !DIExpression()), !dbg !17844
  call void @llvm.dbg.declare(metadata ptr %8, metadata !17845, metadata !DIExpression()), !dbg !17846
  %9 = load ptr, ptr %5, align 8, !dbg !17847
  %10 = getelementptr inbounds %struct.item, ptr %9, i32 0, i32 0, !dbg !17848
  store i32 0, ptr %10, align 8, !dbg !17849
  %11 = load ptr, ptr %5, align 8, !dbg !17850
  %12 = getelementptr inbounds %struct.item, ptr %11, i32 0, i32 1, !dbg !17851
  %13 = getelementptr inbounds %struct.lwan_value_t_, ptr %12, i32 0, i32 0, !dbg !17852
  %14 = load ptr, ptr %6, align 8, !dbg !17853
  %15 = load ptr, ptr %7, align 8, !dbg !17854
  %16 = call i32 @vasprintf(ptr noundef %13, ptr noundef %14, ptr noundef %15) #17, !dbg !17855
  store i32 %16, ptr %8, align 4, !dbg !17856
  %17 = load i32, ptr %8, align 4, !dbg !17857
  %18 = icmp slt i32 %17, 0, !dbg !17859
  br i1 %18, label %19, label %42, !dbg !17860

19:                                               ; preds = %3
  %20 = call ptr @__errno_location() #21, !dbg !17861
  %21 = load i32, ptr %20, align 4, !dbg !17861
  %22 = call ptr @strerror(i32 noundef %21) #17, !dbg !17863
  %23 = call noalias ptr @strdup(ptr noundef %22) #17, !dbg !17864
  %24 = load ptr, ptr %5, align 8, !dbg !17865
  %25 = getelementptr inbounds %struct.item, ptr %24, i32 0, i32 1, !dbg !17866
  %26 = getelementptr inbounds %struct.lwan_value_t_, ptr %25, i32 0, i32 0, !dbg !17867
  store ptr %23, ptr %26, align 8, !dbg !17868
  %27 = load ptr, ptr %5, align 8, !dbg !17869
  %28 = getelementptr inbounds %struct.item, ptr %27, i32 0, i32 1, !dbg !17871
  %29 = getelementptr inbounds %struct.lwan_value_t_, ptr %28, i32 0, i32 0, !dbg !17872
  %30 = load ptr, ptr %29, align 8, !dbg !17872
  %31 = icmp ne ptr %30, null, !dbg !17869
  br i1 %31, label %33, label %32, !dbg !17873

32:                                               ; preds = %19
  store ptr null, ptr %4, align 8, !dbg !17874
  br label %49, !dbg !17874

33:                                               ; preds = %19
  %34 = load ptr, ptr %5, align 8, !dbg !17875
  %35 = getelementptr inbounds %struct.item, ptr %34, i32 0, i32 1, !dbg !17876
  %36 = getelementptr inbounds %struct.lwan_value_t_, ptr %35, i32 0, i32 0, !dbg !17877
  %37 = load ptr, ptr %36, align 8, !dbg !17877
  %38 = call i64 @strlen(ptr noundef %37) #20, !dbg !17878
  %39 = load ptr, ptr %5, align 8, !dbg !17879
  %40 = getelementptr inbounds %struct.item, ptr %39, i32 0, i32 1, !dbg !17880
  %41 = getelementptr inbounds %struct.lwan_value_t_, ptr %40, i32 0, i32 1, !dbg !17881
  store i64 %38, ptr %41, align 8, !dbg !17882
  br label %48, !dbg !17883

42:                                               ; preds = %3
  %43 = load i32, ptr %8, align 4, !dbg !17884
  %44 = sext i32 %43 to i64, !dbg !17886
  %45 = load ptr, ptr %5, align 8, !dbg !17887
  %46 = getelementptr inbounds %struct.item, ptr %45, i32 0, i32 1, !dbg !17888
  %47 = getelementptr inbounds %struct.lwan_value_t_, ptr %46, i32 0, i32 1, !dbg !17889
  store i64 %44, ptr %47, align 8, !dbg !17890
  br label %48

48:                                               ; preds = %42, %33
  store ptr null, ptr %4, align 8, !dbg !17891
  br label %49, !dbg !17891

49:                                               ; preds = %48, %32
  %50 = load ptr, ptr %4, align 8, !dbg !17892
  ret ptr %50, !dbg !17892
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_item(ptr noundef %0, ptr noundef %1) #0 !dbg !17893 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !17896, metadata !DIExpression()), !dbg !17897
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !17898, metadata !DIExpression()), !dbg !17899
  %5 = load ptr, ptr %3, align 8, !dbg !17900
  %6 = getelementptr inbounds %struct.lexer, ptr %5, i32 0, i32 4, !dbg !17901
  %7 = getelementptr inbounds %struct.anon.0.80, ptr %6, i32 0, i32 0, !dbg !17902
  %8 = load ptr, ptr %3, align 8, !dbg !17903
  %9 = getelementptr inbounds %struct.lexer, ptr %8, i32 0, i32 4, !dbg !17904
  %10 = getelementptr inbounds %struct.anon.0.80, ptr %9, i32 0, i32 2, !dbg !17905
  %11 = load i64, ptr %10, align 8, !dbg !17905
  %12 = getelementptr inbounds [4 x %struct.item], ptr %7, i64 0, i64 %11, !dbg !17900
  %13 = load ptr, ptr %4, align 8, !dbg !17906
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %13, i64 24, i1 false), !dbg !17907
  %14 = load ptr, ptr %3, align 8, !dbg !17908
  %15 = getelementptr inbounds %struct.lexer, ptr %14, i32 0, i32 4, !dbg !17909
  %16 = getelementptr inbounds %struct.anon.0.80, ptr %15, i32 0, i32 2, !dbg !17910
  %17 = load i64, ptr %16, align 8, !dbg !17910
  %18 = add i64 %17, 1, !dbg !17911
  %19 = urem i64 %18, 4, !dbg !17912
  %20 = load ptr, ptr %3, align 8, !dbg !17913
  %21 = getelementptr inbounds %struct.lexer, ptr %20, i32 0, i32 4, !dbg !17914
  %22 = getelementptr inbounds %struct.anon.0.80, ptr %21, i32 0, i32 2, !dbg !17915
  store i64 %19, ptr %22, align 8, !dbg !17916
  %23 = load ptr, ptr %3, align 8, !dbg !17917
  %24 = getelementptr inbounds %struct.lexer, ptr %23, i32 0, i32 4, !dbg !17918
  %25 = getelementptr inbounds %struct.anon.0.80, ptr %24, i32 0, i32 3, !dbg !17919
  %26 = load i64, ptr %25, align 8, !dbg !17920
  %27 = add i64 %26, 1, !dbg !17920
  store i64 %27, ptr %25, align 8, !dbg !17920
  %28 = load ptr, ptr %3, align 8, !dbg !17921
  %29 = getelementptr inbounds %struct.lexer, ptr %28, i32 0, i32 2, !dbg !17922
  %30 = load ptr, ptr %29, align 8, !dbg !17922
  %31 = load ptr, ptr %3, align 8, !dbg !17923
  %32 = getelementptr inbounds %struct.lexer, ptr %31, i32 0, i32 1, !dbg !17924
  store ptr %30, ptr %32, align 8, !dbg !17925
  ret void, !dbg !17926
}

; Function Attrs: nounwind
declare ptr @strerror(i32 noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @lex_comment(ptr noundef %0) #0 !dbg !17927 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !17928, metadata !DIExpression()), !dbg !17929
  call void @llvm.dbg.declare(metadata ptr %4, metadata !17930, metadata !DIExpression()), !dbg !17931
  %6 = call i64 @strlen(ptr noundef @left_meta) #20, !dbg !17932
  store i64 %6, ptr %4, align 8, !dbg !17931
  br label %7, !dbg !17933

7:                                                ; preds = %30, %1
  call void @llvm.dbg.declare(metadata ptr %5, metadata !17934, metadata !DIExpression()), !dbg !17936
  %8 = load ptr, ptr %3, align 8, !dbg !17937
  %9 = call i32 @next(ptr noundef %8), !dbg !17938
  store i32 %9, ptr %5, align 4, !dbg !17936
  %10 = load i32, ptr %5, align 4, !dbg !17939
  %11 = icmp eq i32 %10, 123, !dbg !17941
  br i1 %11, label %12, label %15, !dbg !17942

12:                                               ; preds = %7
  %13 = load i64, ptr %4, align 8, !dbg !17943
  %14 = add i64 %13, 1, !dbg !17943
  store i64 %14, ptr %4, align 8, !dbg !17943
  br label %29, !dbg !17944

15:                                               ; preds = %7
  %16 = load i32, ptr %5, align 4, !dbg !17945
  %17 = icmp eq i32 %16, 125, !dbg !17947
  br i1 %17, label %18, label %21, !dbg !17948

18:                                               ; preds = %15
  %19 = load i64, ptr %4, align 8, !dbg !17949
  %20 = add i64 %19, -1, !dbg !17949
  store i64 %20, ptr %4, align 8, !dbg !17949
  br label %28, !dbg !17950

21:                                               ; preds = %15
  %22 = load i32, ptr %5, align 4, !dbg !17951
  %23 = icmp eq i32 %22, -1, !dbg !17953
  br i1 %23, label %24, label %27, !dbg !17954

24:                                               ; preds = %21
  %25 = load ptr, ptr %3, align 8, !dbg !17955
  %26 = call ptr (ptr, ptr, ...) @lex_error(ptr noundef %25, ptr noundef @.str.39.342), !dbg !17956
  store ptr %26, ptr %2, align 8, !dbg !17957
  br label %35, !dbg !17957

27:                                               ; preds = %21
  br label %28

28:                                               ; preds = %27, %18
  br label %29

29:                                               ; preds = %28, %12
  br label %30, !dbg !17958

30:                                               ; preds = %29
  %31 = load i64, ptr %4, align 8, !dbg !17959
  %32 = icmp ne i64 %31, 0, !dbg !17958
  br i1 %32, label %7, label %33, !dbg !17958, !llvm.loop !17960

33:                                               ; preds = %30
  %34 = load ptr, ptr %3, align 8, !dbg !17962
  call void @ignore(ptr noundef %34), !dbg !17963
  store ptr @lex_text, ptr %2, align 8, !dbg !17964
  br label %35, !dbg !17964

35:                                               ; preds = %33, %24
  %36 = load ptr, ptr %2, align 8, !dbg !17965
  ret ptr %36, !dbg !17965
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @backup(ptr noundef %0) #0 !dbg !17966 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !17969, metadata !DIExpression()), !dbg !17970
  %3 = load ptr, ptr %2, align 8, !dbg !17971
  %4 = getelementptr inbounds %struct.lexer, ptr %3, i32 0, i32 2, !dbg !17972
  %5 = load ptr, ptr %4, align 8, !dbg !17973
  %6 = getelementptr inbounds i8, ptr %5, i32 -1, !dbg !17973
  store ptr %6, ptr %4, align 8, !dbg !17973
  ret void, !dbg !17974
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @lex_inside_action(ptr noundef %0) #0 !dbg !17975 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !17976, metadata !DIExpression()), !dbg !17977
  br label %5, !dbg !17978

5:                                                ; preds = %92, %1
  call void @llvm.dbg.declare(metadata ptr %4, metadata !17979, metadata !DIExpression()), !dbg !17981
  %6 = load ptr, ptr %3, align 8, !dbg !17982
  %7 = getelementptr inbounds %struct.lexer, ptr %6, i32 0, i32 2, !dbg !17984
  %8 = load ptr, ptr %7, align 8, !dbg !17984
  %9 = call i64 @strlen(ptr noundef @right_meta) #20, !dbg !17985
  %10 = call i32 @strncmp(ptr noundef %8, ptr noundef @right_meta, i64 noundef %9) #20, !dbg !17986
  %11 = icmp ne i32 %10, 0, !dbg !17986
  br i1 %11, label %13, label %12, !dbg !17987

12:                                               ; preds = %5
  store ptr @lex_right_meta, ptr %2, align 8, !dbg !17988
  br label %93, !dbg !17988

13:                                               ; preds = %5
  %14 = load ptr, ptr %3, align 8, !dbg !17989
  %15 = call i32 @next(ptr noundef %14), !dbg !17990
  store i32 %15, ptr %4, align 4, !dbg !17991
  %16 = load i32, ptr %4, align 4, !dbg !17992
  %17 = icmp eq i32 %16, -1, !dbg !17994
  br i1 %17, label %18, label %21, !dbg !17995

18:                                               ; preds = %13
  %19 = load ptr, ptr %3, align 8, !dbg !17996
  %20 = call ptr (ptr, ptr, ...) @lex_error(ptr noundef %19, ptr noundef @.str.40.338), !dbg !17997
  store ptr %20, ptr %2, align 8, !dbg !17998
  br label %93, !dbg !17998

21:                                               ; preds = %13
  %22 = load i32, ptr %4, align 4, !dbg !17999
  %23 = icmp eq i32 %22, 10, !dbg !18001
  br i1 %23, label %24, label %27, !dbg !18002

24:                                               ; preds = %21
  %25 = load ptr, ptr %3, align 8, !dbg !18003
  %26 = call ptr (ptr, ptr, ...) @lex_error(ptr noundef %25, ptr noundef @.str.41.339), !dbg !18004
  store ptr %26, ptr %2, align 8, !dbg !18005
  br label %93, !dbg !18005

27:                                               ; preds = %21
  %28 = call ptr @__ctype_b_loc() #21, !dbg !18006
  %29 = load ptr, ptr %28, align 8, !dbg !18006
  %30 = load i32, ptr %4, align 4, !dbg !18006
  %31 = sext i32 %30 to i64, !dbg !18006
  %32 = getelementptr inbounds i16, ptr %29, i64 %31, !dbg !18006
  %33 = load i16, ptr %32, align 2, !dbg !18006
  %34 = zext i16 %33 to i32, !dbg !18006
  %35 = and i32 %34, 8192, !dbg !18006
  %36 = icmp ne i32 %35, 0, !dbg !18006
  br i1 %36, label %37, label %39, !dbg !18008

37:                                               ; preds = %27
  %38 = load ptr, ptr %3, align 8, !dbg !18009
  call void @ignore(ptr noundef %38), !dbg !18011
  br label %92, !dbg !18012

39:                                               ; preds = %27
  %40 = load i32, ptr %4, align 4, !dbg !18013
  %41 = icmp eq i32 %40, 35, !dbg !18015
  br i1 %41, label %42, label %44, !dbg !18016

42:                                               ; preds = %39
  %43 = load ptr, ptr %3, align 8, !dbg !18017
  call void @emit(ptr noundef %43, i32 noundef 4), !dbg !18019
  br label %91, !dbg !18020

44:                                               ; preds = %39
  %45 = load i32, ptr %4, align 4, !dbg !18021
  %46 = icmp eq i32 %45, 47, !dbg !18023
  br i1 %46, label %47, label %49, !dbg !18024

47:                                               ; preds = %44
  %48 = load ptr, ptr %3, align 8, !dbg !18025
  call void @emit(ptr noundef %48, i32 noundef 7), !dbg !18027
  br label %90, !dbg !18028

49:                                               ; preds = %44
  %50 = load i32, ptr %4, align 4, !dbg !18029
  %51 = icmp eq i32 %50, 63, !dbg !18031
  br i1 %51, label %52, label %54, !dbg !18032

52:                                               ; preds = %49
  %53 = load ptr, ptr %3, align 8, !dbg !18033
  call void @emit(ptr noundef %53, i32 noundef 8), !dbg !18035
  br label %89, !dbg !18036

54:                                               ; preds = %49
  %55 = load i32, ptr %4, align 4, !dbg !18037
  %56 = icmp eq i32 %55, 94, !dbg !18039
  br i1 %56, label %57, label %59, !dbg !18040

57:                                               ; preds = %54
  %58 = load ptr, ptr %3, align 8, !dbg !18041
  call void @emit(ptr noundef %58, i32 noundef 9), !dbg !18043
  br label %88, !dbg !18044

59:                                               ; preds = %54
  %60 = load i32, ptr %4, align 4, !dbg !18045
  %61 = icmp eq i32 %60, 62, !dbg !18047
  br i1 %61, label %62, label %64, !dbg !18048

62:                                               ; preds = %59
  %63 = load ptr, ptr %3, align 8, !dbg !18049
  call void @emit(ptr noundef %63, i32 noundef 10), !dbg !18051
  br label %87, !dbg !18052

64:                                               ; preds = %59
  %65 = load i32, ptr %4, align 4, !dbg !18053
  %66 = icmp eq i32 %65, 123, !dbg !18055
  br i1 %66, label %67, label %68, !dbg !18056

67:                                               ; preds = %64
  store ptr @lex_quoted_identifier, ptr %2, align 8, !dbg !18057
  br label %93, !dbg !18057

68:                                               ; preds = %64
  %69 = call ptr @__ctype_b_loc() #21, !dbg !18059
  %70 = load ptr, ptr %69, align 8, !dbg !18059
  %71 = load i32, ptr %4, align 4, !dbg !18059
  %72 = sext i32 %71 to i64, !dbg !18059
  %73 = getelementptr inbounds i16, ptr %70, i64 %72, !dbg !18059
  %74 = load i16, ptr %73, align 2, !dbg !18059
  %75 = zext i16 %74 to i32, !dbg !18059
  %76 = and i32 %75, 8, !dbg !18059
  %77 = icmp ne i32 %76, 0, !dbg !18059
  br i1 %77, label %81, label %78, !dbg !18061

78:                                               ; preds = %68
  %79 = load i32, ptr %4, align 4, !dbg !18062
  %80 = icmp eq i32 %79, 95, !dbg !18063
  br i1 %80, label %81, label %83, !dbg !18064

81:                                               ; preds = %78, %68
  %82 = load ptr, ptr %3, align 8, !dbg !18065
  call void @backup(ptr noundef %82), !dbg !18067
  store ptr @lex_identifier, ptr %2, align 8, !dbg !18068
  br label %93, !dbg !18068

83:                                               ; preds = %78
  %84 = load ptr, ptr %3, align 8, !dbg !18069
  %85 = load i32, ptr %4, align 4, !dbg !18071
  %86 = call ptr (ptr, ptr, ...) @lex_error(ptr noundef %84, ptr noundef @.str.42.340, i32 noundef %85), !dbg !18072
  store ptr %86, ptr %2, align 8, !dbg !18073
  br label %93, !dbg !18073

87:                                               ; preds = %62
  br label %88

88:                                               ; preds = %87, %57
  br label %89

89:                                               ; preds = %88, %52
  br label %90

90:                                               ; preds = %89, %47
  br label %91

91:                                               ; preds = %90, %42
  br label %92

92:                                               ; preds = %91, %37
  br label %5, !dbg !17978, !llvm.loop !18074

93:                                               ; preds = %83, %81, %67, %24, %18, %12
  %94 = load ptr, ptr %2, align 8, !dbg !18076
  ret ptr %94, !dbg !18076
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @lex_right_meta(ptr noundef %0) #0 !dbg !18077 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !18078, metadata !DIExpression()), !dbg !18079
  %3 = call i64 @strlen(ptr noundef @right_meta) #20, !dbg !18080
  %4 = load ptr, ptr %2, align 8, !dbg !18081
  %5 = getelementptr inbounds %struct.lexer, ptr %4, i32 0, i32 2, !dbg !18082
  %6 = load ptr, ptr %5, align 8, !dbg !18083
  %7 = getelementptr inbounds i8, ptr %6, i64 %3, !dbg !18083
  store ptr %7, ptr %5, align 8, !dbg !18083
  %8 = load ptr, ptr %2, align 8, !dbg !18084
  call void @emit(ptr noundef %8, i32 noundef 5), !dbg !18085
  ret ptr @lex_text, !dbg !18086
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @ignore(ptr noundef %0) #0 !dbg !18087 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !18088, metadata !DIExpression()), !dbg !18089
  %3 = load ptr, ptr %2, align 8, !dbg !18090
  %4 = getelementptr inbounds %struct.lexer, ptr %3, i32 0, i32 2, !dbg !18091
  %5 = load ptr, ptr %4, align 8, !dbg !18091
  %6 = load ptr, ptr %2, align 8, !dbg !18092
  %7 = getelementptr inbounds %struct.lexer, ptr %6, i32 0, i32 1, !dbg !18093
  store ptr %5, ptr %7, align 8, !dbg !18094
  ret void, !dbg !18095
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @lex_quoted_identifier(ptr noundef %0) #0 !dbg !18096 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !18097, metadata !DIExpression()), !dbg !18098
  call void @llvm.dbg.declare(metadata ptr %4, metadata !18099, metadata !DIExpression()), !dbg !18100
  %5 = load ptr, ptr %3, align 8, !dbg !18101
  call void @emit(ptr noundef %5, i32 noundef 11), !dbg !18102
  %6 = load ptr, ptr %3, align 8, !dbg !18103
  %7 = call ptr @lex_identifier(ptr noundef %6), !dbg !18104
  %8 = load ptr, ptr %3, align 8, !dbg !18105
  %9 = call i32 @next(ptr noundef %8), !dbg !18106
  store i32 %9, ptr %4, align 4, !dbg !18107
  %10 = load i32, ptr %4, align 4, !dbg !18108
  %11 = icmp ne i32 %10, 125, !dbg !18110
  br i1 %11, label %12, label %16, !dbg !18111

12:                                               ; preds = %1
  %13 = load ptr, ptr %3, align 8, !dbg !18112
  %14 = load i32, ptr %4, align 4, !dbg !18113
  %15 = call ptr (ptr, ptr, ...) @lex_error(ptr noundef %13, ptr noundef @.str.43.341, i32 noundef %14), !dbg !18114
  store ptr %15, ptr %2, align 8, !dbg !18115
  br label %18, !dbg !18115

16:                                               ; preds = %1
  %17 = load ptr, ptr %3, align 8, !dbg !18116
  call void @emit(ptr noundef %17, i32 noundef 12), !dbg !18117
  store ptr @lex_inside_action, ptr %2, align 8, !dbg !18118
  br label %18, !dbg !18118

18:                                               ; preds = %16, %12
  %19 = load ptr, ptr %2, align 8, !dbg !18119
  ret ptr %19, !dbg !18119
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @lex_identifier(ptr noundef %0) #0 !dbg !18120 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !18121, metadata !DIExpression()), !dbg !18122
  br label %3, !dbg !18123

3:                                                ; preds = %7, %1
  %4 = load ptr, ptr %2, align 8, !dbg !18124
  %5 = call i32 @next(ptr noundef %4), !dbg !18125
  %6 = call zeroext i1 @isident(i32 noundef %5), !dbg !18126
  br i1 %6, label %7, label %8, !dbg !18123

7:                                                ; preds = %3
  br label %3, !dbg !18123, !llvm.loop !18127

8:                                                ; preds = %3
  %9 = load ptr, ptr %2, align 8, !dbg !18129
  call void @backup(ptr noundef %9), !dbg !18130
  %10 = load ptr, ptr %2, align 8, !dbg !18131
  call void @emit(ptr noundef %10, i32 noundef 2), !dbg !18132
  ret ptr @lex_inside_action, !dbg !18133
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @isident(i32 noundef %0) #0 !dbg !18134 {
  %2 = alloca i32, align 4
  store i32 %0, ptr %2, align 4
  call void @llvm.dbg.declare(metadata ptr %2, metadata !18137, metadata !DIExpression()), !dbg !18138
  %3 = call ptr @__ctype_b_loc() #21, !dbg !18139
  %4 = load ptr, ptr %3, align 8, !dbg !18139
  %5 = load i32, ptr %2, align 4, !dbg !18139
  %6 = sext i32 %5 to i64, !dbg !18139
  %7 = getelementptr inbounds i16, ptr %4, i64 %6, !dbg !18139
  %8 = load i16, ptr %7, align 2, !dbg !18139
  %9 = zext i16 %8 to i32, !dbg !18139
  %10 = and i32 %9, 8, !dbg !18139
  %11 = icmp ne i32 %10, 0, !dbg !18139
  br i1 %11, label %18, label %12, !dbg !18140

12:                                               ; preds = %1
  %13 = load i32, ptr %2, align 4, !dbg !18141
  %14 = icmp eq i32 %13, 95, !dbg !18142
  br i1 %14, label %18, label %15, !dbg !18143

15:                                               ; preds = %12
  %16 = load i32, ptr %2, align 4, !dbg !18144
  %17 = icmp eq i32 %16, 46, !dbg !18145
  br label %18, !dbg !18143

18:                                               ; preds = %15, %12, %1
  %19 = phi i1 [ true, %12 ], [ true, %1 ], [ %17, %15 ]
  ret i1 %19, !dbg !18146
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @parser_meta(ptr noundef %0, ptr noundef %1) #0 !dbg !18147 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !18148, metadata !DIExpression()), !dbg !18149
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !18150, metadata !DIExpression()), !dbg !18151
  %6 = load ptr, ptr %5, align 8, !dbg !18152
  %7 = getelementptr inbounds %struct.item, ptr %6, i32 0, i32 0, !dbg !18154
  %8 = load i32, ptr %7, align 8, !dbg !18154
  %9 = icmp eq i32 %8, 11, !dbg !18155
  br i1 %9, label %10, label %15, !dbg !18156

10:                                               ; preds = %2
  %11 = load ptr, ptr %4, align 8, !dbg !18157
  %12 = getelementptr inbounds %struct.parser, ptr %11, i32 0, i32 4, !dbg !18159
  %13 = load i32, ptr %12, align 8, !dbg !18160
  %14 = or i32 %13, 2, !dbg !18160
  store i32 %14, ptr %12, align 8, !dbg !18160
  store ptr @parser_meta, ptr %3, align 8, !dbg !18161
  br label %51, !dbg !18161

15:                                               ; preds = %2
  %16 = load ptr, ptr %5, align 8, !dbg !18162
  %17 = getelementptr inbounds %struct.item, ptr %16, i32 0, i32 0, !dbg !18164
  %18 = load i32, ptr %17, align 8, !dbg !18164
  %19 = icmp eq i32 %18, 2, !dbg !18165
  br i1 %19, label %20, label %24, !dbg !18166

20:                                               ; preds = %15
  %21 = load ptr, ptr %4, align 8, !dbg !18167
  %22 = load ptr, ptr %5, align 8, !dbg !18168
  %23 = call ptr @parser_identifier(ptr noundef %21, ptr noundef %22), !dbg !18169
  store ptr %23, ptr %3, align 8, !dbg !18170
  br label %51, !dbg !18170

24:                                               ; preds = %15
  %25 = load ptr, ptr %5, align 8, !dbg !18171
  %26 = getelementptr inbounds %struct.item, ptr %25, i32 0, i32 0, !dbg !18173
  %27 = load i32, ptr %26, align 8, !dbg !18173
  %28 = icmp eq i32 %27, 10, !dbg !18174
  br i1 %28, label %29, label %30, !dbg !18175

29:                                               ; preds = %24
  store ptr @parser_partial, ptr %3, align 8, !dbg !18176
  br label %51, !dbg !18176

30:                                               ; preds = %24
  %31 = load ptr, ptr %5, align 8, !dbg !18177
  %32 = getelementptr inbounds %struct.item, ptr %31, i32 0, i32 0, !dbg !18179
  %33 = load i32, ptr %32, align 8, !dbg !18179
  %34 = icmp eq i32 %33, 4, !dbg !18180
  br i1 %34, label %35, label %36, !dbg !18181

35:                                               ; preds = %30
  store ptr @parser_iter, ptr %3, align 8, !dbg !18182
  br label %51, !dbg !18182

36:                                               ; preds = %30
  %37 = load ptr, ptr %5, align 8, !dbg !18183
  %38 = getelementptr inbounds %struct.item, ptr %37, i32 0, i32 0, !dbg !18185
  %39 = load i32, ptr %38, align 8, !dbg !18185
  %40 = icmp eq i32 %39, 9, !dbg !18186
  br i1 %40, label %41, label %42, !dbg !18187

41:                                               ; preds = %36
  store ptr @parser_negate_iter, ptr %3, align 8, !dbg !18188
  br label %51, !dbg !18188

42:                                               ; preds = %36
  %43 = load ptr, ptr %5, align 8, !dbg !18189
  %44 = getelementptr inbounds %struct.item, ptr %43, i32 0, i32 0, !dbg !18191
  %45 = load i32, ptr %44, align 8, !dbg !18191
  %46 = icmp eq i32 %45, 7, !dbg !18192
  br i1 %46, label %47, label %48, !dbg !18193

47:                                               ; preds = %42
  store ptr @parser_slash, ptr %3, align 8, !dbg !18194
  br label %51, !dbg !18194

48:                                               ; preds = %42
  %49 = load ptr, ptr %5, align 8, !dbg !18195
  %50 = call ptr @unexpected_lexeme(ptr noundef %49), !dbg !18196
  store ptr %50, ptr %3, align 8, !dbg !18197
  br label %51, !dbg !18197

51:                                               ; preds = %48, %47, %41, %35, %29, %20, %10
  %52 = load ptr, ptr %3, align 8, !dbg !18198
  ret ptr %52, !dbg !18198
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @error_item(ptr noundef %0, ptr noundef %1, ...) #0 !dbg !18199 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !18202, metadata !DIExpression()), !dbg !18203
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !18204, metadata !DIExpression()), !dbg !18205
  call void @llvm.dbg.declare(metadata ptr %5, metadata !18206, metadata !DIExpression()), !dbg !18207
  call void @llvm.dbg.declare(metadata ptr %6, metadata !18208, metadata !DIExpression()), !dbg !18209
  %7 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %6, i64 0, i64 0, !dbg !18210
  call void @llvm.va_start(ptr %7), !dbg !18210
  %8 = load ptr, ptr %3, align 8, !dbg !18211
  %9 = load ptr, ptr %4, align 8, !dbg !18212
  %10 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %6, i64 0, i64 0, !dbg !18213
  %11 = call ptr @error_vitem(ptr noundef %8, ptr noundef %9, ptr noundef %10), !dbg !18214
  store ptr %11, ptr %5, align 8, !dbg !18215
  %12 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %6, i64 0, i64 0, !dbg !18216
  call void @llvm.va_end(ptr %12), !dbg !18216
  %13 = load ptr, ptr %5, align 8, !dbg !18217
  ret ptr %13, !dbg !18218
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @strbuf_set(ptr noundef %0, ptr noundef %1, i64 noundef %2) #0 !dbg !18219 {
  %4 = alloca i1, align 1
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !18220, metadata !DIExpression()), !dbg !18221
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !18222, metadata !DIExpression()), !dbg !18223
  store i64 %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !18224, metadata !DIExpression()), !dbg !18225
  %8 = load i64, ptr %7, align 8, !dbg !18226
  %9 = icmp ne i64 %8, 0, !dbg !18226
  br i1 %9, label %13, label %10, !dbg !18228

10:                                               ; preds = %3
  %11 = load ptr, ptr %6, align 8, !dbg !18229
  %12 = call i64 @strlen(ptr noundef %11) #20, !dbg !18230
  store i64 %12, ptr %7, align 8, !dbg !18231
  br label %13, !dbg !18232

13:                                               ; preds = %10, %3
  %14 = load ptr, ptr %5, align 8, !dbg !18233
  %15 = load i64, ptr %7, align 8, !dbg !18233
  %16 = add i64 %15, 1, !dbg !18233
  %17 = call zeroext i1 @grow_buffer_if_needed(ptr noundef %14, i64 noundef %16), !dbg !18233
  %18 = xor i1 %17, true, !dbg !18233
  %19 = zext i1 %18 to i32, !dbg !18233
  %20 = sext i32 %19 to i64, !dbg !18233
  %21 = icmp ne i64 %20, 0, !dbg !18233
  br i1 %21, label %22, label %23, !dbg !18235

22:                                               ; preds = %13
  store i1 false, ptr %4, align 1, !dbg !18236
  br label %39, !dbg !18236

23:                                               ; preds = %13
  %24 = load ptr, ptr %5, align 8, !dbg !18237
  %25 = getelementptr inbounds %struct.strbuf_t_, ptr %24, i32 0, i32 0, !dbg !18238
  %26 = load ptr, ptr %25, align 8, !dbg !18239
  %27 = load ptr, ptr %6, align 8, !dbg !18240
  %28 = load i64, ptr %7, align 8, !dbg !18241
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %26, ptr align 1 %27, i64 %28, i1 false), !dbg !18242
  %29 = load i64, ptr %7, align 8, !dbg !18243
  %30 = load ptr, ptr %5, align 8, !dbg !18244
  %31 = getelementptr inbounds %struct.strbuf_t_, ptr %30, i32 0, i32 1, !dbg !18245
  %32 = getelementptr inbounds %struct.anon.3, ptr %31, i32 0, i32 1, !dbg !18246
  store i64 %29, ptr %32, align 8, !dbg !18247
  %33 = load ptr, ptr %5, align 8, !dbg !18248
  %34 = getelementptr inbounds %struct.strbuf_t_, ptr %33, i32 0, i32 0, !dbg !18249
  %35 = load ptr, ptr %34, align 8, !dbg !18250
  %36 = load i64, ptr %7, align 8, !dbg !18251
  %37 = add i64 %36, 1, !dbg !18252
  %38 = getelementptr inbounds i8, ptr %35, i64 %37, !dbg !18248
  store i8 0, ptr %38, align 1, !dbg !18253
  store i1 true, ptr %4, align 1, !dbg !18254
  br label %39, !dbg !18254

39:                                               ; preds = %23, %22
  %40 = load i1, ptr %4, align 1, !dbg !18255
  ret i1 %40, !dbg !18255
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @unexpected_lexeme(ptr noundef %0) #0 !dbg !18256 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !18259, metadata !DIExpression()), !dbg !18260
  %3 = load ptr, ptr %2, align 8, !dbg !18261
  %4 = load ptr, ptr %2, align 8, !dbg !18262
  %5 = getelementptr inbounds %struct.item, ptr %4, i32 0, i32 0, !dbg !18263
  %6 = load i32, ptr %5, align 8, !dbg !18263
  %7 = zext i32 %6 to i64, !dbg !18264
  %8 = getelementptr inbounds [13 x ptr], ptr @item_type_str, i64 0, i64 %7, !dbg !18264
  %9 = load ptr, ptr %8, align 8, !dbg !18264
  %10 = load ptr, ptr %2, align 8, !dbg !18265
  %11 = getelementptr inbounds %struct.item, ptr %10, i32 0, i32 1, !dbg !18266
  %12 = getelementptr inbounds %struct.lwan_value_t_, ptr %11, i32 0, i32 1, !dbg !18267
  %13 = load i64, ptr %12, align 8, !dbg !18267
  %14 = trunc i64 %13 to i32, !dbg !18268
  %15 = load ptr, ptr %2, align 8, !dbg !18269
  %16 = getelementptr inbounds %struct.item, ptr %15, i32 0, i32 1, !dbg !18270
  %17 = getelementptr inbounds %struct.lwan_value_t_, ptr %16, i32 0, i32 0, !dbg !18271
  %18 = load ptr, ptr %17, align 8, !dbg !18271
  %19 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %3, ptr noundef @.str.37.344, ptr noundef %9, i32 noundef %14, ptr noundef %18), !dbg !18272
  ret ptr %19, !dbg !18273
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @parser_identifier(ptr noundef %0, ptr noundef %1) #0 !dbg !18274 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i64, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca i64, align 8
  %15 = alloca ptr, align 8
  %16 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !18275, metadata !DIExpression()), !dbg !18276
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !18277, metadata !DIExpression()), !dbg !18278
  call void @llvm.dbg.declare(metadata ptr %6, metadata !18279, metadata !DIExpression()), !dbg !18280
  store ptr null, ptr %6, align 8, !dbg !18280
  %17 = load ptr, ptr %4, align 8, !dbg !18281
  %18 = getelementptr inbounds %struct.parser, ptr %17, i32 0, i32 3, !dbg !18283
  %19 = call zeroext i1 @lex_next(ptr noundef %18, ptr noundef %6), !dbg !18284
  br i1 %19, label %27, label %20, !dbg !18285

20:                                               ; preds = %2
  %21 = load ptr, ptr %6, align 8, !dbg !18286
  %22 = icmp ne ptr %21, null, !dbg !18286
  br i1 %22, label %23, label %26, !dbg !18289

23:                                               ; preds = %20
  %24 = load ptr, ptr %5, align 8, !dbg !18290
  %25 = load ptr, ptr %6, align 8, !dbg !18291
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %24, ptr align 8 %25, i64 24, i1 false), !dbg !18292
  br label %26, !dbg !18293

26:                                               ; preds = %23, %20
  store ptr null, ptr %3, align 8, !dbg !18294
  br label %171, !dbg !18294

27:                                               ; preds = %2
  %28 = load ptr, ptr %4, align 8, !dbg !18295
  %29 = getelementptr inbounds %struct.parser, ptr %28, i32 0, i32 4, !dbg !18297
  %30 = load i32, ptr %29, align 8, !dbg !18297
  %31 = and i32 %30, 2, !dbg !18298
  %32 = icmp ne i32 %31, 0, !dbg !18298
  br i1 %32, label %33, label %50, !dbg !18299

33:                                               ; preds = %27
  %34 = load ptr, ptr %6, align 8, !dbg !18300
  %35 = getelementptr inbounds %struct.item, ptr %34, i32 0, i32 0, !dbg !18303
  %36 = load i32, ptr %35, align 8, !dbg !18303
  %37 = icmp ne i32 %36, 12, !dbg !18304
  br i1 %37, label %38, label %41, !dbg !18305

38:                                               ; preds = %33
  %39 = load ptr, ptr %5, align 8, !dbg !18306
  %40 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %39, ptr noundef @.str.10.371), !dbg !18307
  store ptr %40, ptr %3, align 8, !dbg !18308
  br label %171, !dbg !18308

41:                                               ; preds = %33
  %42 = load ptr, ptr %4, align 8, !dbg !18309
  %43 = getelementptr inbounds %struct.parser, ptr %42, i32 0, i32 3, !dbg !18311
  %44 = call zeroext i1 @lex_next(ptr noundef %43, ptr noundef %6), !dbg !18312
  br i1 %44, label %49, label %45, !dbg !18313

45:                                               ; preds = %41
  %46 = load ptr, ptr %5, align 8, !dbg !18314
  %47 = load ptr, ptr %6, align 8, !dbg !18315
  %48 = call ptr @unexpected_lexeme_or_lex_error(ptr noundef %46, ptr noundef %47), !dbg !18316
  store ptr %48, ptr %3, align 8, !dbg !18317
  br label %171, !dbg !18317

49:                                               ; preds = %41
  br label %50, !dbg !18318

50:                                               ; preds = %49, %27
  %51 = load ptr, ptr %6, align 8, !dbg !18319
  %52 = getelementptr inbounds %struct.item, ptr %51, i32 0, i32 0, !dbg !18321
  %53 = load i32, ptr %52, align 8, !dbg !18321
  %54 = icmp eq i32 %53, 5, !dbg !18322
  br i1 %54, label %55, label %113, !dbg !18323

55:                                               ; preds = %50
  call void @llvm.dbg.declare(metadata ptr %7, metadata !18324, metadata !DIExpression()), !dbg !18326
  %56 = load ptr, ptr %4, align 8, !dbg !18327
  call void @llvm.dbg.declare(metadata ptr %8, metadata !18328, metadata !DIExpression()), !dbg !18330
  %57 = load ptr, ptr %5, align 8, !dbg !18330
  %58 = getelementptr inbounds %struct.item, ptr %57, i32 0, i32 1, !dbg !18330
  %59 = getelementptr inbounds %struct.lwan_value_t_, ptr %58, i32 0, i32 0, !dbg !18330
  %60 = load ptr, ptr %59, align 8, !dbg !18330
  store ptr %60, ptr %8, align 8, !dbg !18330
  call void @llvm.dbg.declare(metadata ptr %9, metadata !18331, metadata !DIExpression()), !dbg !18330
  %61 = load ptr, ptr %8, align 8, !dbg !18330
  %62 = load ptr, ptr %5, align 8, !dbg !18330
  %63 = getelementptr inbounds %struct.item, ptr %62, i32 0, i32 1, !dbg !18330
  %64 = getelementptr inbounds %struct.lwan_value_t_, ptr %63, i32 0, i32 1, !dbg !18330
  %65 = load i64, ptr %64, align 8, !dbg !18330
  %66 = call i64 @strnlen(ptr noundef %61, i64 noundef %65) #20, !dbg !18330
  store i64 %66, ptr %9, align 8, !dbg !18330
  call void @llvm.dbg.declare(metadata ptr %10, metadata !18332, metadata !DIExpression()), !dbg !18330
  %67 = load i64, ptr %9, align 8, !dbg !18330
  %68 = add i64 %67, 1, !dbg !18330
  %69 = alloca i8, i64 %68, align 16, !dbg !18330
  store ptr %69, ptr %10, align 8, !dbg !18330
  %70 = load ptr, ptr %10, align 8, !dbg !18330
  %71 = load i64, ptr %9, align 8, !dbg !18330
  %72 = getelementptr inbounds i8, ptr %70, i64 %71, !dbg !18330
  store i8 0, ptr %72, align 1, !dbg !18330
  %73 = load ptr, ptr %10, align 8, !dbg !18330
  %74 = load ptr, ptr %8, align 8, !dbg !18330
  %75 = load i64, ptr %9, align 8, !dbg !18330
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %73, ptr align 1 %74, i64 %75, i1 false), !dbg !18330
  store ptr %73, ptr %11, align 8, !dbg !18330
  %76 = load ptr, ptr %11, align 8, !dbg !18330
  %77 = call ptr @symtab_lookup(ptr noundef %56, ptr noundef %76), !dbg !18333
  store ptr %77, ptr %7, align 8, !dbg !18326
  %78 = load ptr, ptr %7, align 8, !dbg !18334
  %79 = icmp ne ptr %78, null, !dbg !18334
  br i1 %79, label %92, label %80, !dbg !18336

80:                                               ; preds = %55
  %81 = load ptr, ptr %5, align 8, !dbg !18337
  %82 = load ptr, ptr %5, align 8, !dbg !18339
  %83 = getelementptr inbounds %struct.item, ptr %82, i32 0, i32 1, !dbg !18340
  %84 = getelementptr inbounds %struct.lwan_value_t_, ptr %83, i32 0, i32 1, !dbg !18341
  %85 = load i64, ptr %84, align 8, !dbg !18341
  %86 = trunc i64 %85 to i32, !dbg !18342
  %87 = load ptr, ptr %5, align 8, !dbg !18343
  %88 = getelementptr inbounds %struct.item, ptr %87, i32 0, i32 1, !dbg !18344
  %89 = getelementptr inbounds %struct.lwan_value_t_, ptr %88, i32 0, i32 0, !dbg !18345
  %90 = load ptr, ptr %89, align 8, !dbg !18345
  %91 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %81, ptr noundef @.str.11.358, i32 noundef %86, ptr noundef %90), !dbg !18346
  store ptr %91, ptr %3, align 8, !dbg !18347
  br label %171, !dbg !18347

92:                                               ; preds = %55
  %93 = load ptr, ptr %4, align 8, !dbg !18348
  %94 = load ptr, ptr %4, align 8, !dbg !18349
  %95 = getelementptr inbounds %struct.parser, ptr %94, i32 0, i32 4, !dbg !18350
  %96 = load i32, ptr %95, align 8, !dbg !18350
  %97 = load ptr, ptr %7, align 8, !dbg !18351
  call void @emit_chunk(ptr noundef %93, i32 noundef 2, i32 noundef %96, ptr noundef %97), !dbg !18352
  %98 = load ptr, ptr %4, align 8, !dbg !18353
  %99 = getelementptr inbounds %struct.parser, ptr %98, i32 0, i32 4, !dbg !18354
  %100 = load i32, ptr %99, align 8, !dbg !18355
  %101 = and i32 %100, -3, !dbg !18355
  store i32 %101, ptr %99, align 8, !dbg !18355
  %102 = load ptr, ptr %5, align 8, !dbg !18356
  %103 = getelementptr inbounds %struct.item, ptr %102, i32 0, i32 1, !dbg !18357
  %104 = getelementptr inbounds %struct.lwan_value_t_, ptr %103, i32 0, i32 1, !dbg !18358
  %105 = load i64, ptr %104, align 8, !dbg !18358
  %106 = add i64 %105, 1, !dbg !18359
  %107 = load ptr, ptr %4, align 8, !dbg !18360
  %108 = getelementptr inbounds %struct.parser, ptr %107, i32 0, i32 0, !dbg !18361
  %109 = load ptr, ptr %108, align 8, !dbg !18361
  %110 = getelementptr inbounds %struct.lwan_value_t_, ptr %109, i32 0, i32 1, !dbg !18362
  %111 = load i64, ptr %110, align 8, !dbg !18363
  %112 = add i64 %111, %106, !dbg !18363
  store i64 %112, ptr %110, align 8, !dbg !18363
  store ptr @parser_text, ptr %3, align 8, !dbg !18364
  br label %171, !dbg !18364

113:                                              ; preds = %50
  %114 = load ptr, ptr %6, align 8, !dbg !18365
  %115 = getelementptr inbounds %struct.item, ptr %114, i32 0, i32 0, !dbg !18367
  %116 = load i32, ptr %115, align 8, !dbg !18367
  %117 = icmp eq i32 %116, 8, !dbg !18368
  br i1 %117, label %118, label %167, !dbg !18369

118:                                              ; preds = %113
  call void @llvm.dbg.declare(metadata ptr %12, metadata !18370, metadata !DIExpression()), !dbg !18372
  %119 = load ptr, ptr %4, align 8, !dbg !18373
  call void @llvm.dbg.declare(metadata ptr %13, metadata !18374, metadata !DIExpression()), !dbg !18376
  %120 = load ptr, ptr %5, align 8, !dbg !18376
  %121 = getelementptr inbounds %struct.item, ptr %120, i32 0, i32 1, !dbg !18376
  %122 = getelementptr inbounds %struct.lwan_value_t_, ptr %121, i32 0, i32 0, !dbg !18376
  %123 = load ptr, ptr %122, align 8, !dbg !18376
  store ptr %123, ptr %13, align 8, !dbg !18376
  call void @llvm.dbg.declare(metadata ptr %14, metadata !18377, metadata !DIExpression()), !dbg !18376
  %124 = load ptr, ptr %13, align 8, !dbg !18376
  %125 = load ptr, ptr %5, align 8, !dbg !18376
  %126 = getelementptr inbounds %struct.item, ptr %125, i32 0, i32 1, !dbg !18376
  %127 = getelementptr inbounds %struct.lwan_value_t_, ptr %126, i32 0, i32 1, !dbg !18376
  %128 = load i64, ptr %127, align 8, !dbg !18376
  %129 = call i64 @strnlen(ptr noundef %124, i64 noundef %128) #20, !dbg !18376
  store i64 %129, ptr %14, align 8, !dbg !18376
  call void @llvm.dbg.declare(metadata ptr %15, metadata !18378, metadata !DIExpression()), !dbg !18376
  %130 = load i64, ptr %14, align 8, !dbg !18376
  %131 = add i64 %130, 1, !dbg !18376
  %132 = alloca i8, i64 %131, align 16, !dbg !18376
  store ptr %132, ptr %15, align 8, !dbg !18376
  %133 = load ptr, ptr %15, align 8, !dbg !18376
  %134 = load i64, ptr %14, align 8, !dbg !18376
  %135 = getelementptr inbounds i8, ptr %133, i64 %134, !dbg !18376
  store i8 0, ptr %135, align 1, !dbg !18376
  %136 = load ptr, ptr %15, align 8, !dbg !18376
  %137 = load ptr, ptr %13, align 8, !dbg !18376
  %138 = load i64, ptr %14, align 8, !dbg !18376
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %136, ptr align 1 %137, i64 %138, i1 false), !dbg !18376
  store ptr %136, ptr %16, align 8, !dbg !18376
  %139 = load ptr, ptr %16, align 8, !dbg !18376
  %140 = call ptr @symtab_lookup(ptr noundef %119, ptr noundef %139), !dbg !18379
  store ptr %140, ptr %12, align 8, !dbg !18372
  %141 = load ptr, ptr %12, align 8, !dbg !18380
  %142 = icmp ne ptr %141, null, !dbg !18380
  br i1 %142, label %155, label %143, !dbg !18382

143:                                              ; preds = %118
  %144 = load ptr, ptr %5, align 8, !dbg !18383
  %145 = load ptr, ptr %5, align 8, !dbg !18385
  %146 = getelementptr inbounds %struct.item, ptr %145, i32 0, i32 1, !dbg !18386
  %147 = getelementptr inbounds %struct.lwan_value_t_, ptr %146, i32 0, i32 1, !dbg !18387
  %148 = load i64, ptr %147, align 8, !dbg !18387
  %149 = trunc i64 %148 to i32, !dbg !18388
  %150 = load ptr, ptr %5, align 8, !dbg !18389
  %151 = getelementptr inbounds %struct.item, ptr %150, i32 0, i32 1, !dbg !18390
  %152 = getelementptr inbounds %struct.lwan_value_t_, ptr %151, i32 0, i32 0, !dbg !18391
  %153 = load ptr, ptr %152, align 8, !dbg !18391
  %154 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %144, ptr noundef @.str.11.358, i32 noundef %149, ptr noundef %153), !dbg !18392
  store ptr %154, ptr %3, align 8, !dbg !18393
  br label %171, !dbg !18393

155:                                              ; preds = %118
  %156 = load ptr, ptr %4, align 8, !dbg !18394
  %157 = call zeroext i1 @parser_next_is(ptr noundef %156, i32 noundef 5), !dbg !18396
  br i1 %157, label %162, label %158, !dbg !18397

158:                                              ; preds = %155
  %159 = load ptr, ptr %5, align 8, !dbg !18398
  %160 = load ptr, ptr %6, align 8, !dbg !18399
  %161 = call ptr @unexpected_lexeme_or_lex_error(ptr noundef %159, ptr noundef %160), !dbg !18400
  store ptr %161, ptr %3, align 8, !dbg !18401
  br label %171, !dbg !18401

162:                                              ; preds = %155
  %163 = load ptr, ptr %4, align 8, !dbg !18402
  %164 = load ptr, ptr %12, align 8, !dbg !18403
  call void @emit_chunk(ptr noundef %163, i32 noundef 7, i32 noundef 4, ptr noundef %164), !dbg !18404
  %165 = load ptr, ptr %4, align 8, !dbg !18405
  %166 = load ptr, ptr %5, align 8, !dbg !18406
  call void @parser_push_item(ptr noundef %165, ptr noundef %166), !dbg !18407
  store ptr @parser_text, ptr %3, align 8, !dbg !18408
  br label %171, !dbg !18408

167:                                              ; preds = %113
  %168 = load ptr, ptr %5, align 8, !dbg !18409
  %169 = load ptr, ptr %6, align 8, !dbg !18410
  %170 = call ptr @unexpected_lexeme_or_lex_error(ptr noundef %168, ptr noundef %169), !dbg !18411
  store ptr %170, ptr %3, align 8, !dbg !18412
  br label %171, !dbg !18412

171:                                              ; preds = %167, %162, %158, %143, %92, %80, %45, %38, %26
  %172 = load ptr, ptr %3, align 8, !dbg !18413
  ret ptr %172, !dbg !18413
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @parser_partial(ptr noundef %0, ptr noundef %1) #0 !dbg !18414 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i64, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !18415, metadata !DIExpression()), !dbg !18416
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !18417, metadata !DIExpression()), !dbg !18418
  call void @llvm.dbg.declare(metadata ptr %6, metadata !18419, metadata !DIExpression()), !dbg !18420
  call void @llvm.dbg.declare(metadata ptr %7, metadata !18421, metadata !DIExpression()), !dbg !18422
  call void @llvm.dbg.declare(metadata ptr %8, metadata !18423, metadata !DIExpression()), !dbg !18425
  %12 = load ptr, ptr %5, align 8, !dbg !18425
  %13 = getelementptr inbounds %struct.item, ptr %12, i32 0, i32 1, !dbg !18425
  %14 = getelementptr inbounds %struct.lwan_value_t_, ptr %13, i32 0, i32 0, !dbg !18425
  %15 = load ptr, ptr %14, align 8, !dbg !18425
  store ptr %15, ptr %8, align 8, !dbg !18425
  call void @llvm.dbg.declare(metadata ptr %9, metadata !18426, metadata !DIExpression()), !dbg !18425
  %16 = load ptr, ptr %8, align 8, !dbg !18425
  %17 = load ptr, ptr %5, align 8, !dbg !18425
  %18 = getelementptr inbounds %struct.item, ptr %17, i32 0, i32 1, !dbg !18425
  %19 = getelementptr inbounds %struct.lwan_value_t_, ptr %18, i32 0, i32 1, !dbg !18425
  %20 = load i64, ptr %19, align 8, !dbg !18425
  %21 = call i64 @strnlen(ptr noundef %16, i64 noundef %20) #20, !dbg !18425
  store i64 %21, ptr %9, align 8, !dbg !18425
  call void @llvm.dbg.declare(metadata ptr %10, metadata !18427, metadata !DIExpression()), !dbg !18425
  %22 = load i64, ptr %9, align 8, !dbg !18425
  %23 = add i64 %22, 1, !dbg !18425
  %24 = alloca i8, i64 %23, align 16, !dbg !18425
  store ptr %24, ptr %10, align 8, !dbg !18425
  %25 = load ptr, ptr %10, align 8, !dbg !18425
  %26 = load i64, ptr %9, align 8, !dbg !18425
  %27 = getelementptr inbounds i8, ptr %25, i64 %26, !dbg !18425
  store i8 0, ptr %27, align 1, !dbg !18425
  %28 = load ptr, ptr %10, align 8, !dbg !18425
  %29 = load ptr, ptr %8, align 8, !dbg !18425
  %30 = load i64, ptr %9, align 8, !dbg !18425
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %28, ptr align 1 %29, i64 %30, i1 false), !dbg !18425
  store ptr %28, ptr %11, align 8, !dbg !18425
  %31 = load ptr, ptr %11, align 8, !dbg !18425
  store ptr %31, ptr %7, align 8, !dbg !18422
  %32 = load ptr, ptr %5, align 8, !dbg !18428
  %33 = getelementptr inbounds %struct.item, ptr %32, i32 0, i32 0, !dbg !18430
  %34 = load i32, ptr %33, align 8, !dbg !18430
  %35 = icmp ne i32 %34, 2, !dbg !18431
  br i1 %35, label %36, label %39, !dbg !18432

36:                                               ; preds = %2
  %37 = load ptr, ptr %5, align 8, !dbg !18433
  %38 = call ptr @unexpected_lexeme(ptr noundef %37), !dbg !18434
  store ptr %38, ptr %3, align 8, !dbg !18435
  br label %60, !dbg !18435

39:                                               ; preds = %2
  %40 = load ptr, ptr %4, align 8, !dbg !18436
  %41 = call zeroext i1 @parser_next_is(ptr noundef %40, i32 noundef 5), !dbg !18438
  br i1 %41, label %45, label %42, !dbg !18439

42:                                               ; preds = %39
  %43 = load ptr, ptr %5, align 8, !dbg !18440
  %44 = call ptr @unexpected_lexeme(ptr noundef %43), !dbg !18441
  store ptr %44, ptr %3, align 8, !dbg !18442
  br label %60, !dbg !18442

45:                                               ; preds = %39
  %46 = load ptr, ptr %7, align 8, !dbg !18443
  %47 = load ptr, ptr %4, align 8, !dbg !18444
  %48 = getelementptr inbounds %struct.parser, ptr %47, i32 0, i32 1, !dbg !18445
  %49 = load ptr, ptr %48, align 8, !dbg !18445
  %50 = call ptr @lwan_tpl_compile_file(ptr noundef %46, ptr noundef %49), !dbg !18446
  store ptr %50, ptr %6, align 8, !dbg !18447
  %51 = load ptr, ptr %6, align 8, !dbg !18448
  %52 = icmp ne ptr %51, null, !dbg !18448
  br i1 %52, label %53, label %56, !dbg !18450

53:                                               ; preds = %45
  %54 = load ptr, ptr %4, align 8, !dbg !18451
  %55 = load ptr, ptr %6, align 8, !dbg !18453
  call void @emit_chunk(ptr noundef %54, i32 noundef 9, i32 noundef 0, ptr noundef %55), !dbg !18454
  store ptr @parser_text, ptr %3, align 8, !dbg !18455
  br label %60, !dbg !18455

56:                                               ; preds = %45
  %57 = load ptr, ptr %5, align 8, !dbg !18456
  %58 = load ptr, ptr %7, align 8, !dbg !18457
  %59 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %57, ptr noundef @.str.13.369, ptr noundef %58), !dbg !18458
  store ptr %59, ptr %3, align 8, !dbg !18459
  br label %60, !dbg !18459

60:                                               ; preds = %56, %53, %42, %36
  %61 = load ptr, ptr %3, align 8, !dbg !18460
  ret ptr %61, !dbg !18460
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @parser_iter(ptr noundef %0, ptr noundef %1) #0 !dbg !18461 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i64, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i32, align 4
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !18462, metadata !DIExpression()), !dbg !18463
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !18464, metadata !DIExpression()), !dbg !18465
  %14 = load ptr, ptr %5, align 8, !dbg !18466
  %15 = getelementptr inbounds %struct.item, ptr %14, i32 0, i32 0, !dbg !18468
  %16 = load i32, ptr %15, align 8, !dbg !18468
  %17 = icmp eq i32 %16, 2, !dbg !18469
  br i1 %17, label %18, label %95, !dbg !18470

18:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata ptr %6, metadata !18471, metadata !DIExpression()), !dbg !18473
  %19 = load ptr, ptr %4, align 8, !dbg !18474
  %20 = getelementptr inbounds %struct.parser, ptr %19, i32 0, i32 4, !dbg !18475
  %21 = load i32, ptr %20, align 8, !dbg !18475
  %22 = and i32 %21, 1, !dbg !18476
  store i32 %22, ptr %6, align 4, !dbg !18473
  call void @llvm.dbg.declare(metadata ptr %7, metadata !18477, metadata !DIExpression()), !dbg !18478
  call void @llvm.dbg.declare(metadata ptr %8, metadata !18479, metadata !DIExpression()), !dbg !18481
  %23 = load ptr, ptr %5, align 8, !dbg !18481
  %24 = getelementptr inbounds %struct.item, ptr %23, i32 0, i32 1, !dbg !18481
  %25 = getelementptr inbounds %struct.lwan_value_t_, ptr %24, i32 0, i32 0, !dbg !18481
  %26 = load ptr, ptr %25, align 8, !dbg !18481
  store ptr %26, ptr %8, align 8, !dbg !18481
  call void @llvm.dbg.declare(metadata ptr %9, metadata !18482, metadata !DIExpression()), !dbg !18481
  %27 = load ptr, ptr %8, align 8, !dbg !18481
  %28 = load ptr, ptr %5, align 8, !dbg !18481
  %29 = getelementptr inbounds %struct.item, ptr %28, i32 0, i32 1, !dbg !18481
  %30 = getelementptr inbounds %struct.lwan_value_t_, ptr %29, i32 0, i32 1, !dbg !18481
  %31 = load i64, ptr %30, align 8, !dbg !18481
  %32 = call i64 @strnlen(ptr noundef %27, i64 noundef %31) #20, !dbg !18481
  store i64 %32, ptr %9, align 8, !dbg !18481
  call void @llvm.dbg.declare(metadata ptr %10, metadata !18483, metadata !DIExpression()), !dbg !18481
  %33 = load i64, ptr %9, align 8, !dbg !18481
  %34 = add i64 %33, 1, !dbg !18481
  %35 = alloca i8, i64 %34, align 16, !dbg !18481
  store ptr %35, ptr %10, align 8, !dbg !18481
  %36 = load ptr, ptr %10, align 8, !dbg !18481
  %37 = load i64, ptr %9, align 8, !dbg !18481
  %38 = getelementptr inbounds i8, ptr %36, i64 %37, !dbg !18481
  store i8 0, ptr %38, align 1, !dbg !18481
  %39 = load ptr, ptr %10, align 8, !dbg !18481
  %40 = load ptr, ptr %8, align 8, !dbg !18481
  %41 = load i64, ptr %9, align 8, !dbg !18481
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %39, ptr align 1 %40, i64 %41, i1 false), !dbg !18481
  store ptr %39, ptr %11, align 8, !dbg !18481
  %42 = load ptr, ptr %11, align 8, !dbg !18481
  store ptr %42, ptr %7, align 8, !dbg !18478
  call void @llvm.dbg.declare(metadata ptr %12, metadata !18484, metadata !DIExpression()), !dbg !18485
  %43 = load ptr, ptr %4, align 8, !dbg !18486
  %44 = load ptr, ptr %7, align 8, !dbg !18487
  %45 = call ptr @symtab_lookup(ptr noundef %43, ptr noundef %44), !dbg !18488
  store ptr %45, ptr %12, align 8, !dbg !18485
  %46 = load ptr, ptr %12, align 8, !dbg !18489
  %47 = icmp ne ptr %46, null, !dbg !18489
  br i1 %47, label %60, label %48, !dbg !18491

48:                                               ; preds = %18
  %49 = load ptr, ptr %5, align 8, !dbg !18492
  %50 = load ptr, ptr %5, align 8, !dbg !18494
  %51 = getelementptr inbounds %struct.item, ptr %50, i32 0, i32 1, !dbg !18495
  %52 = getelementptr inbounds %struct.lwan_value_t_, ptr %51, i32 0, i32 1, !dbg !18496
  %53 = load i64, ptr %52, align 8, !dbg !18496
  %54 = trunc i64 %53 to i32, !dbg !18497
  %55 = load ptr, ptr %5, align 8, !dbg !18498
  %56 = getelementptr inbounds %struct.item, ptr %55, i32 0, i32 1, !dbg !18499
  %57 = getelementptr inbounds %struct.lwan_value_t_, ptr %56, i32 0, i32 0, !dbg !18500
  %58 = load ptr, ptr %57, align 8, !dbg !18500
  %59 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %49, ptr noundef @.str.11.358, i32 noundef %54, ptr noundef %58), !dbg !18501
  store ptr %59, ptr %3, align 8, !dbg !18502
  br label %98, !dbg !18502

60:                                               ; preds = %18
  %61 = load ptr, ptr %4, align 8, !dbg !18503
  %62 = call zeroext i1 @parser_next_is(ptr noundef %61, i32 noundef 5), !dbg !18505
  br i1 %62, label %66, label %63, !dbg !18506

63:                                               ; preds = %60
  %64 = load ptr, ptr %5, align 8, !dbg !18507
  %65 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %64, ptr noundef @.str.14.364), !dbg !18508
  store ptr %65, ptr %3, align 8, !dbg !18509
  br label %98, !dbg !18509

66:                                               ; preds = %60
  call void @llvm.dbg.declare(metadata ptr %13, metadata !18510, metadata !DIExpression()), !dbg !18511
  %67 = load ptr, ptr %4, align 8, !dbg !18512
  %68 = load ptr, ptr %12, align 8, !dbg !18513
  %69 = getelementptr inbounds %struct.lwan_var_descriptor_t_, ptr %68, i32 0, i32 5, !dbg !18514
  %70 = load ptr, ptr %69, align 8, !dbg !18514
  %71 = call i32 @symtab_push(ptr noundef %67, ptr noundef %70), !dbg !18515
  store i32 %71, ptr %13, align 4, !dbg !18511
  %72 = load i32, ptr %13, align 4, !dbg !18516
  %73 = icmp slt i32 %72, 0, !dbg !18518
  br i1 %73, label %74, label %84, !dbg !18519

74:                                               ; preds = %66
  %75 = load i32, ptr %13, align 4, !dbg !18520
  %76 = icmp eq i32 %75, -19, !dbg !18523
  br i1 %76, label %77, label %81, !dbg !18524

77:                                               ; preds = %74
  %78 = load ptr, ptr %5, align 8, !dbg !18525
  %79 = load ptr, ptr %7, align 8, !dbg !18526
  %80 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %78, ptr noundef @.str.15.365, ptr noundef %79), !dbg !18527
  store ptr %80, ptr %3, align 8, !dbg !18528
  br label %98, !dbg !18528

81:                                               ; preds = %74
  %82 = load ptr, ptr %5, align 8, !dbg !18529
  %83 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %82, ptr noundef @.str.16.366), !dbg !18530
  store ptr %83, ptr %3, align 8, !dbg !18531
  br label %98, !dbg !18531

84:                                               ; preds = %66
  %85 = load ptr, ptr %4, align 8, !dbg !18532
  %86 = load i32, ptr %6, align 4, !dbg !18533
  %87 = or i32 %86, 4, !dbg !18534
  %88 = load ptr, ptr %12, align 8, !dbg !18535
  call void @emit_chunk(ptr noundef %85, i32 noundef 5, i32 noundef %87, ptr noundef %88), !dbg !18536
  %89 = load ptr, ptr %4, align 8, !dbg !18537
  %90 = load ptr, ptr %5, align 8, !dbg !18538
  call void @parser_push_item(ptr noundef %89, ptr noundef %90), !dbg !18539
  %91 = load ptr, ptr %4, align 8, !dbg !18540
  %92 = getelementptr inbounds %struct.parser, ptr %91, i32 0, i32 4, !dbg !18541
  %93 = load i32, ptr %92, align 8, !dbg !18542
  %94 = and i32 %93, -2, !dbg !18542
  store i32 %94, ptr %92, align 8, !dbg !18542
  store ptr @parser_text, ptr %3, align 8, !dbg !18543
  br label %98, !dbg !18543

95:                                               ; preds = %2
  %96 = load ptr, ptr %5, align 8, !dbg !18544
  %97 = call ptr @unexpected_lexeme(ptr noundef %96), !dbg !18545
  store ptr %97, ptr %3, align 8, !dbg !18546
  br label %98, !dbg !18546

98:                                               ; preds = %95, %84, %81, %77, %63, %48
  %99 = load ptr, ptr %3, align 8, !dbg !18547
  ret ptr %99, !dbg !18547
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @parser_negate_iter(ptr noundef %0, ptr noundef %1) #0 !dbg !18548 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !18549, metadata !DIExpression()), !dbg !18550
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !18551, metadata !DIExpression()), !dbg !18552
  %6 = load ptr, ptr %5, align 8, !dbg !18553
  %7 = getelementptr inbounds %struct.item, ptr %6, i32 0, i32 0, !dbg !18555
  %8 = load i32, ptr %7, align 8, !dbg !18555
  %9 = icmp ne i32 %8, 4, !dbg !18556
  br i1 %9, label %10, label %13, !dbg !18557

10:                                               ; preds = %2
  %11 = load ptr, ptr %5, align 8, !dbg !18558
  %12 = call ptr @unexpected_lexeme(ptr noundef %11), !dbg !18559
  store ptr %12, ptr %3, align 8, !dbg !18560
  br label %18, !dbg !18560

13:                                               ; preds = %2
  %14 = load ptr, ptr %4, align 8, !dbg !18561
  %15 = getelementptr inbounds %struct.parser, ptr %14, i32 0, i32 4, !dbg !18562
  %16 = load i32, ptr %15, align 8, !dbg !18563
  %17 = xor i32 %16, 1, !dbg !18563
  store i32 %17, ptr %15, align 8, !dbg !18563
  store ptr @parser_iter, ptr %3, align 8, !dbg !18564
  br label %18, !dbg !18564

18:                                               ; preds = %13, %10
  %19 = load ptr, ptr %3, align 8, !dbg !18565
  ret ptr %19, !dbg !18565
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @parser_slash(ptr noundef %0, ptr noundef %1) #0 !dbg !18566 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !18567, metadata !DIExpression()), !dbg !18568
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !18569, metadata !DIExpression()), !dbg !18570
  %7 = load ptr, ptr %5, align 8, !dbg !18571
  %8 = getelementptr inbounds %struct.item, ptr %7, i32 0, i32 0, !dbg !18573
  %9 = load i32, ptr %8, align 8, !dbg !18573
  %10 = icmp eq i32 %9, 2, !dbg !18574
  br i1 %10, label %11, label %41, !dbg !18575

11:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata ptr %6, metadata !18576, metadata !DIExpression()), !dbg !18578
  store ptr null, ptr %6, align 8, !dbg !18578
  %12 = load ptr, ptr %4, align 8, !dbg !18579
  %13 = getelementptr inbounds %struct.parser, ptr %12, i32 0, i32 3, !dbg !18581
  %14 = call zeroext i1 @lex_next(ptr noundef %13, ptr noundef %6), !dbg !18582
  br i1 %14, label %19, label %15, !dbg !18583

15:                                               ; preds = %11
  %16 = load ptr, ptr %5, align 8, !dbg !18584
  %17 = load ptr, ptr %6, align 8, !dbg !18585
  %18 = call ptr @unexpected_lexeme_or_lex_error(ptr noundef %16, ptr noundef %17), !dbg !18586
  store ptr %18, ptr %3, align 8, !dbg !18587
  br label %44, !dbg !18587

19:                                               ; preds = %11
  %20 = load ptr, ptr %6, align 8, !dbg !18588
  %21 = getelementptr inbounds %struct.item, ptr %20, i32 0, i32 0, !dbg !18590
  %22 = load i32, ptr %21, align 8, !dbg !18590
  %23 = icmp eq i32 %22, 5, !dbg !18591
  br i1 %23, label %24, label %28, !dbg !18592

24:                                               ; preds = %19
  %25 = load ptr, ptr %4, align 8, !dbg !18593
  %26 = load ptr, ptr %5, align 8, !dbg !18594
  %27 = call ptr @parser_end_iter(ptr noundef %25, ptr noundef %26), !dbg !18595
  store ptr %27, ptr %3, align 8, !dbg !18596
  br label %44, !dbg !18596

28:                                               ; preds = %19
  %29 = load ptr, ptr %6, align 8, !dbg !18597
  %30 = getelementptr inbounds %struct.item, ptr %29, i32 0, i32 0, !dbg !18599
  %31 = load i32, ptr %30, align 8, !dbg !18599
  %32 = icmp eq i32 %31, 8, !dbg !18600
  br i1 %32, label %33, label %37, !dbg !18601

33:                                               ; preds = %28
  %34 = load ptr, ptr %4, align 8, !dbg !18602
  %35 = load ptr, ptr %5, align 8, !dbg !18603
  %36 = call ptr @parser_end_var_not_empty(ptr noundef %34, ptr noundef %35), !dbg !18604
  store ptr %36, ptr %3, align 8, !dbg !18605
  br label %44, !dbg !18605

37:                                               ; preds = %28
  %38 = load ptr, ptr %5, align 8, !dbg !18606
  %39 = load ptr, ptr %6, align 8, !dbg !18607
  %40 = call ptr @unexpected_lexeme_or_lex_error(ptr noundef %38, ptr noundef %39), !dbg !18608
  store ptr %40, ptr %3, align 8, !dbg !18609
  br label %44, !dbg !18609

41:                                               ; preds = %2
  %42 = load ptr, ptr %5, align 8, !dbg !18610
  %43 = call ptr @unexpected_lexeme(ptr noundef %42), !dbg !18611
  store ptr %43, ptr %3, align 8, !dbg !18612
  br label %44, !dbg !18612

44:                                               ; preds = %41, %37, %33, %24, %15
  %45 = load ptr, ptr %3, align 8, !dbg !18613
  ret ptr %45, !dbg !18613
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @unexpected_lexeme_or_lex_error(ptr noundef %0, ptr noundef %1) #0 !dbg !18614 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !18617, metadata !DIExpression()), !dbg !18618
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !18619, metadata !DIExpression()), !dbg !18620
  %6 = load ptr, ptr %5, align 8, !dbg !18621
  %7 = icmp ne ptr %6, null, !dbg !18621
  br i1 %7, label %8, label %21, !dbg !18623

8:                                                ; preds = %2
  %9 = load ptr, ptr %5, align 8, !dbg !18624
  %10 = getelementptr inbounds %struct.item, ptr %9, i32 0, i32 0, !dbg !18625
  %11 = load i32, ptr %10, align 8, !dbg !18625
  %12 = icmp eq i32 %11, 0, !dbg !18626
  br i1 %12, label %18, label %13, !dbg !18627

13:                                               ; preds = %8
  %14 = load ptr, ptr %5, align 8, !dbg !18628
  %15 = getelementptr inbounds %struct.item, ptr %14, i32 0, i32 0, !dbg !18629
  %16 = load i32, ptr %15, align 8, !dbg !18629
  %17 = icmp eq i32 %16, 1, !dbg !18630
  br i1 %17, label %18, label %21, !dbg !18631

18:                                               ; preds = %13, %8
  %19 = load ptr, ptr %4, align 8, !dbg !18632
  %20 = load ptr, ptr %5, align 8, !dbg !18634
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %19, ptr align 8 %20, i64 24, i1 false), !dbg !18635
  store ptr null, ptr %3, align 8, !dbg !18636
  br label %24, !dbg !18636

21:                                               ; preds = %13, %2
  %22 = load ptr, ptr %4, align 8, !dbg !18637
  %23 = call ptr @unexpected_lexeme(ptr noundef %22), !dbg !18638
  store ptr %23, ptr %3, align 8, !dbg !18639
  br label %24, !dbg !18639

24:                                               ; preds = %21, %18
  %25 = load ptr, ptr %3, align 8, !dbg !18640
  ret ptr %25, !dbg !18640
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @parser_end_iter(ptr noundef %0, ptr noundef %1) #0 !dbg !18641 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  %9 = alloca ptr, align 8
  %10 = alloca i64, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !18642, metadata !DIExpression()), !dbg !18643
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !18644, metadata !DIExpression()), !dbg !18645
  call void @llvm.dbg.declare(metadata ptr %6, metadata !18646, metadata !DIExpression()), !dbg !18647
  call void @llvm.dbg.declare(metadata ptr %7, metadata !18648, metadata !DIExpression()), !dbg !18649
  call void @llvm.dbg.declare(metadata ptr %8, metadata !18650, metadata !DIExpression()), !dbg !18651
  %13 = load ptr, ptr %4, align 8, !dbg !18652
  %14 = load ptr, ptr %5, align 8, !dbg !18654
  %15 = call zeroext i1 @parser_stack_top_matches(ptr noundef %13, ptr noundef %14, i32 noundef 2), !dbg !18655
  br i1 %15, label %17, label %16, !dbg !18656

16:                                               ; preds = %2
  store ptr null, ptr %3, align 8, !dbg !18657
  br label %110, !dbg !18657

17:                                               ; preds = %2
  %18 = load ptr, ptr %4, align 8, !dbg !18658
  call void @llvm.dbg.declare(metadata ptr %9, metadata !18659, metadata !DIExpression()), !dbg !18661
  %19 = load ptr, ptr %5, align 8, !dbg !18661
  %20 = getelementptr inbounds %struct.item, ptr %19, i32 0, i32 1, !dbg !18661
  %21 = getelementptr inbounds %struct.lwan_value_t_, ptr %20, i32 0, i32 0, !dbg !18661
  %22 = load ptr, ptr %21, align 8, !dbg !18661
  store ptr %22, ptr %9, align 8, !dbg !18661
  call void @llvm.dbg.declare(metadata ptr %10, metadata !18662, metadata !DIExpression()), !dbg !18661
  %23 = load ptr, ptr %9, align 8, !dbg !18661
  %24 = load ptr, ptr %5, align 8, !dbg !18661
  %25 = getelementptr inbounds %struct.item, ptr %24, i32 0, i32 1, !dbg !18661
  %26 = getelementptr inbounds %struct.lwan_value_t_, ptr %25, i32 0, i32 1, !dbg !18661
  %27 = load i64, ptr %26, align 8, !dbg !18661
  %28 = call i64 @strnlen(ptr noundef %23, i64 noundef %27) #20, !dbg !18661
  store i64 %28, ptr %10, align 8, !dbg !18661
  call void @llvm.dbg.declare(metadata ptr %11, metadata !18663, metadata !DIExpression()), !dbg !18661
  %29 = load i64, ptr %10, align 8, !dbg !18661
  %30 = add i64 %29, 1, !dbg !18661
  %31 = alloca i8, i64 %30, align 16, !dbg !18661
  store ptr %31, ptr %11, align 8, !dbg !18661
  %32 = load ptr, ptr %11, align 8, !dbg !18661
  %33 = load i64, ptr %10, align 8, !dbg !18661
  %34 = getelementptr inbounds i8, ptr %32, i64 %33, !dbg !18661
  store i8 0, ptr %34, align 1, !dbg !18661
  %35 = load ptr, ptr %11, align 8, !dbg !18661
  %36 = load ptr, ptr %9, align 8, !dbg !18661
  %37 = load i64, ptr %10, align 8, !dbg !18661
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %35, ptr align 1 %36, i64 %37, i1 false), !dbg !18661
  store ptr %35, ptr %12, align 8, !dbg !18661
  %38 = load ptr, ptr %12, align 8, !dbg !18661
  %39 = call ptr @symtab_lookup(ptr noundef %18, ptr noundef %38), !dbg !18664
  store ptr %39, ptr %7, align 8, !dbg !18665
  %40 = load ptr, ptr %7, align 8, !dbg !18666
  %41 = icmp ne ptr %40, null, !dbg !18666
  br i1 %41, label %54, label %42, !dbg !18668

42:                                               ; preds = %17
  %43 = load ptr, ptr %5, align 8, !dbg !18669
  %44 = load ptr, ptr %5, align 8, !dbg !18671
  %45 = getelementptr inbounds %struct.item, ptr %44, i32 0, i32 1, !dbg !18672
  %46 = getelementptr inbounds %struct.lwan_value_t_, ptr %45, i32 0, i32 1, !dbg !18673
  %47 = load i64, ptr %46, align 8, !dbg !18673
  %48 = trunc i64 %47 to i32, !dbg !18674
  %49 = load ptr, ptr %5, align 8, !dbg !18675
  %50 = getelementptr inbounds %struct.item, ptr %49, i32 0, i32 1, !dbg !18676
  %51 = getelementptr inbounds %struct.lwan_value_t_, ptr %50, i32 0, i32 0, !dbg !18677
  %52 = load ptr, ptr %51, align 8, !dbg !18677
  %53 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %43, ptr noundef @.str.11.358, i32 noundef %48, ptr noundef %52), !dbg !18678
  store ptr %53, ptr %3, align 8, !dbg !18679
  br label %110, !dbg !18679

54:                                               ; preds = %17
  %55 = load ptr, ptr %4, align 8, !dbg !18680
  %56 = getelementptr inbounds %struct.parser, ptr %55, i32 0, i32 6, !dbg !18682
  %57 = getelementptr inbounds %struct.anon.2.79, ptr %56, i32 0, i32 1, !dbg !18683
  %58 = load i64, ptr %57, align 8, !dbg !18683
  %59 = icmp ne i64 %58, 0, !dbg !18680
  br i1 %59, label %63, label %60, !dbg !18684

60:                                               ; preds = %54
  %61 = load ptr, ptr %5, align 8, !dbg !18685
  %62 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %61, ptr noundef @.str.17.362), !dbg !18686
  store ptr %62, ptr %3, align 8, !dbg !18687
  br label %110, !dbg !18687

63:                                               ; preds = %54
  %64 = load ptr, ptr %4, align 8, !dbg !18688
  %65 = getelementptr inbounds %struct.parser, ptr %64, i32 0, i32 6, !dbg !18690
  %66 = getelementptr inbounds %struct.anon.2.79, ptr %65, i32 0, i32 1, !dbg !18691
  %67 = load i64, ptr %66, align 8, !dbg !18691
  %68 = sub nsw i64 %67, 1, !dbg !18692
  store i64 %68, ptr %8, align 8, !dbg !18693
  br label %69, !dbg !18694

69:                                               ; preds = %95, %63
  %70 = load i64, ptr %8, align 8, !dbg !18695
  %71 = icmp sge i64 %70, 0, !dbg !18697
  br i1 %71, label %72, label %98, !dbg !18698

72:                                               ; preds = %69
  %73 = load ptr, ptr %4, align 8, !dbg !18699
  %74 = getelementptr inbounds %struct.parser, ptr %73, i32 0, i32 6, !dbg !18701
  %75 = getelementptr inbounds %struct.anon.2.79, ptr %74, i32 0, i32 0, !dbg !18702
  %76 = load ptr, ptr %75, align 8, !dbg !18702
  %77 = load i64, ptr %8, align 8, !dbg !18703
  %78 = getelementptr inbounds %struct.chunk, ptr %76, i64 %77, !dbg !18699
  store ptr %78, ptr %6, align 8, !dbg !18704
  %79 = load ptr, ptr %6, align 8, !dbg !18705
  %80 = getelementptr inbounds %struct.chunk, ptr %79, i32 0, i32 0, !dbg !18707
  %81 = load i32, ptr %80, align 8, !dbg !18707
  %82 = icmp ne i32 %81, 5, !dbg !18708
  br i1 %82, label %83, label %84, !dbg !18709

83:                                               ; preds = %72
  br label %95, !dbg !18710

84:                                               ; preds = %72
  %85 = load ptr, ptr %6, align 8, !dbg !18711
  %86 = getelementptr inbounds %struct.chunk, ptr %85, i32 0, i32 1, !dbg !18713
  %87 = load ptr, ptr %86, align 8, !dbg !18713
  %88 = load ptr, ptr %7, align 8, !dbg !18714
  %89 = icmp eq ptr %87, %88, !dbg !18715
  br i1 %89, label %90, label %94, !dbg !18716

90:                                               ; preds = %84
  %91 = load ptr, ptr %4, align 8, !dbg !18717
  %92 = load ptr, ptr %6, align 8, !dbg !18719
  call void @emit_chunk(ptr noundef %91, i32 noundef 6, i32 noundef 0, ptr noundef %92), !dbg !18720
  %93 = load ptr, ptr %4, align 8, !dbg !18721
  call void @symtab_pop(ptr noundef %93), !dbg !18722
  store ptr @parser_text, ptr %3, align 8, !dbg !18723
  br label %110, !dbg !18723

94:                                               ; preds = %84
  br label %95, !dbg !18724

95:                                               ; preds = %94, %83
  %96 = load i64, ptr %8, align 8, !dbg !18725
  %97 = add nsw i64 %96, -1, !dbg !18725
  store i64 %97, ptr %8, align 8, !dbg !18725
  br label %69, !dbg !18726, !llvm.loop !18727

98:                                               ; preds = %69
  %99 = load ptr, ptr %5, align 8, !dbg !18729
  %100 = load ptr, ptr %5, align 8, !dbg !18730
  %101 = getelementptr inbounds %struct.item, ptr %100, i32 0, i32 1, !dbg !18731
  %102 = getelementptr inbounds %struct.lwan_value_t_, ptr %101, i32 0, i32 1, !dbg !18732
  %103 = load i64, ptr %102, align 8, !dbg !18732
  %104 = trunc i64 %103 to i32, !dbg !18733
  %105 = load ptr, ptr %5, align 8, !dbg !18734
  %106 = getelementptr inbounds %struct.item, ptr %105, i32 0, i32 1, !dbg !18735
  %107 = getelementptr inbounds %struct.lwan_value_t_, ptr %106, i32 0, i32 0, !dbg !18736
  %108 = load ptr, ptr %107, align 8, !dbg !18736
  %109 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %99, ptr noundef @.str.18.363, i32 noundef %104, ptr noundef %108), !dbg !18737
  store ptr %109, ptr %3, align 8, !dbg !18738
  br label %110, !dbg !18738

110:                                              ; preds = %98, %90, %60, %42, %16
  %111 = load ptr, ptr %3, align 8, !dbg !18739
  ret ptr %111, !dbg !18739
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @parser_end_var_not_empty(ptr noundef %0, ptr noundef %1) #0 !dbg !18740 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  %9 = alloca ptr, align 8
  %10 = alloca i64, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !18741, metadata !DIExpression()), !dbg !18742
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !18743, metadata !DIExpression()), !dbg !18744
  call void @llvm.dbg.declare(metadata ptr %6, metadata !18745, metadata !DIExpression()), !dbg !18746
  call void @llvm.dbg.declare(metadata ptr %7, metadata !18747, metadata !DIExpression()), !dbg !18748
  call void @llvm.dbg.declare(metadata ptr %8, metadata !18749, metadata !DIExpression()), !dbg !18750
  %13 = load ptr, ptr %4, align 8, !dbg !18751
  %14 = call zeroext i1 @parser_next_is(ptr noundef %13, i32 noundef 5), !dbg !18753
  br i1 %14, label %18, label %15, !dbg !18754

15:                                               ; preds = %2
  %16 = load ptr, ptr %5, align 8, !dbg !18755
  %17 = call ptr @unexpected_lexeme(ptr noundef %16), !dbg !18756
  store ptr %17, ptr %3, align 8, !dbg !18757
  br label %106, !dbg !18757

18:                                               ; preds = %2
  %19 = load ptr, ptr %4, align 8, !dbg !18758
  %20 = load ptr, ptr %5, align 8, !dbg !18760
  %21 = call zeroext i1 @parser_stack_top_matches(ptr noundef %19, ptr noundef %20, i32 noundef 2), !dbg !18761
  br i1 %21, label %23, label %22, !dbg !18762

22:                                               ; preds = %18
  store ptr null, ptr %3, align 8, !dbg !18763
  br label %106, !dbg !18763

23:                                               ; preds = %18
  %24 = load ptr, ptr %4, align 8, !dbg !18764
  call void @llvm.dbg.declare(metadata ptr %9, metadata !18765, metadata !DIExpression()), !dbg !18767
  %25 = load ptr, ptr %5, align 8, !dbg !18767
  %26 = getelementptr inbounds %struct.item, ptr %25, i32 0, i32 1, !dbg !18767
  %27 = getelementptr inbounds %struct.lwan_value_t_, ptr %26, i32 0, i32 0, !dbg !18767
  %28 = load ptr, ptr %27, align 8, !dbg !18767
  store ptr %28, ptr %9, align 8, !dbg !18767
  call void @llvm.dbg.declare(metadata ptr %10, metadata !18768, metadata !DIExpression()), !dbg !18767
  %29 = load ptr, ptr %9, align 8, !dbg !18767
  %30 = load ptr, ptr %5, align 8, !dbg !18767
  %31 = getelementptr inbounds %struct.item, ptr %30, i32 0, i32 1, !dbg !18767
  %32 = getelementptr inbounds %struct.lwan_value_t_, ptr %31, i32 0, i32 1, !dbg !18767
  %33 = load i64, ptr %32, align 8, !dbg !18767
  %34 = call i64 @strnlen(ptr noundef %29, i64 noundef %33) #20, !dbg !18767
  store i64 %34, ptr %10, align 8, !dbg !18767
  call void @llvm.dbg.declare(metadata ptr %11, metadata !18769, metadata !DIExpression()), !dbg !18767
  %35 = load i64, ptr %10, align 8, !dbg !18767
  %36 = add i64 %35, 1, !dbg !18767
  %37 = alloca i8, i64 %36, align 16, !dbg !18767
  store ptr %37, ptr %11, align 8, !dbg !18767
  %38 = load ptr, ptr %11, align 8, !dbg !18767
  %39 = load i64, ptr %10, align 8, !dbg !18767
  %40 = getelementptr inbounds i8, ptr %38, i64 %39, !dbg !18767
  store i8 0, ptr %40, align 1, !dbg !18767
  %41 = load ptr, ptr %11, align 8, !dbg !18767
  %42 = load ptr, ptr %9, align 8, !dbg !18767
  %43 = load i64, ptr %10, align 8, !dbg !18767
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %41, ptr align 1 %42, i64 %43, i1 false), !dbg !18767
  store ptr %41, ptr %12, align 8, !dbg !18767
  %44 = load ptr, ptr %12, align 8, !dbg !18767
  %45 = call ptr @symtab_lookup(ptr noundef %24, ptr noundef %44), !dbg !18770
  store ptr %45, ptr %7, align 8, !dbg !18771
  %46 = load ptr, ptr %7, align 8, !dbg !18772
  %47 = icmp ne ptr %46, null, !dbg !18772
  br i1 %47, label %60, label %48, !dbg !18774

48:                                               ; preds = %23
  %49 = load ptr, ptr %5, align 8, !dbg !18775
  %50 = load ptr, ptr %5, align 8, !dbg !18777
  %51 = getelementptr inbounds %struct.item, ptr %50, i32 0, i32 1, !dbg !18778
  %52 = getelementptr inbounds %struct.lwan_value_t_, ptr %51, i32 0, i32 1, !dbg !18779
  %53 = load i64, ptr %52, align 8, !dbg !18779
  %54 = trunc i64 %53 to i32, !dbg !18780
  %55 = load ptr, ptr %5, align 8, !dbg !18781
  %56 = getelementptr inbounds %struct.item, ptr %55, i32 0, i32 1, !dbg !18782
  %57 = getelementptr inbounds %struct.lwan_value_t_, ptr %56, i32 0, i32 0, !dbg !18783
  %58 = load ptr, ptr %57, align 8, !dbg !18783
  %59 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %49, ptr noundef @.str.11.358, i32 noundef %54, ptr noundef %58), !dbg !18784
  store ptr %59, ptr %3, align 8, !dbg !18785
  br label %106, !dbg !18785

60:                                               ; preds = %23
  %61 = load ptr, ptr %4, align 8, !dbg !18786
  %62 = getelementptr inbounds %struct.parser, ptr %61, i32 0, i32 6, !dbg !18788
  %63 = getelementptr inbounds %struct.anon.2.79, ptr %62, i32 0, i32 1, !dbg !18789
  %64 = load i64, ptr %63, align 8, !dbg !18789
  %65 = sub nsw i64 %64, 1, !dbg !18790
  store i64 %65, ptr %8, align 8, !dbg !18791
  br label %66, !dbg !18792

66:                                               ; preds = %91, %60
  %67 = load i64, ptr %8, align 8, !dbg !18793
  %68 = icmp sge i64 %67, 0, !dbg !18795
  br i1 %68, label %69, label %94, !dbg !18796

69:                                               ; preds = %66
  %70 = load ptr, ptr %4, align 8, !dbg !18797
  %71 = getelementptr inbounds %struct.parser, ptr %70, i32 0, i32 6, !dbg !18799
  %72 = getelementptr inbounds %struct.anon.2.79, ptr %71, i32 0, i32 0, !dbg !18800
  %73 = load ptr, ptr %72, align 8, !dbg !18800
  %74 = load i64, ptr %8, align 8, !dbg !18801
  %75 = getelementptr inbounds %struct.chunk, ptr %73, i64 %74, !dbg !18797
  store ptr %75, ptr %6, align 8, !dbg !18802
  %76 = load ptr, ptr %6, align 8, !dbg !18803
  %77 = getelementptr inbounds %struct.chunk, ptr %76, i32 0, i32 0, !dbg !18805
  %78 = load i32, ptr %77, align 8, !dbg !18805
  %79 = icmp ne i32 %78, 7, !dbg !18806
  br i1 %79, label %80, label %81, !dbg !18807

80:                                               ; preds = %69
  br label %91, !dbg !18808

81:                                               ; preds = %69
  %82 = load ptr, ptr %6, align 8, !dbg !18809
  %83 = getelementptr inbounds %struct.chunk, ptr %82, i32 0, i32 1, !dbg !18811
  %84 = load ptr, ptr %83, align 8, !dbg !18811
  %85 = load ptr, ptr %7, align 8, !dbg !18812
  %86 = icmp eq ptr %84, %85, !dbg !18813
  br i1 %86, label %87, label %90, !dbg !18814

87:                                               ; preds = %81
  %88 = load ptr, ptr %4, align 8, !dbg !18815
  %89 = load ptr, ptr %7, align 8, !dbg !18817
  call void @emit_chunk(ptr noundef %88, i32 noundef 8, i32 noundef 0, ptr noundef %89), !dbg !18818
  store ptr @parser_text, ptr %3, align 8, !dbg !18819
  br label %106, !dbg !18819

90:                                               ; preds = %81
  br label %91, !dbg !18820

91:                                               ; preds = %90, %80
  %92 = load i64, ptr %8, align 8, !dbg !18821
  %93 = add nsw i64 %92, -1, !dbg !18821
  store i64 %93, ptr %8, align 8, !dbg !18821
  br label %66, !dbg !18822, !llvm.loop !18823

94:                                               ; preds = %66
  %95 = load ptr, ptr %5, align 8, !dbg !18825
  %96 = load ptr, ptr %5, align 8, !dbg !18826
  %97 = getelementptr inbounds %struct.item, ptr %96, i32 0, i32 1, !dbg !18827
  %98 = getelementptr inbounds %struct.lwan_value_t_, ptr %97, i32 0, i32 1, !dbg !18828
  %99 = load i64, ptr %98, align 8, !dbg !18828
  %100 = trunc i64 %99 to i32, !dbg !18829
  %101 = load ptr, ptr %5, align 8, !dbg !18830
  %102 = getelementptr inbounds %struct.item, ptr %101, i32 0, i32 1, !dbg !18831
  %103 = getelementptr inbounds %struct.lwan_value_t_, ptr %102, i32 0, i32 0, !dbg !18832
  %104 = load ptr, ptr %103, align 8, !dbg !18832
  %105 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %95, ptr noundef @.str.35.359, i32 noundef %100, ptr noundef %104), !dbg !18833
  store ptr %105, ptr %3, align 8, !dbg !18834
  br label %106, !dbg !18834

106:                                              ; preds = %94, %87, %48, %22, %15
  %107 = load ptr, ptr %3, align 8, !dbg !18835
  ret ptr %107, !dbg !18835
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @parser_next_is(ptr noundef %0, i32 noundef %1) #0 !dbg !18836 {
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !18839, metadata !DIExpression()), !dbg !18840
  store i32 %1, ptr %4, align 4
  call void @llvm.dbg.declare(metadata ptr %4, metadata !18841, metadata !DIExpression()), !dbg !18842
  call void @llvm.dbg.declare(metadata ptr %5, metadata !18843, metadata !DIExpression()), !dbg !18844
  %6 = load ptr, ptr %3, align 8, !dbg !18845
  %7 = getelementptr inbounds %struct.parser, ptr %6, i32 0, i32 3, !dbg !18846
  %8 = call zeroext i1 @lex_next(ptr noundef %7, ptr noundef %5), !dbg !18847
  br i1 %8, label %9, label %16, !dbg !18847

9:                                                ; preds = %2
  %10 = load ptr, ptr %5, align 8, !dbg !18848
  %11 = getelementptr inbounds %struct.item, ptr %10, i32 0, i32 0, !dbg !18849
  %12 = load i32, ptr %11, align 8, !dbg !18849
  %13 = load i32, ptr %4, align 4, !dbg !18850
  %14 = icmp eq i32 %12, %13, !dbg !18851
  %15 = zext i1 %14 to i32, !dbg !18851
  br label %17, !dbg !18847

16:                                               ; preds = %2
  br label %17, !dbg !18847

17:                                               ; preds = %16, %9
  %18 = phi i32 [ %15, %9 ], [ 0, %16 ], !dbg !18847
  %19 = icmp ne i32 %18, 0, !dbg !18847
  ret i1 %19, !dbg !18852
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @parser_stack_top_matches(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 !dbg !18853 {
  %4 = alloca i1, align 1
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca i8, align 1
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !18856, metadata !DIExpression()), !dbg !18857
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !18858, metadata !DIExpression()), !dbg !18859
  store i32 %2, ptr %7, align 4
  call void @llvm.dbg.declare(metadata ptr %7, metadata !18860, metadata !DIExpression()), !dbg !18861
  %10 = load ptr, ptr %5, align 8, !dbg !18862
  %11 = getelementptr inbounds %struct.parser, ptr %10, i32 0, i32 5, !dbg !18864
  %12 = call zeroext i1 @list_empty.322(ptr noundef %11), !dbg !18865
  br i1 %12, label %13, label %25, !dbg !18866

13:                                               ; preds = %3
  %14 = load ptr, ptr %6, align 8, !dbg !18867
  %15 = load ptr, ptr %6, align 8, !dbg !18869
  %16 = getelementptr inbounds %struct.item, ptr %15, i32 0, i32 1, !dbg !18870
  %17 = getelementptr inbounds %struct.lwan_value_t_, ptr %16, i32 0, i32 1, !dbg !18871
  %18 = load i64, ptr %17, align 8, !dbg !18871
  %19 = trunc i64 %18 to i32, !dbg !18872
  %20 = load ptr, ptr %6, align 8, !dbg !18873
  %21 = getelementptr inbounds %struct.item, ptr %20, i32 0, i32 1, !dbg !18874
  %22 = getelementptr inbounds %struct.lwan_value_t_, ptr %21, i32 0, i32 0, !dbg !18875
  %23 = load ptr, ptr %22, align 8, !dbg !18875
  %24 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %14, ptr noundef @.str.19.360, i32 noundef %19, ptr noundef %23), !dbg !18876
  store i1 false, ptr %4, align 1, !dbg !18877
  br label %104, !dbg !18877

25:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata ptr %8, metadata !18878, metadata !DIExpression()), !dbg !18879
  %26 = load ptr, ptr %5, align 8, !dbg !18880
  %27 = getelementptr inbounds %struct.parser, ptr %26, i32 0, i32 5, !dbg !18881
  %28 = getelementptr inbounds %struct.list_head, ptr %27, i32 0, i32 0, !dbg !18882
  %29 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %28, i32 0, i32 0, !dbg !18883
  %30 = load ptr, ptr %29, align 8, !dbg !18883
  store ptr %30, ptr %8, align 8, !dbg !18879
  call void @llvm.dbg.declare(metadata ptr %9, metadata !18884, metadata !DIExpression()), !dbg !18885
  %31 = load ptr, ptr %8, align 8, !dbg !18886
  %32 = getelementptr inbounds %struct.stacked_item, ptr %31, i32 0, i32 1, !dbg !18887
  %33 = getelementptr inbounds %struct.item, ptr %32, i32 0, i32 0, !dbg !18888
  %34 = load i32, ptr %33, align 8, !dbg !18888
  %35 = load i32, ptr %7, align 4, !dbg !18889
  %36 = icmp eq i32 %34, %35, !dbg !18890
  br i1 %36, label %37, label %65, !dbg !18891

37:                                               ; preds = %25
  %38 = load ptr, ptr %6, align 8, !dbg !18892
  %39 = getelementptr inbounds %struct.item, ptr %38, i32 0, i32 1, !dbg !18893
  %40 = getelementptr inbounds %struct.lwan_value_t_, ptr %39, i32 0, i32 1, !dbg !18894
  %41 = load i64, ptr %40, align 8, !dbg !18894
  %42 = load ptr, ptr %8, align 8, !dbg !18895
  %43 = getelementptr inbounds %struct.stacked_item, ptr %42, i32 0, i32 1, !dbg !18896
  %44 = getelementptr inbounds %struct.item, ptr %43, i32 0, i32 1, !dbg !18897
  %45 = getelementptr inbounds %struct.lwan_value_t_, ptr %44, i32 0, i32 1, !dbg !18898
  %46 = load i64, ptr %45, align 8, !dbg !18898
  %47 = icmp eq i64 %41, %46, !dbg !18899
  br i1 %47, label %48, label %65, !dbg !18900

48:                                               ; preds = %37
  %49 = load ptr, ptr %8, align 8, !dbg !18901
  %50 = getelementptr inbounds %struct.stacked_item, ptr %49, i32 0, i32 1, !dbg !18902
  %51 = getelementptr inbounds %struct.item, ptr %50, i32 0, i32 1, !dbg !18903
  %52 = getelementptr inbounds %struct.lwan_value_t_, ptr %51, i32 0, i32 0, !dbg !18904
  %53 = load ptr, ptr %52, align 8, !dbg !18904
  %54 = load ptr, ptr %6, align 8, !dbg !18905
  %55 = getelementptr inbounds %struct.item, ptr %54, i32 0, i32 1, !dbg !18906
  %56 = getelementptr inbounds %struct.lwan_value_t_, ptr %55, i32 0, i32 0, !dbg !18907
  %57 = load ptr, ptr %56, align 8, !dbg !18907
  %58 = load ptr, ptr %6, align 8, !dbg !18908
  %59 = getelementptr inbounds %struct.item, ptr %58, i32 0, i32 1, !dbg !18909
  %60 = getelementptr inbounds %struct.lwan_value_t_, ptr %59, i32 0, i32 1, !dbg !18910
  %61 = load i64, ptr %60, align 8, !dbg !18910
  %62 = call i32 @memcmp(ptr noundef %53, ptr noundef %57, i64 noundef %61) #20, !dbg !18911
  %63 = icmp ne i32 %62, 0, !dbg !18912
  %64 = xor i1 %63, true, !dbg !18912
  br label %65

65:                                               ; preds = %48, %37, %25
  %66 = phi i1 [ false, %37 ], [ false, %25 ], [ %64, %48 ], !dbg !18913
  %67 = zext i1 %66 to i8, !dbg !18885
  store i8 %67, ptr %9, align 1, !dbg !18885
  %68 = load i8, ptr %9, align 1, !dbg !18914
  %69 = trunc i8 %68 to i1, !dbg !18914
  br i1 %69, label %70, label %74, !dbg !18916

70:                                               ; preds = %65
  %71 = load ptr, ptr %8, align 8, !dbg !18917
  %72 = getelementptr inbounds %struct.stacked_item, ptr %71, i32 0, i32 0, !dbg !18919
  call void @list_del.326(ptr noundef %72), !dbg !18920
  %73 = load ptr, ptr %8, align 8, !dbg !18921
  call void @free(ptr noundef %73) #17, !dbg !18922
  store i1 true, ptr %4, align 1, !dbg !18923
  br label %104, !dbg !18923

74:                                               ; preds = %65
  %75 = load ptr, ptr %6, align 8, !dbg !18924
  %76 = load ptr, ptr %8, align 8, !dbg !18925
  %77 = getelementptr inbounds %struct.stacked_item, ptr %76, i32 0, i32 1, !dbg !18926
  %78 = getelementptr inbounds %struct.item, ptr %77, i32 0, i32 0, !dbg !18927
  %79 = load i32, ptr %78, align 8, !dbg !18927
  %80 = zext i32 %79 to i64, !dbg !18928
  %81 = getelementptr inbounds [13 x ptr], ptr @item_type_str, i64 0, i64 %80, !dbg !18928
  %82 = load ptr, ptr %81, align 8, !dbg !18928
  %83 = load ptr, ptr %8, align 8, !dbg !18929
  %84 = getelementptr inbounds %struct.stacked_item, ptr %83, i32 0, i32 1, !dbg !18930
  %85 = getelementptr inbounds %struct.item, ptr %84, i32 0, i32 1, !dbg !18931
  %86 = getelementptr inbounds %struct.lwan_value_t_, ptr %85, i32 0, i32 1, !dbg !18932
  %87 = load i64, ptr %86, align 8, !dbg !18932
  %88 = trunc i64 %87 to i32, !dbg !18933
  %89 = load ptr, ptr %8, align 8, !dbg !18934
  %90 = getelementptr inbounds %struct.stacked_item, ptr %89, i32 0, i32 1, !dbg !18935
  %91 = getelementptr inbounds %struct.item, ptr %90, i32 0, i32 1, !dbg !18936
  %92 = getelementptr inbounds %struct.lwan_value_t_, ptr %91, i32 0, i32 0, !dbg !18937
  %93 = load ptr, ptr %92, align 8, !dbg !18937
  %94 = load ptr, ptr %6, align 8, !dbg !18938
  %95 = getelementptr inbounds %struct.item, ptr %94, i32 0, i32 1, !dbg !18939
  %96 = getelementptr inbounds %struct.lwan_value_t_, ptr %95, i32 0, i32 1, !dbg !18940
  %97 = load i64, ptr %96, align 8, !dbg !18940
  %98 = trunc i64 %97 to i32, !dbg !18941
  %99 = load ptr, ptr %6, align 8, !dbg !18942
  %100 = getelementptr inbounds %struct.item, ptr %99, i32 0, i32 1, !dbg !18943
  %101 = getelementptr inbounds %struct.lwan_value_t_, ptr %100, i32 0, i32 0, !dbg !18944
  %102 = load ptr, ptr %101, align 8, !dbg !18944
  %103 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %75, ptr noundef @.str.20.361, ptr noundef %82, i32 noundef %88, ptr noundef %93, i32 noundef %98, ptr noundef %102), !dbg !18945
  store i1 false, ptr %4, align 1, !dbg !18946
  br label %104, !dbg !18946

104:                                              ; preds = %74, %70, %13
  %105 = load i1, ptr %4, align 1, !dbg !18947
  ret i1 %105, !dbg !18947
}

; Function Attrs: nounwind willreturn memory(read)
declare i64 @strnlen(ptr noundef, i64 noundef) #8

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @symtab_lookup(ptr noundef %0, ptr noundef %1) #0 !dbg !18948 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !18951, metadata !DIExpression()), !dbg !18952
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !18953, metadata !DIExpression()), !dbg !18954
  call void @llvm.dbg.declare(metadata ptr %6, metadata !18955, metadata !DIExpression()), !dbg !18957
  %8 = load ptr, ptr %4, align 8, !dbg !18958
  %9 = getelementptr inbounds %struct.parser, ptr %8, i32 0, i32 2, !dbg !18959
  %10 = load ptr, ptr %9, align 8, !dbg !18959
  store ptr %10, ptr %6, align 8, !dbg !18957
  br label %11, !dbg !18960

11:                                               ; preds = %25, %2
  %12 = load ptr, ptr %6, align 8, !dbg !18961
  %13 = icmp ne ptr %12, null, !dbg !18963
  br i1 %13, label %14, label %29, !dbg !18963

14:                                               ; preds = %11
  call void @llvm.dbg.declare(metadata ptr %7, metadata !18964, metadata !DIExpression()), !dbg !18966
  %15 = load ptr, ptr %6, align 8, !dbg !18967
  %16 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %15, i32 0, i32 0, !dbg !18968
  %17 = load ptr, ptr %16, align 8, !dbg !18968
  %18 = load ptr, ptr %5, align 8, !dbg !18969
  %19 = call ptr @hash_find(ptr noundef %17, ptr noundef %18), !dbg !18970
  store ptr %19, ptr %7, align 8, !dbg !18966
  %20 = load ptr, ptr %7, align 8, !dbg !18971
  %21 = icmp ne ptr %20, null, !dbg !18971
  br i1 %21, label %22, label %24, !dbg !18973

22:                                               ; preds = %14
  %23 = load ptr, ptr %7, align 8, !dbg !18974
  store ptr %23, ptr %3, align 8, !dbg !18975
  br label %30, !dbg !18975

24:                                               ; preds = %14
  br label %25, !dbg !18976

25:                                               ; preds = %24
  %26 = load ptr, ptr %6, align 8, !dbg !18977
  %27 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %26, i32 0, i32 1, !dbg !18978
  %28 = load ptr, ptr %27, align 8, !dbg !18978
  store ptr %28, ptr %6, align 8, !dbg !18979
  br label %11, !dbg !18980, !llvm.loop !18981

29:                                               ; preds = %11
  store ptr null, ptr %3, align 8, !dbg !18983
  br label %30, !dbg !18983

30:                                               ; preds = %29, %22
  %31 = load ptr, ptr %3, align 8, !dbg !18984
  ret ptr %31, !dbg !18984
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @parser_push_item(ptr noundef %0, ptr noundef %1) #0 !dbg !18985 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !18988, metadata !DIExpression()), !dbg !18989
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !18990, metadata !DIExpression()), !dbg !18991
  call void @llvm.dbg.declare(metadata ptr %5, metadata !18992, metadata !DIExpression()), !dbg !18993
  %6 = call noalias ptr @malloc(i64 noundef 40) #18, !dbg !18994
  store ptr %6, ptr %5, align 8, !dbg !18993
  %7 = load ptr, ptr %5, align 8, !dbg !18995
  %8 = icmp ne ptr %7, null, !dbg !18995
  br i1 %8, label %10, label %9, !dbg !18997

9:                                                ; preds = %2
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.7.320, i32 noundef 504, ptr noundef @__FUNCTION__.parser_push_item, ptr noundef @.str.12.367) #24, !dbg !18998
  unreachable, !dbg !18998

10:                                               ; preds = %2
  %11 = load ptr, ptr %5, align 8, !dbg !18999
  %12 = getelementptr inbounds %struct.stacked_item, ptr %11, i32 0, i32 1, !dbg !19000
  %13 = load ptr, ptr %4, align 8, !dbg !19001
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %13, i64 24, i1 false), !dbg !19002
  %14 = load ptr, ptr %3, align 8, !dbg !19003
  %15 = getelementptr inbounds %struct.parser, ptr %14, i32 0, i32 5, !dbg !19004
  %16 = load ptr, ptr %5, align 8, !dbg !19005
  %17 = getelementptr inbounds %struct.stacked_item, ptr %16, i32 0, i32 0, !dbg !19006
  call void @list_add.368(ptr noundef %15, ptr noundef %17), !dbg !19007
  ret void, !dbg !19008
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @list_add.368(ptr noundef %0, ptr noundef %1) #0 !dbg !19009 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !19012, metadata !DIExpression()), !dbg !19013
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !19014, metadata !DIExpression()), !dbg !19015
  %5 = load ptr, ptr %3, align 8, !dbg !19016
  %6 = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 0, !dbg !19017
  %7 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %6, i32 0, i32 0, !dbg !19018
  %8 = load ptr, ptr %7, align 8, !dbg !19018
  %9 = load ptr, ptr %4, align 8, !dbg !19019
  %10 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %9, i32 0, i32 0, !dbg !19020
  store ptr %8, ptr %10, align 8, !dbg !19021
  %11 = load ptr, ptr %3, align 8, !dbg !19022
  %12 = getelementptr inbounds %struct.list_head, ptr %11, i32 0, i32 0, !dbg !19023
  %13 = load ptr, ptr %4, align 8, !dbg !19024
  %14 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %13, i32 0, i32 1, !dbg !19025
  store ptr %12, ptr %14, align 8, !dbg !19026
  %15 = load ptr, ptr %4, align 8, !dbg !19027
  %16 = load ptr, ptr %3, align 8, !dbg !19028
  %17 = getelementptr inbounds %struct.list_head, ptr %16, i32 0, i32 0, !dbg !19029
  %18 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %17, i32 0, i32 0, !dbg !19030
  %19 = load ptr, ptr %18, align 8, !dbg !19030
  %20 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %19, i32 0, i32 1, !dbg !19031
  store ptr %15, ptr %20, align 8, !dbg !19032
  %21 = load ptr, ptr %4, align 8, !dbg !19033
  %22 = load ptr, ptr %3, align 8, !dbg !19034
  %23 = getelementptr inbounds %struct.list_head, ptr %22, i32 0, i32 0, !dbg !19035
  %24 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %23, i32 0, i32 0, !dbg !19036
  store ptr %21, ptr %24, align 8, !dbg !19037
  %25 = load ptr, ptr %3, align 8, !dbg !19038
  ret void, !dbg !19039
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @lwan_tpl_compile_file(ptr noundef %0, ptr noundef %1) #0 !dbg !19040 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.stat, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !19041, metadata !DIExpression()), !dbg !19042
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !19043, metadata !DIExpression()), !dbg !19044
  call void @llvm.dbg.declare(metadata ptr %5, metadata !19045, metadata !DIExpression()), !dbg !19046
  call void @llvm.dbg.declare(metadata ptr %6, metadata !19047, metadata !DIExpression()), !dbg !19069
  call void @llvm.dbg.declare(metadata ptr %7, metadata !19070, metadata !DIExpression()), !dbg !19071
  call void @llvm.dbg.declare(metadata ptr %8, metadata !19072, metadata !DIExpression()), !dbg !19073
  store ptr null, ptr %8, align 8, !dbg !19073
  %9 = load ptr, ptr %3, align 8, !dbg !19074
  %10 = call i32 (ptr, i32, ...) @open(ptr noundef %9, i32 noundef 524288), !dbg !19075
  store i32 %10, ptr %5, align 4, !dbg !19076
  %11 = load i32, ptr %5, align 4, !dbg !19077
  %12 = icmp slt i32 %11, 0, !dbg !19079
  br i1 %12, label %13, label %14, !dbg !19080

13:                                               ; preds = %2
  br label %41, !dbg !19081

14:                                               ; preds = %2
  %15 = load i32, ptr %5, align 4, !dbg !19082
  %16 = call i32 @fstat(i32 noundef %15, ptr noundef %6) #17, !dbg !19084
  %17 = icmp slt i32 %16, 0, !dbg !19085
  br i1 %17, label %18, label %19, !dbg !19086

18:                                               ; preds = %14
  br label %38, !dbg !19087

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.stat, ptr %6, i32 0, i32 8, !dbg !19088
  %21 = load i64, ptr %20, align 8, !dbg !19088
  %22 = load i32, ptr %5, align 4, !dbg !19089
  %23 = call ptr @mmap(ptr noundef null, i64 noundef %21, i32 noundef 1, i32 noundef 1, i32 noundef %22, i64 noundef 0) #17, !dbg !19090
  store ptr %23, ptr %7, align 8, !dbg !19091
  %24 = load ptr, ptr %7, align 8, !dbg !19092
  %25 = icmp eq ptr %24, inttoptr (i64 -1 to ptr), !dbg !19094
  br i1 %25, label %26, label %27, !dbg !19095

26:                                               ; preds = %19
  br label %38, !dbg !19096

27:                                               ; preds = %19
  %28 = load ptr, ptr %7, align 8, !dbg !19097
  %29 = load ptr, ptr %4, align 8, !dbg !19098
  %30 = call ptr @lwan_tpl_compile_string(ptr noundef %28, ptr noundef %29), !dbg !19099
  store ptr %30, ptr %8, align 8, !dbg !19100
  %31 = load ptr, ptr %7, align 8, !dbg !19101
  %32 = getelementptr inbounds %struct.stat, ptr %6, i32 0, i32 8, !dbg !19103
  %33 = load i64, ptr %32, align 8, !dbg !19103
  %34 = call i32 @munmap(ptr noundef %31, i64 noundef %33) #17, !dbg !19104
  %35 = icmp slt i32 %34, 0, !dbg !19105
  br i1 %35, label %36, label %37, !dbg !19106

36:                                               ; preds = %27
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.7.320, i32 noundef 1147, ptr noundef @__FUNCTION__.lwan_tpl_compile_file, ptr noundef @.str.8.370), !dbg !19107
  br label %37, !dbg !19107

37:                                               ; preds = %36, %27
  br label %38, !dbg !19108

38:                                               ; preds = %37, %26, %18
  call void @llvm.dbg.label(metadata !19109), !dbg !19110
  %39 = load i32, ptr %5, align 4, !dbg !19111
  %40 = call i32 @close(i32 noundef %39), !dbg !19112
  br label %41, !dbg !19112

41:                                               ; preds = %38, %13
  call void @llvm.dbg.label(metadata !19113), !dbg !19114
  %42 = load ptr, ptr %8, align 8, !dbg !19115
  ret ptr %42, !dbg !19116
}

; Function Attrs: nounwind
declare ptr @mmap(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef, i64 noundef) #2

; Function Attrs: nounwind
declare i32 @munmap(ptr noundef, i64 noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @lwan_tpl_str_is_empty(ptr noundef %0) #0 !dbg !19117 {
  %2 = alloca i1, align 1
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !19118, metadata !DIExpression()), !dbg !19119
  %5 = load ptr, ptr %3, align 8, !dbg !19120
  %6 = icmp ne ptr %5, null, !dbg !19120
  %7 = xor i1 %6, true, !dbg !19120
  %8 = zext i1 %7 to i32, !dbg !19120
  %9 = sext i32 %8 to i64, !dbg !19120
  %10 = icmp ne i64 %9, 0, !dbg !19120
  br i1 %10, label %11, label %12, !dbg !19122

11:                                               ; preds = %1
  store i1 true, ptr %2, align 1, !dbg !19123
  br label %29, !dbg !19123

12:                                               ; preds = %1
  call void @llvm.dbg.declare(metadata ptr %4, metadata !19124, metadata !DIExpression()), !dbg !19125
  %13 = load ptr, ptr %3, align 8, !dbg !19126
  %14 = load ptr, ptr %13, align 8, !dbg !19127
  store ptr %14, ptr %4, align 8, !dbg !19125
  %15 = load ptr, ptr %4, align 8, !dbg !19128
  %16 = icmp ne ptr %15, null, !dbg !19128
  %17 = xor i1 %16, true, !dbg !19128
  %18 = xor i1 %17, true, !dbg !19128
  %19 = zext i1 %18 to i32, !dbg !19128
  %20 = sext i32 %19 to i64, !dbg !19128
  %21 = icmp ne i64 %20, 0, !dbg !19128
  br i1 %21, label %22, label %27, !dbg !19129

22:                                               ; preds = %12
  %23 = load ptr, ptr %4, align 8, !dbg !19130
  %24 = load i8, ptr %23, align 1, !dbg !19131
  %25 = sext i8 %24 to i32, !dbg !19131
  %26 = icmp ne i32 %25, 0, !dbg !19129
  br label %27

27:                                               ; preds = %22, %12
  %28 = phi i1 [ false, %12 ], [ %26, %22 ], !dbg !19132
  store i1 %28, ptr %2, align 1, !dbg !19133
  br label %29, !dbg !19133

29:                                               ; preds = %27, %11
  %30 = load i1, ptr %2, align 1, !dbg !19134
  ret i1 %30, !dbg !19134
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @directory_list_generator(ptr noundef %0) #0 !dbg !19135 {
  %2 = alloca i32, align 4
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca %struct.dirent, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.stat, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !19136, metadata !DIExpression()), !dbg !19137
  call void @llvm.dbg.declare(metadata ptr %4, metadata !19138, metadata !DIExpression()), !dbg !19143
  call void @llvm.dbg.declare(metadata ptr %5, metadata !19144, metadata !DIExpression()), !dbg !19154
  call void @llvm.dbg.declare(metadata ptr %6, metadata !19155, metadata !DIExpression()), !dbg !19157
  call void @llvm.dbg.declare(metadata ptr %7, metadata !19158, metadata !DIExpression()), !dbg !19174
  %10 = load ptr, ptr %3, align 8, !dbg !19175
  %11 = call ptr @coro_get_data(ptr noundef %10), !dbg !19176
  store ptr %11, ptr %7, align 8, !dbg !19174
  call void @llvm.dbg.declare(metadata ptr %8, metadata !19177, metadata !DIExpression()), !dbg !19178
  %12 = load ptr, ptr %7, align 8, !dbg !19179
  %13 = getelementptr inbounds %struct.file_list_t, ptr %12, i32 0, i32 0, !dbg !19180
  %14 = load ptr, ptr %13, align 8, !dbg !19180
  %15 = call ptr @opendir(ptr noundef %14), !dbg !19181
  store ptr %15, ptr %4, align 8, !dbg !19182
  %16 = load ptr, ptr %4, align 8, !dbg !19183
  %17 = icmp ne ptr %16, null, !dbg !19183
  br i1 %17, label %19, label %18, !dbg !19185

18:                                               ; preds = %1
  store i32 0, ptr %2, align 4, !dbg !19186
  br label %156, !dbg !19186

19:                                               ; preds = %1
  %20 = load ptr, ptr %4, align 8, !dbg !19187
  %21 = call i32 @dirfd(ptr noundef %20) #17, !dbg !19188
  store i32 %21, ptr %8, align 4, !dbg !19189
  %22 = load i32, ptr %8, align 4, !dbg !19190
  %23 = icmp slt i32 %22, 0, !dbg !19192
  br i1 %23, label %24, label %25, !dbg !19193

24:                                               ; preds = %19
  br label %153, !dbg !19194

25:                                               ; preds = %19
  br label %26, !dbg !19195

26:                                               ; preds = %151, %82, %48, %41, %25
  %27 = load ptr, ptr %4, align 8, !dbg !19196
  %28 = call i32 @readdir_r(ptr noundef %27, ptr noundef %5, ptr noundef %6), !dbg !19197
  %29 = icmp ne i32 %28, 0, !dbg !19198
  %30 = xor i1 %29, true, !dbg !19198
  br i1 %30, label %31, label %152, !dbg !19195

31:                                               ; preds = %26
  call void @llvm.dbg.declare(metadata ptr %9, metadata !19199, metadata !DIExpression()), !dbg !19201
  %32 = load ptr, ptr %6, align 8, !dbg !19202
  %33 = icmp ne ptr %32, null, !dbg !19202
  br i1 %33, label %35, label %34, !dbg !19204

34:                                               ; preds = %31
  br label %152, !dbg !19205

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.dirent, ptr %5, i32 0, i32 4, !dbg !19206
  %37 = getelementptr inbounds [256 x i8], ptr %36, i64 0, i64 0, !dbg !19208
  %38 = load i8, ptr %37, align 1, !dbg !19208
  %39 = sext i8 %38 to i32, !dbg !19208
  %40 = icmp eq i32 %39, 46, !dbg !19209
  br i1 %40, label %41, label %42, !dbg !19210

41:                                               ; preds = %35
  br label %26, !dbg !19211, !llvm.loop !19212

42:                                               ; preds = %35
  %43 = load i32, ptr %8, align 4, !dbg !19214
  %44 = getelementptr inbounds %struct.dirent, ptr %5, i32 0, i32 4, !dbg !19216
  %45 = getelementptr inbounds [256 x i8], ptr %44, i64 0, i64 0, !dbg !19217
  %46 = call i32 @fstatat(i32 noundef %43, ptr noundef %45, ptr noundef %9, i32 noundef 0) #17, !dbg !19218
  %47 = icmp slt i32 %46, 0, !dbg !19219
  br i1 %47, label %48, label %49, !dbg !19220

48:                                               ; preds = %42
  br label %26, !dbg !19221, !llvm.loop !19212

49:                                               ; preds = %42
  %50 = getelementptr inbounds %struct.stat, ptr %9, i32 0, i32 3, !dbg !19222
  %51 = load i32, ptr %50, align 8, !dbg !19222
  %52 = and i32 %51, 61440, !dbg !19222
  %53 = icmp eq i32 %52, 16384, !dbg !19222
  br i1 %53, label %54, label %64, !dbg !19224

54:                                               ; preds = %49
  %55 = load ptr, ptr %7, align 8, !dbg !19225
  %56 = getelementptr inbounds %struct.file_list_t, ptr %55, i32 0, i32 2, !dbg !19227
  %57 = getelementptr inbounds %struct.anon.8, ptr %56, i32 0, i32 1, !dbg !19228
  store ptr @.str.24.163, ptr %57, align 8, !dbg !19229
  %58 = load ptr, ptr %7, align 8, !dbg !19230
  %59 = getelementptr inbounds %struct.file_list_t, ptr %58, i32 0, i32 2, !dbg !19231
  %60 = getelementptr inbounds %struct.anon.8, ptr %59, i32 0, i32 2, !dbg !19232
  store ptr @.str.25.164, ptr %60, align 8, !dbg !19233
  %61 = load ptr, ptr %7, align 8, !dbg !19234
  %62 = getelementptr inbounds %struct.file_list_t, ptr %61, i32 0, i32 2, !dbg !19235
  %63 = getelementptr inbounds %struct.anon.8, ptr %62, i32 0, i32 4, !dbg !19236
  store ptr @.str.26.165, ptr %63, align 8, !dbg !19237
  br label %84, !dbg !19238

64:                                               ; preds = %49
  %65 = getelementptr inbounds %struct.stat, ptr %9, i32 0, i32 3, !dbg !19239
  %66 = load i32, ptr %65, align 8, !dbg !19239
  %67 = and i32 %66, 61440, !dbg !19239
  %68 = icmp eq i32 %67, 32768, !dbg !19239
  br i1 %68, label %69, label %82, !dbg !19241

69:                                               ; preds = %64
  %70 = load ptr, ptr %7, align 8, !dbg !19242
  %71 = getelementptr inbounds %struct.file_list_t, ptr %70, i32 0, i32 2, !dbg !19244
  %72 = getelementptr inbounds %struct.anon.8, ptr %71, i32 0, i32 1, !dbg !19245
  store ptr @.str.27.166, ptr %72, align 8, !dbg !19246
  %73 = load ptr, ptr %7, align 8, !dbg !19247
  %74 = getelementptr inbounds %struct.file_list_t, ptr %73, i32 0, i32 2, !dbg !19248
  %75 = getelementptr inbounds %struct.anon.8, ptr %74, i32 0, i32 2, !dbg !19249
  store ptr @.str.28.167, ptr %75, align 8, !dbg !19250
  %76 = getelementptr inbounds %struct.dirent, ptr %5, i32 0, i32 4, !dbg !19251
  %77 = getelementptr inbounds [256 x i8], ptr %76, i64 0, i64 0, !dbg !19252
  %78 = call ptr @lwan_determine_mime_type_for_file_name(ptr noundef %77) #20, !dbg !19253
  %79 = load ptr, ptr %7, align 8, !dbg !19254
  %80 = getelementptr inbounds %struct.file_list_t, ptr %79, i32 0, i32 2, !dbg !19255
  %81 = getelementptr inbounds %struct.anon.8, ptr %80, i32 0, i32 4, !dbg !19256
  store ptr %78, ptr %81, align 8, !dbg !19257
  br label %83, !dbg !19258

82:                                               ; preds = %64
  br label %26, !dbg !19259, !llvm.loop !19212

83:                                               ; preds = %69
  br label %84

84:                                               ; preds = %83, %54
  %85 = getelementptr inbounds %struct.stat, ptr %9, i32 0, i32 8, !dbg !19261
  %86 = load i64, ptr %85, align 8, !dbg !19261
  %87 = icmp slt i64 %86, 1024, !dbg !19263
  br i1 %87, label %88, label %98, !dbg !19264

88:                                               ; preds = %84
  %89 = getelementptr inbounds %struct.stat, ptr %9, i32 0, i32 8, !dbg !19265
  %90 = load i64, ptr %89, align 8, !dbg !19265
  %91 = trunc i64 %90 to i32, !dbg !19267
  %92 = load ptr, ptr %7, align 8, !dbg !19268
  %93 = getelementptr inbounds %struct.file_list_t, ptr %92, i32 0, i32 2, !dbg !19269
  %94 = getelementptr inbounds %struct.anon.8, ptr %93, i32 0, i32 5, !dbg !19270
  store i32 %91, ptr %94, align 8, !dbg !19271
  %95 = load ptr, ptr %7, align 8, !dbg !19272
  %96 = getelementptr inbounds %struct.file_list_t, ptr %95, i32 0, i32 2, !dbg !19273
  %97 = getelementptr inbounds %struct.anon.8, ptr %96, i32 0, i32 6, !dbg !19274
  store ptr @.str.29.168, ptr %97, align 8, !dbg !19275
  br label %141, !dbg !19276

98:                                               ; preds = %84
  %99 = getelementptr inbounds %struct.stat, ptr %9, i32 0, i32 8, !dbg !19277
  %100 = load i64, ptr %99, align 8, !dbg !19277
  %101 = icmp slt i64 %100, 1048576, !dbg !19279
  br i1 %101, label %102, label %113, !dbg !19280

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.stat, ptr %9, i32 0, i32 8, !dbg !19281
  %104 = load i64, ptr %103, align 8, !dbg !19281
  %105 = sdiv i64 %104, 1024, !dbg !19283
  %106 = trunc i64 %105 to i32, !dbg !19284
  %107 = load ptr, ptr %7, align 8, !dbg !19285
  %108 = getelementptr inbounds %struct.file_list_t, ptr %107, i32 0, i32 2, !dbg !19286
  %109 = getelementptr inbounds %struct.anon.8, ptr %108, i32 0, i32 5, !dbg !19287
  store i32 %106, ptr %109, align 8, !dbg !19288
  %110 = load ptr, ptr %7, align 8, !dbg !19289
  %111 = getelementptr inbounds %struct.file_list_t, ptr %110, i32 0, i32 2, !dbg !19290
  %112 = getelementptr inbounds %struct.anon.8, ptr %111, i32 0, i32 6, !dbg !19291
  store ptr @.str.30.169, ptr %112, align 8, !dbg !19292
  br label %140, !dbg !19293

113:                                              ; preds = %98
  %114 = getelementptr inbounds %struct.stat, ptr %9, i32 0, i32 8, !dbg !19294
  %115 = load i64, ptr %114, align 8, !dbg !19294
  %116 = icmp slt i64 %115, 1073741824, !dbg !19296
  br i1 %116, label %117, label %128, !dbg !19297

117:                                              ; preds = %113
  %118 = getelementptr inbounds %struct.stat, ptr %9, i32 0, i32 8, !dbg !19298
  %119 = load i64, ptr %118, align 8, !dbg !19298
  %120 = sdiv i64 %119, 1048576, !dbg !19300
  %121 = trunc i64 %120 to i32, !dbg !19301
  %122 = load ptr, ptr %7, align 8, !dbg !19302
  %123 = getelementptr inbounds %struct.file_list_t, ptr %122, i32 0, i32 2, !dbg !19303
  %124 = getelementptr inbounds %struct.anon.8, ptr %123, i32 0, i32 5, !dbg !19304
  store i32 %121, ptr %124, align 8, !dbg !19305
  %125 = load ptr, ptr %7, align 8, !dbg !19306
  %126 = getelementptr inbounds %struct.file_list_t, ptr %125, i32 0, i32 2, !dbg !19307
  %127 = getelementptr inbounds %struct.anon.8, ptr %126, i32 0, i32 6, !dbg !19308
  store ptr @.str.31.170, ptr %127, align 8, !dbg !19309
  br label %139, !dbg !19310

128:                                              ; preds = %113
  %129 = getelementptr inbounds %struct.stat, ptr %9, i32 0, i32 8, !dbg !19311
  %130 = load i64, ptr %129, align 8, !dbg !19311
  %131 = sdiv i64 %130, 1073741824, !dbg !19313
  %132 = trunc i64 %131 to i32, !dbg !19314
  %133 = load ptr, ptr %7, align 8, !dbg !19315
  %134 = getelementptr inbounds %struct.file_list_t, ptr %133, i32 0, i32 2, !dbg !19316
  %135 = getelementptr inbounds %struct.anon.8, ptr %134, i32 0, i32 5, !dbg !19317
  store i32 %132, ptr %135, align 8, !dbg !19318
  %136 = load ptr, ptr %7, align 8, !dbg !19319
  %137 = getelementptr inbounds %struct.file_list_t, ptr %136, i32 0, i32 2, !dbg !19320
  %138 = getelementptr inbounds %struct.anon.8, ptr %137, i32 0, i32 6, !dbg !19321
  store ptr @.str.32.171, ptr %138, align 8, !dbg !19322
  br label %139

139:                                              ; preds = %128, %117
  br label %140

140:                                              ; preds = %139, %102
  br label %141

141:                                              ; preds = %140, %88
  %142 = getelementptr inbounds %struct.dirent, ptr %5, i32 0, i32 4, !dbg !19323
  %143 = getelementptr inbounds [256 x i8], ptr %142, i64 0, i64 0, !dbg !19324
  %144 = load ptr, ptr %7, align 8, !dbg !19325
  %145 = getelementptr inbounds %struct.file_list_t, ptr %144, i32 0, i32 2, !dbg !19326
  %146 = getelementptr inbounds %struct.anon.8, ptr %145, i32 0, i32 3, !dbg !19327
  store ptr %143, ptr %146, align 8, !dbg !19328
  %147 = load ptr, ptr %3, align 8, !dbg !19329
  %148 = call i32 @coro_yield(ptr noundef %147, i32 noundef 1), !dbg !19331
  %149 = icmp ne i32 %148, 0, !dbg !19331
  br i1 %149, label %150, label %151, !dbg !19332

150:                                              ; preds = %141
  br label %152, !dbg !19333

151:                                              ; preds = %141
  br label %26, !dbg !19195, !llvm.loop !19212

152:                                              ; preds = %150, %34, %26
  br label %153, !dbg !19195

153:                                              ; preds = %152, %24
  call void @llvm.dbg.label(metadata !19334), !dbg !19335
  %154 = load ptr, ptr %4, align 8, !dbg !19336
  %155 = call i32 @closedir(ptr noundef %154), !dbg !19337
  store i32 0, ptr %2, align 4, !dbg !19338
  br label %156, !dbg !19338

156:                                              ; preds = %153, %18
  %157 = load i32, ptr %2, align 4, !dbg !19339
  ret i32 %157, !dbg !19339
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_append_int_to_strbuf(ptr noundef %0, ptr noundef %1) #0 !dbg !19340 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca [25 x i8], align 16
  %6 = alloca i64, align 8
  %7 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !19341, metadata !DIExpression()), !dbg !19342
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !19343, metadata !DIExpression()), !dbg !19344
  call void @llvm.dbg.declare(metadata ptr %5, metadata !19345, metadata !DIExpression()), !dbg !19346
  call void @llvm.dbg.declare(metadata ptr %6, metadata !19347, metadata !DIExpression()), !dbg !19348
  call void @llvm.dbg.declare(metadata ptr %7, metadata !19349, metadata !DIExpression()), !dbg !19350
  %8 = load ptr, ptr %4, align 8, !dbg !19351
  %9 = load i32, ptr %8, align 4, !dbg !19352
  %10 = sext i32 %9 to i64, !dbg !19352
  %11 = getelementptr inbounds [25 x i8], ptr %5, i64 0, i64 0, !dbg !19353
  %12 = call ptr @int_to_string(i64 noundef %10, ptr noundef %11, ptr noundef %6), !dbg !19354
  store ptr %12, ptr %7, align 8, !dbg !19355
  %13 = load ptr, ptr %3, align 8, !dbg !19356
  %14 = load ptr, ptr %7, align 8, !dbg !19357
  %15 = load i64, ptr %6, align 8, !dbg !19358
  %16 = call zeroext i1 @strbuf_append_str(ptr noundef %13, ptr noundef %14, i64 noundef %15), !dbg !19359
  ret void, !dbg !19360
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @lwan_tpl_int_is_empty(ptr noundef %0) #0 !dbg !19361 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !19362, metadata !DIExpression()), !dbg !19363
  %3 = load ptr, ptr %2, align 8, !dbg !19364
  %4 = load i32, ptr %3, align 4, !dbg !19365
  %5 = icmp eq i32 %4, 0, !dbg !19366
  ret i1 %5, !dbg !19367
}

declare ptr @opendir(ptr noundef) #5

; Function Attrs: nounwind
declare i32 @dirfd(ptr noundef) #2

declare i32 @readdir_r(ptr noundef, ptr noundef, ptr noundef) #5

; Function Attrs: nounwind
declare i32 @fstatat(i32 noundef, ptr noundef, ptr noundef, i32 noundef) #2

; Function Attrs: noinline nounwind optnone willreturn memory(read) uwtable
define dso_local ptr @lwan_determine_mime_type_for_file_name(ptr noundef %0) #16 !dbg !2710 {
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca %struct.lwan_key_value_t_, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !19368, metadata !DIExpression()), !dbg !19369
  call void @llvm.dbg.declare(metadata ptr %6, metadata !19370, metadata !DIExpression()), !dbg !19371
  %9 = load ptr, ptr %5, align 8, !dbg !19372
  %10 = call ptr @strrchr(ptr noundef %9, i32 noundef 46) #20, !dbg !19373
  store ptr %10, ptr %6, align 8, !dbg !19371
  %11 = load ptr, ptr %6, align 8, !dbg !19374
  %12 = icmp ne ptr %11, null, !dbg !19374
  %13 = xor i1 %12, true, !dbg !19374
  %14 = zext i1 %13 to i32, !dbg !19374
  %15 = sext i32 %14 to i64, !dbg !19374
  %16 = icmp ne i64 %15, 0, !dbg !19374
  br i1 %16, label %17, label %18, !dbg !19376

17:                                               ; preds = %1
  br label %57, !dbg !19377

18:                                               ; preds = %1
  %19 = load ptr, ptr %6, align 8, !dbg !19378
  store ptr %19, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !19379, metadata !DIExpression()), !dbg !19381
  call void @llvm.dbg.declare(metadata ptr %3, metadata !19383, metadata !DIExpression()), !dbg !19384
  %20 = load ptr, ptr %2, align 8, !dbg !19385
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %3, ptr align 1 %20, i64 4, i1 false), !dbg !19386
  %21 = load i32, ptr %3, align 4, !dbg !19387
  %22 = or i32 %21, 538976288, !dbg !19378
  switch i32 %22, label %29 [
    i32 1936941870, label %23
    i32 1836345390, label %24
    i32 1735420462, label %25
    i32 544434734, label %26
    i32 1735290926, label %27
    i32 1954051118, label %28
  ], !dbg !19378

23:                                               ; preds = %18
  store ptr @.str.4.252, ptr %4, align 8, !dbg !19388
  br label %58, !dbg !19388

24:                                               ; preds = %18
  store ptr @.str.5.253, ptr %4, align 8, !dbg !19390
  br label %58, !dbg !19390

25:                                               ; preds = %18
  store ptr @.str.6.254, ptr %4, align 8, !dbg !19391
  br label %58, !dbg !19391

26:                                               ; preds = %18
  store ptr @.str.7.255, ptr %4, align 8, !dbg !19392
  br label %58, !dbg !19392

27:                                               ; preds = %18
  store ptr @.str.8.256, ptr %4, align 8, !dbg !19393
  br label %58, !dbg !19393

28:                                               ; preds = %18
  store ptr @.str.9.257, ptr %4, align 8, !dbg !19394
  br label %58, !dbg !19394

29:                                               ; preds = %18
  %30 = load ptr, ptr %6, align 8, !dbg !19395
  %31 = load i8, ptr %30, align 1, !dbg !19395
  %32 = icmp ne i8 %31, 0, !dbg !19395
  %33 = xor i1 %32, true, !dbg !19395
  %34 = xor i1 %33, true, !dbg !19395
  %35 = zext i1 %34 to i32, !dbg !19395
  %36 = sext i32 %35 to i64, !dbg !19395
  %37 = icmp ne i64 %36, 0, !dbg !19395
  br i1 %37, label %38, label %56, !dbg !19397

38:                                               ; preds = %29
  call void @llvm.dbg.declare(metadata ptr %7, metadata !19398, metadata !DIExpression()), !dbg !19401
  call void @llvm.dbg.declare(metadata ptr %8, metadata !19402, metadata !DIExpression()), !dbg !19403
  %39 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %8, i32 0, i32 0, !dbg !19404
  %40 = load ptr, ptr %6, align 8, !dbg !19405
  %41 = getelementptr inbounds i8, ptr %40, i64 1, !dbg !19406
  store ptr %41, ptr %39, align 8, !dbg !19404
  %42 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %8, i32 0, i32 1, !dbg !19404
  store ptr null, ptr %42, align 8, !dbg !19404
  %43 = call ptr @bsearch(ptr noundef %8, ptr noundef @mime_entries, i64 noundef 981, i64 noundef 16, ptr noundef @compare_mime_entry), !dbg !19407
  store ptr %43, ptr %7, align 8, !dbg !19408
  %44 = load ptr, ptr %7, align 8, !dbg !19409
  %45 = icmp ne ptr %44, null, !dbg !19409
  %46 = xor i1 %45, true, !dbg !19409
  %47 = xor i1 %46, true, !dbg !19409
  %48 = zext i1 %47 to i32, !dbg !19409
  %49 = sext i32 %48 to i64, !dbg !19409
  %50 = icmp ne i64 %49, 0, !dbg !19409
  br i1 %50, label %51, label %55, !dbg !19411

51:                                               ; preds = %38
  %52 = load ptr, ptr %7, align 8, !dbg !19412
  %53 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %52, i32 0, i32 1, !dbg !19413
  %54 = load ptr, ptr %53, align 8, !dbg !19413
  store ptr %54, ptr %4, align 8, !dbg !19414
  br label %58, !dbg !19414

55:                                               ; preds = %38
  br label %56, !dbg !19415

56:                                               ; preds = %55, %29
  br label %57, !dbg !19395

57:                                               ; preds = %56, %17
  call void @llvm.dbg.label(metadata !19416), !dbg !19417
  store ptr @.str.10.258, ptr %4, align 8, !dbg !19418
  br label %58, !dbg !19418

58:                                               ; preds = %57, %51, %28, %27, %26, %25, %24, %23
  %59 = load ptr, ptr %4, align 8, !dbg !19419
  ret ptr %59, !dbg !19419
}

declare i32 @closedir(ptr noundef) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @compare_mime_entry(ptr noundef %0, ptr noundef %1) #0 !dbg !19420 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !19421, metadata !DIExpression()), !dbg !19422
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !19423, metadata !DIExpression()), !dbg !19424
  call void @llvm.dbg.declare(metadata ptr %5, metadata !19425, metadata !DIExpression()), !dbg !19428
  %7 = load ptr, ptr %3, align 8, !dbg !19429
  store ptr %7, ptr %5, align 8, !dbg !19428
  call void @llvm.dbg.declare(metadata ptr %6, metadata !19430, metadata !DIExpression()), !dbg !19431
  %8 = load ptr, ptr %4, align 8, !dbg !19432
  store ptr %8, ptr %6, align 8, !dbg !19431
  %9 = load ptr, ptr %5, align 8, !dbg !19433
  %10 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %9, i32 0, i32 0, !dbg !19434
  %11 = load ptr, ptr %10, align 8, !dbg !19434
  %12 = load ptr, ptr %6, align 8, !dbg !19435
  %13 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %12, i32 0, i32 0, !dbg !19436
  %14 = load ptr, ptr %13, align 8, !dbg !19436
  %15 = call i32 @strcmp(ptr noundef %11, ptr noundef %14) #20, !dbg !19437
  ret i32 %15, !dbg !19438
}

declare ptr @bsearch(ptr noundef, ptr noundef, i64 noundef, i64 noundef, ptr noundef) #5

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @realpathat2(i32 noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4) #0 !dbg !19439 {
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca [4096 x i8], align 16
  %15 = alloca ptr, align 8
  %16 = alloca ptr, align 8
  %17 = alloca ptr, align 8
  %18 = alloca i32, align 4
  %19 = alloca i64, align 8
  %20 = alloca ptr, align 8
  %21 = alloca i32, align 4
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  %24 = alloca ptr, align 8
  %25 = alloca [4096 x i8], align 16
  %26 = alloca i64, align 8
  store i32 %0, ptr %7, align 4
  call void @llvm.dbg.declare(metadata ptr %7, metadata !19464, metadata !DIExpression()), !dbg !19465
  store ptr %1, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !19466, metadata !DIExpression()), !dbg !19467
  store ptr %2, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !19468, metadata !DIExpression()), !dbg !19469
  store ptr %3, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %10, metadata !19470, metadata !DIExpression()), !dbg !19471
  store ptr %4, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !19472, metadata !DIExpression()), !dbg !19473
  call void @llvm.dbg.declare(metadata ptr %12, metadata !19474, metadata !DIExpression()), !dbg !19475
  call void @llvm.dbg.declare(metadata ptr %13, metadata !19476, metadata !DIExpression()), !dbg !19477
  call void @llvm.dbg.declare(metadata ptr %14, metadata !19478, metadata !DIExpression()), !dbg !19479
  call void @llvm.dbg.declare(metadata ptr %15, metadata !19480, metadata !DIExpression()), !dbg !19481
  call void @llvm.dbg.declare(metadata ptr %16, metadata !19482, metadata !DIExpression()), !dbg !19483
  call void @llvm.dbg.declare(metadata ptr %17, metadata !19484, metadata !DIExpression()), !dbg !19485
  call void @llvm.dbg.declare(metadata ptr %18, metadata !19486, metadata !DIExpression()), !dbg !19487
  store i32 0, ptr %18, align 4, !dbg !19487
  call void @llvm.dbg.declare(metadata ptr %19, metadata !19488, metadata !DIExpression()), !dbg !19489
  call void @llvm.dbg.declare(metadata ptr %20, metadata !19490, metadata !DIExpression()), !dbg !19491
  %27 = load i32, ptr %7, align 4, !dbg !19492
  %28 = icmp slt i32 %27, 0, !dbg !19492
  br i1 %28, label %38, label %29, !dbg !19492

29:                                               ; preds = %5
  %30 = load ptr, ptr %8, align 8, !dbg !19492
  %31 = icmp eq ptr %30, null, !dbg !19492
  br i1 %31, label %38, label %32, !dbg !19492

32:                                               ; preds = %29
  %33 = load ptr, ptr %9, align 8, !dbg !19492
  %34 = getelementptr inbounds i8, ptr %33, i64 0, !dbg !19492
  %35 = load i8, ptr %34, align 1, !dbg !19492
  %36 = sext i8 %35 to i32, !dbg !19492
  %37 = icmp eq i32 %36, 47, !dbg !19492
  br label %38, !dbg !19492

38:                                               ; preds = %32, %29, %5
  %39 = phi i1 [ true, %29 ], [ true, %5 ], [ %37, %32 ]
  %40 = zext i1 %39 to i32, !dbg !19492
  %41 = sext i32 %40 to i64, !dbg !19492
  %42 = icmp ne i64 %41, 0, !dbg !19492
  br i1 %42, label %43, label %47, !dbg !19494

43:                                               ; preds = %38
  %44 = load ptr, ptr %9, align 8, !dbg !19495
  %45 = load ptr, ptr %10, align 8, !dbg !19496
  %46 = call ptr @realpath(ptr noundef %44, ptr noundef %45) #17, !dbg !19497
  store ptr %46, ptr %6, align 8, !dbg !19498
  br label %485, !dbg !19498

47:                                               ; preds = %38
  %48 = load ptr, ptr %9, align 8, !dbg !19499
  %49 = icmp eq ptr %48, null, !dbg !19499
  %50 = zext i1 %49 to i32, !dbg !19499
  %51 = sext i32 %50 to i64, !dbg !19499
  %52 = icmp ne i64 %51, 0, !dbg !19499
  br i1 %52, label %53, label %55, !dbg !19501

53:                                               ; preds = %47
  %54 = call ptr @__errno_location() #21, !dbg !19502
  store i32 22, ptr %54, align 4, !dbg !19504
  store ptr null, ptr %6, align 8, !dbg !19505
  br label %485, !dbg !19505

55:                                               ; preds = %47
  %56 = load ptr, ptr %9, align 8, !dbg !19506
  %57 = getelementptr inbounds i8, ptr %56, i64 0, !dbg !19506
  %58 = load i8, ptr %57, align 1, !dbg !19506
  %59 = sext i8 %58 to i32, !dbg !19506
  %60 = icmp eq i32 %59, 0, !dbg !19508
  br i1 %60, label %61, label %86, !dbg !19509

61:                                               ; preds = %55
  %62 = load i32, ptr %7, align 4, !dbg !19510
  %63 = load ptr, ptr %11, align 8, !dbg !19510
  %64 = call i32 @fstat(i32 noundef %62, ptr noundef %63) #17, !dbg !19510
  %65 = icmp slt i32 %64, 0, !dbg !19510
  %66 = zext i1 %65 to i32, !dbg !19510
  %67 = sext i32 %66 to i64, !dbg !19510
  %68 = icmp ne i64 %67, 0, !dbg !19510
  br i1 %68, label %69, label %70, !dbg !19513

69:                                               ; preds = %61
  store ptr null, ptr %6, align 8, !dbg !19514
  br label %485, !dbg !19514

70:                                               ; preds = %61
  %71 = load ptr, ptr %10, align 8, !dbg !19515
  %72 = icmp ne ptr %71, null, !dbg !19515
  %73 = xor i1 %72, true, !dbg !19515
  %74 = xor i1 %73, true, !dbg !19515
  %75 = xor i1 %74, true, !dbg !19515
  %76 = zext i1 %75 to i32, !dbg !19515
  %77 = sext i32 %76 to i64, !dbg !19515
  %78 = icmp ne i64 %77, 0, !dbg !19515
  br i1 %78, label %79, label %82, !dbg !19517

79:                                               ; preds = %70
  %80 = load ptr, ptr %8, align 8, !dbg !19518
  %81 = call noalias ptr @strdup(ptr noundef %80) #17, !dbg !19519
  store ptr %81, ptr %6, align 8, !dbg !19520
  br label %485, !dbg !19520

82:                                               ; preds = %70
  %83 = load ptr, ptr %10, align 8, !dbg !19521
  %84 = load ptr, ptr %8, align 8, !dbg !19522
  %85 = call ptr @strcpy(ptr noundef %83, ptr noundef %84) #17, !dbg !19523
  store ptr %85, ptr %6, align 8, !dbg !19524
  br label %485, !dbg !19524

86:                                               ; preds = %55
  %87 = load ptr, ptr %10, align 8, !dbg !19525
  %88 = icmp ne ptr %87, null, !dbg !19525
  %89 = xor i1 %88, true, !dbg !19525
  %90 = xor i1 %89, true, !dbg !19525
  %91 = xor i1 %90, true, !dbg !19525
  %92 = zext i1 %91 to i32, !dbg !19525
  %93 = sext i32 %92 to i64, !dbg !19525
  %94 = icmp ne i64 %93, 0, !dbg !19525
  br i1 %94, label %95, label %105, !dbg !19527

95:                                               ; preds = %86
  %96 = call noalias ptr @malloc(i64 noundef 4096) #18, !dbg !19528
  store ptr %96, ptr %12, align 8, !dbg !19530
  %97 = load ptr, ptr %12, align 8, !dbg !19531
  %98 = icmp ne ptr %97, null, !dbg !19531
  %99 = xor i1 %98, true, !dbg !19531
  %100 = zext i1 %99 to i32, !dbg !19531
  %101 = sext i32 %100 to i64, !dbg !19531
  %102 = icmp ne i64 %101, 0, !dbg !19531
  br i1 %102, label %103, label %104, !dbg !19533

103:                                              ; preds = %95
  store ptr null, ptr %6, align 8, !dbg !19534
  br label %485, !dbg !19534

104:                                              ; preds = %95
  br label %107, !dbg !19535

105:                                              ; preds = %86
  %106 = load ptr, ptr %10, align 8, !dbg !19536
  store ptr %106, ptr %12, align 8, !dbg !19537
  br label %107

107:                                              ; preds = %105, %104
  %108 = load ptr, ptr %12, align 8, !dbg !19538
  %109 = getelementptr inbounds i8, ptr %108, i64 4096, !dbg !19539
  store ptr %109, ptr %17, align 8, !dbg !19540
  %110 = load ptr, ptr %12, align 8, !dbg !19541
  %111 = load ptr, ptr %8, align 8, !dbg !19542
  %112 = call ptr @strcpy(ptr noundef %110, ptr noundef %111) #17, !dbg !19543
  %113 = load ptr, ptr %12, align 8, !dbg !19544
  %114 = call ptr @rawmemchr(ptr noundef %113, i32 noundef 0) #20, !dbg !19545
  store ptr %114, ptr %13, align 8, !dbg !19546
  %115 = load ptr, ptr %13, align 8, !dbg !19547
  %116 = load ptr, ptr %12, align 8, !dbg !19548
  %117 = ptrtoint ptr %115 to i64, !dbg !19549
  %118 = ptrtoint ptr %116 to i64, !dbg !19549
  %119 = sub i64 %117, %118, !dbg !19549
  store i64 %119, ptr %19, align 8, !dbg !19550
  %120 = load ptr, ptr %9, align 8, !dbg !19551
  store ptr %120, ptr %16, align 8, !dbg !19553
  store ptr %120, ptr %15, align 8, !dbg !19554
  br label %121, !dbg !19555

121:                                              ; preds = %442, %107
  %122 = load ptr, ptr %15, align 8, !dbg !19556
  %123 = load i8, ptr %122, align 1, !dbg !19558
  %124 = icmp ne i8 %123, 0, !dbg !19559
  br i1 %124, label %125, label %444, !dbg !19559

125:                                              ; preds = %121
  call void @llvm.dbg.declare(metadata ptr %21, metadata !19560, metadata !DIExpression()), !dbg !19562
  br label %126, !dbg !19563

126:                                              ; preds = %131, %125
  %127 = load ptr, ptr %15, align 8, !dbg !19564
  %128 = load i8, ptr %127, align 1, !dbg !19565
  %129 = sext i8 %128 to i32, !dbg !19565
  %130 = icmp eq i32 %129, 47, !dbg !19566
  br i1 %130, label %131, label %134, !dbg !19563

131:                                              ; preds = %126
  %132 = load ptr, ptr %15, align 8, !dbg !19567
  %133 = getelementptr inbounds i8, ptr %132, i32 1, !dbg !19567
  store ptr %133, ptr %15, align 8, !dbg !19567
  br label %126, !dbg !19563, !llvm.loop !19568

134:                                              ; preds = %126
  %135 = load ptr, ptr %15, align 8, !dbg !19570
  store ptr %135, ptr %16, align 8, !dbg !19572
  br label %136, !dbg !19573

136:                                              ; preds = %149, %134
  %137 = load ptr, ptr %16, align 8, !dbg !19574
  %138 = load i8, ptr %137, align 1, !dbg !19576
  %139 = sext i8 %138 to i32, !dbg !19576
  %140 = icmp ne i32 %139, 0, !dbg !19576
  br i1 %140, label %141, label %146, !dbg !19577

141:                                              ; preds = %136
  %142 = load ptr, ptr %16, align 8, !dbg !19578
  %143 = load i8, ptr %142, align 1, !dbg !19579
  %144 = sext i8 %143 to i32, !dbg !19579
  %145 = icmp ne i32 %144, 47, !dbg !19580
  br label %146

146:                                              ; preds = %141, %136
  %147 = phi i1 [ false, %136 ], [ %145, %141 ], !dbg !19581
  br i1 %147, label %148, label %152, !dbg !19582

148:                                              ; preds = %146
  br label %149, !dbg !19582

149:                                              ; preds = %148
  %150 = load ptr, ptr %16, align 8, !dbg !19583
  %151 = getelementptr inbounds i8, ptr %150, i32 1, !dbg !19583
  store ptr %151, ptr %16, align 8, !dbg !19583
  br label %136, !dbg !19584, !llvm.loop !19585

152:                                              ; preds = %146
  %153 = load ptr, ptr %16, align 8, !dbg !19587
  %154 = load ptr, ptr %15, align 8, !dbg !19589
  %155 = ptrtoint ptr %153 to i64, !dbg !19590
  %156 = ptrtoint ptr %154 to i64, !dbg !19590
  %157 = sub i64 %155, %156, !dbg !19590
  %158 = icmp eq i64 %157, 0, !dbg !19591
  br i1 %158, label %159, label %160, !dbg !19592

159:                                              ; preds = %152
  br label %444, !dbg !19593

160:                                              ; preds = %152
  %161 = load ptr, ptr %16, align 8, !dbg !19594
  %162 = load ptr, ptr %15, align 8, !dbg !19596
  %163 = ptrtoint ptr %161 to i64, !dbg !19597
  %164 = ptrtoint ptr %162 to i64, !dbg !19597
  %165 = sub i64 %163, %164, !dbg !19597
  %166 = icmp eq i64 %165, 1, !dbg !19598
  br i1 %166, label %167, label %174, !dbg !19599

167:                                              ; preds = %160
  %168 = load ptr, ptr %15, align 8, !dbg !19600
  %169 = getelementptr inbounds i8, ptr %168, i64 0, !dbg !19600
  %170 = load i8, ptr %169, align 1, !dbg !19600
  %171 = sext i8 %170 to i32, !dbg !19600
  %172 = icmp eq i32 %171, 46, !dbg !19601
  br i1 %172, label %173, label %174, !dbg !19602

173:                                              ; preds = %167
  br label %440, !dbg !19602

174:                                              ; preds = %167, %160
  %175 = load ptr, ptr %16, align 8, !dbg !19603
  %176 = load ptr, ptr %15, align 8, !dbg !19605
  %177 = ptrtoint ptr %175 to i64, !dbg !19606
  %178 = ptrtoint ptr %176 to i64, !dbg !19606
  %179 = sub i64 %177, %178, !dbg !19606
  %180 = icmp eq i64 %179, 2, !dbg !19607
  br i1 %180, label %181, label %209, !dbg !19608

181:                                              ; preds = %174
  %182 = load ptr, ptr %15, align 8, !dbg !19609
  %183 = getelementptr inbounds i8, ptr %182, i64 0, !dbg !19609
  %184 = load i8, ptr %183, align 1, !dbg !19609
  %185 = sext i8 %184 to i32, !dbg !19609
  %186 = icmp eq i32 %185, 46, !dbg !19610
  br i1 %186, label %187, label %209, !dbg !19611

187:                                              ; preds = %181
  %188 = load ptr, ptr %15, align 8, !dbg !19612
  %189 = getelementptr inbounds i8, ptr %188, i64 1, !dbg !19612
  %190 = load i8, ptr %189, align 1, !dbg !19612
  %191 = sext i8 %190 to i32, !dbg !19612
  %192 = icmp eq i32 %191, 46, !dbg !19613
  br i1 %192, label %193, label %209, !dbg !19614

193:                                              ; preds = %187
  %194 = load ptr, ptr %13, align 8, !dbg !19615
  %195 = load ptr, ptr %12, align 8, !dbg !19618
  %196 = getelementptr inbounds i8, ptr %195, i64 1, !dbg !19619
  %197 = icmp ugt ptr %194, %196, !dbg !19620
  br i1 %197, label %198, label %208, !dbg !19621

198:                                              ; preds = %193
  br label %199, !dbg !19622

199:                                              ; preds = %206, %198
  %200 = load ptr, ptr %13, align 8, !dbg !19623
  %201 = getelementptr inbounds i8, ptr %200, i32 -1, !dbg !19623
  store ptr %201, ptr %13, align 8, !dbg !19623
  %202 = getelementptr inbounds i8, ptr %201, i64 -1, !dbg !19624
  %203 = load i8, ptr %202, align 1, !dbg !19624
  %204 = sext i8 %203 to i32, !dbg !19624
  %205 = icmp ne i32 %204, 47, !dbg !19625
  br i1 %205, label %206, label %207, !dbg !19622

206:                                              ; preds = %199
  br label %199, !dbg !19622, !llvm.loop !19626

207:                                              ; preds = %199
  br label %208, !dbg !19622

208:                                              ; preds = %207, %193
  br label %439, !dbg !19628

209:                                              ; preds = %187, %181, %174
  call void @llvm.dbg.declare(metadata ptr %22, metadata !19629, metadata !DIExpression()), !dbg !19631
  %210 = load ptr, ptr %13, align 8, !dbg !19632
  %211 = getelementptr inbounds i8, ptr %210, i64 -1, !dbg !19632
  %212 = load i8, ptr %211, align 1, !dbg !19632
  %213 = sext i8 %212 to i32, !dbg !19632
  %214 = icmp ne i32 %213, 47, !dbg !19634
  br i1 %214, label %215, label %218, !dbg !19635

215:                                              ; preds = %209
  %216 = load ptr, ptr %13, align 8, !dbg !19636
  %217 = getelementptr inbounds i8, ptr %216, i32 1, !dbg !19636
  store ptr %217, ptr %13, align 8, !dbg !19636
  store i8 47, ptr %216, align 1, !dbg !19637
  br label %218, !dbg !19638

218:                                              ; preds = %215, %209
  %219 = load ptr, ptr %13, align 8, !dbg !19639
  %220 = load ptr, ptr %16, align 8, !dbg !19641
  %221 = load ptr, ptr %15, align 8, !dbg !19642
  %222 = ptrtoint ptr %220 to i64, !dbg !19643
  %223 = ptrtoint ptr %221 to i64, !dbg !19643
  %224 = sub i64 %222, %223, !dbg !19643
  %225 = getelementptr inbounds i8, ptr %219, i64 %224, !dbg !19644
  %226 = load ptr, ptr %17, align 8, !dbg !19645
  %227 = icmp uge ptr %225, %226, !dbg !19646
  br i1 %227, label %228, label %293, !dbg !19647

228:                                              ; preds = %218
  call void @llvm.dbg.declare(metadata ptr %23, metadata !19648, metadata !DIExpression()), !dbg !19650
  %229 = load ptr, ptr %13, align 8, !dbg !19651
  %230 = load ptr, ptr %12, align 8, !dbg !19652
  %231 = ptrtoint ptr %229 to i64, !dbg !19653
  %232 = ptrtoint ptr %230 to i64, !dbg !19653
  %233 = sub i64 %231, %232, !dbg !19653
  store i64 %233, ptr %23, align 8, !dbg !19650
  call void @llvm.dbg.declare(metadata ptr %24, metadata !19654, metadata !DIExpression()), !dbg !19655
  %234 = load ptr, ptr %10, align 8, !dbg !19656
  %235 = icmp ne ptr %234, null, !dbg !19656
  %236 = zext i1 %235 to i32, !dbg !19656
  %237 = sext i32 %236 to i64, !dbg !19656
  %238 = icmp ne i64 %237, 0, !dbg !19656
  br i1 %238, label %239, label %250, !dbg !19658

239:                                              ; preds = %228
  %240 = call ptr @__errno_location() #21, !dbg !19659
  store i32 36, ptr %240, align 4, !dbg !19661
  %241 = load ptr, ptr %13, align 8, !dbg !19662
  %242 = load ptr, ptr %12, align 8, !dbg !19664
  %243 = getelementptr inbounds i8, ptr %242, i64 1, !dbg !19665
  %244 = icmp ugt ptr %241, %243, !dbg !19666
  br i1 %244, label %245, label %248, !dbg !19667

245:                                              ; preds = %239
  %246 = load ptr, ptr %13, align 8, !dbg !19668
  %247 = getelementptr inbounds i8, ptr %246, i32 -1, !dbg !19668
  store ptr %247, ptr %13, align 8, !dbg !19668
  br label %248, !dbg !19669

248:                                              ; preds = %245, %239
  %249 = load ptr, ptr %13, align 8, !dbg !19670
  store i8 0, ptr %249, align 1, !dbg !19671
  br label %470, !dbg !19672

250:                                              ; preds = %228
  %251 = load ptr, ptr %17, align 8, !dbg !19673
  %252 = load ptr, ptr %12, align 8, !dbg !19674
  %253 = ptrtoint ptr %251 to i64, !dbg !19675
  %254 = ptrtoint ptr %252 to i64, !dbg !19675
  %255 = sub i64 %253, %254, !dbg !19675
  store i64 %255, ptr %22, align 8, !dbg !19676
  %256 = load ptr, ptr %16, align 8, !dbg !19677
  %257 = load ptr, ptr %15, align 8, !dbg !19679
  %258 = ptrtoint ptr %256 to i64, !dbg !19680
  %259 = ptrtoint ptr %257 to i64, !dbg !19680
  %260 = sub i64 %258, %259, !dbg !19680
  %261 = add nsw i64 %260, 1, !dbg !19681
  %262 = icmp sgt i64 %261, 4096, !dbg !19682
  br i1 %262, label %263, label %272, !dbg !19683

263:                                              ; preds = %250
  %264 = load ptr, ptr %16, align 8, !dbg !19684
  %265 = load ptr, ptr %15, align 8, !dbg !19685
  %266 = ptrtoint ptr %264 to i64, !dbg !19686
  %267 = ptrtoint ptr %265 to i64, !dbg !19686
  %268 = sub i64 %266, %267, !dbg !19686
  %269 = add nsw i64 %268, 1, !dbg !19687
  %270 = load i64, ptr %22, align 8, !dbg !19688
  %271 = add i64 %270, %269, !dbg !19688
  store i64 %271, ptr %22, align 8, !dbg !19688
  br label %275, !dbg !19689

272:                                              ; preds = %250
  %273 = load i64, ptr %22, align 8, !dbg !19690
  %274 = add i64 %273, 4096, !dbg !19690
  store i64 %274, ptr %22, align 8, !dbg !19690
  br label %275

275:                                              ; preds = %272, %263
  %276 = load ptr, ptr %12, align 8, !dbg !19691
  %277 = load i64, ptr %22, align 8, !dbg !19692
  %278 = call ptr @realloc(ptr noundef %276, i64 noundef %277) #22, !dbg !19693
  store ptr %278, ptr %24, align 8, !dbg !19694
  %279 = load ptr, ptr %24, align 8, !dbg !19695
  %280 = icmp eq ptr %279, null, !dbg !19695
  %281 = zext i1 %280 to i32, !dbg !19695
  %282 = sext i32 %281 to i64, !dbg !19695
  %283 = icmp ne i64 %282, 0, !dbg !19695
  br i1 %283, label %284, label %285, !dbg !19697

284:                                              ; preds = %275
  br label %470, !dbg !19698

285:                                              ; preds = %275
  %286 = load ptr, ptr %24, align 8, !dbg !19699
  store ptr %286, ptr %12, align 8, !dbg !19700
  %287 = load ptr, ptr %12, align 8, !dbg !19701
  %288 = load i64, ptr %22, align 8, !dbg !19702
  %289 = getelementptr inbounds i8, ptr %287, i64 %288, !dbg !19703
  store ptr %289, ptr %17, align 8, !dbg !19704
  %290 = load ptr, ptr %12, align 8, !dbg !19705
  %291 = load i64, ptr %23, align 8, !dbg !19706
  %292 = getelementptr inbounds i8, ptr %290, i64 %291, !dbg !19707
  store ptr %292, ptr %13, align 8, !dbg !19708
  br label %293, !dbg !19709

293:                                              ; preds = %285, %218
  %294 = load ptr, ptr %13, align 8, !dbg !19710
  %295 = load ptr, ptr %15, align 8, !dbg !19711
  %296 = load ptr, ptr %16, align 8, !dbg !19712
  %297 = load ptr, ptr %15, align 8, !dbg !19713
  %298 = ptrtoint ptr %296 to i64, !dbg !19714
  %299 = ptrtoint ptr %297 to i64, !dbg !19714
  %300 = sub i64 %298, %299, !dbg !19714
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %294, ptr align 1 %295, i64 %300, i1 false), !dbg !19715
  %301 = getelementptr inbounds i8, ptr %294, i64 %300, !dbg !19715
  store ptr %301, ptr %13, align 8, !dbg !19716
  %302 = load ptr, ptr %13, align 8, !dbg !19717
  store i8 0, ptr %302, align 1, !dbg !19718
  %303 = load ptr, ptr %12, align 8, !dbg !19719
  %304 = load ptr, ptr %8, align 8, !dbg !19719
  %305 = load i64, ptr %19, align 8, !dbg !19719
  %306 = call i32 @strncmp(ptr noundef %303, ptr noundef %304, i64 noundef %305) #20, !dbg !19719
  %307 = icmp ne i32 %306, 0, !dbg !19719
  %308 = xor i1 %307, true, !dbg !19719
  %309 = xor i1 %308, true, !dbg !19719
  %310 = xor i1 %309, true, !dbg !19719
  %311 = zext i1 %310 to i32, !dbg !19719
  %312 = sext i32 %311 to i64, !dbg !19719
  %313 = icmp ne i64 %312, 0, !dbg !19719
  br i1 %313, label %314, label %326, !dbg !19721

314:                                              ; preds = %293
  %315 = load ptr, ptr %12, align 8, !dbg !19722
  %316 = load i64, ptr %19, align 8, !dbg !19724
  %317 = getelementptr inbounds i8, ptr %315, i64 %316, !dbg !19725
  %318 = getelementptr inbounds i8, ptr %317, i64 1, !dbg !19726
  store ptr %318, ptr %20, align 8, !dbg !19727
  %319 = load ptr, ptr %20, align 8, !dbg !19728
  %320 = load i8, ptr %319, align 1, !dbg !19730
  %321 = sext i8 %320 to i32, !dbg !19730
  %322 = icmp eq i32 %321, 0, !dbg !19731
  br i1 %322, label %323, label %325, !dbg !19732

323:                                              ; preds = %314
  %324 = load ptr, ptr %12, align 8, !dbg !19733
  store ptr %324, ptr %20, align 8, !dbg !19734
  br label %325, !dbg !19735

325:                                              ; preds = %323, %314
  br label %328, !dbg !19736

326:                                              ; preds = %293
  %327 = load ptr, ptr %12, align 8, !dbg !19737
  store ptr %327, ptr %20, align 8, !dbg !19739
  br label %328

328:                                              ; preds = %326, %325
  %329 = load i32, ptr %7, align 4, !dbg !19740
  %330 = load ptr, ptr %20, align 8, !dbg !19740
  %331 = load ptr, ptr %11, align 8, !dbg !19740
  %332 = call i32 @fstatat(i32 noundef %329, ptr noundef %330, ptr noundef %331, i32 noundef 256) #17, !dbg !19740
  %333 = icmp slt i32 %332, 0, !dbg !19740
  %334 = zext i1 %333 to i32, !dbg !19740
  %335 = sext i32 %334 to i64, !dbg !19740
  %336 = icmp ne i64 %335, 0, !dbg !19740
  br i1 %336, label %337, label %338, !dbg !19742

337:                                              ; preds = %328
  br label %470, !dbg !19743

338:                                              ; preds = %328
  %339 = load ptr, ptr %11, align 8, !dbg !19744
  %340 = getelementptr inbounds %struct.stat, ptr %339, i32 0, i32 3, !dbg !19744
  %341 = load i32, ptr %340, align 8, !dbg !19744
  %342 = and i32 %341, 61440, !dbg !19744
  %343 = icmp eq i32 %342, 40960, !dbg !19744
  %344 = zext i1 %343 to i32, !dbg !19744
  %345 = sext i32 %344 to i64, !dbg !19744
  %346 = icmp ne i64 %345, 0, !dbg !19744
  br i1 %346, label %347, label %419, !dbg !19746

347:                                              ; preds = %338
  call void @llvm.dbg.declare(metadata ptr %25, metadata !19747, metadata !DIExpression()), !dbg !19749
  call void @llvm.dbg.declare(metadata ptr %26, metadata !19750, metadata !DIExpression()), !dbg !19751
  %348 = load i32, ptr %18, align 4, !dbg !19752
  %349 = add nsw i32 %348, 1, !dbg !19752
  store i32 %349, ptr %18, align 4, !dbg !19752
  %350 = icmp sgt i32 %349, 20, !dbg !19752
  %351 = zext i1 %350 to i32, !dbg !19752
  %352 = sext i32 %351 to i64, !dbg !19752
  %353 = icmp ne i64 %352, 0, !dbg !19752
  br i1 %353, label %354, label %356, !dbg !19754

354:                                              ; preds = %347
  %355 = call ptr @__errno_location() #21, !dbg !19755
  store i32 40, ptr %355, align 4, !dbg !19757
  br label %470, !dbg !19758

356:                                              ; preds = %347
  %357 = load i32, ptr %7, align 4, !dbg !19759
  %358 = load ptr, ptr %20, align 8, !dbg !19760
  %359 = getelementptr inbounds [4096 x i8], ptr %25, i64 0, i64 0, !dbg !19761
  %360 = call i64 @readlinkat(i32 noundef %357, ptr noundef %358, ptr noundef %359, i64 noundef 4095) #17, !dbg !19762
  %361 = trunc i64 %360 to i32, !dbg !19763
  store i32 %361, ptr %21, align 4, !dbg !19764
  %362 = load i32, ptr %21, align 4, !dbg !19765
  %363 = icmp slt i32 %362, 0, !dbg !19765
  %364 = zext i1 %363 to i32, !dbg !19765
  %365 = sext i32 %364 to i64, !dbg !19765
  %366 = icmp ne i64 %365, 0, !dbg !19765
  br i1 %366, label %367, label %368, !dbg !19767

367:                                              ; preds = %356
  br label %470, !dbg !19768

368:                                              ; preds = %356
  %369 = load i32, ptr %21, align 4, !dbg !19769
  %370 = sext i32 %369 to i64, !dbg !19770
  %371 = getelementptr inbounds [4096 x i8], ptr %25, i64 0, i64 %370, !dbg !19770
  store i8 0, ptr %371, align 1, !dbg !19771
  %372 = load ptr, ptr %16, align 8, !dbg !19772
  %373 = call i64 @strlen(ptr noundef %372) #20, !dbg !19773
  store i64 %373, ptr %26, align 8, !dbg !19774
  %374 = load i32, ptr %21, align 4, !dbg !19775
  %375 = sext i32 %374 to i64, !dbg !19775
  %376 = load i64, ptr %26, align 8, !dbg !19775
  %377 = add nsw i64 %375, %376, !dbg !19775
  %378 = icmp sge i64 %377, 4096, !dbg !19775
  %379 = zext i1 %378 to i32, !dbg !19775
  %380 = sext i32 %379 to i64, !dbg !19775
  %381 = icmp ne i64 %380, 0, !dbg !19775
  br i1 %381, label %382, label %384, !dbg !19777

382:                                              ; preds = %368
  %383 = call ptr @__errno_location() #21, !dbg !19778
  store i32 36, ptr %383, align 4, !dbg !19780
  br label %470, !dbg !19781

384:                                              ; preds = %368
  %385 = load i32, ptr %21, align 4, !dbg !19782
  %386 = sext i32 %385 to i64, !dbg !19783
  %387 = getelementptr inbounds [4096 x i8], ptr %14, i64 0, i64 %386, !dbg !19783
  %388 = load ptr, ptr %16, align 8, !dbg !19784
  %389 = load i64, ptr %26, align 8, !dbg !19785
  %390 = add i64 %389, 1, !dbg !19786
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %387, ptr align 1 %388, i64 %390, i1 false), !dbg !19787
  %391 = getelementptr inbounds [4096 x i8], ptr %14, i64 0, i64 0, !dbg !19788
  %392 = getelementptr inbounds [4096 x i8], ptr %25, i64 0, i64 0, !dbg !19788
  %393 = load i32, ptr %21, align 4, !dbg !19789
  %394 = sext i32 %393 to i64, !dbg !19790
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %391, ptr align 16 %392, i64 %394, i1 false), !dbg !19788
  store ptr %391, ptr %16, align 8, !dbg !19791
  %395 = getelementptr inbounds [4096 x i8], ptr %25, i64 0, i64 0, !dbg !19792
  %396 = load i8, ptr %395, align 16, !dbg !19792
  %397 = sext i8 %396 to i32, !dbg !19792
  %398 = icmp eq i32 %397, 47, !dbg !19794
  br i1 %398, label %399, label %402, !dbg !19795

399:                                              ; preds = %384
  %400 = load ptr, ptr %12, align 8, !dbg !19796
  %401 = getelementptr inbounds i8, ptr %400, i64 1, !dbg !19797
  store ptr %401, ptr %13, align 8, !dbg !19798
  br label %418, !dbg !19799

402:                                              ; preds = %384
  %403 = load ptr, ptr %13, align 8, !dbg !19800
  %404 = load ptr, ptr %12, align 8, !dbg !19802
  %405 = getelementptr inbounds i8, ptr %404, i64 1, !dbg !19803
  %406 = icmp ugt ptr %403, %405, !dbg !19804
  br i1 %406, label %407, label %417, !dbg !19805

407:                                              ; preds = %402
  br label %408, !dbg !19806

408:                                              ; preds = %415, %407
  %409 = load ptr, ptr %13, align 8, !dbg !19807
  %410 = getelementptr inbounds i8, ptr %409, i32 -1, !dbg !19807
  store ptr %410, ptr %13, align 8, !dbg !19807
  %411 = getelementptr inbounds i8, ptr %410, i64 -1, !dbg !19808
  %412 = load i8, ptr %411, align 1, !dbg !19808
  %413 = sext i8 %412 to i32, !dbg !19808
  %414 = icmp ne i32 %413, 47, !dbg !19809
  br i1 %414, label %415, label %416, !dbg !19806

415:                                              ; preds = %408
  br label %408, !dbg !19806, !llvm.loop !19810

416:                                              ; preds = %408
  br label %417, !dbg !19806

417:                                              ; preds = %416, %402
  br label %418

418:                                              ; preds = %417, %399
  br label %438, !dbg !19812

419:                                              ; preds = %338
  %420 = load ptr, ptr %11, align 8, !dbg !19813
  %421 = getelementptr inbounds %struct.stat, ptr %420, i32 0, i32 3, !dbg !19813
  %422 = load i32, ptr %421, align 8, !dbg !19813
  %423 = and i32 %422, 61440, !dbg !19813
  %424 = icmp eq i32 %423, 16384, !dbg !19813
  br i1 %424, label %430, label %425, !dbg !19813

425:                                              ; preds = %419
  %426 = load ptr, ptr %16, align 8, !dbg !19813
  %427 = load i8, ptr %426, align 1, !dbg !19813
  %428 = sext i8 %427 to i32, !dbg !19813
  %429 = icmp ne i32 %428, 0, !dbg !19813
  br label %430

430:                                              ; preds = %425, %419
  %431 = phi i1 [ false, %419 ], [ %429, %425 ], !dbg !19815
  %432 = zext i1 %431 to i32, !dbg !19813
  %433 = sext i32 %432 to i64, !dbg !19813
  %434 = icmp ne i64 %433, 0, !dbg !19813
  br i1 %434, label %435, label %437, !dbg !19816

435:                                              ; preds = %430
  %436 = call ptr @__errno_location() #21, !dbg !19817
  store i32 20, ptr %436, align 4, !dbg !19819
  br label %470, !dbg !19820

437:                                              ; preds = %430
  br label %438

438:                                              ; preds = %437, %418
  br label %439

439:                                              ; preds = %438, %208
  br label %440

440:                                              ; preds = %439, %173
  br label %441

441:                                              ; preds = %440
  br label %442, !dbg !19821

442:                                              ; preds = %441
  %443 = load ptr, ptr %16, align 8, !dbg !19822
  store ptr %443, ptr %15, align 8, !dbg !19823
  br label %121, !dbg !19824, !llvm.loop !19825

444:                                              ; preds = %159, %121
  %445 = load ptr, ptr %13, align 8, !dbg !19827
  %446 = load ptr, ptr %12, align 8, !dbg !19829
  %447 = getelementptr inbounds i8, ptr %446, i64 1, !dbg !19830
  %448 = icmp ugt ptr %445, %447, !dbg !19831
  br i1 %448, label %449, label %458, !dbg !19832

449:                                              ; preds = %444
  %450 = load ptr, ptr %13, align 8, !dbg !19833
  %451 = getelementptr inbounds i8, ptr %450, i64 -1, !dbg !19833
  %452 = load i8, ptr %451, align 1, !dbg !19833
  %453 = sext i8 %452 to i32, !dbg !19833
  %454 = icmp eq i32 %453, 47, !dbg !19834
  br i1 %454, label %455, label %458, !dbg !19835

455:                                              ; preds = %449
  %456 = load ptr, ptr %13, align 8, !dbg !19836
  %457 = getelementptr inbounds i8, ptr %456, i32 -1, !dbg !19836
  store ptr %457, ptr %13, align 8, !dbg !19836
  br label %458, !dbg !19836

458:                                              ; preds = %455, %449, %444
  %459 = load ptr, ptr %13, align 8, !dbg !19837
  store i8 0, ptr %459, align 1, !dbg !19838
  %460 = load ptr, ptr %10, align 8, !dbg !19839
  %461 = icmp eq ptr %460, null, !dbg !19839
  br i1 %461, label %466, label %462, !dbg !19839

462:                                              ; preds = %458
  %463 = load ptr, ptr %10, align 8, !dbg !19839
  %464 = load ptr, ptr %12, align 8, !dbg !19839
  %465 = icmp eq ptr %463, %464, !dbg !19839
  br i1 %465, label %466, label %467, !dbg !19842

466:                                              ; preds = %462, %458
  br label %468, !dbg !19842

467:                                              ; preds = %462
  call void @__assert_fail(ptr noundef @.str.426, ptr noundef @.str.1.427, i32 noundef 188, ptr noundef @__PRETTY_FUNCTION__.realpathat2) #23, !dbg !19839
  unreachable, !dbg !19839

468:                                              ; preds = %466
  %469 = load ptr, ptr %12, align 8, !dbg !19843
  store ptr %469, ptr %6, align 8, !dbg !19844
  br label %485, !dbg !19844

470:                                              ; preds = %435, %382, %367, %354, %337, %284, %248
  call void @llvm.dbg.label(metadata !19845), !dbg !19846
  %471 = load ptr, ptr %10, align 8, !dbg !19847
  %472 = icmp eq ptr %471, null, !dbg !19847
  br i1 %472, label %477, label %473, !dbg !19847

473:                                              ; preds = %470
  %474 = load ptr, ptr %10, align 8, !dbg !19847
  %475 = load ptr, ptr %12, align 8, !dbg !19847
  %476 = icmp eq ptr %474, %475, !dbg !19847
  br i1 %476, label %477, label %478, !dbg !19850

477:                                              ; preds = %473, %470
  br label %479, !dbg !19850

478:                                              ; preds = %473
  call void @__assert_fail(ptr noundef @.str.426, ptr noundef @.str.1.427, i32 noundef 192, ptr noundef @__PRETTY_FUNCTION__.realpathat2) #23, !dbg !19847
  unreachable, !dbg !19847

479:                                              ; preds = %477
  %480 = load ptr, ptr %10, align 8, !dbg !19851
  %481 = icmp eq ptr %480, null, !dbg !19853
  br i1 %481, label %482, label %484, !dbg !19854

482:                                              ; preds = %479
  %483 = load ptr, ptr %12, align 8, !dbg !19855
  call void @free(ptr noundef %483) #17, !dbg !19856
  br label %484, !dbg !19856

484:                                              ; preds = %482, %479
  store ptr null, ptr %6, align 8, !dbg !19857
  br label %485, !dbg !19857

485:                                              ; preds = %484, %468, %103, %82, %79, %69, %53, %43
  %486 = load ptr, ptr %6, align 8, !dbg !19858
  ret ptr %486, !dbg !19858
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @get_funcs(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 !dbg !19859 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca [4096 x i8], align 16
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i32, align 4
  store ptr %0, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !19862, metadata !DIExpression()), !dbg !19863
  store ptr %1, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !19864, metadata !DIExpression()), !dbg !19865
  store ptr %2, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !19866, metadata !DIExpression()), !dbg !19867
  store ptr %3, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !19868, metadata !DIExpression()), !dbg !19869
  call void @llvm.dbg.declare(metadata ptr %10, metadata !19870, metadata !DIExpression()), !dbg !19871
  call void @llvm.dbg.declare(metadata ptr %11, metadata !19872, metadata !DIExpression()), !dbg !19873
  %14 = getelementptr inbounds [4096 x i8], ptr %10, i64 0, i64 0, !dbg !19874
  store ptr %14, ptr %11, align 8, !dbg !19873
  %15 = load ptr, ptr %9, align 8, !dbg !19875
  %16 = getelementptr inbounds %struct.stat, ptr %15, i32 0, i32 3, !dbg !19875
  %17 = load i32, ptr %16, align 8, !dbg !19875
  %18 = and i32 %17, 61440, !dbg !19875
  %19 = icmp eq i32 %18, 16384, !dbg !19875
  br i1 %19, label %20, label %112, !dbg !19877

20:                                               ; preds = %4
  %21 = load ptr, ptr %7, align 8, !dbg !19878
  %22 = load i8, ptr %21, align 1, !dbg !19881
  %23 = sext i8 %22 to i32, !dbg !19881
  %24 = icmp eq i32 %23, 0, !dbg !19882
  br i1 %24, label %25, label %29, !dbg !19883

25:                                               ; preds = %20
  %26 = load ptr, ptr %6, align 8, !dbg !19884
  %27 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %26, i32 0, i32 3, !dbg !19886
  %28 = load ptr, ptr %27, align 8, !dbg !19886
  store ptr %28, ptr %11, align 8, !dbg !19887
  br label %57, !dbg !19888

29:                                               ; preds = %20
  call void @llvm.dbg.declare(metadata ptr %12, metadata !19889, metadata !DIExpression()), !dbg !19891
  %30 = load ptr, ptr %7, align 8, !dbg !19892
  %31 = call ptr @rawmemchr(ptr noundef %30, i32 noundef 0) #20, !dbg !19893
  store ptr %31, ptr %12, align 8, !dbg !19891
  %32 = load ptr, ptr %12, align 8, !dbg !19894
  %33 = getelementptr inbounds i8, ptr %32, i64 -1, !dbg !19896
  %34 = load i8, ptr %33, align 1, !dbg !19897
  %35 = sext i8 %34 to i32, !dbg !19897
  %36 = icmp ne i32 %35, 47, !dbg !19898
  br i1 %36, label %37, label %38, !dbg !19899

37:                                               ; preds = %29
  store ptr @redir_funcs, ptr %5, align 8, !dbg !19900
  br label %119, !dbg !19900

38:                                               ; preds = %29
  call void @llvm.dbg.declare(metadata ptr %13, metadata !19901, metadata !DIExpression()), !dbg !19902
  %39 = load ptr, ptr %11, align 8, !dbg !19903
  %40 = load ptr, ptr %7, align 8, !dbg !19904
  %41 = load ptr, ptr %6, align 8, !dbg !19905
  %42 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %41, i32 0, i32 3, !dbg !19906
  %43 = load ptr, ptr %42, align 8, !dbg !19906
  %44 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %39, i64 noundef 4096, ptr noundef @.str.9.179, ptr noundef %40, ptr noundef %43) #17, !dbg !19907
  store i32 %44, ptr %13, align 4, !dbg !19902
  %45 = load i32, ptr %13, align 4, !dbg !19908
  %46 = icmp slt i32 %45, 0, !dbg !19908
  br i1 %46, label %50, label %47, !dbg !19908

47:                                               ; preds = %38
  %48 = load i32, ptr %13, align 4, !dbg !19908
  %49 = icmp sge i32 %48, 4096, !dbg !19908
  br label %50, !dbg !19908

50:                                               ; preds = %47, %38
  %51 = phi i1 [ true, %38 ], [ %49, %47 ]
  %52 = zext i1 %51 to i32, !dbg !19908
  %53 = sext i32 %52 to i64, !dbg !19908
  %54 = icmp ne i64 %53, 0, !dbg !19908
  br i1 %54, label %55, label %56, !dbg !19910

55:                                               ; preds = %50
  store ptr null, ptr %5, align 8, !dbg !19911
  br label %119, !dbg !19911

56:                                               ; preds = %50
  br label %57

57:                                               ; preds = %56, %25
  %58 = load ptr, ptr %6, align 8, !dbg !19912
  %59 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %58, i32 0, i32 1, !dbg !19914
  %60 = getelementptr inbounds %struct.anon.6, ptr %59, i32 0, i32 2, !dbg !19915
  %61 = load i32, ptr %60, align 8, !dbg !19915
  %62 = load ptr, ptr %11, align 8, !dbg !19916
  %63 = load ptr, ptr %9, align 8, !dbg !19917
  %64 = call i32 @fstatat(i32 noundef %61, ptr noundef %62, ptr noundef %63, i32 noundef 0) #17, !dbg !19918
  %65 = icmp slt i32 %64, 0, !dbg !19919
  br i1 %65, label %66, label %75, !dbg !19920

66:                                               ; preds = %57
  %67 = call ptr @__errno_location() #21, !dbg !19921
  %68 = load i32, ptr %67, align 4, !dbg !19921
  %69 = icmp ne i32 %68, 2, !dbg !19921
  %70 = zext i1 %69 to i32, !dbg !19921
  %71 = sext i32 %70 to i64, !dbg !19921
  %72 = icmp ne i64 %71, 0, !dbg !19921
  br i1 %72, label %73, label %74, !dbg !19924

73:                                               ; preds = %66
  store ptr null, ptr %5, align 8, !dbg !19925
  br label %119, !dbg !19925

74:                                               ; preds = %66
  store ptr @dirlist_funcs, ptr %5, align 8, !dbg !19926
  br label %119, !dbg !19926

75:                                               ; preds = %57
  %76 = load ptr, ptr %6, align 8, !dbg !19927
  %77 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %76, i32 0, i32 1, !dbg !19927
  %78 = getelementptr inbounds %struct.anon.6, ptr %77, i32 0, i32 1, !dbg !19927
  %79 = load i64, ptr %78, align 8, !dbg !19927
  %80 = add i64 %79, 1, !dbg !19927
  %81 = load ptr, ptr %11, align 8, !dbg !19927
  %82 = call i64 @strlen(ptr noundef %81) #20, !dbg !19927
  %83 = add i64 %80, %82, !dbg !19927
  %84 = add i64 %83, 1, !dbg !19927
  %85 = icmp uge i64 %84, 4096, !dbg !19927
  %86 = zext i1 %85 to i32, !dbg !19927
  %87 = sext i32 %86 to i64, !dbg !19927
  %88 = icmp ne i64 %87, 0, !dbg !19927
  br i1 %88, label %89, label %90, !dbg !19929

89:                                               ; preds = %75
  store ptr null, ptr %5, align 8, !dbg !19930
  br label %119, !dbg !19930

90:                                               ; preds = %75
  %91 = load ptr, ptr %8, align 8, !dbg !19931
  %92 = load ptr, ptr %6, align 8, !dbg !19932
  %93 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %92, i32 0, i32 1, !dbg !19933
  %94 = getelementptr inbounds %struct.anon.6, ptr %93, i32 0, i32 1, !dbg !19934
  %95 = load i64, ptr %94, align 8, !dbg !19934
  %96 = getelementptr inbounds i8, ptr %91, i64 %95, !dbg !19931
  store i8 47, ptr %96, align 1, !dbg !19935
  %97 = load ptr, ptr %8, align 8, !dbg !19936
  %98 = load ptr, ptr %6, align 8, !dbg !19937
  %99 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %98, i32 0, i32 1, !dbg !19938
  %100 = getelementptr inbounds %struct.anon.6, ptr %99, i32 0, i32 1, !dbg !19939
  %101 = load i64, ptr %100, align 8, !dbg !19939
  %102 = getelementptr inbounds i8, ptr %97, i64 %101, !dbg !19940
  %103 = getelementptr inbounds i8, ptr %102, i64 1, !dbg !19941
  %104 = load ptr, ptr %11, align 8, !dbg !19942
  %105 = load ptr, ptr %6, align 8, !dbg !19943
  %106 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %105, i32 0, i32 1, !dbg !19944
  %107 = getelementptr inbounds %struct.anon.6, ptr %106, i32 0, i32 1, !dbg !19945
  %108 = load i64, ptr %107, align 8, !dbg !19945
  %109 = sub i64 4096, %108, !dbg !19946
  %110 = sub i64 %109, 1, !dbg !19947
  %111 = call ptr @strncpy(ptr noundef %103, ptr noundef %104, i64 noundef %110) #17, !dbg !19948
  br label %112, !dbg !19949

112:                                              ; preds = %90, %4
  %113 = load ptr, ptr %9, align 8, !dbg !19950
  %114 = getelementptr inbounds %struct.stat, ptr %113, i32 0, i32 8, !dbg !19952
  %115 = load i64, ptr %114, align 8, !dbg !19952
  %116 = icmp slt i64 %115, 16384, !dbg !19953
  br i1 %116, label %117, label %118, !dbg !19954

117:                                              ; preds = %112
  store ptr @mmap_funcs, ptr %5, align 8, !dbg !19955
  br label %119, !dbg !19955

118:                                              ; preds = %112
  store ptr @sendfile_funcs, ptr %5, align 8, !dbg !19956
  br label %119, !dbg !19956

119:                                              ; preds = %118, %117, %89, %74, %73, %55, %37
  %120 = load ptr, ptr %5, align 8, !dbg !19957
  ret ptr %120, !dbg !19957
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @create_cache_entry_from_funcs(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 !dbg !19958 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  store ptr %0, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !19961, metadata !DIExpression()), !dbg !19962
  store ptr %1, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !19963, metadata !DIExpression()), !dbg !19964
  store ptr %2, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !19965, metadata !DIExpression()), !dbg !19966
  store ptr %3, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !19967, metadata !DIExpression()), !dbg !19968
  call void @llvm.dbg.declare(metadata ptr %10, metadata !19969, metadata !DIExpression()), !dbg !19970
  %11 = load ptr, ptr %9, align 8, !dbg !19971
  %12 = getelementptr inbounds %struct.cache_funcs_t_, ptr %11, i32 0, i32 3, !dbg !19972
  %13 = load i64, ptr %12, align 8, !dbg !19972
  %14 = add i64 96, %13, !dbg !19973
  %15 = call noalias ptr @malloc(i64 noundef %14) #18, !dbg !19974
  store ptr %15, ptr %10, align 8, !dbg !19975
  %16 = load ptr, ptr %10, align 8, !dbg !19976
  %17 = icmp ne ptr %16, null, !dbg !19976
  %18 = xor i1 %17, true, !dbg !19976
  %19 = zext i1 %18 to i32, !dbg !19976
  %20 = sext i32 %19 to i64, !dbg !19976
  %21 = icmp ne i64 %20, 0, !dbg !19976
  br i1 %21, label %22, label %23, !dbg !19978

22:                                               ; preds = %4
  store ptr null, ptr %5, align 8, !dbg !19979
  br label %52, !dbg !19979

23:                                               ; preds = %4
  %24 = load ptr, ptr %9, align 8, !dbg !19980
  %25 = getelementptr inbounds %struct.cache_funcs_t_, ptr %24, i32 0, i32 1, !dbg !19980
  %26 = load ptr, ptr %25, align 8, !dbg !19980
  %27 = load ptr, ptr %10, align 8, !dbg !19980
  %28 = load ptr, ptr %6, align 8, !dbg !19980
  %29 = load ptr, ptr %7, align 8, !dbg !19980
  %30 = load ptr, ptr %8, align 8, !dbg !19980
  %31 = call zeroext i1 %26(ptr noundef %27, ptr noundef %28, ptr noundef %29, ptr noundef %30), !dbg !19980
  %32 = xor i1 %31, true, !dbg !19980
  %33 = xor i1 %32, true, !dbg !19980
  %34 = zext i1 %33 to i32, !dbg !19980
  %35 = sext i32 %34 to i64, !dbg !19980
  %36 = icmp ne i64 %35, 0, !dbg !19980
  br i1 %36, label %37, label %42, !dbg !19982

37:                                               ; preds = %23
  %38 = load ptr, ptr %9, align 8, !dbg !19983
  %39 = load ptr, ptr %10, align 8, !dbg !19985
  %40 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %39, i32 0, i32 3, !dbg !19986
  store ptr %38, ptr %40, align 8, !dbg !19987
  %41 = load ptr, ptr %10, align 8, !dbg !19988
  store ptr %41, ptr %5, align 8, !dbg !19989
  br label %52, !dbg !19989

42:                                               ; preds = %23
  %43 = load ptr, ptr %10, align 8, !dbg !19990
  call void @free(ptr noundef %43) #17, !dbg !19991
  %44 = load ptr, ptr %9, align 8, !dbg !19992
  %45 = icmp ne ptr %44, @mmap_funcs, !dbg !19994
  br i1 %45, label %46, label %47, !dbg !19995

46:                                               ; preds = %42
  store ptr null, ptr %5, align 8, !dbg !19996
  br label %52, !dbg !19996

47:                                               ; preds = %42
  %48 = load ptr, ptr %6, align 8, !dbg !19997
  %49 = load ptr, ptr %7, align 8, !dbg !19998
  %50 = load ptr, ptr %8, align 8, !dbg !19999
  %51 = call ptr @create_cache_entry_from_funcs(ptr noundef %48, ptr noundef %49, ptr noundef %50, ptr noundef @sendfile_funcs), !dbg !20000
  store ptr %51, ptr %5, align 8, !dbg !20001
  br label %52, !dbg !20001

52:                                               ; preds = %47, %46, %37, %22
  %53 = load ptr, ptr %5, align 8, !dbg !20002
  ret ptr %53, !dbg !20002
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @sendfile_serve(ptr noundef %0, ptr noundef %1) #0 !dbg !20003 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %15 = alloca ptr, align 8
  %16 = alloca ptr, align 8
  %17 = alloca [4096 x i8], align 16
  %18 = alloca i64, align 8
  %19 = alloca i32, align 4
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca ptr, align 8
  %23 = alloca ptr, align 8
  %24 = alloca i64, align 8
  %25 = alloca ptr, align 8
  %26 = alloca i32, align 4
  store ptr %0, ptr %13, align 8
  call void @llvm.dbg.declare(metadata ptr %13, metadata !20004, metadata !DIExpression()), !dbg !20005
  store ptr %1, ptr %14, align 8
  call void @llvm.dbg.declare(metadata ptr %14, metadata !20006, metadata !DIExpression()), !dbg !20007
  call void @llvm.dbg.declare(metadata ptr %15, metadata !20008, metadata !DIExpression()), !dbg !20009
  %27 = load ptr, ptr %14, align 8, !dbg !20010
  store ptr %27, ptr %15, align 8, !dbg !20009
  call void @llvm.dbg.declare(metadata ptr %16, metadata !20011, metadata !DIExpression()), !dbg !20012
  %28 = load ptr, ptr %15, align 8, !dbg !20013
  %29 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %28, i64 1, !dbg !20014
  store ptr %29, ptr %16, align 8, !dbg !20012
  call void @llvm.dbg.declare(metadata ptr %17, metadata !20015, metadata !DIExpression()), !dbg !20016
  call void @llvm.dbg.declare(metadata ptr %18, metadata !20017, metadata !DIExpression()), !dbg !20018
  call void @llvm.dbg.declare(metadata ptr %19, metadata !20019, metadata !DIExpression()), !dbg !20020
  call void @llvm.dbg.declare(metadata ptr %20, metadata !20021, metadata !DIExpression()), !dbg !20022
  call void @llvm.dbg.declare(metadata ptr %21, metadata !20023, metadata !DIExpression()), !dbg !20024
  call void @llvm.dbg.declare(metadata ptr %22, metadata !20025, metadata !DIExpression()), !dbg !20026
  call void @llvm.dbg.declare(metadata ptr %23, metadata !20027, metadata !DIExpression()), !dbg !20028
  call void @llvm.dbg.declare(metadata ptr %24, metadata !20029, metadata !DIExpression()), !dbg !20030
  %30 = load ptr, ptr %16, align 8, !dbg !20031
  %31 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %30, i32 0, i32 0, !dbg !20033
  %32 = getelementptr inbounds %struct.lwan_value_t_, ptr %31, i32 0, i32 1, !dbg !20034
  %33 = load i64, ptr %32, align 8, !dbg !20034
  %34 = icmp ne i64 %33, 0, !dbg !20031
  br i1 %34, label %35, label %55, !dbg !20035

35:                                               ; preds = %2
  %36 = load ptr, ptr %13, align 8, !dbg !20036
  %37 = getelementptr inbounds %struct.lwan_request_t_, ptr %36, i32 0, i32 0, !dbg !20037
  %38 = load i32, ptr %37, align 8, !dbg !20037
  %39 = and i32 %38, 16, !dbg !20038
  %40 = icmp ne i32 %39, 0, !dbg !20038
  br i1 %40, label %41, label %55, !dbg !20039

41:                                               ; preds = %35
  store i64 0, ptr %20, align 8, !dbg !20040
  %42 = load ptr, ptr %16, align 8, !dbg !20042
  %43 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %42, i32 0, i32 0, !dbg !20043
  %44 = getelementptr inbounds %struct.lwan_value_t_, ptr %43, i32 0, i32 1, !dbg !20044
  %45 = load i64, ptr %44, align 8, !dbg !20044
  store i64 %45, ptr %21, align 8, !dbg !20045
  %46 = load ptr, ptr @compression_gzip, align 8, !dbg !20046
  store ptr %46, ptr %22, align 8, !dbg !20047
  %47 = load ptr, ptr %16, align 8, !dbg !20048
  %48 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %47, i32 0, i32 0, !dbg !20049
  %49 = getelementptr inbounds %struct.lwan_value_t_, ptr %48, i32 0, i32 0, !dbg !20050
  %50 = load ptr, ptr %49, align 8, !dbg !20050
  store ptr %50, ptr %23, align 8, !dbg !20051
  %51 = load ptr, ptr %16, align 8, !dbg !20052
  %52 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %51, i32 0, i32 0, !dbg !20053
  %53 = getelementptr inbounds %struct.lwan_value_t_, ptr %52, i32 0, i32 1, !dbg !20054
  %54 = load i64, ptr %53, align 8, !dbg !20054
  store i64 %54, ptr %24, align 8, !dbg !20055
  store i32 200, ptr %19, align 4, !dbg !20056
  br label %144, !dbg !20057

55:                                               ; preds = %35, %2
  %56 = load ptr, ptr %13, align 8, !dbg !20058
  %57 = load ptr, ptr %16, align 8, !dbg !20060
  %58 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %57, i32 0, i32 1, !dbg !20061
  %59 = getelementptr inbounds %struct.lwan_value_t_, ptr %58, i32 0, i32 1, !dbg !20062
  %60 = load i64, ptr %59, align 8, !dbg !20062
  store ptr %56, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !20063, metadata !DIExpression()), !dbg !20068
  store ptr %20, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !20070, metadata !DIExpression()), !dbg !20071
  store ptr %21, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !20072, metadata !DIExpression()), !dbg !20073
  store i64 %60, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !20074, metadata !DIExpression()), !dbg !20075
  call void @llvm.dbg.declare(metadata ptr %8, metadata !20076, metadata !DIExpression()), !dbg !20077
  call void @llvm.dbg.declare(metadata ptr %9, metadata !20078, metadata !DIExpression()), !dbg !20079
  %61 = load ptr, ptr %4, align 8, !dbg !20080
  %62 = getelementptr inbounds %struct.lwan_request_t_, ptr %61, i32 0, i32 7, !dbg !20081
  %63 = getelementptr inbounds %struct.anon.2, ptr %62, i32 0, i32 1, !dbg !20082
  %64 = load i64, ptr %63, align 8, !dbg !20083
  store i64 %64, ptr %8, align 8, !dbg !20084
  %65 = load ptr, ptr %4, align 8, !dbg !20085
  %66 = getelementptr inbounds %struct.lwan_request_t_, ptr %65, i32 0, i32 7, !dbg !20086
  %67 = getelementptr inbounds %struct.anon.2, ptr %66, i32 0, i32 1, !dbg !20087
  %68 = getelementptr inbounds %struct.anon.3, ptr %67, i32 0, i32 1, !dbg !20088
  %69 = load i64, ptr %68, align 8, !dbg !20088
  store i64 %69, ptr %9, align 8, !dbg !20089
  %70 = load i64, ptr %9, align 8, !dbg !20090
  %71 = icmp sle i64 %70, 0, !dbg !20090
  br i1 %71, label %72, label %75, !dbg !20090

72:                                               ; preds = %55
  %73 = load i64, ptr %8, align 8, !dbg !20090
  %74 = icmp sle i64 %73, 0, !dbg !20090
  br label %75

75:                                               ; preds = %72, %55
  %76 = phi i1 [ false, %55 ], [ %74, %72 ], !dbg !20092
  %77 = xor i1 %76, true, !dbg !20090
  %78 = zext i1 %76 to i32, !dbg !20090
  %79 = sext i32 %78 to i64, !dbg !20090
  br i1 %76, label %80, label %84, !dbg !20093

80:                                               ; preds = %75
  %81 = load ptr, ptr %5, align 8, !dbg !20094
  store i64 0, ptr %81, align 8, !dbg !20096
  %82 = load i64, ptr %7, align 8, !dbg !20097
  %83 = load ptr, ptr %6, align 8, !dbg !20098
  store i64 %82, ptr %83, align 8, !dbg !20099
  store i32 200, ptr %3, align 4, !dbg !20100
  br label %126, !dbg !20100

84:                                               ; preds = %75
  %85 = load i64, ptr %9, align 8, !dbg !20101
  %86 = load i64, ptr %8, align 8, !dbg !20101
  %87 = icmp sge i64 %85, %86, !dbg !20101
  %88 = zext i1 %87 to i32, !dbg !20101
  %89 = sext i32 %88 to i64, !dbg !20101
  br i1 %87, label %90, label %91, !dbg !20103

90:                                               ; preds = %84
  store i32 416, ptr %3, align 4, !dbg !20104
  br label %126, !dbg !20104

91:                                               ; preds = %84
  %92 = load i64, ptr %8, align 8, !dbg !20105
  %93 = load i64, ptr %7, align 8, !dbg !20105
  %94 = icmp sge i64 %92, %93, !dbg !20105
  br i1 %94, label %99, label %95, !dbg !20105

95:                                               ; preds = %91
  %96 = load i64, ptr %9, align 8, !dbg !20105
  %97 = load i64, ptr %7, align 8, !dbg !20105
  %98 = icmp sge i64 %96, %97, !dbg !20105
  br label %99, !dbg !20105

99:                                               ; preds = %95, %91
  %100 = phi i1 [ true, %91 ], [ %98, %95 ]
  %101 = zext i1 %100 to i32, !dbg !20105
  %102 = sext i32 %101 to i64, !dbg !20105
  br i1 %100, label %103, label %104, !dbg !20107

103:                                              ; preds = %99
  store i32 416, ptr %3, align 4, !dbg !20108
  br label %126, !dbg !20108

104:                                              ; preds = %99
  %105 = load i64, ptr %9, align 8, !dbg !20109
  %106 = icmp slt i64 %105, 0, !dbg !20111
  br i1 %106, label %107, label %111, !dbg !20112

107:                                              ; preds = %104
  %108 = load i64, ptr %7, align 8, !dbg !20113
  %109 = load i64, ptr %8, align 8, !dbg !20114
  %110 = sub nsw i64 %108, %109, !dbg !20115
  store i64 %110, ptr %9, align 8, !dbg !20116
  br label %115, !dbg !20117

111:                                              ; preds = %104
  %112 = load i64, ptr %8, align 8, !dbg !20118
  %113 = load i64, ptr %9, align 8, !dbg !20119
  %114 = sub nsw i64 %113, %112, !dbg !20119
  store i64 %114, ptr %9, align 8, !dbg !20119
  br label %115

115:                                              ; preds = %111, %107
  %116 = load i64, ptr %9, align 8, !dbg !20120
  %117 = icmp sle i64 %116, 0, !dbg !20120
  %118 = zext i1 %117 to i32, !dbg !20120
  %119 = sext i32 %118 to i64, !dbg !20120
  br i1 %117, label %120, label %121, !dbg !20122

120:                                              ; preds = %115
  store i32 416, ptr %3, align 4, !dbg !20123
  br label %126, !dbg !20123

121:                                              ; preds = %115
  %122 = load i64, ptr %8, align 8, !dbg !20124
  %123 = load ptr, ptr %5, align 8, !dbg !20125
  store i64 %122, ptr %123, align 8, !dbg !20126
  %124 = load i64, ptr %9, align 8, !dbg !20127
  %125 = load ptr, ptr %6, align 8, !dbg !20128
  store i64 %124, ptr %125, align 8, !dbg !20129
  store i32 206, ptr %3, align 4, !dbg !20130
  br label %126, !dbg !20130

126:                                              ; preds = %121, %120, %103, %90, %80
  %127 = load i32, ptr %3, align 4, !dbg !20131
  store i32 %127, ptr %19, align 4, !dbg !20132
  %128 = load i32, ptr %19, align 4, !dbg !20133
  %129 = icmp eq i32 %128, 416, !dbg !20133
  %130 = zext i1 %129 to i32, !dbg !20133
  %131 = sext i32 %130 to i64, !dbg !20133
  %132 = icmp ne i64 %131, 0, !dbg !20133
  br i1 %132, label %133, label %134, !dbg !20135

133:                                              ; preds = %126
  store i32 416, ptr %12, align 4, !dbg !20136
  br label %230, !dbg !20136

134:                                              ; preds = %126
  %135 = load ptr, ptr @compression_none, align 8, !dbg !20137
  store ptr %135, ptr %22, align 8, !dbg !20138
  %136 = load ptr, ptr %16, align 8, !dbg !20139
  %137 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %136, i32 0, i32 1, !dbg !20140
  %138 = getelementptr inbounds %struct.lwan_value_t_, ptr %137, i32 0, i32 0, !dbg !20141
  %139 = load ptr, ptr %138, align 8, !dbg !20141
  store ptr %139, ptr %23, align 8, !dbg !20142
  %140 = load ptr, ptr %16, align 8, !dbg !20143
  %141 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %140, i32 0, i32 1, !dbg !20144
  %142 = getelementptr inbounds %struct.lwan_value_t_, ptr %141, i32 0, i32 1, !dbg !20145
  %143 = load i64, ptr %142, align 8, !dbg !20145
  store i64 %143, ptr %24, align 8, !dbg !20146
  br label %144

144:                                              ; preds = %134, %41
  %145 = load ptr, ptr %13, align 8, !dbg !20147
  %146 = load ptr, ptr %15, align 8, !dbg !20149
  %147 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %146, i32 0, i32 1, !dbg !20150
  %148 = getelementptr inbounds %struct.anon.7, ptr %147, i32 0, i32 1, !dbg !20151
  %149 = load i64, ptr %148, align 8, !dbg !20151
  store ptr %145, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %10, metadata !20152, metadata !DIExpression()), !dbg !20156
  store i64 %149, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !20158, metadata !DIExpression()), !dbg !20159
  %150 = load ptr, ptr %10, align 8, !dbg !20160
  %151 = getelementptr inbounds %struct.lwan_request_t_, ptr %150, i32 0, i32 7, !dbg !20161
  %152 = load i64, ptr %151, align 8, !dbg !20162
  %153 = icmp ne i64 %152, 0, !dbg !20160
  br i1 %153, label %154, label %160, !dbg !20163

154:                                              ; preds = %144
  %155 = load i64, ptr %11, align 8, !dbg !20164
  %156 = load ptr, ptr %10, align 8, !dbg !20165
  %157 = getelementptr inbounds %struct.lwan_request_t_, ptr %156, i32 0, i32 7, !dbg !20166
  %158 = load i64, ptr %157, align 8, !dbg !20167
  %159 = icmp sle i64 %155, %158, !dbg !20168
  br label %160

160:                                              ; preds = %154, %144
  %161 = phi i1 [ false, %144 ], [ %159, %154 ], !dbg !20169
  br i1 %161, label %162, label %163, !dbg !20170

162:                                              ; preds = %160
  store i32 304, ptr %19, align 4, !dbg !20171
  br label %163, !dbg !20172

163:                                              ; preds = %162, %160
  %164 = load ptr, ptr %13, align 8, !dbg !20173
  %165 = load i32, ptr %19, align 4, !dbg !20174
  %166 = load ptr, ptr %15, align 8, !dbg !20175
  %167 = load i64, ptr %24, align 8, !dbg !20176
  %168 = load ptr, ptr %22, align 8, !dbg !20177
  %169 = getelementptr inbounds [4096 x i8], ptr %17, i64 0, i64 0, !dbg !20178
  %170 = call i64 @prepare_headers(ptr noundef %164, i32 noundef %165, ptr noundef %166, i64 noundef %167, ptr noundef %168, ptr noundef %169, i64 noundef 512), !dbg !20179
  store i64 %170, ptr %18, align 8, !dbg !20180
  %171 = load i64, ptr %18, align 8, !dbg !20181
  %172 = icmp ne i64 %171, 0, !dbg !20181
  %173 = xor i1 %172, true, !dbg !20181
  %174 = zext i1 %173 to i32, !dbg !20181
  %175 = sext i32 %174 to i64, !dbg !20181
  %176 = icmp ne i64 %175, 0, !dbg !20181
  br i1 %176, label %177, label %178, !dbg !20183

177:                                              ; preds = %163
  store i32 500, ptr %12, align 4, !dbg !20184
  br label %230, !dbg !20184

178:                                              ; preds = %163
  %179 = load ptr, ptr %13, align 8, !dbg !20185
  %180 = getelementptr inbounds %struct.lwan_request_t_, ptr %179, i32 0, i32 0, !dbg !20187
  %181 = load i32, ptr %180, align 8, !dbg !20187
  %182 = and i32 %181, 2, !dbg !20188
  %183 = icmp ne i32 %182, 0, !dbg !20188
  br i1 %183, label %187, label %184, !dbg !20189

184:                                              ; preds = %178
  %185 = load i32, ptr %19, align 4, !dbg !20190
  %186 = icmp eq i32 %185, 304, !dbg !20191
  br i1 %186, label %187, label %192, !dbg !20192

187:                                              ; preds = %184, %178
  %188 = load ptr, ptr %13, align 8, !dbg !20193
  %189 = getelementptr inbounds [4096 x i8], ptr %17, i64 0, i64 0, !dbg !20195
  %190 = load i64, ptr %18, align 8, !dbg !20196
  %191 = call i64 @lwan_write(ptr noundef %188, ptr noundef %189, i64 noundef %190), !dbg !20197
  br label %228, !dbg !20198

192:                                              ; preds = %184
  call void @llvm.dbg.declare(metadata ptr %25, metadata !20199, metadata !DIExpression()), !dbg !20201
  %193 = load ptr, ptr %13, align 8, !dbg !20202
  %194 = getelementptr inbounds %struct.lwan_request_t_, ptr %193, i32 0, i32 8, !dbg !20203
  %195 = getelementptr inbounds %struct.lwan_response_t_, ptr %194, i32 0, i32 4, !dbg !20204
  %196 = getelementptr inbounds %struct.anon.5, ptr %195, i32 0, i32 2, !dbg !20205
  %197 = load ptr, ptr %196, align 8, !dbg !20205
  store ptr %197, ptr %25, align 8, !dbg !20201
  call void @llvm.dbg.declare(metadata ptr %26, metadata !20206, metadata !DIExpression()), !dbg !20207
  %198 = load ptr, ptr %13, align 8, !dbg !20208
  %199 = load ptr, ptr %25, align 8, !dbg !20209
  %200 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %199, i32 0, i32 1, !dbg !20210
  %201 = getelementptr inbounds %struct.anon.6, ptr %200, i32 0, i32 2, !dbg !20211
  %202 = load i32, ptr %201, align 8, !dbg !20211
  %203 = load ptr, ptr %23, align 8, !dbg !20212
  %204 = load ptr, ptr %25, align 8, !dbg !20213
  %205 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %204, i32 0, i32 2, !dbg !20214
  %206 = load i32, ptr %205, align 8, !dbg !20214
  %207 = call i32 @lwan_openat(ptr noundef %198, i32 noundef %202, ptr noundef %203, i32 noundef %206), !dbg !20215
  store i32 %207, ptr %26, align 4, !dbg !20207
  %208 = load i32, ptr %26, align 4, !dbg !20216
  %209 = icmp slt i32 %208, 0, !dbg !20216
  %210 = zext i1 %209 to i32, !dbg !20216
  %211 = sext i32 %210 to i64, !dbg !20216
  %212 = icmp ne i64 %211, 0, !dbg !20216
  br i1 %212, label %213, label %218, !dbg !20218

213:                                              ; preds = %192
  %214 = load i32, ptr %26, align 4, !dbg !20219
  switch i32 %214, label %217 [
    i32 -13, label %215
    i32 -23, label %216
  ], !dbg !20221

215:                                              ; preds = %213
  store i32 403, ptr %12, align 4, !dbg !20222
  br label %230, !dbg !20222

216:                                              ; preds = %213
  store i32 503, ptr %12, align 4, !dbg !20224
  br label %230, !dbg !20224

217:                                              ; preds = %213
  store i32 404, ptr %12, align 4, !dbg !20225
  br label %230, !dbg !20225

218:                                              ; preds = %192
  %219 = load ptr, ptr %13, align 8, !dbg !20226
  %220 = getelementptr inbounds [4096 x i8], ptr %17, i64 0, i64 0, !dbg !20227
  %221 = load i64, ptr %18, align 8, !dbg !20228
  %222 = call i64 @lwan_send(ptr noundef %219, ptr noundef %220, i64 noundef %221, i32 noundef 32768), !dbg !20229
  %223 = load ptr, ptr %13, align 8, !dbg !20230
  %224 = load i32, ptr %26, align 4, !dbg !20231
  %225 = load i64, ptr %20, align 8, !dbg !20232
  %226 = load i64, ptr %21, align 8, !dbg !20233
  %227 = call i64 @lwan_sendfile(ptr noundef %223, i32 noundef %224, i64 noundef %225, i64 noundef %226), !dbg !20234
  br label %228

228:                                              ; preds = %218, %187
  %229 = load i32, ptr %19, align 4, !dbg !20235
  store i32 %229, ptr %12, align 4, !dbg !20236
  br label %230, !dbg !20236

230:                                              ; preds = %228, %217, %216, %215, %177, %133
  %231 = load i32, ptr %12, align 4, !dbg !20237
  ret i32 %231, !dbg !20237
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @sendfile_init(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 !dbg !20238 {
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i1, align 1
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca %struct.stat, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store ptr %0, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !20239, metadata !DIExpression()), !dbg !20240
  store ptr %1, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !20241, metadata !DIExpression()), !dbg !20242
  store ptr %2, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %10, metadata !20243, metadata !DIExpression()), !dbg !20244
  store ptr %3, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !20245, metadata !DIExpression()), !dbg !20246
  call void @llvm.dbg.declare(metadata ptr %12, metadata !20247, metadata !DIExpression()), !dbg !20248
  %16 = load ptr, ptr %8, align 8, !dbg !20249
  %17 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %16, i64 1, !dbg !20250
  store ptr %17, ptr %12, align 8, !dbg !20248
  call void @llvm.dbg.declare(metadata ptr %13, metadata !20251, metadata !DIExpression()), !dbg !20252
  %18 = load ptr, ptr %10, align 8, !dbg !20253
  %19 = load ptr, ptr %9, align 8, !dbg !20254
  %20 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %19, i32 0, i32 1, !dbg !20255
  %21 = getelementptr inbounds %struct.anon.6, ptr %20, i32 0, i32 1, !dbg !20256
  %22 = load i64, ptr %21, align 8, !dbg !20256
  %23 = getelementptr inbounds i8, ptr %18, i64 %22, !dbg !20257
  %24 = call ptr @lwan_determine_mime_type_for_file_name(ptr noundef %23) #20, !dbg !20258
  %25 = load ptr, ptr %8, align 8, !dbg !20259
  %26 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %25, i32 0, i32 2, !dbg !20260
  store ptr %24, ptr %26, align 8, !dbg !20261
  %27 = load ptr, ptr %9, align 8, !dbg !20262
  %28 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %27, i32 0, i32 5, !dbg !20262
  %29 = load i8, ptr %28, align 8, !dbg !20262
  %30 = trunc i8 %29 to i1, !dbg !20262
  %31 = xor i1 %30, true, !dbg !20262
  %32 = zext i1 %31 to i32, !dbg !20262
  %33 = sext i32 %32 to i64, !dbg !20262
  %34 = icmp ne i64 %33, 0, !dbg !20262
  br i1 %34, label %35, label %36, !dbg !20264

35:                                               ; preds = %4
  br label %108, !dbg !20265

36:                                               ; preds = %4
  call void @llvm.dbg.declare(metadata ptr %14, metadata !20266, metadata !DIExpression()), !dbg !20267
  %37 = load ptr, ptr %12, align 8, !dbg !20268
  %38 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %37, i32 0, i32 0, !dbg !20269
  %39 = getelementptr inbounds %struct.lwan_value_t_, ptr %38, i32 0, i32 0, !dbg !20270
  %40 = load ptr, ptr %10, align 8, !dbg !20271
  %41 = load ptr, ptr %9, align 8, !dbg !20272
  %42 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %41, i32 0, i32 1, !dbg !20273
  %43 = getelementptr inbounds %struct.anon.6, ptr %42, i32 0, i32 1, !dbg !20274
  %44 = load i64, ptr %43, align 8, !dbg !20274
  %45 = getelementptr inbounds i8, ptr %40, i64 %44, !dbg !20275
  %46 = getelementptr inbounds i8, ptr %45, i64 1, !dbg !20276
  %47 = call i32 (ptr, ptr, ...) @asprintf(ptr noundef %39, ptr noundef @.str.19.173, ptr noundef %46) #17, !dbg !20277
  store i32 %47, ptr %14, align 4, !dbg !20267
  %48 = load i32, ptr %14, align 4, !dbg !20278
  %49 = icmp slt i32 %48, 0, !dbg !20278
  br i1 %49, label %53, label %50, !dbg !20278

50:                                               ; preds = %36
  %51 = load i32, ptr %14, align 4, !dbg !20278
  %52 = icmp sge i32 %51, 4096, !dbg !20278
  br label %53, !dbg !20278

53:                                               ; preds = %50, %36
  %54 = phi i1 [ true, %36 ], [ %52, %50 ]
  %55 = zext i1 %54 to i32, !dbg !20278
  %56 = sext i32 %55 to i64, !dbg !20278
  %57 = icmp ne i64 %56, 0, !dbg !20278
  br i1 %57, label %58, label %59, !dbg !20280

58:                                               ; preds = %53
  br label %108, !dbg !20281

59:                                               ; preds = %53
  call void @llvm.dbg.declare(metadata ptr %15, metadata !20282, metadata !DIExpression()), !dbg !20283
  %60 = load ptr, ptr %9, align 8, !dbg !20284
  %61 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %60, i32 0, i32 1, !dbg !20285
  %62 = getelementptr inbounds %struct.anon.6, ptr %61, i32 0, i32 2, !dbg !20286
  %63 = load i32, ptr %62, align 8, !dbg !20286
  %64 = load ptr, ptr %12, align 8, !dbg !20287
  %65 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %64, i32 0, i32 0, !dbg !20288
  %66 = getelementptr inbounds %struct.lwan_value_t_, ptr %65, i32 0, i32 0, !dbg !20289
  %67 = load ptr, ptr %66, align 8, !dbg !20289
  %68 = call i32 @fstatat(i32 noundef %63, ptr noundef %67, ptr noundef %13, i32 noundef 0) #17, !dbg !20290
  store i32 %68, ptr %15, align 4, !dbg !20283
  %69 = load i32, ptr %15, align 4, !dbg !20291
  %70 = icmp sge i32 %69, 0, !dbg !20291
  br i1 %70, label %71, label %90, !dbg !20291

71:                                               ; preds = %59
  %72 = getelementptr inbounds %struct.stat, ptr %13, i32 0, i32 12, !dbg !20291
  %73 = getelementptr inbounds %struct.anon.3, ptr %72, i32 0, i32 0, !dbg !20291
  %74 = load i64, ptr %73, align 8, !dbg !20291
  %75 = load ptr, ptr %11, align 8, !dbg !20291
  %76 = getelementptr inbounds %struct.stat, ptr %75, i32 0, i32 12, !dbg !20291
  %77 = getelementptr inbounds %struct.anon.3, ptr %76, i32 0, i32 0, !dbg !20291
  %78 = load i64, ptr %77, align 8, !dbg !20291
  %79 = icmp sge i64 %74, %78, !dbg !20291
  br i1 %79, label %80, label %90, !dbg !20291

80:                                               ; preds = %71
  %81 = getelementptr inbounds %struct.stat, ptr %13, i32 0, i32 8, !dbg !20291
  %82 = load i64, ptr %81, align 8, !dbg !20291
  %83 = load ptr, ptr %11, align 8, !dbg !20291
  %84 = getelementptr inbounds %struct.stat, ptr %83, i32 0, i32 8, !dbg !20291
  %85 = load i64, ptr %84, align 8, !dbg !20291
  store i64 %82, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !20293, metadata !DIExpression()), !dbg !20294
  store i64 %85, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !20296, metadata !DIExpression()), !dbg !20297
  %86 = load i64, ptr %5, align 8, !dbg !20298
  %87 = add i64 %86, 27, !dbg !20299
  %88 = load i64, ptr %6, align 8, !dbg !20300
  %89 = icmp ult i64 %87, %88, !dbg !20301
  br label %90

90:                                               ; preds = %80, %71, %59
  %91 = phi i1 [ false, %71 ], [ false, %59 ], [ %89, %80 ], !dbg !20302
  %92 = xor i1 %91, true, !dbg !20291
  %93 = xor i1 %92, true, !dbg !20291
  %94 = zext i1 %93 to i32, !dbg !20291
  %95 = sext i32 %94 to i64, !dbg !20291
  %96 = icmp ne i64 %95, 0, !dbg !20291
  br i1 %96, label %97, label %103, !dbg !20303

97:                                               ; preds = %90
  %98 = getelementptr inbounds %struct.stat, ptr %13, i32 0, i32 8, !dbg !20304
  %99 = load i64, ptr %98, align 8, !dbg !20304
  %100 = load ptr, ptr %12, align 8, !dbg !20306
  %101 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %100, i32 0, i32 0, !dbg !20307
  %102 = getelementptr inbounds %struct.lwan_value_t_, ptr %101, i32 0, i32 1, !dbg !20308
  store i64 %99, ptr %102, align 8, !dbg !20309
  br label %115, !dbg !20310

103:                                              ; preds = %90
  %104 = load ptr, ptr %12, align 8, !dbg !20311
  %105 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %104, i32 0, i32 0, !dbg !20313
  %106 = getelementptr inbounds %struct.lwan_value_t_, ptr %105, i32 0, i32 0, !dbg !20314
  %107 = load ptr, ptr %106, align 8, !dbg !20314
  call void @free(ptr noundef %107) #17, !dbg !20315
  br label %108, !dbg !20315

108:                                              ; preds = %103, %58, %35
  call void @llvm.dbg.label(metadata !20316), !dbg !20317
  %109 = load ptr, ptr %12, align 8, !dbg !20318
  %110 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %109, i32 0, i32 0, !dbg !20319
  %111 = getelementptr inbounds %struct.lwan_value_t_, ptr %110, i32 0, i32 0, !dbg !20320
  store ptr null, ptr %111, align 8, !dbg !20321
  %112 = load ptr, ptr %12, align 8, !dbg !20322
  %113 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %112, i32 0, i32 0, !dbg !20323
  %114 = getelementptr inbounds %struct.lwan_value_t_, ptr %113, i32 0, i32 1, !dbg !20324
  store i64 0, ptr %114, align 8, !dbg !20325
  br label %115

115:                                              ; preds = %108, %97
  %116 = load ptr, ptr %11, align 8, !dbg !20326
  %117 = getelementptr inbounds %struct.stat, ptr %116, i32 0, i32 8, !dbg !20327
  %118 = load i64, ptr %117, align 8, !dbg !20327
  %119 = load ptr, ptr %12, align 8, !dbg !20328
  %120 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %119, i32 0, i32 1, !dbg !20329
  %121 = getelementptr inbounds %struct.lwan_value_t_, ptr %120, i32 0, i32 1, !dbg !20330
  store i64 %118, ptr %121, align 8, !dbg !20331
  %122 = load ptr, ptr %10, align 8, !dbg !20332
  %123 = load ptr, ptr %9, align 8, !dbg !20333
  %124 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %123, i32 0, i32 1, !dbg !20334
  %125 = getelementptr inbounds %struct.anon.6, ptr %124, i32 0, i32 1, !dbg !20335
  %126 = load i64, ptr %125, align 8, !dbg !20335
  %127 = getelementptr inbounds i8, ptr %122, i64 %126, !dbg !20336
  %128 = getelementptr inbounds i8, ptr %127, i64 1, !dbg !20337
  %129 = call noalias ptr @strdup(ptr noundef %128) #17, !dbg !20338
  %130 = load ptr, ptr %12, align 8, !dbg !20339
  %131 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %130, i32 0, i32 1, !dbg !20340
  %132 = getelementptr inbounds %struct.lwan_value_t_, ptr %131, i32 0, i32 0, !dbg !20341
  store ptr %129, ptr %132, align 8, !dbg !20342
  %133 = load ptr, ptr %12, align 8, !dbg !20343
  %134 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %133, i32 0, i32 1, !dbg !20343
  %135 = getelementptr inbounds %struct.lwan_value_t_, ptr %134, i32 0, i32 0, !dbg !20343
  %136 = load ptr, ptr %135, align 8, !dbg !20343
  %137 = icmp ne ptr %136, null, !dbg !20343
  %138 = xor i1 %137, true, !dbg !20343
  %139 = zext i1 %138 to i32, !dbg !20343
  %140 = sext i32 %139 to i64, !dbg !20343
  %141 = icmp ne i64 %140, 0, !dbg !20343
  br i1 %141, label %142, label %147, !dbg !20345

142:                                              ; preds = %115
  %143 = load ptr, ptr %12, align 8, !dbg !20346
  %144 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %143, i32 0, i32 0, !dbg !20348
  %145 = getelementptr inbounds %struct.lwan_value_t_, ptr %144, i32 0, i32 0, !dbg !20349
  %146 = load ptr, ptr %145, align 8, !dbg !20349
  call void @free(ptr noundef %146) #17, !dbg !20350
  store i1 false, ptr %7, align 1, !dbg !20351
  br label %148, !dbg !20351

147:                                              ; preds = %115
  store i1 true, ptr %7, align 1, !dbg !20352
  br label %148, !dbg !20352

148:                                              ; preds = %147, %142
  %149 = load i1, ptr %7, align 1, !dbg !20353
  ret i1 %149, !dbg !20353
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @sendfile_free(ptr noundef %0) #0 !dbg !20354 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !20355, metadata !DIExpression()), !dbg !20356
  call void @llvm.dbg.declare(metadata ptr %3, metadata !20357, metadata !DIExpression()), !dbg !20358
  %4 = load ptr, ptr %2, align 8, !dbg !20359
  store ptr %4, ptr %3, align 8, !dbg !20358
  %5 = load ptr, ptr %3, align 8, !dbg !20360
  %6 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %5, i32 0, i32 0, !dbg !20361
  %7 = getelementptr inbounds %struct.lwan_value_t_, ptr %6, i32 0, i32 0, !dbg !20362
  %8 = load ptr, ptr %7, align 8, !dbg !20362
  call void @free(ptr noundef %8) #17, !dbg !20363
  %9 = load ptr, ptr %3, align 8, !dbg !20364
  %10 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %9, i32 0, i32 1, !dbg !20365
  %11 = getelementptr inbounds %struct.lwan_value_t_, ptr %10, i32 0, i32 0, !dbg !20366
  %12 = load ptr, ptr %11, align 8, !dbg !20366
  call void @free(ptr noundef %12) #17, !dbg !20367
  ret void, !dbg !20368
}

; Function Attrs: nounwind
declare i32 @asprintf(ptr noundef, ptr noundef, ...) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @prepare_headers(ptr noundef %0, i32 noundef %1, ptr noundef %2, i64 noundef %3, ptr noundef %4, ptr noundef %5, i64 noundef %6) #0 !dbg !20369 {
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca i64, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca i64, align 8
  %15 = alloca [3 x %struct.lwan_key_value_t_], align 16
  store ptr %0, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !20372, metadata !DIExpression()), !dbg !20373
  store i32 %1, ptr %9, align 4
  call void @llvm.dbg.declare(metadata ptr %9, metadata !20374, metadata !DIExpression()), !dbg !20375
  store ptr %2, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %10, metadata !20376, metadata !DIExpression()), !dbg !20377
  store i64 %3, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !20378, metadata !DIExpression()), !dbg !20379
  store ptr %4, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %12, metadata !20380, metadata !DIExpression()), !dbg !20381
  store ptr %5, ptr %13, align 8
  call void @llvm.dbg.declare(metadata ptr %13, metadata !20382, metadata !DIExpression()), !dbg !20383
  store i64 %6, ptr %14, align 8
  call void @llvm.dbg.declare(metadata ptr %14, metadata !20384, metadata !DIExpression()), !dbg !20385
  call void @llvm.dbg.declare(metadata ptr %15, metadata !20386, metadata !DIExpression()), !dbg !20388
  %16 = getelementptr inbounds [3 x %struct.lwan_key_value_t_], ptr %15, i64 0, i64 0, !dbg !20389
  %17 = load ptr, ptr %8, align 8, !dbg !20390
  %18 = getelementptr inbounds %struct.lwan_request_t_, ptr %17, i32 0, i32 8, !dbg !20391
  %19 = getelementptr inbounds %struct.lwan_response_t_, ptr %18, i32 0, i32 3, !dbg !20392
  store ptr %16, ptr %19, align 8, !dbg !20393
  %20 = load i64, ptr %11, align 8, !dbg !20394
  %21 = load ptr, ptr %8, align 8, !dbg !20395
  %22 = getelementptr inbounds %struct.lwan_request_t_, ptr %21, i32 0, i32 8, !dbg !20396
  %23 = getelementptr inbounds %struct.lwan_response_t_, ptr %22, i32 0, i32 2, !dbg !20397
  store i64 %20, ptr %23, align 8, !dbg !20398
  br label %24, !dbg !20399

24:                                               ; preds = %7
  %25 = getelementptr inbounds [3 x %struct.lwan_key_value_t_], ptr %15, i64 0, i64 0, !dbg !20400
  %26 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %25, i32 0, i32 0, !dbg !20400
  store ptr @.str.13.174, ptr %26, align 16, !dbg !20400
  %27 = load ptr, ptr %10, align 8, !dbg !20400
  %28 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %27, i32 0, i32 1, !dbg !20400
  %29 = getelementptr inbounds %struct.anon.7, ptr %28, i32 0, i32 0, !dbg !20400
  %30 = getelementptr inbounds [31 x i8], ptr %29, i64 0, i64 0, !dbg !20400
  %31 = getelementptr inbounds [3 x %struct.lwan_key_value_t_], ptr %15, i64 0, i64 0, !dbg !20400
  %32 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %31, i32 0, i32 1, !dbg !20400
  store ptr %30, ptr %32, align 8, !dbg !20400
  br label %33, !dbg !20400

33:                                               ; preds = %24
  %34 = load ptr, ptr %12, align 8, !dbg !20402
  %35 = icmp ne ptr %34, null, !dbg !20402
  br i1 %35, label %36, label %50, !dbg !20404

36:                                               ; preds = %33
  br label %37, !dbg !20405

37:                                               ; preds = %36
  %38 = getelementptr inbounds [3 x %struct.lwan_key_value_t_], ptr %15, i64 0, i64 1, !dbg !20407
  %39 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %38, i32 0, i32 0, !dbg !20407
  store ptr @.str.14.175, ptr %39, align 16, !dbg !20407
  %40 = load ptr, ptr %12, align 8, !dbg !20407
  %41 = getelementptr inbounds [3 x %struct.lwan_key_value_t_], ptr %15, i64 0, i64 1, !dbg !20407
  %42 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %41, i32 0, i32 1, !dbg !20407
  store ptr %40, ptr %42, align 8, !dbg !20407
  br label %43, !dbg !20407

43:                                               ; preds = %37
  br label %44, !dbg !20409

44:                                               ; preds = %43
  %45 = getelementptr inbounds [3 x %struct.lwan_key_value_t_], ptr %15, i64 0, i64 2, !dbg !20410
  %46 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %45, i32 0, i32 0, !dbg !20410
  store ptr null, ptr %46, align 16, !dbg !20410
  %47 = getelementptr inbounds [3 x %struct.lwan_key_value_t_], ptr %15, i64 0, i64 2, !dbg !20410
  %48 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %47, i32 0, i32 1, !dbg !20410
  store ptr null, ptr %48, align 8, !dbg !20410
  br label %49, !dbg !20410

49:                                               ; preds = %44
  br label %57, !dbg !20412

50:                                               ; preds = %33
  br label %51, !dbg !20413

51:                                               ; preds = %50
  %52 = getelementptr inbounds [3 x %struct.lwan_key_value_t_], ptr %15, i64 0, i64 1, !dbg !20415
  %53 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %52, i32 0, i32 0, !dbg !20415
  store ptr null, ptr %53, align 16, !dbg !20415
  %54 = getelementptr inbounds [3 x %struct.lwan_key_value_t_], ptr %15, i64 0, i64 1, !dbg !20415
  %55 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %54, i32 0, i32 1, !dbg !20415
  store ptr null, ptr %55, align 8, !dbg !20415
  br label %56, !dbg !20415

56:                                               ; preds = %51
  br label %57

57:                                               ; preds = %56, %49
  %58 = load ptr, ptr %8, align 8, !dbg !20417
  %59 = load i32, ptr %9, align 4, !dbg !20418
  %60 = load ptr, ptr %13, align 8, !dbg !20419
  %61 = load i64, ptr %14, align 8, !dbg !20420
  %62 = call i64 @lwan_prepare_response_header(ptr noundef %58, i32 noundef %59, ptr noundef %60, i64 noundef %61), !dbg !20421
  ret i64 %62, !dbg !20422
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local i64 @lwan_prepare_response_header(ptr noundef %0, i32 noundef %1, ptr noundef %2, i64 noundef %3) #11 !dbg !13330 {
  %5 = alloca i64, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca i64, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca [25 x i8], align 16
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca ptr, align 8
  %18 = alloca i64, align 8
  %19 = alloca ptr, align 8
  %20 = alloca i64, align 8
  %21 = alloca ptr, align 8
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  %24 = alloca ptr, align 8
  %25 = alloca i64, align 8
  store ptr %0, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !13329, metadata !DIExpression()), !dbg !20423
  store i32 %1, ptr %7, align 4
  call void @llvm.dbg.declare(metadata ptr %7, metadata !13335, metadata !DIExpression()), !dbg !20424
  store ptr %2, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !13337, metadata !DIExpression()), !dbg !20425
  store i64 %3, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !13339, metadata !DIExpression()), !dbg !20426
  call void @llvm.dbg.declare(metadata ptr %10, metadata !13341, metadata !DIExpression()), !dbg !20427
  call void @llvm.dbg.declare(metadata ptr %11, metadata !13343, metadata !DIExpression()), !dbg !20428
  %26 = load ptr, ptr %8, align 8, !dbg !20429
  %27 = load i64, ptr %9, align 8, !dbg !20430
  %28 = getelementptr inbounds i8, ptr %26, i64 %27, !dbg !20431
  store ptr %28, ptr %11, align 8, !dbg !20428
  call void @llvm.dbg.declare(metadata ptr %12, metadata !13348, metadata !DIExpression()), !dbg !20432
  call void @llvm.dbg.declare(metadata ptr %13, metadata !13350, metadata !DIExpression()), !dbg !20433
  store i8 0, ptr %13, align 1, !dbg !20433
  call void @llvm.dbg.declare(metadata ptr %14, metadata !13352, metadata !DIExpression()), !dbg !20434
  store i8 0, ptr %14, align 1, !dbg !20434
  %29 = load ptr, ptr %8, align 8, !dbg !20435
  store ptr %29, ptr %10, align 8, !dbg !20436
  %30 = load ptr, ptr %6, align 8, !dbg !20437
  %31 = getelementptr inbounds %struct.lwan_request_t_, ptr %30, i32 0, i32 0, !dbg !20438
  %32 = load i32, ptr %31, align 8, !dbg !20438
  %33 = and i32 %32, 32, !dbg !20439
  %34 = icmp ne i32 %33, 0, !dbg !20439
  br i1 %34, label %35, label %49, !dbg !20440

35:                                               ; preds = %4
  br label %36, !dbg !20441

36:                                               ; preds = %35
  %37 = load ptr, ptr %10, align 8, !dbg !20442
  %38 = getelementptr inbounds i8, ptr %37, i64 9, !dbg !20442
  %39 = load ptr, ptr %11, align 8, !dbg !20442
  %40 = icmp uge ptr %38, %39, !dbg !20442
  %41 = zext i1 %40 to i32, !dbg !20442
  %42 = sext i32 %41 to i64, !dbg !20442
  %43 = icmp ne i64 %42, 0, !dbg !20442
  br i1 %43, label %44, label %45, !dbg !20443

44:                                               ; preds = %36
  store i64 0, ptr %5, align 8, !dbg !20442
  br label %575, !dbg !20442

45:                                               ; preds = %36
  %46 = load ptr, ptr %10, align 8, !dbg !20443
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %46, ptr align 1 @.str.10.110, i64 9, i1 false), !dbg !20443
  %47 = getelementptr inbounds i8, ptr %46, i64 9, !dbg !20443
  store ptr %47, ptr %10, align 8, !dbg !20443
  br label %48, !dbg !20443

48:                                               ; preds = %45
  br label %63, !dbg !20443

49:                                               ; preds = %4
  br label %50, !dbg !20444

50:                                               ; preds = %49
  %51 = load ptr, ptr %10, align 8, !dbg !20445
  %52 = getelementptr inbounds i8, ptr %51, i64 9, !dbg !20445
  %53 = load ptr, ptr %11, align 8, !dbg !20445
  %54 = icmp uge ptr %52, %53, !dbg !20445
  %55 = zext i1 %54 to i32, !dbg !20445
  %56 = sext i32 %55 to i64, !dbg !20445
  %57 = icmp ne i64 %56, 0, !dbg !20445
  br i1 %57, label %58, label %59, !dbg !20446

58:                                               ; preds = %50
  store i64 0, ptr %5, align 8, !dbg !20445
  br label %575, !dbg !20445

59:                                               ; preds = %50
  %60 = load ptr, ptr %10, align 8, !dbg !20446
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %60, ptr align 1 @.str.11.111, i64 9, i1 false), !dbg !20446
  %61 = getelementptr inbounds i8, ptr %60, i64 9, !dbg !20446
  store ptr %61, ptr %10, align 8, !dbg !20446
  br label %62, !dbg !20446

62:                                               ; preds = %59
  br label %63

63:                                               ; preds = %62, %48
  br label %64, !dbg !20447

64:                                               ; preds = %63
  call void @llvm.dbg.declare(metadata ptr %15, metadata !13369, metadata !DIExpression()), !dbg !20448
  %65 = load i32, ptr %7, align 4, !dbg !20448
  %66 = call ptr @lwan_http_status_as_string_with_code(i32 noundef %65) #20, !dbg !20448
  %67 = call i64 @strlen(ptr noundef %66) #20, !dbg !20448
  store i64 %67, ptr %15, align 8, !dbg !20448
  br label %68, !dbg !20448

68:                                               ; preds = %64
  %69 = load ptr, ptr %10, align 8, !dbg !20449
  %70 = load i64, ptr %15, align 8, !dbg !20449
  %71 = getelementptr inbounds i8, ptr %69, i64 %70, !dbg !20449
  %72 = load ptr, ptr %11, align 8, !dbg !20449
  %73 = icmp uge ptr %71, %72, !dbg !20449
  %74 = zext i1 %73 to i32, !dbg !20449
  %75 = sext i32 %74 to i64, !dbg !20449
  %76 = icmp ne i64 %75, 0, !dbg !20449
  br i1 %76, label %77, label %78, !dbg !20450

77:                                               ; preds = %68
  store i64 0, ptr %5, align 8, !dbg !20449
  br label %575, !dbg !20449

78:                                               ; preds = %68
  %79 = load ptr, ptr %10, align 8, !dbg !20450
  %80 = load i32, ptr %7, align 4, !dbg !20450
  %81 = call ptr @lwan_http_status_as_string_with_code(i32 noundef %80) #20, !dbg !20450
  %82 = load i64, ptr %15, align 8, !dbg !20450
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %79, ptr align 1 %81, i64 %82, i1 false), !dbg !20450
  %83 = getelementptr inbounds i8, ptr %79, i64 %82, !dbg !20450
  store ptr %83, ptr %10, align 8, !dbg !20450
  br label %84, !dbg !20450

84:                                               ; preds = %78
  br label %85, !dbg !20448

85:                                               ; preds = %84
  %86 = load ptr, ptr %6, align 8, !dbg !20451
  %87 = getelementptr inbounds %struct.lwan_request_t_, ptr %86, i32 0, i32 0, !dbg !20452
  %88 = load i32, ptr %87, align 8, !dbg !20452
  %89 = and i32 %88, 128, !dbg !20453
  %90 = icmp ne i32 %89, 0, !dbg !20453
  br i1 %90, label %91, label %105, !dbg !20454

91:                                               ; preds = %85
  br label %92, !dbg !20455

92:                                               ; preds = %91
  %93 = load ptr, ptr %10, align 8, !dbg !20456
  %94 = getelementptr inbounds i8, ptr %93, i64 28, !dbg !20456
  %95 = load ptr, ptr %11, align 8, !dbg !20456
  %96 = icmp uge ptr %94, %95, !dbg !20456
  %97 = zext i1 %96 to i32, !dbg !20456
  %98 = sext i32 %97 to i64, !dbg !20456
  %99 = icmp ne i64 %98, 0, !dbg !20456
  br i1 %99, label %100, label %101, !dbg !20457

100:                                              ; preds = %92
  store i64 0, ptr %5, align 8, !dbg !20456
  br label %575, !dbg !20456

101:                                              ; preds = %92
  %102 = load ptr, ptr %10, align 8, !dbg !20457
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %102, ptr align 1 @.str.12.112, i64 28, i1 false), !dbg !20457
  %103 = getelementptr inbounds i8, ptr %102, i64 28, !dbg !20457
  store ptr %103, ptr %10, align 8, !dbg !20457
  br label %104, !dbg !20457

104:                                              ; preds = %101
  br label %207, !dbg !20458

105:                                              ; preds = %85
  %106 = load ptr, ptr %6, align 8, !dbg !20459
  %107 = getelementptr inbounds %struct.lwan_request_t_, ptr %106, i32 0, i32 0, !dbg !20460
  %108 = load i32, ptr %107, align 8, !dbg !20460
  %109 = and i32 %108, 256, !dbg !20461
  %110 = icmp ne i32 %109, 0, !dbg !20461
  br i1 %110, label %111, label %112, !dbg !20462

111:                                              ; preds = %105
  br label %206, !dbg !20463

112:                                              ; preds = %105
  br label %113, !dbg !20464

113:                                              ; preds = %112
  %114 = load ptr, ptr %10, align 8, !dbg !20465
  %115 = getelementptr inbounds i8, ptr %114, i64 18, !dbg !20465
  %116 = load ptr, ptr %11, align 8, !dbg !20465
  %117 = icmp uge ptr %115, %116, !dbg !20465
  %118 = zext i1 %117 to i32, !dbg !20465
  %119 = sext i32 %118 to i64, !dbg !20465
  %120 = icmp ne i64 %119, 0, !dbg !20465
  br i1 %120, label %121, label %122, !dbg !20466

121:                                              ; preds = %113
  store i64 0, ptr %5, align 8, !dbg !20465
  br label %575, !dbg !20465

122:                                              ; preds = %113
  %123 = load ptr, ptr %10, align 8, !dbg !20466
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %123, ptr align 1 @.str.13.113, i64 18, i1 false), !dbg !20466
  %124 = getelementptr inbounds i8, ptr %123, i64 18, !dbg !20466
  store ptr %124, ptr %10, align 8, !dbg !20466
  br label %125, !dbg !20466

125:                                              ; preds = %122
  %126 = load ptr, ptr %6, align 8, !dbg !20467
  %127 = getelementptr inbounds %struct.lwan_request_t_, ptr %126, i32 0, i32 8, !dbg !20468
  %128 = getelementptr inbounds %struct.lwan_response_t_, ptr %127, i32 0, i32 4, !dbg !20469
  %129 = getelementptr inbounds %struct.anon.5, ptr %128, i32 0, i32 0, !dbg !20470
  %130 = load ptr, ptr %129, align 8, !dbg !20470
  %131 = icmp ne ptr %130, null, !dbg !20467
  br i1 %131, label %132, label %167, !dbg !20471

132:                                              ; preds = %125
  br label %133, !dbg !20472

133:                                              ; preds = %132
  call void @llvm.dbg.declare(metadata ptr %16, metadata !13405, metadata !DIExpression()), !dbg !20473
  call void @llvm.dbg.declare(metadata ptr %17, metadata !13408, metadata !DIExpression()), !dbg !20473
  %134 = load ptr, ptr %6, align 8, !dbg !20473
  %135 = getelementptr inbounds %struct.lwan_request_t_, ptr %134, i32 0, i32 8, !dbg !20473
  %136 = getelementptr inbounds %struct.lwan_response_t_, ptr %135, i32 0, i32 2, !dbg !20473
  %137 = load i64, ptr %136, align 8, !dbg !20473
  %138 = getelementptr inbounds [25 x i8], ptr %12, i64 0, i64 0, !dbg !20473
  %139 = call ptr @uint_to_string(i64 noundef %137, ptr noundef %138, ptr noundef %16), !dbg !20473
  store ptr %139, ptr %17, align 8, !dbg !20473
  %140 = load ptr, ptr %10, align 8, !dbg !20474
  %141 = load i64, ptr %16, align 8, !dbg !20474
  %142 = getelementptr inbounds i8, ptr %140, i64 %141, !dbg !20474
  %143 = load ptr, ptr %11, align 8, !dbg !20474
  %144 = icmp uge ptr %142, %143, !dbg !20474
  %145 = zext i1 %144 to i32, !dbg !20474
  %146 = sext i32 %145 to i64, !dbg !20474
  %147 = icmp ne i64 %146, 0, !dbg !20474
  br i1 %147, label %148, label %149, !dbg !20473

148:                                              ; preds = %133
  store i64 0, ptr %5, align 8, !dbg !20474
  br label %575, !dbg !20474

149:                                              ; preds = %133
  br label %150, !dbg !20473

150:                                              ; preds = %149
  %151 = load ptr, ptr %10, align 8, !dbg !20475
  %152 = load i64, ptr %16, align 8, !dbg !20475
  %153 = getelementptr inbounds i8, ptr %151, i64 %152, !dbg !20475
  %154 = load ptr, ptr %11, align 8, !dbg !20475
  %155 = icmp uge ptr %153, %154, !dbg !20475
  %156 = zext i1 %155 to i32, !dbg !20475
  %157 = sext i32 %156 to i64, !dbg !20475
  %158 = icmp ne i64 %157, 0, !dbg !20475
  br i1 %158, label %159, label %160, !dbg !20476

159:                                              ; preds = %150
  store i64 0, ptr %5, align 8, !dbg !20475
  br label %575, !dbg !20475

160:                                              ; preds = %150
  %161 = load ptr, ptr %10, align 8, !dbg !20476
  %162 = load ptr, ptr %17, align 8, !dbg !20476
  %163 = load i64, ptr %16, align 8, !dbg !20476
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %161, ptr align 1 %162, i64 %163, i1 false), !dbg !20476
  %164 = getelementptr inbounds i8, ptr %161, i64 %163, !dbg !20476
  store ptr %164, ptr %10, align 8, !dbg !20476
  br label %165, !dbg !20476

165:                                              ; preds = %160
  br label %166, !dbg !20473

166:                                              ; preds = %165
  br label %205, !dbg !20473

167:                                              ; preds = %125
  br label %168, !dbg !20477

168:                                              ; preds = %167
  call void @llvm.dbg.declare(metadata ptr %18, metadata !13415, metadata !DIExpression()), !dbg !20478
  call void @llvm.dbg.declare(metadata ptr %19, metadata !13418, metadata !DIExpression()), !dbg !20478
  %169 = load ptr, ptr %6, align 8, !dbg !20478
  %170 = getelementptr inbounds %struct.lwan_request_t_, ptr %169, i32 0, i32 8, !dbg !20478
  %171 = getelementptr inbounds %struct.lwan_response_t_, ptr %170, i32 0, i32 0, !dbg !20478
  %172 = load ptr, ptr %171, align 8, !dbg !20478
  %173 = getelementptr inbounds %struct.strbuf_t_, ptr %172, i32 0, i32 1, !dbg !20478
  %174 = getelementptr inbounds %struct.anon.3, ptr %173, i32 0, i32 1, !dbg !20478
  %175 = load i64, ptr %174, align 8, !dbg !20478
  %176 = getelementptr inbounds [25 x i8], ptr %12, i64 0, i64 0, !dbg !20478
  %177 = call ptr @uint_to_string(i64 noundef %175, ptr noundef %176, ptr noundef %18), !dbg !20478
  store ptr %177, ptr %19, align 8, !dbg !20478
  %178 = load ptr, ptr %10, align 8, !dbg !20479
  %179 = load i64, ptr %18, align 8, !dbg !20479
  %180 = getelementptr inbounds i8, ptr %178, i64 %179, !dbg !20479
  %181 = load ptr, ptr %11, align 8, !dbg !20479
  %182 = icmp uge ptr %180, %181, !dbg !20479
  %183 = zext i1 %182 to i32, !dbg !20479
  %184 = sext i32 %183 to i64, !dbg !20479
  %185 = icmp ne i64 %184, 0, !dbg !20479
  br i1 %185, label %186, label %187, !dbg !20478

186:                                              ; preds = %168
  store i64 0, ptr %5, align 8, !dbg !20479
  br label %575, !dbg !20479

187:                                              ; preds = %168
  br label %188, !dbg !20478

188:                                              ; preds = %187
  %189 = load ptr, ptr %10, align 8, !dbg !20480
  %190 = load i64, ptr %18, align 8, !dbg !20480
  %191 = getelementptr inbounds i8, ptr %189, i64 %190, !dbg !20480
  %192 = load ptr, ptr %11, align 8, !dbg !20480
  %193 = icmp uge ptr %191, %192, !dbg !20480
  %194 = zext i1 %193 to i32, !dbg !20480
  %195 = sext i32 %194 to i64, !dbg !20480
  %196 = icmp ne i64 %195, 0, !dbg !20480
  br i1 %196, label %197, label %198, !dbg !20481

197:                                              ; preds = %188
  store i64 0, ptr %5, align 8, !dbg !20480
  br label %575, !dbg !20480

198:                                              ; preds = %188
  %199 = load ptr, ptr %10, align 8, !dbg !20481
  %200 = load ptr, ptr %19, align 8, !dbg !20481
  %201 = load i64, ptr %18, align 8, !dbg !20481
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %199, ptr align 1 %200, i64 %201, i1 false), !dbg !20481
  %202 = getelementptr inbounds i8, ptr %199, i64 %201, !dbg !20481
  store ptr %202, ptr %10, align 8, !dbg !20481
  br label %203, !dbg !20481

203:                                              ; preds = %198
  br label %204, !dbg !20478

204:                                              ; preds = %203
  br label %205

205:                                              ; preds = %204, %166
  br label %206

206:                                              ; preds = %205, %111
  br label %207

207:                                              ; preds = %206, %104
  br label %208, !dbg !20482

208:                                              ; preds = %207
  %209 = load ptr, ptr %10, align 8, !dbg !20483
  %210 = getelementptr inbounds i8, ptr %209, i64 16, !dbg !20483
  %211 = load ptr, ptr %11, align 8, !dbg !20483
  %212 = icmp uge ptr %210, %211, !dbg !20483
  %213 = zext i1 %212 to i32, !dbg !20483
  %214 = sext i32 %213 to i64, !dbg !20483
  %215 = icmp ne i64 %214, 0, !dbg !20483
  br i1 %215, label %216, label %217, !dbg !20484

216:                                              ; preds = %208
  store i64 0, ptr %5, align 8, !dbg !20483
  br label %575, !dbg !20483

217:                                              ; preds = %208
  %218 = load ptr, ptr %10, align 8, !dbg !20484
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %218, ptr align 1 @.str.14.114, i64 16, i1 false), !dbg !20484
  %219 = getelementptr inbounds i8, ptr %218, i64 16, !dbg !20484
  store ptr %219, ptr %10, align 8, !dbg !20484
  br label %220, !dbg !20484

220:                                              ; preds = %217
  br label %221, !dbg !20485

221:                                              ; preds = %220
  call void @llvm.dbg.declare(metadata ptr %20, metadata !13429, metadata !DIExpression()), !dbg !20486
  %222 = load ptr, ptr %6, align 8, !dbg !20486
  %223 = getelementptr inbounds %struct.lwan_request_t_, ptr %222, i32 0, i32 8, !dbg !20486
  %224 = getelementptr inbounds %struct.lwan_response_t_, ptr %223, i32 0, i32 1, !dbg !20486
  %225 = load ptr, ptr %224, align 8, !dbg !20486
  %226 = call i64 @strlen(ptr noundef %225) #20, !dbg !20486
  store i64 %226, ptr %20, align 8, !dbg !20486
  br label %227, !dbg !20486

227:                                              ; preds = %221
  %228 = load ptr, ptr %10, align 8, !dbg !20487
  %229 = load i64, ptr %20, align 8, !dbg !20487
  %230 = getelementptr inbounds i8, ptr %228, i64 %229, !dbg !20487
  %231 = load ptr, ptr %11, align 8, !dbg !20487
  %232 = icmp uge ptr %230, %231, !dbg !20487
  %233 = zext i1 %232 to i32, !dbg !20487
  %234 = sext i32 %233 to i64, !dbg !20487
  %235 = icmp ne i64 %234, 0, !dbg !20487
  br i1 %235, label %236, label %237, !dbg !20488

236:                                              ; preds = %227
  store i64 0, ptr %5, align 8, !dbg !20487
  br label %575, !dbg !20487

237:                                              ; preds = %227
  %238 = load ptr, ptr %10, align 8, !dbg !20488
  %239 = load ptr, ptr %6, align 8, !dbg !20488
  %240 = getelementptr inbounds %struct.lwan_request_t_, ptr %239, i32 0, i32 8, !dbg !20488
  %241 = getelementptr inbounds %struct.lwan_response_t_, ptr %240, i32 0, i32 1, !dbg !20488
  %242 = load ptr, ptr %241, align 8, !dbg !20488
  %243 = load i64, ptr %20, align 8, !dbg !20488
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %238, ptr align 1 %242, i64 %243, i1 false), !dbg !20488
  %244 = getelementptr inbounds i8, ptr %238, i64 %243, !dbg !20488
  store ptr %244, ptr %10, align 8, !dbg !20488
  br label %245, !dbg !20488

245:                                              ; preds = %237
  br label %246, !dbg !20486

246:                                              ; preds = %245
  %247 = load ptr, ptr %6, align 8, !dbg !20489
  %248 = getelementptr inbounds %struct.lwan_request_t_, ptr %247, i32 0, i32 4, !dbg !20490
  %249 = load ptr, ptr %248, align 8, !dbg !20490
  %250 = getelementptr inbounds %struct.lwan_connection_t_, ptr %249, i32 0, i32 0, !dbg !20491
  %251 = load i32, ptr %250, align 8, !dbg !20491
  %252 = and i32 %251, 1, !dbg !20492
  %253 = icmp ne i32 %252, 0, !dbg !20492
  br i1 %253, label %254, label %268, !dbg !20493

254:                                              ; preds = %246
  br label %255, !dbg !20494

255:                                              ; preds = %254
  %256 = load ptr, ptr %10, align 8, !dbg !20495
  %257 = getelementptr inbounds i8, ptr %256, i64 24, !dbg !20495
  %258 = load ptr, ptr %11, align 8, !dbg !20495
  %259 = icmp uge ptr %257, %258, !dbg !20495
  %260 = zext i1 %259 to i32, !dbg !20495
  %261 = sext i32 %260 to i64, !dbg !20495
  %262 = icmp ne i64 %261, 0, !dbg !20495
  br i1 %262, label %263, label %264, !dbg !20496

263:                                              ; preds = %255
  store i64 0, ptr %5, align 8, !dbg !20495
  br label %575, !dbg !20495

264:                                              ; preds = %255
  %265 = load ptr, ptr %10, align 8, !dbg !20496
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %265, ptr align 1 @.str.15.115, i64 24, i1 false), !dbg !20496
  %266 = getelementptr inbounds i8, ptr %265, i64 24, !dbg !20496
  store ptr %266, ptr %10, align 8, !dbg !20496
  br label %267, !dbg !20496

267:                                              ; preds = %264
  br label %282, !dbg !20496

268:                                              ; preds = %246
  br label %269, !dbg !20497

269:                                              ; preds = %268
  %270 = load ptr, ptr %10, align 8, !dbg !20498
  %271 = getelementptr inbounds i8, ptr %270, i64 19, !dbg !20498
  %272 = load ptr, ptr %11, align 8, !dbg !20498
  %273 = icmp uge ptr %271, %272, !dbg !20498
  %274 = zext i1 %273 to i32, !dbg !20498
  %275 = sext i32 %274 to i64, !dbg !20498
  %276 = icmp ne i64 %275, 0, !dbg !20498
  br i1 %276, label %277, label %278, !dbg !20499

277:                                              ; preds = %269
  store i64 0, ptr %5, align 8, !dbg !20498
  br label %575, !dbg !20498

278:                                              ; preds = %269
  %279 = load ptr, ptr %10, align 8, !dbg !20499
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %279, ptr align 1 @.str.16.116, i64 19, i1 false), !dbg !20499
  %280 = getelementptr inbounds i8, ptr %279, i64 19, !dbg !20499
  store ptr %280, ptr %10, align 8, !dbg !20499
  br label %281, !dbg !20499

281:                                              ; preds = %278
  br label %282

282:                                              ; preds = %281, %267
  %283 = load i32, ptr %7, align 4, !dbg !20500
  %284 = icmp ult i32 %283, 400, !dbg !20501
  br i1 %284, label %285, label %404, !dbg !20502

285:                                              ; preds = %282
  %286 = load ptr, ptr %6, align 8, !dbg !20503
  %287 = getelementptr inbounds %struct.lwan_request_t_, ptr %286, i32 0, i32 8, !dbg !20504
  %288 = getelementptr inbounds %struct.lwan_response_t_, ptr %287, i32 0, i32 3, !dbg !20505
  %289 = load ptr, ptr %288, align 8, !dbg !20505
  %290 = icmp ne ptr %289, null, !dbg !20503
  br i1 %290, label %291, label %404, !dbg !20506

291:                                              ; preds = %285
  call void @llvm.dbg.declare(metadata ptr %21, metadata !13458, metadata !DIExpression()), !dbg !20507
  %292 = load ptr, ptr %6, align 8, !dbg !20508
  %293 = getelementptr inbounds %struct.lwan_request_t_, ptr %292, i32 0, i32 8, !dbg !20509
  %294 = getelementptr inbounds %struct.lwan_response_t_, ptr %293, i32 0, i32 3, !dbg !20510
  %295 = load ptr, ptr %294, align 8, !dbg !20510
  store ptr %295, ptr %21, align 8, !dbg !20511
  br label %296, !dbg !20512

296:                                              ; preds = %400, %291
  %297 = load ptr, ptr %21, align 8, !dbg !20513
  %298 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %297, i32 0, i32 0, !dbg !20514
  %299 = load ptr, ptr %298, align 8, !dbg !20514
  %300 = icmp ne ptr %299, null, !dbg !20515
  br i1 %300, label %301, label %403, !dbg !20515

301:                                              ; preds = %296
  %302 = load ptr, ptr %21, align 8, !dbg !20516
  %303 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %302, i32 0, i32 0, !dbg !20516
  %304 = load ptr, ptr %303, align 8, !dbg !20516
  %305 = call i32 @strcmp(ptr noundef %304, ptr noundef @.str.17.117) #20, !dbg !20516
  %306 = icmp ne i32 %305, 0, !dbg !20516
  %307 = xor i1 %306, true, !dbg !20516
  %308 = zext i1 %307 to i32, !dbg !20516
  %309 = sext i32 %308 to i64, !dbg !20516
  %310 = icmp ne i64 %309, 0, !dbg !20516
  br i1 %310, label %311, label %312, !dbg !20517

311:                                              ; preds = %301
  br label %400, !dbg !20518

312:                                              ; preds = %301
  %313 = load ptr, ptr %21, align 8, !dbg !20519
  %314 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %313, i32 0, i32 0, !dbg !20519
  %315 = load ptr, ptr %314, align 8, !dbg !20519
  %316 = call i32 @strcmp(ptr noundef %315, ptr noundef @.str.18.118) #20, !dbg !20519
  %317 = icmp ne i32 %316, 0, !dbg !20519
  %318 = xor i1 %317, true, !dbg !20519
  %319 = zext i1 %318 to i32, !dbg !20519
  %320 = sext i32 %319 to i64, !dbg !20519
  %321 = icmp ne i64 %320, 0, !dbg !20519
  br i1 %321, label %322, label %323, !dbg !20520

322:                                              ; preds = %312
  store i8 1, ptr %13, align 1, !dbg !20521
  br label %323, !dbg !20522

323:                                              ; preds = %322, %312
  %324 = load ptr, ptr %21, align 8, !dbg !20523
  %325 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %324, i32 0, i32 0, !dbg !20523
  %326 = load ptr, ptr %325, align 8, !dbg !20523
  %327 = call i32 @strcmp(ptr noundef %326, ptr noundef @.str.19.119) #20, !dbg !20523
  %328 = icmp ne i32 %327, 0, !dbg !20523
  %329 = xor i1 %328, true, !dbg !20523
  %330 = zext i1 %329 to i32, !dbg !20523
  %331 = sext i32 %330 to i64, !dbg !20523
  %332 = icmp ne i64 %331, 0, !dbg !20523
  br i1 %332, label %333, label %334, !dbg !20524

333:                                              ; preds = %323
  store i8 1, ptr %14, align 1, !dbg !20525
  br label %334, !dbg !20526

334:                                              ; preds = %333, %323
  %335 = load ptr, ptr %10, align 8, !dbg !20527
  %336 = getelementptr inbounds i8, ptr %335, i64 4, !dbg !20527
  %337 = load ptr, ptr %11, align 8, !dbg !20527
  %338 = icmp uge ptr %336, %337, !dbg !20527
  %339 = zext i1 %338 to i32, !dbg !20527
  %340 = sext i32 %339 to i64, !dbg !20527
  %341 = icmp ne i64 %340, 0, !dbg !20527
  br i1 %341, label %342, label %343, !dbg !20528

342:                                              ; preds = %334
  store i64 0, ptr %5, align 8, !dbg !20527
  br label %575, !dbg !20527

343:                                              ; preds = %334
  %344 = load ptr, ptr %10, align 8, !dbg !20529
  %345 = getelementptr inbounds i8, ptr %344, i32 1, !dbg !20529
  store ptr %345, ptr %10, align 8, !dbg !20529
  store i8 13, ptr %344, align 1, !dbg !20529
  %346 = load ptr, ptr %10, align 8, !dbg !20530
  %347 = getelementptr inbounds i8, ptr %346, i32 1, !dbg !20530
  store ptr %347, ptr %10, align 8, !dbg !20530
  store i8 10, ptr %346, align 1, !dbg !20530
  br label %348, !dbg !20531

348:                                              ; preds = %343
  call void @llvm.dbg.declare(metadata ptr %22, metadata !13491, metadata !DIExpression()), !dbg !20532
  %349 = load ptr, ptr %21, align 8, !dbg !20532
  %350 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %349, i32 0, i32 0, !dbg !20532
  %351 = load ptr, ptr %350, align 8, !dbg !20532
  %352 = call i64 @strlen(ptr noundef %351) #20, !dbg !20532
  store i64 %352, ptr %22, align 8, !dbg !20532
  br label %353, !dbg !20532

353:                                              ; preds = %348
  %354 = load ptr, ptr %10, align 8, !dbg !20533
  %355 = load i64, ptr %22, align 8, !dbg !20533
  %356 = getelementptr inbounds i8, ptr %354, i64 %355, !dbg !20533
  %357 = load ptr, ptr %11, align 8, !dbg !20533
  %358 = icmp uge ptr %356, %357, !dbg !20533
  %359 = zext i1 %358 to i32, !dbg !20533
  %360 = sext i32 %359 to i64, !dbg !20533
  %361 = icmp ne i64 %360, 0, !dbg !20533
  br i1 %361, label %362, label %363, !dbg !20534

362:                                              ; preds = %353
  store i64 0, ptr %5, align 8, !dbg !20533
  br label %575, !dbg !20533

363:                                              ; preds = %353
  %364 = load ptr, ptr %10, align 8, !dbg !20534
  %365 = load ptr, ptr %21, align 8, !dbg !20534
  %366 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %365, i32 0, i32 0, !dbg !20534
  %367 = load ptr, ptr %366, align 8, !dbg !20534
  %368 = load i64, ptr %22, align 8, !dbg !20534
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %364, ptr align 1 %367, i64 %368, i1 false), !dbg !20534
  %369 = getelementptr inbounds i8, ptr %364, i64 %368, !dbg !20534
  store ptr %369, ptr %10, align 8, !dbg !20534
  br label %370, !dbg !20534

370:                                              ; preds = %363
  br label %371, !dbg !20532

371:                                              ; preds = %370
  %372 = load ptr, ptr %10, align 8, !dbg !20535
  %373 = getelementptr inbounds i8, ptr %372, i32 1, !dbg !20535
  store ptr %373, ptr %10, align 8, !dbg !20535
  store i8 58, ptr %372, align 1, !dbg !20535
  %374 = load ptr, ptr %10, align 8, !dbg !20536
  %375 = getelementptr inbounds i8, ptr %374, i32 1, !dbg !20536
  store ptr %375, ptr %10, align 8, !dbg !20536
  store i8 32, ptr %374, align 1, !dbg !20536
  br label %376, !dbg !20537

376:                                              ; preds = %371
  call void @llvm.dbg.declare(metadata ptr %23, metadata !13500, metadata !DIExpression()), !dbg !20538
  %377 = load ptr, ptr %21, align 8, !dbg !20538
  %378 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %377, i32 0, i32 1, !dbg !20538
  %379 = load ptr, ptr %378, align 8, !dbg !20538
  %380 = call i64 @strlen(ptr noundef %379) #20, !dbg !20538
  store i64 %380, ptr %23, align 8, !dbg !20538
  br label %381, !dbg !20538

381:                                              ; preds = %376
  %382 = load ptr, ptr %10, align 8, !dbg !20539
  %383 = load i64, ptr %23, align 8, !dbg !20539
  %384 = getelementptr inbounds i8, ptr %382, i64 %383, !dbg !20539
  %385 = load ptr, ptr %11, align 8, !dbg !20539
  %386 = icmp uge ptr %384, %385, !dbg !20539
  %387 = zext i1 %386 to i32, !dbg !20539
  %388 = sext i32 %387 to i64, !dbg !20539
  %389 = icmp ne i64 %388, 0, !dbg !20539
  br i1 %389, label %390, label %391, !dbg !20540

390:                                              ; preds = %381
  store i64 0, ptr %5, align 8, !dbg !20539
  br label %575, !dbg !20539

391:                                              ; preds = %381
  %392 = load ptr, ptr %10, align 8, !dbg !20540
  %393 = load ptr, ptr %21, align 8, !dbg !20540
  %394 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %393, i32 0, i32 1, !dbg !20540
  %395 = load ptr, ptr %394, align 8, !dbg !20540
  %396 = load i64, ptr %23, align 8, !dbg !20540
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %392, ptr align 1 %395, i64 %396, i1 false), !dbg !20540
  %397 = getelementptr inbounds i8, ptr %392, i64 %396, !dbg !20540
  store ptr %397, ptr %10, align 8, !dbg !20540
  br label %398, !dbg !20540

398:                                              ; preds = %391
  br label %399, !dbg !20538

399:                                              ; preds = %398
  br label %400, !dbg !20541

400:                                              ; preds = %399, %311
  %401 = load ptr, ptr %21, align 8, !dbg !20542
  %402 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %401, i32 1, !dbg !20542
  store ptr %402, ptr %21, align 8, !dbg !20542
  br label %296, !dbg !20543, !llvm.loop !20544

403:                                              ; preds = %296
  br label %467, !dbg !20546

404:                                              ; preds = %285, %282
  %405 = load i32, ptr %7, align 4, !dbg !20547
  %406 = icmp eq i32 %405, 401, !dbg !20548
  br i1 %406, label %407, label %466, !dbg !20549

407:                                              ; preds = %404
  call void @llvm.dbg.declare(metadata ptr %24, metadata !13517, metadata !DIExpression()), !dbg !20550
  %408 = load ptr, ptr %6, align 8, !dbg !20551
  %409 = getelementptr inbounds %struct.lwan_request_t_, ptr %408, i32 0, i32 8, !dbg !20552
  %410 = getelementptr inbounds %struct.lwan_response_t_, ptr %409, i32 0, i32 3, !dbg !20553
  %411 = load ptr, ptr %410, align 8, !dbg !20553
  store ptr %411, ptr %24, align 8, !dbg !20554
  br label %412, !dbg !20555

412:                                              ; preds = %462, %407
  %413 = load ptr, ptr %24, align 8, !dbg !20556
  %414 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %413, i32 0, i32 0, !dbg !20557
  %415 = load ptr, ptr %414, align 8, !dbg !20557
  %416 = icmp ne ptr %415, null, !dbg !20558
  br i1 %416, label %417, label %465, !dbg !20558

417:                                              ; preds = %412
  %418 = load ptr, ptr %24, align 8, !dbg !20559
  %419 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %418, i32 0, i32 0, !dbg !20560
  %420 = load ptr, ptr %419, align 8, !dbg !20560
  %421 = call i32 @strcmp(ptr noundef %420, ptr noundef @.str.20.120) #20, !dbg !20561
  %422 = icmp ne i32 %421, 0, !dbg !20561
  br i1 %422, label %461, label %423, !dbg !20562

423:                                              ; preds = %417
  br label %424, !dbg !20563

424:                                              ; preds = %423
  %425 = load ptr, ptr %10, align 8, !dbg !20564
  %426 = getelementptr inbounds i8, ptr %425, i64 20, !dbg !20564
  %427 = load ptr, ptr %11, align 8, !dbg !20564
  %428 = icmp uge ptr %426, %427, !dbg !20564
  %429 = zext i1 %428 to i32, !dbg !20564
  %430 = sext i32 %429 to i64, !dbg !20564
  %431 = icmp ne i64 %430, 0, !dbg !20564
  br i1 %431, label %432, label %433, !dbg !20565

432:                                              ; preds = %424
  store i64 0, ptr %5, align 8, !dbg !20564
  br label %575, !dbg !20564

433:                                              ; preds = %424
  %434 = load ptr, ptr %10, align 8, !dbg !20565
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %434, ptr align 1 @.str.21.121, i64 20, i1 false), !dbg !20565
  %435 = getelementptr inbounds i8, ptr %434, i64 20, !dbg !20565
  store ptr %435, ptr %10, align 8, !dbg !20565
  br label %436, !dbg !20565

436:                                              ; preds = %433
  br label %437, !dbg !20566

437:                                              ; preds = %436
  call void @llvm.dbg.declare(metadata ptr %25, metadata !13541, metadata !DIExpression()), !dbg !20567
  %438 = load ptr, ptr %24, align 8, !dbg !20567
  %439 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %438, i32 0, i32 1, !dbg !20567
  %440 = load ptr, ptr %439, align 8, !dbg !20567
  %441 = call i64 @strlen(ptr noundef %440) #20, !dbg !20567
  store i64 %441, ptr %25, align 8, !dbg !20567
  br label %442, !dbg !20567

442:                                              ; preds = %437
  %443 = load ptr, ptr %10, align 8, !dbg !20568
  %444 = load i64, ptr %25, align 8, !dbg !20568
  %445 = getelementptr inbounds i8, ptr %443, i64 %444, !dbg !20568
  %446 = load ptr, ptr %11, align 8, !dbg !20568
  %447 = icmp uge ptr %445, %446, !dbg !20568
  %448 = zext i1 %447 to i32, !dbg !20568
  %449 = sext i32 %448 to i64, !dbg !20568
  %450 = icmp ne i64 %449, 0, !dbg !20568
  br i1 %450, label %451, label %452, !dbg !20569

451:                                              ; preds = %442
  store i64 0, ptr %5, align 8, !dbg !20568
  br label %575, !dbg !20568

452:                                              ; preds = %442
  %453 = load ptr, ptr %10, align 8, !dbg !20569
  %454 = load ptr, ptr %24, align 8, !dbg !20569
  %455 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %454, i32 0, i32 1, !dbg !20569
  %456 = load ptr, ptr %455, align 8, !dbg !20569
  %457 = load i64, ptr %25, align 8, !dbg !20569
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %453, ptr align 1 %456, i64 %457, i1 false), !dbg !20569
  %458 = getelementptr inbounds i8, ptr %453, i64 %457, !dbg !20569
  store ptr %458, ptr %10, align 8, !dbg !20569
  br label %459, !dbg !20569

459:                                              ; preds = %452
  br label %460, !dbg !20567

460:                                              ; preds = %459
  br label %465, !dbg !20570

461:                                              ; preds = %417
  br label %462, !dbg !20571

462:                                              ; preds = %461
  %463 = load ptr, ptr %24, align 8, !dbg !20572
  %464 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %463, i32 1, !dbg !20572
  store ptr %464, ptr %24, align 8, !dbg !20572
  br label %412, !dbg !20573, !llvm.loop !20574

465:                                              ; preds = %460, %412
  br label %466, !dbg !20576

466:                                              ; preds = %465, %404
  br label %467

467:                                              ; preds = %466, %403
  %468 = load i8, ptr %13, align 1, !dbg !20577
  %469 = trunc i8 %468 to i1, !dbg !20577
  %470 = xor i1 %469, true, !dbg !20577
  %471 = xor i1 %470, true, !dbg !20577
  %472 = xor i1 %471, true, !dbg !20577
  %473 = zext i1 %472 to i32, !dbg !20577
  %474 = sext i32 %473 to i64, !dbg !20577
  %475 = icmp ne i64 %474, 0, !dbg !20577
  br i1 %475, label %476, label %511, !dbg !20578

476:                                              ; preds = %467
  br label %477, !dbg !20579

477:                                              ; preds = %476
  %478 = load ptr, ptr %10, align 8, !dbg !20580
  %479 = getelementptr inbounds i8, ptr %478, i64 8, !dbg !20580
  %480 = load ptr, ptr %11, align 8, !dbg !20580
  %481 = icmp uge ptr %479, %480, !dbg !20580
  %482 = zext i1 %481 to i32, !dbg !20580
  %483 = sext i32 %482 to i64, !dbg !20580
  %484 = icmp ne i64 %483, 0, !dbg !20580
  br i1 %484, label %485, label %486, !dbg !20581

485:                                              ; preds = %477
  store i64 0, ptr %5, align 8, !dbg !20580
  br label %575, !dbg !20580

486:                                              ; preds = %477
  %487 = load ptr, ptr %10, align 8, !dbg !20581
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %487, ptr align 1 @.str.22.122, i64 8, i1 false), !dbg !20581
  %488 = getelementptr inbounds i8, ptr %487, i64 8, !dbg !20581
  store ptr %488, ptr %10, align 8, !dbg !20581
  br label %489, !dbg !20581

489:                                              ; preds = %486
  br label %490, !dbg !20582

490:                                              ; preds = %489
  %491 = load ptr, ptr %10, align 8, !dbg !20583
  %492 = getelementptr inbounds i8, ptr %491, i64 29, !dbg !20583
  %493 = load ptr, ptr %11, align 8, !dbg !20583
  %494 = icmp uge ptr %492, %493, !dbg !20583
  %495 = zext i1 %494 to i32, !dbg !20583
  %496 = sext i32 %495 to i64, !dbg !20583
  %497 = icmp ne i64 %496, 0, !dbg !20583
  br i1 %497, label %498, label %499, !dbg !20584

498:                                              ; preds = %490
  store i64 0, ptr %5, align 8, !dbg !20583
  br label %575, !dbg !20583

499:                                              ; preds = %490
  %500 = load ptr, ptr %10, align 8, !dbg !20584
  %501 = load ptr, ptr %6, align 8, !dbg !20584
  %502 = getelementptr inbounds %struct.lwan_request_t_, ptr %501, i32 0, i32 4, !dbg !20584
  %503 = load ptr, ptr %502, align 8, !dbg !20584
  %504 = getelementptr inbounds %struct.lwan_connection_t_, ptr %503, i32 0, i32 3, !dbg !20584
  %505 = load ptr, ptr %504, align 8, !dbg !20584
  %506 = getelementptr inbounds %struct.lwan_thread_t_, ptr %505, i32 0, i32 1, !dbg !20584
  %507 = getelementptr inbounds %struct.anon.27, ptr %506, i32 0, i32 0, !dbg !20584
  %508 = getelementptr inbounds [30 x i8], ptr %507, i64 0, i64 0, !dbg !20584
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %500, ptr align 8 %508, i64 29, i1 false), !dbg !20584
  %509 = getelementptr inbounds i8, ptr %500, i64 29, !dbg !20584
  store ptr %509, ptr %10, align 8, !dbg !20584
  br label %510, !dbg !20584

510:                                              ; preds = %499
  br label %511, !dbg !20585

511:                                              ; preds = %510, %467
  %512 = load i8, ptr %14, align 1, !dbg !20586
  %513 = trunc i8 %512 to i1, !dbg !20586
  %514 = xor i1 %513, true, !dbg !20586
  %515 = xor i1 %514, true, !dbg !20586
  %516 = xor i1 %515, true, !dbg !20586
  %517 = zext i1 %516 to i32, !dbg !20586
  %518 = sext i32 %517 to i64, !dbg !20586
  %519 = icmp ne i64 %518, 0, !dbg !20586
  br i1 %519, label %520, label %555, !dbg !20587

520:                                              ; preds = %511
  br label %521, !dbg !20588

521:                                              ; preds = %520
  %522 = load ptr, ptr %10, align 8, !dbg !20589
  %523 = getelementptr inbounds i8, ptr %522, i64 11, !dbg !20589
  %524 = load ptr, ptr %11, align 8, !dbg !20589
  %525 = icmp uge ptr %523, %524, !dbg !20589
  %526 = zext i1 %525 to i32, !dbg !20589
  %527 = sext i32 %526 to i64, !dbg !20589
  %528 = icmp ne i64 %527, 0, !dbg !20589
  br i1 %528, label %529, label %530, !dbg !20590

529:                                              ; preds = %521
  store i64 0, ptr %5, align 8, !dbg !20589
  br label %575, !dbg !20589

530:                                              ; preds = %521
  %531 = load ptr, ptr %10, align 8, !dbg !20590
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %531, ptr align 1 @.str.23.123, i64 11, i1 false), !dbg !20590
  %532 = getelementptr inbounds i8, ptr %531, i64 11, !dbg !20590
  store ptr %532, ptr %10, align 8, !dbg !20590
  br label %533, !dbg !20590

533:                                              ; preds = %530
  br label %534, !dbg !20591

534:                                              ; preds = %533
  %535 = load ptr, ptr %10, align 8, !dbg !20592
  %536 = getelementptr inbounds i8, ptr %535, i64 29, !dbg !20592
  %537 = load ptr, ptr %11, align 8, !dbg !20592
  %538 = icmp uge ptr %536, %537, !dbg !20592
  %539 = zext i1 %538 to i32, !dbg !20592
  %540 = sext i32 %539 to i64, !dbg !20592
  %541 = icmp ne i64 %540, 0, !dbg !20592
  br i1 %541, label %542, label %543, !dbg !20593

542:                                              ; preds = %534
  store i64 0, ptr %5, align 8, !dbg !20592
  br label %575, !dbg !20592

543:                                              ; preds = %534
  %544 = load ptr, ptr %10, align 8, !dbg !20593
  %545 = load ptr, ptr %6, align 8, !dbg !20593
  %546 = getelementptr inbounds %struct.lwan_request_t_, ptr %545, i32 0, i32 4, !dbg !20593
  %547 = load ptr, ptr %546, align 8, !dbg !20593
  %548 = getelementptr inbounds %struct.lwan_connection_t_, ptr %547, i32 0, i32 3, !dbg !20593
  %549 = load ptr, ptr %548, align 8, !dbg !20593
  %550 = getelementptr inbounds %struct.lwan_thread_t_, ptr %549, i32 0, i32 1, !dbg !20593
  %551 = getelementptr inbounds %struct.anon.27, ptr %550, i32 0, i32 1, !dbg !20593
  %552 = getelementptr inbounds [30 x i8], ptr %551, i64 0, i64 0, !dbg !20593
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %544, ptr align 2 %552, i64 29, i1 false), !dbg !20593
  %553 = getelementptr inbounds i8, ptr %544, i64 29, !dbg !20593
  store ptr %553, ptr %10, align 8, !dbg !20593
  br label %554, !dbg !20593

554:                                              ; preds = %543
  br label %555, !dbg !20594

555:                                              ; preds = %554, %511
  br label %556, !dbg !20595

556:                                              ; preds = %555
  %557 = load ptr, ptr %10, align 8, !dbg !20596
  %558 = getelementptr inbounds i8, ptr %557, i64 19, !dbg !20596
  %559 = load ptr, ptr %11, align 8, !dbg !20596
  %560 = icmp uge ptr %558, %559, !dbg !20596
  %561 = zext i1 %560 to i32, !dbg !20596
  %562 = sext i32 %561 to i64, !dbg !20596
  %563 = icmp ne i64 %562, 0, !dbg !20596
  br i1 %563, label %564, label %565, !dbg !20597

564:                                              ; preds = %556
  store i64 0, ptr %5, align 8, !dbg !20596
  br label %575, !dbg !20596

565:                                              ; preds = %556
  %566 = load ptr, ptr %10, align 8, !dbg !20597
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %566, ptr align 1 @.str.24.124, i64 19, i1 false), !dbg !20597
  %567 = getelementptr inbounds i8, ptr %566, i64 19, !dbg !20597
  store ptr %567, ptr %10, align 8, !dbg !20597
  br label %568, !dbg !20597

568:                                              ; preds = %565
  %569 = load ptr, ptr %10, align 8, !dbg !20598
  %570 = load ptr, ptr %8, align 8, !dbg !20599
  %571 = ptrtoint ptr %569 to i64, !dbg !20600
  %572 = ptrtoint ptr %570 to i64, !dbg !20600
  %573 = sub i64 %571, %572, !dbg !20600
  %574 = sub nsw i64 %573, 1, !dbg !20601
  store i64 %574, ptr %5, align 8, !dbg !20602
  br label %575, !dbg !20602

575:                                              ; preds = %568, %564, %542, %529, %498, %485, %451, %432, %390, %362, %342, %277, %263, %236, %216, %197, %186, %159, %148, %121, %100, %77, %58, %44
  %576 = load i64, ptr %5, align 8, !dbg !20603
  ret i64 %576, !dbg !20603
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @mmap_serve(ptr noundef %0, ptr noundef %1) #0 !dbg !20604 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  %9 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !20605, metadata !DIExpression()), !dbg !20606
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !20607, metadata !DIExpression()), !dbg !20608
  call void @llvm.dbg.declare(metadata ptr %5, metadata !20609, metadata !DIExpression()), !dbg !20610
  %10 = load ptr, ptr %4, align 8, !dbg !20611
  store ptr %10, ptr %5, align 8, !dbg !20610
  call void @llvm.dbg.declare(metadata ptr %6, metadata !20612, metadata !DIExpression()), !dbg !20613
  %11 = load ptr, ptr %5, align 8, !dbg !20614
  %12 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %11, i64 1, !dbg !20615
  store ptr %12, ptr %6, align 8, !dbg !20613
  call void @llvm.dbg.declare(metadata ptr %7, metadata !20616, metadata !DIExpression()), !dbg !20617
  call void @llvm.dbg.declare(metadata ptr %8, metadata !20618, metadata !DIExpression()), !dbg !20619
  call void @llvm.dbg.declare(metadata ptr %9, metadata !20620, metadata !DIExpression()), !dbg !20621
  %13 = load ptr, ptr %6, align 8, !dbg !20622
  %14 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %13, i32 0, i32 0, !dbg !20624
  %15 = getelementptr inbounds %struct.lwan_value_t_, ptr %14, i32 0, i32 1, !dbg !20625
  %16 = load i64, ptr %15, align 8, !dbg !20625
  %17 = icmp ne i64 %16, 0, !dbg !20622
  br i1 %17, label %18, label %34, !dbg !20626

18:                                               ; preds = %2
  %19 = load ptr, ptr %3, align 8, !dbg !20627
  %20 = getelementptr inbounds %struct.lwan_request_t_, ptr %19, i32 0, i32 0, !dbg !20628
  %21 = load i32, ptr %20, align 8, !dbg !20628
  %22 = and i32 %21, 8, !dbg !20629
  %23 = icmp ne i32 %22, 0, !dbg !20629
  br i1 %23, label %24, label %34, !dbg !20630

24:                                               ; preds = %18
  %25 = load ptr, ptr %6, align 8, !dbg !20631
  %26 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %25, i32 0, i32 0, !dbg !20633
  %27 = getelementptr inbounds %struct.lwan_value_t_, ptr %26, i32 0, i32 0, !dbg !20634
  %28 = load ptr, ptr %27, align 8, !dbg !20634
  store ptr %28, ptr %7, align 8, !dbg !20635
  %29 = load ptr, ptr %6, align 8, !dbg !20636
  %30 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %29, i32 0, i32 0, !dbg !20637
  %31 = getelementptr inbounds %struct.lwan_value_t_, ptr %30, i32 0, i32 1, !dbg !20638
  %32 = load i64, ptr %31, align 8, !dbg !20638
  store i64 %32, ptr %8, align 8, !dbg !20639
  %33 = load ptr, ptr @compression_deflate, align 8, !dbg !20640
  store ptr %33, ptr %9, align 8, !dbg !20641
  br label %44, !dbg !20642

34:                                               ; preds = %18, %2
  %35 = load ptr, ptr %6, align 8, !dbg !20643
  %36 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %35, i32 0, i32 1, !dbg !20645
  %37 = getelementptr inbounds %struct.lwan_value_t_, ptr %36, i32 0, i32 0, !dbg !20646
  %38 = load ptr, ptr %37, align 8, !dbg !20646
  store ptr %38, ptr %7, align 8, !dbg !20647
  %39 = load ptr, ptr %6, align 8, !dbg !20648
  %40 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %39, i32 0, i32 1, !dbg !20649
  %41 = getelementptr inbounds %struct.lwan_value_t_, ptr %40, i32 0, i32 1, !dbg !20650
  %42 = load i64, ptr %41, align 8, !dbg !20650
  store i64 %42, ptr %8, align 8, !dbg !20651
  %43 = load ptr, ptr @compression_none, align 8, !dbg !20652
  store ptr %43, ptr %9, align 8, !dbg !20653
  br label %44

44:                                               ; preds = %34, %24
  %45 = load ptr, ptr %3, align 8, !dbg !20654
  %46 = load ptr, ptr %5, align 8, !dbg !20655
  %47 = load ptr, ptr %9, align 8, !dbg !20656
  %48 = load ptr, ptr %7, align 8, !dbg !20657
  %49 = load i64, ptr %8, align 8, !dbg !20658
  %50 = call i32 @serve_contents_and_size(ptr noundef %45, ptr noundef %46, ptr noundef %47, ptr noundef %48, i64 noundef %49), !dbg !20659
  ret i32 %50, !dbg !20660
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @mmap_init(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 !dbg !20661 {
  %5 = alloca i1, align 1
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  store ptr %0, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !20662, metadata !DIExpression()), !dbg !20663
  store ptr %1, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !20664, metadata !DIExpression()), !dbg !20665
  store ptr %2, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !20666, metadata !DIExpression()), !dbg !20667
  store ptr %3, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !20668, metadata !DIExpression()), !dbg !20669
  call void @llvm.dbg.declare(metadata ptr %10, metadata !20670, metadata !DIExpression()), !dbg !20671
  %13 = load ptr, ptr %6, align 8, !dbg !20672
  %14 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %13, i64 1, !dbg !20673
  store ptr %14, ptr %10, align 8, !dbg !20671
  call void @llvm.dbg.declare(metadata ptr %11, metadata !20674, metadata !DIExpression()), !dbg !20675
  call void @llvm.dbg.declare(metadata ptr %12, metadata !20676, metadata !DIExpression()), !dbg !20677
  %15 = load ptr, ptr %7, align 8, !dbg !20678
  %16 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %15, i32 0, i32 1, !dbg !20679
  %17 = getelementptr inbounds %struct.anon.6, ptr %16, i32 0, i32 2, !dbg !20680
  %18 = load i32, ptr %17, align 8, !dbg !20680
  %19 = load ptr, ptr %8, align 8, !dbg !20681
  %20 = load ptr, ptr %7, align 8, !dbg !20682
  %21 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %20, i32 0, i32 1, !dbg !20683
  %22 = getelementptr inbounds %struct.anon.6, ptr %21, i32 0, i32 1, !dbg !20684
  %23 = load i64, ptr %22, align 8, !dbg !20684
  %24 = getelementptr inbounds i8, ptr %19, i64 %23, !dbg !20685
  %25 = getelementptr inbounds i8, ptr %24, i64 1, !dbg !20686
  %26 = load ptr, ptr %7, align 8, !dbg !20687
  %27 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %26, i32 0, i32 2, !dbg !20688
  %28 = load i32, ptr %27, align 8, !dbg !20688
  %29 = call i32 (i32, ptr, i32, ...) @openat(i32 noundef %18, ptr noundef %25, i32 noundef %28), !dbg !20689
  store i32 %29, ptr %11, align 4, !dbg !20690
  %30 = load i32, ptr %11, align 4, !dbg !20691
  %31 = icmp slt i32 %30, 0, !dbg !20691
  %32 = zext i1 %31 to i32, !dbg !20691
  %33 = sext i32 %32 to i64, !dbg !20691
  %34 = icmp ne i64 %33, 0, !dbg !20691
  br i1 %34, label %35, label %36, !dbg !20693

35:                                               ; preds = %4
  store i1 false, ptr %5, align 1, !dbg !20694
  br label %90, !dbg !20694

36:                                               ; preds = %4
  %37 = load ptr, ptr %9, align 8, !dbg !20695
  %38 = getelementptr inbounds %struct.stat, ptr %37, i32 0, i32 8, !dbg !20696
  %39 = load i64, ptr %38, align 8, !dbg !20696
  %40 = load i32, ptr %11, align 4, !dbg !20697
  %41 = call ptr @mmap(ptr noundef null, i64 noundef %39, i32 noundef 1, i32 noundef 1, i32 noundef %40, i64 noundef 0) #17, !dbg !20698
  %42 = load ptr, ptr %10, align 8, !dbg !20699
  %43 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %42, i32 0, i32 1, !dbg !20700
  %44 = getelementptr inbounds %struct.lwan_value_t_, ptr %43, i32 0, i32 0, !dbg !20701
  store ptr %41, ptr %44, align 8, !dbg !20702
  %45 = load ptr, ptr %10, align 8, !dbg !20703
  %46 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %45, i32 0, i32 1, !dbg !20703
  %47 = getelementptr inbounds %struct.lwan_value_t_, ptr %46, i32 0, i32 0, !dbg !20703
  %48 = load ptr, ptr %47, align 8, !dbg !20703
  %49 = icmp eq ptr %48, inttoptr (i64 -1 to ptr), !dbg !20703
  %50 = zext i1 %49 to i32, !dbg !20703
  %51 = sext i32 %50 to i64, !dbg !20703
  %52 = icmp ne i64 %51, 0, !dbg !20703
  br i1 %52, label %53, label %54, !dbg !20705

53:                                               ; preds = %36
  store i8 0, ptr %12, align 1, !dbg !20706
  br label %85, !dbg !20708

54:                                               ; preds = %36
  %55 = load ptr, ptr %10, align 8, !dbg !20709
  %56 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %55, i32 0, i32 1, !dbg !20709
  %57 = getelementptr inbounds %struct.lwan_value_t_, ptr %56, i32 0, i32 0, !dbg !20709
  %58 = load ptr, ptr %57, align 8, !dbg !20709
  %59 = load ptr, ptr %9, align 8, !dbg !20709
  %60 = getelementptr inbounds %struct.stat, ptr %59, i32 0, i32 8, !dbg !20709
  %61 = load i64, ptr %60, align 8, !dbg !20709
  %62 = call i32 @madvise(ptr noundef %58, i64 noundef %61, i32 noundef 3) #17, !dbg !20709
  %63 = icmp slt i32 %62, 0, !dbg !20709
  %64 = zext i1 %63 to i32, !dbg !20709
  %65 = sext i32 %64 to i64, !dbg !20709
  %66 = icmp ne i64 %65, 0, !dbg !20709
  br i1 %66, label %67, label %68, !dbg !20711

67:                                               ; preds = %54
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.1.142, i32 noundef 361, ptr noundef @__FUNCTION__.mmap_init, ptr noundef @.str.17.177), !dbg !20712
  br label %68, !dbg !20712

68:                                               ; preds = %67, %54
  %69 = load ptr, ptr %9, align 8, !dbg !20713
  %70 = getelementptr inbounds %struct.stat, ptr %69, i32 0, i32 8, !dbg !20714
  %71 = load i64, ptr %70, align 8, !dbg !20714
  %72 = load ptr, ptr %10, align 8, !dbg !20715
  %73 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %72, i32 0, i32 1, !dbg !20716
  %74 = getelementptr inbounds %struct.lwan_value_t_, ptr %73, i32 0, i32 1, !dbg !20717
  store i64 %71, ptr %74, align 8, !dbg !20718
  %75 = load ptr, ptr %10, align 8, !dbg !20719
  call void @compress_cached_entry(ptr noundef %75), !dbg !20720
  %76 = load ptr, ptr %8, align 8, !dbg !20721
  %77 = load ptr, ptr %7, align 8, !dbg !20722
  %78 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %77, i32 0, i32 1, !dbg !20723
  %79 = getelementptr inbounds %struct.anon.6, ptr %78, i32 0, i32 1, !dbg !20724
  %80 = load i64, ptr %79, align 8, !dbg !20724
  %81 = getelementptr inbounds i8, ptr %76, i64 %80, !dbg !20725
  %82 = call ptr @lwan_determine_mime_type_for_file_name(ptr noundef %81) #20, !dbg !20726
  %83 = load ptr, ptr %6, align 8, !dbg !20727
  %84 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %83, i32 0, i32 2, !dbg !20728
  store ptr %82, ptr %84, align 8, !dbg !20729
  store i8 1, ptr %12, align 1, !dbg !20730
  br label %85, !dbg !20731

85:                                               ; preds = %68, %53
  call void @llvm.dbg.label(metadata !20732), !dbg !20733
  %86 = load i32, ptr %11, align 4, !dbg !20734
  %87 = call i32 @close(i32 noundef %86), !dbg !20735
  %88 = load i8, ptr %12, align 1, !dbg !20736
  %89 = trunc i8 %88 to i1, !dbg !20736
  store i1 %89, ptr %5, align 1, !dbg !20737
  br label %90, !dbg !20737

90:                                               ; preds = %85, %35
  %91 = load i1, ptr %5, align 1, !dbg !20738
  ret i1 %91, !dbg !20738
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mmap_free(ptr noundef %0) #0 !dbg !20739 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !20740, metadata !DIExpression()), !dbg !20741
  call void @llvm.dbg.declare(metadata ptr %3, metadata !20742, metadata !DIExpression()), !dbg !20743
  %4 = load ptr, ptr %2, align 8, !dbg !20744
  store ptr %4, ptr %3, align 8, !dbg !20743
  %5 = load ptr, ptr %3, align 8, !dbg !20745
  %6 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %5, i32 0, i32 1, !dbg !20746
  %7 = getelementptr inbounds %struct.lwan_value_t_, ptr %6, i32 0, i32 0, !dbg !20747
  %8 = load ptr, ptr %7, align 8, !dbg !20747
  %9 = load ptr, ptr %3, align 8, !dbg !20748
  %10 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %9, i32 0, i32 1, !dbg !20749
  %11 = getelementptr inbounds %struct.lwan_value_t_, ptr %10, i32 0, i32 1, !dbg !20750
  %12 = load i64, ptr %11, align 8, !dbg !20750
  %13 = call i32 @munmap(ptr noundef %8, i64 noundef %12) #17, !dbg !20751
  %14 = load ptr, ptr %3, align 8, !dbg !20752
  %15 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %14, i32 0, i32 0, !dbg !20753
  %16 = getelementptr inbounds %struct.lwan_value_t_, ptr %15, i32 0, i32 0, !dbg !20754
  %17 = load ptr, ptr %16, align 8, !dbg !20754
  call void @free(ptr noundef %17) #17, !dbg !20755
  ret void, !dbg !20756
}

; Function Attrs: nounwind
declare i32 @madvise(ptr noundef, i64 noundef, i32 noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @compress_cached_entry(ptr noundef %0) #0 !dbg !20757 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !20760, metadata !DIExpression()), !dbg !20761
  %5 = load ptr, ptr %4, align 8, !dbg !20762
  %6 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %5, i32 0, i32 1, !dbg !20763
  %7 = getelementptr inbounds %struct.lwan_value_t_, ptr %6, i32 0, i32 1, !dbg !20764
  %8 = load i64, ptr %7, align 8, !dbg !20764
  %9 = call i64 @compressBound(i64 noundef %8), !dbg !20765
  %10 = load ptr, ptr %4, align 8, !dbg !20766
  %11 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %10, i32 0, i32 0, !dbg !20767
  %12 = getelementptr inbounds %struct.lwan_value_t_, ptr %11, i32 0, i32 1, !dbg !20768
  store i64 %9, ptr %12, align 8, !dbg !20769
  %13 = load ptr, ptr %4, align 8, !dbg !20770
  %14 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %13, i32 0, i32 0, !dbg !20770
  %15 = getelementptr inbounds %struct.lwan_value_t_, ptr %14, i32 0, i32 1, !dbg !20770
  %16 = load i64, ptr %15, align 8, !dbg !20770
  %17 = call noalias ptr @malloc(i64 noundef %16) #18, !dbg !20770
  %18 = load ptr, ptr %4, align 8, !dbg !20770
  %19 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %18, i32 0, i32 0, !dbg !20770
  %20 = getelementptr inbounds %struct.lwan_value_t_, ptr %19, i32 0, i32 0, !dbg !20770
  store ptr %17, ptr %20, align 8, !dbg !20770
  %21 = icmp ne ptr %17, null, !dbg !20770
  %22 = xor i1 %21, true, !dbg !20770
  %23 = zext i1 %22 to i32, !dbg !20770
  %24 = sext i32 %23 to i64, !dbg !20770
  %25 = icmp ne i64 %24, 0, !dbg !20770
  br i1 %25, label %26, label %27, !dbg !20772

26:                                               ; preds = %1
  br label %72, !dbg !20773

27:                                               ; preds = %1
  %28 = load ptr, ptr %4, align 8, !dbg !20774
  %29 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %28, i32 0, i32 0, !dbg !20774
  %30 = getelementptr inbounds %struct.lwan_value_t_, ptr %29, i32 0, i32 0, !dbg !20774
  %31 = load ptr, ptr %30, align 8, !dbg !20774
  %32 = load ptr, ptr %4, align 8, !dbg !20774
  %33 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %32, i32 0, i32 0, !dbg !20774
  %34 = getelementptr inbounds %struct.lwan_value_t_, ptr %33, i32 0, i32 1, !dbg !20774
  %35 = load ptr, ptr %4, align 8, !dbg !20774
  %36 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %35, i32 0, i32 1, !dbg !20774
  %37 = getelementptr inbounds %struct.lwan_value_t_, ptr %36, i32 0, i32 0, !dbg !20774
  %38 = load ptr, ptr %37, align 8, !dbg !20774
  %39 = load ptr, ptr %4, align 8, !dbg !20774
  %40 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %39, i32 0, i32 1, !dbg !20774
  %41 = getelementptr inbounds %struct.lwan_value_t_, ptr %40, i32 0, i32 1, !dbg !20774
  %42 = load i64, ptr %41, align 8, !dbg !20774
  %43 = call i32 @compress(ptr noundef %31, ptr noundef %34, ptr noundef %38, i64 noundef %42), !dbg !20774
  %44 = icmp ne i32 %43, 0, !dbg !20774
  %45 = zext i1 %44 to i32, !dbg !20774
  %46 = sext i32 %45 to i64, !dbg !20774
  %47 = icmp ne i64 %46, 0, !dbg !20774
  br i1 %47, label %48, label %49, !dbg !20776

48:                                               ; preds = %27
  br label %64, !dbg !20777

49:                                               ; preds = %27
  %50 = load ptr, ptr %4, align 8, !dbg !20778
  %51 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %50, i32 0, i32 0, !dbg !20780
  %52 = getelementptr inbounds %struct.lwan_value_t_, ptr %51, i32 0, i32 1, !dbg !20781
  %53 = load i64, ptr %52, align 8, !dbg !20781
  %54 = load ptr, ptr %4, align 8, !dbg !20782
  %55 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %54, i32 0, i32 1, !dbg !20783
  %56 = getelementptr inbounds %struct.lwan_value_t_, ptr %55, i32 0, i32 1, !dbg !20784
  %57 = load i64, ptr %56, align 8, !dbg !20784
  store i64 %53, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !20293, metadata !DIExpression()), !dbg !20785
  store i64 %57, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !20296, metadata !DIExpression()), !dbg !20787
  %58 = load i64, ptr %2, align 8, !dbg !20788
  %59 = add i64 %58, 27, !dbg !20789
  %60 = load i64, ptr %3, align 8, !dbg !20790
  %61 = icmp ult i64 %59, %60, !dbg !20791
  br i1 %61, label %62, label %63, !dbg !20792

62:                                               ; preds = %49
  br label %76, !dbg !20793

63:                                               ; preds = %49
  br label %64, !dbg !20794

64:                                               ; preds = %63, %48
  call void @llvm.dbg.label(metadata !20795), !dbg !20796
  %65 = load ptr, ptr %4, align 8, !dbg !20797
  %66 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %65, i32 0, i32 0, !dbg !20798
  %67 = getelementptr inbounds %struct.lwan_value_t_, ptr %66, i32 0, i32 0, !dbg !20799
  %68 = load ptr, ptr %67, align 8, !dbg !20799
  call void @free(ptr noundef %68) #17, !dbg !20800
  %69 = load ptr, ptr %4, align 8, !dbg !20801
  %70 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %69, i32 0, i32 0, !dbg !20802
  %71 = getelementptr inbounds %struct.lwan_value_t_, ptr %70, i32 0, i32 0, !dbg !20803
  store ptr null, ptr %71, align 8, !dbg !20804
  br label %72, !dbg !20801

72:                                               ; preds = %64, %26
  call void @llvm.dbg.label(metadata !20805), !dbg !20806
  %73 = load ptr, ptr %4, align 8, !dbg !20807
  %74 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %73, i32 0, i32 0, !dbg !20808
  %75 = getelementptr inbounds %struct.lwan_value_t_, ptr %74, i32 0, i32 1, !dbg !20809
  store i64 0, ptr %75, align 8, !dbg !20810
  br label %76, !dbg !20811

76:                                               ; preds = %72, %62
  ret void, !dbg !20811
}

declare i64 @compressBound(i64 noundef) #5

declare i32 @compress(ptr noundef, ptr noundef, ptr noundef, i64 noundef) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @serve_contents_and_size(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, i64 noundef %4) #0 !dbg !20812 {
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i64, align 8
  %14 = alloca [4096 x i8], align 16
  %15 = alloca i64, align 8
  %16 = alloca i32, align 4
  %17 = alloca [2 x %struct.lwan_value_t_], align 16
  store ptr %0, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !20815, metadata !DIExpression()), !dbg !20816
  store ptr %1, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %10, metadata !20817, metadata !DIExpression()), !dbg !20818
  store ptr %2, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !20819, metadata !DIExpression()), !dbg !20820
  store ptr %3, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %12, metadata !20821, metadata !DIExpression()), !dbg !20822
  store i64 %4, ptr %13, align 8
  call void @llvm.dbg.declare(metadata ptr %13, metadata !20823, metadata !DIExpression()), !dbg !20824
  call void @llvm.dbg.declare(metadata ptr %14, metadata !20825, metadata !DIExpression()), !dbg !20826
  call void @llvm.dbg.declare(metadata ptr %15, metadata !20827, metadata !DIExpression()), !dbg !20828
  call void @llvm.dbg.declare(metadata ptr %16, metadata !20829, metadata !DIExpression()), !dbg !20830
  store i32 200, ptr %16, align 4, !dbg !20830
  %18 = load ptr, ptr %9, align 8, !dbg !20831
  %19 = load ptr, ptr %10, align 8, !dbg !20833
  %20 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %19, i32 0, i32 1, !dbg !20834
  %21 = getelementptr inbounds %struct.anon.7, ptr %20, i32 0, i32 1, !dbg !20835
  %22 = load i64, ptr %21, align 8, !dbg !20835
  store ptr %18, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !20152, metadata !DIExpression()), !dbg !20836
  store i64 %22, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !20158, metadata !DIExpression()), !dbg !20838
  %23 = load ptr, ptr %6, align 8, !dbg !20839
  %24 = getelementptr inbounds %struct.lwan_request_t_, ptr %23, i32 0, i32 7, !dbg !20840
  %25 = load i64, ptr %24, align 8, !dbg !20841
  %26 = icmp ne i64 %25, 0, !dbg !20839
  br i1 %26, label %27, label %33, !dbg !20842

27:                                               ; preds = %5
  %28 = load i64, ptr %7, align 8, !dbg !20843
  %29 = load ptr, ptr %6, align 8, !dbg !20844
  %30 = getelementptr inbounds %struct.lwan_request_t_, ptr %29, i32 0, i32 7, !dbg !20845
  %31 = load i64, ptr %30, align 8, !dbg !20846
  %32 = icmp sle i64 %28, %31, !dbg !20847
  br label %33

33:                                               ; preds = %27, %5
  %34 = phi i1 [ false, %5 ], [ %32, %27 ], !dbg !20848
  br i1 %34, label %35, label %36, !dbg !20849

35:                                               ; preds = %33
  store i32 304, ptr %16, align 4, !dbg !20850
  br label %36, !dbg !20851

36:                                               ; preds = %35, %33
  %37 = load ptr, ptr %9, align 8, !dbg !20852
  %38 = load i32, ptr %16, align 4, !dbg !20853
  %39 = load ptr, ptr %10, align 8, !dbg !20854
  %40 = load i64, ptr %13, align 8, !dbg !20855
  %41 = load ptr, ptr %11, align 8, !dbg !20856
  %42 = getelementptr inbounds [4096 x i8], ptr %14, i64 0, i64 0, !dbg !20857
  %43 = call i64 @prepare_headers(ptr noundef %37, i32 noundef %38, ptr noundef %39, i64 noundef %40, ptr noundef %41, ptr noundef %42, i64 noundef 512), !dbg !20858
  store i64 %43, ptr %15, align 8, !dbg !20859
  %44 = load i64, ptr %15, align 8, !dbg !20860
  %45 = icmp ne i64 %44, 0, !dbg !20860
  %46 = xor i1 %45, true, !dbg !20860
  %47 = zext i1 %46 to i32, !dbg !20860
  %48 = sext i32 %47 to i64, !dbg !20860
  %49 = icmp ne i64 %48, 0, !dbg !20860
  br i1 %49, label %50, label %51, !dbg !20862

50:                                               ; preds = %36
  store i32 500, ptr %8, align 4, !dbg !20863
  br label %81, !dbg !20863

51:                                               ; preds = %36
  %52 = load ptr, ptr %9, align 8, !dbg !20864
  %53 = getelementptr inbounds %struct.lwan_request_t_, ptr %52, i32 0, i32 0, !dbg !20866
  %54 = load i32, ptr %53, align 8, !dbg !20866
  %55 = and i32 %54, 2, !dbg !20867
  %56 = icmp ne i32 %55, 0, !dbg !20867
  br i1 %56, label %60, label %57, !dbg !20868

57:                                               ; preds = %51
  %58 = load i32, ptr %16, align 4, !dbg !20869
  %59 = icmp eq i32 %58, 304, !dbg !20870
  br i1 %59, label %60, label %65, !dbg !20871

60:                                               ; preds = %57, %51
  %61 = load ptr, ptr %9, align 8, !dbg !20872
  %62 = getelementptr inbounds [4096 x i8], ptr %14, i64 0, i64 0, !dbg !20874
  %63 = load i64, ptr %15, align 8, !dbg !20875
  %64 = call i64 @lwan_write(ptr noundef %61, ptr noundef %62, i64 noundef %63), !dbg !20876
  br label %79, !dbg !20877

65:                                               ; preds = %57
  call void @llvm.dbg.declare(metadata ptr %17, metadata !20878, metadata !DIExpression()), !dbg !20885
  %66 = getelementptr inbounds [2 x %struct.lwan_value_t_], ptr %17, i64 0, i64 0, !dbg !20886
  %67 = getelementptr inbounds %struct.lwan_value_t_, ptr %66, i32 0, i32 0, !dbg !20887
  %68 = getelementptr inbounds [4096 x i8], ptr %14, i64 0, i64 0, !dbg !20888
  store ptr %68, ptr %67, align 16, !dbg !20887
  %69 = getelementptr inbounds %struct.lwan_value_t_, ptr %66, i32 0, i32 1, !dbg !20887
  %70 = load i64, ptr %15, align 8, !dbg !20889
  store i64 %70, ptr %69, align 8, !dbg !20887
  %71 = getelementptr inbounds %struct.lwan_value_t_, ptr %66, i64 1, !dbg !20886
  %72 = getelementptr inbounds %struct.lwan_value_t_, ptr %71, i32 0, i32 0, !dbg !20890
  %73 = load ptr, ptr %12, align 8, !dbg !20891
  store ptr %73, ptr %72, align 16, !dbg !20890
  %74 = getelementptr inbounds %struct.lwan_value_t_, ptr %71, i32 0, i32 1, !dbg !20890
  %75 = load i64, ptr %13, align 8, !dbg !20892
  store i64 %75, ptr %74, align 8, !dbg !20890
  %76 = load ptr, ptr %9, align 8, !dbg !20893
  %77 = getelementptr inbounds [2 x %struct.lwan_value_t_], ptr %17, i64 0, i64 0, !dbg !20894
  %78 = call i64 @lwan_writev(ptr noundef %76, ptr noundef %77, i32 noundef 2), !dbg !20895
  br label %79

79:                                               ; preds = %65, %60
  %80 = load i32, ptr %16, align 4, !dbg !20896
  store i32 %80, ptr %8, align 4, !dbg !20897
  br label %81, !dbg !20897

81:                                               ; preds = %79, %50
  %82 = load i32, ptr %8, align 4, !dbg !20898
  ret i32 %82, !dbg !20898
}

; Function Attrs: nounwind
declare ptr @strncpy(ptr noundef, ptr noundef, i64 noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @dirlist_serve(ptr noundef %0, ptr noundef %1) #0 !dbg !20899 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !20900, metadata !DIExpression()), !dbg !20901
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !20902, metadata !DIExpression()), !dbg !20903
  call void @llvm.dbg.declare(metadata ptr %5, metadata !20904, metadata !DIExpression()), !dbg !20905
  %7 = load ptr, ptr %4, align 8, !dbg !20906
  store ptr %7, ptr %5, align 8, !dbg !20905
  call void @llvm.dbg.declare(metadata ptr %6, metadata !20907, metadata !DIExpression()), !dbg !20908
  %8 = load ptr, ptr %5, align 8, !dbg !20909
  %9 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %8, i64 1, !dbg !20910
  store ptr %9, ptr %6, align 8, !dbg !20908
  %10 = load ptr, ptr %3, align 8, !dbg !20911
  %11 = load ptr, ptr %5, align 8, !dbg !20912
  %12 = load ptr, ptr @compression_none, align 8, !dbg !20913
  %13 = load ptr, ptr %6, align 8, !dbg !20914
  %14 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %13, i32 0, i32 0, !dbg !20914
  %15 = load ptr, ptr %14, align 8, !dbg !20914
  %16 = getelementptr inbounds %struct.strbuf_t_, ptr %15, i32 0, i32 0, !dbg !20914
  %17 = load ptr, ptr %16, align 8, !dbg !20914
  %18 = load ptr, ptr %6, align 8, !dbg !20915
  %19 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %18, i32 0, i32 0, !dbg !20915
  %20 = load ptr, ptr %19, align 8, !dbg !20915
  %21 = getelementptr inbounds %struct.strbuf_t_, ptr %20, i32 0, i32 1, !dbg !20915
  %22 = getelementptr inbounds %struct.anon.3, ptr %21, i32 0, i32 1, !dbg !20915
  %23 = load i64, ptr %22, align 8, !dbg !20915
  %24 = call i32 @serve_contents_and_size(ptr noundef %10, ptr noundef %11, ptr noundef %12, ptr noundef %17, i64 noundef %23), !dbg !20916
  ret i32 %24, !dbg !20917
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dirlist_init(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 !dbg !20918 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca %struct.file_list_t, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !20919, metadata !DIExpression()), !dbg !20920
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !20921, metadata !DIExpression()), !dbg !20922
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !20923, metadata !DIExpression()), !dbg !20924
  store ptr %3, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !20925, metadata !DIExpression()), !dbg !20926
  call void @llvm.dbg.declare(metadata ptr %9, metadata !20927, metadata !DIExpression()), !dbg !20928
  %11 = load ptr, ptr %5, align 8, !dbg !20929
  %12 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %11, i64 1, !dbg !20930
  store ptr %12, ptr %9, align 8, !dbg !20928
  call void @llvm.dbg.declare(metadata ptr %10, metadata !20931, metadata !DIExpression()), !dbg !20932
  call void @llvm.memset.p0.i64(ptr align 8 %10, i8 0, i64 72, i1 false), !dbg !20932
  %13 = getelementptr inbounds %struct.file_list_t, ptr %10, i32 0, i32 0, !dbg !20933
  %14 = load ptr, ptr %7, align 8, !dbg !20934
  store ptr %14, ptr %13, align 8, !dbg !20933
  %15 = getelementptr inbounds %struct.file_list_t, ptr %10, i32 0, i32 1, !dbg !20933
  %16 = load ptr, ptr %7, align 8, !dbg !20935
  %17 = load ptr, ptr %6, align 8, !dbg !20936
  %18 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %17, i32 0, i32 1, !dbg !20937
  %19 = getelementptr inbounds %struct.anon.6, ptr %18, i32 0, i32 1, !dbg !20938
  %20 = load i64, ptr %19, align 8, !dbg !20938
  %21 = getelementptr inbounds i8, ptr %16, i64 %20, !dbg !20939
  store ptr %21, ptr %15, align 8, !dbg !20933
  %22 = load ptr, ptr %6, align 8, !dbg !20940
  %23 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %22, i32 0, i32 4, !dbg !20941
  %24 = load ptr, ptr %23, align 8, !dbg !20941
  %25 = call ptr @lwan_tpl_apply(ptr noundef %24, ptr noundef %10), !dbg !20942
  %26 = load ptr, ptr %9, align 8, !dbg !20943
  %27 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %26, i32 0, i32 0, !dbg !20944
  store ptr %25, ptr %27, align 8, !dbg !20945
  %28 = load ptr, ptr %5, align 8, !dbg !20946
  %29 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %28, i32 0, i32 2, !dbg !20947
  store ptr @.str.15.180, ptr %29, align 8, !dbg !20948
  %30 = load ptr, ptr %9, align 8, !dbg !20949
  %31 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %30, i32 0, i32 0, !dbg !20950
  %32 = load ptr, ptr %31, align 8, !dbg !20950
  %33 = icmp ne ptr %32, null, !dbg !20951
  %34 = xor i1 %33, true, !dbg !20951
  %35 = xor i1 %34, true, !dbg !20952
  ret i1 %35, !dbg !20953
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @dirlist_free(ptr noundef %0) #0 !dbg !20954 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !20955, metadata !DIExpression()), !dbg !20956
  call void @llvm.dbg.declare(metadata ptr %3, metadata !20957, metadata !DIExpression()), !dbg !20958
  %4 = load ptr, ptr %2, align 8, !dbg !20959
  store ptr %4, ptr %3, align 8, !dbg !20958
  %5 = load ptr, ptr %3, align 8, !dbg !20960
  %6 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %5, i32 0, i32 0, !dbg !20961
  %7 = load ptr, ptr %6, align 8, !dbg !20961
  call void @strbuf_free(ptr noundef %7), !dbg !20962
  ret void, !dbg !20963
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @redir_serve(ptr noundef %0, ptr noundef %1) #0 !dbg !20964 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca [4096 x i8], align 16
  %9 = alloca i64, align 8
  %10 = alloca [2 x %struct.lwan_key_value_t_], align 16
  %11 = alloca [2 x %struct.lwan_value_t_], align 16
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !20965, metadata !DIExpression()), !dbg !20966
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !20967, metadata !DIExpression()), !dbg !20968
  call void @llvm.dbg.declare(metadata ptr %6, metadata !20969, metadata !DIExpression()), !dbg !20970
  %12 = load ptr, ptr %5, align 8, !dbg !20971
  store ptr %12, ptr %6, align 8, !dbg !20970
  call void @llvm.dbg.declare(metadata ptr %7, metadata !20972, metadata !DIExpression()), !dbg !20973
  %13 = load ptr, ptr %6, align 8, !dbg !20974
  %14 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %13, i64 1, !dbg !20975
  store ptr %14, ptr %7, align 8, !dbg !20973
  call void @llvm.dbg.declare(metadata ptr %8, metadata !20976, metadata !DIExpression()), !dbg !20977
  call void @llvm.dbg.declare(metadata ptr %9, metadata !20978, metadata !DIExpression()), !dbg !20979
  call void @llvm.dbg.declare(metadata ptr %10, metadata !20980, metadata !DIExpression()), !dbg !20982
  %15 = getelementptr inbounds [2 x %struct.lwan_key_value_t_], ptr %10, i64 0, i64 0, !dbg !20983
  %16 = load ptr, ptr %4, align 8, !dbg !20984
  %17 = getelementptr inbounds %struct.lwan_request_t_, ptr %16, i32 0, i32 8, !dbg !20985
  %18 = getelementptr inbounds %struct.lwan_response_t_, ptr %17, i32 0, i32 3, !dbg !20986
  store ptr %15, ptr %18, align 8, !dbg !20987
  %19 = load ptr, ptr %7, align 8, !dbg !20988
  %20 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %19, i32 0, i32 0, !dbg !20989
  %21 = load ptr, ptr %20, align 8, !dbg !20989
  %22 = call i64 @strlen(ptr noundef %21) #20, !dbg !20990
  %23 = load ptr, ptr %4, align 8, !dbg !20991
  %24 = getelementptr inbounds %struct.lwan_request_t_, ptr %23, i32 0, i32 8, !dbg !20992
  %25 = getelementptr inbounds %struct.lwan_response_t_, ptr %24, i32 0, i32 2, !dbg !20993
  store i64 %22, ptr %25, align 8, !dbg !20994
  br label %26, !dbg !20995

26:                                               ; preds = %2
  %27 = getelementptr inbounds [2 x %struct.lwan_key_value_t_], ptr %10, i64 0, i64 0, !dbg !20996
  %28 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %27, i32 0, i32 0, !dbg !20996
  store ptr @.str.10.183, ptr %28, align 16, !dbg !20996
  %29 = load ptr, ptr %7, align 8, !dbg !20996
  %30 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %29, i32 0, i32 0, !dbg !20996
  %31 = load ptr, ptr %30, align 8, !dbg !20996
  %32 = getelementptr inbounds [2 x %struct.lwan_key_value_t_], ptr %10, i64 0, i64 0, !dbg !20996
  %33 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %32, i32 0, i32 1, !dbg !20996
  store ptr %31, ptr %33, align 8, !dbg !20996
  br label %34, !dbg !20996

34:                                               ; preds = %26
  br label %35, !dbg !20998

35:                                               ; preds = %34
  %36 = getelementptr inbounds [2 x %struct.lwan_key_value_t_], ptr %10, i64 0, i64 1, !dbg !20999
  %37 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %36, i32 0, i32 0, !dbg !20999
  store ptr null, ptr %37, align 16, !dbg !20999
  %38 = getelementptr inbounds [2 x %struct.lwan_key_value_t_], ptr %10, i64 0, i64 1, !dbg !20999
  %39 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %38, i32 0, i32 1, !dbg !20999
  store ptr null, ptr %39, align 8, !dbg !20999
  br label %40, !dbg !20999

40:                                               ; preds = %35
  %41 = load ptr, ptr %4, align 8, !dbg !21001
  %42 = getelementptr inbounds [4096 x i8], ptr %8, i64 0, i64 0, !dbg !21002
  %43 = call i64 @lwan_prepare_response_header(ptr noundef %41, i32 noundef 301, ptr noundef %42, i64 noundef 4096), !dbg !21003
  store i64 %43, ptr %9, align 8, !dbg !21004
  %44 = load i64, ptr %9, align 8, !dbg !21005
  %45 = icmp ne i64 %44, 0, !dbg !21005
  %46 = xor i1 %45, true, !dbg !21005
  %47 = zext i1 %46 to i32, !dbg !21005
  %48 = sext i32 %47 to i64, !dbg !21005
  %49 = icmp ne i64 %48, 0, !dbg !21005
  br i1 %49, label %50, label %51, !dbg !21007

50:                                               ; preds = %40
  store i32 500, ptr %3, align 4, !dbg !21008
  br label %70, !dbg !21008

51:                                               ; preds = %40
  call void @llvm.dbg.declare(metadata ptr %11, metadata !21009, metadata !DIExpression()), !dbg !21010
  %52 = getelementptr inbounds [2 x %struct.lwan_value_t_], ptr %11, i64 0, i64 0, !dbg !21011
  %53 = getelementptr inbounds %struct.lwan_value_t_, ptr %52, i32 0, i32 0, !dbg !21012
  %54 = getelementptr inbounds [4096 x i8], ptr %8, i64 0, i64 0, !dbg !21013
  store ptr %54, ptr %53, align 16, !dbg !21012
  %55 = getelementptr inbounds %struct.lwan_value_t_, ptr %52, i32 0, i32 1, !dbg !21012
  %56 = load i64, ptr %9, align 8, !dbg !21014
  store i64 %56, ptr %55, align 8, !dbg !21012
  %57 = getelementptr inbounds %struct.lwan_value_t_, ptr %52, i64 1, !dbg !21011
  %58 = getelementptr inbounds %struct.lwan_value_t_, ptr %57, i32 0, i32 0, !dbg !21015
  %59 = load ptr, ptr %7, align 8, !dbg !21016
  %60 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %59, i32 0, i32 0, !dbg !21017
  %61 = load ptr, ptr %60, align 8, !dbg !21017
  store ptr %61, ptr %58, align 16, !dbg !21015
  %62 = getelementptr inbounds %struct.lwan_value_t_, ptr %57, i32 0, i32 1, !dbg !21015
  %63 = load ptr, ptr %4, align 8, !dbg !21018
  %64 = getelementptr inbounds %struct.lwan_request_t_, ptr %63, i32 0, i32 8, !dbg !21019
  %65 = getelementptr inbounds %struct.lwan_response_t_, ptr %64, i32 0, i32 2, !dbg !21020
  %66 = load i64, ptr %65, align 8, !dbg !21020
  store i64 %66, ptr %62, align 8, !dbg !21015
  %67 = load ptr, ptr %4, align 8, !dbg !21021
  %68 = getelementptr inbounds [2 x %struct.lwan_value_t_], ptr %11, i64 0, i64 0, !dbg !21022
  %69 = call i64 @lwan_writev(ptr noundef %67, ptr noundef %68, i32 noundef 2), !dbg !21023
  store i32 301, ptr %3, align 4, !dbg !21024
  br label %70, !dbg !21024

70:                                               ; preds = %51, %50
  %71 = load i32, ptr %3, align 4, !dbg !21025
  ret i32 %71, !dbg !21025
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @redir_init(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 !dbg !21026 {
  %5 = alloca i1, align 1
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  store ptr %0, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !21027, metadata !DIExpression()), !dbg !21028
  store ptr %1, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !21029, metadata !DIExpression()), !dbg !21030
  store ptr %2, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !21031, metadata !DIExpression()), !dbg !21032
  store ptr %3, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !21033, metadata !DIExpression()), !dbg !21034
  call void @llvm.dbg.declare(metadata ptr %10, metadata !21035, metadata !DIExpression()), !dbg !21036
  %11 = load ptr, ptr %6, align 8, !dbg !21037
  %12 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %11, i64 1, !dbg !21038
  store ptr %12, ptr %10, align 8, !dbg !21036
  %13 = load ptr, ptr %10, align 8, !dbg !21039
  %14 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %13, i32 0, i32 0, !dbg !21041
  %15 = load ptr, ptr %8, align 8, !dbg !21042
  %16 = load ptr, ptr %7, align 8, !dbg !21043
  %17 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %16, i32 0, i32 1, !dbg !21044
  %18 = getelementptr inbounds %struct.anon.6, ptr %17, i32 0, i32 1, !dbg !21045
  %19 = load i64, ptr %18, align 8, !dbg !21045
  %20 = getelementptr inbounds i8, ptr %15, i64 %19, !dbg !21046
  %21 = call i32 (ptr, ptr, ...) @asprintf(ptr noundef %14, ptr noundef @.str.11.181, ptr noundef %20) #17, !dbg !21047
  %22 = icmp slt i32 %21, 0, !dbg !21048
  br i1 %22, label %23, label %24, !dbg !21049

23:                                               ; preds = %4
  store i1 false, ptr %5, align 1, !dbg !21050
  br label %27, !dbg !21050

24:                                               ; preds = %4
  %25 = load ptr, ptr %6, align 8, !dbg !21051
  %26 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %25, i32 0, i32 2, !dbg !21052
  store ptr @.str.12.182, ptr %26, align 8, !dbg !21053
  store i1 true, ptr %5, align 1, !dbg !21054
  br label %27, !dbg !21054

27:                                               ; preds = %24, %23
  %28 = load i1, ptr %5, align 1, !dbg !21055
  ret i1 %28, !dbg !21055
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @redir_free(ptr noundef %0) #0 !dbg !21056 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !21057, metadata !DIExpression()), !dbg !21058
  call void @llvm.dbg.declare(metadata ptr %3, metadata !21059, metadata !DIExpression()), !dbg !21060
  %4 = load ptr, ptr %2, align 8, !dbg !21061
  store ptr %4, ptr %3, align 8, !dbg !21060
  %5 = load ptr, ptr %3, align 8, !dbg !21062
  %6 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %5, i32 0, i32 0, !dbg !21063
  %7 = load ptr, ptr %6, align 8, !dbg !21063
  call void @free(ptr noundef %7) #17, !dbg !21064
  ret void, !dbg !21065
}

; Function Attrs: nounwind
declare ptr @strcpy(ptr noundef, ptr noundef) #2

; Function Attrs: nounwind
declare i64 @readlinkat(i32 noundef, ptr noundef, ptr noundef, i64 noundef) #2

declare i32 @uncompress(ptr noundef, ptr noundef, ptr noundef, i64 noundef) #5

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @lwan_get_default_config() #0 !dbg !21066 {
  ret ptr @default_config, !dbg !21069
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_shutdown(ptr noundef %0) #0 !dbg !21070 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !21071, metadata !DIExpression()), !dbg !21072
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_info_debug(ptr noundef @.str.60, i32 noundef 505, ptr noundef @__FUNCTION__.lwan_shutdown, ptr noundef @.str.8.72), !dbg !21073
  %3 = load ptr, ptr %2, align 8, !dbg !21074
  %4 = getelementptr inbounds %struct.lwan_t_, ptr %3, i32 0, i32 4, !dbg !21076
  %5 = getelementptr inbounds %struct.lwan_config_t_, ptr %4, i32 0, i32 0, !dbg !21077
  %6 = load ptr, ptr %5, align 8, !dbg !21077
  %7 = load ptr, ptr @default_config, align 8, !dbg !21078
  %8 = icmp ne ptr %6, %7, !dbg !21079
  br i1 %8, label %9, label %14, !dbg !21080

9:                                                ; preds = %1
  %10 = load ptr, ptr %2, align 8, !dbg !21081
  %11 = getelementptr inbounds %struct.lwan_t_, ptr %10, i32 0, i32 4, !dbg !21082
  %12 = getelementptr inbounds %struct.lwan_config_t_, ptr %11, i32 0, i32 0, !dbg !21083
  %13 = load ptr, ptr %12, align 8, !dbg !21083
  call void @free(ptr noundef %13) #17, !dbg !21084
  br label %14, !dbg !21084

14:                                               ; preds = %9, %1
  call void @lwan_job_thread_shutdown(), !dbg !21085
  %15 = load ptr, ptr %2, align 8, !dbg !21086
  call void @lwan_thread_shutdown(ptr noundef %15), !dbg !21087
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.60, i32 noundef 513, ptr noundef @__FUNCTION__.lwan_shutdown, ptr noundef @.str.9.73), !dbg !21088
  %16 = load ptr, ptr %2, align 8, !dbg !21089
  %17 = getelementptr inbounds %struct.lwan_t_, ptr %16, i32 0, i32 0, !dbg !21090
  call void @lwan_trie_destroy(ptr noundef %17), !dbg !21091
  %18 = load ptr, ptr %2, align 8, !dbg !21092
  %19 = getelementptr inbounds %struct.lwan_t_, ptr %18, i32 0, i32 1, !dbg !21093
  %20 = load ptr, ptr %19, align 8, !dbg !21093
  call void @free(ptr noundef %20) #17, !dbg !21094
  call void @lwan_response_shutdown(), !dbg !21095
  call void @lwan_tables_shutdown(), !dbg !21096
  %21 = load ptr, ptr %2, align 8, !dbg !21097
  call void @lwan_status_shutdown(ptr noundef %21), !dbg !21098
  call void @lwan_http_authorize_shutdown(), !dbg !21099
  %22 = load ptr, ptr %2, align 8, !dbg !21100
  call void @lwan_module_shutdown(ptr noundef %22), !dbg !21101
  ret void, !dbg !21102
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_thread_shutdown(ptr noundef %0) #0 !dbg !21103 {
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !21104, metadata !DIExpression()), !dbg !21105
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.380, i32 noundef 427, ptr noundef @__FUNCTION__.lwan_thread_shutdown, ptr noundef @.str.7.406), !dbg !21106
  call void @llvm.dbg.declare(metadata ptr %3, metadata !21107, metadata !DIExpression()), !dbg !21109
  %5 = load ptr, ptr %2, align 8, !dbg !21110
  %6 = getelementptr inbounds %struct.lwan_t_, ptr %5, i32 0, i32 2, !dbg !21111
  %7 = getelementptr inbounds %struct.anon, ptr %6, i32 0, i32 2, !dbg !21112
  %8 = load i16, ptr %7, align 4, !dbg !21112
  %9 = zext i16 %8 to i32, !dbg !21110
  %10 = sub nsw i32 %9, 1, !dbg !21113
  store i32 %10, ptr %3, align 4, !dbg !21109
  br label %11, !dbg !21114

11:                                               ; preds = %46, %1
  %12 = load i32, ptr %3, align 4, !dbg !21115
  %13 = icmp sge i32 %12, 0, !dbg !21117
  br i1 %13, label %14, label %49, !dbg !21118

14:                                               ; preds = %11
  call void @llvm.dbg.declare(metadata ptr %4, metadata !21119, metadata !DIExpression()), !dbg !21121
  %15 = load ptr, ptr %2, align 8, !dbg !21122
  %16 = getelementptr inbounds %struct.lwan_t_, ptr %15, i32 0, i32 2, !dbg !21123
  %17 = getelementptr inbounds %struct.anon, ptr %16, i32 0, i32 0, !dbg !21124
  %18 = load ptr, ptr %17, align 8, !dbg !21124
  %19 = load i32, ptr %3, align 4, !dbg !21125
  %20 = sext i32 %19 to i64, !dbg !21122
  %21 = getelementptr inbounds %struct.lwan_thread_t_, ptr %18, i64 %20, !dbg !21122
  store ptr %21, ptr %4, align 8, !dbg !21121
  %22 = load ptr, ptr %4, align 8, !dbg !21126
  %23 = getelementptr inbounds %struct.lwan_thread_t_, ptr %22, i32 0, i32 2, !dbg !21127
  %24 = load i32, ptr %23, align 8, !dbg !21127
  %25 = call i32 @close(i32 noundef %24), !dbg !21128
  %26 = load ptr, ptr %4, align 8, !dbg !21129
  %27 = getelementptr inbounds %struct.lwan_thread_t_, ptr %26, i32 0, i32 3, !dbg !21130
  %28 = getelementptr inbounds [2 x i32], ptr %27, i64 0, i64 0, !dbg !21129
  %29 = load i32, ptr %28, align 4, !dbg !21129
  %30 = call i32 @close(i32 noundef %29), !dbg !21131
  %31 = load ptr, ptr %4, align 8, !dbg !21132
  %32 = getelementptr inbounds %struct.lwan_thread_t_, ptr %31, i32 0, i32 3, !dbg !21133
  %33 = getelementptr inbounds [2 x i32], ptr %32, i64 0, i64 1, !dbg !21132
  %34 = load i32, ptr %33, align 4, !dbg !21132
  %35 = call i32 @close(i32 noundef %34), !dbg !21134
  %36 = load ptr, ptr %2, align 8, !dbg !21135
  %37 = getelementptr inbounds %struct.lwan_t_, ptr %36, i32 0, i32 2, !dbg !21136
  %38 = getelementptr inbounds %struct.anon, ptr %37, i32 0, i32 0, !dbg !21137
  %39 = load ptr, ptr %38, align 8, !dbg !21137
  %40 = load i32, ptr %3, align 4, !dbg !21138
  %41 = sext i32 %40 to i64, !dbg !21135
  %42 = getelementptr inbounds %struct.lwan_thread_t_, ptr %39, i64 %41, !dbg !21135
  %43 = getelementptr inbounds %struct.lwan_thread_t_, ptr %42, i32 0, i32 4, !dbg !21139
  %44 = load i64, ptr %43, align 8, !dbg !21139
  %45 = call i32 @pthread_tryjoin_np(i64 noundef %44, ptr noundef null) #17, !dbg !21140
  br label %46, !dbg !21141

46:                                               ; preds = %14
  %47 = load i32, ptr %3, align 4, !dbg !21142
  %48 = add nsw i32 %47, -1, !dbg !21142
  store i32 %48, ptr %3, align 4, !dbg !21142
  br label %11, !dbg !21143, !llvm.loop !21144

49:                                               ; preds = %11
  %50 = load ptr, ptr %2, align 8, !dbg !21146
  %51 = getelementptr inbounds %struct.lwan_t_, ptr %50, i32 0, i32 2, !dbg !21147
  %52 = getelementptr inbounds %struct.anon, ptr %51, i32 0, i32 0, !dbg !21148
  %53 = load ptr, ptr %52, align 8, !dbg !21148
  call void @free(ptr noundef %53) #17, !dbg !21149
  ret void, !dbg !21150
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_response_shutdown() #0 !dbg !21151 {
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.3.95, i32 noundef 85, ptr noundef @__FUNCTION__.lwan_response_shutdown, ptr noundef @.str.6.103), !dbg !21152
  %1 = load ptr, ptr @error_template, align 8, !dbg !21153
  %2 = icmp ne ptr %1, null, !dbg !21153
  br i1 %2, label %3, label %4, !dbg !21156

3:                                                ; preds = %0
  br label %5, !dbg !21156

4:                                                ; preds = %0
  call void @__assert_fail(ptr noundef @.str.7.104, ptr noundef @.str.3.95, i32 noundef 86, ptr noundef @__PRETTY_FUNCTION__.lwan_response_shutdown) #23, !dbg !21153
  unreachable, !dbg !21153

5:                                                ; preds = %3
  %6 = load ptr, ptr @error_template, align 8, !dbg !21157
  call void @lwan_tpl_free(ptr noundef %6), !dbg !21158
  ret void, !dbg !21159
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_tables_shutdown() #0 !dbg !21160 {
  ret void, !dbg !21161
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_status_shutdown(ptr noundef %0) #0 !dbg !21162 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !21163, metadata !DIExpression()), !dbg !21164
  ret void, !dbg !21165
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @lwan_module_shutdown(ptr noundef %0) #0 !dbg !21166 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !21167, metadata !DIExpression()), !dbg !21168
  %3 = load ptr, ptr %2, align 8, !dbg !21169
  %4 = getelementptr inbounds %struct.lwan_t_, ptr %3, i32 0, i32 3, !dbg !21170
  %5 = load ptr, ptr %4, align 8, !dbg !21170
  call void @hash_free(ptr noundef %5), !dbg !21171
  ret void, !dbg !21172
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_main_loop(ptr noundef %0) #0 !dbg !21173 {
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca %union.__SOCKADDR_ARG, align 8
  store ptr %0, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !21174, metadata !DIExpression()), !dbg !21175
  %9 = load volatile i32, ptr @main_socket, align 4, !dbg !21176
  %10 = icmp eq i32 %9, -1, !dbg !21176
  br i1 %10, label %11, label %12, !dbg !21179

11:                                               ; preds = %1
  br label %13, !dbg !21179

12:                                               ; preds = %1
  call void @__assert_fail(ptr noundef @.str.10.74, ptr noundef @.str.60, i32 noundef 561, ptr noundef @__PRETTY_FUNCTION__.lwan_main_loop) #23, !dbg !21176
  unreachable, !dbg !21176

13:                                               ; preds = %11
  %14 = load ptr, ptr %6, align 8, !dbg !21180
  %15 = getelementptr inbounds %struct.lwan_t_, ptr %14, i32 0, i32 5, !dbg !21181
  %16 = load i32, ptr %15, align 8, !dbg !21181
  store volatile i32 %16, ptr @main_socket, align 4, !dbg !21182
  %17 = call ptr @signal(i32 noundef 2, ptr noundef @sigint_handler) #17, !dbg !21183
  %18 = icmp eq ptr %17, inttoptr (i64 -1 to ptr), !dbg !21185
  br i1 %18, label %19, label %20, !dbg !21186

19:                                               ; preds = %13
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_debug(ptr noundef @.str.60, i32 noundef 564, ptr noundef @__FUNCTION__.lwan_main_loop, ptr noundef @.str.11.75) #24, !dbg !21187
  unreachable, !dbg !21187

20:                                               ; preds = %13
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_info_debug(ptr noundef @.str.60, i32 noundef 566, ptr noundef @__FUNCTION__.lwan_main_loop, ptr noundef @.str.12.76), !dbg !21188
  br label %21, !dbg !21189

21:                                               ; preds = %42, %35, %20
  call void @llvm.dbg.declare(metadata ptr %7, metadata !21190, metadata !DIExpression()), !dbg !21194
  %22 = load volatile i32, ptr @main_socket, align 4, !dbg !21195
  store ptr null, ptr %8, align 8, !dbg !21196
  %23 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %8, i32 0, i32 0, !dbg !21197
  %24 = load ptr, ptr %23, align 8, !dbg !21197
  %25 = call i32 @accept4(i32 noundef %22, ptr %24, ptr noundef null, i32 noundef 526336), !dbg !21197
  store i32 %25, ptr %7, align 4, !dbg !21194
  %26 = load i32, ptr %7, align 4, !dbg !21198
  %27 = icmp slt i32 %26, 0, !dbg !21198
  %28 = zext i1 %27 to i32, !dbg !21198
  %29 = sext i32 %28 to i64, !dbg !21198
  %30 = icmp ne i64 %29, 0, !dbg !21198
  br i1 %30, label %31, label %42, !dbg !21200

31:                                               ; preds = %21
  %32 = call ptr @__errno_location() #21, !dbg !21201
  %33 = load i32, ptr %32, align 4, !dbg !21201
  %34 = icmp ne i32 %33, 9, !dbg !21204
  br i1 %34, label %35, label %36, !dbg !21205

35:                                               ; preds = %31
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.60, i32 noundef 572, ptr noundef @__FUNCTION__.lwan_main_loop, ptr noundef @.str.13.77), !dbg !21206
  br label %21, !dbg !21208, !llvm.loop !21209

36:                                               ; preds = %31
  %37 = load volatile i32, ptr @main_socket, align 4, !dbg !21212
  %38 = icmp slt i32 %37, 0, !dbg !21214
  br i1 %38, label %39, label %40, !dbg !21215

39:                                               ; preds = %36
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_info_debug(ptr noundef @.str.60, i32 noundef 577, ptr noundef @__FUNCTION__.lwan_main_loop, ptr noundef @.str.14.78), !dbg !21216
  br label %41, !dbg !21218

40:                                               ; preds = %36
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_info_debug(ptr noundef @.str.60, i32 noundef 579, ptr noundef @__FUNCTION__.lwan_main_loop, ptr noundef @.str.15.101), !dbg !21219
  br label %41

41:                                               ; preds = %40, %39
  br label %62, !dbg !21221

42:                                               ; preds = %21
  %43 = load ptr, ptr %6, align 8, !dbg !21222
  %44 = load i32, ptr %7, align 4, !dbg !21223
  store ptr %43, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !21224, metadata !DIExpression()), !dbg !21228
  store i32 %44, ptr %3, align 4
  call void @llvm.dbg.declare(metadata ptr %3, metadata !21230, metadata !DIExpression()), !dbg !21231
  call void @llvm.dbg.declare(metadata ptr %4, metadata !21232, metadata !DIExpression()), !dbg !21233
  %45 = load i32, ptr %3, align 4, !dbg !21234
  %46 = sub nsw i32 %45, 1, !dbg !21235
  %47 = sdiv i32 %46, 2, !dbg !21236
  %48 = load ptr, ptr %2, align 8, !dbg !21237
  %49 = getelementptr inbounds %struct.lwan_t_, ptr %48, i32 0, i32 2, !dbg !21238
  %50 = getelementptr inbounds %struct.anon, ptr %49, i32 0, i32 2, !dbg !21239
  %51 = load i16, ptr %50, align 4, !dbg !21239
  %52 = zext i16 %51 to i32, !dbg !21237
  %53 = srem i32 %47, %52, !dbg !21240
  store i32 %53, ptr %4, align 4, !dbg !21241
  call void @llvm.dbg.declare(metadata ptr %5, metadata !21242, metadata !DIExpression()), !dbg !21243
  %54 = load ptr, ptr %2, align 8, !dbg !21244
  %55 = getelementptr inbounds %struct.lwan_t_, ptr %54, i32 0, i32 2, !dbg !21245
  %56 = load ptr, ptr %55, align 8, !dbg !21246
  %57 = load i32, ptr %4, align 4, !dbg !21247
  %58 = sext i32 %57 to i64, !dbg !21244
  %59 = getelementptr inbounds %struct.lwan_thread_t_, ptr %56, i64 %58, !dbg !21244
  store ptr %59, ptr %5, align 8, !dbg !21243
  %60 = load ptr, ptr %5, align 8, !dbg !21248
  %61 = load i32, ptr %3, align 4, !dbg !21249
  call void @lwan_thread_add_client(ptr noundef %60, i32 noundef %61) #17, !dbg !21250
  br label %21, !dbg !21251, !llvm.loop !21209

62:                                               ; preds = %41
  ret void, !dbg !21252
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @sigint_handler(i32 noundef %0) #0 !dbg !21253 {
  %2 = alloca i32, align 4
  store i32 %0, ptr %2, align 4
  call void @llvm.dbg.declare(metadata ptr %2, metadata !21254, metadata !DIExpression()), !dbg !21255
  %3 = load volatile i32, ptr @main_socket, align 4, !dbg !21256
  %4 = icmp slt i32 %3, 0, !dbg !21258
  br i1 %4, label %5, label %6, !dbg !21259

5:                                                ; preds = %1
  br label %9, !dbg !21260

6:                                                ; preds = %1
  %7 = load volatile i32, ptr @main_socket, align 4, !dbg !21261
  %8 = call i32 @close(i32 noundef %7), !dbg !21262
  store volatile i32 -1, ptr @main_socket, align 4, !dbg !21263
  br label %9, !dbg !21264

9:                                                ; preds = %6, %5
  ret void, !dbg !21264
}

declare i32 @accept4(i32 noundef, ptr, ptr noundef, i32 noundef) #5

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_thread_add_client(ptr noundef %0, i32 noundef %1) #0 !dbg !21265 {
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !21268, metadata !DIExpression()), !dbg !21269
  store i32 %1, ptr %4, align 4
  call void @llvm.dbg.declare(metadata ptr %4, metadata !21270, metadata !DIExpression()), !dbg !21271
  %5 = load ptr, ptr %3, align 8, !dbg !21272
  %6 = getelementptr inbounds %struct.lwan_thread_t_, ptr %5, i32 0, i32 0, !dbg !21273
  %7 = load ptr, ptr %6, align 8, !dbg !21273
  %8 = getelementptr inbounds %struct.lwan_t_, ptr %7, i32 0, i32 1, !dbg !21274
  %9 = load ptr, ptr %8, align 8, !dbg !21274
  %10 = load i32, ptr %4, align 4, !dbg !21275
  %11 = sext i32 %10 to i64, !dbg !21272
  %12 = getelementptr inbounds %struct.lwan_connection_t_, ptr %9, i64 %11, !dbg !21272
  %13 = getelementptr inbounds %struct.lwan_connection_t_, ptr %12, i32 0, i32 0, !dbg !21276
  store i32 0, ptr %13, align 8, !dbg !21277
  %14 = load ptr, ptr %3, align 8, !dbg !21278
  %15 = load ptr, ptr %3, align 8, !dbg !21279
  %16 = getelementptr inbounds %struct.lwan_thread_t_, ptr %15, i32 0, i32 0, !dbg !21280
  %17 = load ptr, ptr %16, align 8, !dbg !21280
  %18 = getelementptr inbounds %struct.lwan_t_, ptr %17, i32 0, i32 1, !dbg !21281
  %19 = load ptr, ptr %18, align 8, !dbg !21281
  %20 = load i32, ptr %4, align 4, !dbg !21282
  %21 = sext i32 %20 to i64, !dbg !21279
  %22 = getelementptr inbounds %struct.lwan_connection_t_, ptr %19, i64 %21, !dbg !21279
  %23 = getelementptr inbounds %struct.lwan_connection_t_, ptr %22, i32 0, i32 3, !dbg !21283
  store ptr %14, ptr %23, align 8, !dbg !21284
  %24 = load ptr, ptr %3, align 8, !dbg !21285
  %25 = getelementptr inbounds %struct.lwan_thread_t_, ptr %24, i32 0, i32 3, !dbg !21285
  %26 = getelementptr inbounds [2 x i32], ptr %25, i64 0, i64 1, !dbg !21285
  %27 = load i32, ptr %26, align 4, !dbg !21285
  %28 = call i64 @write(i32 noundef %27, ptr noundef %4, i64 noundef 4), !dbg !21285
  %29 = icmp slt i64 %28, 0, !dbg !21285
  %30 = zext i1 %29 to i32, !dbg !21285
  %31 = sext i32 %30 to i64, !dbg !21285
  %32 = icmp ne i64 %31, 0, !dbg !21285
  br i1 %32, label %33, label %34, !dbg !21287

33:                                               ; preds = %2
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.380, i32 noundef 408, ptr noundef @__FUNCTION__.lwan_thread_add_client, ptr noundef @.str.4.386), !dbg !21288
  br label %34, !dbg !21288

34:                                               ; preds = %33, %2
  ret void, !dbg !21289
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @lwan_request_get_query_param(ptr noundef %0, ptr noundef %1) #0 !dbg !21290 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !21293, metadata !DIExpression()), !dbg !21294
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !21295, metadata !DIExpression()), !dbg !21296
  %5 = load ptr, ptr %3, align 8, !dbg !21297
  %6 = getelementptr inbounds %struct.lwan_request_t_, ptr %5, i32 0, i32 5, !dbg !21298
  %7 = getelementptr inbounds %struct.lwan_value_t_, ptr %6, i32 0, i32 0, !dbg !21299
  %8 = load ptr, ptr %7, align 8, !dbg !21299
  %9 = load ptr, ptr %3, align 8, !dbg !21300
  %10 = getelementptr inbounds %struct.lwan_request_t_, ptr %9, i32 0, i32 5, !dbg !21301
  %11 = getelementptr inbounds %struct.lwan_value_t_, ptr %10, i32 0, i32 1, !dbg !21302
  %12 = load i64, ptr %11, align 8, !dbg !21302
  %13 = load ptr, ptr %4, align 8, !dbg !21303
  %14 = call ptr @value_array_bsearch(ptr noundef %8, i64 noundef %12, ptr noundef %13), !dbg !21304
  ret ptr %14, !dbg !21305
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @value_array_bsearch(ptr noundef %0, i64 noundef %1, ptr noundef %2) #0 !dbg !21306 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i64, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i32, align 4
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !21309, metadata !DIExpression()), !dbg !21310
  store i64 %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !21311, metadata !DIExpression()), !dbg !21312
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !21313, metadata !DIExpression()), !dbg !21314
  %14 = load i64, ptr %6, align 8, !dbg !21315
  %15 = icmp ne i64 %14, 0, !dbg !21315
  %16 = xor i1 %15, true, !dbg !21315
  %17 = zext i1 %16 to i32, !dbg !21315
  %18 = sext i32 %17 to i64, !dbg !21315
  %19 = icmp ne i64 %18, 0, !dbg !21315
  br i1 %19, label %20, label %21, !dbg !21317

20:                                               ; preds = %3
  store ptr null, ptr %4, align 8, !dbg !21318
  br label %65, !dbg !21318

21:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata ptr %8, metadata !21319, metadata !DIExpression()), !dbg !21320
  store i64 0, ptr %8, align 8, !dbg !21320
  call void @llvm.dbg.declare(metadata ptr %9, metadata !21321, metadata !DIExpression()), !dbg !21322
  %22 = load i64, ptr %6, align 8, !dbg !21323
  store i64 %22, ptr %9, align 8, !dbg !21322
  call void @llvm.dbg.declare(metadata ptr %10, metadata !21324, metadata !DIExpression()), !dbg !21325
  %23 = load ptr, ptr %7, align 8, !dbg !21326
  %24 = call i64 @strlen(ptr noundef %23) #20, !dbg !21327
  store i64 %24, ptr %10, align 8, !dbg !21325
  br label %25, !dbg !21328

25:                                               ; preds = %63, %21
  %26 = load i64, ptr %8, align 8, !dbg !21329
  %27 = load i64, ptr %9, align 8, !dbg !21330
  %28 = icmp ult i64 %26, %27, !dbg !21331
  br i1 %28, label %29, label %64, !dbg !21328

29:                                               ; preds = %25
  call void @llvm.dbg.declare(metadata ptr %11, metadata !21332, metadata !DIExpression()), !dbg !21334
  %30 = load i64, ptr %8, align 8, !dbg !21335
  %31 = load i64, ptr %9, align 8, !dbg !21336
  %32 = add i64 %30, %31, !dbg !21337
  %33 = udiv i64 %32, 2, !dbg !21338
  store i64 %33, ptr %11, align 8, !dbg !21334
  call void @llvm.dbg.declare(metadata ptr %12, metadata !21339, metadata !DIExpression()), !dbg !21340
  %34 = load ptr, ptr %5, align 8, !dbg !21341
  %35 = load i64, ptr %11, align 8, !dbg !21342
  %36 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %34, i64 %35, !dbg !21343
  store ptr %36, ptr %12, align 8, !dbg !21340
  call void @llvm.dbg.declare(metadata ptr %13, metadata !21344, metadata !DIExpression()), !dbg !21345
  %37 = load ptr, ptr %7, align 8, !dbg !21346
  %38 = load ptr, ptr %12, align 8, !dbg !21347
  %39 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %38, i32 0, i32 0, !dbg !21348
  %40 = load ptr, ptr %39, align 8, !dbg !21348
  %41 = load i64, ptr %10, align 8, !dbg !21349
  %42 = call i32 @strncmp(ptr noundef %37, ptr noundef %40, i64 noundef %41) #20, !dbg !21350
  store i32 %42, ptr %13, align 4, !dbg !21345
  %43 = load i32, ptr %13, align 4, !dbg !21351
  %44 = icmp ne i32 %43, 0, !dbg !21351
  %45 = xor i1 %44, true, !dbg !21351
  %46 = xor i1 %45, true, !dbg !21351
  %47 = xor i1 %46, true, !dbg !21351
  %48 = zext i1 %47 to i32, !dbg !21351
  %49 = sext i32 %48 to i64, !dbg !21351
  %50 = icmp ne i64 %49, 0, !dbg !21351
  br i1 %50, label %51, label %55, !dbg !21353

51:                                               ; preds = %29
  %52 = load ptr, ptr %12, align 8, !dbg !21354
  %53 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %52, i32 0, i32 1, !dbg !21355
  %54 = load ptr, ptr %53, align 8, !dbg !21355
  store ptr %54, ptr %4, align 8, !dbg !21356
  br label %65, !dbg !21356

55:                                               ; preds = %29
  %56 = load i32, ptr %13, align 4, !dbg !21357
  %57 = icmp sgt i32 %56, 0, !dbg !21359
  br i1 %57, label %58, label %61, !dbg !21360

58:                                               ; preds = %55
  %59 = load i64, ptr %11, align 8, !dbg !21361
  %60 = add i64 %59, 1, !dbg !21362
  store i64 %60, ptr %8, align 8, !dbg !21363
  br label %63, !dbg !21364

61:                                               ; preds = %55
  %62 = load i64, ptr %11, align 8, !dbg !21365
  store i64 %62, ptr %9, align 8, !dbg !21366
  br label %63

63:                                               ; preds = %61, %58
  br label %25, !dbg !21328, !llvm.loop !21367

64:                                               ; preds = %25
  store ptr null, ptr %4, align 8, !dbg !21369
  br label %65, !dbg !21369

65:                                               ; preds = %64, %51, %20
  %66 = load ptr, ptr %4, align 8, !dbg !21370
  ret ptr %66, !dbg !21370
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @lwan_request_get_post_param(ptr noundef %0, ptr noundef %1) #0 !dbg !21371 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !21372, metadata !DIExpression()), !dbg !21373
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !21374, metadata !DIExpression()), !dbg !21375
  %5 = load ptr, ptr %3, align 8, !dbg !21376
  %6 = getelementptr inbounds %struct.lwan_request_t_, ptr %5, i32 0, i32 6, !dbg !21377
  %7 = getelementptr inbounds %struct.lwan_value_t_, ptr %6, i32 0, i32 0, !dbg !21378
  %8 = load ptr, ptr %7, align 8, !dbg !21378
  %9 = load ptr, ptr %3, align 8, !dbg !21379
  %10 = getelementptr inbounds %struct.lwan_request_t_, ptr %9, i32 0, i32 6, !dbg !21380
  %11 = getelementptr inbounds %struct.lwan_value_t_, ptr %10, i32 0, i32 1, !dbg !21381
  %12 = load i64, ptr %11, align 8, !dbg !21381
  %13 = load ptr, ptr %4, align 8, !dbg !21382
  %14 = call ptr @value_array_bsearch(ptr noundef %8, i64 noundef %12, ptr noundef %13), !dbg !21383
  ret ptr %14, !dbg !21384
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @lwan_response_set_event_stream(ptr noundef %0, i32 noundef %1) #0 !dbg !21385 {
  %3 = alloca i64, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca [25 x i8], align 16
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca ptr, align 8
  %16 = alloca i64, align 8
  %17 = alloca ptr, align 8
  %18 = alloca i64, align 8
  %19 = alloca ptr, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca ptr, align 8
  %23 = alloca i64, align 8
  %24 = alloca i1, align 1
  %25 = alloca ptr, align 8
  %26 = alloca i32, align 4
  %27 = alloca [4096 x i8], align 16
  %28 = alloca i64, align 8
  store ptr %0, ptr %25, align 8
  call void @llvm.dbg.declare(metadata ptr %25, metadata !21386, metadata !DIExpression()), !dbg !21387
  store i32 %1, ptr %26, align 4
  call void @llvm.dbg.declare(metadata ptr %26, metadata !21388, metadata !DIExpression()), !dbg !21389
  call void @llvm.dbg.declare(metadata ptr %27, metadata !21390, metadata !DIExpression()), !dbg !21391
  call void @llvm.dbg.declare(metadata ptr %28, metadata !21392, metadata !DIExpression()), !dbg !21393
  %29 = load ptr, ptr %25, align 8, !dbg !21394
  %30 = getelementptr inbounds %struct.lwan_request_t_, ptr %29, i32 0, i32 0, !dbg !21396
  %31 = load i32, ptr %30, align 8, !dbg !21396
  %32 = and i32 %31, 64, !dbg !21397
  %33 = icmp ne i32 %32, 0, !dbg !21397
  br i1 %33, label %34, label %35, !dbg !21398

34:                                               ; preds = %2
  store i1 false, ptr %24, align 1, !dbg !21399
  br label %509, !dbg !21399

35:                                               ; preds = %2
  %36 = load ptr, ptr %25, align 8, !dbg !21400
  %37 = getelementptr inbounds %struct.lwan_request_t_, ptr %36, i32 0, i32 8, !dbg !21401
  %38 = getelementptr inbounds %struct.lwan_response_t_, ptr %37, i32 0, i32 1, !dbg !21402
  store ptr @.str.27.135, ptr %38, align 8, !dbg !21403
  %39 = load ptr, ptr %25, align 8, !dbg !21404
  %40 = getelementptr inbounds %struct.lwan_request_t_, ptr %39, i32 0, i32 0, !dbg !21405
  %41 = load i32, ptr %40, align 8, !dbg !21406
  %42 = or i32 %41, 256, !dbg !21406
  store i32 %42, ptr %40, align 8, !dbg !21406
  %43 = load ptr, ptr %25, align 8, !dbg !21407
  %44 = load i32, ptr %26, align 4, !dbg !21408
  %45 = getelementptr inbounds [4096 x i8], ptr %27, i64 0, i64 0, !dbg !21409
  store ptr %43, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !13329, metadata !DIExpression()), !dbg !21410
  store i32 %44, ptr %5, align 4
  call void @llvm.dbg.declare(metadata ptr %5, metadata !13335, metadata !DIExpression()), !dbg !21412
  store ptr %45, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !13337, metadata !DIExpression()), !dbg !21413
  store i64 4096, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !13339, metadata !DIExpression()), !dbg !21414
  call void @llvm.dbg.declare(metadata ptr %8, metadata !13341, metadata !DIExpression()), !dbg !21415
  call void @llvm.dbg.declare(metadata ptr %9, metadata !13343, metadata !DIExpression()), !dbg !21416
  %46 = load ptr, ptr %6, align 8, !dbg !21417
  %47 = load i64, ptr %7, align 8, !dbg !21418
  %48 = getelementptr inbounds i8, ptr %46, i64 %47, !dbg !21419
  store ptr %48, ptr %9, align 8, !dbg !21416
  call void @llvm.dbg.declare(metadata ptr %10, metadata !13348, metadata !DIExpression()), !dbg !21420
  call void @llvm.dbg.declare(metadata ptr %11, metadata !13350, metadata !DIExpression()), !dbg !21421
  store i8 0, ptr %11, align 1, !dbg !21421
  call void @llvm.dbg.declare(metadata ptr %12, metadata !13352, metadata !DIExpression()), !dbg !21422
  store i8 0, ptr %12, align 1, !dbg !21422
  %49 = load ptr, ptr %6, align 8, !dbg !21423
  store ptr %49, ptr %8, align 8, !dbg !21424
  %50 = load ptr, ptr %4, align 8, !dbg !21425
  %51 = load i32, ptr %50, align 8, !dbg !21426
  %52 = and i32 %51, 32, !dbg !21427
  %53 = icmp ne i32 %52, 0, !dbg !21427
  br i1 %53, label %54, label %65, !dbg !21428

54:                                               ; preds = %35
  %55 = load ptr, ptr %8, align 8, !dbg !21429
  %56 = getelementptr inbounds i8, ptr %55, i64 9, !dbg !21429
  %57 = load ptr, ptr %9, align 8, !dbg !21429
  %58 = icmp uge ptr %56, %57, !dbg !21429
  %59 = zext i1 %58 to i32, !dbg !21429
  %60 = sext i32 %59 to i64, !dbg !21429
  br i1 %58, label %61, label %62, !dbg !21430

61:                                               ; preds = %54
  store i64 0, ptr %3, align 8, !dbg !21429
  br label %491, !dbg !21429

62:                                               ; preds = %54
  %63 = load ptr, ptr %8, align 8, !dbg !21430
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %63, ptr align 1 @.str.10.110, i64 9, i1 false), !dbg !21430
  %64 = getelementptr inbounds i8, ptr %63, i64 9, !dbg !21430
  store ptr %64, ptr %8, align 8, !dbg !21430
  br label %76, !dbg !21430

65:                                               ; preds = %35
  %66 = load ptr, ptr %8, align 8, !dbg !21431
  %67 = getelementptr inbounds i8, ptr %66, i64 9, !dbg !21431
  %68 = load ptr, ptr %9, align 8, !dbg !21431
  %69 = icmp uge ptr %67, %68, !dbg !21431
  %70 = zext i1 %69 to i32, !dbg !21431
  %71 = sext i32 %70 to i64, !dbg !21431
  br i1 %69, label %72, label %73, !dbg !21432

72:                                               ; preds = %65
  store i64 0, ptr %3, align 8, !dbg !21431
  br label %491, !dbg !21431

73:                                               ; preds = %65
  %74 = load ptr, ptr %8, align 8, !dbg !21432
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %74, ptr align 1 @.str.11.111, i64 9, i1 false), !dbg !21432
  %75 = getelementptr inbounds i8, ptr %74, i64 9, !dbg !21432
  store ptr %75, ptr %8, align 8, !dbg !21432
  br label %76

76:                                               ; preds = %73, %62
  call void @llvm.dbg.declare(metadata ptr %13, metadata !13369, metadata !DIExpression()), !dbg !21433
  %77 = load i32, ptr %5, align 4, !dbg !21433
  %78 = call ptr @lwan_http_status_as_string_with_code(i32 noundef %77) #20, !dbg !21433
  %79 = call i64 @strlen(ptr noundef %78) #20, !dbg !21433
  store i64 %79, ptr %13, align 8, !dbg !21433
  %80 = load ptr, ptr %8, align 8, !dbg !21434
  %81 = load i64, ptr %13, align 8, !dbg !21434
  %82 = getelementptr inbounds i8, ptr %80, i64 %81, !dbg !21434
  %83 = load ptr, ptr %9, align 8, !dbg !21434
  %84 = icmp uge ptr %82, %83, !dbg !21434
  %85 = zext i1 %84 to i32, !dbg !21434
  %86 = sext i32 %85 to i64, !dbg !21434
  br i1 %84, label %87, label %88, !dbg !21435

87:                                               ; preds = %76
  store i64 0, ptr %3, align 8, !dbg !21434
  br label %491, !dbg !21434

88:                                               ; preds = %76
  %89 = load ptr, ptr %8, align 8, !dbg !21435
  %90 = load i32, ptr %5, align 4, !dbg !21435
  %91 = call ptr @lwan_http_status_as_string_with_code(i32 noundef %90) #20, !dbg !21435
  %92 = load i64, ptr %13, align 8, !dbg !21435
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %89, ptr align 1 %91, i64 %92, i1 false), !dbg !21435
  %93 = getelementptr inbounds i8, ptr %89, i64 %92, !dbg !21435
  store ptr %93, ptr %8, align 8, !dbg !21435
  %94 = load ptr, ptr %4, align 8, !dbg !21436
  %95 = load i32, ptr %94, align 8, !dbg !21437
  %96 = and i32 %95, 128, !dbg !21438
  %97 = icmp ne i32 %96, 0, !dbg !21438
  br i1 %97, label %98, label %109, !dbg !21439

98:                                               ; preds = %88
  %99 = load ptr, ptr %8, align 8, !dbg !21440
  %100 = getelementptr inbounds i8, ptr %99, i64 28, !dbg !21440
  %101 = load ptr, ptr %9, align 8, !dbg !21440
  %102 = icmp uge ptr %100, %101, !dbg !21440
  %103 = zext i1 %102 to i32, !dbg !21440
  %104 = sext i32 %103 to i64, !dbg !21440
  br i1 %102, label %105, label %106, !dbg !21441

105:                                              ; preds = %98
  store i64 0, ptr %3, align 8, !dbg !21440
  br label %491, !dbg !21440

106:                                              ; preds = %98
  %107 = load ptr, ptr %8, align 8, !dbg !21441
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %107, ptr align 1 @.str.12.112, i64 28, i1 false), !dbg !21441
  %108 = getelementptr inbounds i8, ptr %107, i64 28, !dbg !21441
  store ptr %108, ptr %8, align 8, !dbg !21441
  br label %191, !dbg !21442

109:                                              ; preds = %88
  %110 = load ptr, ptr %4, align 8, !dbg !21443
  %111 = load i32, ptr %110, align 8, !dbg !21444
  %112 = and i32 %111, 256, !dbg !21445
  %113 = icmp ne i32 %112, 0, !dbg !21445
  br i1 %113, label %114, label %115, !dbg !21446

114:                                              ; preds = %109
  br label %190, !dbg !21447

115:                                              ; preds = %109
  %116 = load ptr, ptr %8, align 8, !dbg !21448
  %117 = getelementptr inbounds i8, ptr %116, i64 18, !dbg !21448
  %118 = load ptr, ptr %9, align 8, !dbg !21448
  %119 = icmp uge ptr %117, %118, !dbg !21448
  %120 = zext i1 %119 to i32, !dbg !21448
  %121 = sext i32 %120 to i64, !dbg !21448
  br i1 %119, label %122, label %123, !dbg !21449

122:                                              ; preds = %115
  store i64 0, ptr %3, align 8, !dbg !21448
  br label %491, !dbg !21448

123:                                              ; preds = %115
  %124 = load ptr, ptr %8, align 8, !dbg !21449
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %124, ptr align 1 @.str.13.113, i64 18, i1 false), !dbg !21449
  %125 = getelementptr inbounds i8, ptr %124, i64 18, !dbg !21449
  store ptr %125, ptr %8, align 8, !dbg !21449
  %126 = load ptr, ptr %4, align 8, !dbg !21450
  %127 = getelementptr inbounds %struct.lwan_request_t_, ptr %126, i32 0, i32 8, !dbg !21451
  %128 = getelementptr inbounds %struct.lwan_response_t_, ptr %127, i32 0, i32 4, !dbg !21452
  %129 = load ptr, ptr %128, align 8, !dbg !21453
  %130 = icmp ne ptr %129, null, !dbg !21450
  br i1 %130, label %131, label %159, !dbg !21454

131:                                              ; preds = %123
  call void @llvm.dbg.declare(metadata ptr %14, metadata !13405, metadata !DIExpression()), !dbg !21455
  call void @llvm.dbg.declare(metadata ptr %15, metadata !13408, metadata !DIExpression()), !dbg !21455
  %132 = load ptr, ptr %4, align 8, !dbg !21455
  %133 = getelementptr inbounds %struct.lwan_request_t_, ptr %132, i32 0, i32 8, !dbg !21455
  %134 = getelementptr inbounds %struct.lwan_response_t_, ptr %133, i32 0, i32 2, !dbg !21455
  %135 = load i64, ptr %134, align 8, !dbg !21455
  %136 = call ptr @uint_to_string(i64 noundef %135, ptr noundef %10, ptr noundef %14) #17, !dbg !21455
  store ptr %136, ptr %15, align 8, !dbg !21455
  %137 = load ptr, ptr %8, align 8, !dbg !21456
  %138 = load i64, ptr %14, align 8, !dbg !21456
  %139 = getelementptr inbounds i8, ptr %137, i64 %138, !dbg !21456
  %140 = load ptr, ptr %9, align 8, !dbg !21456
  %141 = icmp uge ptr %139, %140, !dbg !21456
  %142 = zext i1 %141 to i32, !dbg !21456
  %143 = sext i32 %142 to i64, !dbg !21456
  br i1 %141, label %144, label %145, !dbg !21455

144:                                              ; preds = %131
  store i64 0, ptr %3, align 8, !dbg !21456
  br label %491, !dbg !21456

145:                                              ; preds = %131
  %146 = load ptr, ptr %8, align 8, !dbg !21457
  %147 = load i64, ptr %14, align 8, !dbg !21457
  %148 = getelementptr inbounds i8, ptr %146, i64 %147, !dbg !21457
  %149 = load ptr, ptr %9, align 8, !dbg !21457
  %150 = icmp uge ptr %148, %149, !dbg !21457
  %151 = zext i1 %150 to i32, !dbg !21457
  %152 = sext i32 %151 to i64, !dbg !21457
  br i1 %150, label %153, label %154, !dbg !21458

153:                                              ; preds = %145
  store i64 0, ptr %3, align 8, !dbg !21457
  br label %491, !dbg !21457

154:                                              ; preds = %145
  %155 = load ptr, ptr %8, align 8, !dbg !21458
  %156 = load ptr, ptr %15, align 8, !dbg !21458
  %157 = load i64, ptr %14, align 8, !dbg !21458
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %155, ptr align 1 %156, i64 %157, i1 false), !dbg !21458
  %158 = getelementptr inbounds i8, ptr %155, i64 %157, !dbg !21458
  store ptr %158, ptr %8, align 8, !dbg !21458
  br label %189, !dbg !21455

159:                                              ; preds = %123
  call void @llvm.dbg.declare(metadata ptr %16, metadata !13415, metadata !DIExpression()), !dbg !21459
  call void @llvm.dbg.declare(metadata ptr %17, metadata !13418, metadata !DIExpression()), !dbg !21459
  %160 = load ptr, ptr %4, align 8, !dbg !21459
  %161 = getelementptr inbounds %struct.lwan_request_t_, ptr %160, i32 0, i32 8, !dbg !21459
  %162 = load ptr, ptr %161, align 8, !dbg !21459
  %163 = getelementptr inbounds %struct.strbuf_t_, ptr %162, i32 0, i32 1, !dbg !21459
  %164 = getelementptr inbounds %struct.anon.3, ptr %163, i32 0, i32 1, !dbg !21459
  %165 = load i64, ptr %164, align 8, !dbg !21459
  %166 = call ptr @uint_to_string(i64 noundef %165, ptr noundef %10, ptr noundef %16) #17, !dbg !21459
  store ptr %166, ptr %17, align 8, !dbg !21459
  %167 = load ptr, ptr %8, align 8, !dbg !21460
  %168 = load i64, ptr %16, align 8, !dbg !21460
  %169 = getelementptr inbounds i8, ptr %167, i64 %168, !dbg !21460
  %170 = load ptr, ptr %9, align 8, !dbg !21460
  %171 = icmp uge ptr %169, %170, !dbg !21460
  %172 = zext i1 %171 to i32, !dbg !21460
  %173 = sext i32 %172 to i64, !dbg !21460
  br i1 %171, label %174, label %175, !dbg !21459

174:                                              ; preds = %159
  store i64 0, ptr %3, align 8, !dbg !21460
  br label %491, !dbg !21460

175:                                              ; preds = %159
  %176 = load ptr, ptr %8, align 8, !dbg !21461
  %177 = load i64, ptr %16, align 8, !dbg !21461
  %178 = getelementptr inbounds i8, ptr %176, i64 %177, !dbg !21461
  %179 = load ptr, ptr %9, align 8, !dbg !21461
  %180 = icmp uge ptr %178, %179, !dbg !21461
  %181 = zext i1 %180 to i32, !dbg !21461
  %182 = sext i32 %181 to i64, !dbg !21461
  br i1 %180, label %183, label %184, !dbg !21462

183:                                              ; preds = %175
  store i64 0, ptr %3, align 8, !dbg !21461
  br label %491, !dbg !21461

184:                                              ; preds = %175
  %185 = load ptr, ptr %8, align 8, !dbg !21462
  %186 = load ptr, ptr %17, align 8, !dbg !21462
  %187 = load i64, ptr %16, align 8, !dbg !21462
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %185, ptr align 1 %186, i64 %187, i1 false), !dbg !21462
  %188 = getelementptr inbounds i8, ptr %185, i64 %187, !dbg !21462
  store ptr %188, ptr %8, align 8, !dbg !21462
  br label %189

189:                                              ; preds = %184, %154
  br label %190

190:                                              ; preds = %189, %114
  br label %191

191:                                              ; preds = %190, %106
  %192 = load ptr, ptr %8, align 8, !dbg !21463
  %193 = getelementptr inbounds i8, ptr %192, i64 16, !dbg !21463
  %194 = load ptr, ptr %9, align 8, !dbg !21463
  %195 = icmp uge ptr %193, %194, !dbg !21463
  %196 = zext i1 %195 to i32, !dbg !21463
  %197 = sext i32 %196 to i64, !dbg !21463
  br i1 %195, label %198, label %199, !dbg !21464

198:                                              ; preds = %191
  store i64 0, ptr %3, align 8, !dbg !21463
  br label %491, !dbg !21463

199:                                              ; preds = %191
  %200 = load ptr, ptr %8, align 8, !dbg !21464
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %200, ptr align 1 @.str.14.114, i64 16, i1 false), !dbg !21464
  %201 = getelementptr inbounds i8, ptr %200, i64 16, !dbg !21464
  store ptr %201, ptr %8, align 8, !dbg !21464
  call void @llvm.dbg.declare(metadata ptr %18, metadata !13429, metadata !DIExpression()), !dbg !21465
  %202 = load ptr, ptr %4, align 8, !dbg !21465
  %203 = getelementptr inbounds %struct.lwan_request_t_, ptr %202, i32 0, i32 8, !dbg !21465
  %204 = getelementptr inbounds %struct.lwan_response_t_, ptr %203, i32 0, i32 1, !dbg !21465
  %205 = load ptr, ptr %204, align 8, !dbg !21465
  %206 = call i64 @strlen(ptr noundef %205) #20, !dbg !21465
  store i64 %206, ptr %18, align 8, !dbg !21465
  %207 = load ptr, ptr %8, align 8, !dbg !21466
  %208 = load i64, ptr %18, align 8, !dbg !21466
  %209 = getelementptr inbounds i8, ptr %207, i64 %208, !dbg !21466
  %210 = load ptr, ptr %9, align 8, !dbg !21466
  %211 = icmp uge ptr %209, %210, !dbg !21466
  %212 = zext i1 %211 to i32, !dbg !21466
  %213 = sext i32 %212 to i64, !dbg !21466
  br i1 %211, label %214, label %215, !dbg !21467

214:                                              ; preds = %199
  store i64 0, ptr %3, align 8, !dbg !21466
  br label %491, !dbg !21466

215:                                              ; preds = %199
  %216 = load ptr, ptr %8, align 8, !dbg !21467
  %217 = load ptr, ptr %4, align 8, !dbg !21467
  %218 = getelementptr inbounds %struct.lwan_request_t_, ptr %217, i32 0, i32 8, !dbg !21467
  %219 = getelementptr inbounds %struct.lwan_response_t_, ptr %218, i32 0, i32 1, !dbg !21467
  %220 = load ptr, ptr %219, align 8, !dbg !21467
  %221 = load i64, ptr %18, align 8, !dbg !21467
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %216, ptr align 1 %220, i64 %221, i1 false), !dbg !21467
  %222 = getelementptr inbounds i8, ptr %216, i64 %221, !dbg !21467
  store ptr %222, ptr %8, align 8, !dbg !21467
  %223 = load ptr, ptr %4, align 8, !dbg !21468
  %224 = getelementptr inbounds %struct.lwan_request_t_, ptr %223, i32 0, i32 4, !dbg !21469
  %225 = load ptr, ptr %224, align 8, !dbg !21469
  %226 = load i32, ptr %225, align 8, !dbg !21470
  %227 = and i32 %226, 1, !dbg !21471
  %228 = icmp ne i32 %227, 0, !dbg !21471
  br i1 %228, label %229, label %240, !dbg !21472

229:                                              ; preds = %215
  %230 = load ptr, ptr %8, align 8, !dbg !21473
  %231 = getelementptr inbounds i8, ptr %230, i64 24, !dbg !21473
  %232 = load ptr, ptr %9, align 8, !dbg !21473
  %233 = icmp uge ptr %231, %232, !dbg !21473
  %234 = zext i1 %233 to i32, !dbg !21473
  %235 = sext i32 %234 to i64, !dbg !21473
  br i1 %233, label %236, label %237, !dbg !21474

236:                                              ; preds = %229
  store i64 0, ptr %3, align 8, !dbg !21473
  br label %491, !dbg !21473

237:                                              ; preds = %229
  %238 = load ptr, ptr %8, align 8, !dbg !21474
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %238, ptr align 1 @.str.15.115, i64 24, i1 false), !dbg !21474
  %239 = getelementptr inbounds i8, ptr %238, i64 24, !dbg !21474
  store ptr %239, ptr %8, align 8, !dbg !21474
  br label %251, !dbg !21474

240:                                              ; preds = %215
  %241 = load ptr, ptr %8, align 8, !dbg !21475
  %242 = getelementptr inbounds i8, ptr %241, i64 19, !dbg !21475
  %243 = load ptr, ptr %9, align 8, !dbg !21475
  %244 = icmp uge ptr %242, %243, !dbg !21475
  %245 = zext i1 %244 to i32, !dbg !21475
  %246 = sext i32 %245 to i64, !dbg !21475
  br i1 %244, label %247, label %248, !dbg !21476

247:                                              ; preds = %240
  store i64 0, ptr %3, align 8, !dbg !21475
  br label %491, !dbg !21475

248:                                              ; preds = %240
  %249 = load ptr, ptr %8, align 8, !dbg !21476
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %249, ptr align 1 @.str.16.116, i64 19, i1 false), !dbg !21476
  %250 = getelementptr inbounds i8, ptr %249, i64 19, !dbg !21476
  store ptr %250, ptr %8, align 8, !dbg !21476
  br label %251

251:                                              ; preds = %248, %237
  %252 = load i32, ptr %5, align 4, !dbg !21477
  %253 = icmp ult i32 %252, 400, !dbg !21478
  br i1 %253, label %254, label %353, !dbg !21479

254:                                              ; preds = %251
  %255 = load ptr, ptr %4, align 8, !dbg !21480
  %256 = getelementptr inbounds %struct.lwan_request_t_, ptr %255, i32 0, i32 8, !dbg !21481
  %257 = getelementptr inbounds %struct.lwan_response_t_, ptr %256, i32 0, i32 3, !dbg !21482
  %258 = load ptr, ptr %257, align 8, !dbg !21482
  %259 = icmp ne ptr %258, null, !dbg !21480
  br i1 %259, label %260, label %353, !dbg !21483

260:                                              ; preds = %254
  call void @llvm.dbg.declare(metadata ptr %19, metadata !13458, metadata !DIExpression()), !dbg !21484
  %261 = load ptr, ptr %4, align 8, !dbg !21485
  %262 = getelementptr inbounds %struct.lwan_request_t_, ptr %261, i32 0, i32 8, !dbg !21486
  %263 = getelementptr inbounds %struct.lwan_response_t_, ptr %262, i32 0, i32 3, !dbg !21487
  %264 = load ptr, ptr %263, align 8, !dbg !21487
  store ptr %264, ptr %19, align 8, !dbg !21488
  br label %265, !dbg !21489

265:                                              ; preds = %349, %260
  %266 = load ptr, ptr %19, align 8, !dbg !21490
  %267 = load ptr, ptr %266, align 8, !dbg !21491
  %268 = icmp ne ptr %267, null, !dbg !21492
  br i1 %268, label %269, label %352, !dbg !21492

269:                                              ; preds = %265
  %270 = load ptr, ptr %19, align 8, !dbg !21493
  %271 = load ptr, ptr %270, align 8, !dbg !21493
  %272 = call i32 @strcmp(ptr noundef %271, ptr noundef @.str.17.117) #20, !dbg !21493
  %273 = icmp ne i32 %272, 0, !dbg !21493
  %274 = xor i1 %273, true, !dbg !21493
  %275 = zext i1 %274 to i32, !dbg !21493
  %276 = sext i32 %275 to i64, !dbg !21493
  br i1 %274, label %277, label %278, !dbg !21494

277:                                              ; preds = %269
  br label %349, !dbg !21495

278:                                              ; preds = %269
  %279 = load ptr, ptr %19, align 8, !dbg !21496
  %280 = load ptr, ptr %279, align 8, !dbg !21496
  %281 = call i32 @strcmp(ptr noundef %280, ptr noundef @.str.18.118) #20, !dbg !21496
  %282 = icmp ne i32 %281, 0, !dbg !21496
  %283 = xor i1 %282, true, !dbg !21496
  %284 = zext i1 %283 to i32, !dbg !21496
  %285 = sext i32 %284 to i64, !dbg !21496
  br i1 %283, label %286, label %287, !dbg !21497

286:                                              ; preds = %278
  store i8 1, ptr %11, align 1, !dbg !21498
  br label %287, !dbg !21499

287:                                              ; preds = %286, %278
  %288 = load ptr, ptr %19, align 8, !dbg !21500
  %289 = load ptr, ptr %288, align 8, !dbg !21500
  %290 = call i32 @strcmp(ptr noundef %289, ptr noundef @.str.19.119) #20, !dbg !21500
  %291 = icmp ne i32 %290, 0, !dbg !21500
  %292 = xor i1 %291, true, !dbg !21500
  %293 = zext i1 %292 to i32, !dbg !21500
  %294 = sext i32 %293 to i64, !dbg !21500
  br i1 %292, label %295, label %296, !dbg !21501

295:                                              ; preds = %287
  store i8 1, ptr %12, align 1, !dbg !21502
  br label %296, !dbg !21503

296:                                              ; preds = %295, %287
  %297 = load ptr, ptr %8, align 8, !dbg !21504
  %298 = getelementptr inbounds i8, ptr %297, i64 4, !dbg !21504
  %299 = load ptr, ptr %9, align 8, !dbg !21504
  %300 = icmp uge ptr %298, %299, !dbg !21504
  %301 = zext i1 %300 to i32, !dbg !21504
  %302 = sext i32 %301 to i64, !dbg !21504
  br i1 %300, label %303, label %304, !dbg !21505

303:                                              ; preds = %296
  store i64 0, ptr %3, align 8, !dbg !21504
  br label %491, !dbg !21504

304:                                              ; preds = %296
  %305 = load ptr, ptr %8, align 8, !dbg !21506
  %306 = getelementptr inbounds i8, ptr %305, i32 1, !dbg !21506
  store ptr %306, ptr %8, align 8, !dbg !21506
  store i8 13, ptr %305, align 1, !dbg !21506
  %307 = load ptr, ptr %8, align 8, !dbg !21507
  %308 = getelementptr inbounds i8, ptr %307, i32 1, !dbg !21507
  store ptr %308, ptr %8, align 8, !dbg !21507
  store i8 10, ptr %307, align 1, !dbg !21507
  call void @llvm.dbg.declare(metadata ptr %20, metadata !13491, metadata !DIExpression()), !dbg !21508
  %309 = load ptr, ptr %19, align 8, !dbg !21508
  %310 = load ptr, ptr %309, align 8, !dbg !21508
  %311 = call i64 @strlen(ptr noundef %310) #20, !dbg !21508
  store i64 %311, ptr %20, align 8, !dbg !21508
  %312 = load ptr, ptr %8, align 8, !dbg !21509
  %313 = load i64, ptr %20, align 8, !dbg !21509
  %314 = getelementptr inbounds i8, ptr %312, i64 %313, !dbg !21509
  %315 = load ptr, ptr %9, align 8, !dbg !21509
  %316 = icmp uge ptr %314, %315, !dbg !21509
  %317 = zext i1 %316 to i32, !dbg !21509
  %318 = sext i32 %317 to i64, !dbg !21509
  br i1 %316, label %319, label %320, !dbg !21510

319:                                              ; preds = %304
  store i64 0, ptr %3, align 8, !dbg !21509
  br label %491, !dbg !21509

320:                                              ; preds = %304
  %321 = load ptr, ptr %8, align 8, !dbg !21510
  %322 = load ptr, ptr %19, align 8, !dbg !21510
  %323 = load ptr, ptr %322, align 8, !dbg !21510
  %324 = load i64, ptr %20, align 8, !dbg !21510
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %321, ptr align 1 %323, i64 %324, i1 false), !dbg !21510
  %325 = getelementptr inbounds i8, ptr %321, i64 %324, !dbg !21510
  store ptr %325, ptr %8, align 8, !dbg !21510
  %326 = load ptr, ptr %8, align 8, !dbg !21511
  %327 = getelementptr inbounds i8, ptr %326, i32 1, !dbg !21511
  store ptr %327, ptr %8, align 8, !dbg !21511
  store i8 58, ptr %326, align 1, !dbg !21511
  %328 = load ptr, ptr %8, align 8, !dbg !21512
  %329 = getelementptr inbounds i8, ptr %328, i32 1, !dbg !21512
  store ptr %329, ptr %8, align 8, !dbg !21512
  store i8 32, ptr %328, align 1, !dbg !21512
  call void @llvm.dbg.declare(metadata ptr %21, metadata !13500, metadata !DIExpression()), !dbg !21513
  %330 = load ptr, ptr %19, align 8, !dbg !21513
  %331 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %330, i32 0, i32 1, !dbg !21513
  %332 = load ptr, ptr %331, align 8, !dbg !21513
  %333 = call i64 @strlen(ptr noundef %332) #20, !dbg !21513
  store i64 %333, ptr %21, align 8, !dbg !21513
  %334 = load ptr, ptr %8, align 8, !dbg !21514
  %335 = load i64, ptr %21, align 8, !dbg !21514
  %336 = getelementptr inbounds i8, ptr %334, i64 %335, !dbg !21514
  %337 = load ptr, ptr %9, align 8, !dbg !21514
  %338 = icmp uge ptr %336, %337, !dbg !21514
  %339 = zext i1 %338 to i32, !dbg !21514
  %340 = sext i32 %339 to i64, !dbg !21514
  br i1 %338, label %341, label %342, !dbg !21515

341:                                              ; preds = %320
  store i64 0, ptr %3, align 8, !dbg !21514
  br label %491, !dbg !21514

342:                                              ; preds = %320
  %343 = load ptr, ptr %8, align 8, !dbg !21515
  %344 = load ptr, ptr %19, align 8, !dbg !21515
  %345 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %344, i32 0, i32 1, !dbg !21515
  %346 = load ptr, ptr %345, align 8, !dbg !21515
  %347 = load i64, ptr %21, align 8, !dbg !21515
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %343, ptr align 1 %346, i64 %347, i1 false), !dbg !21515
  %348 = getelementptr inbounds i8, ptr %343, i64 %347, !dbg !21515
  store ptr %348, ptr %8, align 8, !dbg !21515
  br label %349, !dbg !21516

349:                                              ; preds = %342, %277
  %350 = load ptr, ptr %19, align 8, !dbg !21517
  %351 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %350, i32 1, !dbg !21517
  store ptr %351, ptr %19, align 8, !dbg !21517
  br label %265, !dbg !21518, !llvm.loop !21519

352:                                              ; preds = %265
  br label %405, !dbg !21521

353:                                              ; preds = %254, %251
  %354 = load i32, ptr %5, align 4, !dbg !21522
  %355 = icmp eq i32 %354, 401, !dbg !21523
  br i1 %355, label %356, label %404, !dbg !21524

356:                                              ; preds = %353
  call void @llvm.dbg.declare(metadata ptr %22, metadata !13517, metadata !DIExpression()), !dbg !21525
  %357 = load ptr, ptr %4, align 8, !dbg !21526
  %358 = getelementptr inbounds %struct.lwan_request_t_, ptr %357, i32 0, i32 8, !dbg !21527
  %359 = getelementptr inbounds %struct.lwan_response_t_, ptr %358, i32 0, i32 3, !dbg !21528
  %360 = load ptr, ptr %359, align 8, !dbg !21528
  store ptr %360, ptr %22, align 8, !dbg !21529
  br label %361, !dbg !21530

361:                                              ; preds = %400, %356
  %362 = load ptr, ptr %22, align 8, !dbg !21531
  %363 = load ptr, ptr %362, align 8, !dbg !21532
  %364 = icmp ne ptr %363, null, !dbg !21533
  br i1 %364, label %365, label %403, !dbg !21533

365:                                              ; preds = %361
  %366 = load ptr, ptr %22, align 8, !dbg !21534
  %367 = load ptr, ptr %366, align 8, !dbg !21535
  %368 = call i32 @strcmp(ptr noundef %367, ptr noundef @.str.20.120) #20, !dbg !21536
  %369 = icmp ne i32 %368, 0, !dbg !21536
  br i1 %369, label %400, label %370, !dbg !21537

370:                                              ; preds = %365
  %371 = load ptr, ptr %8, align 8, !dbg !21538
  %372 = getelementptr inbounds i8, ptr %371, i64 20, !dbg !21538
  %373 = load ptr, ptr %9, align 8, !dbg !21538
  %374 = icmp uge ptr %372, %373, !dbg !21538
  %375 = zext i1 %374 to i32, !dbg !21538
  %376 = sext i32 %375 to i64, !dbg !21538
  br i1 %374, label %377, label %378, !dbg !21539

377:                                              ; preds = %370
  store i64 0, ptr %3, align 8, !dbg !21538
  br label %491, !dbg !21538

378:                                              ; preds = %370
  %379 = load ptr, ptr %8, align 8, !dbg !21539
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %379, ptr align 1 @.str.21.121, i64 20, i1 false), !dbg !21539
  %380 = getelementptr inbounds i8, ptr %379, i64 20, !dbg !21539
  store ptr %380, ptr %8, align 8, !dbg !21539
  call void @llvm.dbg.declare(metadata ptr %23, metadata !13541, metadata !DIExpression()), !dbg !21540
  %381 = load ptr, ptr %22, align 8, !dbg !21540
  %382 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %381, i32 0, i32 1, !dbg !21540
  %383 = load ptr, ptr %382, align 8, !dbg !21540
  %384 = call i64 @strlen(ptr noundef %383) #20, !dbg !21540
  store i64 %384, ptr %23, align 8, !dbg !21540
  %385 = load ptr, ptr %8, align 8, !dbg !21541
  %386 = load i64, ptr %23, align 8, !dbg !21541
  %387 = getelementptr inbounds i8, ptr %385, i64 %386, !dbg !21541
  %388 = load ptr, ptr %9, align 8, !dbg !21541
  %389 = icmp uge ptr %387, %388, !dbg !21541
  %390 = zext i1 %389 to i32, !dbg !21541
  %391 = sext i32 %390 to i64, !dbg !21541
  br i1 %389, label %392, label %393, !dbg !21542

392:                                              ; preds = %378
  store i64 0, ptr %3, align 8, !dbg !21541
  br label %491, !dbg !21541

393:                                              ; preds = %378
  %394 = load ptr, ptr %8, align 8, !dbg !21542
  %395 = load ptr, ptr %22, align 8, !dbg !21542
  %396 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %395, i32 0, i32 1, !dbg !21542
  %397 = load ptr, ptr %396, align 8, !dbg !21542
  %398 = load i64, ptr %23, align 8, !dbg !21542
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %394, ptr align 1 %397, i64 %398, i1 false), !dbg !21542
  %399 = getelementptr inbounds i8, ptr %394, i64 %398, !dbg !21542
  store ptr %399, ptr %8, align 8, !dbg !21542
  br label %403, !dbg !21543

400:                                              ; preds = %365
  %401 = load ptr, ptr %22, align 8, !dbg !21544
  %402 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %401, i32 1, !dbg !21544
  store ptr %402, ptr %22, align 8, !dbg !21544
  br label %361, !dbg !21545, !llvm.loop !21546

403:                                              ; preds = %393, %361
  br label %404, !dbg !21548

404:                                              ; preds = %403, %353
  br label %405

405:                                              ; preds = %404, %352
  %406 = load i8, ptr %11, align 1, !dbg !21549
  %407 = trunc i8 %406 to i1, !dbg !21549
  %408 = xor i1 %407, true, !dbg !21549
  %409 = xor i1 %407, true, !dbg !21549
  %410 = zext i1 %409 to i32, !dbg !21549
  %411 = sext i32 %410 to i64, !dbg !21549
  br i1 %409, label %412, label %439, !dbg !21550

412:                                              ; preds = %405
  %413 = load ptr, ptr %8, align 8, !dbg !21551
  %414 = getelementptr inbounds i8, ptr %413, i64 8, !dbg !21551
  %415 = load ptr, ptr %9, align 8, !dbg !21551
  %416 = icmp uge ptr %414, %415, !dbg !21551
  %417 = zext i1 %416 to i32, !dbg !21551
  %418 = sext i32 %417 to i64, !dbg !21551
  br i1 %416, label %419, label %420, !dbg !21552

419:                                              ; preds = %412
  store i64 0, ptr %3, align 8, !dbg !21551
  br label %491, !dbg !21551

420:                                              ; preds = %412
  %421 = load ptr, ptr %8, align 8, !dbg !21552
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %421, ptr align 1 @.str.22.122, i64 8, i1 false), !dbg !21552
  %422 = getelementptr inbounds i8, ptr %421, i64 8, !dbg !21552
  store ptr %422, ptr %8, align 8, !dbg !21552
  %423 = load ptr, ptr %8, align 8, !dbg !21553
  %424 = getelementptr inbounds i8, ptr %423, i64 29, !dbg !21553
  %425 = load ptr, ptr %9, align 8, !dbg !21553
  %426 = icmp uge ptr %424, %425, !dbg !21553
  %427 = zext i1 %426 to i32, !dbg !21553
  %428 = sext i32 %427 to i64, !dbg !21553
  br i1 %426, label %429, label %430, !dbg !21554

429:                                              ; preds = %420
  store i64 0, ptr %3, align 8, !dbg !21553
  br label %491, !dbg !21553

430:                                              ; preds = %420
  %431 = load ptr, ptr %8, align 8, !dbg !21554
  %432 = load ptr, ptr %4, align 8, !dbg !21554
  %433 = getelementptr inbounds %struct.lwan_request_t_, ptr %432, i32 0, i32 4, !dbg !21554
  %434 = load ptr, ptr %433, align 8, !dbg !21554
  %435 = getelementptr inbounds %struct.lwan_connection_t_, ptr %434, i32 0, i32 3, !dbg !21554
  %436 = load ptr, ptr %435, align 8, !dbg !21554
  %437 = getelementptr inbounds %struct.lwan_thread_t_, ptr %436, i32 0, i32 1, !dbg !21554
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %431, ptr align 8 %437, i64 29, i1 false), !dbg !21554
  %438 = getelementptr inbounds i8, ptr %431, i64 29, !dbg !21554
  store ptr %438, ptr %8, align 8, !dbg !21554
  br label %439, !dbg !21555

439:                                              ; preds = %430, %405
  %440 = load i8, ptr %12, align 1, !dbg !21556
  %441 = trunc i8 %440 to i1, !dbg !21556
  %442 = xor i1 %441, true, !dbg !21556
  %443 = xor i1 %441, true, !dbg !21556
  %444 = zext i1 %443 to i32, !dbg !21556
  %445 = sext i32 %444 to i64, !dbg !21556
  br i1 %443, label %446, label %474, !dbg !21557

446:                                              ; preds = %439
  %447 = load ptr, ptr %8, align 8, !dbg !21558
  %448 = getelementptr inbounds i8, ptr %447, i64 11, !dbg !21558
  %449 = load ptr, ptr %9, align 8, !dbg !21558
  %450 = icmp uge ptr %448, %449, !dbg !21558
  %451 = zext i1 %450 to i32, !dbg !21558
  %452 = sext i32 %451 to i64, !dbg !21558
  br i1 %450, label %453, label %454, !dbg !21559

453:                                              ; preds = %446
  store i64 0, ptr %3, align 8, !dbg !21558
  br label %491, !dbg !21558

454:                                              ; preds = %446
  %455 = load ptr, ptr %8, align 8, !dbg !21559
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %455, ptr align 1 @.str.23.123, i64 11, i1 false), !dbg !21559
  %456 = getelementptr inbounds i8, ptr %455, i64 11, !dbg !21559
  store ptr %456, ptr %8, align 8, !dbg !21559
  %457 = load ptr, ptr %8, align 8, !dbg !21560
  %458 = getelementptr inbounds i8, ptr %457, i64 29, !dbg !21560
  %459 = load ptr, ptr %9, align 8, !dbg !21560
  %460 = icmp uge ptr %458, %459, !dbg !21560
  %461 = zext i1 %460 to i32, !dbg !21560
  %462 = sext i32 %461 to i64, !dbg !21560
  br i1 %460, label %463, label %464, !dbg !21561

463:                                              ; preds = %454
  store i64 0, ptr %3, align 8, !dbg !21560
  br label %491, !dbg !21560

464:                                              ; preds = %454
  %465 = load ptr, ptr %8, align 8, !dbg !21561
  %466 = load ptr, ptr %4, align 8, !dbg !21561
  %467 = getelementptr inbounds %struct.lwan_request_t_, ptr %466, i32 0, i32 4, !dbg !21561
  %468 = load ptr, ptr %467, align 8, !dbg !21561
  %469 = getelementptr inbounds %struct.lwan_connection_t_, ptr %468, i32 0, i32 3, !dbg !21561
  %470 = load ptr, ptr %469, align 8, !dbg !21561
  %471 = getelementptr inbounds %struct.lwan_thread_t_, ptr %470, i32 0, i32 1, !dbg !21561
  %472 = getelementptr inbounds %struct.anon.27, ptr %471, i32 0, i32 1, !dbg !21561
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %465, ptr align 2 %472, i64 29, i1 false), !dbg !21561
  %473 = getelementptr inbounds i8, ptr %465, i64 29, !dbg !21561
  store ptr %473, ptr %8, align 8, !dbg !21561
  br label %474, !dbg !21562

474:                                              ; preds = %464, %439
  %475 = load ptr, ptr %8, align 8, !dbg !21563
  %476 = getelementptr inbounds i8, ptr %475, i64 19, !dbg !21563
  %477 = load ptr, ptr %9, align 8, !dbg !21563
  %478 = icmp uge ptr %476, %477, !dbg !21563
  %479 = zext i1 %478 to i32, !dbg !21563
  %480 = sext i32 %479 to i64, !dbg !21563
  br i1 %478, label %481, label %482, !dbg !21564

481:                                              ; preds = %474
  store i64 0, ptr %3, align 8, !dbg !21563
  br label %491, !dbg !21563

482:                                              ; preds = %474
  %483 = load ptr, ptr %8, align 8, !dbg !21564
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %483, ptr align 1 @.str.24.124, i64 19, i1 false), !dbg !21564
  %484 = getelementptr inbounds i8, ptr %483, i64 19, !dbg !21564
  store ptr %484, ptr %8, align 8, !dbg !21564
  %485 = load ptr, ptr %8, align 8, !dbg !21565
  %486 = load ptr, ptr %6, align 8, !dbg !21566
  %487 = ptrtoint ptr %485 to i64, !dbg !21567
  %488 = ptrtoint ptr %486 to i64, !dbg !21567
  %489 = sub i64 %487, %488, !dbg !21567
  %490 = sub nsw i64 %489, 1, !dbg !21568
  store i64 %490, ptr %3, align 8, !dbg !21569
  br label %491, !dbg !21569

491:                                              ; preds = %482, %481, %463, %453, %429, %419, %392, %377, %341, %319, %303, %247, %236, %214, %198, %183, %174, %153, %144, %122, %105, %87, %72, %61
  %492 = load i64, ptr %3, align 8, !dbg !21570
  store i64 %492, ptr %28, align 8, !dbg !21571
  %493 = load i64, ptr %28, align 8, !dbg !21572
  %494 = icmp ne i64 %493, 0, !dbg !21572
  %495 = xor i1 %494, true, !dbg !21572
  %496 = zext i1 %495 to i32, !dbg !21572
  %497 = sext i32 %496 to i64, !dbg !21572
  %498 = icmp ne i64 %497, 0, !dbg !21572
  br i1 %498, label %499, label %500, !dbg !21574

499:                                              ; preds = %491
  store i1 false, ptr %24, align 1, !dbg !21575
  br label %509, !dbg !21575

500:                                              ; preds = %491
  %501 = load ptr, ptr %25, align 8, !dbg !21576
  %502 = getelementptr inbounds %struct.lwan_request_t_, ptr %501, i32 0, i32 0, !dbg !21577
  %503 = load i32, ptr %502, align 8, !dbg !21578
  %504 = or i32 %503, 64, !dbg !21578
  store i32 %504, ptr %502, align 8, !dbg !21578
  %505 = load ptr, ptr %25, align 8, !dbg !21579
  %506 = getelementptr inbounds [4096 x i8], ptr %27, i64 0, i64 0, !dbg !21580
  %507 = load i64, ptr %28, align 8, !dbg !21581
  %508 = call i64 @lwan_send(ptr noundef %505, ptr noundef %506, i64 noundef %507, i32 noundef 32768), !dbg !21582
  store i1 true, ptr %24, align 1, !dbg !21583
  br label %509, !dbg !21583

509:                                              ; preds = %500, %499, %34
  %510 = load i1, ptr %24, align 1, !dbg !21584
  ret i1 %510, !dbg !21584
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_response_send_event(ptr noundef %0, ptr noundef %1) #0 !dbg !21585 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca [6 x %struct.lwan_value_t_], align 16
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !21588, metadata !DIExpression()), !dbg !21589
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !21590, metadata !DIExpression()), !dbg !21591
  %8 = load ptr, ptr %3, align 8, !dbg !21592
  %9 = getelementptr inbounds %struct.lwan_request_t_, ptr %8, i32 0, i32 0, !dbg !21594
  %10 = load i32, ptr %9, align 8, !dbg !21594
  %11 = and i32 %10, 64, !dbg !21595
  %12 = icmp ne i32 %11, 0, !dbg !21595
  br i1 %12, label %22, label %13, !dbg !21596

13:                                               ; preds = %2
  %14 = load ptr, ptr %3, align 8, !dbg !21597
  %15 = call zeroext i1 @lwan_response_set_event_stream(ptr noundef %14, i32 noundef 200), !dbg !21597
  %16 = xor i1 %15, true, !dbg !21597
  %17 = zext i1 %16 to i32, !dbg !21597
  %18 = sext i32 %17 to i64, !dbg !21597
  %19 = icmp ne i64 %18, 0, !dbg !21597
  br i1 %19, label %20, label %21, !dbg !21600

20:                                               ; preds = %13
  br label %135, !dbg !21601

21:                                               ; preds = %13
  br label %22, !dbg !21602

22:                                               ; preds = %21, %2
  call void @llvm.dbg.declare(metadata ptr %5, metadata !21603, metadata !DIExpression()), !dbg !21605
  call void @llvm.dbg.declare(metadata ptr %6, metadata !21606, metadata !DIExpression()), !dbg !21607
  store i32 0, ptr %6, align 4, !dbg !21607
  %23 = load ptr, ptr %4, align 8, !dbg !21608
  %24 = icmp ne ptr %23, null, !dbg !21608
  br i1 %24, label %25, label %59, !dbg !21610

25:                                               ; preds = %22
  %26 = load i32, ptr %6, align 4, !dbg !21611
  %27 = sext i32 %26 to i64, !dbg !21613
  %28 = getelementptr inbounds [6 x %struct.lwan_value_t_], ptr %5, i64 0, i64 %27, !dbg !21613
  %29 = getelementptr inbounds %struct.lwan_value_t_, ptr %28, i32 0, i32 0, !dbg !21614
  store ptr @.str.28.136, ptr %29, align 16, !dbg !21615
  %30 = load i32, ptr %6, align 4, !dbg !21616
  %31 = sext i32 %30 to i64, !dbg !21617
  %32 = getelementptr inbounds [6 x %struct.lwan_value_t_], ptr %5, i64 0, i64 %31, !dbg !21617
  %33 = getelementptr inbounds %struct.lwan_value_t_, ptr %32, i32 0, i32 1, !dbg !21618
  store i64 7, ptr %33, align 8, !dbg !21619
  %34 = load i32, ptr %6, align 4, !dbg !21620
  %35 = add nsw i32 %34, 1, !dbg !21620
  store i32 %35, ptr %6, align 4, !dbg !21620
  %36 = load ptr, ptr %4, align 8, !dbg !21621
  %37 = load i32, ptr %6, align 4, !dbg !21622
  %38 = sext i32 %37 to i64, !dbg !21623
  %39 = getelementptr inbounds [6 x %struct.lwan_value_t_], ptr %5, i64 0, i64 %38, !dbg !21623
  %40 = getelementptr inbounds %struct.lwan_value_t_, ptr %39, i32 0, i32 0, !dbg !21624
  store ptr %36, ptr %40, align 16, !dbg !21625
  %41 = load ptr, ptr %4, align 8, !dbg !21626
  %42 = call i64 @strlen(ptr noundef %41) #20, !dbg !21627
  %43 = load i32, ptr %6, align 4, !dbg !21628
  %44 = sext i32 %43 to i64, !dbg !21629
  %45 = getelementptr inbounds [6 x %struct.lwan_value_t_], ptr %5, i64 0, i64 %44, !dbg !21629
  %46 = getelementptr inbounds %struct.lwan_value_t_, ptr %45, i32 0, i32 1, !dbg !21630
  store i64 %42, ptr %46, align 8, !dbg !21631
  %47 = load i32, ptr %6, align 4, !dbg !21632
  %48 = add nsw i32 %47, 1, !dbg !21632
  store i32 %48, ptr %6, align 4, !dbg !21632
  %49 = load i32, ptr %6, align 4, !dbg !21633
  %50 = sext i32 %49 to i64, !dbg !21634
  %51 = getelementptr inbounds [6 x %struct.lwan_value_t_], ptr %5, i64 0, i64 %50, !dbg !21634
  %52 = getelementptr inbounds %struct.lwan_value_t_, ptr %51, i32 0, i32 0, !dbg !21635
  store ptr @.str.26.134, ptr %52, align 16, !dbg !21636
  %53 = load i32, ptr %6, align 4, !dbg !21637
  %54 = sext i32 %53 to i64, !dbg !21638
  %55 = getelementptr inbounds [6 x %struct.lwan_value_t_], ptr %5, i64 0, i64 %54, !dbg !21638
  %56 = getelementptr inbounds %struct.lwan_value_t_, ptr %55, i32 0, i32 1, !dbg !21639
  store i64 2, ptr %56, align 8, !dbg !21640
  %57 = load i32, ptr %6, align 4, !dbg !21641
  %58 = add nsw i32 %57, 1, !dbg !21641
  store i32 %58, ptr %6, align 4, !dbg !21641
  br label %59, !dbg !21642

59:                                               ; preds = %25, %22
  call void @llvm.dbg.declare(metadata ptr %7, metadata !21643, metadata !DIExpression()), !dbg !21644
  %60 = load ptr, ptr %3, align 8, !dbg !21645
  %61 = getelementptr inbounds %struct.lwan_request_t_, ptr %60, i32 0, i32 8, !dbg !21645
  %62 = getelementptr inbounds %struct.lwan_response_t_, ptr %61, i32 0, i32 0, !dbg !21645
  %63 = load ptr, ptr %62, align 8, !dbg !21645
  %64 = getelementptr inbounds %struct.strbuf_t_, ptr %63, i32 0, i32 1, !dbg !21645
  %65 = getelementptr inbounds %struct.anon.3, ptr %64, i32 0, i32 1, !dbg !21645
  %66 = load i64, ptr %65, align 8, !dbg !21645
  store i64 %66, ptr %7, align 8, !dbg !21644
  %67 = load i64, ptr %7, align 8, !dbg !21646
  %68 = icmp ne i64 %67, 0, !dbg !21646
  br i1 %68, label %69, label %97, !dbg !21648

69:                                               ; preds = %59
  %70 = load i32, ptr %6, align 4, !dbg !21649
  %71 = sext i32 %70 to i64, !dbg !21651
  %72 = getelementptr inbounds [6 x %struct.lwan_value_t_], ptr %5, i64 0, i64 %71, !dbg !21651
  %73 = getelementptr inbounds %struct.lwan_value_t_, ptr %72, i32 0, i32 0, !dbg !21652
  store ptr @.str.29.137, ptr %73, align 16, !dbg !21653
  %74 = load i32, ptr %6, align 4, !dbg !21654
  %75 = sext i32 %74 to i64, !dbg !21655
  %76 = getelementptr inbounds [6 x %struct.lwan_value_t_], ptr %5, i64 0, i64 %75, !dbg !21655
  %77 = getelementptr inbounds %struct.lwan_value_t_, ptr %76, i32 0, i32 1, !dbg !21656
  store i64 6, ptr %77, align 8, !dbg !21657
  %78 = load i32, ptr %6, align 4, !dbg !21658
  %79 = add nsw i32 %78, 1, !dbg !21658
  store i32 %79, ptr %6, align 4, !dbg !21658
  %80 = load ptr, ptr %3, align 8, !dbg !21659
  %81 = getelementptr inbounds %struct.lwan_request_t_, ptr %80, i32 0, i32 8, !dbg !21659
  %82 = getelementptr inbounds %struct.lwan_response_t_, ptr %81, i32 0, i32 0, !dbg !21659
  %83 = load ptr, ptr %82, align 8, !dbg !21659
  %84 = getelementptr inbounds %struct.strbuf_t_, ptr %83, i32 0, i32 0, !dbg !21659
  %85 = load ptr, ptr %84, align 8, !dbg !21659
  %86 = load i32, ptr %6, align 4, !dbg !21660
  %87 = sext i32 %86 to i64, !dbg !21661
  %88 = getelementptr inbounds [6 x %struct.lwan_value_t_], ptr %5, i64 0, i64 %87, !dbg !21661
  %89 = getelementptr inbounds %struct.lwan_value_t_, ptr %88, i32 0, i32 0, !dbg !21662
  store ptr %85, ptr %89, align 16, !dbg !21663
  %90 = load i64, ptr %7, align 8, !dbg !21664
  %91 = load i32, ptr %6, align 4, !dbg !21665
  %92 = sext i32 %91 to i64, !dbg !21666
  %93 = getelementptr inbounds [6 x %struct.lwan_value_t_], ptr %5, i64 0, i64 %92, !dbg !21666
  %94 = getelementptr inbounds %struct.lwan_value_t_, ptr %93, i32 0, i32 1, !dbg !21667
  store i64 %90, ptr %94, align 8, !dbg !21668
  %95 = load i32, ptr %6, align 4, !dbg !21669
  %96 = add nsw i32 %95, 1, !dbg !21669
  store i32 %96, ptr %6, align 4, !dbg !21669
  br label %97, !dbg !21670

97:                                               ; preds = %69, %59
  %98 = load i32, ptr %6, align 4, !dbg !21671
  %99 = sext i32 %98 to i64, !dbg !21672
  %100 = getelementptr inbounds [6 x %struct.lwan_value_t_], ptr %5, i64 0, i64 %99, !dbg !21672
  %101 = getelementptr inbounds %struct.lwan_value_t_, ptr %100, i32 0, i32 0, !dbg !21673
  store ptr @.str.30.138, ptr %101, align 16, !dbg !21674
  %102 = load i32, ptr %6, align 4, !dbg !21675
  %103 = sext i32 %102 to i64, !dbg !21676
  %104 = getelementptr inbounds [6 x %struct.lwan_value_t_], ptr %5, i64 0, i64 %103, !dbg !21676
  %105 = getelementptr inbounds %struct.lwan_value_t_, ptr %104, i32 0, i32 1, !dbg !21677
  store i64 4, ptr %105, align 8, !dbg !21678
  %106 = load i32, ptr %6, align 4, !dbg !21679
  %107 = add nsw i32 %106, 1, !dbg !21679
  store i32 %107, ptr %6, align 4, !dbg !21679
  %108 = load ptr, ptr %3, align 8, !dbg !21680
  %109 = getelementptr inbounds [6 x %struct.lwan_value_t_], ptr %5, i64 0, i64 0, !dbg !21681
  %110 = load i32, ptr %6, align 4, !dbg !21682
  %111 = call i64 @lwan_writev(ptr noundef %108, ptr noundef %109, i32 noundef %110), !dbg !21683
  %112 = load ptr, ptr %3, align 8, !dbg !21684
  %113 = getelementptr inbounds %struct.lwan_request_t_, ptr %112, i32 0, i32 8, !dbg !21684
  %114 = getelementptr inbounds %struct.lwan_response_t_, ptr %113, i32 0, i32 0, !dbg !21684
  %115 = load ptr, ptr %114, align 8, !dbg !21684
  %116 = call zeroext i1 @strbuf_reset_length(ptr noundef %115), !dbg !21684
  %117 = xor i1 %116, true, !dbg !21684
  %118 = zext i1 %117 to i32, !dbg !21684
  %119 = sext i32 %118 to i64, !dbg !21684
  %120 = icmp ne i64 %119, 0, !dbg !21684
  br i1 %120, label %121, label %128, !dbg !21686

121:                                              ; preds = %97
  %122 = load ptr, ptr %3, align 8, !dbg !21687
  %123 = getelementptr inbounds %struct.lwan_request_t_, ptr %122, i32 0, i32 4, !dbg !21689
  %124 = load ptr, ptr %123, align 8, !dbg !21689
  %125 = getelementptr inbounds %struct.lwan_connection_t_, ptr %124, i32 0, i32 2, !dbg !21690
  %126 = load ptr, ptr %125, align 8, !dbg !21690
  %127 = call i32 @coro_yield(ptr noundef %126, i32 noundef -1), !dbg !21691
  unreachable, !dbg !21692

128:                                              ; preds = %97
  %129 = load ptr, ptr %3, align 8, !dbg !21693
  %130 = getelementptr inbounds %struct.lwan_request_t_, ptr %129, i32 0, i32 4, !dbg !21694
  %131 = load ptr, ptr %130, align 8, !dbg !21694
  %132 = getelementptr inbounds %struct.lwan_connection_t_, ptr %131, i32 0, i32 2, !dbg !21695
  %133 = load ptr, ptr %132, align 8, !dbg !21695
  %134 = call i32 @coro_yield(ptr noundef %133, i32 noundef 0), !dbg !21696
  br label %135, !dbg !21697

135:                                              ; preds = %128, %20
  ret void, !dbg !21697
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_append_double_to_strbuf(ptr noundef %0, ptr noundef %1) #0 !dbg !21698 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !21699, metadata !DIExpression()), !dbg !21700
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !21701, metadata !DIExpression()), !dbg !21702
  %5 = load ptr, ptr %3, align 8, !dbg !21703
  %6 = load ptr, ptr %4, align 8, !dbg !21704
  %7 = load double, ptr %6, align 8, !dbg !21705
  %8 = call zeroext i1 (ptr, ptr, ...) @strbuf_append_printf(ptr noundef %5, ptr noundef @.str.303, double noundef %7), !dbg !21706
  ret void, !dbg !21707
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @strbuf_append_printf(ptr noundef %0, ptr noundef %1, ...) #0 !dbg !21708 {
  %3 = alloca i1, align 1
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i8, align 1
  %14 = alloca [1 x %struct.__va_list_tag], align 16
  store ptr %0, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !21711, metadata !DIExpression()), !dbg !21712
  store ptr %1, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %12, metadata !21713, metadata !DIExpression()), !dbg !21714
  call void @llvm.dbg.declare(metadata ptr %13, metadata !21715, metadata !DIExpression()), !dbg !21716
  call void @llvm.dbg.declare(metadata ptr %14, metadata !21717, metadata !DIExpression()), !dbg !21729
  %15 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %14, i64 0, i64 0, !dbg !21730
  call void @llvm.va_start(ptr %15), !dbg !21730
  %16 = load ptr, ptr %11, align 8, !dbg !21731
  %17 = load ptr, ptr %12, align 8, !dbg !21732
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %14, i64 0, i64 0, !dbg !21733
  store ptr %16, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !21734, metadata !DIExpression()), !dbg !21740
  store ptr @strbuf_append_str, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !21742, metadata !DIExpression()), !dbg !21743
  store ptr %17, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !21744, metadata !DIExpression()), !dbg !21745
  store ptr %18, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !21746, metadata !DIExpression()), !dbg !21747
  call void @llvm.dbg.declare(metadata ptr %8, metadata !21748, metadata !DIExpression()), !dbg !21749
  call void @llvm.dbg.declare(metadata ptr %9, metadata !21750, metadata !DIExpression()), !dbg !21751
  %19 = load ptr, ptr %6, align 8, !dbg !21752
  %20 = load ptr, ptr %7, align 8, !dbg !21752
  %21 = call i32 @vasprintf(ptr noundef %8, ptr noundef %19, ptr noundef %20) #17, !dbg !21752
  store i32 %21, ptr %9, align 4, !dbg !21752
  %22 = icmp slt i32 %21, 0, !dbg !21752
  %23 = zext i1 %22 to i32, !dbg !21752
  %24 = sext i32 %23 to i64, !dbg !21752
  br i1 %22, label %25, label %26, !dbg !21754

25:                                               ; preds = %2
  store i1 false, ptr %3, align 1, !dbg !21755
  br label %37, !dbg !21755

26:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata ptr %10, metadata !21756, metadata !DIExpression()), !dbg !21757
  %27 = load ptr, ptr %5, align 8, !dbg !21758
  %28 = load ptr, ptr %4, align 8, !dbg !21759
  %29 = load ptr, ptr %8, align 8, !dbg !21760
  %30 = load i32, ptr %9, align 4, !dbg !21761
  %31 = sext i32 %30 to i64, !dbg !21762
  %32 = call zeroext i1 %27(ptr noundef %28, ptr noundef %29, i64 noundef %31) #17, !dbg !21758
  %33 = zext i1 %32 to i8, !dbg !21757
  store i8 %33, ptr %10, align 1, !dbg !21757
  %34 = load ptr, ptr %8, align 8, !dbg !21763
  call void @free(ptr noundef %34) #17, !dbg !21764
  %35 = load i8, ptr %10, align 1, !dbg !21765
  %36 = trunc i8 %35 to i1, !dbg !21765
  store i1 %36, ptr %3, align 1, !dbg !21766
  br label %37, !dbg !21766

37:                                               ; preds = %26, %25
  %38 = load i1, ptr %3, align 1, !dbg !21767
  %39 = zext i1 %38 to i8, !dbg !21768
  store i8 %39, ptr %13, align 1, !dbg !21768
  %40 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %14, i64 0, i64 0, !dbg !21769
  call void @llvm.va_end(ptr %40), !dbg !21769
  %41 = load i8, ptr %13, align 1, !dbg !21770
  %42 = trunc i8 %41 to i1, !dbg !21770
  ret i1 %42, !dbg !21771
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @lwan_tpl_double_is_empty(ptr noundef %0) #0 !dbg !21772 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !21773, metadata !DIExpression()), !dbg !21774
  %3 = load ptr, ptr %2, align 8, !dbg !21775
  %4 = load double, ptr %3, align 8, !dbg !21776
  %5 = fcmp oeq double %4, 0.000000e+00, !dbg !21777
  ret i1 %5, !dbg !21778
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local ptr @lwan_trie_lookup_full(ptr noundef %0, ptr noundef %1, i1 noundef zeroext %2) #11 !dbg !13001 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i8, align 1
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %15 = alloca i64, align 8
  %16 = alloca ptr, align 8
  %17 = alloca ptr, align 8
  %18 = alloca ptr, align 8
  %19 = alloca ptr, align 8
  %20 = alloca i8, align 1
  %21 = alloca i64, align 8
  %22 = alloca ptr, align 8
  %23 = alloca ptr, align 8
  store ptr %0, ptr %18, align 8
  call void @llvm.dbg.declare(metadata ptr %18, metadata !13000, metadata !DIExpression()), !dbg !21779
  store ptr %1, ptr %19, align 8
  call void @llvm.dbg.declare(metadata ptr %19, metadata !13006, metadata !DIExpression()), !dbg !21780
  %24 = zext i1 %2 to i8
  store i8 %24, ptr %20, align 1
  call void @llvm.dbg.declare(metadata ptr %20, metadata !13008, metadata !DIExpression()), !dbg !21781
  %25 = load ptr, ptr %18, align 8, !dbg !21782
  %26 = icmp ne ptr %25, null, !dbg !21782
  %27 = xor i1 %26, true, !dbg !21782
  %28 = zext i1 %27 to i32, !dbg !21782
  %29 = sext i32 %28 to i64, !dbg !21782
  %30 = icmp ne i64 %29, 0, !dbg !21782
  br i1 %30, label %31, label %32, !dbg !21783

31:                                               ; preds = %3
  store ptr null, ptr %17, align 8, !dbg !21784
  br label %146, !dbg !21784

32:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata ptr %21, metadata !13014, metadata !DIExpression()), !dbg !21785
  call void @llvm.dbg.declare(metadata ptr %22, metadata !13016, metadata !DIExpression()), !dbg !21786
  %33 = load ptr, ptr %18, align 8, !dbg !21787
  %34 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %33, i32 0, i32 0, !dbg !21788
  %35 = load ptr, ptr %34, align 8, !dbg !21788
  %36 = load ptr, ptr %19, align 8, !dbg !21789
  %37 = load i8, ptr %20, align 1, !dbg !21790
  %38 = trunc i8 %37 to i1, !dbg !21790
  store ptr %35, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !13022, metadata !DIExpression()), !dbg !21791
  store ptr %36, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !13028, metadata !DIExpression()), !dbg !21793
  %39 = zext i1 %38 to i8
  store i8 %39, ptr %7, align 1
  call void @llvm.dbg.declare(metadata ptr %7, metadata !13030, metadata !DIExpression()), !dbg !21794
  store ptr %21, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !13032, metadata !DIExpression()), !dbg !21795
  call void @llvm.dbg.declare(metadata ptr %9, metadata !13034, metadata !DIExpression()), !dbg !21796
  call void @llvm.dbg.declare(metadata ptr %10, metadata !13036, metadata !DIExpression()), !dbg !21797
  store ptr null, ptr %10, align 8, !dbg !21797
  call void @llvm.dbg.declare(metadata ptr %11, metadata !13038, metadata !DIExpression()), !dbg !21798
  %40 = load ptr, ptr %6, align 8, !dbg !21799
  store ptr %40, ptr %11, align 8, !dbg !21798
  %41 = load ptr, ptr %5, align 8, !dbg !21800
  store ptr %41, ptr %9, align 8, !dbg !21801
  br label %42, !dbg !21802

42:                                               ; preds = %59, %32
  %43 = load ptr, ptr %9, align 8, !dbg !21803
  %44 = icmp ne ptr %43, null, !dbg !21803
  br i1 %44, label %45, label %50, !dbg !21804

45:                                               ; preds = %42
  %46 = load ptr, ptr %6, align 8, !dbg !21805
  %47 = load i8, ptr %46, align 1, !dbg !21806
  %48 = sext i8 %47 to i32, !dbg !21806
  %49 = icmp ne i32 %48, 0, !dbg !21804
  br label %50

50:                                               ; preds = %45, %42
  %51 = phi i1 [ false, %42 ], [ %49, %45 ], !dbg !21807
  br i1 %51, label %52, label %69, !dbg !21808

52:                                               ; preds = %50
  %53 = load ptr, ptr %9, align 8, !dbg !21809
  %54 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %53, i32 0, i32 1, !dbg !21810
  %55 = load ptr, ptr %54, align 8, !dbg !21810
  %56 = icmp ne ptr %55, null, !dbg !21809
  br i1 %56, label %57, label %59, !dbg !21811

57:                                               ; preds = %52
  %58 = load ptr, ptr %9, align 8, !dbg !21812
  store ptr %58, ptr %10, align 8, !dbg !21813
  br label %59, !dbg !21814

59:                                               ; preds = %57, %52
  %60 = load ptr, ptr %9, align 8, !dbg !21815
  %61 = load ptr, ptr %6, align 8, !dbg !21816
  %62 = getelementptr inbounds i8, ptr %61, i32 1, !dbg !21816
  store ptr %62, ptr %6, align 8, !dbg !21816
  %63 = load i8, ptr %61, align 1, !dbg !21817
  %64 = sext i8 %63 to i32, !dbg !21817
  %65 = and i32 %64, 7, !dbg !21818
  %66 = sext i32 %65 to i64, !dbg !21815
  %67 = getelementptr inbounds [8 x ptr], ptr %60, i64 0, i64 %66, !dbg !21815
  %68 = load ptr, ptr %67, align 8, !dbg !21815
  store ptr %68, ptr %9, align 8, !dbg !21819
  br label %42, !dbg !21820, !llvm.loop !21821

69:                                               ; preds = %50
  %70 = load ptr, ptr %6, align 8, !dbg !21823
  %71 = load ptr, ptr %11, align 8, !dbg !21824
  %72 = ptrtoint ptr %70 to i64, !dbg !21825
  %73 = ptrtoint ptr %71 to i64, !dbg !21825
  %74 = sub i64 %72, %73, !dbg !21825
  %75 = load ptr, ptr %8, align 8, !dbg !21826
  store i64 %74, ptr %75, align 8, !dbg !21827
  %76 = load ptr, ptr %9, align 8, !dbg !21828
  %77 = icmp ne ptr %76, null, !dbg !21828
  br i1 %77, label %78, label %85, !dbg !21829

78:                                               ; preds = %69
  %79 = load ptr, ptr %9, align 8, !dbg !21830
  %80 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %79, i32 0, i32 1, !dbg !21831
  %81 = load ptr, ptr %80, align 8, !dbg !21831
  %82 = icmp ne ptr %81, null, !dbg !21830
  br i1 %82, label %83, label %85, !dbg !21832

83:                                               ; preds = %78
  %84 = load ptr, ptr %9, align 8, !dbg !21833
  store ptr %84, ptr %4, align 8, !dbg !21834
  br label %94, !dbg !21834

85:                                               ; preds = %78, %69
  %86 = load i8, ptr %7, align 1, !dbg !21835
  %87 = trunc i8 %86 to i1, !dbg !21835
  br i1 %87, label %88, label %93, !dbg !21836

88:                                               ; preds = %85
  %89 = load ptr, ptr %10, align 8, !dbg !21837
  %90 = icmp ne ptr %89, null, !dbg !21837
  br i1 %90, label %91, label %93, !dbg !21838

91:                                               ; preds = %88
  %92 = load ptr, ptr %10, align 8, !dbg !21839
  store ptr %92, ptr %4, align 8, !dbg !21840
  br label %94, !dbg !21840

93:                                               ; preds = %88, %85
  store ptr null, ptr %4, align 8, !dbg !21841
  br label %94, !dbg !21841

94:                                               ; preds = %93, %91, %83
  %95 = load ptr, ptr %4, align 8, !dbg !21842
  store ptr %95, ptr %22, align 8, !dbg !21786
  %96 = load ptr, ptr %22, align 8, !dbg !21843
  %97 = icmp ne ptr %96, null, !dbg !21843
  br i1 %97, label %99, label %98, !dbg !21844

98:                                               ; preds = %94
  store ptr null, ptr %17, align 8, !dbg !21845
  br label %146, !dbg !21845

99:                                               ; preds = %94
  call void @llvm.dbg.declare(metadata ptr %23, metadata !13094, metadata !DIExpression()), !dbg !21846
  %100 = load ptr, ptr %22, align 8, !dbg !21847
  %101 = load ptr, ptr %19, align 8, !dbg !21848
  %102 = load i64, ptr %21, align 8, !dbg !21849
  store ptr %100, ptr %13, align 8
  call void @llvm.dbg.declare(metadata ptr %13, metadata !9573, metadata !DIExpression()), !dbg !21850
  store ptr %101, ptr %14, align 8
  call void @llvm.dbg.declare(metadata ptr %14, metadata !9579, metadata !DIExpression()), !dbg !21852
  store i64 %102, ptr %15, align 8
  call void @llvm.dbg.declare(metadata ptr %15, metadata !9581, metadata !DIExpression()), !dbg !21853
  call void @llvm.dbg.declare(metadata ptr %16, metadata !9583, metadata !DIExpression()), !dbg !21854
  %103 = load ptr, ptr %13, align 8, !dbg !21855
  %104 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %103, i32 0, i32 1, !dbg !21856
  %105 = load ptr, ptr %104, align 8, !dbg !21856
  store ptr %105, ptr %16, align 8, !dbg !21854
  %106 = load ptr, ptr %16, align 8, !dbg !21857
  %107 = icmp ne ptr %106, null, !dbg !21857
  br i1 %107, label %109, label %108, !dbg !21858

108:                                              ; preds = %99
  store ptr null, ptr %12, align 8, !dbg !21859
  br label %135, !dbg !21859

109:                                              ; preds = %99
  %110 = load ptr, ptr %16, align 8, !dbg !21860
  %111 = getelementptr inbounds %struct.anon.5, ptr %110, i32 0, i32 2, !dbg !21861
  %112 = load ptr, ptr %111, align 8, !dbg !21861
  %113 = icmp ne ptr %112, null, !dbg !21860
  br i1 %113, label %116, label %114, !dbg !21862

114:                                              ; preds = %109
  %115 = load ptr, ptr %16, align 8, !dbg !21863
  store ptr %115, ptr %12, align 8, !dbg !21864
  br label %135, !dbg !21864

116:                                              ; preds = %109
  br label %117, !dbg !21865

117:                                              ; preds = %130, %116
  %118 = load ptr, ptr %16, align 8, !dbg !21866
  %119 = icmp ne ptr %118, null, !dbg !21867
  br i1 %119, label %120, label %134, !dbg !21867

120:                                              ; preds = %117
  %121 = load ptr, ptr %16, align 8, !dbg !21868
  %122 = load ptr, ptr %121, align 8, !dbg !21869
  %123 = load ptr, ptr %14, align 8, !dbg !21870
  %124 = load i64, ptr %15, align 8, !dbg !21871
  %125 = sub i64 %124, 1, !dbg !21872
  %126 = call i32 @strncmp(ptr noundef %122, ptr noundef %123, i64 noundef %125) #20, !dbg !21873
  %127 = icmp ne i32 %126, 0, !dbg !21873
  br i1 %127, label %130, label %128, !dbg !21874

128:                                              ; preds = %120
  %129 = load ptr, ptr %16, align 8, !dbg !21875
  store ptr %129, ptr %12, align 8, !dbg !21876
  br label %135, !dbg !21876

130:                                              ; preds = %120
  %131 = load ptr, ptr %16, align 8, !dbg !21877
  %132 = getelementptr inbounds %struct.anon.5, ptr %131, i32 0, i32 2, !dbg !21878
  %133 = load ptr, ptr %132, align 8, !dbg !21878
  store ptr %133, ptr %16, align 8, !dbg !21879
  br label %117, !dbg !21880, !llvm.loop !21881

134:                                              ; preds = %117
  store ptr null, ptr %12, align 8, !dbg !21883
  br label %135, !dbg !21883

135:                                              ; preds = %134, %128, %114, %108
  %136 = load ptr, ptr %12, align 8, !dbg !21884
  store ptr %136, ptr %23, align 8, !dbg !21846
  %137 = load ptr, ptr %23, align 8, !dbg !21885
  %138 = icmp ne ptr %137, null, !dbg !21885
  br i1 %138, label %139, label %143, !dbg !21885

139:                                              ; preds = %135
  %140 = load ptr, ptr %23, align 8, !dbg !21886
  %141 = getelementptr inbounds %struct.anon.5, ptr %140, i32 0, i32 1, !dbg !21887
  %142 = load ptr, ptr %141, align 8, !dbg !21887
  br label %144, !dbg !21885

143:                                              ; preds = %135
  br label %144, !dbg !21885

144:                                              ; preds = %143, %139
  %145 = phi ptr [ %142, %139 ], [ null, %143 ], !dbg !21885
  store ptr %145, ptr %17, align 8, !dbg !21888
  br label %146, !dbg !21888

146:                                              ; preds = %144, %98, %31
  %147 = load ptr, ptr %17, align 8, !dbg !21889
  ret ptr %147, !dbg !21889
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local ptr @lwan_trie_lookup_exact(ptr noundef %0, ptr noundef %1) #11 !dbg !21890 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i8, align 1
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca i64, align 8
  %15 = alloca ptr, align 8
  %16 = alloca ptr, align 8
  %17 = alloca ptr, align 8
  %18 = alloca ptr, align 8
  %19 = alloca i8, align 1
  %20 = alloca i64, align 8
  %21 = alloca ptr, align 8
  %22 = alloca ptr, align 8
  %23 = alloca ptr, align 8
  %24 = alloca ptr, align 8
  store ptr %0, ptr %23, align 8
  call void @llvm.dbg.declare(metadata ptr %23, metadata !21891, metadata !DIExpression()), !dbg !21892
  store ptr %1, ptr %24, align 8
  call void @llvm.dbg.declare(metadata ptr %24, metadata !21893, metadata !DIExpression()), !dbg !21894
  %25 = load ptr, ptr %23, align 8, !dbg !21895
  %26 = load ptr, ptr %24, align 8, !dbg !21896
  store ptr %25, ptr %17, align 8
  call void @llvm.dbg.declare(metadata ptr %17, metadata !13000, metadata !DIExpression()), !dbg !21897
  store ptr %26, ptr %18, align 8
  call void @llvm.dbg.declare(metadata ptr %18, metadata !13006, metadata !DIExpression()), !dbg !21899
  store i8 0, ptr %19, align 1
  call void @llvm.dbg.declare(metadata ptr %19, metadata !13008, metadata !DIExpression()), !dbg !21900
  %27 = load ptr, ptr %17, align 8, !dbg !21901
  %28 = icmp ne ptr %27, null, !dbg !21901
  %29 = xor i1 %28, true, !dbg !21901
  %30 = zext i1 %29 to i32, !dbg !21901
  %31 = sext i32 %30 to i64, !dbg !21901
  br i1 %29, label %32, label %33, !dbg !21902

32:                                               ; preds = %2
  store ptr null, ptr %16, align 8, !dbg !21903
  br label %146, !dbg !21903

33:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata ptr %20, metadata !13014, metadata !DIExpression()), !dbg !21904
  call void @llvm.dbg.declare(metadata ptr %21, metadata !13016, metadata !DIExpression()), !dbg !21905
  %34 = load ptr, ptr %17, align 8, !dbg !21906
  %35 = load ptr, ptr %34, align 8, !dbg !21907
  %36 = load ptr, ptr %18, align 8, !dbg !21908
  %37 = load i8, ptr %19, align 1, !dbg !21909
  %38 = trunc i8 %37 to i1, !dbg !21909
  store ptr %35, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !13022, metadata !DIExpression()), !dbg !21910
  store ptr %36, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !13028, metadata !DIExpression()), !dbg !21912
  %39 = zext i1 %38 to i8
  store i8 %39, ptr %6, align 1
  call void @llvm.dbg.declare(metadata ptr %6, metadata !13030, metadata !DIExpression()), !dbg !21913
  store ptr %20, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !13032, metadata !DIExpression()), !dbg !21914
  call void @llvm.dbg.declare(metadata ptr %8, metadata !13034, metadata !DIExpression()), !dbg !21915
  call void @llvm.dbg.declare(metadata ptr %9, metadata !13036, metadata !DIExpression()), !dbg !21916
  store ptr null, ptr %9, align 8, !dbg !21916
  call void @llvm.dbg.declare(metadata ptr %10, metadata !13038, metadata !DIExpression()), !dbg !21917
  %40 = load ptr, ptr %5, align 8, !dbg !21918
  store ptr %40, ptr %10, align 8, !dbg !21917
  %41 = load ptr, ptr %4, align 8, !dbg !21919
  store ptr %41, ptr %8, align 8, !dbg !21920
  br label %42, !dbg !21921

42:                                               ; preds = %59, %33
  %43 = load ptr, ptr %8, align 8, !dbg !21922
  %44 = icmp ne ptr %43, null, !dbg !21922
  br i1 %44, label %45, label %50, !dbg !21923

45:                                               ; preds = %42
  %46 = load ptr, ptr %5, align 8, !dbg !21924
  %47 = load i8, ptr %46, align 1, !dbg !21925
  %48 = sext i8 %47 to i32, !dbg !21925
  %49 = icmp ne i32 %48, 0, !dbg !21923
  br label %50

50:                                               ; preds = %45, %42
  %51 = phi i1 [ false, %42 ], [ %49, %45 ], !dbg !21926
  br i1 %51, label %52, label %69, !dbg !21927

52:                                               ; preds = %50
  %53 = load ptr, ptr %8, align 8, !dbg !21928
  %54 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %53, i32 0, i32 1, !dbg !21929
  %55 = load ptr, ptr %54, align 8, !dbg !21929
  %56 = icmp ne ptr %55, null, !dbg !21928
  br i1 %56, label %57, label %59, !dbg !21930

57:                                               ; preds = %52
  %58 = load ptr, ptr %8, align 8, !dbg !21931
  store ptr %58, ptr %9, align 8, !dbg !21932
  br label %59, !dbg !21933

59:                                               ; preds = %57, %52
  %60 = load ptr, ptr %8, align 8, !dbg !21934
  %61 = load ptr, ptr %5, align 8, !dbg !21935
  %62 = getelementptr inbounds i8, ptr %61, i32 1, !dbg !21935
  store ptr %62, ptr %5, align 8, !dbg !21935
  %63 = load i8, ptr %61, align 1, !dbg !21936
  %64 = sext i8 %63 to i32, !dbg !21936
  %65 = and i32 %64, 7, !dbg !21937
  %66 = sext i32 %65 to i64, !dbg !21934
  %67 = getelementptr inbounds [8 x ptr], ptr %60, i64 0, i64 %66, !dbg !21934
  %68 = load ptr, ptr %67, align 8, !dbg !21934
  store ptr %68, ptr %8, align 8, !dbg !21938
  br label %42, !dbg !21939, !llvm.loop !21940

69:                                               ; preds = %50
  %70 = load ptr, ptr %5, align 8, !dbg !21942
  %71 = load ptr, ptr %10, align 8, !dbg !21943
  %72 = ptrtoint ptr %70 to i64, !dbg !21944
  %73 = ptrtoint ptr %71 to i64, !dbg !21944
  %74 = sub i64 %72, %73, !dbg !21944
  %75 = load ptr, ptr %7, align 8, !dbg !21945
  store i64 %74, ptr %75, align 8, !dbg !21946
  %76 = load ptr, ptr %8, align 8, !dbg !21947
  %77 = icmp ne ptr %76, null, !dbg !21947
  br i1 %77, label %78, label %85, !dbg !21948

78:                                               ; preds = %69
  %79 = load ptr, ptr %8, align 8, !dbg !21949
  %80 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %79, i32 0, i32 1, !dbg !21950
  %81 = load ptr, ptr %80, align 8, !dbg !21950
  %82 = icmp ne ptr %81, null, !dbg !21949
  br i1 %82, label %83, label %85, !dbg !21951

83:                                               ; preds = %78
  %84 = load ptr, ptr %8, align 8, !dbg !21952
  store ptr %84, ptr %3, align 8, !dbg !21953
  br label %94, !dbg !21953

85:                                               ; preds = %78, %69
  %86 = load i8, ptr %6, align 1, !dbg !21954
  %87 = trunc i8 %86 to i1, !dbg !21954
  br i1 %87, label %88, label %93, !dbg !21955

88:                                               ; preds = %85
  %89 = load ptr, ptr %9, align 8, !dbg !21956
  %90 = icmp ne ptr %89, null, !dbg !21956
  br i1 %90, label %91, label %93, !dbg !21957

91:                                               ; preds = %88
  %92 = load ptr, ptr %9, align 8, !dbg !21958
  store ptr %92, ptr %3, align 8, !dbg !21959
  br label %94, !dbg !21959

93:                                               ; preds = %88, %85
  store ptr null, ptr %3, align 8, !dbg !21960
  br label %94, !dbg !21960

94:                                               ; preds = %93, %91, %83
  %95 = load ptr, ptr %3, align 8, !dbg !21961
  store ptr %95, ptr %21, align 8, !dbg !21905
  %96 = load ptr, ptr %21, align 8, !dbg !21962
  %97 = icmp ne ptr %96, null, !dbg !21962
  br i1 %97, label %99, label %98, !dbg !21963

98:                                               ; preds = %94
  store ptr null, ptr %16, align 8, !dbg !21964
  br label %146, !dbg !21964

99:                                               ; preds = %94
  call void @llvm.dbg.declare(metadata ptr %22, metadata !13094, metadata !DIExpression()), !dbg !21965
  %100 = load ptr, ptr %21, align 8, !dbg !21966
  %101 = load ptr, ptr %18, align 8, !dbg !21967
  %102 = load i64, ptr %20, align 8, !dbg !21968
  store ptr %100, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %12, metadata !9573, metadata !DIExpression()), !dbg !21969
  store ptr %101, ptr %13, align 8
  call void @llvm.dbg.declare(metadata ptr %13, metadata !9579, metadata !DIExpression()), !dbg !21971
  store i64 %102, ptr %14, align 8
  call void @llvm.dbg.declare(metadata ptr %14, metadata !9581, metadata !DIExpression()), !dbg !21972
  call void @llvm.dbg.declare(metadata ptr %15, metadata !9583, metadata !DIExpression()), !dbg !21973
  %103 = load ptr, ptr %12, align 8, !dbg !21974
  %104 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %103, i32 0, i32 1, !dbg !21975
  %105 = load ptr, ptr %104, align 8, !dbg !21975
  store ptr %105, ptr %15, align 8, !dbg !21973
  %106 = load ptr, ptr %15, align 8, !dbg !21976
  %107 = icmp ne ptr %106, null, !dbg !21976
  br i1 %107, label %109, label %108, !dbg !21977

108:                                              ; preds = %99
  store ptr null, ptr %11, align 8, !dbg !21978
  br label %135, !dbg !21978

109:                                              ; preds = %99
  %110 = load ptr, ptr %15, align 8, !dbg !21979
  %111 = getelementptr inbounds %struct.anon.5, ptr %110, i32 0, i32 2, !dbg !21980
  %112 = load ptr, ptr %111, align 8, !dbg !21980
  %113 = icmp ne ptr %112, null, !dbg !21979
  br i1 %113, label %116, label %114, !dbg !21981

114:                                              ; preds = %109
  %115 = load ptr, ptr %15, align 8, !dbg !21982
  store ptr %115, ptr %11, align 8, !dbg !21983
  br label %135, !dbg !21983

116:                                              ; preds = %109
  br label %117, !dbg !21984

117:                                              ; preds = %130, %116
  %118 = load ptr, ptr %15, align 8, !dbg !21985
  %119 = icmp ne ptr %118, null, !dbg !21986
  br i1 %119, label %120, label %134, !dbg !21986

120:                                              ; preds = %117
  %121 = load ptr, ptr %15, align 8, !dbg !21987
  %122 = load ptr, ptr %121, align 8, !dbg !21988
  %123 = load ptr, ptr %13, align 8, !dbg !21989
  %124 = load i64, ptr %14, align 8, !dbg !21990
  %125 = sub i64 %124, 1, !dbg !21991
  %126 = call i32 @strncmp(ptr noundef %122, ptr noundef %123, i64 noundef %125) #20, !dbg !21992
  %127 = icmp ne i32 %126, 0, !dbg !21992
  br i1 %127, label %130, label %128, !dbg !21993

128:                                              ; preds = %120
  %129 = load ptr, ptr %15, align 8, !dbg !21994
  store ptr %129, ptr %11, align 8, !dbg !21995
  br label %135, !dbg !21995

130:                                              ; preds = %120
  %131 = load ptr, ptr %15, align 8, !dbg !21996
  %132 = getelementptr inbounds %struct.anon.5, ptr %131, i32 0, i32 2, !dbg !21997
  %133 = load ptr, ptr %132, align 8, !dbg !21997
  store ptr %133, ptr %15, align 8, !dbg !21998
  br label %117, !dbg !21999, !llvm.loop !22000

134:                                              ; preds = %117
  store ptr null, ptr %11, align 8, !dbg !22002
  br label %135, !dbg !22002

135:                                              ; preds = %134, %128, %114, %108
  %136 = load ptr, ptr %11, align 8, !dbg !22003
  store ptr %136, ptr %22, align 8, !dbg !21965
  %137 = load ptr, ptr %22, align 8, !dbg !22004
  %138 = icmp ne ptr %137, null, !dbg !22004
  br i1 %138, label %139, label %143, !dbg !22004

139:                                              ; preds = %135
  %140 = load ptr, ptr %22, align 8, !dbg !22005
  %141 = getelementptr inbounds %struct.anon.5, ptr %140, i32 0, i32 1, !dbg !22006
  %142 = load ptr, ptr %141, align 8, !dbg !22006
  br label %144, !dbg !22004

143:                                              ; preds = %135
  br label %144, !dbg !22004

144:                                              ; preds = %143, %139
  %145 = phi ptr [ %142, %139 ], [ null, %143 ], !dbg !22004
  store ptr %145, ptr %16, align 8, !dbg !22007
  br label %146, !dbg !22007

146:                                              ; preds = %144, %98, %32
  %147 = load ptr, ptr %16, align 8, !dbg !22008
  ret ptr %147, !dbg !22009
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local i32 @lwan_trie_entry_count(ptr noundef %0) #11 !dbg !22010 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !22013, metadata !DIExpression()), !dbg !22014
  %3 = load ptr, ptr %2, align 8, !dbg !22015
  %4 = icmp ne ptr %3, null, !dbg !22015
  br i1 %4, label %5, label %16, !dbg !22016

5:                                                ; preds = %1
  %6 = load ptr, ptr %2, align 8, !dbg !22017
  %7 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %6, i32 0, i32 0, !dbg !22018
  %8 = load ptr, ptr %7, align 8, !dbg !22018
  %9 = icmp ne ptr %8, null, !dbg !22017
  br i1 %9, label %10, label %16, !dbg !22019

10:                                               ; preds = %5
  %11 = load ptr, ptr %2, align 8, !dbg !22020
  %12 = getelementptr inbounds %struct.lwan_key_value_t_, ptr %11, i32 0, i32 0, !dbg !22021
  %13 = load ptr, ptr %12, align 8, !dbg !22021
  %14 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %13, i32 0, i32 2, !dbg !22022
  %15 = load i32, ptr %14, align 8, !dbg !22022
  br label %17, !dbg !22019

16:                                               ; preds = %5, %1
  br label %17, !dbg !22019

17:                                               ; preds = %16, %10
  %18 = phi i32 [ %15, %10 ], [ 0, %16 ], !dbg !22019
  ret i32 %18, !dbg !22023
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @realpathat(i32 noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 !dbg !22024 {
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca %struct.stat, align 8
  store i32 %0, ptr %5, align 4
  call void @llvm.dbg.declare(metadata ptr %5, metadata !22027, metadata !DIExpression()), !dbg !22028
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !22029, metadata !DIExpression()), !dbg !22030
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !22031, metadata !DIExpression()), !dbg !22032
  store ptr %3, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !22033, metadata !DIExpression()), !dbg !22034
  call void @llvm.dbg.declare(metadata ptr %9, metadata !22035, metadata !DIExpression()), !dbg !22036
  %10 = load i32, ptr %5, align 4, !dbg !22037
  %11 = load ptr, ptr %6, align 8, !dbg !22038
  %12 = load ptr, ptr %7, align 8, !dbg !22039
  %13 = load ptr, ptr %8, align 8, !dbg !22040
  %14 = call ptr @realpathat2(i32 noundef %10, ptr noundef %11, ptr noundef %12, ptr noundef %13, ptr noundef %9), !dbg !22041
  ret ptr %14, !dbg !22042
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @sd_is_fifo(i32 noundef %0, ptr noundef %1) #0 !dbg !22043 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca %struct.stat, align 8
  %7 = alloca %struct.stat, align 8
  store i32 %0, ptr %4, align 4
  call void @llvm.dbg.declare(metadata ptr %4, metadata !22046, metadata !DIExpression()), !dbg !22047
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !22048, metadata !DIExpression()), !dbg !22049
  call void @llvm.dbg.declare(metadata ptr %6, metadata !22050, metadata !DIExpression()), !dbg !22051
  %8 = load i32, ptr %4, align 4, !dbg !22052
  %9 = icmp slt i32 %8, 0, !dbg !22054
  br i1 %9, label %10, label %11, !dbg !22055

10:                                               ; preds = %2
  store i32 -22, ptr %3, align 4, !dbg !22056
  br label %61, !dbg !22056

11:                                               ; preds = %2
  %12 = load i32, ptr %4, align 4, !dbg !22057
  %13 = call i32 @fstat(i32 noundef %12, ptr noundef %6) #17, !dbg !22059
  %14 = icmp slt i32 %13, 0, !dbg !22060
  br i1 %14, label %15, label %19, !dbg !22061

15:                                               ; preds = %11
  %16 = call ptr @__errno_location() #21, !dbg !22062
  %17 = load i32, ptr %16, align 4, !dbg !22062
  %18 = sub nsw i32 0, %17, !dbg !22063
  store i32 %18, ptr %3, align 4, !dbg !22064
  br label %61, !dbg !22064

19:                                               ; preds = %11
  %20 = getelementptr inbounds %struct.stat, ptr %6, i32 0, i32 3, !dbg !22065
  %21 = load i32, ptr %20, align 8, !dbg !22065
  %22 = and i32 %21, 61440, !dbg !22065
  %23 = icmp eq i32 %22, 4096, !dbg !22065
  br i1 %23, label %25, label %24, !dbg !22067

24:                                               ; preds = %19
  store i32 0, ptr %3, align 4, !dbg !22068
  br label %61, !dbg !22068

25:                                               ; preds = %19
  %26 = load ptr, ptr %5, align 8, !dbg !22069
  %27 = icmp ne ptr %26, null, !dbg !22069
  br i1 %27, label %28, label %60, !dbg !22071

28:                                               ; preds = %25
  call void @llvm.dbg.declare(metadata ptr %7, metadata !22072, metadata !DIExpression()), !dbg !22074
  %29 = load ptr, ptr %5, align 8, !dbg !22075
  %30 = call i32 @stat(ptr noundef %29, ptr noundef %7) #17, !dbg !22077
  %31 = icmp slt i32 %30, 0, !dbg !22078
  br i1 %31, label %32, label %45, !dbg !22079

32:                                               ; preds = %28
  %33 = call ptr @__errno_location() #21, !dbg !22080
  %34 = load i32, ptr %33, align 4, !dbg !22080
  %35 = icmp eq i32 %34, 2, !dbg !22083
  br i1 %35, label %40, label %36, !dbg !22084

36:                                               ; preds = %32
  %37 = call ptr @__errno_location() #21, !dbg !22085
  %38 = load i32, ptr %37, align 4, !dbg !22085
  %39 = icmp eq i32 %38, 20, !dbg !22086
  br i1 %39, label %40, label %41, !dbg !22087

40:                                               ; preds = %36, %32
  store i32 0, ptr %3, align 4, !dbg !22088
  br label %61, !dbg !22088

41:                                               ; preds = %36
  %42 = call ptr @__errno_location() #21, !dbg !22089
  %43 = load i32, ptr %42, align 4, !dbg !22089
  %44 = sub nsw i32 0, %43, !dbg !22090
  store i32 %44, ptr %3, align 4, !dbg !22091
  br label %61, !dbg !22091

45:                                               ; preds = %28
  %46 = getelementptr inbounds %struct.stat, ptr %7, i32 0, i32 0, !dbg !22092
  %47 = load i64, ptr %46, align 8, !dbg !22092
  %48 = getelementptr inbounds %struct.stat, ptr %6, i32 0, i32 0, !dbg !22093
  %49 = load i64, ptr %48, align 8, !dbg !22093
  %50 = icmp eq i64 %47, %49, !dbg !22094
  br i1 %50, label %51, label %57, !dbg !22095

51:                                               ; preds = %45
  %52 = getelementptr inbounds %struct.stat, ptr %7, i32 0, i32 1, !dbg !22096
  %53 = load i64, ptr %52, align 8, !dbg !22096
  %54 = getelementptr inbounds %struct.stat, ptr %6, i32 0, i32 1, !dbg !22097
  %55 = load i64, ptr %54, align 8, !dbg !22097
  %56 = icmp eq i64 %53, %55, !dbg !22098
  br label %57

57:                                               ; preds = %51, %45
  %58 = phi i1 [ false, %45 ], [ %56, %51 ], !dbg !22099
  %59 = zext i1 %58 to i32, !dbg !22095
  store i32 %59, ptr %3, align 4, !dbg !22100
  br label %61, !dbg !22100

60:                                               ; preds = %25
  store i32 1, ptr %3, align 4, !dbg !22101
  br label %61, !dbg !22101

61:                                               ; preds = %60, %57, %41, %40, %24, %15, %10
  %62 = load i32, ptr %3, align 4, !dbg !22102
  ret i32 %62, !dbg !22102
}

; Function Attrs: nounwind
declare i32 @stat(ptr noundef, ptr noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @sd_is_special(i32 noundef %0, ptr noundef %1) #0 !dbg !22103 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca %struct.stat, align 8
  %7 = alloca %struct.stat, align 8
  store i32 %0, ptr %4, align 4
  call void @llvm.dbg.declare(metadata ptr %4, metadata !22104, metadata !DIExpression()), !dbg !22105
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !22106, metadata !DIExpression()), !dbg !22107
  call void @llvm.dbg.declare(metadata ptr %6, metadata !22108, metadata !DIExpression()), !dbg !22109
  %8 = load i32, ptr %4, align 4, !dbg !22110
  %9 = icmp slt i32 %8, 0, !dbg !22112
  br i1 %9, label %10, label %11, !dbg !22113

10:                                               ; preds = %2
  store i32 -22, ptr %3, align 4, !dbg !22114
  br label %94, !dbg !22114

11:                                               ; preds = %2
  %12 = load i32, ptr %4, align 4, !dbg !22115
  %13 = call i32 @fstat(i32 noundef %12, ptr noundef %6) #17, !dbg !22117
  %14 = icmp slt i32 %13, 0, !dbg !22118
  br i1 %14, label %15, label %19, !dbg !22119

15:                                               ; preds = %11
  %16 = call ptr @__errno_location() #21, !dbg !22120
  %17 = load i32, ptr %16, align 4, !dbg !22120
  %18 = sub nsw i32 0, %17, !dbg !22121
  store i32 %18, ptr %3, align 4, !dbg !22122
  br label %94, !dbg !22122

19:                                               ; preds = %11
  %20 = getelementptr inbounds %struct.stat, ptr %6, i32 0, i32 3, !dbg !22123
  %21 = load i32, ptr %20, align 8, !dbg !22123
  %22 = and i32 %21, 61440, !dbg !22123
  %23 = icmp eq i32 %22, 32768, !dbg !22123
  br i1 %23, label %30, label %24, !dbg !22125

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.stat, ptr %6, i32 0, i32 3, !dbg !22126
  %26 = load i32, ptr %25, align 8, !dbg !22126
  %27 = and i32 %26, 61440, !dbg !22126
  %28 = icmp eq i32 %27, 8192, !dbg !22126
  br i1 %28, label %30, label %29, !dbg !22127

29:                                               ; preds = %24
  store i32 0, ptr %3, align 4, !dbg !22128
  br label %94, !dbg !22128

30:                                               ; preds = %24, %19
  %31 = load ptr, ptr %5, align 8, !dbg !22129
  %32 = icmp ne ptr %31, null, !dbg !22129
  br i1 %32, label %33, label %93, !dbg !22131

33:                                               ; preds = %30
  call void @llvm.dbg.declare(metadata ptr %7, metadata !22132, metadata !DIExpression()), !dbg !22134
  %34 = load ptr, ptr %5, align 8, !dbg !22135
  %35 = call i32 @stat(ptr noundef %34, ptr noundef %7) #17, !dbg !22137
  %36 = icmp slt i32 %35, 0, !dbg !22138
  br i1 %36, label %37, label %50, !dbg !22139

37:                                               ; preds = %33
  %38 = call ptr @__errno_location() #21, !dbg !22140
  %39 = load i32, ptr %38, align 4, !dbg !22140
  %40 = icmp eq i32 %39, 2, !dbg !22143
  br i1 %40, label %45, label %41, !dbg !22144

41:                                               ; preds = %37
  %42 = call ptr @__errno_location() #21, !dbg !22145
  %43 = load i32, ptr %42, align 4, !dbg !22145
  %44 = icmp eq i32 %43, 20, !dbg !22146
  br i1 %44, label %45, label %46, !dbg !22147

45:                                               ; preds = %41, %37
  store i32 0, ptr %3, align 4, !dbg !22148
  br label %94, !dbg !22148

46:                                               ; preds = %41
  %47 = call ptr @__errno_location() #21, !dbg !22149
  %48 = load i32, ptr %47, align 4, !dbg !22149
  %49 = sub nsw i32 0, %48, !dbg !22150
  store i32 %49, ptr %3, align 4, !dbg !22151
  br label %94, !dbg !22151

50:                                               ; preds = %33
  %51 = getelementptr inbounds %struct.stat, ptr %6, i32 0, i32 3, !dbg !22152
  %52 = load i32, ptr %51, align 8, !dbg !22152
  %53 = and i32 %52, 61440, !dbg !22152
  %54 = icmp eq i32 %53, 32768, !dbg !22152
  br i1 %54, label %55, label %75, !dbg !22154

55:                                               ; preds = %50
  %56 = getelementptr inbounds %struct.stat, ptr %7, i32 0, i32 3, !dbg !22155
  %57 = load i32, ptr %56, align 8, !dbg !22155
  %58 = and i32 %57, 61440, !dbg !22155
  %59 = icmp eq i32 %58, 32768, !dbg !22155
  br i1 %59, label %60, label %75, !dbg !22156

60:                                               ; preds = %55
  %61 = getelementptr inbounds %struct.stat, ptr %7, i32 0, i32 0, !dbg !22157
  %62 = load i64, ptr %61, align 8, !dbg !22157
  %63 = getelementptr inbounds %struct.stat, ptr %6, i32 0, i32 0, !dbg !22158
  %64 = load i64, ptr %63, align 8, !dbg !22158
  %65 = icmp eq i64 %62, %64, !dbg !22159
  br i1 %65, label %66, label %72, !dbg !22160

66:                                               ; preds = %60
  %67 = getelementptr inbounds %struct.stat, ptr %7, i32 0, i32 1, !dbg !22161
  %68 = load i64, ptr %67, align 8, !dbg !22161
  %69 = getelementptr inbounds %struct.stat, ptr %6, i32 0, i32 1, !dbg !22162
  %70 = load i64, ptr %69, align 8, !dbg !22162
  %71 = icmp eq i64 %68, %70, !dbg !22163
  br label %72

72:                                               ; preds = %66, %60
  %73 = phi i1 [ false, %60 ], [ %71, %66 ], !dbg !22164
  %74 = zext i1 %73 to i32, !dbg !22160
  store i32 %74, ptr %3, align 4, !dbg !22165
  br label %94, !dbg !22165

75:                                               ; preds = %55, %50
  %76 = getelementptr inbounds %struct.stat, ptr %6, i32 0, i32 3, !dbg !22166
  %77 = load i32, ptr %76, align 8, !dbg !22166
  %78 = and i32 %77, 61440, !dbg !22166
  %79 = icmp eq i32 %78, 8192, !dbg !22166
  br i1 %79, label %80, label %92, !dbg !22168

80:                                               ; preds = %75
  %81 = getelementptr inbounds %struct.stat, ptr %7, i32 0, i32 3, !dbg !22169
  %82 = load i32, ptr %81, align 8, !dbg !22169
  %83 = and i32 %82, 61440, !dbg !22169
  %84 = icmp eq i32 %83, 8192, !dbg !22169
  br i1 %84, label %85, label %92, !dbg !22170

85:                                               ; preds = %80
  %86 = getelementptr inbounds %struct.stat, ptr %7, i32 0, i32 7, !dbg !22171
  %87 = load i64, ptr %86, align 8, !dbg !22171
  %88 = getelementptr inbounds %struct.stat, ptr %6, i32 0, i32 7, !dbg !22172
  %89 = load i64, ptr %88, align 8, !dbg !22172
  %90 = icmp eq i64 %87, %89, !dbg !22173
  %91 = zext i1 %90 to i32, !dbg !22173
  store i32 %91, ptr %3, align 4, !dbg !22174
  br label %94, !dbg !22174

92:                                               ; preds = %80, %75
  store i32 0, ptr %3, align 4, !dbg !22175
  br label %94, !dbg !22175

93:                                               ; preds = %30
  store i32 1, ptr %3, align 4, !dbg !22176
  br label %94, !dbg !22176

94:                                               ; preds = %93, %92, %85, %72, %46, %45, %29, %15, %10
  %95 = load i32, ptr %3, align 4, !dbg !22177
  ret i32 %95, !dbg !22177
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @sd_is_socket(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #0 !dbg !22178 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %union.sockaddr_union, align 8
  %12 = alloca i32, align 4
  %13 = alloca %union.__SOCKADDR_ARG, align 8
  store i32 %0, ptr %6, align 4
  call void @llvm.dbg.declare(metadata ptr %6, metadata !22181, metadata !DIExpression()), !dbg !22182
  store i32 %1, ptr %7, align 4
  call void @llvm.dbg.declare(metadata ptr %7, metadata !22183, metadata !DIExpression()), !dbg !22184
  store i32 %2, ptr %8, align 4
  call void @llvm.dbg.declare(metadata ptr %8, metadata !22185, metadata !DIExpression()), !dbg !22186
  store i32 %3, ptr %9, align 4
  call void @llvm.dbg.declare(metadata ptr %9, metadata !22187, metadata !DIExpression()), !dbg !22188
  call void @llvm.dbg.declare(metadata ptr %10, metadata !22189, metadata !DIExpression()), !dbg !22190
  %14 = load i32, ptr %7, align 4, !dbg !22191
  %15 = icmp slt i32 %14, 0, !dbg !22193
  br i1 %15, label %16, label %17, !dbg !22194

16:                                               ; preds = %4
  store i32 -22, ptr %5, align 4, !dbg !22195
  br label %52, !dbg !22195

17:                                               ; preds = %4
  %18 = load i32, ptr %6, align 4, !dbg !22196
  %19 = load i32, ptr %8, align 4, !dbg !22197
  %20 = load i32, ptr %9, align 4, !dbg !22198
  %21 = call i32 @sd_is_socket_internal(i32 noundef %18, i32 noundef %19, i32 noundef %20), !dbg !22199
  store i32 %21, ptr %10, align 4, !dbg !22200
  %22 = load i32, ptr %10, align 4, !dbg !22201
  %23 = icmp sle i32 %22, 0, !dbg !22203
  br i1 %23, label %24, label %26, !dbg !22204

24:                                               ; preds = %17
  %25 = load i32, ptr %10, align 4, !dbg !22205
  store i32 %25, ptr %5, align 4, !dbg !22206
  br label %52, !dbg !22206

26:                                               ; preds = %17
  %27 = load i32, ptr %7, align 4, !dbg !22207
  %28 = icmp sgt i32 %27, 0, !dbg !22209
  br i1 %28, label %29, label %51, !dbg !22210

29:                                               ; preds = %26
  call void @llvm.dbg.declare(metadata ptr %11, metadata !22211, metadata !DIExpression()), !dbg !22213
  call void @llvm.memset.p0.i64(ptr align 8 %11, i8 0, i64 128, i1 false), !dbg !22213
  call void @llvm.dbg.declare(metadata ptr %12, metadata !22214, metadata !DIExpression()), !dbg !22215
  store i32 128, ptr %12, align 4, !dbg !22215
  %30 = load i32, ptr %6, align 4, !dbg !22216
  store ptr %11, ptr %13, align 8, !dbg !22218
  %31 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %13, i32 0, i32 0, !dbg !22219
  %32 = load ptr, ptr %31, align 8, !dbg !22219
  %33 = call i32 @getsockname(i32 noundef %30, ptr %32, ptr noundef %12) #17, !dbg !22219
  %34 = icmp slt i32 %33, 0, !dbg !22220
  br i1 %34, label %35, label %39, !dbg !22221

35:                                               ; preds = %29
  %36 = call ptr @__errno_location() #21, !dbg !22222
  %37 = load i32, ptr %36, align 4, !dbg !22222
  %38 = sub nsw i32 0, %37, !dbg !22223
  store i32 %38, ptr %5, align 4, !dbg !22224
  br label %52, !dbg !22224

39:                                               ; preds = %29
  %40 = load i32, ptr %12, align 4, !dbg !22225
  %41 = zext i32 %40 to i64, !dbg !22225
  %42 = icmp ult i64 %41, 2, !dbg !22227
  br i1 %42, label %43, label %44, !dbg !22228

43:                                               ; preds = %39
  store i32 -22, ptr %5, align 4, !dbg !22229
  br label %52, !dbg !22229

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.sockaddr, ptr %11, i32 0, i32 0, !dbg !22230
  %46 = load i16, ptr %45, align 8, !dbg !22230
  %47 = zext i16 %46 to i32, !dbg !22231
  %48 = load i32, ptr %7, align 4, !dbg !22232
  %49 = icmp eq i32 %47, %48, !dbg !22233
  %50 = zext i1 %49 to i32, !dbg !22233
  store i32 %50, ptr %5, align 4, !dbg !22234
  br label %52, !dbg !22234

51:                                               ; preds = %26
  store i32 1, ptr %5, align 4, !dbg !22235
  br label %52, !dbg !22235

52:                                               ; preds = %51, %44, %43, %35, %24, %16
  %53 = load i32, ptr %5, align 4, !dbg !22236
  ret i32 %53, !dbg !22236
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @sd_is_socket_unix(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef %3, i64 noundef %4) #0 !dbg !22237 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca i64, align 8
  %12 = alloca %union.sockaddr_union, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %union.__SOCKADDR_ARG, align 8
  store i32 %0, ptr %7, align 4
  call void @llvm.dbg.declare(metadata ptr %7, metadata !22240, metadata !DIExpression()), !dbg !22241
  store i32 %1, ptr %8, align 4
  call void @llvm.dbg.declare(metadata ptr %8, metadata !22242, metadata !DIExpression()), !dbg !22243
  store i32 %2, ptr %9, align 4
  call void @llvm.dbg.declare(metadata ptr %9, metadata !22244, metadata !DIExpression()), !dbg !22245
  store ptr %3, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %10, metadata !22246, metadata !DIExpression()), !dbg !22247
  store i64 %4, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !22248, metadata !DIExpression()), !dbg !22249
  call void @llvm.dbg.declare(metadata ptr %12, metadata !22250, metadata !DIExpression()), !dbg !22251
  call void @llvm.memset.p0.i64(ptr align 8 %12, i8 0, i64 128, i1 false), !dbg !22251
  call void @llvm.dbg.declare(metadata ptr %13, metadata !22252, metadata !DIExpression()), !dbg !22253
  store i32 128, ptr %13, align 4, !dbg !22253
  call void @llvm.dbg.declare(metadata ptr %14, metadata !22254, metadata !DIExpression()), !dbg !22255
  %16 = load i32, ptr %7, align 4, !dbg !22256
  %17 = load i32, ptr %8, align 4, !dbg !22257
  %18 = load i32, ptr %9, align 4, !dbg !22258
  %19 = call i32 @sd_is_socket_internal(i32 noundef %16, i32 noundef %17, i32 noundef %18), !dbg !22259
  store i32 %19, ptr %14, align 4, !dbg !22260
  %20 = load i32, ptr %14, align 4, !dbg !22261
  %21 = icmp sle i32 %20, 0, !dbg !22263
  br i1 %21, label %22, label %24, !dbg !22264

22:                                               ; preds = %5
  %23 = load i32, ptr %14, align 4, !dbg !22265
  store i32 %23, ptr %6, align 4, !dbg !22266
  br label %102, !dbg !22266

24:                                               ; preds = %5
  %25 = load i32, ptr %7, align 4, !dbg !22267
  store ptr %12, ptr %15, align 8, !dbg !22269
  %26 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %15, i32 0, i32 0, !dbg !22270
  %27 = load ptr, ptr %26, align 8, !dbg !22270
  %28 = call i32 @getsockname(i32 noundef %25, ptr %27, ptr noundef %13) #17, !dbg !22270
  %29 = icmp slt i32 %28, 0, !dbg !22271
  br i1 %29, label %30, label %34, !dbg !22272

30:                                               ; preds = %24
  %31 = call ptr @__errno_location() #21, !dbg !22273
  %32 = load i32, ptr %31, align 4, !dbg !22273
  %33 = sub nsw i32 0, %32, !dbg !22274
  store i32 %33, ptr %6, align 4, !dbg !22275
  br label %102, !dbg !22275

34:                                               ; preds = %24
  %35 = load i32, ptr %13, align 4, !dbg !22276
  %36 = zext i32 %35 to i64, !dbg !22276
  %37 = icmp ult i64 %36, 2, !dbg !22278
  br i1 %37, label %38, label %39, !dbg !22279

38:                                               ; preds = %34
  store i32 -22, ptr %6, align 4, !dbg !22280
  br label %102, !dbg !22280

39:                                               ; preds = %34
  %40 = getelementptr inbounds %struct.sockaddr, ptr %12, i32 0, i32 0, !dbg !22281
  %41 = load i16, ptr %40, align 8, !dbg !22281
  %42 = zext i16 %41 to i32, !dbg !22283
  %43 = icmp ne i32 %42, 1, !dbg !22284
  br i1 %43, label %44, label %45, !dbg !22285

44:                                               ; preds = %39
  store i32 0, ptr %6, align 4, !dbg !22286
  br label %102, !dbg !22286

45:                                               ; preds = %39
  %46 = load ptr, ptr %10, align 8, !dbg !22287
  %47 = icmp ne ptr %46, null, !dbg !22287
  br i1 %47, label %48, label %101, !dbg !22289

48:                                               ; preds = %45
  %49 = load i64, ptr %11, align 8, !dbg !22290
  %50 = icmp eq i64 %49, 0, !dbg !22293
  br i1 %50, label %51, label %54, !dbg !22294

51:                                               ; preds = %48
  %52 = load ptr, ptr %10, align 8, !dbg !22295
  %53 = call i64 @strlen(ptr noundef %52) #20, !dbg !22296
  store i64 %53, ptr %11, align 8, !dbg !22297
  br label %54, !dbg !22298

54:                                               ; preds = %51, %48
  %55 = load i64, ptr %11, align 8, !dbg !22299
  %56 = icmp eq i64 %55, 0, !dbg !22301
  br i1 %56, label %57, label %62, !dbg !22302

57:                                               ; preds = %54
  %58 = load i32, ptr %13, align 4, !dbg !22303
  %59 = zext i32 %58 to i64, !dbg !22303
  %60 = icmp eq i64 %59, 2, !dbg !22304
  %61 = zext i1 %60 to i32, !dbg !22304
  store i32 %61, ptr %6, align 4, !dbg !22305
  br label %102, !dbg !22305

62:                                               ; preds = %54
  %63 = load ptr, ptr %10, align 8, !dbg !22306
  %64 = getelementptr inbounds i8, ptr %63, i64 0, !dbg !22306
  %65 = load i8, ptr %64, align 1, !dbg !22306
  %66 = icmp ne i8 %65, 0, !dbg !22306
  br i1 %66, label %67, label %85, !dbg !22308

67:                                               ; preds = %62
  %68 = load i32, ptr %13, align 4, !dbg !22309
  %69 = zext i32 %68 to i64, !dbg !22309
  %70 = load i64, ptr %11, align 8, !dbg !22310
  %71 = add i64 2, %70, !dbg !22311
  %72 = add i64 %71, 1, !dbg !22312
  %73 = icmp uge i64 %69, %72, !dbg !22313
  br i1 %73, label %74, label %82, !dbg !22314

74:                                               ; preds = %67
  %75 = load ptr, ptr %10, align 8, !dbg !22315
  %76 = getelementptr inbounds %struct.sockaddr_un, ptr %12, i32 0, i32 1, !dbg !22316
  %77 = getelementptr inbounds [108 x i8], ptr %76, i64 0, i64 0, !dbg !22317
  %78 = load i64, ptr %11, align 8, !dbg !22318
  %79 = add i64 %78, 1, !dbg !22319
  %80 = call i32 @memcmp(ptr noundef %75, ptr noundef %77, i64 noundef %79) #20, !dbg !22320
  %81 = icmp eq i32 %80, 0, !dbg !22321
  br label %82

82:                                               ; preds = %74, %67
  %83 = phi i1 [ false, %67 ], [ %81, %74 ], !dbg !22322
  %84 = zext i1 %83 to i32, !dbg !22314
  store i32 %84, ptr %6, align 4, !dbg !22323
  br label %102, !dbg !22323

85:                                               ; preds = %62
  %86 = load i32, ptr %13, align 4, !dbg !22324
  %87 = zext i32 %86 to i64, !dbg !22324
  %88 = load i64, ptr %11, align 8, !dbg !22325
  %89 = add i64 2, %88, !dbg !22326
  %90 = icmp eq i64 %87, %89, !dbg !22327
  br i1 %90, label %91, label %98, !dbg !22328

91:                                               ; preds = %85
  %92 = load ptr, ptr %10, align 8, !dbg !22329
  %93 = getelementptr inbounds %struct.sockaddr_un, ptr %12, i32 0, i32 1, !dbg !22330
  %94 = getelementptr inbounds [108 x i8], ptr %93, i64 0, i64 0, !dbg !22331
  %95 = load i64, ptr %11, align 8, !dbg !22332
  %96 = call i32 @memcmp(ptr noundef %92, ptr noundef %94, i64 noundef %95) #20, !dbg !22333
  %97 = icmp eq i32 %96, 0, !dbg !22334
  br label %98

98:                                               ; preds = %91, %85
  %99 = phi i1 [ false, %85 ], [ %97, %91 ], !dbg !22322
  %100 = zext i1 %99 to i32, !dbg !22328
  store i32 %100, ptr %6, align 4, !dbg !22335
  br label %102, !dbg !22335

101:                                              ; preds = %45
  store i32 1, ptr %6, align 4, !dbg !22336
  br label %102, !dbg !22336

102:                                              ; preds = %101, %98, %82, %57, %44, %38, %30, %22
  %103 = load i32, ptr %6, align 4, !dbg !22337
  ret i32 %103, !dbg !22337
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @sd_notify(i32 noundef %0, ptr noundef %1) #0 !dbg !22338 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.msghdr, align 8
  %9 = alloca %struct.lwan_value_t_, align 8
  %10 = alloca %union.sockaddr_union, align 8
  %11 = alloca ptr, align 8
  store i32 %0, ptr %4, align 4
  call void @llvm.dbg.declare(metadata ptr %4, metadata !22339, metadata !DIExpression()), !dbg !22340
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !22341, metadata !DIExpression()), !dbg !22342
  call void @llvm.dbg.declare(metadata ptr %6, metadata !22343, metadata !DIExpression()), !dbg !22344
  store i32 -1, ptr %6, align 4, !dbg !22344
  call void @llvm.dbg.declare(metadata ptr %7, metadata !22345, metadata !DIExpression()), !dbg !22346
  call void @llvm.dbg.declare(metadata ptr %8, metadata !22347, metadata !DIExpression()), !dbg !22362
  call void @llvm.dbg.declare(metadata ptr %9, metadata !22363, metadata !DIExpression()), !dbg !22364
  call void @llvm.dbg.declare(metadata ptr %10, metadata !22365, metadata !DIExpression()), !dbg !22366
  call void @llvm.dbg.declare(metadata ptr %11, metadata !22367, metadata !DIExpression()), !dbg !22368
  %12 = load ptr, ptr %5, align 8, !dbg !22369
  %13 = icmp ne ptr %12, null, !dbg !22369
  br i1 %13, label %15, label %14, !dbg !22371

14:                                               ; preds = %2
  store i32 -22, ptr %7, align 4, !dbg !22372
  br label %90, !dbg !22374

15:                                               ; preds = %2
  %16 = call ptr @getenv(ptr noundef @.str.2.434) #17, !dbg !22375
  store ptr %16, ptr %11, align 8, !dbg !22376
  %17 = load ptr, ptr %11, align 8, !dbg !22377
  %18 = icmp ne ptr %17, null, !dbg !22377
  br i1 %18, label %20, label %19, !dbg !22379

19:                                               ; preds = %15
  store i32 0, ptr %3, align 4, !dbg !22380
  br label %103, !dbg !22380

20:                                               ; preds = %15
  %21 = load ptr, ptr %11, align 8, !dbg !22381
  %22 = getelementptr inbounds i8, ptr %21, i64 0, !dbg !22381
  %23 = load i8, ptr %22, align 1, !dbg !22381
  %24 = sext i8 %23 to i32, !dbg !22381
  %25 = icmp ne i32 %24, 64, !dbg !22383
  br i1 %25, label %26, label %32, !dbg !22384

26:                                               ; preds = %20
  %27 = load ptr, ptr %11, align 8, !dbg !22385
  %28 = getelementptr inbounds i8, ptr %27, i64 0, !dbg !22385
  %29 = load i8, ptr %28, align 1, !dbg !22385
  %30 = sext i8 %29 to i32, !dbg !22385
  %31 = icmp ne i32 %30, 47, !dbg !22386
  br i1 %31, label %38, label %32, !dbg !22387

32:                                               ; preds = %26, %20
  %33 = load ptr, ptr %11, align 8, !dbg !22388
  %34 = getelementptr inbounds i8, ptr %33, i64 1, !dbg !22388
  %35 = load i8, ptr %34, align 1, !dbg !22388
  %36 = sext i8 %35 to i32, !dbg !22388
  %37 = icmp eq i32 %36, 0, !dbg !22389
  br i1 %37, label %38, label %39, !dbg !22390

38:                                               ; preds = %32, %26
  store i32 -22, ptr %7, align 4, !dbg !22391
  br label %90, !dbg !22393

39:                                               ; preds = %32
  %40 = call i32 @socket(i32 noundef 1, i32 noundef 524290, i32 noundef 0) #17, !dbg !22394
  store i32 %40, ptr %6, align 4, !dbg !22395
  %41 = load i32, ptr %6, align 4, !dbg !22396
  %42 = icmp slt i32 %41, 0, !dbg !22398
  br i1 %42, label %43, label %47, !dbg !22399

43:                                               ; preds = %39
  %44 = call ptr @__errno_location() #21, !dbg !22400
  %45 = load i32, ptr %44, align 4, !dbg !22400
  %46 = sub nsw i32 0, %45, !dbg !22402
  store i32 %46, ptr %7, align 4, !dbg !22403
  br label %90, !dbg !22404

47:                                               ; preds = %39
  call void @llvm.memset.p0.i64(ptr align 8 %10, i8 0, i64 128, i1 false), !dbg !22405
  %48 = getelementptr inbounds %struct.sockaddr, ptr %10, i32 0, i32 0, !dbg !22406
  store i16 1, ptr %48, align 8, !dbg !22407
  %49 = getelementptr inbounds %struct.sockaddr_un, ptr %10, i32 0, i32 1, !dbg !22408
  %50 = getelementptr inbounds [108 x i8], ptr %49, i64 0, i64 0, !dbg !22409
  %51 = load ptr, ptr %11, align 8, !dbg !22410
  %52 = call ptr @strncpy(ptr noundef %50, ptr noundef %51, i64 noundef 108) #17, !dbg !22411
  %53 = getelementptr inbounds %struct.sockaddr_un, ptr %10, i32 0, i32 1, !dbg !22412
  %54 = getelementptr inbounds [108 x i8], ptr %53, i64 0, i64 0, !dbg !22414
  %55 = load i8, ptr %54, align 2, !dbg !22414
  %56 = sext i8 %55 to i32, !dbg !22414
  %57 = icmp eq i32 %56, 64, !dbg !22415
  br i1 %57, label %58, label %61, !dbg !22416

58:                                               ; preds = %47
  %59 = getelementptr inbounds %struct.sockaddr_un, ptr %10, i32 0, i32 1, !dbg !22417
  %60 = getelementptr inbounds [108 x i8], ptr %59, i64 0, i64 0, !dbg !22418
  store i8 0, ptr %60, align 2, !dbg !22419
  br label %61, !dbg !22418

61:                                               ; preds = %58, %47
  call void @llvm.memset.p0.i64(ptr align 8 %9, i8 0, i64 16, i1 false), !dbg !22420
  %62 = load ptr, ptr %5, align 8, !dbg !22421
  %63 = getelementptr inbounds %struct.lwan_value_t_, ptr %9, i32 0, i32 0, !dbg !22422
  store ptr %62, ptr %63, align 8, !dbg !22423
  %64 = load ptr, ptr %5, align 8, !dbg !22424
  %65 = call i64 @strlen(ptr noundef %64) #20, !dbg !22425
  %66 = getelementptr inbounds %struct.lwan_value_t_, ptr %9, i32 0, i32 1, !dbg !22426
  store i64 %65, ptr %66, align 8, !dbg !22427
  call void @llvm.memset.p0.i64(ptr align 8 %8, i8 0, i64 56, i1 false), !dbg !22428
  %67 = getelementptr inbounds %struct.msghdr, ptr %8, i32 0, i32 0, !dbg !22429
  store ptr %10, ptr %67, align 8, !dbg !22430
  %68 = load ptr, ptr %11, align 8, !dbg !22431
  %69 = call i64 @strlen(ptr noundef %68) #20, !dbg !22432
  %70 = add i64 2, %69, !dbg !22433
  %71 = trunc i64 %70 to i32, !dbg !22434
  %72 = getelementptr inbounds %struct.msghdr, ptr %8, i32 0, i32 1, !dbg !22435
  store i32 %71, ptr %72, align 8, !dbg !22436
  %73 = getelementptr inbounds %struct.msghdr, ptr %8, i32 0, i32 1, !dbg !22437
  %74 = load i32, ptr %73, align 8, !dbg !22437
  %75 = zext i32 %74 to i64, !dbg !22439
  %76 = icmp ugt i64 %75, 110, !dbg !22440
  br i1 %76, label %77, label %79, !dbg !22441

77:                                               ; preds = %61
  %78 = getelementptr inbounds %struct.msghdr, ptr %8, i32 0, i32 1, !dbg !22442
  store i32 110, ptr %78, align 8, !dbg !22443
  br label %79, !dbg !22444

79:                                               ; preds = %77, %61
  %80 = getelementptr inbounds %struct.msghdr, ptr %8, i32 0, i32 2, !dbg !22445
  store ptr %9, ptr %80, align 8, !dbg !22446
  %81 = getelementptr inbounds %struct.msghdr, ptr %8, i32 0, i32 3, !dbg !22447
  store i64 1, ptr %81, align 8, !dbg !22448
  %82 = load i32, ptr %6, align 4, !dbg !22449
  %83 = call i64 @sendmsg(i32 noundef %82, ptr noundef %8, i32 noundef 16384), !dbg !22451
  %84 = icmp slt i64 %83, 0, !dbg !22452
  br i1 %84, label %85, label %89, !dbg !22453

85:                                               ; preds = %79
  %86 = call ptr @__errno_location() #21, !dbg !22454
  %87 = load i32, ptr %86, align 4, !dbg !22454
  %88 = sub nsw i32 0, %87, !dbg !22456
  store i32 %88, ptr %7, align 4, !dbg !22457
  br label %90, !dbg !22458

89:                                               ; preds = %79
  store i32 1, ptr %7, align 4, !dbg !22459
  br label %90, !dbg !22460

90:                                               ; preds = %89, %85, %43, %38, %14
  call void @llvm.dbg.label(metadata !22461), !dbg !22462
  %91 = load i32, ptr %4, align 4, !dbg !22463
  %92 = icmp ne i32 %91, 0, !dbg !22463
  br i1 %92, label %93, label %95, !dbg !22465

93:                                               ; preds = %90
  %94 = call i32 @unsetenv(ptr noundef @.str.2.434) #17, !dbg !22466
  br label %95, !dbg !22466

95:                                               ; preds = %93, %90
  %96 = load i32, ptr %6, align 4, !dbg !22467
  %97 = icmp sge i32 %96, 0, !dbg !22469
  br i1 %97, label %98, label %101, !dbg !22470

98:                                               ; preds = %95
  %99 = load i32, ptr %6, align 4, !dbg !22471
  %100 = call i32 @close(i32 noundef %99), !dbg !22472
  br label %101, !dbg !22472

101:                                              ; preds = %98, %95
  %102 = load i32, ptr %7, align 4, !dbg !22473
  store i32 %102, ptr %3, align 4, !dbg !22474
  br label %103, !dbg !22474

103:                                              ; preds = %101, %19
  %104 = load i32, ptr %3, align 4, !dbg !22475
  ret i32 %104, !dbg !22475
}

declare i64 @sendmsg(i32 noundef, ptr noundef, i32 noundef) #5

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @sd_notifyf(i32 noundef %0, ptr noundef %1, ...) #0 !dbg !22476 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  store i32 %0, ptr %4, align 4
  call void @llvm.dbg.declare(metadata ptr %4, metadata !22479, metadata !DIExpression()), !dbg !22480
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !22481, metadata !DIExpression()), !dbg !22482
  call void @llvm.dbg.declare(metadata ptr %6, metadata !22483, metadata !DIExpression()), !dbg !22495
  call void @llvm.dbg.declare(metadata ptr %7, metadata !22496, metadata !DIExpression()), !dbg !22497
  store ptr null, ptr %7, align 8, !dbg !22497
  call void @llvm.dbg.declare(metadata ptr %8, metadata !22498, metadata !DIExpression()), !dbg !22499
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %6, i64 0, i64 0, !dbg !22500
  call void @llvm.va_start(ptr %9), !dbg !22500
  %10 = load ptr, ptr %5, align 8, !dbg !22501
  %11 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %6, i64 0, i64 0, !dbg !22502
  %12 = call i32 @vasprintf(ptr noundef %7, ptr noundef %10, ptr noundef %11) #17, !dbg !22503
  store i32 %12, ptr %8, align 4, !dbg !22504
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %6, i64 0, i64 0, !dbg !22505
  call void @llvm.va_end(ptr %13), !dbg !22505
  %14 = load i32, ptr %8, align 4, !dbg !22506
  %15 = icmp slt i32 %14, 0, !dbg !22508
  br i1 %15, label %19, label %16, !dbg !22509

16:                                               ; preds = %2
  %17 = load ptr, ptr %7, align 8, !dbg !22510
  %18 = icmp ne ptr %17, null, !dbg !22510
  br i1 %18, label %20, label %19, !dbg !22511

19:                                               ; preds = %16, %2
  store i32 -12, ptr %3, align 4, !dbg !22512
  br label %26, !dbg !22512

20:                                               ; preds = %16
  %21 = load i32, ptr %4, align 4, !dbg !22513
  %22 = load ptr, ptr %7, align 8, !dbg !22514
  %23 = call i32 @sd_notify(i32 noundef %21, ptr noundef %22), !dbg !22515
  store i32 %23, ptr %8, align 4, !dbg !22516
  %24 = load ptr, ptr %7, align 8, !dbg !22517
  call void @free(ptr noundef %24) #17, !dbg !22518
  %25 = load i32, ptr %8, align 4, !dbg !22519
  store i32 %25, ptr %3, align 4, !dbg !22520
  br label %26, !dbg !22520

26:                                               ; preds = %20, %19
  %27 = load i32, ptr %3, align 4, !dbg !22521
  ret i32 %27, !dbg !22521
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @sd_booted() #0 !dbg !22522 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.stat, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !22523, metadata !DIExpression()), !dbg !22524
  %3 = call i32 @lstat(ptr noundef @.str.3.435, ptr noundef %2) #17, !dbg !22525
  %4 = icmp slt i32 %3, 0, !dbg !22527
  br i1 %4, label %5, label %6, !dbg !22528

5:                                                ; preds = %0
  store i32 0, ptr %1, align 4, !dbg !22529
  br label %14, !dbg !22529

6:                                                ; preds = %0
  %7 = getelementptr inbounds %struct.stat, ptr %2, i32 0, i32 3, !dbg !22530
  %8 = load i32, ptr %7, align 8, !dbg !22530
  %9 = and i32 %8, 61440, !dbg !22530
  %10 = icmp eq i32 %9, 16384, !dbg !22530
  %11 = xor i1 %10, true, !dbg !22531
  %12 = xor i1 %11, true, !dbg !22532
  %13 = zext i1 %12 to i32, !dbg !22532
  store i32 %13, ptr %1, align 4, !dbg !22533
  br label %14, !dbg !22533

14:                                               ; preds = %6, %5
  %15 = load i32, ptr %1, align 4, !dbg !22534
  ret i32 %15, !dbg !22534
}

; Function Attrs: nounwind
declare i32 @lstat(ptr noundef, ptr noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @sd_watchdog_enabled(i32 noundef %0, ptr noundef %1) #0 !dbg !22535 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  store i32 %0, ptr %3, align 4
  call void @llvm.dbg.declare(metadata ptr %3, metadata !22538, metadata !DIExpression()), !dbg !22539
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !22540, metadata !DIExpression()), !dbg !22541
  call void @llvm.dbg.declare(metadata ptr %5, metadata !22542, metadata !DIExpression()), !dbg !22544
  call void @llvm.dbg.declare(metadata ptr %6, metadata !22545, metadata !DIExpression()), !dbg !22546
  call void @llvm.dbg.declare(metadata ptr %7, metadata !22547, metadata !DIExpression()), !dbg !22548
  call void @llvm.dbg.declare(metadata ptr %8, metadata !22549, metadata !DIExpression()), !dbg !22550
  store ptr null, ptr %8, align 8, !dbg !22550
  call void @llvm.dbg.declare(metadata ptr %9, metadata !22551, metadata !DIExpression()), !dbg !22552
  %10 = call ptr @getenv(ptr noundef @.str.4.436) #17, !dbg !22553
  store ptr %10, ptr %7, align 8, !dbg !22554
  %11 = load ptr, ptr %7, align 8, !dbg !22555
  %12 = icmp ne ptr %11, null, !dbg !22555
  br i1 %12, label %14, label %13, !dbg !22557

13:                                               ; preds = %2
  store i32 0, ptr %9, align 4, !dbg !22558
  br label %86, !dbg !22560

14:                                               ; preds = %2
  %15 = call ptr @__errno_location() #21, !dbg !22561
  store i32 0, ptr %15, align 4, !dbg !22562
  %16 = load ptr, ptr %7, align 8, !dbg !22563
  %17 = call i64 @strtoul(ptr noundef %16, ptr noundef %8, i32 noundef 10) #17, !dbg !22564
  store i64 %17, ptr %6, align 8, !dbg !22565
  %18 = call ptr @__errno_location() #21, !dbg !22566
  %19 = load i32, ptr %18, align 4, !dbg !22566
  %20 = icmp sgt i32 %19, 0, !dbg !22568
  br i1 %20, label %21, label %25, !dbg !22569

21:                                               ; preds = %14
  %22 = call ptr @__errno_location() #21, !dbg !22570
  %23 = load i32, ptr %22, align 4, !dbg !22570
  %24 = sub nsw i32 0, %23, !dbg !22572
  store i32 %24, ptr %9, align 4, !dbg !22573
  br label %86, !dbg !22574

25:                                               ; preds = %14
  %26 = load ptr, ptr %8, align 8, !dbg !22575
  %27 = icmp ne ptr %26, null, !dbg !22575
  br i1 %27, label %28, label %40, !dbg !22577

28:                                               ; preds = %25
  %29 = load ptr, ptr %8, align 8, !dbg !22578
  %30 = load ptr, ptr %7, align 8, !dbg !22579
  %31 = icmp eq ptr %29, %30, !dbg !22580
  br i1 %31, label %40, label %32, !dbg !22581

32:                                               ; preds = %28
  %33 = load ptr, ptr %8, align 8, !dbg !22582
  %34 = load i8, ptr %33, align 1, !dbg !22583
  %35 = sext i8 %34 to i32, !dbg !22583
  %36 = icmp ne i32 %35, 0, !dbg !22583
  br i1 %36, label %40, label %37, !dbg !22584

37:                                               ; preds = %32
  %38 = load i64, ptr %6, align 8, !dbg !22585
  %39 = icmp ule i64 %38, 0, !dbg !22586
  br i1 %39, label %40, label %41, !dbg !22587

40:                                               ; preds = %37, %32, %28, %25
  store i32 -22, ptr %9, align 4, !dbg !22588
  br label %86, !dbg !22590

41:                                               ; preds = %37
  %42 = call i32 @getpid() #17, !dbg !22591
  %43 = load i64, ptr %6, align 8, !dbg !22593
  %44 = trunc i64 %43 to i32, !dbg !22594
  %45 = icmp ne i32 %42, %44, !dbg !22595
  br i1 %45, label %46, label %47, !dbg !22596

46:                                               ; preds = %41
  store i32 0, ptr %9, align 4, !dbg !22597
  br label %86, !dbg !22599

47:                                               ; preds = %41
  %48 = call ptr @getenv(ptr noundef @.str.5.437) #17, !dbg !22600
  store ptr %48, ptr %7, align 8, !dbg !22601
  %49 = load ptr, ptr %7, align 8, !dbg !22602
  %50 = icmp ne ptr %49, null, !dbg !22602
  br i1 %50, label %52, label %51, !dbg !22604

51:                                               ; preds = %47
  store i32 -22, ptr %9, align 4, !dbg !22605
  br label %86, !dbg !22607

52:                                               ; preds = %47
  %53 = call ptr @__errno_location() #21, !dbg !22608
  store i32 0, ptr %53, align 4, !dbg !22609
  %54 = load ptr, ptr %7, align 8, !dbg !22610
  %55 = call i64 @strtoull(ptr noundef %54, ptr noundef %8, i32 noundef 10) #17, !dbg !22611
  store i64 %55, ptr %5, align 8, !dbg !22612
  %56 = call ptr @__errno_location() #21, !dbg !22613
  %57 = load i32, ptr %56, align 4, !dbg !22613
  %58 = icmp sgt i32 %57, 0, !dbg !22615
  br i1 %58, label %59, label %63, !dbg !22616

59:                                               ; preds = %52
  %60 = call ptr @__errno_location() #21, !dbg !22617
  %61 = load i32, ptr %60, align 4, !dbg !22617
  %62 = sub nsw i32 0, %61, !dbg !22619
  store i32 %62, ptr %9, align 4, !dbg !22620
  br label %86, !dbg !22621

63:                                               ; preds = %52
  %64 = load ptr, ptr %8, align 8, !dbg !22622
  %65 = icmp ne ptr %64, null, !dbg !22622
  br i1 %65, label %66, label %78, !dbg !22624

66:                                               ; preds = %63
  %67 = load ptr, ptr %8, align 8, !dbg !22625
  %68 = load ptr, ptr %7, align 8, !dbg !22626
  %69 = icmp eq ptr %67, %68, !dbg !22627
  br i1 %69, label %78, label %70, !dbg !22628

70:                                               ; preds = %66
  %71 = load ptr, ptr %8, align 8, !dbg !22629
  %72 = load i8, ptr %71, align 1, !dbg !22630
  %73 = sext i8 %72 to i32, !dbg !22630
  %74 = icmp ne i32 %73, 0, !dbg !22630
  br i1 %74, label %78, label %75, !dbg !22631

75:                                               ; preds = %70
  %76 = load i64, ptr %6, align 8, !dbg !22632
  %77 = icmp ule i64 %76, 0, !dbg !22633
  br i1 %77, label %78, label %79, !dbg !22634

78:                                               ; preds = %75, %70, %66, %63
  store i32 -22, ptr %9, align 4, !dbg !22635
  br label %86, !dbg !22637

79:                                               ; preds = %75
  %80 = load ptr, ptr %4, align 8, !dbg !22638
  %81 = icmp ne ptr %80, null, !dbg !22638
  br i1 %81, label %82, label %85, !dbg !22640

82:                                               ; preds = %79
  %83 = load i64, ptr %5, align 8, !dbg !22641
  %84 = load ptr, ptr %4, align 8, !dbg !22642
  store i64 %83, ptr %84, align 8, !dbg !22643
  br label %85, !dbg !22644

85:                                               ; preds = %82, %79
  store i32 1, ptr %9, align 4, !dbg !22645
  br label %86, !dbg !22646

86:                                               ; preds = %85, %78, %59, %51, %46, %40, %21, %13
  call void @llvm.dbg.label(metadata !22647), !dbg !22648
  %87 = load i32, ptr %3, align 4, !dbg !22649
  %88 = icmp ne i32 %87, 0, !dbg !22649
  br i1 %88, label %89, label %92, !dbg !22651

89:                                               ; preds = %86
  %90 = call i32 @unsetenv(ptr noundef @.str.4.436) #17, !dbg !22652
  %91 = call i32 @unsetenv(ptr noundef @.str.5.437) #17, !dbg !22654
  br label %92, !dbg !22655

92:                                               ; preds = %89, %86
  %93 = load i32, ptr %9, align 4, !dbg !22656
  ret i32 %93, !dbg !22657
}

; Function Attrs: nounwind
declare i64 @strtoull(ptr noundef, ptr noundef, i32 noundef) #2

; Function Attrs: alwaysinline nounwind uwtable
define dso_local ptr @strbuf_new() #11 !dbg !22658 {
  %1 = call ptr @strbuf_new_with_size(i64 noundef 64), !dbg !22661
  ret ptr %1, !dbg !22662
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @strbuf_set_static(ptr noundef %0, ptr noundef %1, i64 noundef %2) #0 !dbg !22663 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i64, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !22664, metadata !DIExpression()), !dbg !22665
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !22666, metadata !DIExpression()), !dbg !22667
  store i64 %2, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !22668, metadata !DIExpression()), !dbg !22669
  %7 = load i64, ptr %6, align 8, !dbg !22670
  %8 = icmp ne i64 %7, 0, !dbg !22670
  br i1 %8, label %12, label %9, !dbg !22672

9:                                                ; preds = %3
  %10 = load ptr, ptr %5, align 8, !dbg !22673
  %11 = call i64 @strlen(ptr noundef %10) #20, !dbg !22674
  store i64 %11, ptr %6, align 8, !dbg !22675
  br label %12, !dbg !22676

12:                                               ; preds = %9, %3
  %13 = load ptr, ptr %4, align 8, !dbg !22677
  %14 = getelementptr inbounds %struct.strbuf_t_, ptr %13, i32 0, i32 2, !dbg !22679
  %15 = load i32, ptr %14, align 8, !dbg !22679
  %16 = and i32 %15, 1, !dbg !22680
  %17 = icmp ne i32 %16, 0, !dbg !22680
  br i1 %17, label %22, label %18, !dbg !22681

18:                                               ; preds = %12
  %19 = load ptr, ptr %4, align 8, !dbg !22682
  %20 = getelementptr inbounds %struct.strbuf_t_, ptr %19, i32 0, i32 0, !dbg !22683
  %21 = load ptr, ptr %20, align 8, !dbg !22684
  call void @free(ptr noundef %21) #17, !dbg !22685
  br label %22, !dbg !22685

22:                                               ; preds = %18, %12
  %23 = load ptr, ptr %5, align 8, !dbg !22686
  %24 = load ptr, ptr %4, align 8, !dbg !22687
  %25 = getelementptr inbounds %struct.strbuf_t_, ptr %24, i32 0, i32 0, !dbg !22688
  store ptr %23, ptr %25, align 8, !dbg !22689
  %26 = load i64, ptr %6, align 8, !dbg !22690
  %27 = load ptr, ptr %4, align 8, !dbg !22691
  %28 = getelementptr inbounds %struct.strbuf_t_, ptr %27, i32 0, i32 1, !dbg !22692
  %29 = getelementptr inbounds %struct.anon.3, ptr %28, i32 0, i32 1, !dbg !22693
  store i64 %26, ptr %29, align 8, !dbg !22694
  %30 = load ptr, ptr %4, align 8, !dbg !22695
  %31 = getelementptr inbounds %struct.strbuf_t_, ptr %30, i32 0, i32 1, !dbg !22696
  %32 = getelementptr inbounds %struct.anon.3, ptr %31, i32 0, i32 0, !dbg !22697
  store i64 %26, ptr %32, align 8, !dbg !22698
  %33 = load ptr, ptr %4, align 8, !dbg !22699
  %34 = getelementptr inbounds %struct.strbuf_t_, ptr %33, i32 0, i32 2, !dbg !22700
  %35 = load i32, ptr %34, align 8, !dbg !22701
  %36 = or i32 %35, 1, !dbg !22701
  store i32 %36, ptr %34, align 8, !dbg !22701
  ret i1 true, !dbg !22702
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local i32 @strbuf_cmp(ptr noundef %0, ptr noundef %1) #11 !dbg !22703 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !22706, metadata !DIExpression()), !dbg !22707
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !22708, metadata !DIExpression()), !dbg !22709
  %7 = load ptr, ptr %4, align 8, !dbg !22710
  %8 = load ptr, ptr %5, align 8, !dbg !22712
  %9 = icmp eq ptr %7, %8, !dbg !22713
  br i1 %9, label %10, label %11, !dbg !22714

10:                                               ; preds = %2
  store i32 0, ptr %3, align 4, !dbg !22715
  br label %55, !dbg !22715

11:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata ptr %6, metadata !22716, metadata !DIExpression()), !dbg !22717
  %12 = load ptr, ptr %4, align 8, !dbg !22718
  %13 = getelementptr inbounds %struct.strbuf_t_, ptr %12, i32 0, i32 0, !dbg !22719
  %14 = load ptr, ptr %13, align 8, !dbg !22720
  %15 = load ptr, ptr %5, align 8, !dbg !22721
  %16 = getelementptr inbounds %struct.strbuf_t_, ptr %15, i32 0, i32 0, !dbg !22722
  %17 = load ptr, ptr %16, align 8, !dbg !22723
  %18 = load ptr, ptr %4, align 8, !dbg !22724
  %19 = getelementptr inbounds %struct.strbuf_t_, ptr %18, i32 0, i32 1, !dbg !22725
  %20 = getelementptr inbounds %struct.anon.3, ptr %19, i32 0, i32 1, !dbg !22726
  %21 = load i64, ptr %20, align 8, !dbg !22726
  %22 = load ptr, ptr %5, align 8, !dbg !22727
  %23 = getelementptr inbounds %struct.strbuf_t_, ptr %22, i32 0, i32 1, !dbg !22728
  %24 = getelementptr inbounds %struct.anon.3, ptr %23, i32 0, i32 1, !dbg !22729
  %25 = load i64, ptr %24, align 8, !dbg !22729
  %26 = icmp ult i64 %21, %25, !dbg !22730
  br i1 %26, label %27, label %32, !dbg !22724

27:                                               ; preds = %11
  %28 = load ptr, ptr %4, align 8, !dbg !22731
  %29 = getelementptr inbounds %struct.strbuf_t_, ptr %28, i32 0, i32 1, !dbg !22732
  %30 = getelementptr inbounds %struct.anon.3, ptr %29, i32 0, i32 1, !dbg !22733
  %31 = load i64, ptr %30, align 8, !dbg !22733
  br label %37, !dbg !22724

32:                                               ; preds = %11
  %33 = load ptr, ptr %5, align 8, !dbg !22734
  %34 = getelementptr inbounds %struct.strbuf_t_, ptr %33, i32 0, i32 1, !dbg !22735
  %35 = getelementptr inbounds %struct.anon.3, ptr %34, i32 0, i32 1, !dbg !22736
  %36 = load i64, ptr %35, align 8, !dbg !22736
  br label %37, !dbg !22724

37:                                               ; preds = %32, %27
  %38 = phi i64 [ %31, %27 ], [ %36, %32 ], !dbg !22724
  %39 = call i32 @memcmp(ptr noundef %14, ptr noundef %17, i64 noundef %38) #20, !dbg !22737
  store i32 %39, ptr %6, align 4, !dbg !22717
  %40 = load i32, ptr %6, align 4, !dbg !22738
  %41 = icmp ne i32 %40, 0, !dbg !22738
  br i1 %41, label %53, label %42, !dbg !22740

42:                                               ; preds = %37
  %43 = load ptr, ptr %4, align 8, !dbg !22741
  %44 = getelementptr inbounds %struct.strbuf_t_, ptr %43, i32 0, i32 1, !dbg !22742
  %45 = getelementptr inbounds %struct.anon.3, ptr %44, i32 0, i32 1, !dbg !22743
  %46 = load i64, ptr %45, align 8, !dbg !22743
  %47 = load ptr, ptr %5, align 8, !dbg !22744
  %48 = getelementptr inbounds %struct.strbuf_t_, ptr %47, i32 0, i32 1, !dbg !22745
  %49 = getelementptr inbounds %struct.anon.3, ptr %48, i32 0, i32 1, !dbg !22746
  %50 = load i64, ptr %49, align 8, !dbg !22746
  %51 = sub i64 %46, %50, !dbg !22747
  %52 = trunc i64 %51 to i32, !dbg !22748
  store i32 %52, ptr %3, align 4, !dbg !22749
  br label %55, !dbg !22749

53:                                               ; preds = %37
  %54 = load i32, ptr %6, align 4, !dbg !22750
  store i32 %54, ptr %3, align 4, !dbg !22751
  br label %55, !dbg !22751

55:                                               ; preds = %53, %42, %10
  %56 = load i32, ptr %3, align 4, !dbg !22752
  ret i32 %56, !dbg !22752
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @strbuf_printf(ptr noundef %0, ptr noundef %1, ...) #0 !dbg !22753 {
  %3 = alloca i1, align 1
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i8, align 1
  %14 = alloca [1 x %struct.__va_list_tag], align 16
  store ptr %0, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !22754, metadata !DIExpression()), !dbg !22755
  store ptr %1, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %12, metadata !22756, metadata !DIExpression()), !dbg !22757
  call void @llvm.dbg.declare(metadata ptr %13, metadata !22758, metadata !DIExpression()), !dbg !22759
  call void @llvm.dbg.declare(metadata ptr %14, metadata !22760, metadata !DIExpression()), !dbg !22761
  %15 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %14, i64 0, i64 0, !dbg !22762
  call void @llvm.va_start(ptr %15), !dbg !22762
  %16 = load ptr, ptr %11, align 8, !dbg !22763
  %17 = load ptr, ptr %12, align 8, !dbg !22764
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %14, i64 0, i64 0, !dbg !22765
  store ptr %16, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !21734, metadata !DIExpression()), !dbg !22766
  store ptr @strbuf_set, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !21742, metadata !DIExpression()), !dbg !22768
  store ptr %17, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !21744, metadata !DIExpression()), !dbg !22769
  store ptr %18, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !21746, metadata !DIExpression()), !dbg !22770
  call void @llvm.dbg.declare(metadata ptr %8, metadata !21748, metadata !DIExpression()), !dbg !22771
  call void @llvm.dbg.declare(metadata ptr %9, metadata !21750, metadata !DIExpression()), !dbg !22772
  %19 = load ptr, ptr %6, align 8, !dbg !22773
  %20 = load ptr, ptr %7, align 8, !dbg !22773
  %21 = call i32 @vasprintf(ptr noundef %8, ptr noundef %19, ptr noundef %20) #17, !dbg !22773
  store i32 %21, ptr %9, align 4, !dbg !22773
  %22 = icmp slt i32 %21, 0, !dbg !22773
  %23 = zext i1 %22 to i32, !dbg !22773
  %24 = sext i32 %23 to i64, !dbg !22773
  br i1 %22, label %25, label %26, !dbg !22774

25:                                               ; preds = %2
  store i1 false, ptr %3, align 1, !dbg !22775
  br label %37, !dbg !22775

26:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata ptr %10, metadata !21756, metadata !DIExpression()), !dbg !22776
  %27 = load ptr, ptr %5, align 8, !dbg !22777
  %28 = load ptr, ptr %4, align 8, !dbg !22778
  %29 = load ptr, ptr %8, align 8, !dbg !22779
  %30 = load i32, ptr %9, align 4, !dbg !22780
  %31 = sext i32 %30 to i64, !dbg !22781
  %32 = call zeroext i1 %27(ptr noundef %28, ptr noundef %29, i64 noundef %31) #17, !dbg !22777
  %33 = zext i1 %32 to i8, !dbg !22776
  store i8 %33, ptr %10, align 1, !dbg !22776
  %34 = load ptr, ptr %8, align 8, !dbg !22782
  call void @free(ptr noundef %34) #17, !dbg !22783
  %35 = load i8, ptr %10, align 1, !dbg !22784
  %36 = trunc i8 %35 to i1, !dbg !22784
  store i1 %36, ptr %3, align 1, !dbg !22785
  br label %37, !dbg !22785

37:                                               ; preds = %26, %25
  %38 = load i1, ptr %3, align 1, !dbg !22786
  %39 = zext i1 %38 to i8, !dbg !22787
  store i8 %39, ptr %13, align 1, !dbg !22787
  %40 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %14, i64 0, i64 0, !dbg !22788
  call void @llvm.va_end(ptr %40), !dbg !22788
  %41 = load i8, ptr %13, align 1, !dbg !22789
  %42 = trunc i8 %41 to i1, !dbg !22789
  ret i1 %42, !dbg !22790
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @strbuf_shrink_to(ptr noundef %0, i64 noundef %1) #0 !dbg !22791 {
  %3 = alloca i1, align 1
  %4 = alloca ptr, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !22792, metadata !DIExpression()), !dbg !22793
  store i64 %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !22794, metadata !DIExpression()), !dbg !22795
  %8 = load ptr, ptr %4, align 8, !dbg !22796
  %9 = getelementptr inbounds %struct.strbuf_t_, ptr %8, i32 0, i32 1, !dbg !22798
  %10 = getelementptr inbounds %struct.anon.3, ptr %9, i32 0, i32 0, !dbg !22799
  %11 = load i64, ptr %10, align 8, !dbg !22799
  %12 = load i64, ptr %5, align 8, !dbg !22800
  %13 = icmp ule i64 %11, %12, !dbg !22801
  br i1 %13, label %14, label %15, !dbg !22802

14:                                               ; preds = %2
  store i1 true, ptr %3, align 1, !dbg !22803
  br label %68, !dbg !22803

15:                                               ; preds = %2
  %16 = load ptr, ptr %4, align 8, !dbg !22804
  %17 = getelementptr inbounds %struct.strbuf_t_, ptr %16, i32 0, i32 2, !dbg !22806
  %18 = load i32, ptr %17, align 8, !dbg !22806
  %19 = and i32 %18, 1, !dbg !22807
  %20 = icmp ne i32 %19, 0, !dbg !22807
  br i1 %20, label %21, label %22, !dbg !22808

21:                                               ; preds = %15
  store i1 true, ptr %3, align 1, !dbg !22809
  br label %68, !dbg !22809

22:                                               ; preds = %15
  call void @llvm.dbg.declare(metadata ptr %6, metadata !22810, metadata !DIExpression()), !dbg !22811
  %23 = load i64, ptr %5, align 8, !dbg !22812
  %24 = call i64 @find_next_power_of_two(i64 noundef %23), !dbg !22813
  store i64 %24, ptr %6, align 8, !dbg !22811
  call void @llvm.dbg.declare(metadata ptr %7, metadata !22814, metadata !DIExpression()), !dbg !22815
  %25 = load ptr, ptr %4, align 8, !dbg !22816
  %26 = getelementptr inbounds %struct.strbuf_t_, ptr %25, i32 0, i32 0, !dbg !22817
  %27 = load ptr, ptr %26, align 8, !dbg !22818
  %28 = load i64, ptr %6, align 8, !dbg !22819
  %29 = add i64 %28, 1, !dbg !22820
  %30 = call ptr @realloc(ptr noundef %27, i64 noundef %29) #22, !dbg !22821
  store ptr %30, ptr %7, align 8, !dbg !22815
  %31 = load ptr, ptr %7, align 8, !dbg !22822
  %32 = icmp ne ptr %31, null, !dbg !22822
  %33 = xor i1 %32, true, !dbg !22822
  %34 = zext i1 %33 to i32, !dbg !22822
  %35 = sext i32 %34 to i64, !dbg !22822
  %36 = icmp ne i64 %35, 0, !dbg !22822
  br i1 %36, label %37, label %38, !dbg !22824

37:                                               ; preds = %22
  store i1 false, ptr %3, align 1, !dbg !22825
  br label %68, !dbg !22825

38:                                               ; preds = %22
  %39 = load ptr, ptr %7, align 8, !dbg !22826
  %40 = load ptr, ptr %4, align 8, !dbg !22827
  %41 = getelementptr inbounds %struct.strbuf_t_, ptr %40, i32 0, i32 0, !dbg !22828
  store ptr %39, ptr %41, align 8, !dbg !22829
  %42 = load i64, ptr %6, align 8, !dbg !22830
  %43 = load ptr, ptr %4, align 8, !dbg !22831
  %44 = getelementptr inbounds %struct.strbuf_t_, ptr %43, i32 0, i32 1, !dbg !22832
  %45 = getelementptr inbounds %struct.anon.3, ptr %44, i32 0, i32 0, !dbg !22833
  store i64 %42, ptr %45, align 8, !dbg !22834
  %46 = load ptr, ptr %4, align 8, !dbg !22835
  %47 = getelementptr inbounds %struct.strbuf_t_, ptr %46, i32 0, i32 1, !dbg !22837
  %48 = getelementptr inbounds %struct.anon.3, ptr %47, i32 0, i32 1, !dbg !22838
  %49 = load i64, ptr %48, align 8, !dbg !22838
  %50 = load i64, ptr %6, align 8, !dbg !22839
  %51 = icmp ugt i64 %49, %50, !dbg !22840
  br i1 %51, label %52, label %67, !dbg !22841

52:                                               ; preds = %38
  %53 = load i64, ptr %6, align 8, !dbg !22842
  %54 = sub i64 %53, 1, !dbg !22844
  %55 = load ptr, ptr %4, align 8, !dbg !22845
  %56 = getelementptr inbounds %struct.strbuf_t_, ptr %55, i32 0, i32 1, !dbg !22846
  %57 = getelementptr inbounds %struct.anon.3, ptr %56, i32 0, i32 1, !dbg !22847
  store i64 %54, ptr %57, align 8, !dbg !22848
  %58 = load ptr, ptr %4, align 8, !dbg !22849
  %59 = getelementptr inbounds %struct.strbuf_t_, ptr %58, i32 0, i32 0, !dbg !22850
  %60 = load ptr, ptr %59, align 8, !dbg !22851
  %61 = load ptr, ptr %4, align 8, !dbg !22852
  %62 = getelementptr inbounds %struct.strbuf_t_, ptr %61, i32 0, i32 1, !dbg !22853
  %63 = getelementptr inbounds %struct.anon.3, ptr %62, i32 0, i32 1, !dbg !22854
  %64 = load i64, ptr %63, align 8, !dbg !22854
  %65 = add i64 %64, 1, !dbg !22855
  %66 = getelementptr inbounds i8, ptr %60, i64 %65, !dbg !22849
  store i8 0, ptr %66, align 1, !dbg !22856
  br label %67, !dbg !22857

67:                                               ; preds = %52, %38
  store i1 true, ptr %3, align 1, !dbg !22858
  br label %68, !dbg !22858

68:                                               ; preds = %67, %37, %21, %14
  %69 = load i1, ptr %3, align 1, !dbg !22859
  ret i1 %69, !dbg !22859
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local zeroext i1 @strbuf_shrink_to_default(ptr noundef %0) #11 !dbg !22860 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !22861, metadata !DIExpression()), !dbg !22862
  %3 = load ptr, ptr %2, align 8, !dbg !22863
  %4 = call zeroext i1 @strbuf_shrink_to(ptr noundef %3, i64 noundef 64), !dbg !22864
  ret i1 %4, !dbg !22865
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local zeroext i1 @strbuf_reset(ptr noundef %0) #11 !dbg !22866 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !22867, metadata !DIExpression()), !dbg !22868
  %4 = load ptr, ptr %3, align 8, !dbg !22869
  store ptr %4, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !22861, metadata !DIExpression()), !dbg !22870
  %5 = load ptr, ptr %2, align 8, !dbg !22872
  %6 = call zeroext i1 @strbuf_shrink_to(ptr noundef %5, i64 noundef 64), !dbg !22873
  %7 = load ptr, ptr %3, align 8, !dbg !22874
  %8 = getelementptr inbounds %struct.strbuf_t_, ptr %7, i32 0, i32 1, !dbg !22875
  %9 = getelementptr inbounds %struct.anon.3, ptr %8, i32 0, i32 1, !dbg !22876
  store i64 0, ptr %9, align 8, !dbg !22877
  ret i1 false, !dbg !22878
}

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #5 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { nounwind allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nounwind allocsize(0,1) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nounwind willreturn memory(read) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nounwind willreturn memory(none) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { nounwind allocsize(1) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { alwaysinline nounwind uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { noreturn nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { noinline noreturn nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { nocallback nofree nosync nounwind willreturn }
attributes #15 = { alwaysinline nounwind willreturn memory(read) uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { noinline nounwind optnone willreturn memory(read) uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #17 = { nounwind }
attributes #18 = { nounwind allocsize(0) }
attributes #19 = { nounwind allocsize(0,1) }
attributes #20 = { nounwind willreturn memory(read) }
attributes #21 = { nounwind willreturn memory(none) }
attributes #22 = { nounwind allocsize(1) }
attributes #23 = { noreturn nounwind }
attributes #24 = { noreturn }

!llvm.dbg.cu = !{!226, !437, !452, !481, !3266, !3279, !3297, !3302, !643, !3306, !856, !963, !1560, !1715, !1855, !2308, !3320, !2632, !2705, !2905, !3168, !3324, !3231, !3328, !3331, !3335, !3344}
!llvm.ident = !{!3356, !3356, !3356, !3356, !3356, !3356, !3356, !3356, !3356, !3356, !3356, !3356, !3356, !3356, !3356, !3356, !3356, !3356, !3356, !3356, !3356, !3356, !3356, !3356, !3356, !3356, !3356}
!llvm.module.flags = !{!3357, !3358, !3359, !3360, !3361, !3362, !3363}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "gif_beacon_data", scope: !2, file: !3, line: 43, type: !430, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "gif_beacon", scope: !3, file: !3, line: 35, type: !4, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !226, retainedNodes: !286)
!3 = !DIFile(filename: "lwan/main.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "c78d74bc8fb67729c69c747f37941a1b")
!4 = !DISubroutineType(types: !5)
!5 = !{!6, !27, !225, !111}
!6 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_http_status_t", file: !7, line: 131, baseType: !8)
!7 = !DIFile(filename: "common/lwan.h", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "56f65bbbfce1c5452d6905964ca2b84f")
!8 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7, line: 114, baseType: !9, size: 32, elements: !10)
!9 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!10 = !{!11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26}
!11 = !DIEnumerator(name: "HTTP_OK", value: 200)
!12 = !DIEnumerator(name: "HTTP_PARTIAL_CONTENT", value: 206)
!13 = !DIEnumerator(name: "HTTP_MOVED_PERMANENTLY", value: 301)
!14 = !DIEnumerator(name: "HTTP_NOT_MODIFIED", value: 304)
!15 = !DIEnumerator(name: "HTTP_BAD_REQUEST", value: 400)
!16 = !DIEnumerator(name: "HTTP_NOT_AUTHORIZED", value: 401)
!17 = !DIEnumerator(name: "HTTP_FORBIDDEN", value: 403)
!18 = !DIEnumerator(name: "HTTP_NOT_FOUND", value: 404)
!19 = !DIEnumerator(name: "HTTP_NOT_ALLOWED", value: 405)
!20 = !DIEnumerator(name: "HTTP_TIMEOUT", value: 408)
!21 = !DIEnumerator(name: "HTTP_TOO_LARGE", value: 413)
!22 = !DIEnumerator(name: "HTTP_RANGE_UNSATISFIABLE", value: 416)
!23 = !DIEnumerator(name: "HTTP_I_AM_A_TEAPOT", value: 418)
!24 = !DIEnumerator(name: "HTTP_INTERNAL_ERROR", value: 500)
!25 = !DIEnumerator(name: "HTTP_NOT_IMPLEMENTED", value: 501)
!26 = !DIEnumerator(name: "HTTP_UNAVAILABLE", value: 503)
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !28, size: 64)
!28 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_request_t", file: !7, line: 106, baseType: !29)
!29 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_request_t_", file: !7, line: 206, size: 1280, elements: !30)
!30 = !{!31, !46, !47, !58, !59, !166, !177, !178, !190}
!31 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !29, file: !7, line: 207, baseType: !32, size: 32)
!32 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_request_flags_t", file: !7, line: 156, baseType: !33)
!33 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7, line: 145, baseType: !34, size: 32, elements: !35)
!34 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!35 = !{!36, !37, !38, !39, !40, !41, !42, !43, !44, !45}
!36 = !DIEnumerator(name: "REQUEST_ALL_FLAGS", value: -1)
!37 = !DIEnumerator(name: "REQUEST_METHOD_GET", value: 1)
!38 = !DIEnumerator(name: "REQUEST_METHOD_HEAD", value: 2)
!39 = !DIEnumerator(name: "REQUEST_METHOD_POST", value: 4)
!40 = !DIEnumerator(name: "REQUEST_ACCEPT_DEFLATE", value: 8)
!41 = !DIEnumerator(name: "REQUEST_ACCEPT_GZIP", value: 16)
!42 = !DIEnumerator(name: "REQUEST_IS_HTTP_1_0", value: 32)
!43 = !DIEnumerator(name: "RESPONSE_SENT_HEADERS", value: 64)
!44 = !DIEnumerator(name: "RESPONSE_CHUNKED_ENCODING", value: 128)
!45 = !DIEnumerator(name: "RESPONSE_NO_CONTENT_LENGTH", value: 256)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !29, file: !7, line: 208, baseType: !34, size: 32, offset: 32)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "url", scope: !29, file: !7, line: 209, baseType: !48, size: 128, offset: 64)
!48 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_value_t", file: !7, line: 110, baseType: !49)
!49 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_value_t_", file: !7, line: 191, size: 128, elements: !50)
!50 = !{!51, !54}
!51 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !49, file: !7, line: 192, baseType: !52, size: 64)
!52 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 64)
!53 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !49, file: !7, line: 193, baseType: !55, size: 64, offset: 64)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !56, line: 46, baseType: !57)
!56 = !DIFile(filename: "SVF/llvm-16.0.0.obj/lib/clang/16/include/stddef.h", directory: "/home/raj", checksumkind: CSK_MD5, checksum: "f95079da609b0e8f201cb8136304bf3b")
!57 = !DIBasicType(name: "unsigned long", size: 64, encoding: DW_ATE_unsigned)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "original_url", scope: !29, file: !7, line: 210, baseType: !48, size: 128, offset: 192)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "conn", scope: !29, file: !7, line: 211, baseType: !60, size: 64, offset: 320)
!60 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 64)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_connection_t", file: !7, line: 112, baseType: !62)
!62 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_connection_t_", file: !7, line: 196, size: 256, elements: !63)
!63 = !{!64, !74, !75, !80, !164, !165}
!64 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !62, file: !7, line: 199, baseType: !65, size: 32)
!65 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_connection_flags_t", file: !7, line: 165, baseType: !66)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7, line: 158, baseType: !34, size: 32, elements: !67)
!67 = !{!68, !69, !70, !71, !72, !73}
!68 = !DIEnumerator(name: "CONN_MASK", value: -1)
!69 = !DIEnumerator(name: "CONN_KEEP_ALIVE", value: 1)
!70 = !DIEnumerator(name: "CONN_IS_ALIVE", value: 2)
!71 = !DIEnumerator(name: "CONN_SHOULD_RESUME_CORO", value: 4)
!72 = !DIEnumerator(name: "CONN_WRITE_EVENTS", value: 8)
!73 = !DIEnumerator(name: "CONN_MUST_READ", value: 16)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "time_to_die", scope: !62, file: !7, line: 200, baseType: !9, size: 32, offset: 32)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "coro", scope: !62, file: !7, line: 201, baseType: !76, size: 64, offset: 64)
!76 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !77, size: 64)
!77 = !DIDerivedType(tag: DW_TAG_typedef, name: "coro_t", file: !78, line: 34, baseType: !79)
!78 = !DIFile(filename: "common/lwan-coro.h", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "34b7f40341e2e8a3481f0400ece0424e")
!79 = !DICompositeType(tag: DW_TAG_structure_type, name: "coro_t_", file: !78, line: 34, flags: DIFlagFwdDecl)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !62, file: !7, line: 202, baseType: !81, size: 64, offset: 128)
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64)
!82 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_thread_t", file: !7, line: 108, baseType: !83)
!83 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_thread_t_", file: !7, line: 253, size: 832, elements: !84)
!84 = !{!85, !142, !156, !157, !161}
!85 = !DIDerivedType(tag: DW_TAG_member, name: "lwan", scope: !83, file: !7, line: 254, baseType: !86, size: 64)
!86 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !87, size: 64)
!87 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_t", file: !7, line: 103, baseType: !88)
!88 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_t_", file: !7, line: 275, size: 640, elements: !89)
!89 = !{!90, !118, !119, !126, !130, !141}
!90 = !DIDerivedType(tag: DW_TAG_member, name: "url_map_trie", scope: !88, file: !7, line: 276, baseType: !91, size: 128)
!91 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_t", file: !92, line: 25, baseType: !93)
!92 = !DIFile(filename: "common/lwan-trie.h", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "ee6a35f9d72fff2f5550c3424937f5b6")
!93 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_t_", file: !92, line: 41, size: 128, elements: !94)
!94 = !{!95, !114}
!95 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !93, file: !92, line: 42, baseType: !96, size: 64)
!96 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !97, size: 64)
!97 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_node_t", file: !92, line: 26, baseType: !98)
!98 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_node_t_", file: !92, line: 29, size: 640, elements: !99)
!99 = !{!100, !104, !113}
!100 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !98, file: !92, line: 30, baseType: !101, size: 512)
!101 = !DICompositeType(tag: DW_TAG_array_type, baseType: !96, size: 512, elements: !102)
!102 = !{!103}
!103 = !DISubrange(count: 8)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !98, file: !92, line: 31, baseType: !105, size: 64, offset: 512)
!105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 64)
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_leaf_t", file: !92, line: 27, baseType: !107)
!107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_leaf_t_", file: !92, line: 35, size: 192, elements: !108)
!108 = !{!109, !110, !112}
!109 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !107, file: !92, line: 36, baseType: !52, size: 64)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !107, file: !92, line: 37, baseType: !111, size: 64, offset: 64)
!111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !107, file: !92, line: 38, baseType: !105, size: 64, offset: 128)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !98, file: !92, line: 32, baseType: !34, size: 32, offset: 576)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !93, file: !92, line: 43, baseType: !115, size: 64, offset: 64)
!115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 64)
!116 = !DISubroutineType(types: !117)
!117 = !{null, !111}
!118 = !DIDerivedType(tag: DW_TAG_member, name: "conns", scope: !88, file: !7, line: 277, baseType: !60, size: 64, offset: 128)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !88, file: !7, line: 283, baseType: !120, size: 128, offset: 192)
!120 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !88, file: !7, line: 279, size: 128, elements: !121)
!121 = !{!122, !123, !124}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !120, file: !7, line: 280, baseType: !81, size: 64)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "max_fd", scope: !120, file: !7, line: 281, baseType: !9, size: 32, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !120, file: !7, line: 282, baseType: !125, size: 16, offset: 96)
!125 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "module_registry", scope: !88, file: !7, line: 285, baseType: !127, size: 64, offset: 320)
!127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 64)
!128 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash", file: !129, line: 6, flags: DIFlagFwdDecl)
!129 = !DIFile(filename: "common/hash.h", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "8a7f0d7c578de44c7172c81fd9e8cd22")
!130 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !88, file: !7, line: 286, baseType: !131, size: 192, offset: 384)
!131 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_config_t", file: !7, line: 111, baseType: !132)
!132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_config_t_", file: !7, line: 266, size: 192, elements: !133)
!133 = !{!134, !135, !136, !138, !139, !140}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !132, file: !7, line: 267, baseType: !52, size: 64)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive_timeout", scope: !132, file: !7, line: 268, baseType: !125, size: 16, offset: 64)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "quiet", scope: !132, file: !7, line: 269, baseType: !137, size: 8, offset: 80)
!137 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "reuse_port", scope: !132, file: !7, line: 270, baseType: !137, size: 8, offset: 88)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !132, file: !7, line: 271, baseType: !9, size: 32, offset: 96)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "n_threads", scope: !132, file: !7, line: 272, baseType: !125, size: 16, offset: 128)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "main_socket", scope: !88, file: !7, line: 287, baseType: !34, size: 32, offset: 576)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !83, file: !7, line: 259, baseType: !143, size: 576, offset: 64)
!143 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !83, file: !7, line: 255, size: 576, elements: !144)
!144 = !{!145, !149, !150}
!145 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !143, file: !7, line: 256, baseType: !146, size: 240)
!146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 240, elements: !147)
!147 = !{!148}
!148 = !DISubrange(count: 30)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !143, file: !7, line: 257, baseType: !146, size: 240, offset: 240)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !143, file: !7, line: 258, baseType: !151, size: 64, offset: 512)
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !152, line: 10, baseType: !153)
!152 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "", checksumkind: CSK_MD5, checksum: "5c299a4954617c88bb03645c7864e1b1")
!153 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !154, line: 160, baseType: !155)
!154 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "", checksumkind: CSK_MD5, checksum: "d108b5f93a74c50510d7d9bc0ab36df9")
!155 = !DIBasicType(name: "long", size: 64, encoding: DW_ATE_signed)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_fd", scope: !83, file: !7, line: 261, baseType: !34, size: 32, offset: 640)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_fd", scope: !83, file: !7, line: 262, baseType: !158, size: 64, offset: 672)
!158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 64, elements: !159)
!159 = !{!160}
!160 = !DISubrange(count: 2)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !83, file: !7, line: 263, baseType: !162, size: 64, offset: 768)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_t", file: !163, line: 27, baseType: !57)
!163 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h", directory: "", checksumkind: CSK_MD5, checksum: "735e3bf264ff9d8f5d95898b1692fbdb")
!164 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !62, file: !7, line: 203, baseType: !34, size: 32, offset: 192)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !62, file: !7, line: 203, baseType: !34, size: 32, offset: 224)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "query_params", scope: !29, file: !7, line: 216, baseType: !167, size: 128, offset: 384)
!167 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !29, file: !7, line: 213, size: 128, elements: !168)
!168 = !{!169, !176}
!169 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !167, file: !7, line: 214, baseType: !170, size: 64)
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 64)
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_key_value_t", file: !7, line: 105, baseType: !172)
!172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_key_value_t_", file: !7, line: 173, size: 128, elements: !173)
!173 = !{!174, !175}
!174 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !172, file: !7, line: 174, baseType: !52, size: 64)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !172, file: !7, line: 175, baseType: !52, size: 64, offset: 64)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !167, file: !7, line: 215, baseType: !55, size: 64, offset: 64)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "post_data", scope: !29, file: !7, line: 216, baseType: !167, size: 128, offset: 512)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !29, file: !7, line: 223, baseType: !179, size: 192, offset: 640)
!179 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !29, file: !7, line: 217, size: 192, elements: !180)
!180 = !{!181, !182}
!181 = !DIDerivedType(tag: DW_TAG_member, name: "if_modified_since", scope: !179, file: !7, line: 218, baseType: !151, size: 64)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !179, file: !7, line: 222, baseType: !183, size: 128, offset: 64)
!183 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !179, file: !7, line: 219, size: 128, elements: !184)
!184 = !{!185, !189}
!185 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !183, file: !7, line: 220, baseType: !186, size: 64)
!186 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !187, line: 85, baseType: !188)
!187 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "", checksumkind: CSK_MD5, checksum: "e62424071ad3f1b4d088c139fd9ccfd1")
!188 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !154, line: 152, baseType: !155)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !183, file: !7, line: 221, baseType: !186, size: 64, offset: 64)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !29, file: !7, line: 224, baseType: !191, size: 448, offset: 832)
!191 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_response_t", file: !7, line: 107, baseType: !192)
!192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_response_t_", file: !7, line: 178, size: 448, elements: !193)
!193 = !{!194, !213, !214, !215, !216}
!194 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !192, file: !7, line: 179, baseType: !195, size: 64)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "strbuf_t", file: !197, line: 25, baseType: !198)
!197 = !DIFile(filename: "common/strbuf.h", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "1033ae3716fb79c0aa99479d5ab6b6cd")
!198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "strbuf_t_", file: !197, line: 27, size: 256, elements: !199)
!199 = !{!200, !207, !212}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !198, file: !197, line: 31, baseType: !201, size: 64)
!201 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !198, file: !197, line: 28, size: 64, elements: !202)
!202 = !{!203, !204}
!203 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !201, file: !197, line: 29, baseType: !52, size: 64)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "static_buffer", scope: !201, file: !197, line: 30, baseType: !205, size: 64)
!205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 64)
!206 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !53)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !198, file: !197, line: 34, baseType: !208, size: 128, offset: 64)
!208 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !198, file: !197, line: 32, size: 128, elements: !209)
!209 = !{!210, !211}
!210 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !208, file: !197, line: 33, baseType: !55, size: 64)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !208, file: !197, line: 33, baseType: !55, size: 64, offset: 64)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !198, file: !197, line: 35, baseType: !9, size: 32, offset: 192)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !192, file: !7, line: 180, baseType: !205, size: 64, offset: 64)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "content_length", scope: !192, file: !7, line: 181, baseType: !55, size: 64, offset: 128)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "headers", scope: !192, file: !7, line: 182, baseType: !170, size: 64, offset: 192)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !192, file: !7, line: 188, baseType: !217, size: 192, offset: 256)
!217 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !192, file: !7, line: 184, size: 192, elements: !218)
!218 = !{!219, !223, !224}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !217, file: !7, line: 185, baseType: !220, size: 64)
!220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64)
!221 = !DISubroutineType(types: !222)
!222 = !{!6, !27, !111}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !217, file: !7, line: 186, baseType: !111, size: 64, offset: 64)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !217, file: !7, line: 187, baseType: !111, size: 64, offset: 128)
!225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64)
!226 = distinct !DICompileUnit(language: DW_LANG_C11, file: !227, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !228, retainedTypes: !244, globals: !245, splitDebugInlining: false, nameTableKind: None)
!227 = !DIFile(filename: "/home/raj/lwan/lwan/main.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "c78d74bc8fb67729c69c747f37941a1b")
!228 = !{!8, !33, !66, !229, !234}
!229 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "args", file: !3, line: 28, baseType: !9, size: 32, elements: !230)
!230 = !{!231, !232, !233}
!231 = !DIEnumerator(name: "ARGS_FAILED", value: 0)
!232 = !DIEnumerator(name: "ARGS_USE_CONFIG", value: 1)
!233 = !DIEnumerator(name: "ARGS_SERVE_FILES", value: 2)
!234 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7, line: 133, baseType: !9, size: 32, elements: !235)
!235 = !{!236, !237, !238, !239, !240, !241, !242, !243}
!236 = !DIEnumerator(name: "HANDLER_PARSE_QUERY_STRING", value: 1)
!237 = !DIEnumerator(name: "HANDLER_PARSE_IF_MODIFIED_SINCE", value: 2)
!238 = !DIEnumerator(name: "HANDLER_PARSE_RANGE", value: 4)
!239 = !DIEnumerator(name: "HANDLER_PARSE_ACCEPT_ENCODING", value: 8)
!240 = !DIEnumerator(name: "HANDLER_PARSE_POST_DATA", value: 16)
!241 = !DIEnumerator(name: "HANDLER_MUST_AUTHORIZE", value: 32)
!242 = !DIEnumerator(name: "HANDLER_REMOVE_LEADING_SLASH", value: 64)
!243 = !DIEnumerator(name: "HANDLER_PARSE_MASK", value: 31)
!244 = !{!52}
!245 = !{!0, !246, !251, !256, !261, !266, !271, !273, !276, !278, !283, !288, !293, !295, !300, !302, !307, !312, !314, !319, !321, !326, !331, !334, !339, !342, !344, !346, !348, !367, !372, !377, !382, !384, !389, !394, !396, !401, !406, !411, !413, !415, !420, !425}
!246 = !DIGlobalVariableExpression(var: !247, expr: !DIExpression())
!247 = distinct !DIGlobalVariable(scope: null, file: !3, line: 50, type: !248, isLocal: true, isDefinition: true)
!248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 80, elements: !249)
!249 = !{!250}
!250 = !DISubrange(count: 10)
!251 = !DIGlobalVariableExpression(var: !252, expr: !DIExpression())
!252 = distinct !DIGlobalVariable(scope: null, file: !3, line: 63, type: !253, isLocal: true, isDefinition: true)
!253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 88, elements: !254)
!254 = !{!255}
!255 = !DISubrange(count: 11)
!256 = !DIGlobalVariableExpression(var: !257, expr: !DIExpression())
!257 = distinct !DIGlobalVariable(scope: null, file: !3, line: 65, type: !258, isLocal: true, isDefinition: true)
!258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 312, elements: !259)
!259 = !{!260}
!260 = !DISubrange(count: 39)
!261 = !DIGlobalVariableExpression(var: !262, expr: !DIExpression())
!262 = distinct !DIGlobalVariable(scope: null, file: !3, line: 69, type: !263, isLocal: true, isDefinition: true)
!263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 160, elements: !264)
!264 = !{!265}
!265 = !DISubrange(count: 20)
!266 = !DIGlobalVariableExpression(var: !267, expr: !DIExpression())
!267 = distinct !DIGlobalVariable(scope: null, file: !3, line: 73, type: !268, isLocal: true, isDefinition: true)
!268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 96, elements: !269)
!269 = !{!270}
!270 = !DISubrange(count: 12)
!271 = !DIGlobalVariableExpression(var: !272, expr: !DIExpression())
!272 = distinct !DIGlobalVariable(scope: null, file: !3, line: 87, type: !263, isLocal: true, isDefinition: true)
!273 = !DIGlobalVariableExpression(var: !274, expr: !DIExpression())
!274 = distinct !DIGlobalVariable(scope: null, file: !3, line: 88, type: !275, isLocal: true, isDefinition: true)
!275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 64, elements: !102)
!276 = !DIGlobalVariableExpression(var: !277, expr: !DIExpression())
!277 = distinct !DIGlobalVariable(scope: null, file: !3, line: 100, type: !258, isLocal: true, isDefinition: true)
!278 = !DIGlobalVariableExpression(var: !279, expr: !DIExpression())
!279 = distinct !DIGlobalVariable(scope: null, file: !3, line: 100, type: !280, isLocal: true, isDefinition: true)
!280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 24, elements: !281)
!281 = !{!282}
!282 = !DISubrange(count: 3)
!283 = !DIGlobalVariableExpression(var: !284, expr: !DIExpression())
!284 = distinct !DIGlobalVariable(name: "headers", scope: !285, file: !3, line: 99, type: !287, isLocal: true, isDefinition: true)
!285 = distinct !DISubprogram(name: "hello_world", scope: !3, file: !3, line: 95, type: !4, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !226, retainedNodes: !286)
!286 = !{}
!287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !171, size: 256, elements: !159)
!288 = !DIGlobalVariableExpression(var: !289, expr: !DIExpression())
!289 = distinct !DIGlobalVariable(scope: null, file: !3, line: 106, type: !290, isLocal: true, isDefinition: true)
!290 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 40, elements: !291)
!291 = !{!292}
!292 = !DISubrange(count: 5)
!293 = !DIGlobalVariableExpression(var: !294, expr: !DIExpression())
!294 = distinct !DIGlobalVariable(scope: null, file: !3, line: 108, type: !253, isLocal: true, isDefinition: true)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(scope: null, file: !3, line: 110, type: !297, isLocal: true, isDefinition: true)
!297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 112, elements: !298)
!298 = !{!299}
!299 = !DISubrange(count: 14)
!300 = !DIGlobalVariableExpression(var: !301, expr: !DIExpression())
!301 = distinct !DIGlobalVariable(scope: null, file: !3, line: 112, type: !248, isLocal: true, isDefinition: true)
!302 = !DIGlobalVariableExpression(var: !303, expr: !DIExpression())
!303 = distinct !DIGlobalVariable(scope: null, file: !3, line: 116, type: !304, isLocal: true, isDefinition: true)
!304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 208, elements: !305)
!305 = !{!306}
!306 = !DISubrange(count: 26)
!307 = !DIGlobalVariableExpression(var: !308, expr: !DIExpression())
!308 = distinct !DIGlobalVariable(scope: null, file: !3, line: 117, type: !309, isLocal: true, isDefinition: true)
!309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 200, elements: !310)
!310 = !{!311}
!311 = !DISubrange(count: 25)
!312 = !DIGlobalVariableExpression(var: !313, expr: !DIExpression())
!313 = distinct !DIGlobalVariable(scope: null, file: !3, line: 122, type: !304, isLocal: true, isDefinition: true)
!314 = !DIGlobalVariableExpression(var: !315, expr: !DIExpression())
!315 = distinct !DIGlobalVariable(scope: null, file: !3, line: 127, type: !316, isLocal: true, isDefinition: true)
!316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 104, elements: !317)
!317 = !{!318}
!318 = !DISubrange(count: 13)
!319 = !DIGlobalVariableExpression(var: !320, expr: !DIExpression())
!320 = distinct !DIGlobalVariable(scope: null, file: !3, line: 128, type: !268, isLocal: true, isDefinition: true)
!321 = !DIGlobalVariableExpression(var: !322, expr: !DIExpression())
!322 = distinct !DIGlobalVariable(scope: null, file: !3, line: 199, type: !323, isLocal: true, isDefinition: true)
!323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 56, elements: !324)
!324 = !{!325}
!325 = !DISubrange(count: 7)
!326 = !DIGlobalVariableExpression(var: !327, expr: !DIExpression())
!327 = distinct !DIGlobalVariable(scope: null, file: !3, line: 203, type: !328, isLocal: true, isDefinition: true)
!328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 216, elements: !329)
!329 = !{!330}
!330 = !DISubrange(count: 27)
!331 = !DIGlobalVariableExpression(var: !332, expr: !DIExpression())
!332 = distinct !DIGlobalVariable(scope: null, file: !3, line: 203, type: !333, isLocal: true, isDefinition: true)
!333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 40, elements: !291)
!334 = !DIGlobalVariableExpression(var: !335, expr: !DIExpression())
!335 = distinct !DIGlobalVariable(scope: null, file: !3, line: 203, type: !336, isLocal: true, isDefinition: true)
!336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 176, elements: !337)
!337 = !{!338}
!338 = !DISubrange(count: 22)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(scope: null, file: !3, line: 207, type: !341, isLocal: true, isDefinition: true)
!341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 16, elements: !159)
!342 = !DIGlobalVariableExpression(var: !343, expr: !DIExpression())
!343 = distinct !DIGlobalVariable(scope: null, file: !3, line: 142, type: !290, isLocal: true, isDefinition: true)
!344 = !DIGlobalVariableExpression(var: !345, expr: !DIExpression())
!345 = distinct !DIGlobalVariable(scope: null, file: !3, line: 143, type: !323, isLocal: true, isDefinition: true)
!346 = !DIGlobalVariableExpression(var: !347, expr: !DIExpression())
!347 = distinct !DIGlobalVariable(scope: null, file: !3, line: 144, type: !290, isLocal: true, isDefinition: true)
!348 = !DIGlobalVariableExpression(var: !349, expr: !DIExpression())
!349 = distinct !DIGlobalVariable(name: "opts", scope: !350, file: !3, line: 141, type: !355, isLocal: true, isDefinition: true)
!350 = distinct !DISubprogram(name: "parse_args", scope: !3, file: !3, line: 139, type: !351, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !226, retainedNodes: !286)
!351 = !DISubroutineType(types: !352)
!352 = !{!229, !34, !353, !354, !353}
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64)
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 64)
!355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !356, size: 1024, elements: !365)
!356 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !357)
!357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !358, line: 50, size: 256, elements: !359)
!358 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/getopt_ext.h", directory: "", checksumkind: CSK_MD5, checksum: "b4f86ba96a508c530fa381ae1dafe9eb")
!359 = !{!360, !361, !362, !364}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !357, file: !358, line: 52, baseType: !205, size: 64)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !357, file: !358, line: 55, baseType: !34, size: 32, offset: 64)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !357, file: !358, line: 56, baseType: !363, size: 64, offset: 128)
!363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !34, size: 64)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !357, file: !358, line: 57, baseType: !34, size: 32, offset: 192)
!365 = !{!366}
!366 = !DISubrange(count: 4)
!367 = !DIGlobalVariableExpression(var: !368, expr: !DIExpression())
!368 = distinct !DIGlobalVariable(scope: null, file: !3, line: 150, type: !369, isLocal: true, isDefinition: true)
!369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 48, elements: !370)
!370 = !{!371}
!371 = !DISubrange(count: 6)
!372 = !DIGlobalVariableExpression(var: !373, expr: !DIExpression())
!373 = distinct !DIGlobalVariable(scope: null, file: !3, line: 165, type: !374, isLocal: true, isDefinition: true)
!374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 304, elements: !375)
!375 = !{!376}
!376 = !DISubrange(count: 38)
!377 = !DIGlobalVariableExpression(var: !378, expr: !DIExpression())
!378 = distinct !DIGlobalVariable(scope: null, file: !3, line: 169, type: !379, isLocal: true, isDefinition: true)
!379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 488, elements: !380)
!380 = !{!381}
!381 = !DISubrange(count: 61)
!382 = !DIGlobalVariableExpression(var: !383, expr: !DIExpression())
!383 = distinct !DIGlobalVariable(scope: null, file: !3, line: 170, type: !316, isLocal: true, isDefinition: true)
!384 = !DIGlobalVariableExpression(var: !385, expr: !DIExpression())
!385 = distinct !DIGlobalVariable(scope: null, file: !3, line: 171, type: !386, isLocal: true, isDefinition: true)
!386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 224, elements: !387)
!387 = !{!388}
!388 = !DISubrange(count: 28)
!389 = !DIGlobalVariableExpression(var: !390, expr: !DIExpression())
!390 = distinct !DIGlobalVariable(scope: null, file: !3, line: 172, type: !391, isLocal: true, isDefinition: true)
!391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 648, elements: !392)
!392 = !{!393}
!393 = !DISubrange(count: 81)
!394 = !DIGlobalVariableExpression(var: !395, expr: !DIExpression())
!395 = distinct !DIGlobalVariable(scope: null, file: !3, line: 173, type: !248, isLocal: true, isDefinition: true)
!396 = !DIGlobalVariableExpression(var: !397, expr: !DIExpression())
!397 = distinct !DIGlobalVariable(scope: null, file: !3, line: 174, type: !398, isLocal: true, isDefinition: true)
!398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 536, elements: !399)
!399 = !{!400}
!400 = !DISubrange(count: 67)
!401 = !DIGlobalVariableExpression(var: !402, expr: !DIExpression())
!402 = distinct !DIGlobalVariable(scope: null, file: !3, line: 175, type: !403, isLocal: true, isDefinition: true)
!403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 336, elements: !404)
!404 = !{!405}
!405 = !DISubrange(count: 42)
!406 = !DIGlobalVariableExpression(var: !407, expr: !DIExpression())
!407 = distinct !DIGlobalVariable(scope: null, file: !3, line: 176, type: !408, isLocal: true, isDefinition: true)
!408 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 192, elements: !409)
!409 = !{!410}
!410 = !DISubrange(count: 24)
!411 = !DIGlobalVariableExpression(var: !412, expr: !DIExpression())
!412 = distinct !DIGlobalVariable(scope: null, file: !3, line: 177, type: !341, isLocal: true, isDefinition: true)
!413 = !DIGlobalVariableExpression(var: !414, expr: !DIExpression())
!414 = distinct !DIGlobalVariable(scope: null, file: !3, line: 178, type: !253, isLocal: true, isDefinition: true)
!415 = !DIGlobalVariableExpression(var: !416, expr: !DIExpression())
!416 = distinct !DIGlobalVariable(scope: null, file: !3, line: 179, type: !417, isLocal: true, isDefinition: true)
!417 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 456, elements: !418)
!418 = !{!419}
!419 = !DISubrange(count: 57)
!420 = !DIGlobalVariableExpression(var: !421, expr: !DIExpression())
!421 = distinct !DIGlobalVariable(scope: null, file: !3, line: 180, type: !422, isLocal: true, isDefinition: true)
!422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 408, elements: !423)
!423 = !{!424}
!424 = !DISubrange(count: 51)
!425 = !DIGlobalVariableExpression(var: !426, expr: !DIExpression())
!426 = distinct !DIGlobalVariable(scope: null, file: !3, line: 182, type: !427, isLocal: true, isDefinition: true)
!427 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 416, elements: !428)
!428 = !{!429}
!429 = !DISubrange(count: 52)
!430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !431, size: 328, elements: !433)
!431 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !432)
!432 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!433 = !{!434}
!434 = !DISubrange(count: 41)
!435 = !DIGlobalVariableExpression(var: !436, expr: !DIExpression())
!436 = distinct !DIGlobalVariable(name: "base64_table", scope: !437, file: !443, line: 14, type: !447, isLocal: true, isDefinition: true)
!437 = distinct !DICompileUnit(language: DW_LANG_C11, file: !438, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !439, globals: !440, splitDebugInlining: false, nameTableKind: None)
!438 = !DIFile(filename: "/home/raj/lwan/common/base64.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "8a87452d79d8a8f0198bc14a71930268")
!439 = !{!111, !55, !432}
!440 = !{!435, !441}
!441 = !DIGlobalVariableExpression(var: !442, expr: !DIExpression())
!442 = distinct !DIGlobalVariable(name: "base64_decode_table", scope: !437, file: !443, line: 24, type: !444, isLocal: true, isDefinition: true)
!443 = !DIFile(filename: "common/base64.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "8a87452d79d8a8f0198bc14a71930268")
!444 = !DICompositeType(tag: DW_TAG_array_type, baseType: !431, size: 2048, elements: !445)
!445 = !{!446}
!446 = !DISubrange(count: 256)
!447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !431, size: 520, elements: !448)
!448 = !{!449}
!449 = !DISubrange(count: 65)
!450 = !DIGlobalVariableExpression(var: !451, expr: !DIExpression())
!451 = distinct !DIGlobalVariable(name: "odd_constant", scope: !452, file: !456, line: 41, type: !9, isLocal: true, isDefinition: true)
!452 = distinct !DICompileUnit(language: DW_LANG_C11, file: !453, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !454, retainedTypes: !461, globals: !469, splitDebugInlining: false, nameTableKind: None)
!453 = !DIFile(filename: "/home/raj/lwan/common/hash.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "00f74057e2e6dbf32d12ddc7b3b22e35")
!454 = !{!455}
!455 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !456, line: 36, baseType: !9, size: 32, elements: !457)
!456 = !DIFile(filename: "common/hash.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "00f74057e2e6dbf32d12ddc7b3b22e35")
!457 = !{!458, !459, !460}
!458 = !DIEnumerator(name: "n_buckets", value: 512)
!459 = !DIEnumerator(name: "steps", value: 64)
!460 = !DIEnumerator(name: "default_odd_constant", value: 668265261)
!461 = !{!462, !111, !55, !9, !155, !34, !467}
!462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 64)
!463 = !DISubroutineType(types: !464)
!464 = !{!34, !465, !465}
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64)
!466 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!467 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !468, line: 87, baseType: !155)
!468 = !DIFile(filename: "/usr/include/stdint.h", directory: "", checksumkind: CSK_MD5, checksum: "a48e64edacc5b19f56c99745232c963c")
!469 = !{!470, !472, !450}
!470 = !DIGlobalVariableExpression(var: !471, expr: !DIExpression())
!471 = distinct !DIGlobalVariable(scope: null, file: !456, line: 73, type: !316, isLocal: true, isDefinition: true)
!472 = !DIGlobalVariableExpression(var: !473, expr: !DIExpression())
!473 = distinct !DIGlobalVariable(scope: null, file: !456, line: 75, type: !268, isLocal: true, isDefinition: true)
!474 = !DIGlobalVariableExpression(var: !475, expr: !DIExpression())
!475 = distinct !DIGlobalVariable(name: "digits", scope: !476, file: !477, line: 34, type: !491, isLocal: true, isDefinition: true)
!476 = distinct !DISubprogram(name: "uint_to_string", scope: !477, file: !477, line: 24, type: !478, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !481, retainedNodes: !286)
!477 = !DIFile(filename: "common/int-to-str.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "16271f9060fa745dc9ad2afb6239c6d5")
!478 = !DISubroutineType(types: !479)
!479 = !{!52, !55, !52, !480}
!480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64)
!481 = distinct !DICompileUnit(language: DW_LANG_C11, file: !482, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !483, globals: !487, splitDebugInlining: false, nameTableKind: None)
!482 = !DIFile(filename: "/home/raj/lwan/common/int-to-str.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "16271f9060fa745dc9ad2afb6239c6d5")
!483 = !{!484, !53, !55}
!484 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !485, line: 26, baseType: !486)
!485 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "", checksumkind: CSK_MD5, checksum: "2bf2ae53c58c01b1a1b9383b5195125c")
!486 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !154, line: 42, baseType: !9)
!487 = !{!488, !474}
!488 = !DIGlobalVariableExpression(var: !489, expr: !DIExpression())
!489 = distinct !DIGlobalVariable(name: "length", scope: !476, file: !477, line: 32, type: !490, isLocal: true, isDefinition: true)
!490 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !55)
!491 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 1608, elements: !492)
!492 = !{!493}
!493 = !DISubrange(count: 201)
!494 = !DIGlobalVariableExpression(var: !495, expr: !DIExpression())
!495 = distinct !DIGlobalVariable(scope: null, file: !496, line: 41, type: !497, isLocal: true, isDefinition: true)
!496 = !DIFile(filename: "common/list.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "0a5860268a1418537132a40f402b0afc")
!497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 320, elements: !498)
!498 = !{!499}
!499 = !DISubrange(count: 40)
!500 = !DIGlobalVariableExpression(var: !501, expr: !DIExpression())
!501 = distinct !DIGlobalVariable(scope: null, file: !502, line: 104, type: !503, isLocal: true, isDefinition: true)
!502 = !DIFile(filename: "common/lwan-cache.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "f1aa9dd4cc8594b027bd5599ddc2fec4")
!503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 128, elements: !504)
!504 = !{!505}
!505 = !DISubrange(count: 16)
!506 = !DIGlobalVariableExpression(var: !507, expr: !DIExpression())
!507 = distinct !DIGlobalVariable(scope: null, file: !502, line: 104, type: !508, isLocal: true, isDefinition: true)
!508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 280, elements: !509)
!509 = !{!510}
!510 = !DISubrange(count: 35)
!511 = !DIGlobalVariableExpression(var: !512, expr: !DIExpression())
!512 = distinct !DIGlobalVariable(scope: null, file: !502, line: 104, type: !513, isLocal: true, isDefinition: true)
!513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 704, elements: !514)
!514 = !{!515}
!515 = !DISubrange(count: 88)
!516 = !DIGlobalVariableExpression(var: !517, expr: !DIExpression())
!517 = distinct !DIGlobalVariable(scope: null, file: !502, line: 105, type: !518, isLocal: true, isDefinition: true)
!518 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 136, elements: !519)
!519 = !{!520}
!520 = !DISubrange(count: 17)
!521 = !DIGlobalVariableExpression(var: !522, expr: !DIExpression())
!522 = distinct !DIGlobalVariable(scope: null, file: !502, line: 106, type: !518, isLocal: true, isDefinition: true)
!523 = !DIGlobalVariableExpression(var: !524, expr: !DIExpression())
!524 = distinct !DIGlobalVariable(scope: null, file: !502, line: 146, type: !369, isLocal: true, isDefinition: true)
!525 = !DIGlobalVariableExpression(var: !526, expr: !DIExpression())
!526 = distinct !DIGlobalVariable(scope: null, file: !502, line: 146, type: !527, isLocal: true, isDefinition: true)
!527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 296, elements: !528)
!528 = !{!529}
!529 = !DISubrange(count: 37)
!530 = !DIGlobalVariableExpression(var: !531, expr: !DIExpression())
!531 = distinct !DIGlobalVariable(scope: null, file: !502, line: 149, type: !532, isLocal: true, isDefinition: true)
!532 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 112, elements: !298)
!533 = !DIGlobalVariableExpression(var: !534, expr: !DIExpression())
!534 = distinct !DIGlobalVariable(scope: null, file: !502, line: 149, type: !535, isLocal: true, isDefinition: true)
!535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 368, elements: !536)
!536 = !{!537}
!537 = !DISubrange(count: 46)
!538 = !DIGlobalVariableExpression(var: !539, expr: !DIExpression())
!539 = distinct !DIGlobalVariable(scope: null, file: !502, line: 175, type: !540, isLocal: true, isDefinition: true)
!540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 680, elements: !541)
!541 = !{!542}
!542 = !DISubrange(count: 85)
!543 = !DIGlobalVariableExpression(var: !544, expr: !DIExpression())
!544 = distinct !DIGlobalVariable(scope: null, file: !502, line: 176, type: !369, isLocal: true, isDefinition: true)
!545 = !DIGlobalVariableExpression(var: !546, expr: !DIExpression())
!546 = distinct !DIGlobalVariable(scope: null, file: !502, line: 177, type: !547, isLocal: true, isDefinition: true)
!547 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 32, elements: !365)
!548 = !DIGlobalVariableExpression(var: !549, expr: !DIExpression())
!549 = distinct !DIGlobalVariable(scope: null, file: !502, line: 251, type: !369, isLocal: true, isDefinition: true)
!550 = !DIGlobalVariableExpression(var: !551, expr: !DIExpression())
!551 = distinct !DIGlobalVariable(scope: null, file: !502, line: 251, type: !552, isLocal: true, isDefinition: true)
!552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 520, elements: !448)
!553 = !DIGlobalVariableExpression(var: !554, expr: !DIExpression())
!554 = distinct !DIGlobalVariable(scope: null, file: !502, line: 94, type: !555, isLocal: true, isDefinition: true)
!555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 192, elements: !409)
!556 = !DIGlobalVariableExpression(var: !557, expr: !DIExpression())
!557 = distinct !DIGlobalVariable(scope: null, file: !502, line: 94, type: !297, isLocal: true, isDefinition: true)
!558 = !DIGlobalVariableExpression(var: !559, expr: !DIExpression())
!559 = distinct !DIGlobalVariable(scope: null, file: !502, line: 287, type: !560, isLocal: true, isDefinition: true)
!560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 136, elements: !519)
!561 = !DIGlobalVariableExpression(var: !562, expr: !DIExpression())
!562 = distinct !DIGlobalVariable(scope: null, file: !502, line: 287, type: !336, isLocal: true, isDefinition: true)
!563 = !DIGlobalVariableExpression(var: !564, expr: !DIExpression())
!564 = distinct !DIGlobalVariable(scope: null, file: !502, line: 312, type: !336, isLocal: true, isDefinition: true)
!565 = !DIGlobalVariableExpression(var: !566, expr: !DIExpression())
!566 = distinct !DIGlobalVariable(scope: null, file: !567, line: 43, type: !290, isLocal: true, isDefinition: true)
!567 = !DIFile(filename: "common/lwan-config.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "199ccadf79b83965963cdf65e7c49914")
!568 = !DIGlobalVariableExpression(var: !569, expr: !DIExpression())
!569 = distinct !DIGlobalVariable(scope: null, file: !567, line: 53, type: !570, isLocal: true, isDefinition: true)
!570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 288, elements: !571)
!571 = !{!572}
!572 = !DISubrange(count: 36)
!573 = !DIGlobalVariableExpression(var: !574, expr: !DIExpression())
!574 = distinct !DIGlobalVariable(scope: null, file: !567, line: 53, type: !575, isLocal: true, isDefinition: true)
!575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 144, elements: !576)
!576 = !{!577}
!577 = !DISubrange(count: 18)
!578 = !DIGlobalVariableExpression(var: !579, expr: !DIExpression())
!579 = distinct !DIGlobalVariable(scope: null, file: !567, line: 53, type: !580, isLocal: true, isDefinition: true)
!580 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 256, elements: !581)
!581 = !{!582}
!582 = !DISubrange(count: 32)
!583 = !DIGlobalVariableExpression(var: !584, expr: !DIExpression())
!584 = distinct !DIGlobalVariable(scope: null, file: !567, line: 68, type: !290, isLocal: true, isDefinition: true)
!585 = !DIGlobalVariableExpression(var: !586, expr: !DIExpression())
!586 = distinct !DIGlobalVariable(scope: null, file: !567, line: 68, type: !341, isLocal: true, isDefinition: true)
!587 = !DIGlobalVariableExpression(var: !588, expr: !DIExpression())
!588 = distinct !DIGlobalVariable(scope: null, file: !567, line: 69, type: !280, isLocal: true, isDefinition: true)
!589 = !DIGlobalVariableExpression(var: !590, expr: !DIExpression())
!590 = distinct !DIGlobalVariable(scope: null, file: !567, line: 69, type: !547, isLocal: true, isDefinition: true)
!591 = !DIGlobalVariableExpression(var: !592, expr: !DIExpression())
!592 = distinct !DIGlobalVariable(scope: null, file: !567, line: 72, type: !369, isLocal: true, isDefinition: true)
!593 = !DIGlobalVariableExpression(var: !594, expr: !DIExpression())
!594 = distinct !DIGlobalVariable(scope: null, file: !567, line: 72, type: !341, isLocal: true, isDefinition: true)
!595 = !DIGlobalVariableExpression(var: !596, expr: !DIExpression())
!596 = distinct !DIGlobalVariable(scope: null, file: !567, line: 73, type: !547, isLocal: true, isDefinition: true)
!597 = !DIGlobalVariableExpression(var: !598, expr: !DIExpression())
!598 = distinct !DIGlobalVariable(scope: null, file: !567, line: 73, type: !280, isLocal: true, isDefinition: true)
!599 = !DIGlobalVariableExpression(var: !600, expr: !DIExpression())
!600 = distinct !DIGlobalVariable(scope: null, file: !567, line: 203, type: !304, isLocal: true, isDefinition: true)
!601 = !DIGlobalVariableExpression(var: !602, expr: !DIExpression())
!602 = distinct !DIGlobalVariable(scope: null, file: !567, line: 214, type: !309, isLocal: true, isDefinition: true)
!603 = !DIGlobalVariableExpression(var: !604, expr: !DIExpression())
!604 = distinct !DIGlobalVariable(scope: null, file: !567, line: 218, type: !605, isLocal: true, isDefinition: true)
!605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 248, elements: !606)
!606 = !{!607}
!607 = !DISubrange(count: 31)
!608 = !DIGlobalVariableExpression(var: !609, expr: !DIExpression())
!609 = distinct !DIGlobalVariable(scope: null, file: !567, line: 232, type: !280, isLocal: true, isDefinition: true)
!610 = !DIGlobalVariableExpression(var: !611, expr: !DIExpression())
!611 = distinct !DIGlobalVariable(scope: null, file: !612, line: 230, type: !290, isLocal: true, isDefinition: true)
!612 = !DIFile(filename: "common/lwan-coro.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "f10099f62b8fec41343042e41e9eba52")
!613 = !DIGlobalVariableExpression(var: !614, expr: !DIExpression())
!614 = distinct !DIGlobalVariable(scope: null, file: !612, line: 230, type: !615, isLocal: true, isDefinition: true)
!615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 272, elements: !616)
!616 = !{!617}
!617 = !DISubrange(count: 34)
!618 = !DIGlobalVariableExpression(var: !619, expr: !DIExpression())
!619 = distinct !DIGlobalVariable(scope: null, file: !612, line: 230, type: !620, isLocal: true, isDefinition: true)
!620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 208, elements: !305)
!621 = !DIGlobalVariableExpression(var: !622, expr: !DIExpression())
!622 = distinct !DIGlobalVariable(scope: null, file: !612, line: 231, type: !623, isLocal: true, isDefinition: true)
!623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 168, elements: !624)
!624 = !{!625}
!625 = !DISubrange(count: 21)
!626 = !DIGlobalVariableExpression(var: !627, expr: !DIExpression())
!627 = distinct !DIGlobalVariable(scope: null, file: !612, line: 257, type: !527, isLocal: true, isDefinition: true)
!628 = !DIGlobalVariableExpression(var: !629, expr: !DIExpression())
!629 = distinct !DIGlobalVariable(scope: null, file: !612, line: 267, type: !630, isLocal: true, isDefinition: true)
!630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 240, elements: !147)
!631 = !DIGlobalVariableExpression(var: !632, expr: !DIExpression())
!632 = distinct !DIGlobalVariable(scope: null, file: !612, line: 276, type: !633, isLocal: true, isDefinition: true)
!633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 200, elements: !310)
!634 = !DIGlobalVariableExpression(var: !635, expr: !DIExpression())
!635 = distinct !DIGlobalVariable(scope: null, file: !612, line: 291, type: !290, isLocal: true, isDefinition: true)
!636 = !DIGlobalVariableExpression(var: !637, expr: !DIExpression())
!637 = distinct !DIGlobalVariable(scope: null, file: !612, line: 291, type: !638, isLocal: true, isDefinition: true)
!638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 464, elements: !639)
!639 = !{!640}
!640 = !DISubrange(count: 58)
!641 = !DIGlobalVariableExpression(var: !642, expr: !DIExpression())
!642 = distinct !DIGlobalVariable(name: "realm_password_cache", scope: !643, file: !670, line: 35, type: !840, isLocal: true, isDefinition: true)
!643 = distinct !DICompileUnit(language: DW_LANG_C11, file: !644, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !645, retainedTypes: !652, globals: !675, splitDebugInlining: false, nameTableKind: None)
!644 = !DIFile(filename: "/home/raj/lwan/common/lwan-http-authorize.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "a818272e04294763324aa9ca395ad814")
!645 = !{!33, !66, !8, !646}
!646 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !647, line: 35, baseType: !9, size: 32, elements: !648)
!647 = !DIFile(filename: "common/lwan-config.h", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "7586af514a363878312816f8ee308270")
!648 = !{!649, !650, !651}
!649 = !DIEnumerator(name: "CONFIG_LINE_TYPE_LINE", value: 0)
!650 = !DIEnumerator(name: "CONFIG_LINE_TYPE_SECTION", value: 1)
!651 = !DIEnumerator(name: "CONFIG_LINE_TYPE_SECTION_END", value: 2)
!652 = !{!111, !653, !668, !674}
!653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64)
!654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cache_entry_t", file: !655, line: 27, size: 320, elements: !656)
!655 = !DIFile(filename: "common/lwan-cache.h", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "f48e19cadb0735f737f22aa65af51f83")
!656 = !{!657, !664, !665, !666, !667}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !654, file: !655, line: 28, baseType: !658, size: 128)
!658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_node", file: !659, line: 191, size: 128, elements: !660)
!659 = !DIFile(filename: "common/list.h", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "c0dffb77b1bbbbb179ef8d69b9e1dd8c")
!660 = !{!661, !663}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !658, file: !659, line: 193, baseType: !662, size: 64)
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !658, file: !659, line: 193, baseType: !662, size: 64, offset: 64)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !654, file: !655, line: 29, baseType: !52, size: 64, offset: 128)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !654, file: !655, line: 30, baseType: !9, size: 32, offset: 192)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !654, file: !655, line: 31, baseType: !9, size: 32, offset: 224)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "time_to_die", scope: !654, file: !655, line: 32, baseType: !151, size: 64, offset: 256)
!668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 64)
!669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "realm_password_file_t", file: !670, line: 30, size: 384, elements: !671)
!670 = !DIFile(filename: "common/lwan-http-authorize.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "a818272e04294763324aa9ca395ad814")
!671 = !{!672, !673}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !669, file: !670, line: 31, baseType: !654, size: 320)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !669, file: !670, line: 32, baseType: !127, size: 64, offset: 320)
!674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !432, size: 64)
!675 = !{!676, !817, !819, !821, !823, !828, !830, !832, !837, !641}
!676 = !DIGlobalVariableExpression(var: !677, expr: !DIExpression())
!677 = distinct !DIGlobalVariable(name: "authenticate_tmpl", scope: !678, file: !670, line: 189, type: !560, isLocal: true, isDefinition: true)
!678 = distinct !DISubprogram(name: "lwan_http_authorize", scope: !670, file: !670, line: 184, type: !679, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !643, retainedNodes: !286)
!679 = !DISubroutineType(types: !680)
!680 = !{!137, !681, !816, !205, !205}
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64)
!682 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_request_t", file: !7, line: 106, baseType: !683)
!683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_request_t_", file: !7, line: 206, size: 1280, elements: !684)
!684 = !{!685, !686, !687, !693, !694, !763, !774, !775, !784}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !683, file: !7, line: 207, baseType: !32, size: 32)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !683, file: !7, line: 208, baseType: !34, size: 32, offset: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "url", scope: !683, file: !7, line: 209, baseType: !688, size: 128, offset: 64)
!688 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_value_t", file: !7, line: 110, baseType: !689)
!689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_value_t_", file: !7, line: 191, size: 128, elements: !690)
!690 = !{!691, !692}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !689, file: !7, line: 192, baseType: !52, size: 64)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !689, file: !7, line: 193, baseType: !55, size: 64, offset: 64)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "original_url", scope: !683, file: !7, line: 210, baseType: !688, size: 128, offset: 192)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "conn", scope: !683, file: !7, line: 211, baseType: !695, size: 64, offset: 320)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64)
!696 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_connection_t", file: !7, line: 112, baseType: !697)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_connection_t_", file: !7, line: 196, size: 256, elements: !698)
!698 = !{!699, !700, !701, !702, !761, !762}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !697, file: !7, line: 199, baseType: !65, size: 32)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "time_to_die", scope: !697, file: !7, line: 200, baseType: !9, size: 32, offset: 32)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "coro", scope: !697, file: !7, line: 201, baseType: !76, size: 64, offset: 64)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !697, file: !7, line: 202, baseType: !703, size: 64, offset: 128)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_thread_t", file: !7, line: 108, baseType: !705)
!705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_thread_t_", file: !7, line: 253, size: 832, elements: !706)
!706 = !{!707, !752, !758, !759, !760}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "lwan", scope: !705, file: !7, line: 254, baseType: !708, size: 64)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_t", file: !7, line: 103, baseType: !710)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_t_", file: !7, line: 275, size: 640, elements: !711)
!711 = !{!712, !733, !734, !740, !741, !751}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "url_map_trie", scope: !710, file: !7, line: 276, baseType: !713, size: 128)
!713 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_t", file: !92, line: 25, baseType: !714)
!714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_t_", file: !92, line: 41, size: 128, elements: !715)
!715 = !{!716, !732}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !714, file: !92, line: 42, baseType: !717, size: 64)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!718 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_node_t", file: !92, line: 26, baseType: !719)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_node_t_", file: !92, line: 29, size: 640, elements: !720)
!720 = !{!721, !723, !731}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !719, file: !92, line: 30, baseType: !722, size: 512)
!722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !717, size: 512, elements: !102)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !719, file: !92, line: 31, baseType: !724, size: 64, offset: 512)
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!725 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_leaf_t", file: !92, line: 27, baseType: !726)
!726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_leaf_t_", file: !92, line: 35, size: 192, elements: !727)
!727 = !{!728, !729, !730}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !726, file: !92, line: 36, baseType: !52, size: 64)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !726, file: !92, line: 37, baseType: !111, size: 64, offset: 64)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !726, file: !92, line: 38, baseType: !724, size: 64, offset: 128)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !719, file: !92, line: 32, baseType: !34, size: 32, offset: 576)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !714, file: !92, line: 43, baseType: !115, size: 64, offset: 64)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "conns", scope: !710, file: !7, line: 277, baseType: !695, size: 64, offset: 128)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !710, file: !7, line: 283, baseType: !735, size: 128, offset: 192)
!735 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !710, file: !7, line: 279, size: 128, elements: !736)
!736 = !{!737, !738, !739}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !735, file: !7, line: 280, baseType: !703, size: 64)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "max_fd", scope: !735, file: !7, line: 281, baseType: !9, size: 32, offset: 64)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !735, file: !7, line: 282, baseType: !125, size: 16, offset: 96)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "module_registry", scope: !710, file: !7, line: 285, baseType: !127, size: 64, offset: 320)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !710, file: !7, line: 286, baseType: !742, size: 192, offset: 384)
!742 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_config_t", file: !7, line: 111, baseType: !743)
!743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_config_t_", file: !7, line: 266, size: 192, elements: !744)
!744 = !{!745, !746, !747, !748, !749, !750}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !743, file: !7, line: 267, baseType: !52, size: 64)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive_timeout", scope: !743, file: !7, line: 268, baseType: !125, size: 16, offset: 64)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "quiet", scope: !743, file: !7, line: 269, baseType: !137, size: 8, offset: 80)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "reuse_port", scope: !743, file: !7, line: 270, baseType: !137, size: 8, offset: 88)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !743, file: !7, line: 271, baseType: !9, size: 32, offset: 96)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "n_threads", scope: !743, file: !7, line: 272, baseType: !125, size: 16, offset: 128)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "main_socket", scope: !710, file: !7, line: 287, baseType: !34, size: 32, offset: 576)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !705, file: !7, line: 259, baseType: !753, size: 576, offset: 64)
!753 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !705, file: !7, line: 255, size: 576, elements: !754)
!754 = !{!755, !756, !757}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !753, file: !7, line: 256, baseType: !146, size: 240)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !753, file: !7, line: 257, baseType: !146, size: 240, offset: 240)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !753, file: !7, line: 258, baseType: !151, size: 64, offset: 512)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_fd", scope: !705, file: !7, line: 261, baseType: !34, size: 32, offset: 640)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_fd", scope: !705, file: !7, line: 262, baseType: !158, size: 64, offset: 672)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !705, file: !7, line: 263, baseType: !162, size: 64, offset: 768)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !697, file: !7, line: 203, baseType: !34, size: 32, offset: 192)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !697, file: !7, line: 203, baseType: !34, size: 32, offset: 224)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "query_params", scope: !683, file: !7, line: 216, baseType: !764, size: 128, offset: 384)
!764 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !683, file: !7, line: 213, size: 128, elements: !765)
!765 = !{!766, !773}
!766 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !764, file: !7, line: 214, baseType: !767, size: 64)
!767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 64)
!768 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_key_value_t", file: !7, line: 105, baseType: !769)
!769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_key_value_t_", file: !7, line: 173, size: 128, elements: !770)
!770 = !{!771, !772}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !769, file: !7, line: 174, baseType: !52, size: 64)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !769, file: !7, line: 175, baseType: !52, size: 64, offset: 64)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !764, file: !7, line: 215, baseType: !55, size: 64, offset: 64)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "post_data", scope: !683, file: !7, line: 216, baseType: !764, size: 128, offset: 512)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !683, file: !7, line: 223, baseType: !776, size: 192, offset: 640)
!776 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !683, file: !7, line: 217, size: 192, elements: !777)
!777 = !{!778, !779}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "if_modified_since", scope: !776, file: !7, line: 218, baseType: !151, size: 64)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !776, file: !7, line: 222, baseType: !780, size: 128, offset: 64)
!780 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !776, file: !7, line: 219, size: 128, elements: !781)
!781 = !{!782, !783}
!782 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !780, file: !7, line: 220, baseType: !186, size: 64)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !780, file: !7, line: 221, baseType: !186, size: 64, offset: 64)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !683, file: !7, line: 224, baseType: !785, size: 448, offset: 832)
!785 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_response_t", file: !7, line: 107, baseType: !786)
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_response_t_", file: !7, line: 178, size: 448, elements: !787)
!787 = !{!788, !804, !805, !806, !807}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !786, file: !7, line: 179, baseType: !789, size: 64)
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 64)
!790 = !DIDerivedType(tag: DW_TAG_typedef, name: "strbuf_t", file: !197, line: 25, baseType: !791)
!791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "strbuf_t_", file: !197, line: 27, size: 256, elements: !792)
!792 = !{!793, !798, !803}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !791, file: !197, line: 31, baseType: !794, size: 64)
!794 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !791, file: !197, line: 28, size: 64, elements: !795)
!795 = !{!796, !797}
!796 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !794, file: !197, line: 29, baseType: !52, size: 64)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "static_buffer", scope: !794, file: !197, line: 30, baseType: !205, size: 64)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !791, file: !197, line: 34, baseType: !799, size: 128, offset: 64)
!799 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !791, file: !197, line: 32, size: 128, elements: !800)
!800 = !{!801, !802}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !799, file: !197, line: 33, baseType: !55, size: 64)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !799, file: !197, line: 33, baseType: !55, size: 64, offset: 64)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !791, file: !197, line: 35, baseType: !9, size: 32, offset: 192)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !786, file: !7, line: 180, baseType: !205, size: 64, offset: 64)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "content_length", scope: !786, file: !7, line: 181, baseType: !55, size: 64, offset: 128)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "headers", scope: !786, file: !7, line: 182, baseType: !767, size: 64, offset: 192)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !786, file: !7, line: 188, baseType: !808, size: 192, offset: 256)
!808 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !786, file: !7, line: 184, size: 192, elements: !809)
!809 = !{!810, !814, !815}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !808, file: !7, line: 185, baseType: !811, size: 64)
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!812 = !DISubroutineType(types: !813)
!813 = !{!6, !681, !111}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !808, file: !7, line: 186, baseType: !111, size: 64, offset: 64)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !808, file: !7, line: 187, baseType: !111, size: 64, offset: 128)
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!817 = !DIGlobalVariableExpression(var: !818, expr: !DIExpression())
!818 = distinct !DIGlobalVariable(name: "basic_len", scope: !678, file: !670, line: 190, type: !490, isLocal: true, isDefinition: true)
!819 = !DIGlobalVariableExpression(var: !820, expr: !DIExpression())
!820 = distinct !DIGlobalVariable(scope: null, file: !670, line: 196, type: !323, isLocal: true, isDefinition: true)
!821 = !DIGlobalVariableExpression(var: !822, expr: !DIExpression())
!822 = distinct !DIGlobalVariable(scope: null, file: !670, line: 207, type: !518, isLocal: true, isDefinition: true)
!823 = !DIGlobalVariableExpression(var: !824, expr: !DIExpression())
!824 = distinct !DIGlobalVariable(scope: null, file: !670, line: 87, type: !825, isLocal: true, isDefinition: true)
!825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 352, elements: !826)
!826 = !{!827}
!827 = !DISubrange(count: 44)
!828 = !DIGlobalVariableExpression(var: !829, expr: !DIExpression())
!829 = distinct !DIGlobalVariable(scope: null, file: !670, line: 87, type: !575, isLocal: true, isDefinition: true)
!830 = !DIGlobalVariableExpression(var: !831, expr: !DIExpression())
!831 = distinct !DIGlobalVariable(scope: null, file: !670, line: 87, type: !535, isLocal: true, isDefinition: true)
!832 = !DIGlobalVariableExpression(var: !833, expr: !DIExpression())
!833 = distinct !DIGlobalVariable(scope: null, file: !670, line: 96, type: !834, isLocal: true, isDefinition: true)
!834 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 232, elements: !835)
!835 = !{!836}
!836 = !DISubrange(count: 29)
!837 = !DIGlobalVariableExpression(var: !838, expr: !DIExpression())
!838 = distinct !DIGlobalVariable(scope: null, file: !670, line: 102, type: !839, isLocal: true, isDefinition: true)
!839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 328, elements: !433)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = !DICompositeType(tag: DW_TAG_structure_type, name: "cache_t", file: !655, line: 40, flags: DIFlagFwdDecl)
!842 = !DIGlobalVariableExpression(var: !843, expr: !DIExpression())
!843 = distinct !DIGlobalVariable(scope: null, file: !844, line: 240, type: !839, isLocal: true, isDefinition: true)
!844 = !DIFile(filename: "common/lwan-io-wrappers.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "df65fc501e2089d1c77356ebe44cff47")
!845 = !DIGlobalVariableExpression(var: !846, expr: !DIExpression())
!846 = distinct !DIGlobalVariable(scope: null, file: !844, line: 240, type: !532, isLocal: true, isDefinition: true)
!847 = !DIGlobalVariableExpression(var: !848, expr: !DIExpression())
!848 = distinct !DIGlobalVariable(scope: null, file: !844, line: 240, type: !297, isLocal: true, isDefinition: true)
!849 = !DIGlobalVariableExpression(var: !850, expr: !DIExpression())
!850 = distinct !DIGlobalVariable(scope: null, file: !844, line: 179, type: !851, isLocal: true, isDefinition: true)
!851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 160, elements: !264)
!852 = !DIGlobalVariableExpression(var: !853, expr: !DIExpression())
!853 = distinct !DIGlobalVariable(scope: null, file: !844, line: 179, type: !369, isLocal: true, isDefinition: true)
!854 = !DIGlobalVariableExpression(var: !855, expr: !DIExpression())
!855 = distinct !DIGlobalVariable(name: "running", scope: !856, file: !867, line: 41, type: !137, isLocal: true, isDefinition: true)
!856 = distinct !DICompileUnit(language: DW_LANG_C11, file: !857, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !858, globals: !864, splitDebugInlining: false, nameTableKind: None)
!857 = !DIFile(filename: "/home/raj/lwan/common/lwan-job.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "37f1591a76c3166f23ef5ae3b94f9151")
!858 = !{!111, !859, !52}
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 64)
!860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_node", file: !659, line: 191, size: 128, elements: !861)
!861 = !{!862, !863}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !860, file: !659, line: 193, baseType: !859, size: 64)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !860, file: !659, line: 193, baseType: !859, size: 64, offset: 64)
!864 = !{!865, !871, !876, !879, !882, !885, !890, !892, !894, !896, !898, !900, !905, !908, !910, !912, !914, !916, !854, !921}
!865 = !DIGlobalVariableExpression(var: !866, expr: !DIExpression())
!866 = distinct !DIGlobalVariable(scope: null, file: !867, line: 77, type: !868, isLocal: true, isDefinition: true)
!867 = !DIFile(filename: "common/lwan-job.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "37f1591a76c3166f23ef5ae3b94f9151")
!868 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 72, elements: !869)
!869 = !{!870}
!870 = !DISubrange(count: 9)
!871 = !DIGlobalVariableExpression(var: !872, expr: !DIExpression())
!872 = distinct !DIGlobalVariable(scope: null, file: !867, line: 77, type: !873, isLocal: true, isDefinition: true)
!873 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 264, elements: !874)
!874 = !{!875}
!875 = !DISubrange(count: 33)
!876 = !DIGlobalVariableExpression(var: !877, expr: !DIExpression())
!877 = distinct !DIGlobalVariable(scope: null, file: !867, line: 77, type: !878, isLocal: true, isDefinition: true)
!878 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 256, elements: !581)
!879 = !DIGlobalVariableExpression(var: !880, expr: !DIExpression())
!880 = distinct !DIGlobalVariable(scope: null, file: !867, line: 79, type: !881, isLocal: true, isDefinition: true)
!881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 168, elements: !624)
!882 = !DIGlobalVariableExpression(var: !883, expr: !DIExpression())
!883 = distinct !DIGlobalVariable(scope: null, file: !867, line: 79, type: !884, isLocal: true, isDefinition: true)
!884 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 296, elements: !528)
!885 = !DIGlobalVariableExpression(var: !886, expr: !DIExpression())
!886 = distinct !DIGlobalVariable(scope: null, file: !867, line: 85, type: !887, isLocal: true, isDefinition: true)
!887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 120, elements: !888)
!888 = !{!889}
!889 = !DISubrange(count: 15)
!890 = !DIGlobalVariableExpression(var: !891, expr: !DIExpression())
!891 = distinct !DIGlobalVariable(scope: null, file: !867, line: 92, type: !336, isLocal: true, isDefinition: true)
!892 = !DIGlobalVariableExpression(var: !893, expr: !DIExpression())
!893 = distinct !DIGlobalVariable(scope: null, file: !867, line: 98, type: !633, isLocal: true, isDefinition: true)
!894 = !DIGlobalVariableExpression(var: !895, expr: !DIExpression())
!895 = distinct !DIGlobalVariable(scope: null, file: !867, line: 98, type: !309, isLocal: true, isDefinition: true)
!896 = !DIGlobalVariableExpression(var: !897, expr: !DIExpression())
!897 = distinct !DIGlobalVariable(scope: null, file: !867, line: 108, type: !316, isLocal: true, isDefinition: true)
!898 = !DIGlobalVariableExpression(var: !899, expr: !DIExpression())
!899 = distinct !DIGlobalVariable(scope: null, file: !867, line: 115, type: !280, isLocal: true, isDefinition: true)
!900 = !DIGlobalVariableExpression(var: !901, expr: !DIExpression())
!901 = distinct !DIGlobalVariable(scope: null, file: !867, line: 115, type: !902, isLocal: true, isDefinition: true)
!902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 360, elements: !903)
!903 = !{!904}
!904 = !DISubrange(count: 45)
!905 = !DIGlobalVariableExpression(var: !906, expr: !DIExpression())
!906 = distinct !DIGlobalVariable(scope: null, file: !867, line: 119, type: !907, isLocal: true, isDefinition: true)
!907 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 104, elements: !317)
!908 = !DIGlobalVariableExpression(var: !909, expr: !DIExpression())
!909 = distinct !DIGlobalVariable(scope: null, file: !867, line: 119, type: !323, isLocal: true, isDefinition: true)
!910 = !DIGlobalVariableExpression(var: !911, expr: !DIExpression())
!911 = distinct !DIGlobalVariable(scope: null, file: !867, line: 128, type: !408, isLocal: true, isDefinition: true)
!912 = !DIGlobalVariableExpression(var: !913, expr: !DIExpression())
!913 = distinct !DIGlobalVariable(scope: null, file: !867, line: 137, type: !902, isLocal: true, isDefinition: true)
!914 = !DIGlobalVariableExpression(var: !915, expr: !DIExpression())
!915 = distinct !DIGlobalVariable(name: "self", scope: !856, file: !867, line: 39, type: !162, isLocal: true, isDefinition: true)
!916 = !DIGlobalVariableExpression(var: !917, expr: !DIExpression())
!917 = distinct !DIGlobalVariable(name: "jobs", scope: !856, file: !867, line: 42, type: !918, isLocal: true, isDefinition: true)
!918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !659, line: 208, size: 128, elements: !919)
!919 = !{!920}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !918, file: !659, line: 210, baseType: !860, size: 128)
!921 = !DIGlobalVariableExpression(var: !922, expr: !DIExpression())
!922 = distinct !DIGlobalVariable(name: "queue_mutex", scope: !856, file: !867, line: 40, type: !923, isLocal: true, isDefinition: true)
!923 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_mutex_t", file: !163, line: 72, baseType: !924)
!924 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !163, line: 67, size: 320, elements: !925)
!925 = !{!926, !946, !947}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "__data", scope: !924, file: !163, line: 69, baseType: !927, size: 320)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_mutex_s", file: !928, line: 22, size: 320, elements: !929)
!928 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h", directory: "", checksumkind: CSK_MD5, checksum: "584baedd80e6041b81caae7f496091c0")
!929 = !{!930, !931, !932, !933, !934, !935, !937, !938}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "__lock", scope: !927, file: !928, line: 24, baseType: !34, size: 32)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !927, file: !928, line: 25, baseType: !9, size: 32, offset: 32)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "__owner", scope: !927, file: !928, line: 26, baseType: !34, size: 32, offset: 64)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "__nusers", scope: !927, file: !928, line: 28, baseType: !9, size: 32, offset: 96)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "__kind", scope: !927, file: !928, line: 32, baseType: !34, size: 32, offset: 128)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "__spins", scope: !927, file: !928, line: 34, baseType: !936, size: 16, offset: 160)
!936 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "__elision", scope: !927, file: !928, line: 35, baseType: !936, size: 16, offset: 176)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "__list", scope: !927, file: !928, line: 36, baseType: !939, size: 128, offset: 192)
!939 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pthread_list_t", file: !940, line: 55, baseType: !941)
!940 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h", directory: "", checksumkind: CSK_MD5, checksum: "04c81e86d34dad9c99ad006d32e47a0d")
!941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_internal_list", file: !940, line: 51, size: 128, elements: !942)
!942 = !{!943, !945}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "__prev", scope: !941, file: !940, line: 53, baseType: !944, size: 64)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "__next", scope: !941, file: !940, line: 54, baseType: !944, size: 64, offset: 64)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !924, file: !163, line: 70, baseType: !497, size: 320)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !924, file: !163, line: 71, baseType: !155, size: 64)
!948 = !DIGlobalVariableExpression(var: !949, expr: !DIExpression())
!949 = distinct !DIGlobalVariable(scope: null, file: !950, line: 253, type: !834, isLocal: true, isDefinition: true)
!950 = !DIFile(filename: "common/lwan.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "b45b64bdafc0e6707cec9025aee73c17")
!951 = !DIGlobalVariableExpression(var: !952, expr: !DIExpression())
!952 = distinct !DIGlobalVariable(scope: null, file: !950, line: 253, type: !560, isLocal: true, isDefinition: true)
!953 = !DIGlobalVariableExpression(var: !954, expr: !DIExpression())
!954 = distinct !DIGlobalVariable(scope: null, file: !950, line: 253, type: !304, isLocal: true, isDefinition: true)
!955 = !DIGlobalVariableExpression(var: !956, expr: !DIExpression())
!956 = distinct !DIGlobalVariable(scope: null, file: !950, line: 308, type: !887, isLocal: true, isDefinition: true)
!957 = !DIGlobalVariableExpression(var: !958, expr: !DIExpression())
!958 = distinct !DIGlobalVariable(scope: null, file: !950, line: 315, type: !275, isLocal: true, isDefinition: true)
!959 = !DIGlobalVariableExpression(var: !960, expr: !DIExpression())
!960 = distinct !DIGlobalVariable(scope: null, file: !950, line: 322, type: !248, isLocal: true, isDefinition: true)
!961 = !DIGlobalVariableExpression(var: !962, expr: !DIExpression())
!962 = distinct !DIGlobalVariable(name: "default_config", scope: !963, file: !950, line: 44, type: !1385, isLocal: true, isDefinition: true)
!963 = distinct !DICompileUnit(language: DW_LANG_C11, file: !964, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !965, retainedTypes: !1220, globals: !1227, splitDebugInlining: false, nameTableKind: None)
!964 = !DIFile(filename: "/home/raj/lwan/common/lwan.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "b45b64bdafc0e6707cec9025aee73c17")
!965 = !{!66, !8, !33, !234, !966, !646, !978, !1198}
!966 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__socket_type", file: !967, line: 24, baseType: !9, size: 32, elements: !968)
!967 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket_type.h", directory: "", checksumkind: CSK_MD5, checksum: "0d4e972fdeb3da9a5bc94fa41144e9f8")
!968 = !{!969, !970, !971, !972, !973, !974, !975, !976, !977}
!969 = !DIEnumerator(name: "SOCK_STREAM", value: 1)
!970 = !DIEnumerator(name: "SOCK_DGRAM", value: 2)
!971 = !DIEnumerator(name: "SOCK_RAW", value: 3)
!972 = !DIEnumerator(name: "SOCK_RDM", value: 4)
!973 = !DIEnumerator(name: "SOCK_SEQPACKET", value: 5)
!974 = !DIEnumerator(name: "SOCK_DCCP", value: 6)
!975 = !DIEnumerator(name: "SOCK_PACKET", value: 10)
!976 = !DIEnumerator(name: "SOCK_CLOEXEC", value: 524288)
!977 = !DIEnumerator(name: "SOCK_NONBLOCK", value: 2048)
!978 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !979, line: 71, baseType: !9, size: 32, elements: !980)
!979 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/confname.h", directory: "", checksumkind: CSK_MD5, checksum: "78b98c9476f9b4c41f6f4ea6bcb3195f")
!980 = !{!981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197}
!981 = !DIEnumerator(name: "_SC_ARG_MAX", value: 0)
!982 = !DIEnumerator(name: "_SC_CHILD_MAX", value: 1)
!983 = !DIEnumerator(name: "_SC_CLK_TCK", value: 2)
!984 = !DIEnumerator(name: "_SC_NGROUPS_MAX", value: 3)
!985 = !DIEnumerator(name: "_SC_OPEN_MAX", value: 4)
!986 = !DIEnumerator(name: "_SC_STREAM_MAX", value: 5)
!987 = !DIEnumerator(name: "_SC_TZNAME_MAX", value: 6)
!988 = !DIEnumerator(name: "_SC_JOB_CONTROL", value: 7)
!989 = !DIEnumerator(name: "_SC_SAVED_IDS", value: 8)
!990 = !DIEnumerator(name: "_SC_REALTIME_SIGNALS", value: 9)
!991 = !DIEnumerator(name: "_SC_PRIORITY_SCHEDULING", value: 10)
!992 = !DIEnumerator(name: "_SC_TIMERS", value: 11)
!993 = !DIEnumerator(name: "_SC_ASYNCHRONOUS_IO", value: 12)
!994 = !DIEnumerator(name: "_SC_PRIORITIZED_IO", value: 13)
!995 = !DIEnumerator(name: "_SC_SYNCHRONIZED_IO", value: 14)
!996 = !DIEnumerator(name: "_SC_FSYNC", value: 15)
!997 = !DIEnumerator(name: "_SC_MAPPED_FILES", value: 16)
!998 = !DIEnumerator(name: "_SC_MEMLOCK", value: 17)
!999 = !DIEnumerator(name: "_SC_MEMLOCK_RANGE", value: 18)
!1000 = !DIEnumerator(name: "_SC_MEMORY_PROTECTION", value: 19)
!1001 = !DIEnumerator(name: "_SC_MESSAGE_PASSING", value: 20)
!1002 = !DIEnumerator(name: "_SC_SEMAPHORES", value: 21)
!1003 = !DIEnumerator(name: "_SC_SHARED_MEMORY_OBJECTS", value: 22)
!1004 = !DIEnumerator(name: "_SC_AIO_LISTIO_MAX", value: 23)
!1005 = !DIEnumerator(name: "_SC_AIO_MAX", value: 24)
!1006 = !DIEnumerator(name: "_SC_AIO_PRIO_DELTA_MAX", value: 25)
!1007 = !DIEnumerator(name: "_SC_DELAYTIMER_MAX", value: 26)
!1008 = !DIEnumerator(name: "_SC_MQ_OPEN_MAX", value: 27)
!1009 = !DIEnumerator(name: "_SC_MQ_PRIO_MAX", value: 28)
!1010 = !DIEnumerator(name: "_SC_VERSION", value: 29)
!1011 = !DIEnumerator(name: "_SC_PAGESIZE", value: 30)
!1012 = !DIEnumerator(name: "_SC_RTSIG_MAX", value: 31)
!1013 = !DIEnumerator(name: "_SC_SEM_NSEMS_MAX", value: 32)
!1014 = !DIEnumerator(name: "_SC_SEM_VALUE_MAX", value: 33)
!1015 = !DIEnumerator(name: "_SC_SIGQUEUE_MAX", value: 34)
!1016 = !DIEnumerator(name: "_SC_TIMER_MAX", value: 35)
!1017 = !DIEnumerator(name: "_SC_BC_BASE_MAX", value: 36)
!1018 = !DIEnumerator(name: "_SC_BC_DIM_MAX", value: 37)
!1019 = !DIEnumerator(name: "_SC_BC_SCALE_MAX", value: 38)
!1020 = !DIEnumerator(name: "_SC_BC_STRING_MAX", value: 39)
!1021 = !DIEnumerator(name: "_SC_COLL_WEIGHTS_MAX", value: 40)
!1022 = !DIEnumerator(name: "_SC_EQUIV_CLASS_MAX", value: 41)
!1023 = !DIEnumerator(name: "_SC_EXPR_NEST_MAX", value: 42)
!1024 = !DIEnumerator(name: "_SC_LINE_MAX", value: 43)
!1025 = !DIEnumerator(name: "_SC_RE_DUP_MAX", value: 44)
!1026 = !DIEnumerator(name: "_SC_CHARCLASS_NAME_MAX", value: 45)
!1027 = !DIEnumerator(name: "_SC_2_VERSION", value: 46)
!1028 = !DIEnumerator(name: "_SC_2_C_BIND", value: 47)
!1029 = !DIEnumerator(name: "_SC_2_C_DEV", value: 48)
!1030 = !DIEnumerator(name: "_SC_2_FORT_DEV", value: 49)
!1031 = !DIEnumerator(name: "_SC_2_FORT_RUN", value: 50)
!1032 = !DIEnumerator(name: "_SC_2_SW_DEV", value: 51)
!1033 = !DIEnumerator(name: "_SC_2_LOCALEDEF", value: 52)
!1034 = !DIEnumerator(name: "_SC_PII", value: 53)
!1035 = !DIEnumerator(name: "_SC_PII_XTI", value: 54)
!1036 = !DIEnumerator(name: "_SC_PII_SOCKET", value: 55)
!1037 = !DIEnumerator(name: "_SC_PII_INTERNET", value: 56)
!1038 = !DIEnumerator(name: "_SC_PII_OSI", value: 57)
!1039 = !DIEnumerator(name: "_SC_POLL", value: 58)
!1040 = !DIEnumerator(name: "_SC_SELECT", value: 59)
!1041 = !DIEnumerator(name: "_SC_UIO_MAXIOV", value: 60)
!1042 = !DIEnumerator(name: "_SC_IOV_MAX", value: 60)
!1043 = !DIEnumerator(name: "_SC_PII_INTERNET_STREAM", value: 61)
!1044 = !DIEnumerator(name: "_SC_PII_INTERNET_DGRAM", value: 62)
!1045 = !DIEnumerator(name: "_SC_PII_OSI_COTS", value: 63)
!1046 = !DIEnumerator(name: "_SC_PII_OSI_CLTS", value: 64)
!1047 = !DIEnumerator(name: "_SC_PII_OSI_M", value: 65)
!1048 = !DIEnumerator(name: "_SC_T_IOV_MAX", value: 66)
!1049 = !DIEnumerator(name: "_SC_THREADS", value: 67)
!1050 = !DIEnumerator(name: "_SC_THREAD_SAFE_FUNCTIONS", value: 68)
!1051 = !DIEnumerator(name: "_SC_GETGR_R_SIZE_MAX", value: 69)
!1052 = !DIEnumerator(name: "_SC_GETPW_R_SIZE_MAX", value: 70)
!1053 = !DIEnumerator(name: "_SC_LOGIN_NAME_MAX", value: 71)
!1054 = !DIEnumerator(name: "_SC_TTY_NAME_MAX", value: 72)
!1055 = !DIEnumerator(name: "_SC_THREAD_DESTRUCTOR_ITERATIONS", value: 73)
!1056 = !DIEnumerator(name: "_SC_THREAD_KEYS_MAX", value: 74)
!1057 = !DIEnumerator(name: "_SC_THREAD_STACK_MIN", value: 75)
!1058 = !DIEnumerator(name: "_SC_THREAD_THREADS_MAX", value: 76)
!1059 = !DIEnumerator(name: "_SC_THREAD_ATTR_STACKADDR", value: 77)
!1060 = !DIEnumerator(name: "_SC_THREAD_ATTR_STACKSIZE", value: 78)
!1061 = !DIEnumerator(name: "_SC_THREAD_PRIORITY_SCHEDULING", value: 79)
!1062 = !DIEnumerator(name: "_SC_THREAD_PRIO_INHERIT", value: 80)
!1063 = !DIEnumerator(name: "_SC_THREAD_PRIO_PROTECT", value: 81)
!1064 = !DIEnumerator(name: "_SC_THREAD_PROCESS_SHARED", value: 82)
!1065 = !DIEnumerator(name: "_SC_NPROCESSORS_CONF", value: 83)
!1066 = !DIEnumerator(name: "_SC_NPROCESSORS_ONLN", value: 84)
!1067 = !DIEnumerator(name: "_SC_PHYS_PAGES", value: 85)
!1068 = !DIEnumerator(name: "_SC_AVPHYS_PAGES", value: 86)
!1069 = !DIEnumerator(name: "_SC_ATEXIT_MAX", value: 87)
!1070 = !DIEnumerator(name: "_SC_PASS_MAX", value: 88)
!1071 = !DIEnumerator(name: "_SC_XOPEN_VERSION", value: 89)
!1072 = !DIEnumerator(name: "_SC_XOPEN_XCU_VERSION", value: 90)
!1073 = !DIEnumerator(name: "_SC_XOPEN_UNIX", value: 91)
!1074 = !DIEnumerator(name: "_SC_XOPEN_CRYPT", value: 92)
!1075 = !DIEnumerator(name: "_SC_XOPEN_ENH_I18N", value: 93)
!1076 = !DIEnumerator(name: "_SC_XOPEN_SHM", value: 94)
!1077 = !DIEnumerator(name: "_SC_2_CHAR_TERM", value: 95)
!1078 = !DIEnumerator(name: "_SC_2_C_VERSION", value: 96)
!1079 = !DIEnumerator(name: "_SC_2_UPE", value: 97)
!1080 = !DIEnumerator(name: "_SC_XOPEN_XPG2", value: 98)
!1081 = !DIEnumerator(name: "_SC_XOPEN_XPG3", value: 99)
!1082 = !DIEnumerator(name: "_SC_XOPEN_XPG4", value: 100)
!1083 = !DIEnumerator(name: "_SC_CHAR_BIT", value: 101)
!1084 = !DIEnumerator(name: "_SC_CHAR_MAX", value: 102)
!1085 = !DIEnumerator(name: "_SC_CHAR_MIN", value: 103)
!1086 = !DIEnumerator(name: "_SC_INT_MAX", value: 104)
!1087 = !DIEnumerator(name: "_SC_INT_MIN", value: 105)
!1088 = !DIEnumerator(name: "_SC_LONG_BIT", value: 106)
!1089 = !DIEnumerator(name: "_SC_WORD_BIT", value: 107)
!1090 = !DIEnumerator(name: "_SC_MB_LEN_MAX", value: 108)
!1091 = !DIEnumerator(name: "_SC_NZERO", value: 109)
!1092 = !DIEnumerator(name: "_SC_SSIZE_MAX", value: 110)
!1093 = !DIEnumerator(name: "_SC_SCHAR_MAX", value: 111)
!1094 = !DIEnumerator(name: "_SC_SCHAR_MIN", value: 112)
!1095 = !DIEnumerator(name: "_SC_SHRT_MAX", value: 113)
!1096 = !DIEnumerator(name: "_SC_SHRT_MIN", value: 114)
!1097 = !DIEnumerator(name: "_SC_UCHAR_MAX", value: 115)
!1098 = !DIEnumerator(name: "_SC_UINT_MAX", value: 116)
!1099 = !DIEnumerator(name: "_SC_ULONG_MAX", value: 117)
!1100 = !DIEnumerator(name: "_SC_USHRT_MAX", value: 118)
!1101 = !DIEnumerator(name: "_SC_NL_ARGMAX", value: 119)
!1102 = !DIEnumerator(name: "_SC_NL_LANGMAX", value: 120)
!1103 = !DIEnumerator(name: "_SC_NL_MSGMAX", value: 121)
!1104 = !DIEnumerator(name: "_SC_NL_NMAX", value: 122)
!1105 = !DIEnumerator(name: "_SC_NL_SETMAX", value: 123)
!1106 = !DIEnumerator(name: "_SC_NL_TEXTMAX", value: 124)
!1107 = !DIEnumerator(name: "_SC_XBS5_ILP32_OFF32", value: 125)
!1108 = !DIEnumerator(name: "_SC_XBS5_ILP32_OFFBIG", value: 126)
!1109 = !DIEnumerator(name: "_SC_XBS5_LP64_OFF64", value: 127)
!1110 = !DIEnumerator(name: "_SC_XBS5_LPBIG_OFFBIG", value: 128)
!1111 = !DIEnumerator(name: "_SC_XOPEN_LEGACY", value: 129)
!1112 = !DIEnumerator(name: "_SC_XOPEN_REALTIME", value: 130)
!1113 = !DIEnumerator(name: "_SC_XOPEN_REALTIME_THREADS", value: 131)
!1114 = !DIEnumerator(name: "_SC_ADVISORY_INFO", value: 132)
!1115 = !DIEnumerator(name: "_SC_BARRIERS", value: 133)
!1116 = !DIEnumerator(name: "_SC_BASE", value: 134)
!1117 = !DIEnumerator(name: "_SC_C_LANG_SUPPORT", value: 135)
!1118 = !DIEnumerator(name: "_SC_C_LANG_SUPPORT_R", value: 136)
!1119 = !DIEnumerator(name: "_SC_CLOCK_SELECTION", value: 137)
!1120 = !DIEnumerator(name: "_SC_CPUTIME", value: 138)
!1121 = !DIEnumerator(name: "_SC_THREAD_CPUTIME", value: 139)
!1122 = !DIEnumerator(name: "_SC_DEVICE_IO", value: 140)
!1123 = !DIEnumerator(name: "_SC_DEVICE_SPECIFIC", value: 141)
!1124 = !DIEnumerator(name: "_SC_DEVICE_SPECIFIC_R", value: 142)
!1125 = !DIEnumerator(name: "_SC_FD_MGMT", value: 143)
!1126 = !DIEnumerator(name: "_SC_FIFO", value: 144)
!1127 = !DIEnumerator(name: "_SC_PIPE", value: 145)
!1128 = !DIEnumerator(name: "_SC_FILE_ATTRIBUTES", value: 146)
!1129 = !DIEnumerator(name: "_SC_FILE_LOCKING", value: 147)
!1130 = !DIEnumerator(name: "_SC_FILE_SYSTEM", value: 148)
!1131 = !DIEnumerator(name: "_SC_MONOTONIC_CLOCK", value: 149)
!1132 = !DIEnumerator(name: "_SC_MULTI_PROCESS", value: 150)
!1133 = !DIEnumerator(name: "_SC_SINGLE_PROCESS", value: 151)
!1134 = !DIEnumerator(name: "_SC_NETWORKING", value: 152)
!1135 = !DIEnumerator(name: "_SC_READER_WRITER_LOCKS", value: 153)
!1136 = !DIEnumerator(name: "_SC_SPIN_LOCKS", value: 154)
!1137 = !DIEnumerator(name: "_SC_REGEXP", value: 155)
!1138 = !DIEnumerator(name: "_SC_REGEX_VERSION", value: 156)
!1139 = !DIEnumerator(name: "_SC_SHELL", value: 157)
!1140 = !DIEnumerator(name: "_SC_SIGNALS", value: 158)
!1141 = !DIEnumerator(name: "_SC_SPAWN", value: 159)
!1142 = !DIEnumerator(name: "_SC_SPORADIC_SERVER", value: 160)
!1143 = !DIEnumerator(name: "_SC_THREAD_SPORADIC_SERVER", value: 161)
!1144 = !DIEnumerator(name: "_SC_SYSTEM_DATABASE", value: 162)
!1145 = !DIEnumerator(name: "_SC_SYSTEM_DATABASE_R", value: 163)
!1146 = !DIEnumerator(name: "_SC_TIMEOUTS", value: 164)
!1147 = !DIEnumerator(name: "_SC_TYPED_MEMORY_OBJECTS", value: 165)
!1148 = !DIEnumerator(name: "_SC_USER_GROUPS", value: 166)
!1149 = !DIEnumerator(name: "_SC_USER_GROUPS_R", value: 167)
!1150 = !DIEnumerator(name: "_SC_2_PBS", value: 168)
!1151 = !DIEnumerator(name: "_SC_2_PBS_ACCOUNTING", value: 169)
!1152 = !DIEnumerator(name: "_SC_2_PBS_LOCATE", value: 170)
!1153 = !DIEnumerator(name: "_SC_2_PBS_MESSAGE", value: 171)
!1154 = !DIEnumerator(name: "_SC_2_PBS_TRACK", value: 172)
!1155 = !DIEnumerator(name: "_SC_SYMLOOP_MAX", value: 173)
!1156 = !DIEnumerator(name: "_SC_STREAMS", value: 174)
!1157 = !DIEnumerator(name: "_SC_2_PBS_CHECKPOINT", value: 175)
!1158 = !DIEnumerator(name: "_SC_V6_ILP32_OFF32", value: 176)
!1159 = !DIEnumerator(name: "_SC_V6_ILP32_OFFBIG", value: 177)
!1160 = !DIEnumerator(name: "_SC_V6_LP64_OFF64", value: 178)
!1161 = !DIEnumerator(name: "_SC_V6_LPBIG_OFFBIG", value: 179)
!1162 = !DIEnumerator(name: "_SC_HOST_NAME_MAX", value: 180)
!1163 = !DIEnumerator(name: "_SC_TRACE", value: 181)
!1164 = !DIEnumerator(name: "_SC_TRACE_EVENT_FILTER", value: 182)
!1165 = !DIEnumerator(name: "_SC_TRACE_INHERIT", value: 183)
!1166 = !DIEnumerator(name: "_SC_TRACE_LOG", value: 184)
!1167 = !DIEnumerator(name: "_SC_LEVEL1_ICACHE_SIZE", value: 185)
!1168 = !DIEnumerator(name: "_SC_LEVEL1_ICACHE_ASSOC", value: 186)
!1169 = !DIEnumerator(name: "_SC_LEVEL1_ICACHE_LINESIZE", value: 187)
!1170 = !DIEnumerator(name: "_SC_LEVEL1_DCACHE_SIZE", value: 188)
!1171 = !DIEnumerator(name: "_SC_LEVEL1_DCACHE_ASSOC", value: 189)
!1172 = !DIEnumerator(name: "_SC_LEVEL1_DCACHE_LINESIZE", value: 190)
!1173 = !DIEnumerator(name: "_SC_LEVEL2_CACHE_SIZE", value: 191)
!1174 = !DIEnumerator(name: "_SC_LEVEL2_CACHE_ASSOC", value: 192)
!1175 = !DIEnumerator(name: "_SC_LEVEL2_CACHE_LINESIZE", value: 193)
!1176 = !DIEnumerator(name: "_SC_LEVEL3_CACHE_SIZE", value: 194)
!1177 = !DIEnumerator(name: "_SC_LEVEL3_CACHE_ASSOC", value: 195)
!1178 = !DIEnumerator(name: "_SC_LEVEL3_CACHE_LINESIZE", value: 196)
!1179 = !DIEnumerator(name: "_SC_LEVEL4_CACHE_SIZE", value: 197)
!1180 = !DIEnumerator(name: "_SC_LEVEL4_CACHE_ASSOC", value: 198)
!1181 = !DIEnumerator(name: "_SC_LEVEL4_CACHE_LINESIZE", value: 199)
!1182 = !DIEnumerator(name: "_SC_IPV6", value: 235)
!1183 = !DIEnumerator(name: "_SC_RAW_SOCKETS", value: 236)
!1184 = !DIEnumerator(name: "_SC_V7_ILP32_OFF32", value: 237)
!1185 = !DIEnumerator(name: "_SC_V7_ILP32_OFFBIG", value: 238)
!1186 = !DIEnumerator(name: "_SC_V7_LP64_OFF64", value: 239)
!1187 = !DIEnumerator(name: "_SC_V7_LPBIG_OFFBIG", value: 240)
!1188 = !DIEnumerator(name: "_SC_SS_REPL_MAX", value: 241)
!1189 = !DIEnumerator(name: "_SC_TRACE_EVENT_NAME_MAX", value: 242)
!1190 = !DIEnumerator(name: "_SC_TRACE_NAME_MAX", value: 243)
!1191 = !DIEnumerator(name: "_SC_TRACE_SYS_MAX", value: 244)
!1192 = !DIEnumerator(name: "_SC_TRACE_USER_EVENT_MAX", value: 245)
!1193 = !DIEnumerator(name: "_SC_XOPEN_STREAMS", value: 246)
!1194 = !DIEnumerator(name: "_SC_THREAD_ROBUST_PRIO_INHERIT", value: 247)
!1195 = !DIEnumerator(name: "_SC_THREAD_ROBUST_PRIO_PROTECT", value: 248)
!1196 = !DIEnumerator(name: "_SC_MINSIGSTKSZ", value: 249)
!1197 = !DIEnumerator(name: "_SC_SIGSTKSZ", value: 250)
!1198 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__rlimit_resource", file: !1199, line: 31, baseType: !9, size: 32, elements: !1200)
!1199 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/resource.h", directory: "", checksumkind: CSK_MD5, checksum: "bb0bdc9e7ae341ef435e98e05276a863")
!1200 = !{!1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219}
!1201 = !DIEnumerator(name: "RLIMIT_CPU", value: 0)
!1202 = !DIEnumerator(name: "RLIMIT_FSIZE", value: 1)
!1203 = !DIEnumerator(name: "RLIMIT_DATA", value: 2)
!1204 = !DIEnumerator(name: "RLIMIT_STACK", value: 3)
!1205 = !DIEnumerator(name: "RLIMIT_CORE", value: 4)
!1206 = !DIEnumerator(name: "__RLIMIT_RSS", value: 5)
!1207 = !DIEnumerator(name: "RLIMIT_NOFILE", value: 7)
!1208 = !DIEnumerator(name: "__RLIMIT_OFILE", value: 7)
!1209 = !DIEnumerator(name: "RLIMIT_AS", value: 9)
!1210 = !DIEnumerator(name: "__RLIMIT_NPROC", value: 6)
!1211 = !DIEnumerator(name: "__RLIMIT_MEMLOCK", value: 8)
!1212 = !DIEnumerator(name: "__RLIMIT_LOCKS", value: 10)
!1213 = !DIEnumerator(name: "__RLIMIT_SIGPENDING", value: 11)
!1214 = !DIEnumerator(name: "__RLIMIT_MSGQUEUE", value: 12)
!1215 = !DIEnumerator(name: "__RLIMIT_NICE", value: 13)
!1216 = !DIEnumerator(name: "__RLIMIT_RTPRIO", value: 14)
!1217 = !DIEnumerator(name: "__RLIMIT_RTTIME", value: 15)
!1218 = !DIEnumerator(name: "__RLIMIT_NLIMITS", value: 16)
!1219 = !DIEnumerator(name: "__RLIM_NLIMITS", value: 16)
!1220 = !{!55, !9, !1221, !111, !52, !125, !1226}
!1221 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1222, line: 72, baseType: !1223)
!1222 = !DIFile(filename: "/usr/include/signal.h", directory: "", checksumkind: CSK_MD5, checksum: "331e107bf774bb600ec675d0db0b92ce")
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64)
!1224 = !DISubroutineType(types: !1225)
!1225 = !{null, !34}
!1226 = !DIDerivedType(tag: DW_TAG_typedef, name: "__rlim_t", file: !154, line: 157, baseType: !57)
!1227 = !{!948, !951, !953, !955, !957, !959, !1228, !1231, !1236, !1238, !1243, !1245, !1247, !1249, !1252, !1254, !1257, !1259, !1261, !1263, !1265, !1267, !1270, !1275, !961, !1277, !1279, !1281, !1283, !1285, !1287, !1289, !1291, !1296, !1298, !1300, !1302, !1304, !1306, !1308, !1310, !1312, !1314, !1316, !1318, !1320, !1322, !1325, !1327, !1329, !1331, !1333, !1335, !1337, !1339, !1341, !1343, !1345, !1347, !1349, !1351, !1353, !1355, !1357, !1359, !1361, !1363, !1366, !1368, !1371, !1373, !1375, !1377, !1379}
!1228 = !DIGlobalVariableExpression(var: !1229, expr: !DIExpression())
!1229 = distinct !DIGlobalVariable(scope: null, file: !950, line: 473, type: !1230, isLocal: true, isDefinition: true)
!1230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 176, elements: !337)
!1231 = !DIGlobalVariableExpression(var: !1232, expr: !DIExpression())
!1232 = distinct !DIGlobalVariable(scope: null, file: !950, line: 473, type: !1233, isLocal: true, isDefinition: true)
!1233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 344, elements: !1234)
!1234 = !{!1235}
!1235 = !DISubrange(count: 43)
!1236 = !DIGlobalVariableExpression(var: !1237, expr: !DIExpression())
!1237 = distinct !DIGlobalVariable(scope: null, file: !950, line: 477, type: !834, isLocal: true, isDefinition: true)
!1238 = !DIGlobalVariableExpression(var: !1239, expr: !DIExpression())
!1239 = distinct !DIGlobalVariable(scope: null, file: !950, line: 491, type: !1240, isLocal: true, isDefinition: true)
!1240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 384, elements: !1241)
!1241 = !{!1242}
!1242 = !DISubrange(count: 48)
!1243 = !DIGlobalVariableExpression(var: !1244, expr: !DIExpression())
!1244 = distinct !DIGlobalVariable(scope: null, file: !950, line: 505, type: !532, isLocal: true, isDefinition: true)
!1245 = !DIGlobalVariableExpression(var: !1246, expr: !DIExpression())
!1246 = distinct !DIGlobalVariable(scope: null, file: !950, line: 505, type: !297, isLocal: true, isDefinition: true)
!1247 = !DIGlobalVariableExpression(var: !1248, expr: !DIExpression())
!1248 = distinct !DIGlobalVariable(scope: null, file: !950, line: 513, type: !328, isLocal: true, isDefinition: true)
!1249 = !DIGlobalVariableExpression(var: !1250, expr: !DIExpression())
!1250 = distinct !DIGlobalVariable(scope: null, file: !950, line: 561, type: !1251, isLocal: true, isDefinition: true)
!1251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 144, elements: !576)
!1252 = !DIGlobalVariableExpression(var: !1253, expr: !DIExpression())
!1253 = distinct !DIGlobalVariable(scope: null, file: !950, line: 561, type: !630, isLocal: true, isDefinition: true)
!1254 = !DIGlobalVariableExpression(var: !1255, expr: !DIExpression())
!1255 = distinct !DIGlobalVariable(scope: null, file: !950, line: 564, type: !1256, isLocal: true, isDefinition: true)
!1256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 120, elements: !888)
!1257 = !DIGlobalVariableExpression(var: !1258, expr: !DIExpression())
!1258 = distinct !DIGlobalVariable(scope: null, file: !950, line: 564, type: !834, isLocal: true, isDefinition: true)
!1259 = !DIGlobalVariableExpression(var: !1260, expr: !DIExpression())
!1260 = distinct !DIGlobalVariable(scope: null, file: !950, line: 566, type: !887, isLocal: true, isDefinition: true)
!1261 = !DIGlobalVariableExpression(var: !1262, expr: !DIExpression())
!1262 = distinct !DIGlobalVariable(scope: null, file: !950, line: 572, type: !323, isLocal: true, isDefinition: true)
!1263 = !DIGlobalVariableExpression(var: !1264, expr: !DIExpression())
!1264 = distinct !DIGlobalVariable(scope: null, file: !950, line: 577, type: !146, isLocal: true, isDefinition: true)
!1265 = !DIGlobalVariableExpression(var: !1266, expr: !DIExpression())
!1266 = distinct !DIGlobalVariable(scope: null, file: !950, line: 579, type: !258, isLocal: true, isDefinition: true)
!1267 = !DIGlobalVariableExpression(var: !1268, expr: !DIExpression())
!1268 = distinct !DIGlobalVariable(scope: null, file: !950, line: 111, type: !1269, isLocal: true, isDefinition: true)
!1269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 96, elements: !269)
!1270 = !DIGlobalVariableExpression(var: !1271, expr: !DIExpression())
!1271 = distinct !DIGlobalVariable(scope: null, file: !950, line: 111, type: !1272, isLocal: true, isDefinition: true)
!1272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 184, elements: !1273)
!1273 = !{!1274}
!1274 = !DISubrange(count: 23)
!1275 = !DIGlobalVariableExpression(var: !1276, expr: !DIExpression())
!1276 = distinct !DIGlobalVariable(scope: null, file: !950, line: 45, type: !887, isLocal: true, isDefinition: true)
!1277 = !DIGlobalVariableExpression(var: !1278, expr: !DIExpression())
!1278 = distinct !DIGlobalVariable(scope: null, file: !950, line: 56, type: !560, isLocal: true, isDefinition: true)
!1279 = !DIGlobalVariableExpression(var: !1280, expr: !DIExpression())
!1280 = distinct !DIGlobalVariable(scope: null, file: !950, line: 56, type: !834, isLocal: true, isDefinition: true)
!1281 = !DIGlobalVariableExpression(var: !1282, expr: !DIExpression())
!1282 = distinct !DIGlobalVariable(scope: null, file: !950, line: 69, type: !881, isLocal: true, isDefinition: true)
!1283 = !DIGlobalVariableExpression(var: !1284, expr: !DIExpression())
!1284 = distinct !DIGlobalVariable(scope: null, file: !950, line: 69, type: !309, isLocal: true, isDefinition: true)
!1285 = !DIGlobalVariableExpression(var: !1286, expr: !DIExpression())
!1286 = distinct !DIGlobalVariable(scope: null, file: !950, line: 71, type: !408, isLocal: true, isDefinition: true)
!1287 = !DIGlobalVariableExpression(var: !1288, expr: !DIExpression())
!1288 = distinct !DIGlobalVariable(scope: null, file: !950, line: 334, type: !575, isLocal: true, isDefinition: true)
!1289 = !DIGlobalVariableExpression(var: !1290, expr: !DIExpression())
!1290 = distinct !DIGlobalVariable(scope: null, file: !950, line: 334, type: !605, isLocal: true, isDefinition: true)
!1291 = !DIGlobalVariableExpression(var: !1292, expr: !DIExpression())
!1292 = distinct !DIGlobalVariable(scope: null, file: !950, line: 345, type: !1293, isLocal: true, isDefinition: true)
!1293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 152, elements: !1294)
!1294 = !{!1295}
!1295 = !DISubrange(count: 19)
!1296 = !DIGlobalVariableExpression(var: !1297, expr: !DIExpression())
!1297 = distinct !DIGlobalVariable(scope: null, file: !950, line: 348, type: !369, isLocal: true, isDefinition: true)
!1298 = !DIGlobalVariableExpression(var: !1299, expr: !DIExpression())
!1299 = distinct !DIGlobalVariable(scope: null, file: !950, line: 351, type: !253, isLocal: true, isDefinition: true)
!1300 = !DIGlobalVariableExpression(var: !1301, expr: !DIExpression())
!1301 = distinct !DIGlobalVariable(scope: null, file: !950, line: 354, type: !275, isLocal: true, isDefinition: true)
!1302 = !DIGlobalVariableExpression(var: !1303, expr: !DIExpression())
!1303 = distinct !DIGlobalVariable(scope: null, file: !950, line: 357, type: !275, isLocal: true, isDefinition: true)
!1304 = !DIGlobalVariableExpression(var: !1305, expr: !DIExpression())
!1305 = distinct !DIGlobalVariable(scope: null, file: !950, line: 360, type: !146, isLocal: true, isDefinition: true)
!1306 = !DIGlobalVariableExpression(var: !1307, expr: !DIExpression())
!1307 = distinct !DIGlobalVariable(scope: null, file: !950, line: 364, type: !1272, isLocal: true, isDefinition: true)
!1308 = !DIGlobalVariableExpression(var: !1309, expr: !DIExpression())
!1309 = distinct !DIGlobalVariable(scope: null, file: !950, line: 369, type: !868, isLocal: true, isDefinition: true)
!1310 = !DIGlobalVariableExpression(var: !1311, expr: !DIExpression())
!1311 = distinct !DIGlobalVariable(scope: null, file: !950, line: 372, type: !309, isLocal: true, isDefinition: true)
!1312 = !DIGlobalVariableExpression(var: !1313, expr: !DIExpression())
!1313 = distinct !DIGlobalVariable(scope: null, file: !950, line: 374, type: !386, isLocal: true, isDefinition: true)
!1314 = !DIGlobalVariableExpression(var: !1315, expr: !DIExpression())
!1315 = distinct !DIGlobalVariable(scope: null, file: !950, line: 378, type: !1272, isLocal: true, isDefinition: true)
!1316 = !DIGlobalVariableExpression(var: !1317, expr: !DIExpression())
!1317 = distinct !DIGlobalVariable(scope: null, file: !950, line: 383, type: !258, isLocal: true, isDefinition: true)
!1318 = !DIGlobalVariableExpression(var: !1319, expr: !DIExpression())
!1319 = distinct !DIGlobalVariable(scope: null, file: !950, line: 278, type: !309, isLocal: true, isDefinition: true)
!1320 = !DIGlobalVariableExpression(var: !1321, expr: !DIExpression())
!1321 = distinct !DIGlobalVariable(scope: null, file: !950, line: 281, type: !323, isLocal: true, isDefinition: true)
!1322 = !DIGlobalVariableExpression(var: !1323, expr: !DIExpression())
!1323 = distinct !DIGlobalVariable(scope: null, file: !950, line: 286, type: !1324, isLocal: true, isDefinition: true)
!1324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 360, elements: !903)
!1325 = !DIGlobalVariableExpression(var: !1326, expr: !DIExpression())
!1326 = distinct !DIGlobalVariable(scope: null, file: !950, line: 298, type: !1324, isLocal: true, isDefinition: true)
!1327 = !DIGlobalVariableExpression(var: !1328, expr: !DIExpression())
!1328 = distinct !DIGlobalVariable(scope: null, file: !950, line: 178, type: !323, isLocal: true, isDefinition: true)
!1329 = !DIGlobalVariableExpression(var: !1330, expr: !DIExpression())
!1330 = distinct !DIGlobalVariable(scope: null, file: !950, line: 180, type: !309, isLocal: true, isDefinition: true)
!1331 = !DIGlobalVariableExpression(var: !1332, expr: !DIExpression())
!1332 = distinct !DIGlobalVariable(scope: null, file: !950, line: 185, type: !328, isLocal: true, isDefinition: true)
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(scope: null, file: !950, line: 188, type: !275, isLocal: true, isDefinition: true)
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(scope: null, file: !950, line: 191, type: !386, isLocal: true, isDefinition: true)
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(scope: null, file: !950, line: 200, type: !297, isLocal: true, isDefinition: true)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(scope: null, file: !950, line: 203, type: !328, isLocal: true, isDefinition: true)
!1341 = !DIGlobalVariableExpression(var: !1342, expr: !DIExpression())
!1342 = distinct !DIGlobalVariable(scope: null, file: !950, line: 213, type: !1233, isLocal: true, isDefinition: true)
!1343 = !DIGlobalVariableExpression(var: !1344, expr: !DIExpression())
!1344 = distinct !DIGlobalVariable(scope: null, file: !950, line: 218, type: !304, isLocal: true, isDefinition: true)
!1345 = !DIGlobalVariableExpression(var: !1346, expr: !DIExpression())
!1346 = distinct !DIGlobalVariable(scope: null, file: !950, line: 222, type: !403, isLocal: true, isDefinition: true)
!1347 = !DIGlobalVariableExpression(var: !1348, expr: !DIExpression())
!1348 = distinct !DIGlobalVariable(scope: null, file: !950, line: 239, type: !503, isLocal: true, isDefinition: true)
!1349 = !DIGlobalVariableExpression(var: !1350, expr: !DIExpression())
!1350 = distinct !DIGlobalVariable(scope: null, file: !950, line: 125, type: !369, isLocal: true, isDefinition: true)
!1351 = !DIGlobalVariableExpression(var: !1352, expr: !DIExpression())
!1352 = distinct !DIGlobalVariable(scope: null, file: !950, line: 126, type: !508, isLocal: true, isDefinition: true)
!1353 = !DIGlobalVariableExpression(var: !1354, expr: !DIExpression())
!1354 = distinct !DIGlobalVariable(scope: null, file: !950, line: 135, type: !369, isLocal: true, isDefinition: true)
!1355 = !DIGlobalVariableExpression(var: !1356, expr: !DIExpression())
!1356 = distinct !DIGlobalVariable(scope: null, file: !950, line: 138, type: !297, isLocal: true, isDefinition: true)
!1357 = !DIGlobalVariableExpression(var: !1358, expr: !DIExpression())
!1358 = distinct !DIGlobalVariable(scope: null, file: !950, line: 145, type: !1272, isLocal: true, isDefinition: true)
!1359 = !DIGlobalVariableExpression(var: !1360, expr: !DIExpression())
!1360 = distinct !DIGlobalVariable(scope: null, file: !950, line: 150, type: !290, isLocal: true, isDefinition: true)
!1361 = !DIGlobalVariableExpression(var: !1362, expr: !DIExpression())
!1362 = distinct !DIGlobalVariable(scope: null, file: !950, line: 152, type: !868, isLocal: true, isDefinition: true)
!1363 = !DIGlobalVariableExpression(var: !1364, expr: !DIExpression())
!1364 = distinct !DIGlobalVariable(scope: null, file: !950, line: 427, type: !1365, isLocal: true, isDefinition: true)
!1365 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 152, elements: !1294)
!1366 = !DIGlobalVariableExpression(var: !1367, expr: !DIExpression())
!1367 = distinct !DIGlobalVariable(scope: null, file: !950, line: 427, type: !427, isLocal: true, isDefinition: true)
!1368 = !DIGlobalVariableExpression(var: !1369, expr: !DIExpression())
!1369 = distinct !DIGlobalVariable(scope: null, file: !950, line: 398, type: !1370, isLocal: true, isDefinition: true)
!1370 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 232, elements: !835)
!1371 = !DIGlobalVariableExpression(var: !1372, expr: !DIExpression())
!1372 = distinct !DIGlobalVariable(scope: null, file: !950, line: 398, type: !248, isLocal: true, isDefinition: true)
!1373 = !DIGlobalVariableExpression(var: !1374, expr: !DIExpression())
!1374 = distinct !DIGlobalVariable(scope: null, file: !950, line: 409, type: !248, isLocal: true, isDefinition: true)
!1375 = !DIGlobalVariableExpression(var: !1376, expr: !DIExpression())
!1376 = distinct !DIGlobalVariable(scope: null, file: !950, line: 419, type: !881, isLocal: true, isDefinition: true)
!1377 = !DIGlobalVariableExpression(var: !1378, expr: !DIExpression())
!1378 = distinct !DIGlobalVariable(scope: null, file: !950, line: 419, type: !323, isLocal: true, isDefinition: true)
!1379 = !DIGlobalVariableExpression(var: !1380, expr: !DIExpression())
!1380 = distinct !DIGlobalVariable(name: "main_socket", scope: !963, file: !950, line: 547, type: !1381, isLocal: true, isDefinition: true)
!1381 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1382)
!1382 = !DIDerivedType(tag: DW_TAG_typedef, name: "sig_atomic_t", file: !1383, line: 8, baseType: !1384)
!1383 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/sig_atomic_t.h", directory: "", checksumkind: CSK_MD5, checksum: "d9236f7e3e7f10f53aa9d4cd97f503cf")
!1384 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sig_atomic_t", file: !154, line: 215, baseType: !34)
!1385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1386)
!1386 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_config_t", file: !7, line: 111, baseType: !1387)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_config_t_", file: !7, line: 266, size: 192, elements: !1388)
!1388 = !{!1389, !1390, !1391, !1392, !1393, !1394}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !1387, file: !7, line: 267, baseType: !52, size: 64)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive_timeout", scope: !1387, file: !7, line: 268, baseType: !125, size: 16, offset: 64)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "quiet", scope: !1387, file: !7, line: 269, baseType: !137, size: 8, offset: 80)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "reuse_port", scope: !1387, file: !7, line: 270, baseType: !137, size: 8, offset: 88)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1387, file: !7, line: 271, baseType: !9, size: 32, offset: 96)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "n_threads", scope: !1387, file: !7, line: 272, baseType: !125, size: 16, offset: 128)
!1395 = !DIGlobalVariableExpression(var: !1396, expr: !DIExpression())
!1396 = distinct !DIGlobalVariable(name: "redirect_module", scope: !1397, file: !1398, line: 64, type: !1402, isLocal: true, isDefinition: true)
!1397 = distinct !DISubprogram(name: "lwan_module_redirect", scope: !1398, file: !1398, line: 62, type: !1399, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1560, retainedNodes: !286)
!1398 = !DIFile(filename: "common/lwan-redirect.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "1614b421dd87198cc4b34905c0f8dd7e")
!1399 = !DISubroutineType(types: !1400)
!1400 = !{!1401}
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 64)
!1402 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1403)
!1403 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_module_t", file: !7, line: 104, baseType: !1404)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_module_t_", file: !7, line: 227, size: 384, elements: !1405)
!1405 = !{!1406, !1407, !1411, !1417, !1418, !1558}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1404, file: !7, line: 228, baseType: !205, size: 64)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1404, file: !7, line: 229, baseType: !1408, size: 64, offset: 64)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 64)
!1409 = !DISubroutineType(types: !1410)
!1410 = !{!111, !111}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "init_from_hash", scope: !1404, file: !7, line: 230, baseType: !1412, size: 64, offset: 128)
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 64)
!1413 = !DISubroutineType(types: !1414)
!1414 = !{!111, !1415}
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1416 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !128)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !1404, file: !7, line: 231, baseType: !115, size: 64, offset: 192)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !1404, file: !7, line: 232, baseType: !1419, size: 64, offset: 256)
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 64)
!1420 = !DISubroutineType(types: !1421)
!1421 = !{!6, !1422, !1557, !111}
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 64)
!1423 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_request_t", file: !7, line: 106, baseType: !1424)
!1424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_request_t_", file: !7, line: 206, size: 1280, elements: !1425)
!1425 = !{!1426, !1427, !1428, !1434, !1435, !1504, !1515, !1516, !1525}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1424, file: !7, line: 207, baseType: !32, size: 32)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1424, file: !7, line: 208, baseType: !34, size: 32, offset: 32)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "url", scope: !1424, file: !7, line: 209, baseType: !1429, size: 128, offset: 64)
!1429 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_value_t", file: !7, line: 110, baseType: !1430)
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_value_t_", file: !7, line: 191, size: 128, elements: !1431)
!1431 = !{!1432, !1433}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1430, file: !7, line: 192, baseType: !52, size: 64)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1430, file: !7, line: 193, baseType: !55, size: 64, offset: 64)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "original_url", scope: !1424, file: !7, line: 210, baseType: !1429, size: 128, offset: 192)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "conn", scope: !1424, file: !7, line: 211, baseType: !1436, size: 64, offset: 320)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 64)
!1437 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_connection_t", file: !7, line: 112, baseType: !1438)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_connection_t_", file: !7, line: 196, size: 256, elements: !1439)
!1439 = !{!1440, !1441, !1442, !1443, !1502, !1503}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1438, file: !7, line: 199, baseType: !65, size: 32)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "time_to_die", scope: !1438, file: !7, line: 200, baseType: !9, size: 32, offset: 32)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "coro", scope: !1438, file: !7, line: 201, baseType: !76, size: 64, offset: 64)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1438, file: !7, line: 202, baseType: !1444, size: 64, offset: 128)
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 64)
!1445 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_thread_t", file: !7, line: 108, baseType: !1446)
!1446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_thread_t_", file: !7, line: 253, size: 832, elements: !1447)
!1447 = !{!1448, !1493, !1499, !1500, !1501}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "lwan", scope: !1446, file: !7, line: 254, baseType: !1449, size: 64)
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 64)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_t", file: !7, line: 103, baseType: !1451)
!1451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_t_", file: !7, line: 275, size: 640, elements: !1452)
!1452 = !{!1453, !1474, !1475, !1481, !1482, !1492}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "url_map_trie", scope: !1451, file: !7, line: 276, baseType: !1454, size: 128)
!1454 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_t", file: !92, line: 25, baseType: !1455)
!1455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_t_", file: !92, line: 41, size: 128, elements: !1456)
!1456 = !{!1457, !1473}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1455, file: !92, line: 42, baseType: !1458, size: 64)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 64)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_node_t", file: !92, line: 26, baseType: !1460)
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_node_t_", file: !92, line: 29, size: 640, elements: !1461)
!1461 = !{!1462, !1464, !1472}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1460, file: !92, line: 30, baseType: !1463, size: 512)
!1463 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1458, size: 512, elements: !102)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !1460, file: !92, line: 31, baseType: !1465, size: 64, offset: 512)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64)
!1466 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_leaf_t", file: !92, line: 27, baseType: !1467)
!1467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_leaf_t_", file: !92, line: 35, size: 192, elements: !1468)
!1468 = !{!1469, !1470, !1471}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1467, file: !92, line: 36, baseType: !52, size: 64)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1467, file: !92, line: 37, baseType: !111, size: 64, offset: 64)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1467, file: !92, line: 38, baseType: !1465, size: 64, offset: 128)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !1460, file: !92, line: 32, baseType: !34, size: 32, offset: 576)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !1455, file: !92, line: 43, baseType: !115, size: 64, offset: 64)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "conns", scope: !1451, file: !7, line: 277, baseType: !1436, size: 64, offset: 128)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1451, file: !7, line: 283, baseType: !1476, size: 128, offset: 192)
!1476 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1451, file: !7, line: 279, size: 128, elements: !1477)
!1477 = !{!1478, !1479, !1480}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1476, file: !7, line: 280, baseType: !1444, size: 64)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "max_fd", scope: !1476, file: !7, line: 281, baseType: !9, size: 32, offset: 64)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1476, file: !7, line: 282, baseType: !125, size: 16, offset: 96)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "module_registry", scope: !1451, file: !7, line: 285, baseType: !127, size: 64, offset: 320)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1451, file: !7, line: 286, baseType: !1483, size: 192, offset: 384)
!1483 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_config_t", file: !7, line: 111, baseType: !1484)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_config_t_", file: !7, line: 266, size: 192, elements: !1485)
!1485 = !{!1486, !1487, !1488, !1489, !1490, !1491}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !1484, file: !7, line: 267, baseType: !52, size: 64)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive_timeout", scope: !1484, file: !7, line: 268, baseType: !125, size: 16, offset: 64)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "quiet", scope: !1484, file: !7, line: 269, baseType: !137, size: 8, offset: 80)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "reuse_port", scope: !1484, file: !7, line: 270, baseType: !137, size: 8, offset: 88)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1484, file: !7, line: 271, baseType: !9, size: 32, offset: 96)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "n_threads", scope: !1484, file: !7, line: 272, baseType: !125, size: 16, offset: 128)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "main_socket", scope: !1451, file: !7, line: 287, baseType: !34, size: 32, offset: 576)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !1446, file: !7, line: 259, baseType: !1494, size: 576, offset: 64)
!1494 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1446, file: !7, line: 255, size: 576, elements: !1495)
!1495 = !{!1496, !1497, !1498}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !1494, file: !7, line: 256, baseType: !146, size: 240)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1494, file: !7, line: 257, baseType: !146, size: 240, offset: 240)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1494, file: !7, line: 258, baseType: !151, size: 64, offset: 512)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_fd", scope: !1446, file: !7, line: 261, baseType: !34, size: 32, offset: 640)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_fd", scope: !1446, file: !7, line: 262, baseType: !158, size: 64, offset: 672)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !1446, file: !7, line: 263, baseType: !162, size: 64, offset: 768)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1438, file: !7, line: 203, baseType: !34, size: 32, offset: 192)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1438, file: !7, line: 203, baseType: !34, size: 32, offset: 224)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "query_params", scope: !1424, file: !7, line: 216, baseType: !1505, size: 128, offset: 384)
!1505 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1424, file: !7, line: 213, size: 128, elements: !1506)
!1506 = !{!1507, !1514}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1505, file: !7, line: 214, baseType: !1508, size: 64)
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 64)
!1509 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_key_value_t", file: !7, line: 105, baseType: !1510)
!1510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_key_value_t_", file: !7, line: 173, size: 128, elements: !1511)
!1511 = !{!1512, !1513}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1510, file: !7, line: 174, baseType: !52, size: 64)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1510, file: !7, line: 175, baseType: !52, size: 64, offset: 64)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1505, file: !7, line: 215, baseType: !55, size: 64, offset: 64)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "post_data", scope: !1424, file: !7, line: 216, baseType: !1505, size: 128, offset: 512)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1424, file: !7, line: 223, baseType: !1517, size: 192, offset: 640)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1424, file: !7, line: 217, size: 192, elements: !1518)
!1518 = !{!1519, !1520}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "if_modified_since", scope: !1517, file: !7, line: 218, baseType: !151, size: 64)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1517, file: !7, line: 222, baseType: !1521, size: 128, offset: 64)
!1521 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1517, file: !7, line: 219, size: 128, elements: !1522)
!1522 = !{!1523, !1524}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1521, file: !7, line: 220, baseType: !186, size: 64)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !1521, file: !7, line: 221, baseType: !186, size: 64, offset: 64)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !1424, file: !7, line: 224, baseType: !1526, size: 448, offset: 832)
!1526 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_response_t", file: !7, line: 107, baseType: !1527)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_response_t_", file: !7, line: 178, size: 448, elements: !1528)
!1528 = !{!1529, !1545, !1546, !1547, !1548}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1527, file: !7, line: 179, baseType: !1530, size: 64)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 64)
!1531 = !DIDerivedType(tag: DW_TAG_typedef, name: "strbuf_t", file: !197, line: 25, baseType: !1532)
!1532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "strbuf_t_", file: !197, line: 27, size: 256, elements: !1533)
!1533 = !{!1534, !1539, !1544}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1532, file: !197, line: 31, baseType: !1535, size: 64)
!1535 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1532, file: !197, line: 28, size: 64, elements: !1536)
!1536 = !{!1537, !1538}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1535, file: !197, line: 29, baseType: !52, size: 64)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "static_buffer", scope: !1535, file: !197, line: 30, baseType: !205, size: 64)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1532, file: !197, line: 34, baseType: !1540, size: 128, offset: 64)
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1532, file: !197, line: 32, size: 128, elements: !1541)
!1541 = !{!1542, !1543}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !1540, file: !197, line: 33, baseType: !55, size: 64)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1540, file: !197, line: 33, baseType: !55, size: 64, offset: 64)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1532, file: !197, line: 35, baseType: !9, size: 32, offset: 192)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !1527, file: !7, line: 180, baseType: !205, size: 64, offset: 64)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "content_length", scope: !1527, file: !7, line: 181, baseType: !55, size: 64, offset: 128)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "headers", scope: !1527, file: !7, line: 182, baseType: !1508, size: 64, offset: 192)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !1527, file: !7, line: 188, baseType: !1549, size: 192, offset: 256)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1527, file: !7, line: 184, size: 192, elements: !1550)
!1550 = !{!1551, !1555, !1556}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1549, file: !7, line: 185, baseType: !1552, size: 64)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64)
!1553 = !DISubroutineType(types: !1554)
!1554 = !{!6, !1422, !111}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1549, file: !7, line: 186, baseType: !111, size: 64, offset: 64)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !1549, file: !7, line: 187, baseType: !111, size: 64, offset: 128)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1404, file: !7, line: 233, baseType: !1559, size: 32, offset: 320)
!1559 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_handler_flags_t", file: !7, line: 143, baseType: !234)
!1560 = distinct !DICompileUnit(language: DW_LANG_C11, file: !1561, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1562, globals: !1563, splitDebugInlining: false, nameTableKind: None)
!1561 = !DIFile(filename: "/home/raj/lwan/common/lwan-redirect.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "1614b421dd87198cc4b34905c0f8dd7e")
!1562 = !{!8, !33, !66, !234}
!1563 = !{!1564, !1395, !1566, !1568}
!1564 = !DIGlobalVariableExpression(var: !1565, expr: !DIExpression())
!1565 = distinct !DIGlobalVariable(scope: null, file: !1398, line: 65, type: !868, isLocal: true, isDefinition: true)
!1566 = !DIGlobalVariableExpression(var: !1567, expr: !DIExpression())
!1567 = distinct !DIGlobalVariable(scope: null, file: !1398, line: 57, type: !280, isLocal: true, isDefinition: true)
!1568 = !DIGlobalVariableExpression(var: !1569, expr: !DIExpression())
!1569 = distinct !DIGlobalVariable(scope: null, file: !1398, line: 38, type: !868, isLocal: true, isDefinition: true)
!1570 = !DIGlobalVariableExpression(var: !1571, expr: !DIExpression())
!1571 = distinct !DIGlobalVariable(scope: null, file: !1572, line: 576, type: !290, isLocal: true, isDefinition: true)
!1572 = !DIFile(filename: "common/lwan-request.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "02ac00895b73c156aad4cf5abf728f5f")
!1573 = !DIGlobalVariableExpression(var: !1574, expr: !DIExpression())
!1574 = distinct !DIGlobalVariable(scope: null, file: !1572, line: 582, type: !547, isLocal: true, isDefinition: true)
!1575 = !DIGlobalVariableExpression(var: !1576, expr: !DIExpression())
!1576 = distinct !DIGlobalVariable(name: "sizes", scope: !1577, file: !1572, line: 91, type: !333, isLocal: true, isDefinition: true)
!1577 = distinct !DISubprogram(name: "identify_http_method", scope: !1572, file: !1572, line: 88, type: !1578, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!1578 = !DISubroutineType(types: !1579)
!1579 = !{!52, !1580, !52}
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 64)
!1581 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_request_t", file: !7, line: 106, baseType: !1582)
!1582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_request_t_", file: !7, line: 206, size: 1280, elements: !1583)
!1583 = !{!1584, !1585, !1586, !1592, !1593, !1662, !1673, !1674, !1683}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1582, file: !7, line: 207, baseType: !32, size: 32)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1582, file: !7, line: 208, baseType: !34, size: 32, offset: 32)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "url", scope: !1582, file: !7, line: 209, baseType: !1587, size: 128, offset: 64)
!1587 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_value_t", file: !7, line: 110, baseType: !1588)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_value_t_", file: !7, line: 191, size: 128, elements: !1589)
!1589 = !{!1590, !1591}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1588, file: !7, line: 192, baseType: !52, size: 64)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1588, file: !7, line: 193, baseType: !55, size: 64, offset: 64)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "original_url", scope: !1582, file: !7, line: 210, baseType: !1587, size: 128, offset: 192)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "conn", scope: !1582, file: !7, line: 211, baseType: !1594, size: 64, offset: 320)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 64)
!1595 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_connection_t", file: !7, line: 112, baseType: !1596)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_connection_t_", file: !7, line: 196, size: 256, elements: !1597)
!1597 = !{!1598, !1599, !1600, !1601, !1660, !1661}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1596, file: !7, line: 199, baseType: !65, size: 32)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "time_to_die", scope: !1596, file: !7, line: 200, baseType: !9, size: 32, offset: 32)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "coro", scope: !1596, file: !7, line: 201, baseType: !76, size: 64, offset: 64)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1596, file: !7, line: 202, baseType: !1602, size: 64, offset: 128)
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 64)
!1603 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_thread_t", file: !7, line: 108, baseType: !1604)
!1604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_thread_t_", file: !7, line: 253, size: 832, elements: !1605)
!1605 = !{!1606, !1651, !1657, !1658, !1659}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "lwan", scope: !1604, file: !7, line: 254, baseType: !1607, size: 64)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64)
!1608 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_t", file: !7, line: 103, baseType: !1609)
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_t_", file: !7, line: 275, size: 640, elements: !1610)
!1610 = !{!1611, !1632, !1633, !1639, !1640, !1650}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "url_map_trie", scope: !1609, file: !7, line: 276, baseType: !1612, size: 128)
!1612 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_t", file: !92, line: 25, baseType: !1613)
!1613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_t_", file: !92, line: 41, size: 128, elements: !1614)
!1614 = !{!1615, !1631}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1613, file: !92, line: 42, baseType: !1616, size: 64)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 64)
!1617 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_node_t", file: !92, line: 26, baseType: !1618)
!1618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_node_t_", file: !92, line: 29, size: 640, elements: !1619)
!1619 = !{!1620, !1622, !1630}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1618, file: !92, line: 30, baseType: !1621, size: 512)
!1621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1616, size: 512, elements: !102)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !1618, file: !92, line: 31, baseType: !1623, size: 64, offset: 512)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64)
!1624 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_leaf_t", file: !92, line: 27, baseType: !1625)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_leaf_t_", file: !92, line: 35, size: 192, elements: !1626)
!1626 = !{!1627, !1628, !1629}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1625, file: !92, line: 36, baseType: !52, size: 64)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1625, file: !92, line: 37, baseType: !111, size: 64, offset: 64)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1625, file: !92, line: 38, baseType: !1623, size: 64, offset: 128)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !1618, file: !92, line: 32, baseType: !34, size: 32, offset: 576)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !1613, file: !92, line: 43, baseType: !115, size: 64, offset: 64)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "conns", scope: !1609, file: !7, line: 277, baseType: !1594, size: 64, offset: 128)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1609, file: !7, line: 283, baseType: !1634, size: 128, offset: 192)
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1609, file: !7, line: 279, size: 128, elements: !1635)
!1635 = !{!1636, !1637, !1638}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1634, file: !7, line: 280, baseType: !1602, size: 64)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "max_fd", scope: !1634, file: !7, line: 281, baseType: !9, size: 32, offset: 64)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1634, file: !7, line: 282, baseType: !125, size: 16, offset: 96)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "module_registry", scope: !1609, file: !7, line: 285, baseType: !127, size: 64, offset: 320)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1609, file: !7, line: 286, baseType: !1641, size: 192, offset: 384)
!1641 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_config_t", file: !7, line: 111, baseType: !1642)
!1642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_config_t_", file: !7, line: 266, size: 192, elements: !1643)
!1643 = !{!1644, !1645, !1646, !1647, !1648, !1649}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !1642, file: !7, line: 267, baseType: !52, size: 64)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive_timeout", scope: !1642, file: !7, line: 268, baseType: !125, size: 16, offset: 64)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "quiet", scope: !1642, file: !7, line: 269, baseType: !137, size: 8, offset: 80)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "reuse_port", scope: !1642, file: !7, line: 270, baseType: !137, size: 8, offset: 88)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1642, file: !7, line: 271, baseType: !9, size: 32, offset: 96)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "n_threads", scope: !1642, file: !7, line: 272, baseType: !125, size: 16, offset: 128)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "main_socket", scope: !1609, file: !7, line: 287, baseType: !34, size: 32, offset: 576)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !1604, file: !7, line: 259, baseType: !1652, size: 576, offset: 64)
!1652 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1604, file: !7, line: 255, size: 576, elements: !1653)
!1653 = !{!1654, !1655, !1656}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !1652, file: !7, line: 256, baseType: !146, size: 240)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1652, file: !7, line: 257, baseType: !146, size: 240, offset: 240)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1652, file: !7, line: 258, baseType: !151, size: 64, offset: 512)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_fd", scope: !1604, file: !7, line: 261, baseType: !34, size: 32, offset: 640)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_fd", scope: !1604, file: !7, line: 262, baseType: !158, size: 64, offset: 672)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !1604, file: !7, line: 263, baseType: !162, size: 64, offset: 768)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1596, file: !7, line: 203, baseType: !34, size: 32, offset: 192)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1596, file: !7, line: 203, baseType: !34, size: 32, offset: 224)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "query_params", scope: !1582, file: !7, line: 216, baseType: !1663, size: 128, offset: 384)
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1582, file: !7, line: 213, size: 128, elements: !1664)
!1664 = !{!1665, !1672}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1663, file: !7, line: 214, baseType: !1666, size: 64)
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 64)
!1667 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_key_value_t", file: !7, line: 105, baseType: !1668)
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_key_value_t_", file: !7, line: 173, size: 128, elements: !1669)
!1669 = !{!1670, !1671}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1668, file: !7, line: 174, baseType: !52, size: 64)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1668, file: !7, line: 175, baseType: !52, size: 64, offset: 64)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1663, file: !7, line: 215, baseType: !55, size: 64, offset: 64)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "post_data", scope: !1582, file: !7, line: 216, baseType: !1663, size: 128, offset: 512)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1582, file: !7, line: 223, baseType: !1675, size: 192, offset: 640)
!1675 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1582, file: !7, line: 217, size: 192, elements: !1676)
!1676 = !{!1677, !1678}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "if_modified_since", scope: !1675, file: !7, line: 218, baseType: !151, size: 64)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1675, file: !7, line: 222, baseType: !1679, size: 128, offset: 64)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1675, file: !7, line: 219, size: 128, elements: !1680)
!1680 = !{!1681, !1682}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1679, file: !7, line: 220, baseType: !186, size: 64)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !1679, file: !7, line: 221, baseType: !186, size: 64, offset: 64)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !1582, file: !7, line: 224, baseType: !1684, size: 448, offset: 832)
!1684 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_response_t", file: !7, line: 107, baseType: !1685)
!1685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_response_t_", file: !7, line: 178, size: 448, elements: !1686)
!1686 = !{!1687, !1703, !1704, !1705, !1706}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1685, file: !7, line: 179, baseType: !1688, size: 64)
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 64)
!1689 = !DIDerivedType(tag: DW_TAG_typedef, name: "strbuf_t", file: !197, line: 25, baseType: !1690)
!1690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "strbuf_t_", file: !197, line: 27, size: 256, elements: !1691)
!1691 = !{!1692, !1697, !1702}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1690, file: !197, line: 31, baseType: !1693, size: 64)
!1693 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1690, file: !197, line: 28, size: 64, elements: !1694)
!1694 = !{!1695, !1696}
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1693, file: !197, line: 29, baseType: !52, size: 64)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "static_buffer", scope: !1693, file: !197, line: 30, baseType: !205, size: 64)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1690, file: !197, line: 34, baseType: !1698, size: 128, offset: 64)
!1698 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1690, file: !197, line: 32, size: 128, elements: !1699)
!1699 = !{!1700, !1701}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !1698, file: !197, line: 33, baseType: !55, size: 64)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1698, file: !197, line: 33, baseType: !55, size: 64, offset: 64)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1690, file: !197, line: 35, baseType: !9, size: 32, offset: 192)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !1685, file: !7, line: 180, baseType: !205, size: 64, offset: 64)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "content_length", scope: !1685, file: !7, line: 181, baseType: !55, size: 64, offset: 128)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "headers", scope: !1685, file: !7, line: 182, baseType: !1666, size: 64, offset: 192)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !1685, file: !7, line: 188, baseType: !1707, size: 192, offset: 256)
!1707 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1685, file: !7, line: 184, size: 192, elements: !1708)
!1708 = !{!1709, !1713, !1714}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1707, file: !7, line: 185, baseType: !1710, size: 64)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 64)
!1711 = !DISubroutineType(types: !1712)
!1712 = !{!6, !1580, !111}
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1707, file: !7, line: 186, baseType: !111, size: 64, offset: 64)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !1707, file: !7, line: 187, baseType: !111, size: 64, offset: 128)
!1715 = distinct !DICompileUnit(language: DW_LANG_C11, file: !1716, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1717, retainedTypes: !1777, globals: !1824, splitDebugInlining: false, nameTableKind: None)
!1716 = !DIFile(filename: "/home/raj/lwan/common/lwan-request.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "02ac00895b73c156aad4cf5abf728f5f")
!1717 = !{!66, !33, !8, !234, !1718, !1724, !1729, !1737, !1768}
!1718 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1572, line: 34, baseType: !9, size: 32, elements: !1719)
!1719 = !{!1720, !1721, !1722, !1723}
!1720 = !DIEnumerator(name: "FINALIZER_DONE", value: 0)
!1721 = !DIEnumerator(name: "FINALIZER_TRY_AGAIN", value: 1)
!1722 = !DIEnumerator(name: "FINALIZER_YIELD_TRY_AGAIN", value: 2)
!1723 = !DIEnumerator(name: "FINALIZER_ERROR_TOO_LARGE", value: 3)
!1724 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7, line: 167, baseType: !34, size: 32, elements: !1725)
!1725 = !{!1726, !1727, !1728}
!1726 = !DIEnumerator(name: "CONN_CORO_ABORT", value: -1)
!1727 = !DIEnumerator(name: "CONN_CORO_MAY_RESUME", value: 0)
!1728 = !DIEnumerator(name: "CONN_CORO_FINISHED", value: 1)
!1729 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !1730, file: !1572, line: 69, baseType: !9, size: 32, elements: !1733)
!1730 = distinct !DISubprogram(name: "get_http_method", scope: !1572, file: !1572, line: 66, type: !1731, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!1731 = !DISubroutineType(types: !1732)
!1732 = !{!32, !52}
!1733 = !{!1734, !1735, !1736}
!1734 = !DIEnumerator(name: "HTTP_STR_GET", value: 542393671)
!1735 = !DIEnumerator(name: "HTTP_STR_HEAD", value: 1145128264)
!1736 = !DIEnumerator(name: "HTTP_STR_POST", value: 1414745936)
!1737 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !1738, file: !1572, line: 303, baseType: !9, size: 32, elements: !1757)
!1738 = distinct !DISubprogram(name: "parse_headers", scope: !1572, file: !1572, line: 301, type: !1739, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!1739 = !DISubroutineType(types: !1740)
!1740 = !{!52, !1741, !52, !52}
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 64)
!1742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_parser_helper", file: !1572, line: 41, size: 1344, elements: !1743)
!1743 = !{!1744, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1742, file: !1572, line: 42, baseType: !1745, size: 64)
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 64)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !1742, file: !1572, line: 43, baseType: !52, size: 64, offset: 64)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "accept_encoding", scope: !1742, file: !1572, line: 44, baseType: !1587, size: 128, offset: 128)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "if_modified_since", scope: !1742, file: !1572, line: 45, baseType: !1587, size: 128, offset: 256)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1742, file: !1572, line: 46, baseType: !1587, size: 128, offset: 384)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "query_string", scope: !1742, file: !1572, line: 48, baseType: !1587, size: 128, offset: 512)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "fragment", scope: !1742, file: !1572, line: 49, baseType: !1587, size: 128, offset: 640)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "content_length", scope: !1742, file: !1572, line: 50, baseType: !1587, size: 128, offset: 768)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "post_data", scope: !1742, file: !1572, line: 51, baseType: !1587, size: 128, offset: 896)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "content_type", scope: !1742, file: !1572, line: 53, baseType: !1587, size: 128, offset: 1024)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "authorization", scope: !1742, file: !1572, line: 54, baseType: !1587, size: 128, offset: 1152)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "connection", scope: !1742, file: !1572, line: 55, baseType: !53, size: 8, offset: 1280)
!1757 = !{!1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767}
!1758 = !DIEnumerator(name: "HTTP_HDR_REQUEST_END", value: 2573)
!1759 = !DIEnumerator(name: "HTTP_HDR_ENCODING", value: 1668179245)
!1760 = !DIEnumerator(name: "HTTP_HDR_LENGTH", value: 1852140589)
!1761 = !DIEnumerator(name: "HTTP_HDR_TYPE", value: 1887007789)
!1762 = !DIEnumerator(name: "HTTP_HDR_ACCEPT", value: 1701012321)
!1763 = !DIEnumerator(name: "HTTP_HDR_AUTHORIZATION", value: 1752462689)
!1764 = !DIEnumerator(name: "HTTP_HDR_CONNECTION", value: 1852731235)
!1765 = !DIEnumerator(name: "HTTP_HDR_CONTENT", value: 1953394531)
!1766 = !DIEnumerator(name: "HTTP_HDR_IF_MODIFIED_SINCE", value: 1831691881)
!1767 = !DIEnumerator(name: "HTTP_HDR_RANGE", value: 1735287154)
!1768 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !1769, file: !1572, line: 430, baseType: !9, size: 32, elements: !1772)
!1769 = distinct !DISubprogram(name: "parse_accept_encoding", scope: !1572, file: !1572, line: 425, type: !1770, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!1770 = !DISubroutineType(types: !1771)
!1771 = !{null, !1580, !1741}
!1772 = !{!1773, !1774, !1775, !1776}
!1773 = !DIEnumerator(name: "ENCODING_DEFL1", value: 1818649956)
!1774 = !DIEnumerator(name: "ENCODING_DEFL2", value: 1717920800)
!1775 = !DIEnumerator(name: "ENCODING_GZIP1", value: 1885960807)
!1776 = !DIEnumerator(name: "ENCODING_GZIP2", value: 1769629472)
!1777 = !{!34, !1778, !1779, !1787, !1803, !55, !57, !53, !1666}
!1778 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !56, line: 35, baseType: !155)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 64)
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !1781, line: 180, size: 128, elements: !1782)
!1781 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket.h", directory: "", checksumkind: CSK_MD5, checksum: "e3826be048699664d9ef7b080f62f2e0")
!1782 = !{!1783, !1786}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !1780, file: !1781, line: 182, baseType: !1784, size: 16)
!1784 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !1785, line: 28, baseType: !125)
!1785 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sockaddr.h", directory: "", checksumkind: CSK_MD5, checksum: "dd7f1d9dd6e26f88d1726905ed5d9ff5")
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !1780, file: !1781, line: 183, baseType: !297, size: 112, offset: 16)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in", file: !1789, line: 245, size: 128, elements: !1790)
!1789 = !DIFile(filename: "/usr/include/netinet/in.h", directory: "", checksumkind: CSK_MD5, checksum: "eb6560f10d4cfe9f30fea2c92b9da0fd")
!1790 = !{!1791, !1792, !1796, !1801}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "sin_family", scope: !1788, file: !1789, line: 247, baseType: !1784, size: 16)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "sin_port", scope: !1788, file: !1789, line: 248, baseType: !1793, size: 16, offset: 16)
!1793 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_port_t", file: !1789, line: 123, baseType: !1794)
!1794 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !485, line: 25, baseType: !1795)
!1795 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !154, line: 40, baseType: !125)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !1788, file: !1789, line: 249, baseType: !1797, size: 32, offset: 32)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !1789, line: 31, size: 32, elements: !1798)
!1798 = !{!1799}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !1797, file: !1789, line: 33, baseType: !1800, size: 32)
!1800 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_addr_t", file: !1789, line: 30, baseType: !484)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "sin_zero", scope: !1788, file: !1789, line: 252, baseType: !1802, size: 64, offset: 64)
!1802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !432, size: 64, elements: !102)
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 64)
!1804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in6", file: !1789, line: 260, size: 224, elements: !1805)
!1805 = !{!1806, !1807, !1808, !1809, !1823}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_family", scope: !1804, file: !1789, line: 262, baseType: !1784, size: 16)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_port", scope: !1804, file: !1789, line: 263, baseType: !1793, size: 16, offset: 16)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_flowinfo", scope: !1804, file: !1789, line: 264, baseType: !484, size: 32, offset: 32)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_addr", scope: !1804, file: !1789, line: 265, baseType: !1810, size: 128, offset: 64)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !1789, line: 219, size: 128, elements: !1811)
!1811 = !{!1812}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "__in6_u", scope: !1810, file: !1789, line: 226, baseType: !1813, size: 128)
!1813 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1810, file: !1789, line: 221, size: 128, elements: !1814)
!1814 = !{!1815, !1819, !1821}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr8", scope: !1813, file: !1789, line: 223, baseType: !1816, size: 128)
!1816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1817, size: 128, elements: !504)
!1817 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !485, line: 24, baseType: !1818)
!1818 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !154, line: 38, baseType: !432)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr16", scope: !1813, file: !1789, line: 224, baseType: !1820, size: 128)
!1820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1794, size: 128, elements: !102)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr32", scope: !1813, file: !1789, line: 225, baseType: !1822, size: 128)
!1822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !484, size: 128, elements: !365)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_scope_id", scope: !1804, file: !1789, line: 266, baseType: !484, size: 32, offset: 192)
!1824 = !{!1570, !1573, !1575, !1825, !1830, !1835, !1837, !1839, !1841, !1843, !1845}
!1825 = !DIGlobalVariableExpression(var: !1826, expr: !DIExpression())
!1826 = distinct !DIGlobalVariable(name: "minimal_request_line_len", scope: !1827, file: !1572, line: 225, type: !490, isLocal: true, isDefinition: true)
!1827 = distinct !DISubprogram(name: "identify_http_path", scope: !1572, file: !1572, line: 222, type: !1828, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!1828 = !DISubroutineType(types: !1829)
!1829 = !{!52, !1580, !52, !1741}
!1830 = !DIGlobalVariableExpression(var: !1831, expr: !DIExpression())
!1831 = distinct !DIGlobalVariable(scope: null, file: !1572, line: 179, type: !1832, isLocal: true, isDefinition: true)
!1832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 8, elements: !1833)
!1833 = !{!1834}
!1834 = !DISubrange(count: 1)
!1835 = !DIGlobalVariableExpression(var: !1836, expr: !DIExpression())
!1836 = distinct !DIGlobalVariable(scope: null, file: !1572, line: 386, type: !304, isLocal: true, isDefinition: true)
!1837 = !DIGlobalVariableExpression(var: !1838, expr: !DIExpression())
!1838 = distinct !DIGlobalVariable(scope: null, file: !1572, line: 403, type: !323, isLocal: true, isDefinition: true)
!1839 = !DIGlobalVariableExpression(var: !1840, expr: !DIExpression())
!1840 = distinct !DIGlobalVariable(scope: null, file: !1572, line: 409, type: !275, isLocal: true, isDefinition: true)
!1841 = !DIGlobalVariableExpression(var: !1842, expr: !DIExpression())
!1842 = distinct !DIGlobalVariable(scope: null, file: !1572, line: 412, type: !290, isLocal: true, isDefinition: true)
!1843 = !DIGlobalVariableExpression(var: !1844, expr: !DIExpression())
!1844 = distinct !DIGlobalVariable(scope: null, file: !1572, line: 415, type: !290, isLocal: true, isDefinition: true)
!1845 = !DIGlobalVariableExpression(var: !1846, expr: !DIExpression())
!1846 = distinct !DIGlobalVariable(name: "content_type", scope: !1847, file: !1572, line: 210, type: !1848, isLocal: true, isDefinition: true)
!1847 = distinct !DISubprogram(name: "parse_post_data", scope: !1572, file: !1572, line: 208, type: !1770, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!1848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 272, elements: !616)
!1849 = !DIGlobalVariableExpression(var: !1850, expr: !DIExpression())
!1850 = distinct !DIGlobalVariable(name: "error_descriptor", scope: !1851, file: !1852, line: 67, type: !2127, isLocal: true, isDefinition: true)
!1851 = distinct !DISubprogram(name: "lwan_response_init", scope: !1852, file: !1852, line: 65, type: !1853, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1855, retainedNodes: !286)
!1852 = !DIFile(filename: "common/lwan-response.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "01cc1c0717cf554caf1186c7b49ddf10")
!1853 = !DISubroutineType(types: !1854)
!1854 = !{null}
!1855 = distinct !DICompileUnit(language: DW_LANG_C11, file: !1856, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1857, retainedTypes: !1882, globals: !1898, splitDebugInlining: false, nameTableKind: None)
!1856 = !DIFile(filename: "/home/raj/lwan/common/lwan-response.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "01cc1c0717cf554caf1186c7b49ddf10")
!1857 = !{!33, !66, !8, !1724, !1858}
!1858 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1781, line: 202, baseType: !9, size: 32, elements: !1859)
!1859 = !{!1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881}
!1860 = !DIEnumerator(name: "MSG_OOB", value: 1)
!1861 = !DIEnumerator(name: "MSG_PEEK", value: 2)
!1862 = !DIEnumerator(name: "MSG_DONTROUTE", value: 4)
!1863 = !DIEnumerator(name: "MSG_TRYHARD", value: 4)
!1864 = !DIEnumerator(name: "MSG_CTRUNC", value: 8)
!1865 = !DIEnumerator(name: "MSG_PROXY", value: 16)
!1866 = !DIEnumerator(name: "MSG_TRUNC", value: 32)
!1867 = !DIEnumerator(name: "MSG_DONTWAIT", value: 64)
!1868 = !DIEnumerator(name: "MSG_EOR", value: 128)
!1869 = !DIEnumerator(name: "MSG_WAITALL", value: 256)
!1870 = !DIEnumerator(name: "MSG_FIN", value: 512)
!1871 = !DIEnumerator(name: "MSG_SYN", value: 1024)
!1872 = !DIEnumerator(name: "MSG_CONFIRM", value: 2048)
!1873 = !DIEnumerator(name: "MSG_RST", value: 4096)
!1874 = !DIEnumerator(name: "MSG_ERRQUEUE", value: 8192)
!1875 = !DIEnumerator(name: "MSG_NOSIGNAL", value: 16384)
!1876 = !DIEnumerator(name: "MSG_MORE", value: 32768)
!1877 = !DIEnumerator(name: "MSG_WAITFORONE", value: 65536)
!1878 = !DIEnumerator(name: "MSG_BATCH", value: 262144)
!1879 = !DIEnumerator(name: "MSG_ZEROCOPY", value: 67108864)
!1880 = !DIEnumerator(name: "MSG_FASTOPEN", value: 536870912)
!1881 = !DIEnumerator(name: "MSG_CMSG_CLOEXEC", value: 1073741824)
!1882 = !{!1883, !55, !52}
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64)
!1884 = !DIDerivedType(tag: DW_TAG_typedef, name: "strbuf_t", file: !197, line: 25, baseType: !1885)
!1885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "strbuf_t_", file: !197, line: 27, size: 256, elements: !1886)
!1886 = !{!1887, !1892, !1897}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1885, file: !197, line: 31, baseType: !1888, size: 64)
!1888 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1885, file: !197, line: 28, size: 64, elements: !1889)
!1889 = !{!1890, !1891}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1888, file: !197, line: 29, baseType: !52, size: 64)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "static_buffer", scope: !1888, file: !197, line: 30, baseType: !205, size: 64)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1885, file: !197, line: 34, baseType: !1893, size: 128, offset: 64)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1885, file: !197, line: 32, size: 128, elements: !1894)
!1894 = !{!1895, !1896}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !1893, file: !197, line: 33, baseType: !55, size: 64)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1893, file: !197, line: 33, baseType: !55, size: 64, offset: 64)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1885, file: !197, line: 35, baseType: !9, size: 32, offset: 192)
!1898 = !{!1899, !1901, !1849, !1903, !1905, !1907, !1909, !1911, !1913, !1915, !1918, !1920, !1922, !1924, !1926, !1928, !1930, !1932, !1934, !1936, !1938, !1940, !1942, !1944, !1946, !1948, !1950, !1952, !1954, !1956, !1958, !1960, !2086, !2088, !2090, !2092, !2094, !2096, !2098, !2104, !2109, !2111, !2113, !2115, !2117, !2119, !2121, !2123, !2125}
!1899 = !DIGlobalVariableExpression(var: !1900, expr: !DIExpression())
!1900 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 68, type: !297, isLocal: true, isDefinition: true)
!1901 = !DIGlobalVariableExpression(var: !1902, expr: !DIExpression())
!1902 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 69, type: !316, isLocal: true, isDefinition: true)
!1903 = !DIGlobalVariableExpression(var: !1904, expr: !DIExpression())
!1904 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 73, type: !503, isLocal: true, isDefinition: true)
!1905 = !DIGlobalVariableExpression(var: !1906, expr: !DIExpression())
!1906 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 73, type: !374, isLocal: true, isDefinition: true)
!1907 = !DIGlobalVariableExpression(var: !1908, expr: !DIExpression())
!1908 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 73, type: !630, isLocal: true, isDefinition: true)
!1909 = !DIGlobalVariableExpression(var: !1910, expr: !DIExpression())
!1910 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 75, type: !1365, isLocal: true, isDefinition: true)
!1911 = !DIGlobalVariableExpression(var: !1912, expr: !DIExpression())
!1912 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 75, type: !146, isLocal: true, isDefinition: true)
!1913 = !DIGlobalVariableExpression(var: !1914, expr: !DIExpression())
!1914 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 79, type: !408, isLocal: true, isDefinition: true)
!1915 = !DIGlobalVariableExpression(var: !1916, expr: !DIExpression())
!1916 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 85, type: !1917, isLocal: true, isDefinition: true)
!1917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 184, elements: !1273)
!1918 = !DIGlobalVariableExpression(var: !1919, expr: !DIExpression())
!1919 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 85, type: !1272, isLocal: true, isDefinition: true)
!1920 = !DIGlobalVariableExpression(var: !1921, expr: !DIExpression())
!1921 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 86, type: !887, isLocal: true, isDefinition: true)
!1922 = !DIGlobalVariableExpression(var: !1923, expr: !DIExpression())
!1923 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 86, type: !1848, isLocal: true, isDefinition: true)
!1924 = !DIGlobalVariableExpression(var: !1925, expr: !DIExpression())
!1925 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 136, type: !532, isLocal: true, isDefinition: true)
!1926 = !DIGlobalVariableExpression(var: !1927, expr: !DIExpression())
!1927 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 136, type: !570, isLocal: true, isDefinition: true)
!1928 = !DIGlobalVariableExpression(var: !1929, expr: !DIExpression())
!1929 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 184, type: !248, isLocal: true, isDefinition: true)
!1930 = !DIGlobalVariableExpression(var: !1931, expr: !DIExpression())
!1931 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 242, type: !248, isLocal: true, isDefinition: true)
!1932 = !DIGlobalVariableExpression(var: !1933, expr: !DIExpression())
!1933 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 244, type: !248, isLocal: true, isDefinition: true)
!1934 = !DIGlobalVariableExpression(var: !1935, expr: !DIExpression())
!1935 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 248, type: !834, isLocal: true, isDefinition: true)
!1936 = !DIGlobalVariableExpression(var: !1937, expr: !DIExpression())
!1937 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 252, type: !1293, isLocal: true, isDefinition: true)
!1938 = !DIGlobalVariableExpression(var: !1939, expr: !DIExpression())
!1939 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 259, type: !518, isLocal: true, isDefinition: true)
!1940 = !DIGlobalVariableExpression(var: !1941, expr: !DIExpression())
!1941 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 263, type: !309, isLocal: true, isDefinition: true)
!1942 = !DIGlobalVariableExpression(var: !1943, expr: !DIExpression())
!1943 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 265, type: !263, isLocal: true, isDefinition: true)
!1944 = !DIGlobalVariableExpression(var: !1945, expr: !DIExpression())
!1945 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 271, type: !323, isLocal: true, isDefinition: true)
!1946 = !DIGlobalVariableExpression(var: !1947, expr: !DIExpression())
!1947 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 273, type: !290, isLocal: true, isDefinition: true)
!1948 = !DIGlobalVariableExpression(var: !1949, expr: !DIExpression())
!1949 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 275, type: !275, isLocal: true, isDefinition: true)
!1950 = !DIGlobalVariableExpression(var: !1951, expr: !DIExpression())
!1951 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 290, type: !518, isLocal: true, isDefinition: true)
!1952 = !DIGlobalVariableExpression(var: !1953, expr: !DIExpression())
!1953 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 291, type: !623, isLocal: true, isDefinition: true)
!1954 = !DIGlobalVariableExpression(var: !1955, expr: !DIExpression())
!1955 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 299, type: !868, isLocal: true, isDefinition: true)
!1956 = !DIGlobalVariableExpression(var: !1957, expr: !DIExpression())
!1957 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 304, type: !268, isLocal: true, isDefinition: true)
!1958 = !DIGlobalVariableExpression(var: !1959, expr: !DIExpression())
!1959 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 308, type: !263, isLocal: true, isDefinition: true)
!1960 = !DIGlobalVariableExpression(var: !1961, expr: !DIExpression())
!1961 = distinct !DIGlobalVariable(name: "last_chunk", scope: !1962, file: !1852, line: 352, type: !2085, isLocal: true, isDefinition: true)
!1962 = distinct !DISubprogram(name: "lwan_response_send_chunk", scope: !1852, file: !1852, line: 343, type: !1963, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1855, retainedNodes: !286)
!1963 = !DISubroutineType(types: !1964)
!1964 = !{null, !1965}
!1965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 64)
!1966 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_request_t", file: !7, line: 106, baseType: !1967)
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_request_t_", file: !7, line: 206, size: 1280, elements: !1968)
!1968 = !{!1969, !1970, !1971, !1977, !1978, !2047, !2058, !2059, !2068}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1967, file: !7, line: 207, baseType: !32, size: 32)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1967, file: !7, line: 208, baseType: !34, size: 32, offset: 32)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "url", scope: !1967, file: !7, line: 209, baseType: !1972, size: 128, offset: 64)
!1972 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_value_t", file: !7, line: 110, baseType: !1973)
!1973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_value_t_", file: !7, line: 191, size: 128, elements: !1974)
!1974 = !{!1975, !1976}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1973, file: !7, line: 192, baseType: !52, size: 64)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1973, file: !7, line: 193, baseType: !55, size: 64, offset: 64)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "original_url", scope: !1967, file: !7, line: 210, baseType: !1972, size: 128, offset: 192)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "conn", scope: !1967, file: !7, line: 211, baseType: !1979, size: 64, offset: 320)
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1980, size: 64)
!1980 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_connection_t", file: !7, line: 112, baseType: !1981)
!1981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_connection_t_", file: !7, line: 196, size: 256, elements: !1982)
!1982 = !{!1983, !1984, !1985, !1986, !2045, !2046}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1981, file: !7, line: 199, baseType: !65, size: 32)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "time_to_die", scope: !1981, file: !7, line: 200, baseType: !9, size: 32, offset: 32)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "coro", scope: !1981, file: !7, line: 201, baseType: !76, size: 64, offset: 64)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1981, file: !7, line: 202, baseType: !1987, size: 64, offset: 128)
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 64)
!1988 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_thread_t", file: !7, line: 108, baseType: !1989)
!1989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_thread_t_", file: !7, line: 253, size: 832, elements: !1990)
!1990 = !{!1991, !2036, !2042, !2043, !2044}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "lwan", scope: !1989, file: !7, line: 254, baseType: !1992, size: 64)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!1993 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_t", file: !7, line: 103, baseType: !1994)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_t_", file: !7, line: 275, size: 640, elements: !1995)
!1995 = !{!1996, !2017, !2018, !2024, !2025, !2035}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "url_map_trie", scope: !1994, file: !7, line: 276, baseType: !1997, size: 128)
!1997 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_t", file: !92, line: 25, baseType: !1998)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_t_", file: !92, line: 41, size: 128, elements: !1999)
!1999 = !{!2000, !2016}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1998, file: !92, line: 42, baseType: !2001, size: 64)
!2001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2002, size: 64)
!2002 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_node_t", file: !92, line: 26, baseType: !2003)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_node_t_", file: !92, line: 29, size: 640, elements: !2004)
!2004 = !{!2005, !2007, !2015}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2003, file: !92, line: 30, baseType: !2006, size: 512)
!2006 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2001, size: 512, elements: !102)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !2003, file: !92, line: 31, baseType: !2008, size: 64, offset: 512)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 64)
!2009 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_leaf_t", file: !92, line: 27, baseType: !2010)
!2010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_leaf_t_", file: !92, line: 35, size: 192, elements: !2011)
!2011 = !{!2012, !2013, !2014}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2010, file: !92, line: 36, baseType: !52, size: 64)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2010, file: !92, line: 37, baseType: !111, size: 64, offset: 64)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2010, file: !92, line: 38, baseType: !2008, size: 64, offset: 128)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !2003, file: !92, line: 32, baseType: !34, size: 32, offset: 576)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !1998, file: !92, line: 43, baseType: !115, size: 64, offset: 64)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "conns", scope: !1994, file: !7, line: 277, baseType: !1979, size: 64, offset: 128)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1994, file: !7, line: 283, baseType: !2019, size: 128, offset: 192)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1994, file: !7, line: 279, size: 128, elements: !2020)
!2020 = !{!2021, !2022, !2023}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !2019, file: !7, line: 280, baseType: !1987, size: 64)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "max_fd", scope: !2019, file: !7, line: 281, baseType: !9, size: 32, offset: 64)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2019, file: !7, line: 282, baseType: !125, size: 16, offset: 96)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "module_registry", scope: !1994, file: !7, line: 285, baseType: !127, size: 64, offset: 320)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1994, file: !7, line: 286, baseType: !2026, size: 192, offset: 384)
!2026 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_config_t", file: !7, line: 111, baseType: !2027)
!2027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_config_t_", file: !7, line: 266, size: 192, elements: !2028)
!2028 = !{!2029, !2030, !2031, !2032, !2033, !2034}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !2027, file: !7, line: 267, baseType: !52, size: 64)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive_timeout", scope: !2027, file: !7, line: 268, baseType: !125, size: 16, offset: 64)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "quiet", scope: !2027, file: !7, line: 269, baseType: !137, size: 8, offset: 80)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "reuse_port", scope: !2027, file: !7, line: 270, baseType: !137, size: 8, offset: 88)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2027, file: !7, line: 271, baseType: !9, size: 32, offset: 96)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "n_threads", scope: !2027, file: !7, line: 272, baseType: !125, size: 16, offset: 128)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "main_socket", scope: !1994, file: !7, line: 287, baseType: !34, size: 32, offset: 576)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !1989, file: !7, line: 259, baseType: !2037, size: 576, offset: 64)
!2037 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1989, file: !7, line: 255, size: 576, elements: !2038)
!2038 = !{!2039, !2040, !2041}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !2037, file: !7, line: 256, baseType: !146, size: 240)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2037, file: !7, line: 257, baseType: !146, size: 240, offset: 240)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !2037, file: !7, line: 258, baseType: !151, size: 64, offset: 512)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_fd", scope: !1989, file: !7, line: 261, baseType: !34, size: 32, offset: 640)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_fd", scope: !1989, file: !7, line: 262, baseType: !158, size: 64, offset: 672)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !1989, file: !7, line: 263, baseType: !162, size: 64, offset: 768)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1981, file: !7, line: 203, baseType: !34, size: 32, offset: 192)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1981, file: !7, line: 203, baseType: !34, size: 32, offset: 224)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "query_params", scope: !1967, file: !7, line: 216, baseType: !2048, size: 128, offset: 384)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1967, file: !7, line: 213, size: 128, elements: !2049)
!2049 = !{!2050, !2057}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2048, file: !7, line: 214, baseType: !2051, size: 64)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 64)
!2052 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_key_value_t", file: !7, line: 105, baseType: !2053)
!2053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_key_value_t_", file: !7, line: 173, size: 128, elements: !2054)
!2054 = !{!2055, !2056}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2053, file: !7, line: 174, baseType: !52, size: 64)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2053, file: !7, line: 175, baseType: !52, size: 64, offset: 64)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2048, file: !7, line: 215, baseType: !55, size: 64, offset: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "post_data", scope: !1967, file: !7, line: 216, baseType: !2048, size: 128, offset: 512)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1967, file: !7, line: 223, baseType: !2060, size: 192, offset: 640)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1967, file: !7, line: 217, size: 192, elements: !2061)
!2061 = !{!2062, !2063}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "if_modified_since", scope: !2060, file: !7, line: 218, baseType: !151, size: 64)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2060, file: !7, line: 222, baseType: !2064, size: 128, offset: 64)
!2064 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2060, file: !7, line: 219, size: 128, elements: !2065)
!2065 = !{!2066, !2067}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !2064, file: !7, line: 220, baseType: !186, size: 64)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !2064, file: !7, line: 221, baseType: !186, size: 64, offset: 64)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !1967, file: !7, line: 224, baseType: !2069, size: 448, offset: 832)
!2069 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_response_t", file: !7, line: 107, baseType: !2070)
!2070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_response_t_", file: !7, line: 178, size: 448, elements: !2071)
!2071 = !{!2072, !2073, !2074, !2075, !2076}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2070, file: !7, line: 179, baseType: !1883, size: 64)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !2070, file: !7, line: 180, baseType: !205, size: 64, offset: 64)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "content_length", scope: !2070, file: !7, line: 181, baseType: !55, size: 64, offset: 128)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "headers", scope: !2070, file: !7, line: 182, baseType: !2051, size: 64, offset: 192)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !2070, file: !7, line: 188, baseType: !2077, size: 192, offset: 256)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2070, file: !7, line: 184, size: 192, elements: !2078)
!2078 = !{!2079, !2083, !2084}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2077, file: !7, line: 185, baseType: !2080, size: 64)
!2080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 64)
!2081 = !DISubroutineType(types: !2082)
!2082 = !{!6, !1965, !111}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2077, file: !7, line: 186, baseType: !111, size: 64, offset: 64)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !2077, file: !7, line: 187, baseType: !111, size: 64, offset: 128)
!2085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 48, elements: !370)
!2086 = !DIGlobalVariableExpression(var: !2087, expr: !DIExpression())
!2087 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 358, type: !369, isLocal: true, isDefinition: true)
!2088 = !DIGlobalVariableExpression(var: !2089, expr: !DIExpression())
!2089 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 366, type: !280, isLocal: true, isDefinition: true)
!2090 = !DIGlobalVariableExpression(var: !2091, expr: !DIExpression())
!2091 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 391, type: !1251, isLocal: true, isDefinition: true)
!2092 = !DIGlobalVariableExpression(var: !2093, expr: !DIExpression())
!2093 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 416, type: !275, isLocal: true, isDefinition: true)
!2094 = !DIGlobalVariableExpression(var: !2095, expr: !DIExpression())
!2095 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 431, type: !323, isLocal: true, isDefinition: true)
!2096 = !DIGlobalVariableExpression(var: !2097, expr: !DIExpression())
!2097 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 441, type: !290, isLocal: true, isDefinition: true)
!2098 = !DIGlobalVariableExpression(var: !2099, expr: !DIExpression())
!2099 = distinct !DIGlobalVariable(name: "error_template", scope: !1855, file: !1852, line: 32, type: !2100, isLocal: true, isDefinition: true)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 64)
!2101 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_tpl_t", file: !2102, line: 25, baseType: !2103)
!2102 = !DIFile(filename: "common/lwan-template.h", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "1f1d0e1deded933cc0657e991f0859fe")
!2103 = !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_tpl_t_", file: !2102, line: 25, flags: DIFlagFwdDecl)
!2104 = !DIGlobalVariableExpression(var: !2105, expr: !DIExpression())
!2105 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 34, type: !2106, isLocal: true, isDefinition: true)
!2106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 8888, elements: !2107)
!2107 = !{!2108}
!2108 = !DISubrange(count: 1111)
!2109 = !DIGlobalVariableExpression(var: !2110, expr: !DIExpression())
!2110 = distinct !DIGlobalVariable(name: "error_template_str", scope: !1855, file: !1852, line: 34, type: !205, isLocal: true, isDefinition: true)
!2111 = !DIGlobalVariableExpression(var: !2112, expr: !DIExpression())
!2112 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 108, type: !1269, isLocal: true, isDefinition: true)
!2113 = !DIGlobalVariableExpression(var: !2114, expr: !DIExpression())
!2114 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 108, type: !146, isLocal: true, isDefinition: true)
!2115 = !DIGlobalVariableExpression(var: !2116, expr: !DIExpression())
!2116 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 108, type: !547, isLocal: true, isDefinition: true)
!2117 = !DIGlobalVariableExpression(var: !2118, expr: !DIExpression())
!2118 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 108, type: !547, isLocal: true, isDefinition: true)
!2119 = !DIGlobalVariableExpression(var: !2120, expr: !DIExpression())
!2120 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 95, type: !547, isLocal: true, isDefinition: true)
!2121 = !DIGlobalVariableExpression(var: !2122, expr: !DIExpression())
!2122 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 97, type: !290, isLocal: true, isDefinition: true)
!2123 = !DIGlobalVariableExpression(var: !2124, expr: !DIExpression())
!2124 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 99, type: !290, isLocal: true, isDefinition: true)
!2125 = !DIGlobalVariableExpression(var: !2126, expr: !DIExpression())
!2126 = distinct !DIGlobalVariable(scope: null, file: !1852, line: 100, type: !275, isLocal: true, isDefinition: true)
!2127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2128, size: 1152, elements: !281)
!2128 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_var_descriptor_t", file: !2102, line: 26, baseType: !2129)
!2129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_var_descriptor_t_", file: !2102, line: 30, size: 384, elements: !2130)
!2130 = !{!2131, !2132, !2134, !2138, !2142, !2147}
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2129, file: !2102, line: 31, baseType: !205, size: 64)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2129, file: !2102, line: 32, baseType: !2133, size: 64, offset: 64)
!2133 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !186)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "append_to_strbuf", scope: !2129, file: !2102, line: 34, baseType: !2135, size: 64, offset: 128)
!2135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2136, size: 64)
!2136 = !DISubroutineType(types: !2137)
!2137 = !{null, !1883, !111}
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "get_is_empty", scope: !2129, file: !2102, line: 35, baseType: !2139, size: 64, offset: 192)
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 64)
!2140 = !DISubroutineType(types: !2141)
!2141 = !{!137, !111}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "generator", scope: !2129, file: !2102, line: 37, baseType: !2143, size: 64, offset: 256)
!2143 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_tpl_list_generator_t", file: !2102, line: 28, baseType: !2144)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 64)
!2145 = !DISubroutineType(types: !2146)
!2146 = !{!34, !76}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "list_desc", scope: !2129, file: !2102, line: 38, baseType: !2148, size: 64, offset: 320)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 64)
!2149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2128)
!2150 = !DIGlobalVariableExpression(var: !2151, expr: !DIExpression())
!2151 = distinct !DIGlobalVariable(name: "serve_files", scope: !2152, file: !2153, line: 1011, type: !2157, isLocal: true, isDefinition: true)
!2152 = distinct !DISubprogram(name: "lwan_module_serve_files", scope: !2153, file: !2153, line: 1009, type: !2154, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2308, retainedNodes: !286)
!2153 = !DIFile(filename: "common/lwan-serve-files.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "800b7015121bf02dbd7f42c60f7a26e9")
!2154 = !DISubroutineType(types: !2155)
!2155 = !{!2156}
!2156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2157, size: 64)
!2157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2158)
!2158 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_module_t", file: !7, line: 104, baseType: !2159)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_module_t_", file: !7, line: 227, size: 384, elements: !2160)
!2160 = !{!2161, !2162, !2163, !2164, !2165, !2307}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2159, file: !7, line: 228, baseType: !205, size: 64)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2159, file: !7, line: 229, baseType: !1408, size: 64, offset: 64)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "init_from_hash", scope: !2159, file: !7, line: 230, baseType: !1412, size: 64, offset: 128)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !2159, file: !7, line: 231, baseType: !115, size: 64, offset: 192)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !2159, file: !7, line: 232, baseType: !2166, size: 64, offset: 256)
!2166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 64)
!2167 = !DISubroutineType(types: !2168)
!2168 = !{!6, !2169, !2306, !111}
!2169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2170, size: 64)
!2170 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_request_t", file: !7, line: 106, baseType: !2171)
!2171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_request_t_", file: !7, line: 206, size: 1280, elements: !2172)
!2172 = !{!2173, !2174, !2175, !2181, !2182, !2251, !2262, !2263, !2274}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2171, file: !7, line: 207, baseType: !32, size: 32)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !2171, file: !7, line: 208, baseType: !34, size: 32, offset: 32)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "url", scope: !2171, file: !7, line: 209, baseType: !2176, size: 128, offset: 64)
!2176 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_value_t", file: !7, line: 110, baseType: !2177)
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_value_t_", file: !7, line: 191, size: 128, elements: !2178)
!2178 = !{!2179, !2180}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2177, file: !7, line: 192, baseType: !52, size: 64)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2177, file: !7, line: 193, baseType: !55, size: 64, offset: 64)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "original_url", scope: !2171, file: !7, line: 210, baseType: !2176, size: 128, offset: 192)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "conn", scope: !2171, file: !7, line: 211, baseType: !2183, size: 64, offset: 320)
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 64)
!2184 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_connection_t", file: !7, line: 112, baseType: !2185)
!2185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_connection_t_", file: !7, line: 196, size: 256, elements: !2186)
!2186 = !{!2187, !2188, !2189, !2190, !2249, !2250}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2185, file: !7, line: 199, baseType: !65, size: 32)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "time_to_die", scope: !2185, file: !7, line: 200, baseType: !9, size: 32, offset: 32)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "coro", scope: !2185, file: !7, line: 201, baseType: !76, size: 64, offset: 64)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2185, file: !7, line: 202, baseType: !2191, size: 64, offset: 128)
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 64)
!2192 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_thread_t", file: !7, line: 108, baseType: !2193)
!2193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_thread_t_", file: !7, line: 253, size: 832, elements: !2194)
!2194 = !{!2195, !2240, !2246, !2247, !2248}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "lwan", scope: !2193, file: !7, line: 254, baseType: !2196, size: 64)
!2196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2197, size: 64)
!2197 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_t", file: !7, line: 103, baseType: !2198)
!2198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_t_", file: !7, line: 275, size: 640, elements: !2199)
!2199 = !{!2200, !2221, !2222, !2228, !2229, !2239}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "url_map_trie", scope: !2198, file: !7, line: 276, baseType: !2201, size: 128)
!2201 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_t", file: !92, line: 25, baseType: !2202)
!2202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_t_", file: !92, line: 41, size: 128, elements: !2203)
!2203 = !{!2204, !2220}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2202, file: !92, line: 42, baseType: !2205, size: 64)
!2205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2206, size: 64)
!2206 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_node_t", file: !92, line: 26, baseType: !2207)
!2207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_node_t_", file: !92, line: 29, size: 640, elements: !2208)
!2208 = !{!2209, !2211, !2219}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2207, file: !92, line: 30, baseType: !2210, size: 512)
!2210 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2205, size: 512, elements: !102)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !2207, file: !92, line: 31, baseType: !2212, size: 64, offset: 512)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 64)
!2213 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_leaf_t", file: !92, line: 27, baseType: !2214)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_leaf_t_", file: !92, line: 35, size: 192, elements: !2215)
!2215 = !{!2216, !2217, !2218}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2214, file: !92, line: 36, baseType: !52, size: 64)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2214, file: !92, line: 37, baseType: !111, size: 64, offset: 64)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2214, file: !92, line: 38, baseType: !2212, size: 64, offset: 128)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !2207, file: !92, line: 32, baseType: !34, size: 32, offset: 576)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !2202, file: !92, line: 43, baseType: !115, size: 64, offset: 64)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "conns", scope: !2198, file: !7, line: 277, baseType: !2183, size: 64, offset: 128)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2198, file: !7, line: 283, baseType: !2223, size: 128, offset: 192)
!2223 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2198, file: !7, line: 279, size: 128, elements: !2224)
!2224 = !{!2225, !2226, !2227}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !2223, file: !7, line: 280, baseType: !2191, size: 64)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "max_fd", scope: !2223, file: !7, line: 281, baseType: !9, size: 32, offset: 64)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2223, file: !7, line: 282, baseType: !125, size: 16, offset: 96)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "module_registry", scope: !2198, file: !7, line: 285, baseType: !127, size: 64, offset: 320)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2198, file: !7, line: 286, baseType: !2230, size: 192, offset: 384)
!2230 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_config_t", file: !7, line: 111, baseType: !2231)
!2231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_config_t_", file: !7, line: 266, size: 192, elements: !2232)
!2232 = !{!2233, !2234, !2235, !2236, !2237, !2238}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !2231, file: !7, line: 267, baseType: !52, size: 64)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive_timeout", scope: !2231, file: !7, line: 268, baseType: !125, size: 16, offset: 64)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "quiet", scope: !2231, file: !7, line: 269, baseType: !137, size: 8, offset: 80)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "reuse_port", scope: !2231, file: !7, line: 270, baseType: !137, size: 8, offset: 88)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2231, file: !7, line: 271, baseType: !9, size: 32, offset: 96)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "n_threads", scope: !2231, file: !7, line: 272, baseType: !125, size: 16, offset: 128)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "main_socket", scope: !2198, file: !7, line: 287, baseType: !34, size: 32, offset: 576)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !2193, file: !7, line: 259, baseType: !2241, size: 576, offset: 64)
!2241 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2193, file: !7, line: 255, size: 576, elements: !2242)
!2242 = !{!2243, !2244, !2245}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !2241, file: !7, line: 256, baseType: !146, size: 240)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2241, file: !7, line: 257, baseType: !146, size: 240, offset: 240)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !2241, file: !7, line: 258, baseType: !151, size: 64, offset: 512)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_fd", scope: !2193, file: !7, line: 261, baseType: !34, size: 32, offset: 640)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_fd", scope: !2193, file: !7, line: 262, baseType: !158, size: 64, offset: 672)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !2193, file: !7, line: 263, baseType: !162, size: 64, offset: 768)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2185, file: !7, line: 203, baseType: !34, size: 32, offset: 192)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2185, file: !7, line: 203, baseType: !34, size: 32, offset: 224)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "query_params", scope: !2171, file: !7, line: 216, baseType: !2252, size: 128, offset: 384)
!2252 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2171, file: !7, line: 213, size: 128, elements: !2253)
!2253 = !{!2254, !2261}
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2252, file: !7, line: 214, baseType: !2255, size: 64)
!2255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 64)
!2256 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_key_value_t", file: !7, line: 105, baseType: !2257)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_key_value_t_", file: !7, line: 173, size: 128, elements: !2258)
!2258 = !{!2259, !2260}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2257, file: !7, line: 174, baseType: !52, size: 64)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2257, file: !7, line: 175, baseType: !52, size: 64, offset: 64)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2252, file: !7, line: 215, baseType: !55, size: 64, offset: 64)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "post_data", scope: !2171, file: !7, line: 216, baseType: !2252, size: 128, offset: 512)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2171, file: !7, line: 223, baseType: !2264, size: 192, offset: 640)
!2264 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2171, file: !7, line: 217, size: 192, elements: !2265)
!2265 = !{!2266, !2267}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "if_modified_since", scope: !2264, file: !7, line: 218, baseType: !151, size: 64)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2264, file: !7, line: 222, baseType: !2268, size: 128, offset: 64)
!2268 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2264, file: !7, line: 219, size: 128, elements: !2269)
!2269 = !{!2270, !2273}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !2268, file: !7, line: 220, baseType: !2271, size: 64)
!2271 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !2272, line: 56, baseType: !188)
!2272 = !DIFile(filename: "/usr/include/fcntl.h", directory: "", checksumkind: CSK_MD5, checksum: "1a9bb91818c37dc7bc291ca6e49fc221")
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !2268, file: !7, line: 221, baseType: !2271, size: 64, offset: 64)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !2171, file: !7, line: 224, baseType: !2275, size: 448, offset: 832)
!2275 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_response_t", file: !7, line: 107, baseType: !2276)
!2276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_response_t_", file: !7, line: 178, size: 448, elements: !2277)
!2277 = !{!2278, !2294, !2295, !2296, !2297}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2276, file: !7, line: 179, baseType: !2279, size: 64)
!2279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2280, size: 64)
!2280 = !DIDerivedType(tag: DW_TAG_typedef, name: "strbuf_t", file: !197, line: 25, baseType: !2281)
!2281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "strbuf_t_", file: !197, line: 27, size: 256, elements: !2282)
!2282 = !{!2283, !2288, !2293}
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2281, file: !197, line: 31, baseType: !2284, size: 64)
!2284 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2281, file: !197, line: 28, size: 64, elements: !2285)
!2285 = !{!2286, !2287}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2284, file: !197, line: 29, baseType: !52, size: 64)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "static_buffer", scope: !2284, file: !197, line: 30, baseType: !205, size: 64)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2281, file: !197, line: 34, baseType: !2289, size: 128, offset: 64)
!2289 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2281, file: !197, line: 32, size: 128, elements: !2290)
!2290 = !{!2291, !2292}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !2289, file: !197, line: 33, baseType: !55, size: 64)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2289, file: !197, line: 33, baseType: !55, size: 64, offset: 64)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2281, file: !197, line: 35, baseType: !9, size: 32, offset: 192)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !2276, file: !7, line: 180, baseType: !205, size: 64, offset: 64)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "content_length", scope: !2276, file: !7, line: 181, baseType: !55, size: 64, offset: 128)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "headers", scope: !2276, file: !7, line: 182, baseType: !2255, size: 64, offset: 192)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !2276, file: !7, line: 188, baseType: !2298, size: 192, offset: 256)
!2298 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2276, file: !7, line: 184, size: 192, elements: !2299)
!2299 = !{!2300, !2304, !2305}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2298, file: !7, line: 185, baseType: !2301, size: 64)
!2301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2302, size: 64)
!2302 = !DISubroutineType(types: !2303)
!2303 = !{!6, !2169, !111}
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2298, file: !7, line: 186, baseType: !111, size: 64, offset: 64)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !2298, file: !7, line: 187, baseType: !111, size: 64, offset: 128)
!2306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 64)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2159, file: !7, line: 233, baseType: !1559, size: 32, offset: 320)
!2308 = distinct !DICompileUnit(language: DW_LANG_C11, file: !2309, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2310, retainedTypes: !2311, globals: !2428, splitDebugInlining: false, nameTableKind: None)
!2309 = !DIFile(filename: "/home/raj/lwan/common/lwan-serve-files.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "800b7015121bf02dbd7f42c60f7a26e9")
!2310 = !{!8, !33, !66, !234, !1858}
!2311 = !{!111, !2312, !52, !2325, !2330, !2279, !2335, !55, !2345, !2271, !2355, !34}
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 64)
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cache_entry_t", file: !655, line: 27, size: 320, elements: !2314)
!2314 = !{!2315, !2321, !2322, !2323, !2324}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !2313, file: !655, line: 28, baseType: !2316, size: 128)
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_node", file: !659, line: 191, size: 128, elements: !2317)
!2317 = !{!2318, !2320}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2316, file: !659, line: 193, baseType: !2319, size: 64)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 64)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2316, file: !659, line: 193, baseType: !2319, size: 64, offset: 64)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2313, file: !655, line: 29, baseType: !52, size: 64, offset: 128)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !2313, file: !655, line: 30, baseType: !9, size: 32, offset: 192)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2313, file: !655, line: 31, baseType: !9, size: 32, offset: 224)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "time_to_die", scope: !2313, file: !655, line: 32, baseType: !151, size: 64, offset: 256)
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2326, size: 64)
!2326 = !DIDerivedType(tag: DW_TAG_typedef, name: "redir_cache_data_t", file: !2153, line: 55, baseType: !2327)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redir_cache_data_t_", file: !2153, line: 110, size: 64, elements: !2328)
!2328 = !{!2329}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "redir_to", scope: !2327, file: !2153, line: 111, baseType: !52, size: 64)
!2330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2331, size: 64)
!2331 = !DIDerivedType(tag: DW_TAG_typedef, name: "dir_list_cache_data_t", file: !2153, line: 54, baseType: !2332)
!2332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_list_cache_data_t_", file: !2153, line: 106, size: 64, elements: !2333)
!2333 = !{!2334}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "rendered", scope: !2332, file: !2153, line: 107, baseType: !2279, size: 64)
!2335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2336, size: 64)
!2336 = !DIDerivedType(tag: DW_TAG_typedef, name: "mmap_cache_data_t", file: !2153, line: 52, baseType: !2337)
!2337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmap_cache_data_t_", file: !2153, line: 85, size: 256, elements: !2338)
!2338 = !{!2339, !2344}
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "compressed", scope: !2337, file: !2153, line: 90, baseType: !2340, size: 128)
!2340 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2337, file: !2153, line: 86, size: 128, elements: !2341)
!2341 = !{!2342, !2343}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !2340, file: !2153, line: 87, baseType: !111, size: 64)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2340, file: !2153, line: 89, baseType: !57, size: 64, offset: 64)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "uncompressed", scope: !2337, file: !2153, line: 90, baseType: !2340, size: 128, offset: 128)
!2345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2346, size: 64)
!2346 = !DIDerivedType(tag: DW_TAG_typedef, name: "sendfile_cache_data_t", file: !2153, line: 53, baseType: !2347)
!2347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sendfile_cache_data_t_", file: !2153, line: 93, size: 256, elements: !2348)
!2348 = !{!2349, !2354}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "compressed", scope: !2347, file: !2153, line: 103, baseType: !2350, size: 128)
!2350 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2347, file: !2153, line: 100, size: 128, elements: !2351)
!2351 = !{!2352, !2353}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !2350, file: !2153, line: 101, baseType: !52, size: 64)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2350, file: !2153, line: 102, baseType: !55, size: 64, offset: 64)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "uncompressed", scope: !2347, file: !2153, line: 103, baseType: !2350, size: 128, offset: 128)
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 64)
!2356 = !DIDerivedType(tag: DW_TAG_typedef, name: "file_cache_entry_t", file: !2153, line: 50, baseType: !2357)
!2357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_cache_entry_t_", file: !2153, line: 114, size: 768, elements: !2358)
!2358 = !{!2359, !2360, !2365, !2366}
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2357, file: !2153, line: 115, baseType: !2313, size: 320)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "last_modified", scope: !2357, file: !2153, line: 120, baseType: !2361, size: 320, offset: 320)
!2361 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2357, file: !2153, line: 117, size: 320, elements: !2362)
!2362 = !{!2363, !2364}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !2361, file: !2153, line: 118, baseType: !605, size: 248)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "integer", scope: !2361, file: !2153, line: 119, baseType: !151, size: 64, offset: 256)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !2357, file: !2153, line: 122, baseType: !205, size: 64, offset: 640)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "funcs", scope: !2357, file: !2153, line: 123, baseType: !2367, size: 64, offset: 704)
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2368, size: 64)
!2368 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2369)
!2369 = !DIDerivedType(tag: DW_TAG_typedef, name: "cache_funcs_t", file: !2153, line: 51, baseType: !2370)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cache_funcs_t_", file: !2153, line: 74, size: 256, elements: !2371)
!2371 = !{!2372, !2373, !2426, !2427}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "serve", scope: !2370, file: !2153, line: 75, baseType: !2301, size: 64)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2370, file: !2153, line: 77, baseType: !2374, size: 64, offset: 64)
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 64)
!2375 = !DISubroutineType(types: !2376)
!2376 = !{!137, !2355, !2377, !205, !2392}
!2377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2378, size: 64)
!2378 = !DIDerivedType(tag: DW_TAG_typedef, name: "serve_files_priv_t", file: !2153, line: 49, baseType: !2379)
!2379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "serve_files_priv_t_", file: !2153, line: 57, size: 512, elements: !2380)
!2380 = !{!2381, !2382, !2388, !2389, !2390, !2391}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2379, file: !2153, line: 58, baseType: !840, size: 64)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2379, file: !2153, line: 64, baseType: !2383, size: 192, offset: 64)
!2383 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2379, file: !2153, line: 60, size: 192, elements: !2384)
!2384 = !{!2385, !2386, !2387}
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !2383, file: !2153, line: 61, baseType: !52, size: 64)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "path_len", scope: !2383, file: !2153, line: 62, baseType: !55, size: 64, offset: 64)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !2383, file: !2153, line: 63, baseType: !34, size: 32, offset: 128)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "open_mode", scope: !2379, file: !2153, line: 66, baseType: !34, size: 32, offset: 256)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "index_html", scope: !2379, file: !2153, line: 67, baseType: !205, size: 64, offset: 320)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "directory_list_tpl", scope: !2379, file: !2153, line: 69, baseType: !2100, size: 64, offset: 384)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "serve_precompressed_files", scope: !2379, file: !2153, line: 71, baseType: !137, size: 8, offset: 448)
!2392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2393, size: 64)
!2393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2394, line: 26, size: 1152, elements: !2395)
!2394 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/struct_stat.h", directory: "", checksumkind: CSK_MD5, checksum: "3ba283bc334370fe631cbc82f5229ed7")
!2395 = !{!2396, !2398, !2400, !2402, !2404, !2406, !2408, !2409, !2410, !2411, !2413, !2415, !2422, !2423, !2424}
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2393, file: !2394, line: 31, baseType: !2397, size: 64)
!2397 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !154, line: 145, baseType: !57)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2393, file: !2394, line: 36, baseType: !2399, size: 64, offset: 64)
!2399 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !154, line: 148, baseType: !57)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2393, file: !2394, line: 44, baseType: !2401, size: 64, offset: 128)
!2401 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !154, line: 151, baseType: !57)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2393, file: !2394, line: 45, baseType: !2403, size: 32, offset: 192)
!2403 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !154, line: 150, baseType: !9)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2393, file: !2394, line: 47, baseType: !2405, size: 32, offset: 224)
!2405 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !154, line: 146, baseType: !9)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2393, file: !2394, line: 48, baseType: !2407, size: 32, offset: 256)
!2407 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !154, line: 147, baseType: !9)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2393, file: !2394, line: 50, baseType: !34, size: 32, offset: 288)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2393, file: !2394, line: 52, baseType: !2397, size: 64, offset: 320)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2393, file: !2394, line: 57, baseType: !188, size: 64, offset: 384)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2393, file: !2394, line: 61, baseType: !2412, size: 64, offset: 448)
!2412 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !154, line: 175, baseType: !155)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2393, file: !2394, line: 63, baseType: !2414, size: 64, offset: 512)
!2414 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !154, line: 180, baseType: !155)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2393, file: !2394, line: 74, baseType: !2416, size: 128, offset: 576)
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2417, line: 11, size: 128, elements: !2418)
!2417 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "", checksumkind: CSK_MD5, checksum: "55dc154df3f21a5aa944dcafba9b43f6")
!2418 = !{!2419, !2420}
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2416, file: !2417, line: 16, baseType: !153, size: 64)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2416, file: !2417, line: 21, baseType: !2421, size: 64, offset: 64)
!2421 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !154, line: 197, baseType: !155)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2393, file: !2394, line: 75, baseType: !2416, size: 128, offset: 704)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2393, file: !2394, line: 76, baseType: !2416, size: 128, offset: 832)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2393, file: !2394, line: 89, baseType: !2425, size: 192, offset: 960)
!2425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2421, size: 192, elements: !281)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2370, file: !2153, line: 81, baseType: !115, size: 64, offset: 128)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "struct_size", scope: !2370, file: !2153, line: 82, baseType: !55, size: 64, offset: 192)
!2428 = !{!2429, !2150, !2431, !2433, !2435, !2437, !2439, !2441, !2443, !2445, !2447, !2449, !2451, !2453, !2455, !2457, !2459, !2461, !2463, !2465, !2467, !2469, !2471, !2473, !2475, !2478, !2480, !2485, !2487, !2489, !2491, !2493, !2498, !2500, !2502, !2504, !2506, !2524, !2526, !2528, !2530, !2532, !2534, !2536, !2538, !2540, !2542, !2544, !2546, !2548, !2550, !2552, !2554, !2557, !2559, !2561, !2563, !2565}
!2429 = !DIGlobalVariableExpression(var: !2430, expr: !DIExpression())
!2430 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 1012, type: !268, isLocal: true, isDefinition: true)
!2431 = !DIGlobalVariableExpression(var: !2432, expr: !DIExpression())
!2432 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 646, type: !839, isLocal: true, isDefinition: true)
!2433 = !DIGlobalVariableExpression(var: !2434, expr: !DIExpression())
!2434 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 646, type: !560, isLocal: true, isDefinition: true)
!2435 = !DIGlobalVariableExpression(var: !2436, expr: !DIExpression())
!2436 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 646, type: !408, isLocal: true, isDefinition: true)
!2437 = !DIGlobalVariableExpression(var: !2438, expr: !DIExpression())
!2438 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 652, type: !508, isLocal: true, isDefinition: true)
!2439 = !DIGlobalVariableExpression(var: !2440, expr: !DIExpression())
!2440 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 659, type: !146, isLocal: true, isDefinition: true)
!2441 = !DIGlobalVariableExpression(var: !2442, expr: !DIExpression())
!2442 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 666, type: !323, isLocal: true, isDefinition: true)
!2443 = !DIGlobalVariableExpression(var: !2444, expr: !DIExpression())
!2444 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 673, type: !336, isLocal: true, isDefinition: true)
!2445 = !DIGlobalVariableExpression(var: !2446, expr: !DIExpression())
!2446 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 680, type: !403, isLocal: true, isDefinition: true)
!2447 = !DIGlobalVariableExpression(var: !2448, expr: !DIExpression())
!2448 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 688, type: !253, isLocal: true, isDefinition: true)
!2449 = !DIGlobalVariableExpression(var: !2450, expr: !DIExpression())
!2450 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 474, type: !290, isLocal: true, isDefinition: true)
!2451 = !DIGlobalVariableExpression(var: !2452, expr: !DIExpression())
!2452 = distinct !DIGlobalVariable(name: "redir_funcs", scope: !2308, file: !2153, line: 183, type: !2368, isLocal: true, isDefinition: true)
!2453 = !DIGlobalVariableExpression(var: !2454, expr: !DIExpression())
!2454 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 962, type: !868, isLocal: true, isDefinition: true)
!2455 = !DIGlobalVariableExpression(var: !2456, expr: !DIExpression())
!2456 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 446, type: !547, isLocal: true, isDefinition: true)
!2457 = !DIGlobalVariableExpression(var: !2458, expr: !DIExpression())
!2458 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 449, type: !253, isLocal: true, isDefinition: true)
!2459 = !DIGlobalVariableExpression(var: !2460, expr: !DIExpression())
!2460 = distinct !DIGlobalVariable(name: "dirlist_funcs", scope: !2308, file: !2153, line: 176, type: !2368, isLocal: true, isDefinition: true)
!2461 = !DIGlobalVariableExpression(var: !2462, expr: !DIExpression())
!2462 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 754, type: !297, isLocal: true, isDefinition: true)
!2463 = !DIGlobalVariableExpression(var: !2464, expr: !DIExpression())
!2464 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 757, type: !518, isLocal: true, isDefinition: true)
!2465 = !DIGlobalVariableExpression(var: !2466, expr: !DIExpression())
!2466 = distinct !DIGlobalVariable(name: "compression_none", scope: !2308, file: !2153, line: 45, type: !205, isLocal: true, isDefinition: true)
!2467 = !DIGlobalVariableExpression(var: !2468, expr: !DIExpression())
!2468 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 433, type: !248, isLocal: true, isDefinition: true)
!2469 = !DIGlobalVariableExpression(var: !2470, expr: !DIExpression())
!2470 = distinct !DIGlobalVariable(name: "mmap_funcs", scope: !2308, file: !2153, line: 162, type: !2368, isLocal: true, isDefinition: true)
!2471 = !DIGlobalVariableExpression(var: !2472, expr: !DIExpression())
!2472 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 47, type: !275, isLocal: true, isDefinition: true)
!2473 = !DIGlobalVariableExpression(var: !2474, expr: !DIExpression())
!2474 = distinct !DIGlobalVariable(name: "compression_deflate", scope: !2308, file: !2153, line: 47, type: !205, isLocal: true, isDefinition: true)
!2475 = !DIGlobalVariableExpression(var: !2476, expr: !DIExpression())
!2476 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 361, type: !2477, isLocal: true, isDefinition: true)
!2477 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 80, elements: !249)
!2478 = !DIGlobalVariableExpression(var: !2479, expr: !DIExpression())
!2479 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 361, type: !275, isLocal: true, isDefinition: true)
!2480 = !DIGlobalVariableExpression(var: !2481, expr: !DIExpression())
!2481 = distinct !DIGlobalVariable(name: "deflated_header_size", scope: !2482, file: !2153, line: 311, type: !490, isLocal: true, isDefinition: true)
!2482 = distinct !DISubprogram(name: "is_compression_worthy", scope: !2153, file: !2153, line: 308, type: !2483, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !286)
!2483 = !DISubroutineType(types: !2484)
!2484 = !{!137, !490, !490}
!2485 = !DIGlobalVariableExpression(var: !2486, expr: !DIExpression())
!2486 = distinct !DIGlobalVariable(name: "sendfile_funcs", scope: !2308, file: !2153, line: 169, type: !2368, isLocal: true, isDefinition: true)
!2487 = !DIGlobalVariableExpression(var: !2488, expr: !DIExpression())
!2488 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 46, type: !290, isLocal: true, isDefinition: true)
!2489 = !DIGlobalVariableExpression(var: !2490, expr: !DIExpression())
!2490 = distinct !DIGlobalVariable(name: "compression_gzip", scope: !2308, file: !2153, line: 46, type: !205, isLocal: true, isDefinition: true)
!2491 = !DIGlobalVariableExpression(var: !2492, expr: !DIExpression())
!2492 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 393, type: !369, isLocal: true, isDefinition: true)
!2493 = !DIGlobalVariableExpression(var: !2494, expr: !DIExpression())
!2494 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 208, type: !2495, isLocal: true, isDefinition: true)
!2495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 6104, elements: !2496)
!2496 = !{!2497}
!2497 = !DISubrange(count: 763)
!2498 = !DIGlobalVariableExpression(var: !2499, expr: !DIExpression())
!2499 = distinct !DIGlobalVariable(name: "directory_list_tpl_str", scope: !2308, file: !2153, line: 208, type: !205, isLocal: true, isDefinition: true)
!2500 = !DIGlobalVariableExpression(var: !2501, expr: !DIExpression())
!2501 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 201, type: !248, isLocal: true, isDefinition: true)
!2502 = !DIGlobalVariableExpression(var: !2503, expr: !DIExpression())
!2503 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 202, type: !868, isLocal: true, isDefinition: true)
!2504 = !DIGlobalVariableExpression(var: !2505, expr: !DIExpression())
!2505 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 203, type: !248, isLocal: true, isDefinition: true)
!2506 = !DIGlobalVariableExpression(var: !2507, expr: !DIExpression())
!2507 = distinct !DIGlobalVariable(name: "file_list_desc", scope: !2308, file: !2153, line: 200, type: !2508, isLocal: true, isDefinition: true)
!2508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2509, size: 1536, elements: !365)
!2509 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2510)
!2510 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_var_descriptor_t", file: !2102, line: 26, baseType: !2511)
!2511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_var_descriptor_t_", file: !2102, line: 30, size: 384, elements: !2512)
!2512 = !{!2513, !2514, !2516, !2520, !2521, !2522}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2511, file: !2102, line: 31, baseType: !205, size: 64)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2511, file: !2102, line: 32, baseType: !2515, size: 64, offset: 64)
!2515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2271)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "append_to_strbuf", scope: !2511, file: !2102, line: 34, baseType: !2517, size: 64, offset: 128)
!2517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2518, size: 64)
!2518 = !DISubroutineType(types: !2519)
!2519 = !{null, !2279, !111}
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "get_is_empty", scope: !2511, file: !2102, line: 35, baseType: !2139, size: 64, offset: 192)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "generator", scope: !2511, file: !2102, line: 37, baseType: !2143, size: 64, offset: 256)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "list_desc", scope: !2511, file: !2102, line: 38, baseType: !2523, size: 64, offset: 320)
!2523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2509, size: 64)
!2524 = !DIGlobalVariableExpression(var: !2525, expr: !DIExpression())
!2525 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 271, type: !323, isLocal: true, isDefinition: true)
!2526 = !DIGlobalVariableExpression(var: !2527, expr: !DIExpression())
!2527 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 272, type: !547, isLocal: true, isDefinition: true)
!2528 = !DIGlobalVariableExpression(var: !2529, expr: !DIExpression())
!2529 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 273, type: !248, isLocal: true, isDefinition: true)
!2530 = !DIGlobalVariableExpression(var: !2531, expr: !DIExpression())
!2531 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 275, type: !290, isLocal: true, isDefinition: true)
!2532 = !DIGlobalVariableExpression(var: !2533, expr: !DIExpression())
!2533 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 276, type: !290, isLocal: true, isDefinition: true)
!2534 = !DIGlobalVariableExpression(var: !2535, expr: !DIExpression())
!2535 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 284, type: !341, isLocal: true, isDefinition: true)
!2536 = !DIGlobalVariableExpression(var: !2537, expr: !DIExpression())
!2537 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 287, type: !547, isLocal: true, isDefinition: true)
!2538 = !DIGlobalVariableExpression(var: !2539, expr: !DIExpression())
!2539 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 290, type: !547, isLocal: true, isDefinition: true)
!2540 = !DIGlobalVariableExpression(var: !2541, expr: !DIExpression())
!2541 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 293, type: !547, isLocal: true, isDefinition: true)
!2542 = !DIGlobalVariableExpression(var: !2543, expr: !DIExpression())
!2543 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 191, type: !887, isLocal: true, isDefinition: true)
!2544 = !DIGlobalVariableExpression(var: !2545, expr: !DIExpression())
!2545 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 192, type: !1293, isLocal: true, isDefinition: true)
!2546 = !DIGlobalVariableExpression(var: !2547, expr: !DIExpression())
!2547 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 193, type: !887, isLocal: true, isDefinition: true)
!2548 = !DIGlobalVariableExpression(var: !2549, expr: !DIExpression())
!2549 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 194, type: !887, isLocal: true, isDefinition: true)
!2550 = !DIGlobalVariableExpression(var: !2551, expr: !DIExpression())
!2551 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 195, type: !887, isLocal: true, isDefinition: true)
!2552 = !DIGlobalVariableExpression(var: !2553, expr: !DIExpression())
!2553 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 196, type: !887, isLocal: true, isDefinition: true)
!2554 = !DIGlobalVariableExpression(var: !2555, expr: !DIExpression())
!2555 = distinct !DIGlobalVariable(name: "file_list_item_desc", scope: !2308, file: !2153, line: 190, type: !2556, isLocal: true, isDefinition: true)
!2556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2509, size: 2688, elements: !324)
!2557 = !DIGlobalVariableExpression(var: !2558, expr: !DIExpression())
!2558 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 709, type: !290, isLocal: true, isDefinition: true)
!2559 = !DIGlobalVariableExpression(var: !2560, expr: !DIExpression())
!2560 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 710, type: !253, isLocal: true, isDefinition: true)
!2561 = !DIGlobalVariableExpression(var: !2562, expr: !DIExpression())
!2562 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 712, type: !304, isLocal: true, isDefinition: true)
!2563 = !DIGlobalVariableExpression(var: !2564, expr: !DIExpression())
!2564 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 723, type: !881, isLocal: true, isDefinition: true)
!2565 = !DIGlobalVariableExpression(var: !2566, expr: !DIExpression())
!2566 = distinct !DIGlobalVariable(scope: null, file: !2153, line: 723, type: !263, isLocal: true, isDefinition: true)
!2567 = !DIGlobalVariableExpression(var: !2568, expr: !DIExpression())
!2568 = distinct !DIGlobalVariable(scope: null, file: !2569, line: 233, type: !570, isLocal: true, isDefinition: true)
!2569 = !DIFile(filename: "common/lwan-socket.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "c18944055a3b887a7cad5341937765cf")
!2570 = !DIGlobalVariableExpression(var: !2571, expr: !DIExpression())
!2571 = distinct !DIGlobalVariable(scope: null, file: !2569, line: 233, type: !560, isLocal: true, isDefinition: true)
!2572 = !DIGlobalVariableExpression(var: !2573, expr: !DIExpression())
!2573 = distinct !DIGlobalVariable(scope: null, file: !2569, line: 233, type: !623, isLocal: true, isDefinition: true)
!2574 = !DIGlobalVariableExpression(var: !2575, expr: !DIExpression())
!2575 = distinct !DIGlobalVariable(scope: null, file: !2569, line: 237, type: !508, isLocal: true, isDefinition: true)
!2576 = !DIGlobalVariableExpression(var: !2577, expr: !DIExpression())
!2577 = distinct !DIGlobalVariable(scope: null, file: !2569, line: 244, type: !253, isLocal: true, isDefinition: true)
!2578 = !DIGlobalVariableExpression(var: !2579, expr: !DIExpression())
!2579 = distinct !DIGlobalVariable(scope: null, file: !2569, line: 247, type: !605, isLocal: true, isDefinition: true)
!2580 = !DIGlobalVariableExpression(var: !2581, expr: !DIExpression())
!2581 = distinct !DIGlobalVariable(scope: null, file: !2569, line: 247, type: !316, isLocal: true, isDefinition: true)
!2582 = !DIGlobalVariableExpression(var: !2583, expr: !DIExpression())
!2583 = distinct !DIGlobalVariable(scope: null, file: !2569, line: 249, type: !316, isLocal: true, isDefinition: true)
!2584 = !DIGlobalVariableExpression(var: !2585, expr: !DIExpression())
!2585 = distinct !DIGlobalVariable(scope: null, file: !2569, line: 64, type: !620, isLocal: true, isDefinition: true)
!2586 = !DIGlobalVariableExpression(var: !2587, expr: !DIExpression())
!2587 = distinct !DIGlobalVariable(scope: null, file: !2569, line: 64, type: !2588, isLocal: true, isDefinition: true)
!2588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 424, elements: !2589)
!2589 = !{!2590}
!2590 = !DISubrange(count: 53)
!2591 = !DIGlobalVariableExpression(var: !2592, expr: !DIExpression())
!2592 = distinct !DIGlobalVariable(scope: null, file: !2569, line: 69, type: !146, isLocal: true, isDefinition: true)
!2593 = !DIGlobalVariableExpression(var: !2594, expr: !DIExpression())
!2594 = distinct !DIGlobalVariable(scope: null, file: !2569, line: 71, type: !328, isLocal: true, isDefinition: true)
!2595 = !DIGlobalVariableExpression(var: !2596, expr: !DIExpression())
!2596 = distinct !DIGlobalVariable(scope: null, file: !2569, line: 206, type: !1230, isLocal: true, isDefinition: true)
!2597 = !DIGlobalVariableExpression(var: !2598, expr: !DIExpression())
!2598 = distinct !DIGlobalVariable(scope: null, file: !2569, line: 206, type: !834, isLocal: true, isDefinition: true)
!2599 = !DIGlobalVariableExpression(var: !2600, expr: !DIExpression())
!2600 = distinct !DIGlobalVariable(scope: null, file: !2569, line: 217, type: !503, isLocal: true, isDefinition: true)
!2601 = !DIGlobalVariableExpression(var: !2602, expr: !DIExpression())
!2602 = distinct !DIGlobalVariable(scope: null, file: !2569, line: 123, type: !290, isLocal: true, isDefinition: true)
!2603 = !DIGlobalVariableExpression(var: !2604, expr: !DIExpression())
!2604 = distinct !DIGlobalVariable(scope: null, file: !2569, line: 84, type: !275, isLocal: true, isDefinition: true)
!2605 = !DIGlobalVariableExpression(var: !2606, expr: !DIExpression())
!2606 = distinct !DIGlobalVariable(scope: null, file: !2569, line: 98, type: !341, isLocal: true, isDefinition: true)
!2607 = !DIGlobalVariableExpression(var: !2608, expr: !DIExpression())
!2608 = distinct !DIGlobalVariable(scope: null, file: !2569, line: 186, type: !620, isLocal: true, isDefinition: true)
!2609 = !DIGlobalVariableExpression(var: !2610, expr: !DIExpression())
!2610 = distinct !DIGlobalVariable(scope: null, file: !2569, line: 187, type: !316, isLocal: true, isDefinition: true)
!2611 = !DIGlobalVariableExpression(var: !2612, expr: !DIExpression())
!2612 = distinct !DIGlobalVariable(scope: null, file: !2569, line: 196, type: !336, isLocal: true, isDefinition: true)
!2613 = !DIGlobalVariableExpression(var: !2614, expr: !DIExpression())
!2614 = distinct !DIGlobalVariable(scope: null, file: !2569, line: 141, type: !2615, isLocal: true, isDefinition: true)
!2615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 128, elements: !504)
!2616 = !DIGlobalVariableExpression(var: !2617, expr: !DIExpression())
!2617 = distinct !DIGlobalVariable(scope: null, file: !2569, line: 141, type: !323, isLocal: true, isDefinition: true)
!2618 = !DIGlobalVariableExpression(var: !2619, expr: !DIExpression())
!2619 = distinct !DIGlobalVariable(scope: null, file: !2569, line: 147, type: !503, isLocal: true, isDefinition: true)
!2620 = !DIGlobalVariableExpression(var: !2621, expr: !DIExpression())
!2621 = distinct !DIGlobalVariable(scope: null, file: !2569, line: 150, type: !386, isLocal: true, isDefinition: true)
!2622 = !DIGlobalVariableExpression(var: !2623, expr: !DIExpression())
!2623 = distinct !DIGlobalVariable(scope: null, file: !2569, line: 152, type: !304, isLocal: true, isDefinition: true)
!2624 = !DIGlobalVariableExpression(var: !2625, expr: !DIExpression())
!2625 = distinct !DIGlobalVariable(scope: null, file: !2569, line: 47, type: !834, isLocal: true, isDefinition: true)
!2626 = !DIGlobalVariableExpression(var: !2627, expr: !DIExpression())
!2627 = distinct !DIGlobalVariable(scope: null, file: !2569, line: 47, type: !280, isLocal: true, isDefinition: true)
!2628 = !DIGlobalVariableExpression(var: !2629, expr: !DIExpression())
!2629 = distinct !DIGlobalVariable(scope: null, file: !2569, line: 50, type: !280, isLocal: true, isDefinition: true)
!2630 = !DIGlobalVariableExpression(var: !2631, expr: !DIExpression())
!2631 = distinct !DIGlobalVariable(name: "quiet", scope: !2632, file: !2636, line: 44, type: !2702, isLocal: true, isDefinition: true)
!2632 = distinct !DICompileUnit(language: DW_LANG_C11, file: !2633, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2634, retainedTypes: !2644, globals: !2645, splitDebugInlining: false, nameTableKind: None)
!2633 = !DIFile(filename: "/home/raj/lwan/common/lwan-status.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "3144bdabc8d20e3f6762e4c059065536")
!2634 = !{!66, !2635}
!2635 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2636, line: 35, baseType: !9, size: 32, elements: !2637)
!2636 = !DIFile(filename: "common/lwan-status.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "3144bdabc8d20e3f6762e4c059065536")
!2637 = !{!2638, !2639, !2640, !2641, !2642, !2643}
!2638 = !DIEnumerator(name: "STATUS_INFO", value: 1)
!2639 = !DIEnumerator(name: "STATUS_WARNING", value: 2)
!2640 = !DIEnumerator(name: "STATUS_ERROR", value: 4)
!2641 = !DIEnumerator(name: "STATUS_PERROR", value: 8)
!2642 = !DIEnumerator(name: "STATUS_CRITICAL", value: 16)
!2643 = !DIEnumerator(name: "STATUS_DEBUG", value: 32)
!2644 = !{!55}
!2645 = !{!2630, !2646, !2648, !2650, !2652, !2654, !2656, !2658, !2660, !2662, !2664, !2666, !2668, !2670, !2672, !2678}
!2646 = !DIGlobalVariableExpression(var: !2647, expr: !DIExpression())
!2647 = distinct !DIGlobalVariable(scope: null, file: !2636, line: 109, type: !1293, isLocal: true, isDefinition: true)
!2648 = !DIGlobalVariableExpression(var: !2649, expr: !DIExpression())
!2649 = distinct !DIGlobalVariable(scope: null, file: !2636, line: 112, type: !887, isLocal: true, isDefinition: true)
!2650 = !DIGlobalVariableExpression(var: !2651, expr: !DIExpression())
!2651 = distinct !DIGlobalVariable(scope: null, file: !2636, line: 113, type: !887, isLocal: true, isDefinition: true)
!2652 = !DIGlobalVariableExpression(var: !2653, expr: !DIExpression())
!2653 = distinct !DIGlobalVariable(scope: null, file: !2636, line: 114, type: !887, isLocal: true, isDefinition: true)
!2654 = !DIGlobalVariableExpression(var: !2655, expr: !DIExpression())
!2655 = distinct !DIGlobalVariable(scope: null, file: !2636, line: 115, type: !341, isLocal: true, isDefinition: true)
!2656 = !DIGlobalVariableExpression(var: !2657, expr: !DIExpression())
!2657 = distinct !DIGlobalVariable(scope: null, file: !2636, line: 134, type: !623, isLocal: true, isDefinition: true)
!2658 = !DIGlobalVariableExpression(var: !2659, expr: !DIExpression())
!2659 = distinct !DIGlobalVariable(scope: null, file: !2636, line: 69, type: !369, isLocal: true, isDefinition: true)
!2660 = !DIGlobalVariableExpression(var: !2661, expr: !DIExpression())
!2661 = distinct !DIGlobalVariable(scope: null, file: !2636, line: 71, type: !369, isLocal: true, isDefinition: true)
!2662 = !DIGlobalVariableExpression(var: !2663, expr: !DIExpression())
!2663 = distinct !DIGlobalVariable(scope: null, file: !2636, line: 73, type: !275, isLocal: true, isDefinition: true)
!2664 = !DIGlobalVariableExpression(var: !2665, expr: !DIExpression())
!2665 = distinct !DIGlobalVariable(scope: null, file: !2636, line: 75, type: !369, isLocal: true, isDefinition: true)
!2666 = !DIGlobalVariableExpression(var: !2667, expr: !DIExpression())
!2667 = distinct !DIGlobalVariable(scope: null, file: !2636, line: 77, type: !369, isLocal: true, isDefinition: true)
!2668 = !DIGlobalVariableExpression(var: !2669, expr: !DIExpression())
!2669 = distinct !DIGlobalVariable(scope: null, file: !2636, line: 79, type: !369, isLocal: true, isDefinition: true)
!2670 = !DIGlobalVariableExpression(var: !2671, expr: !DIExpression())
!2671 = distinct !DIGlobalVariable(scope: null, file: !2636, line: 90, type: !290, isLocal: true, isDefinition: true)
!2672 = !DIGlobalVariableExpression(var: !2673, expr: !DIExpression())
!2673 = distinct !DIGlobalVariable(name: "retval", scope: !2674, file: !2636, line: 90, type: !205, isLocal: true, isDefinition: true)
!2674 = distinct !DISubprogram(name: "get_color_end_for_type", scope: !2636, file: !2636, line: 87, type: !2675, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2632, retainedNodes: !286)
!2675 = !DISubroutineType(types: !2676)
!2676 = !{!205, !2677, !480}
!2677 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_status_type_t", file: !2636, line: 42, baseType: !2635)
!2678 = !DIGlobalVariableExpression(var: !2679, expr: !DIExpression())
!2679 = distinct !DIGlobalVariable(name: "mutex", scope: !2632, file: !2636, line: 45, type: !2680, isLocal: true, isDefinition: true)
!2680 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_mutex_t", file: !163, line: 72, baseType: !2681)
!2681 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !163, line: 67, size: 320, elements: !2682)
!2682 = !{!2683, !2700, !2701}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "__data", scope: !2681, file: !163, line: 69, baseType: !2684, size: 320)
!2684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_mutex_s", file: !928, line: 22, size: 320, elements: !2685)
!2685 = !{!2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693}
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "__lock", scope: !2684, file: !928, line: 24, baseType: !34, size: 32)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2684, file: !928, line: 25, baseType: !9, size: 32, offset: 32)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "__owner", scope: !2684, file: !928, line: 26, baseType: !34, size: 32, offset: 64)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "__nusers", scope: !2684, file: !928, line: 28, baseType: !9, size: 32, offset: 96)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "__kind", scope: !2684, file: !928, line: 32, baseType: !34, size: 32, offset: 128)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "__spins", scope: !2684, file: !928, line: 34, baseType: !936, size: 16, offset: 160)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "__elision", scope: !2684, file: !928, line: 35, baseType: !936, size: 16, offset: 176)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "__list", scope: !2684, file: !928, line: 36, baseType: !2694, size: 128, offset: 192)
!2694 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pthread_list_t", file: !940, line: 55, baseType: !2695)
!2695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_internal_list", file: !940, line: 51, size: 128, elements: !2696)
!2696 = !{!2697, !2699}
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "__prev", scope: !2695, file: !940, line: 53, baseType: !2698, size: 64)
!2698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2695, size: 64)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "__next", scope: !2695, file: !940, line: 54, baseType: !2698, size: 64, offset: 64)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !2681, file: !163, line: 70, baseType: !497, size: 320)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !2681, file: !163, line: 71, baseType: !155, size: 64)
!2702 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !137)
!2703 = !DIGlobalVariableExpression(var: !2704, expr: !DIExpression())
!2704 = distinct !DIGlobalVariable(name: "mime_entries_initialized", scope: !2705, file: !2709, line: 32, type: !137, isLocal: true, isDefinition: true)
!2705 = distinct !DICompileUnit(language: DW_LANG_C11, file: !2706, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2707, retainedTypes: !2720, globals: !2727, splitDebugInlining: false, nameTableKind: None)
!2706 = !DIFile(filename: "/home/raj/lwan/common/lwan-tables.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "307d435f6ef57d1ea0824afd6440b695")
!2707 = !{!2708, !8}
!2708 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !2710, file: !2709, line: 84, baseType: !9, size: 32, elements: !2713)
!2709 = !DIFile(filename: "common/lwan-tables.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "307d435f6ef57d1ea0824afd6440b695")
!2710 = distinct !DISubprogram(name: "lwan_determine_mime_type_for_file_name", scope: !2709, file: !2709, line: 78, type: !2711, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2705, retainedNodes: !286)
!2711 = !DISubroutineType(types: !2712)
!2712 = !{!205, !205}
!2713 = !{!2714, !2715, !2716, !2717, !2718, !2719}
!2714 = !DIEnumerator(name: "EXT_JPG", value: 1735420462)
!2715 = !DIEnumerator(name: "EXT_PNG", value: 1735290926)
!2716 = !DIEnumerator(name: "EXT_HTM", value: 1836345390)
!2717 = !DIEnumerator(name: "EXT_CSS", value: 1936941870)
!2718 = !DIEnumerator(name: "EXT_TXT", value: 1954051118)
!2719 = !DIEnumerator(name: "EXT_JS", value: 544434734)
!2720 = !{!2721, !2725, !52, !674}
!2721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2722, size: 64)
!2722 = !DIDerivedType(tag: DW_TAG_typedef, name: "Bytef", file: !2723, line: 400, baseType: !2724)
!2723 = !DIFile(filename: "/usr/include/zconf.h", directory: "", checksumkind: CSK_MD5, checksum: "95e83c46958f6395f746c80cc6799e76")
!2724 = !DIDerivedType(tag: DW_TAG_typedef, name: "Byte", file: !2723, line: 391, baseType: !432)
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 64)
!2726 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2722)
!2727 = !{!2728, !2730, !2732, !2734, !2739, !2741, !2743, !2745, !2747, !2749, !2751, !2753, !2755, !2757, !2759, !2761, !2763, !2765, !2767, !2769, !2771, !2773, !2775, !2777, !2779, !2781, !2783, !2785, !2787, !2789, !2791, !2793, !2795, !2797, !2799, !2801, !2803, !2806, !2808, !2813, !2815, !2820, !2825, !2830, !2832, !2834, !2836, !2841, !2703, !2851}
!2728 = !DIGlobalVariableExpression(var: !2729, expr: !DIExpression())
!2729 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 40, type: !570, isLocal: true, isDefinition: true)
!2730 = !DIGlobalVariableExpression(var: !2731, expr: !DIExpression())
!2731 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 40, type: !560, isLocal: true, isDefinition: true)
!2732 = !DIGlobalVariableExpression(var: !2733, expr: !DIExpression())
!2733 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 40, type: !146, isLocal: true, isDefinition: true)
!2734 = !DIGlobalVariableExpression(var: !2735, expr: !DIExpression())
!2735 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 46, type: !2736, isLocal: true, isDefinition: true)
!2736 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 376, elements: !2737)
!2737 = !{!2738}
!2738 = !DISubrange(count: 47)
!2739 = !DIGlobalVariableExpression(var: !2740, expr: !DIExpression())
!2740 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 50, type: !839, isLocal: true, isDefinition: true)
!2741 = !DIGlobalVariableExpression(var: !2742, expr: !DIExpression())
!2742 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 94, type: !868, isLocal: true, isDefinition: true)
!2743 = !DIGlobalVariableExpression(var: !2744, expr: !DIExpression())
!2744 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 95, type: !248, isLocal: true, isDefinition: true)
!2745 = !DIGlobalVariableExpression(var: !2746, expr: !DIExpression())
!2746 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 96, type: !253, isLocal: true, isDefinition: true)
!2747 = !DIGlobalVariableExpression(var: !2748, expr: !DIExpression())
!2748 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 97, type: !1272, isLocal: true, isDefinition: true)
!2749 = !DIGlobalVariableExpression(var: !2750, expr: !DIExpression())
!2750 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 98, type: !248, isLocal: true, isDefinition: true)
!2751 = !DIGlobalVariableExpression(var: !2752, expr: !DIExpression())
!2752 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 99, type: !253, isLocal: true, isDefinition: true)
!2753 = !DIGlobalVariableExpression(var: !2754, expr: !DIExpression())
!2754 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 112, type: !309, isLocal: true, isDefinition: true)
!2755 = !DIGlobalVariableExpression(var: !2756, expr: !DIExpression())
!2756 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 119, type: !323, isLocal: true, isDefinition: true)
!2757 = !DIGlobalVariableExpression(var: !2758, expr: !DIExpression())
!2758 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 120, type: !263, isLocal: true, isDefinition: true)
!2759 = !DIGlobalVariableExpression(var: !2760, expr: !DIExpression())
!2760 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 121, type: !336, isLocal: true, isDefinition: true)
!2761 = !DIGlobalVariableExpression(var: !2762, expr: !DIExpression())
!2762 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 122, type: !518, isLocal: true, isDefinition: true)
!2763 = !DIGlobalVariableExpression(var: !2764, expr: !DIExpression())
!2764 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 123, type: !503, isLocal: true, isDefinition: true)
!2765 = !DIGlobalVariableExpression(var: !2766, expr: !DIExpression())
!2766 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 124, type: !1293, isLocal: true, isDefinition: true)
!2767 = !DIGlobalVariableExpression(var: !2768, expr: !DIExpression())
!2768 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 125, type: !297, isLocal: true, isDefinition: true)
!2769 = !DIGlobalVariableExpression(var: !2770, expr: !DIExpression())
!2770 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 126, type: !297, isLocal: true, isDefinition: true)
!2771 = !DIGlobalVariableExpression(var: !2772, expr: !DIExpression())
!2772 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 127, type: !503, isLocal: true, isDefinition: true)
!2773 = !DIGlobalVariableExpression(var: !2774, expr: !DIExpression())
!2774 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 128, type: !263, isLocal: true, isDefinition: true)
!2775 = !DIGlobalVariableExpression(var: !2776, expr: !DIExpression())
!2776 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 129, type: !336, isLocal: true, isDefinition: true)
!2777 = !DIGlobalVariableExpression(var: !2778, expr: !DIExpression())
!2778 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 130, type: !615, isLocal: true, isDefinition: true)
!2779 = !DIGlobalVariableExpression(var: !2780, expr: !DIExpression())
!2780 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 131, type: !518, isLocal: true, isDefinition: true)
!2781 = !DIGlobalVariableExpression(var: !2782, expr: !DIExpression())
!2782 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 132, type: !304, isLocal: true, isDefinition: true)
!2783 = !DIGlobalVariableExpression(var: !2784, expr: !DIExpression())
!2784 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 133, type: !263, isLocal: true, isDefinition: true)
!2785 = !DIGlobalVariableExpression(var: !2786, expr: !DIExpression())
!2786 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 134, type: !408, isLocal: true, isDefinition: true)
!2787 = !DIGlobalVariableExpression(var: !2788, expr: !DIExpression())
!2788 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 136, type: !268, isLocal: true, isDefinition: true)
!2789 = !DIGlobalVariableExpression(var: !2790, expr: !DIExpression())
!2790 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 149, type: !868, isLocal: true, isDefinition: true)
!2791 = !DIGlobalVariableExpression(var: !2792, expr: !DIExpression())
!2792 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 150, type: !258, isLocal: true, isDefinition: true)
!2793 = !DIGlobalVariableExpression(var: !2794, expr: !DIExpression())
!2794 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 151, type: !839, isLocal: true, isDefinition: true)
!2795 = !DIGlobalVariableExpression(var: !2796, expr: !DIExpression())
!2796 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 152, type: !427, isLocal: true, isDefinition: true)
!2797 = !DIGlobalVariableExpression(var: !2798, expr: !DIExpression())
!2798 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 153, type: !884, isLocal: true, isDefinition: true)
!2799 = !DIGlobalVariableExpression(var: !2800, expr: !DIExpression())
!2800 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 154, type: !2588, isLocal: true, isDefinition: true)
!2801 = !DIGlobalVariableExpression(var: !2802, expr: !DIExpression())
!2802 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 155, type: !839, isLocal: true, isDefinition: true)
!2803 = !DIGlobalVariableExpression(var: !2804, expr: !DIExpression())
!2804 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 156, type: !2805, isLocal: true, isDefinition: true)
!2805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 464, elements: !639)
!2806 = !DIGlobalVariableExpression(var: !2807, expr: !DIExpression())
!2807 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 157, type: !427, isLocal: true, isDefinition: true)
!2808 = !DIGlobalVariableExpression(var: !2809, expr: !DIExpression())
!2809 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 158, type: !2810, isLocal: true, isDefinition: true)
!2810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 480, elements: !2811)
!2811 = !{!2812}
!2812 = !DISubrange(count: 60)
!2813 = !DIGlobalVariableExpression(var: !2814, expr: !DIExpression())
!2814 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 159, type: !873, isLocal: true, isDefinition: true)
!2815 = !DIGlobalVariableExpression(var: !2816, expr: !DIExpression())
!2816 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 160, type: !2817, isLocal: true, isDefinition: true)
!2817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 584, elements: !2818)
!2818 = !{!2819}
!2819 = !DISubrange(count: 73)
!2820 = !DIGlobalVariableExpression(var: !2821, expr: !DIExpression())
!2821 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 161, type: !2822, isLocal: true, isDefinition: true)
!2822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 448, elements: !2823)
!2823 = !{!2824}
!2824 = !DISubrange(count: 56)
!2825 = !DIGlobalVariableExpression(var: !2826, expr: !DIExpression())
!2826 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 162, type: !2827, isLocal: true, isDefinition: true)
!2827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 592, elements: !2828)
!2828 = !{!2829}
!2829 = !DISubrange(count: 74)
!2830 = !DIGlobalVariableExpression(var: !2831, expr: !DIExpression())
!2831 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 163, type: !1240, isLocal: true, isDefinition: true)
!2832 = !DIGlobalVariableExpression(var: !2833, expr: !DIExpression())
!2833 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 164, type: !417, isLocal: true, isDefinition: true)
!2834 = !DIGlobalVariableExpression(var: !2835, expr: !DIExpression())
!2835 = distinct !DIGlobalVariable(scope: null, file: !2709, line: 166, type: !275, isLocal: true, isDefinition: true)
!2836 = !DIGlobalVariableExpression(var: !2837, expr: !DIExpression())
!2837 = distinct !DIGlobalVariable(name: "uncompressed_mime_entries", scope: !2705, file: !2709, line: 30, type: !2838, isLocal: true, isDefinition: true)
!2838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !432, size: 228272, elements: !2839)
!2839 = !{!2840}
!2840 = !DISubrange(count: 28534)
!2841 = !DIGlobalVariableExpression(var: !2842, expr: !DIExpression())
!2842 = distinct !DIGlobalVariable(name: "mime_entries", scope: !2705, file: !2709, line: 31, type: !2843, isLocal: true, isDefinition: true)
!2843 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2844, size: 125568, elements: !2849)
!2844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mime_entry", file: !2845, line: 6, size: 128, elements: !2846)
!2845 = !DIFile(filename: "mime-types.h", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "c5f13e9374b63f60dcf37d804fa1d7b9")
!2846 = !{!2847, !2848}
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "extension", scope: !2844, file: !2845, line: 7, baseType: !205, size: 64)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2844, file: !2845, line: 8, baseType: !205, size: 64, offset: 64)
!2849 = !{!2850}
!2850 = !DISubrange(count: 981)
!2851 = !DIGlobalVariableExpression(var: !2852, expr: !DIExpression())
!2852 = distinct !DIGlobalVariable(name: "mime_entries_compressed", scope: !2705, file: !2845, line: 10, type: !2853, isLocal: true, isDefinition: true)
!2853 = !DICompositeType(tag: DW_TAG_array_type, baseType: !431, size: 60112, elements: !2854)
!2854 = !{!2855}
!2855 = !DISubrange(count: 7514)
!2856 = !DIGlobalVariableExpression(var: !2857, expr: !DIExpression())
!2857 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 818, type: !280, isLocal: true, isDefinition: true)
!2858 = !DIFile(filename: "common/lwan-template.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "7372188dcf77bb3cf11a46be7f285c7a")
!2859 = !DIGlobalVariableExpression(var: !2860, expr: !DIExpression())
!2860 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 848, type: !290, isLocal: true, isDefinition: true)
!2861 = !DIGlobalVariableExpression(var: !2862, expr: !DIExpression())
!2862 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 850, type: !290, isLocal: true, isDefinition: true)
!2863 = !DIGlobalVariableExpression(var: !2864, expr: !DIExpression())
!2864 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 852, type: !369, isLocal: true, isDefinition: true)
!2865 = !DIGlobalVariableExpression(var: !2866, expr: !DIExpression())
!2866 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 854, type: !323, isLocal: true, isDefinition: true)
!2867 = !DIGlobalVariableExpression(var: !2868, expr: !DIExpression())
!2868 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 856, type: !323, isLocal: true, isDefinition: true)
!2869 = !DIGlobalVariableExpression(var: !2870, expr: !DIExpression())
!2870 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 858, type: !323, isLocal: true, isDefinition: true)
!2871 = !DIGlobalVariableExpression(var: !2872, expr: !DIExpression())
!2872 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 1147, type: !374, isLocal: true, isDefinition: true)
!2873 = !DIGlobalVariableExpression(var: !2874, expr: !DIExpression())
!2874 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 1147, type: !1230, isLocal: true, isDefinition: true)
!2875 = !DIGlobalVariableExpression(var: !2876, expr: !DIExpression())
!2876 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 1147, type: !323, isLocal: true, isDefinition: true)
!2877 = !DIGlobalVariableExpression(var: !2878, expr: !DIExpression())
!2878 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 783, type: !297, isLocal: true, isDefinition: true)
!2879 = !DIGlobalVariableExpression(var: !2880, expr: !DIExpression())
!2880 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 690, type: !408, isLocal: true, isDefinition: true)
!2881 = !DIGlobalVariableExpression(var: !2882, expr: !DIExpression())
!2882 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 698, type: !1272, isLocal: true, isDefinition: true)
!2883 = !DIGlobalVariableExpression(var: !2884, expr: !DIExpression())
!2884 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 504, type: !560, isLocal: true, isDefinition: true)
!2885 = !DIGlobalVariableExpression(var: !2886, expr: !DIExpression())
!2886 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 504, type: !328, isLocal: true, isDefinition: true)
!2887 = !DIGlobalVariableExpression(var: !2888, expr: !DIExpression())
!2888 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 745, type: !615, isLocal: true, isDefinition: true)
!2889 = !DIGlobalVariableExpression(var: !2890, expr: !DIExpression())
!2890 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 650, type: !887, isLocal: true, isDefinition: true)
!2891 = !DIGlobalVariableExpression(var: !2892, expr: !DIExpression())
!2892 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 655, type: !1233, isLocal: true, isDefinition: true)
!2893 = !DIGlobalVariableExpression(var: !2894, expr: !DIExpression())
!2894 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 656, type: !825, isLocal: true, isDefinition: true)
!2895 = !DIGlobalVariableExpression(var: !2896, expr: !DIExpression())
!2896 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 572, type: !825, isLocal: true, isDefinition: true)
!2897 = !DIGlobalVariableExpression(var: !2898, expr: !DIExpression())
!2898 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 585, type: !309, isLocal: true, isDefinition: true)
!2899 = !DIGlobalVariableExpression(var: !2900, expr: !DIExpression())
!2900 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 535, type: !623, isLocal: true, isDefinition: true)
!2901 = !DIGlobalVariableExpression(var: !2902, expr: !DIExpression())
!2902 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 549, type: !884, isLocal: true, isDefinition: true)
!2903 = !DIGlobalVariableExpression(var: !2904, expr: !DIExpression())
!2904 = distinct !DIGlobalVariable(name: "item_type_str", scope: !2905, file: !2858, line: 85, type: !3112, isLocal: true, isDefinition: true)
!2905 = distinct !DICompileUnit(language: DW_LANG_C11, file: !2906, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2907, retainedTypes: !2958, globals: !3005, splitDebugInlining: false, nameTableKind: None)
!2906 = !DIFile(filename: "/home/raj/lwan/common/lwan-template.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "7372188dcf77bb3cf11a46be7f285c7a")
!2907 = !{!2908, !2921, !2927, !2943}
!2908 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "action", file: !2858, line: 47, baseType: !9, size: 32, elements: !2909)
!2909 = !{!2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920}
!2910 = !DIEnumerator(name: "ACTION_APPEND", value: 0)
!2911 = !DIEnumerator(name: "ACTION_APPEND_CHAR", value: 1)
!2912 = !DIEnumerator(name: "ACTION_VARIABLE", value: 2)
!2913 = !DIEnumerator(name: "ACTION_VARIABLE_STR", value: 3)
!2914 = !DIEnumerator(name: "ACTION_VARIABLE_STR_ESCAPE", value: 4)
!2915 = !DIEnumerator(name: "ACTION_START_ITER", value: 5)
!2916 = !DIEnumerator(name: "ACTION_END_ITER", value: 6)
!2917 = !DIEnumerator(name: "ACTION_IF_VARIABLE_NOT_EMPTY", value: 7)
!2918 = !DIEnumerator(name: "ACTION_END_IF_VARIABLE_NOT_EMPTY", value: 8)
!2919 = !DIEnumerator(name: "ACTION_APPLY_TPL", value: 9)
!2920 = !DIEnumerator(name: "ACTION_LAST", value: 10)
!2921 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "flags", file: !2858, line: 61, baseType: !34, size: 32, elements: !2922)
!2922 = !{!2923, !2924, !2925, !2926}
!2923 = !DIEnumerator(name: "FLAGS_ALL", value: -1)
!2924 = !DIEnumerator(name: "FLAGS_NEGATE", value: 1)
!2925 = !DIEnumerator(name: "FLAGS_QUOTE", value: 2)
!2926 = !DIEnumerator(name: "FLAGS_NO_FREE", value: 4)
!2927 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "item_type", file: !2858, line: 68, baseType: !9, size: 32, elements: !2928)
!2928 = !{!2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942}
!2929 = !DIEnumerator(name: "ITEM_ERROR", value: 0)
!2930 = !DIEnumerator(name: "ITEM_EOF", value: 1)
!2931 = !DIEnumerator(name: "ITEM_IDENTIFIER", value: 2)
!2932 = !DIEnumerator(name: "ITEM_LEFT_META", value: 3)
!2933 = !DIEnumerator(name: "ITEM_HASH", value: 4)
!2934 = !DIEnumerator(name: "ITEM_RIGHT_META", value: 5)
!2935 = !DIEnumerator(name: "ITEM_TEXT", value: 6)
!2936 = !DIEnumerator(name: "ITEM_SLASH", value: 7)
!2937 = !DIEnumerator(name: "ITEM_QUESTION_MARK", value: 8)
!2938 = !DIEnumerator(name: "ITEM_HAT", value: 9)
!2939 = !DIEnumerator(name: "ITEM_GREATER_THAN", value: 10)
!2940 = !DIEnumerator(name: "ITEM_OPEN_CURLY_BRACE", value: 11)
!2941 = !DIEnumerator(name: "ITEM_CLOSE_CURLY_BRACE", value: 12)
!2942 = !DIEnumerator(name: "TOTAL_ITEMS", value: 13)
!2943 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2944, line: 46, baseType: !9, size: 32, elements: !2945)
!2944 = !DIFile(filename: "/usr/include/ctype.h", directory: "", checksumkind: CSK_MD5, checksum: "3ab3dd7fdf2578005732722ee2393e59")
!2945 = !{!2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957}
!2946 = !DIEnumerator(name: "_ISupper", value: 256)
!2947 = !DIEnumerator(name: "_ISlower", value: 512)
!2948 = !DIEnumerator(name: "_ISalpha", value: 1024)
!2949 = !DIEnumerator(name: "_ISdigit", value: 2048)
!2950 = !DIEnumerator(name: "_ISxdigit", value: 4096)
!2951 = !DIEnumerator(name: "_ISspace", value: 8192)
!2952 = !DIEnumerator(name: "_ISprint", value: 16384)
!2953 = !DIEnumerator(name: "_ISgraph", value: 32768)
!2954 = !DIEnumerator(name: "_ISblank", value: 1)
!2955 = !DIEnumerator(name: "_IScntrl", value: 2)
!2956 = !DIEnumerator(name: "_ISpunct", value: 4)
!2957 = !DIEnumerator(name: "_ISalnum", value: 8)
!2958 = !{!363, !2959, !353, !2961, !111, !55, !2962, !52, !34, !2963, !2966, !125, !2973, !1778, !2984, !53, !2999}
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 64)
!2960 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 64)
!2962 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !468, line: 90, baseType: !57)
!2963 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !2964, line: 77, baseType: !2965)
!2964 = !DIFile(filename: "/usr/include/stdio.h", directory: "", checksumkind: CSK_MD5, checksum: "f31eefcc3f15835fc5a4023a625cf609")
!2965 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !154, line: 194, baseType: !155)
!2966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2967, size: 64)
!2967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stacked_item", file: !2858, line: 150, size: 320, elements: !2968)
!2968 = !{!2969, !2975}
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2967, file: !2858, line: 151, baseType: !2970, size: 128)
!2970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_node", file: !659, line: 191, size: 128, elements: !2971)
!2971 = !{!2972, !2974}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2970, file: !659, line: 193, baseType: !2973, size: 64)
!2973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2970, size: 64)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2970, file: !659, line: 193, baseType: !2973, size: 64, offset: 64)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "item", scope: !2967, file: !2858, line: 152, baseType: !2976, size: 192, offset: 128)
!2976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "item", file: !2858, line: 117, size: 192, elements: !2977)
!2977 = !{!2978, !2979}
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2976, file: !2858, line: 118, baseType: !2927, size: 32)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2976, file: !2858, line: 122, baseType: !2980, size: 128, offset: 64)
!2980 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2976, file: !2858, line: 119, size: 128, elements: !2981)
!2981 = !{!2982, !2983}
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2980, file: !2858, line: 120, baseType: !205, size: 64)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2980, file: !2858, line: 121, baseType: !55, size: 64, offset: 64)
!2984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2985, size: 64)
!2985 = !DIDerivedType(tag: DW_TAG_typedef, name: "strbuf_t", file: !197, line: 25, baseType: !2986)
!2986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "strbuf_t_", file: !197, line: 27, size: 256, elements: !2987)
!2987 = !{!2988, !2993, !2998}
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2986, file: !197, line: 31, baseType: !2989, size: 64)
!2989 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2986, file: !197, line: 28, size: 64, elements: !2990)
!2990 = !{!2991, !2992}
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2989, file: !197, line: 29, baseType: !52, size: 64)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "static_buffer", scope: !2989, file: !197, line: 30, baseType: !205, size: 64)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2986, file: !197, line: 34, baseType: !2994, size: 128, offset: 64)
!2994 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2986, file: !197, line: 32, size: 128, elements: !2995)
!2995 = !{!2996, !2997}
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !2994, file: !197, line: 33, baseType: !55, size: 64)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2994, file: !197, line: 33, baseType: !55, size: 64, offset: 64)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2986, file: !197, line: 35, baseType: !9, size: 32, offset: 192)
!2999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3000, size: 64)
!3000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "chunk", file: !2858, line: 101, size: 192, elements: !3001)
!3001 = !{!3002, !3003, !3004}
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3000, file: !2858, line: 102, baseType: !2908, size: 32)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3000, file: !2858, line: 103, baseType: !111, size: 64, offset: 64)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3000, file: !2858, line: 104, baseType: !2921, size: 32, offset: 128)
!3005 = !{!2856, !2859, !2861, !2863, !2865, !2867, !2869, !2871, !2873, !2875, !3006, !2877, !2879, !2881, !2883, !2885, !2887, !2889, !2891, !2893, !2895, !2897, !2899, !2901, !3008, !3010, !3012, !3014, !3016, !3018, !3020, !3022, !3024, !3026, !3028, !3030, !3032, !2903, !3034, !3036, !3039, !3041, !3044, !3046, !3048, !3050, !3053, !3055, !3057, !3059, !3061, !3063, !3065, !3067, !3069, !3074, !3079, !3081, !3083, !3085, !3087, !3089, !3091, !3093, !3106, !3108, !3110}
!3006 = !DIGlobalVariableExpression(var: !3007, expr: !DIExpression(DW_OP_constu, 16, DW_OP_stack_value))
!3007 = distinct !DIGlobalVariable(name: "array_increment_step", scope: !2905, file: !2858, line: 160, type: !490, isLocal: true, isDefinition: true)
!3008 = !DIGlobalVariableExpression(var: !3009, expr: !DIExpression())
!3009 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 86, type: !369, isLocal: true, isDefinition: true)
!3010 = !DIGlobalVariableExpression(var: !3011, expr: !DIExpression())
!3011 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 87, type: !547, isLocal: true, isDefinition: true)
!3012 = !DIGlobalVariableExpression(var: !3013, expr: !DIExpression())
!3013 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 88, type: !253, isLocal: true, isDefinition: true)
!3014 = !DIGlobalVariableExpression(var: !3015, expr: !DIExpression())
!3015 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 89, type: !248, isLocal: true, isDefinition: true)
!3016 = !DIGlobalVariableExpression(var: !3017, expr: !DIExpression())
!3017 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 90, type: !290, isLocal: true, isDefinition: true)
!3018 = !DIGlobalVariableExpression(var: !3019, expr: !DIExpression())
!3019 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 91, type: !253, isLocal: true, isDefinition: true)
!3020 = !DIGlobalVariableExpression(var: !3021, expr: !DIExpression())
!3021 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 92, type: !290, isLocal: true, isDefinition: true)
!3022 = !DIGlobalVariableExpression(var: !3023, expr: !DIExpression())
!3023 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 93, type: !369, isLocal: true, isDefinition: true)
!3024 = !DIGlobalVariableExpression(var: !3025, expr: !DIExpression())
!3025 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 94, type: !297, isLocal: true, isDefinition: true)
!3026 = !DIGlobalVariableExpression(var: !3027, expr: !DIExpression())
!3027 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 95, type: !547, isLocal: true, isDefinition: true)
!3028 = !DIGlobalVariableExpression(var: !3029, expr: !DIExpression())
!3029 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 96, type: !316, isLocal: true, isDefinition: true)
!3030 = !DIGlobalVariableExpression(var: !3031, expr: !DIExpression())
!3031 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 97, type: !336, isLocal: true, isDefinition: true)
!3032 = !DIGlobalVariableExpression(var: !3033, expr: !DIExpression())
!3033 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 98, type: !1272, isLocal: true, isDefinition: true)
!3034 = !DIGlobalVariableExpression(var: !3035, expr: !DIExpression())
!3035 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 236, type: !547, isLocal: true, isDefinition: true)
!3036 = !DIGlobalVariableExpression(var: !3037, expr: !DIExpression())
!3037 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 236, type: !3038, isLocal: true, isDefinition: true)
!3038 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 264, elements: !874)
!3039 = !DIGlobalVariableExpression(var: !3040, expr: !DIExpression())
!3040 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 615, type: !309, isLocal: true, isDefinition: true)
!3041 = !DIGlobalVariableExpression(var: !3042, expr: !DIExpression())
!3042 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 521, type: !3043, isLocal: true, isDefinition: true)
!3043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 88, elements: !254)
!3044 = !DIGlobalVariableExpression(var: !3045, expr: !DIExpression())
!3045 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 521, type: !146, isLocal: true, isDefinition: true)
!3046 = !DIGlobalVariableExpression(var: !3047, expr: !DIExpression())
!3047 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 480, type: !834, isLocal: true, isDefinition: true)
!3048 = !DIGlobalVariableExpression(var: !3049, expr: !DIExpression())
!3049 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 452, type: !873, isLocal: true, isDefinition: true)
!3050 = !DIGlobalVariableExpression(var: !3051, expr: !DIExpression())
!3051 = distinct !DIGlobalVariable(name: "left_meta", scope: !2905, file: !2858, line: 162, type: !3052, isLocal: true, isDefinition: true)
!3052 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 24, elements: !281)
!3053 = !DIGlobalVariableExpression(var: !3054, expr: !DIExpression())
!3054 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 380, type: !403, isLocal: true, isDefinition: true)
!3055 = !DIGlobalVariableExpression(var: !3056, expr: !DIExpression())
!3056 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 397, type: !884, isLocal: true, isDefinition: true)
!3057 = !DIGlobalVariableExpression(var: !3058, expr: !DIExpression())
!3058 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 399, type: !508, isLocal: true, isDefinition: true)
!3059 = !DIGlobalVariableExpression(var: !3060, expr: !DIExpression())
!3060 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 419, type: !309, isLocal: true, isDefinition: true)
!3061 = !DIGlobalVariableExpression(var: !3062, expr: !DIExpression())
!3062 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 363, type: !304, isLocal: true, isDefinition: true)
!3063 = !DIGlobalVariableExpression(var: !3064, expr: !DIExpression())
!3064 = distinct !DIGlobalVariable(name: "right_meta", scope: !2905, file: !2858, line: 163, type: !3052, isLocal: true, isDefinition: true)
!3065 = !DIGlobalVariableExpression(var: !3066, expr: !DIExpression())
!3066 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 1041, type: !2615, isLocal: true, isDefinition: true)
!3067 = !DIGlobalVariableExpression(var: !3068, expr: !DIExpression())
!3068 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 1041, type: !1293, isLocal: true, isDefinition: true)
!3069 = !DIGlobalVariableExpression(var: !3070, expr: !DIExpression())
!3070 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 1051, type: !3071, isLocal: true, isDefinition: true)
!3071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 440, elements: !3072)
!3072 = !{!3073}
!3073 = !DISubrange(count: 55)
!3074 = !DIGlobalVariableExpression(var: !3075, expr: !DIExpression())
!3075 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 1062, type: !3076, isLocal: true, isDefinition: true)
!3076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 472, elements: !3077)
!3077 = !{!3078}
!3078 = !DISubrange(count: 59)
!3079 = !DIGlobalVariableExpression(var: !3080, expr: !DIExpression())
!3080 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 1071, type: !873, isLocal: true, isDefinition: true)
!3081 = !DIGlobalVariableExpression(var: !3082, expr: !DIExpression())
!3082 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 1075, type: !146, isLocal: true, isDefinition: true)
!3083 = !DIGlobalVariableExpression(var: !3084, expr: !DIExpression())
!3084 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 944, type: !1230, isLocal: true, isDefinition: true)
!3085 = !DIGlobalVariableExpression(var: !3086, expr: !DIExpression())
!3086 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 944, type: !323, isLocal: true, isDefinition: true)
!3087 = !DIGlobalVariableExpression(var: !3088, expr: !DIExpression())
!3088 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 989, type: !374, isLocal: true, isDefinition: true)
!3089 = !DIGlobalVariableExpression(var: !3090, expr: !DIExpression())
!3090 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 992, type: !386, isLocal: true, isDefinition: true)
!3091 = !DIGlobalVariableExpression(var: !3092, expr: !DIExpression())
!3092 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 1001, type: !398, isLocal: true, isDefinition: true)
!3093 = !DIGlobalVariableExpression(var: !3094, expr: !DIExpression())
!3094 = distinct !DIGlobalVariable(name: "dispatch_table", scope: !3095, file: !2858, line: 1159, type: !3104, isLocal: true, isDefinition: true)
!3095 = distinct !DISubprogram(name: "apply_until", scope: !2858, file: !2858, line: 1156, type: !3096, scopeLine: 1158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!3096 = !DISubroutineType(types: !3097)
!3097 = !{!2999, !3098, !2999, !2984, !111, !111}
!3098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3099, size: 64)
!3099 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_tpl_t", file: !2102, line: 25, baseType: !3100)
!3100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_tpl_t_", file: !2858, line: 107, size: 128, elements: !3101)
!3101 = !{!3102, !3103}
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "chunks", scope: !3100, file: !2858, line: 108, baseType: !2999, size: 64)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_size", scope: !3100, file: !2858, line: 109, baseType: !55, size: 64, offset: 64)
!3104 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3105, size: 704, elements: !254)
!3105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !465)
!3106 = !DIGlobalVariableExpression(var: !3107, expr: !DIExpression())
!3107 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 1234, type: !1269, isLocal: true, isDefinition: true)
!3108 = !DIGlobalVariableExpression(var: !3109, expr: !DIExpression())
!3109 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 1234, type: !535, isLocal: true, isDefinition: true)
!3110 = !DIGlobalVariableExpression(var: !3111, expr: !DIExpression())
!3111 = distinct !DIGlobalVariable(scope: null, file: !2858, line: 1268, type: !1233, isLocal: true, isDefinition: true)
!3112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, size: 832, elements: !317)
!3113 = !DIGlobalVariableExpression(var: !3114, expr: !DIExpression())
!3114 = distinct !DIGlobalVariable(scope: null, file: !3115, line: 241, type: !570, isLocal: true, isDefinition: true)
!3115 = !DIFile(filename: "common/lwan-thread.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "9d2309d4fac6f8cdf7410220b7094774")
!3116 = !DIGlobalVariableExpression(var: !3117, expr: !DIExpression())
!3117 = distinct !DIGlobalVariable(scope: null, file: !3115, line: 241, type: !881, isLocal: true, isDefinition: true)
!3118 = !DIGlobalVariableExpression(var: !3119, expr: !DIExpression())
!3119 = distinct !DIGlobalVariable(scope: null, file: !3115, line: 241, type: !868, isLocal: true, isDefinition: true)
!3120 = !DIGlobalVariableExpression(var: !3121, expr: !DIExpression())
!3121 = distinct !DIGlobalVariable(scope: null, file: !3115, line: 245, type: !304, isLocal: true, isDefinition: true)
!3122 = !DIGlobalVariableExpression(var: !3123, expr: !DIExpression())
!3123 = distinct !DIGlobalVariable(scope: null, file: !3115, line: 246, type: !868, isLocal: true, isDefinition: true)
!3124 = !DIGlobalVariableExpression(var: !3125, expr: !DIExpression())
!3125 = distinct !DIGlobalVariable(scope: null, file: !3115, line: 408, type: !1917, isLocal: true, isDefinition: true)
!3126 = !DIGlobalVariableExpression(var: !3127, expr: !DIExpression())
!3127 = distinct !DIGlobalVariable(scope: null, file: !3115, line: 408, type: !369, isLocal: true, isDefinition: true)
!3128 = !DIGlobalVariableExpression(var: !3129, expr: !DIExpression())
!3129 = distinct !DIGlobalVariable(scope: null, file: !3115, line: 414, type: !560, isLocal: true, isDefinition: true)
!3130 = !DIGlobalVariableExpression(var: !3131, expr: !DIExpression())
!3131 = distinct !DIGlobalVariable(scope: null, file: !3115, line: 414, type: !623, isLocal: true, isDefinition: true)
!3132 = !DIGlobalVariableExpression(var: !3133, expr: !DIExpression())
!3133 = distinct !DIGlobalVariable(scope: null, file: !3115, line: 418, type: !374, isLocal: true, isDefinition: true)
!3134 = !DIGlobalVariableExpression(var: !3135, expr: !DIExpression())
!3135 = distinct !DIGlobalVariable(scope: null, file: !3115, line: 427, type: !881, isLocal: true, isDefinition: true)
!3136 = !DIGlobalVariableExpression(var: !3137, expr: !DIExpression())
!3137 = distinct !DIGlobalVariable(scope: null, file: !3115, line: 427, type: !336, isLocal: true, isDefinition: true)
!3138 = !DIGlobalVariableExpression(var: !3139, expr: !DIExpression())
!3139 = distinct !DIGlobalVariable(scope: null, file: !3115, line: 376, type: !532, isLocal: true, isDefinition: true)
!3140 = !DIGlobalVariableExpression(var: !3141, expr: !DIExpression())
!3141 = distinct !DIGlobalVariable(scope: null, file: !3115, line: 376, type: !316, isLocal: true, isDefinition: true)
!3142 = !DIGlobalVariableExpression(var: !3143, expr: !DIExpression())
!3143 = distinct !DIGlobalVariable(scope: null, file: !3115, line: 379, type: !1251, isLocal: true, isDefinition: true)
!3144 = !DIGlobalVariableExpression(var: !3145, expr: !DIExpression())
!3145 = distinct !DIGlobalVariable(scope: null, file: !3115, line: 382, type: !336, isLocal: true, isDefinition: true)
!3146 = !DIGlobalVariableExpression(var: !3147, expr: !DIExpression())
!3147 = distinct !DIGlobalVariable(scope: null, file: !3115, line: 385, type: !386, isLocal: true, isDefinition: true)
!3148 = !DIGlobalVariableExpression(var: !3149, expr: !DIExpression())
!3149 = distinct !DIGlobalVariable(scope: null, file: !3115, line: 388, type: !290, isLocal: true, isDefinition: true)
!3150 = !DIGlobalVariableExpression(var: !3151, expr: !DIExpression())
!3151 = distinct !DIGlobalVariable(scope: null, file: !3115, line: 392, type: !248, isLocal: true, isDefinition: true)
!3152 = !DIGlobalVariableExpression(var: !3153, expr: !DIExpression())
!3153 = distinct !DIGlobalVariable(scope: null, file: !3115, line: 395, type: !887, isLocal: true, isDefinition: true)
!3154 = !DIGlobalVariableExpression(var: !3155, expr: !DIExpression())
!3155 = distinct !DIGlobalVariable(scope: null, file: !3115, line: 398, type: !623, isLocal: true, isDefinition: true)
!3156 = !DIGlobalVariableExpression(var: !3157, expr: !DIExpression())
!3157 = distinct !DIGlobalVariable(scope: null, file: !3115, line: 312, type: !1256, isLocal: true, isDefinition: true)
!3158 = !DIGlobalVariableExpression(var: !3159, expr: !DIExpression())
!3159 = distinct !DIGlobalVariable(scope: null, file: !3115, line: 312, type: !605, isLocal: true, isDefinition: true)
!3160 = !DIGlobalVariableExpression(var: !3161, expr: !DIExpression())
!3161 = distinct !DIGlobalVariable(scope: null, file: !3115, line: 317, type: !884, isLocal: true, isDefinition: true)
!3162 = !DIGlobalVariableExpression(var: !3163, expr: !DIExpression())
!3163 = distinct !DIGlobalVariable(scope: null, file: !3115, line: 285, type: !1230, isLocal: true, isDefinition: true)
!3164 = !DIGlobalVariableExpression(var: !3165, expr: !DIExpression())
!3165 = distinct !DIGlobalVariable(scope: null, file: !3115, line: 285, type: !290, isLocal: true, isDefinition: true)
!3166 = !DIGlobalVariableExpression(var: !3167, expr: !DIExpression())
!3167 = distinct !DIGlobalVariable(name: "events_by_write_flag", scope: !3168, file: !3115, line: 39, type: !3218, isLocal: true, isDefinition: true)
!3168 = distinct !DICompileUnit(language: DW_LANG_C11, file: !3169, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3170, retainedTypes: !3202, globals: !3203, splitDebugInlining: false, nameTableKind: None)
!3169 = !DIFile(filename: "/home/raj/lwan/common/lwan-thread.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "9d2309d4fac6f8cdf7410220b7094774")
!3170 = !{!66, !3171, !3175, !3180, !3184, !33, !8, !1724}
!3171 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3172, line: 23, baseType: !9, size: 32, elements: !3173)
!3172 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/epoll.h", directory: "", checksumkind: CSK_MD5, checksum: "5dde4c8e84480c014305a04d7ba11b15")
!3173 = !{!3174}
!3174 = !DIEnumerator(name: "EPOLL_CLOEXEC", value: 524288)
!3175 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3176, line: 134, baseType: !9, size: 32, elements: !3177)
!3176 = !DIFile(filename: "/usr/include/pthread.h", directory: "", checksumkind: CSK_MD5, checksum: "5205981c6f80cc3dc1e81231df63d8ef")
!3177 = !{!3178, !3179}
!3178 = !DIEnumerator(name: "PTHREAD_SCOPE_SYSTEM", value: 0)
!3179 = !DIEnumerator(name: "PTHREAD_SCOPE_PROCESS", value: 1)
!3180 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3176, line: 37, baseType: !9, size: 32, elements: !3181)
!3181 = !{!3182, !3183}
!3182 = !DIEnumerator(name: "PTHREAD_CREATE_JOINABLE", value: 0)
!3183 = !DIEnumerator(name: "PTHREAD_CREATE_DETACHED", value: 1)
!3184 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "EPOLL_EVENTS", file: !3185, line: 35, baseType: !9, size: 32, elements: !3186)
!3185 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/epoll.h", directory: "", checksumkind: CSK_MD5, checksum: "0986da711185ef074164bfe0527c7631")
!3186 = !{!3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201}
!3187 = !DIEnumerator(name: "EPOLLIN", value: 1)
!3188 = !DIEnumerator(name: "EPOLLPRI", value: 2)
!3189 = !DIEnumerator(name: "EPOLLOUT", value: 4)
!3190 = !DIEnumerator(name: "EPOLLRDNORM", value: 64)
!3191 = !DIEnumerator(name: "EPOLLRDBAND", value: 128)
!3192 = !DIEnumerator(name: "EPOLLWRNORM", value: 256)
!3193 = !DIEnumerator(name: "EPOLLWRBAND", value: 512)
!3194 = !DIEnumerator(name: "EPOLLMSG", value: 1024)
!3195 = !DIEnumerator(name: "EPOLLERR", value: 8)
!3196 = !DIEnumerator(name: "EPOLLHUP", value: 16)
!3197 = !DIEnumerator(name: "EPOLLRDHUP", value: 8192)
!3198 = !DIEnumerator(name: "EPOLLEXCLUSIVE", value: 268435456)
!3199 = !DIEnumerator(name: "EPOLLWAKEUP", value: 536870912)
!3200 = !DIEnumerator(name: "EPOLLONESHOT", value: 1073741824)
!3201 = !DIEnumerator(name: "EPOLLET", value: 2147483648, isUnsigned: true)
!3202 = !{!55, !34, !125, !1778, !111, !151, !9}
!3203 = !{!3113, !3116, !3118, !3120, !3122, !3124, !3126, !3128, !3130, !3132, !3134, !3136, !3138, !3140, !3142, !3144, !3146, !3148, !3150, !3152, !3154, !3156, !3158, !3160, !3162, !3164, !3166, !3204, !3206, !3209, !3211, !3216}
!3204 = !DIGlobalVariableExpression(var: !3205, expr: !DIExpression())
!3205 = distinct !DIGlobalVariable(scope: null, file: !3115, line: 158, type: !386, isLocal: true, isDefinition: true)
!3206 = !DIGlobalVariableExpression(var: !3207, expr: !DIExpression())
!3207 = distinct !DIGlobalVariable(scope: null, file: !3115, line: 158, type: !3208, isLocal: true, isDefinition: true)
!3208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 280, elements: !509)
!3209 = !DIGlobalVariableExpression(var: !3210, expr: !DIExpression())
!3210 = distinct !DIGlobalVariable(scope: null, file: !3115, line: 177, type: !253, isLocal: true, isDefinition: true)
!3211 = !DIGlobalVariableExpression(var: !3212, expr: !DIExpression())
!3212 = distinct !DIGlobalVariable(scope: null, file: !3115, line: 177, type: !3213, isLocal: true, isDefinition: true)
!3213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 616, elements: !3214)
!3214 = !{!3215}
!3215 = !DISubrange(count: 77)
!3216 = !DIGlobalVariableExpression(var: !3217, expr: !DIExpression())
!3217 = distinct !DIGlobalVariable(scope: null, file: !3115, line: 212, type: !1230, isLocal: true, isDefinition: true)
!3218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3219, size: 64, elements: !159)
!3219 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !484)
!3220 = !DIGlobalVariableExpression(var: !3221, expr: !DIExpression())
!3221 = distinct !DIGlobalVariable(scope: null, file: !3222, line: 85, type: !615, isLocal: true, isDefinition: true)
!3222 = !DIFile(filename: "common/lwan-trie.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "2e559976bbcd6644de57f46fa6795f72")
!3223 = !DIGlobalVariableExpression(var: !3224, expr: !DIExpression())
!3224 = distinct !DIGlobalVariable(scope: null, file: !3222, line: 85, type: !532, isLocal: true, isDefinition: true)
!3225 = !DIGlobalVariableExpression(var: !3226, expr: !DIExpression())
!3226 = distinct !DIGlobalVariable(scope: null, file: !3222, line: 85, type: !323, isLocal: true, isDefinition: true)
!3227 = !DIGlobalVariableExpression(var: !3228, expr: !DIExpression())
!3228 = distinct !DIGlobalVariable(scope: null, file: !3222, line: 97, type: !323, isLocal: true, isDefinition: true)
!3229 = !DIGlobalVariableExpression(var: !3230, expr: !DIExpression())
!3230 = distinct !DIGlobalVariable(name: "seed_value", scope: !3231, file: !3242, line: 40, type: !484, isLocal: true, isDefinition: true)
!3231 = distinct !DICompileUnit(language: DW_LANG_C11, file: !3232, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3233, globals: !3241, splitDebugInlining: false, nameTableKind: None)
!3232 = !DIFile(filename: "/home/raj/lwan/common/murmur3.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "65cd04e986612dce327517efaac702f9")
!3233 = !{!52, !9, !3234, !3236, !3238, !3240}
!3234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3235, size: 64)
!3235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1817)
!3236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3237, size: 64)
!3237 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3238)
!3238 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !485, line: 27, baseType: !3239)
!3239 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !154, line: 45, baseType: !57)
!3240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3238, size: 64)
!3241 = !{!3229}
!3242 = !DIFile(filename: "common/murmur3.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "65cd04e986612dce327517efaac702f9")
!3243 = !DIGlobalVariableExpression(var: !3244, expr: !DIExpression())
!3244 = distinct !DIGlobalVariable(scope: null, file: !3245, line: 188, type: !374, isLocal: true, isDefinition: true)
!3245 = !DIFile(filename: "common/realpathat.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "90270fbee7ce027e07b9bf25029a1a78")
!3246 = !DIGlobalVariableExpression(var: !3247, expr: !DIExpression())
!3247 = distinct !DIGlobalVariable(scope: null, file: !3245, line: 188, type: !508, isLocal: true, isDefinition: true)
!3248 = !DIGlobalVariableExpression(var: !3249, expr: !DIExpression())
!3249 = distinct !DIGlobalVariable(scope: null, file: !3245, line: 188, type: !3250, isLocal: true, isDefinition: true)
!3250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 544, elements: !3251)
!3251 = !{!3252}
!3252 = !DISubrange(count: 68)
!3253 = !DIGlobalVariableExpression(var: !3254, expr: !DIExpression())
!3254 = distinct !DIGlobalVariable(scope: null, file: !3255, line: 46, type: !253, isLocal: true, isDefinition: true)
!3255 = !DIFile(filename: "common/sd-daemon.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "de3fec4ce7d1f236ce6178a1d0e969ca")
!3256 = !DIGlobalVariableExpression(var: !3257, expr: !DIExpression())
!3257 = distinct !DIGlobalVariable(scope: null, file: !3255, line: 71, type: !253, isLocal: true, isDefinition: true)
!3258 = !DIGlobalVariableExpression(var: !3259, expr: !DIExpression())
!3259 = distinct !DIGlobalVariable(scope: null, file: !3255, line: 359, type: !297, isLocal: true, isDefinition: true)
!3260 = !DIGlobalVariableExpression(var: !3261, expr: !DIExpression())
!3261 = distinct !DIGlobalVariable(scope: null, file: !3255, line: 438, type: !623, isLocal: true, isDefinition: true)
!3262 = !DIGlobalVariableExpression(var: !3263, expr: !DIExpression())
!3263 = distinct !DIGlobalVariable(scope: null, file: !3255, line: 451, type: !316, isLocal: true, isDefinition: true)
!3264 = !DIGlobalVariableExpression(var: !3265, expr: !DIExpression())
!3265 = distinct !DIGlobalVariable(scope: null, file: !3255, line: 474, type: !297, isLocal: true, isDefinition: true)
!3266 = distinct !DICompileUnit(language: DW_LANG_C11, file: !3267, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3268, globals: !3278, splitDebugInlining: false, nameTableKind: None)
!3267 = !DIFile(filename: "/home/raj/lwan/common/list.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "0a5860268a1418537132a40f402b0afc")
!3268 = !{!3269, !3274, !111}
!3269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3270, size: 64)
!3270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_node", file: !659, line: 191, size: 128, elements: !3271)
!3271 = !{!3272, !3273}
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3270, file: !659, line: 193, baseType: !3269, size: 64)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3270, file: !659, line: 193, baseType: !3269, size: 64, offset: 64)
!3274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3275, size: 64)
!3275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !659, line: 208, size: 128, elements: !3276)
!3276 = !{!3277}
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !3275, file: !659, line: 210, baseType: !3270, size: 128)
!3278 = !{!494}
!3279 = distinct !DICompileUnit(language: DW_LANG_C11, file: !3280, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3281, retainedTypes: !3287, globals: !3296, splitDebugInlining: false, nameTableKind: None)
!3280 = !DIFile(filename: "/home/raj/lwan/common/lwan-cache.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "f1aa9dd4cc8594b027bd5599ddc2fec4")
!3281 = !{!3282, !1724}
!3282 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !502, line: 35, baseType: !9, size: 32, elements: !3283)
!3283 = !{!3284, !3285, !3286}
!3284 = !DIEnumerator(name: "FLOATING", value: 1)
!3285 = !DIEnumerator(name: "TEMPORARY", value: 2)
!3286 = !DIEnumerator(name: "SHUTTING_DOWN", value: 1)
!3287 = !{!3288, !3291, !111, !52}
!3288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3289, size: 64)
!3289 = !DISubroutineType(types: !3290)
!3290 = !{null, !111, !111}
!3291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3292, size: 64)
!3292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_node", file: !659, line: 191, size: 128, elements: !3293)
!3293 = !{!3294, !3295}
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3292, file: !659, line: 193, baseType: !3291, size: 64)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3292, file: !659, line: 193, baseType: !3291, size: 64, offset: 64)
!3296 = !{!500, !506, !511, !516, !521, !523, !525, !530, !533, !538, !543, !545, !548, !550, !553, !556, !558, !561, !563}
!3297 = distinct !DICompileUnit(language: DW_LANG_C11, file: !3298, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3299, retainedTypes: !3300, globals: !3301, splitDebugInlining: false, nameTableKind: None)
!3298 = !DIFile(filename: "/home/raj/lwan/common/lwan-config.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "199ccadf79b83965963cdf65e7c49914")
!3299 = !{!646, !2943}
!3300 = !{!205, !34, !125, !52}
!3301 = !{!565, !568, !573, !578, !583, !585, !587, !589, !591, !593, !595, !597, !599, !601, !603, !608}
!3302 = distinct !DICompileUnit(language: DW_LANG_C11, file: !3303, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3304, globals: !3305, splitDebugInlining: false, nameTableKind: None)
!3303 = !DIFile(filename: "/home/raj/lwan/common/lwan-coro.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "f10099f62b8fec41343042e41e9eba52")
!3304 = !{!674, !2962, !111, !115}
!3305 = !{!610, !613, !618, !621, !626, !628, !631, !634, !636}
!3306 = distinct !DICompileUnit(language: DW_LANG_C11, file: !3307, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3308, retainedTypes: !3309, globals: !3314, splitDebugInlining: false, nameTableKind: None)
!3307 = !DIFile(filename: "/home/raj/lwan/common/lwan-io-wrappers.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "df65fc501e2089d1c77356ebe44cff47")
!3308 = !{!33, !66, !8, !1724}
!3309 = !{!115, !111, !3310, !3313, !52, !55, !2271}
!3310 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !3311, line: 267, baseType: !3312)
!3311 = !DIFile(filename: "/usr/include/unistd.h", directory: "", checksumkind: CSK_MD5, checksum: "ed37c2e6f30ba31a8b41e4d70547c39c")
!3312 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intptr_t", file: !154, line: 207, baseType: !155)
!3313 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !3311, line: 220, baseType: !2965)
!3314 = !{!3315, !3318, !842, !845, !847, !849, !852}
!3315 = !DIGlobalVariableExpression(var: !3316, expr: !DIExpression(DW_OP_constu, 5, DW_OP_stack_value))
!3316 = distinct !DIGlobalVariable(name: "MAX_FAILED_TRIES", scope: !3306, file: !844, line: 29, type: !3317, isLocal: true, isDefinition: true)
!3317 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !34)
!3318 = !DIGlobalVariableExpression(var: !3319, expr: !DIExpression(DW_OP_constu, 1400, DW_OP_stack_value))
!3319 = distinct !DIGlobalVariable(name: "BUFFER_SIZE", scope: !3306, file: !844, line: 30, type: !490, isLocal: true, isDefinition: true)
!3320 = distinct !DICompileUnit(language: DW_LANG_C11, file: !3321, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3322, retainedTypes: !244, globals: !3323, splitDebugInlining: false, nameTableKind: None)
!3321 = !DIFile(filename: "/home/raj/lwan/common/lwan-socket.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "c18944055a3b887a7cad5341937765cf")
!3322 = !{!66, !966}
!3323 = !{!2567, !2570, !2572, !2574, !2576, !2578, !2580, !2582, !2584, !2586, !2591, !2593, !2595, !2597, !2599, !2601, !2603, !2605, !2607, !2609, !2611, !2613, !2616, !2618, !2620, !2622, !2624, !2626, !2628}
!3324 = distinct !DICompileUnit(language: DW_LANG_C11, file: !3325, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3326, globals: !3327, splitDebugInlining: false, nameTableKind: None)
!3325 = !DIFile(filename: "/home/raj/lwan/common/lwan-trie.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "2e559976bbcd6644de57f46fa6795f72")
!3326 = !{!34, !55, !111}
!3327 = !{!3220, !3223, !3225, !3227}
!3328 = distinct !DICompileUnit(language: DW_LANG_C11, file: !3329, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3330, splitDebugInlining: false, nameTableKind: None)
!3329 = !DIFile(filename: "/home/raj/lwan/common/reallocarray.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "72caf594d7fe0d89f4073c86d2b69ce6")
!3330 = !{!111, !55}
!3331 = distinct !DICompileUnit(language: DW_LANG_C11, file: !3332, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3333, globals: !3334, splitDebugInlining: false, nameTableKind: None)
!3332 = !DIFile(filename: "/home/raj/lwan/common/realpathat.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "90270fbee7ce027e07b9bf25029a1a78")
!3333 = !{!111, !55, !52, !34, !155}
!3334 = !{!3243, !3246, !3248}
!3335 = distinct !DICompileUnit(language: DW_LANG_C11, file: !3336, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3337, retainedTypes: !3338, globals: !3343, splitDebugInlining: false, nameTableKind: None)
!3336 = !DIFile(filename: "/home/raj/lwan/common/sd-daemon.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "de3fec4ce7d1f236ce6178a1d0e969ca")
!3337 = !{!966, !1858}
!3338 = !{!3339, !34, !52, !3341}
!3339 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !187, line: 97, baseType: !3340)
!3340 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !154, line: 154, baseType: !34)
!3341 = !DIDerivedType(tag: DW_TAG_typedef, name: "socklen_t", file: !1781, line: 33, baseType: !3342)
!3342 = !DIDerivedType(tag: DW_TAG_typedef, name: "__socklen_t", file: !154, line: 210, baseType: !9)
!3343 = !{!3253, !3256, !3258, !3260, !3262, !3264}
!3344 = distinct !DICompileUnit(language: DW_LANG_C11, file: !3345, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3346, globals: !3347, splitDebugInlining: false, nameTableKind: None)
!3345 = !DIFile(filename: "/home/raj/lwan/common/strbuf.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "501d053ee6f84a89407bb8f549366545")
!3346 = !{!34, !55}
!3347 = !{!3348, !3351, !3354}
!3348 = !DIGlobalVariableExpression(var: !3349, expr: !DIExpression(DW_OP_constu, 64, DW_OP_stack_value))
!3349 = distinct !DIGlobalVariable(name: "DEFAULT_BUF_SIZE", scope: !3344, file: !3350, line: 30, type: !490, isLocal: true, isDefinition: true)
!3350 = !DIFile(filename: "common/strbuf.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "501d053ee6f84a89407bb8f549366545")
!3351 = !DIGlobalVariableExpression(var: !3352, expr: !DIExpression(DW_OP_constu, 2, DW_OP_stack_value))
!3352 = distinct !DIGlobalVariable(name: "DYNAMICALLY_ALLOCATED", scope: !3344, file: !3350, line: 29, type: !3353, isLocal: true, isDefinition: true)
!3353 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9)
!3354 = !DIGlobalVariableExpression(var: !3355, expr: !DIExpression(DW_OP_constu, 1, DW_OP_stack_value))
!3355 = distinct !DIGlobalVariable(name: "STATIC", scope: !3344, file: !3350, line: 28, type: !3353, isLocal: true, isDefinition: true)
!3356 = !{!"clang version 16.0.0"}
!3357 = !{i32 7, !"Dwarf Version", i32 5}
!3358 = !{i32 2, !"Debug Info Version", i32 3}
!3359 = !{i32 1, !"wchar_size", i32 4}
!3360 = !{i32 8, !"PIC Level", i32 2}
!3361 = !{i32 7, !"PIE Level", i32 2}
!3362 = !{i32 7, !"uwtable", i32 2}
!3363 = !{i32 7, !"frame-pointer", i32 2}
!3364 = !DILocalVariable(name: "request", arg: 1, scope: !2, file: !3, line: 35, type: !27)
!3365 = !DILocation(line: 35, column: 28, scope: !2)
!3366 = !DILocalVariable(name: "response", arg: 2, scope: !2, file: !3, line: 36, type: !225)
!3367 = !DILocation(line: 36, column: 29, scope: !2)
!3368 = !DILocalVariable(name: "data", arg: 3, scope: !2, file: !3, line: 37, type: !111)
!3369 = !DILocation(line: 37, column: 18, scope: !2)
!3370 = !DILocation(line: 50, column: 5, scope: !2)
!3371 = !DILocation(line: 50, column: 15, scope: !2)
!3372 = !DILocation(line: 50, column: 25, scope: !2)
!3373 = !DILocation(line: 51, column: 23, scope: !2)
!3374 = !DILocation(line: 51, column: 33, scope: !2)
!3375 = !DILocation(line: 51, column: 5, scope: !2)
!3376 = !DILocation(line: 53, column: 5, scope: !2)
!3377 = distinct !DISubprogram(name: "test_chunked_encoding", scope: !3, file: !3, line: 57, type: !4, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !226, retainedNodes: !286)
!3378 = !DILocalVariable(name: "request", arg: 1, scope: !3377, file: !3, line: 57, type: !27)
!3379 = !DILocation(line: 57, column: 39, scope: !3377)
!3380 = !DILocalVariable(name: "response", arg: 2, scope: !3377, file: !3, line: 58, type: !225)
!3381 = !DILocation(line: 58, column: 30, scope: !3377)
!3382 = !DILocalVariable(name: "data", arg: 3, scope: !3377, file: !3, line: 59, type: !111)
!3383 = !DILocation(line: 59, column: 19, scope: !3377)
!3384 = !DILocalVariable(name: "i", scope: !3377, file: !3, line: 61, type: !34)
!3385 = !DILocation(line: 61, column: 9, scope: !3377)
!3386 = !DILocation(line: 63, column: 5, scope: !3377)
!3387 = !DILocation(line: 63, column: 15, scope: !3377)
!3388 = !DILocation(line: 63, column: 25, scope: !3377)
!3389 = !DILocation(line: 65, column: 19, scope: !3377)
!3390 = !DILocation(line: 65, column: 29, scope: !3377)
!3391 = !DILocation(line: 65, column: 5, scope: !3377)
!3392 = !DILocation(line: 66, column: 30, scope: !3377)
!3393 = !DILocation(line: 66, column: 5, scope: !3377)
!3394 = !DILocation(line: 68, column: 12, scope: !3395)
!3395 = distinct !DILexicalBlock(scope: !3377, file: !3, line: 68, column: 5)
!3396 = !DILocation(line: 68, column: 10, scope: !3395)
!3397 = !DILocation(line: 68, column: 17, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3395, file: !3, line: 68, column: 5)
!3399 = !DILocation(line: 68, column: 19, scope: !3398)
!3400 = !DILocation(line: 68, column: 5, scope: !3395)
!3401 = !DILocation(line: 69, column: 23, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !3398, file: !3, line: 68, column: 31)
!3403 = !DILocation(line: 69, column: 33, scope: !3402)
!3404 = !DILocation(line: 69, column: 65, scope: !3402)
!3405 = !DILocation(line: 69, column: 9, scope: !3402)
!3406 = !DILocation(line: 70, column: 34, scope: !3402)
!3407 = !DILocation(line: 70, column: 9, scope: !3402)
!3408 = !DILocation(line: 71, column: 5, scope: !3402)
!3409 = !DILocation(line: 68, column: 27, scope: !3398)
!3410 = !DILocation(line: 68, column: 5, scope: !3398)
!3411 = distinct !{!3411, !3400, !3412, !3413}
!3412 = !DILocation(line: 71, column: 5, scope: !3395)
!3413 = !{!"llvm.loop.mustprogress"}
!3414 = !DILocation(line: 73, column: 19, scope: !3377)
!3415 = !DILocation(line: 73, column: 29, scope: !3377)
!3416 = !DILocation(line: 73, column: 5, scope: !3377)
!3417 = !DILocation(line: 74, column: 30, scope: !3377)
!3418 = !DILocation(line: 74, column: 5, scope: !3377)
!3419 = !DILocation(line: 76, column: 5, scope: !3377)
!3420 = distinct !DISubprogram(name: "test_server_sent_event", scope: !3, file: !3, line: 80, type: !4, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !226, retainedNodes: !286)
!3421 = !DILocalVariable(name: "request", arg: 1, scope: !3420, file: !3, line: 80, type: !27)
!3422 = !DILocation(line: 80, column: 40, scope: !3420)
!3423 = !DILocalVariable(name: "response", arg: 2, scope: !3420, file: !3, line: 81, type: !225)
!3424 = !DILocation(line: 81, column: 30, scope: !3420)
!3425 = !DILocalVariable(name: "data", arg: 3, scope: !3420, file: !3, line: 82, type: !111)
!3426 = !DILocation(line: 82, column: 19, scope: !3420)
!3427 = !DILocalVariable(name: "i", scope: !3420, file: !3, line: 84, type: !34)
!3428 = !DILocation(line: 84, column: 9, scope: !3420)
!3429 = !DILocation(line: 86, column: 12, scope: !3430)
!3430 = distinct !DILexicalBlock(scope: !3420, file: !3, line: 86, column: 5)
!3431 = !DILocation(line: 86, column: 10, scope: !3430)
!3432 = !DILocation(line: 86, column: 17, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !3430, file: !3, line: 86, column: 5)
!3434 = !DILocation(line: 86, column: 19, scope: !3433)
!3435 = !DILocation(line: 86, column: 5, scope: !3430)
!3436 = !DILocation(line: 87, column: 23, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !3433, file: !3, line: 86, column: 31)
!3438 = !DILocation(line: 87, column: 33, scope: !3437)
!3439 = !DILocation(line: 87, column: 64, scope: !3437)
!3440 = !DILocation(line: 87, column: 9, scope: !3437)
!3441 = !DILocation(line: 88, column: 34, scope: !3437)
!3442 = !DILocation(line: 88, column: 9, scope: !3437)
!3443 = !DILocation(line: 89, column: 5, scope: !3437)
!3444 = !DILocation(line: 86, column: 27, scope: !3433)
!3445 = !DILocation(line: 86, column: 5, scope: !3433)
!3446 = distinct !{!3446, !3435, !3447, !3413}
!3447 = !DILocation(line: 89, column: 5, scope: !3430)
!3448 = !DILocation(line: 91, column: 5, scope: !3420)
!3449 = !DILocalVariable(name: "request", arg: 1, scope: !285, file: !3, line: 95, type: !27)
!3450 = !DILocation(line: 95, column: 29, scope: !285)
!3451 = !DILocalVariable(name: "response", arg: 2, scope: !285, file: !3, line: 96, type: !225)
!3452 = !DILocation(line: 96, column: 30, scope: !285)
!3453 = !DILocalVariable(name: "data", arg: 3, scope: !285, file: !3, line: 97, type: !111)
!3454 = !DILocation(line: 97, column: 19, scope: !285)
!3455 = !DILocation(line: 103, column: 5, scope: !285)
!3456 = !DILocation(line: 103, column: 15, scope: !285)
!3457 = !DILocation(line: 103, column: 23, scope: !285)
!3458 = !DILocation(line: 104, column: 5, scope: !285)
!3459 = !DILocation(line: 104, column: 15, scope: !285)
!3460 = !DILocation(line: 104, column: 25, scope: !285)
!3461 = !DILocalVariable(name: "name", scope: !285, file: !3, line: 106, type: !205)
!3462 = !DILocation(line: 106, column: 17, scope: !285)
!3463 = !DILocation(line: 106, column: 53, scope: !285)
!3464 = !DILocation(line: 106, column: 24, scope: !285)
!3465 = !DILocation(line: 107, column: 9, scope: !3466)
!3466 = distinct !DILexicalBlock(scope: !285, file: !3, line: 107, column: 9)
!3467 = !DILocation(line: 107, column: 9, scope: !285)
!3468 = !DILocation(line: 108, column: 23, scope: !3466)
!3469 = !DILocation(line: 108, column: 33, scope: !3466)
!3470 = !DILocation(line: 108, column: 55, scope: !3466)
!3471 = !DILocation(line: 108, column: 9, scope: !3466)
!3472 = !DILocation(line: 110, column: 27, scope: !3466)
!3473 = !DILocation(line: 110, column: 37, scope: !3466)
!3474 = !DILocation(line: 110, column: 9, scope: !3466)
!3475 = !DILocalVariable(name: "dump_vars", scope: !285, file: !3, line: 112, type: !205)
!3476 = !DILocation(line: 112, column: 17, scope: !285)
!3477 = !DILocation(line: 112, column: 58, scope: !285)
!3478 = !DILocation(line: 112, column: 29, scope: !285)
!3479 = !DILocation(line: 113, column: 10, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !285, file: !3, line: 113, column: 9)
!3481 = !DILocation(line: 113, column: 9, scope: !285)
!3482 = !DILocation(line: 114, column: 9, scope: !3480)
!3483 = !DILocation(line: 116, column: 23, scope: !285)
!3484 = !DILocation(line: 116, column: 33, scope: !285)
!3485 = !DILocation(line: 116, column: 5, scope: !285)
!3486 = !DILocation(line: 117, column: 23, scope: !285)
!3487 = !DILocation(line: 117, column: 33, scope: !285)
!3488 = !DILocation(line: 117, column: 5, scope: !285)
!3489 = !DILocalVariable(name: "qs", scope: !285, file: !3, line: 119, type: !170)
!3490 = !DILocation(line: 119, column: 23, scope: !285)
!3491 = !DILocation(line: 119, column: 28, scope: !285)
!3492 = !DILocation(line: 119, column: 37, scope: !285)
!3493 = !DILocation(line: 119, column: 50, scope: !285)
!3494 = !DILocation(line: 120, column: 5, scope: !285)
!3495 = !DILocation(line: 120, column: 12, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3497, file: !3, line: 120, column: 5)
!3497 = distinct !DILexicalBlock(scope: !285, file: !3, line: 120, column: 5)
!3498 = !DILocation(line: 120, column: 16, scope: !3496)
!3499 = !DILocation(line: 120, column: 5, scope: !3497)
!3500 = !DILocation(line: 121, column: 30, scope: !3496)
!3501 = !DILocation(line: 121, column: 40, scope: !3496)
!3502 = !DILocation(line: 122, column: 55, scope: !3496)
!3503 = !DILocation(line: 122, column: 59, scope: !3496)
!3504 = !DILocation(line: 122, column: 64, scope: !3496)
!3505 = !DILocation(line: 122, column: 68, scope: !3496)
!3506 = !DILocation(line: 121, column: 9, scope: !3496)
!3507 = !DILocation(line: 120, column: 23, scope: !3496)
!3508 = !DILocation(line: 120, column: 5, scope: !3496)
!3509 = distinct !{!3509, !3499, !3510, !3413}
!3510 = !DILocation(line: 122, column: 73, scope: !3497)
!3511 = !DILocation(line: 124, column: 11, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !285, file: !3, line: 124, column: 9)
!3513 = !DILocation(line: 124, column: 20, scope: !3512)
!3514 = !DILocation(line: 124, column: 26, scope: !3512)
!3515 = !DILocation(line: 124, column: 9, scope: !285)
!3516 = !DILocation(line: 125, column: 9, scope: !3512)
!3517 = !DILocation(line: 127, column: 23, scope: !285)
!3518 = !DILocation(line: 127, column: 33, scope: !285)
!3519 = !DILocation(line: 127, column: 5, scope: !285)
!3520 = !DILocation(line: 128, column: 23, scope: !285)
!3521 = !DILocation(line: 128, column: 33, scope: !285)
!3522 = !DILocation(line: 128, column: 5, scope: !285)
!3523 = !DILocation(line: 130, column: 15, scope: !3524)
!3524 = distinct !DILexicalBlock(scope: !285, file: !3, line: 130, column: 5)
!3525 = !DILocation(line: 130, column: 24, scope: !3524)
!3526 = !DILocation(line: 130, column: 34, scope: !3524)
!3527 = !DILocation(line: 130, column: 13, scope: !3524)
!3528 = !DILocation(line: 130, column: 10, scope: !3524)
!3529 = !DILocation(line: 130, column: 40, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3524, file: !3, line: 130, column: 5)
!3531 = !DILocation(line: 130, column: 44, scope: !3530)
!3532 = !DILocation(line: 130, column: 5, scope: !3524)
!3533 = !DILocation(line: 131, column: 30, scope: !3530)
!3534 = !DILocation(line: 131, column: 40, scope: !3530)
!3535 = !DILocation(line: 132, column: 55, scope: !3530)
!3536 = !DILocation(line: 132, column: 59, scope: !3530)
!3537 = !DILocation(line: 132, column: 64, scope: !3530)
!3538 = !DILocation(line: 132, column: 68, scope: !3530)
!3539 = !DILocation(line: 131, column: 9, scope: !3530)
!3540 = !DILocation(line: 130, column: 51, scope: !3530)
!3541 = !DILocation(line: 130, column: 5, scope: !3530)
!3542 = distinct !{!3542, !3532, !3543, !3413}
!3543 = !DILocation(line: 132, column: 73, scope: !3524)
!3544 = !DILabel(scope: !285, name: "end", file: !3, line: 134)
!3545 = !DILocation(line: 134, column: 1, scope: !285)
!3546 = !DILocation(line: 135, column: 5, scope: !285)
!3547 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 191, type: !3548, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !226, retainedNodes: !286)
!3548 = !DISubroutineType(types: !3549)
!3549 = !{!34, !34, !353}
!3550 = !DILocalVariable(name: "argc", arg: 1, scope: !3547, file: !3, line: 191, type: !34)
!3551 = !DILocation(line: 191, column: 10, scope: !3547)
!3552 = !DILocalVariable(name: "argv", arg: 2, scope: !3547, file: !3, line: 191, type: !353)
!3553 = !DILocation(line: 191, column: 22, scope: !3547)
!3554 = !DILocalVariable(name: "l", scope: !3547, file: !3, line: 193, type: !87)
!3555 = !DILocation(line: 193, column: 12, scope: !3547)
!3556 = !DILocalVariable(name: "c", scope: !3547, file: !3, line: 194, type: !131)
!3557 = !DILocation(line: 194, column: 19, scope: !3547)
!3558 = !DILocalVariable(name: "root", scope: !3547, file: !3, line: 195, type: !52)
!3559 = !DILocation(line: 195, column: 11, scope: !3547)
!3560 = !DILocation(line: 195, column: 18, scope: !3547)
!3561 = !DILocalVariable(name: "exit_status", scope: !3547, file: !3, line: 196, type: !34)
!3562 = !DILocation(line: 196, column: 9, scope: !3547)
!3563 = !DILocation(line: 198, column: 10, scope: !3547)
!3564 = !DILocation(line: 198, column: 9, scope: !3547)
!3565 = !DILocation(line: 199, column: 18, scope: !3547)
!3566 = !DILocation(line: 199, column: 7, scope: !3547)
!3567 = !DILocation(line: 199, column: 16, scope: !3547)
!3568 = !DILocation(line: 201, column: 24, scope: !3547)
!3569 = !DILocation(line: 201, column: 30, scope: !3547)
!3570 = !DILocation(line: 201, column: 13, scope: !3547)
!3571 = !DILocation(line: 201, column: 5, scope: !3547)
!3572 = !DILocation(line: 203, column: 9, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3547, file: !3, line: 201, column: 48)
!3574 = !DILocation(line: 204, column: 9, scope: !3573)
!3575 = !DILocalVariable(name: "map", scope: !3573, file: !3, line: 206, type: !3576)
!3576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3577, size: 1152, elements: !159)
!3577 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3578)
!3578 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_url_map_t", file: !7, line: 109, baseType: !3579)
!3579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_url_map_t_", file: !7, line: 236, size: 576, elements: !3580)
!3580 = !{!3581, !3583, !3584, !3585, !3586, !3587, !3599, !3600}
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !3579, file: !7, line: 237, baseType: !3582, size: 64)
!3582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3579, file: !7, line: 238, baseType: !111, size: 64, offset: 64)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", scope: !3579, file: !7, line: 240, baseType: !205, size: 64, offset: 128)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "prefix_len", scope: !3579, file: !7, line: 241, baseType: !55, size: 64, offset: 192)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3579, file: !7, line: 242, baseType: !1559, size: 32, offset: 256)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !3579, file: !7, line: 244, baseType: !3588, size: 64, offset: 320)
!3588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3589, size: 64)
!3589 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3590)
!3590 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_module_t", file: !7, line: 104, baseType: !3591)
!3591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_module_t_", file: !7, line: 227, size: 384, elements: !3592)
!3592 = !{!3593, !3594, !3595, !3596, !3597, !3598}
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3591, file: !7, line: 228, baseType: !205, size: 64)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !3591, file: !7, line: 229, baseType: !1408, size: 64, offset: 64)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "init_from_hash", scope: !3591, file: !7, line: 230, baseType: !1412, size: 64, offset: 128)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3591, file: !7, line: 231, baseType: !115, size: 64, offset: 192)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !3591, file: !7, line: 232, baseType: !3582, size: 64, offset: 256)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3591, file: !7, line: 233, baseType: !1559, size: 32, offset: 320)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3579, file: !7, line: 245, baseType: !111, size: 64, offset: 384)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "authorization", scope: !3579, file: !7, line: 250, baseType: !3601, size: 128, offset: 448)
!3601 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3579, file: !7, line: 247, size: 128, elements: !3602)
!3602 = !{!3603, !3604}
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "realm", scope: !3601, file: !7, line: 248, baseType: !52, size: 64)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "password_file", scope: !3601, file: !7, line: 249, baseType: !52, size: 64, offset: 64)
!3605 = !DILocation(line: 206, column: 30, scope: !3573)
!3606 = !DILocation(line: 206, column: 38, scope: !3573)
!3607 = !DILocation(line: 207, column: 13, scope: !3573)
!3608 = !DILocation(line: 207, column: 30, scope: !3573)
!3609 = !DILocation(line: 210, column: 30, scope: !3573)
!3610 = !DILocation(line: 210, column: 9, scope: !3573)
!3611 = !DILocation(line: 211, column: 9, scope: !3573)
!3612 = !DILocation(line: 213, column: 9, scope: !3573)
!3613 = !DILocation(line: 214, column: 9, scope: !3573)
!3614 = !DILocation(line: 216, column: 21, scope: !3573)
!3615 = !DILocation(line: 217, column: 9, scope: !3573)
!3616 = !DILocation(line: 220, column: 5, scope: !3547)
!3617 = !DILocation(line: 221, column: 5, scope: !3547)
!3618 = !DILabel(scope: !3547, name: "out", file: !3, line: 223)
!3619 = !DILocation(line: 223, column: 1, scope: !3547)
!3620 = !DILocation(line: 225, column: 10, scope: !3547)
!3621 = !DILocation(line: 225, column: 5, scope: !3547)
!3622 = !DILocation(line: 226, column: 12, scope: !3547)
!3623 = !DILocation(line: 226, column: 5, scope: !3547)
!3624 = !DILocation(line: 228, column: 12, scope: !3547)
!3625 = !DILocation(line: 228, column: 5, scope: !3547)
!3626 = !DILocalVariable(name: "argc", arg: 1, scope: !350, file: !3, line: 139, type: !34)
!3627 = !DILocation(line: 139, column: 16, scope: !350)
!3628 = !DILocalVariable(name: "argv", arg: 2, scope: !350, file: !3, line: 139, type: !353)
!3629 = !DILocation(line: 139, column: 28, scope: !350)
!3630 = !DILocalVariable(name: "config", arg: 3, scope: !350, file: !3, line: 139, type: !354)
!3631 = !DILocation(line: 139, column: 51, scope: !350)
!3632 = !DILocalVariable(name: "root", arg: 4, scope: !350, file: !3, line: 139, type: !353)
!3633 = !DILocation(line: 139, column: 66, scope: !350)
!3634 = !DILocalVariable(name: "c", scope: !350, file: !3, line: 147, type: !34)
!3635 = !DILocation(line: 147, column: 7, scope: !350)
!3636 = !DILocalVariable(name: "optidx", scope: !350, file: !3, line: 147, type: !34)
!3637 = !DILocation(line: 147, column: 10, scope: !350)
!3638 = !DILocalVariable(name: "result", scope: !350, file: !3, line: 148, type: !229)
!3639 = !DILocation(line: 148, column: 13, scope: !350)
!3640 = !DILocation(line: 150, column: 3, scope: !350)
!3641 = !DILocation(line: 150, column: 27, scope: !350)
!3642 = !DILocation(line: 150, column: 33, scope: !350)
!3643 = !DILocation(line: 150, column: 15, scope: !350)
!3644 = !DILocation(line: 150, column: 13, scope: !350)
!3645 = !DILocation(line: 150, column: 64, scope: !350)
!3646 = !DILocation(line: 151, column: 13, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !350, file: !3, line: 150, column: 71)
!3648 = !DILocation(line: 151, column: 5, scope: !3647)
!3649 = !DILocation(line: 153, column: 12, scope: !3650)
!3650 = distinct !DILexicalBlock(scope: !3647, file: !3, line: 151, column: 16)
!3651 = !DILocation(line: 153, column: 20, scope: !3650)
!3652 = !DILocation(line: 153, column: 7, scope: !3650)
!3653 = !DILocation(line: 154, column: 33, scope: !3650)
!3654 = !DILocation(line: 154, column: 26, scope: !3650)
!3655 = !DILocation(line: 154, column: 7, scope: !3650)
!3656 = !DILocation(line: 154, column: 15, scope: !3650)
!3657 = !DILocation(line: 154, column: 24, scope: !3650)
!3658 = !DILocation(line: 155, column: 14, scope: !3650)
!3659 = !DILocation(line: 156, column: 7, scope: !3650)
!3660 = !DILocation(line: 159, column: 13, scope: !3650)
!3661 = !DILocation(line: 159, column: 12, scope: !3650)
!3662 = !DILocation(line: 159, column: 7, scope: !3650)
!3663 = !DILocation(line: 160, column: 22, scope: !3650)
!3664 = !DILocation(line: 160, column: 15, scope: !3650)
!3665 = !DILocation(line: 160, column: 8, scope: !3650)
!3666 = !DILocation(line: 160, column: 13, scope: !3650)
!3667 = !DILocation(line: 161, column: 14, scope: !3650)
!3668 = !DILocation(line: 162, column: 7, scope: !3650)
!3669 = !DILocation(line: 165, column: 56, scope: !3650)
!3670 = !DILocation(line: 165, column: 7, scope: !3650)
!3671 = !DILocation(line: 166, column: 7, scope: !3650)
!3672 = !DILocation(line: 169, column: 79, scope: !3650)
!3673 = !DILocation(line: 169, column: 7, scope: !3650)
!3674 = !DILocation(line: 170, column: 7, scope: !3650)
!3675 = !DILocation(line: 171, column: 7, scope: !3650)
!3676 = !DILocation(line: 172, column: 7, scope: !3650)
!3677 = !DILocation(line: 173, column: 7, scope: !3650)
!3678 = !DILocation(line: 174, column: 7, scope: !3650)
!3679 = !DILocation(line: 175, column: 61, scope: !3650)
!3680 = !DILocation(line: 175, column: 69, scope: !3650)
!3681 = !DILocation(line: 175, column: 7, scope: !3650)
!3682 = !DILocation(line: 176, column: 7, scope: !3650)
!3683 = !DILocation(line: 177, column: 7, scope: !3650)
!3684 = !DILocation(line: 178, column: 7, scope: !3650)
!3685 = !DILocation(line: 179, column: 75, scope: !3650)
!3686 = !DILocation(line: 179, column: 7, scope: !3650)
!3687 = !DILocation(line: 180, column: 69, scope: !3650)
!3688 = !DILocation(line: 180, column: 7, scope: !3650)
!3689 = !DILocation(line: 181, column: 7, scope: !3650)
!3690 = !DILocation(line: 182, column: 7, scope: !3650)
!3691 = !DILocation(line: 183, column: 7, scope: !3650)
!3692 = distinct !{!3692, !3640, !3693, !3413}
!3693 = !DILocation(line: 185, column: 3, scope: !350)
!3694 = !DILocation(line: 187, column: 10, scope: !350)
!3695 = !DILocation(line: 187, column: 3, scope: !350)
!3696 = !DILocation(line: 188, column: 1, scope: !350)
!3697 = distinct !DISubprogram(name: "initialize_odd_constant", scope: !456, file: !456, line: 65, type: !1853, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !452, retainedNodes: !286)
!3698 = !DILocalVariable(name: "ret", scope: !3697, file: !456, line: 68, type: !155)
!3699 = !DILocation(line: 68, column: 11, scope: !3697)
!3700 = !DILocation(line: 68, column: 17, scope: !3697)
!3701 = !DILocation(line: 69, column: 6, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3697, file: !456, line: 69, column: 6)
!3703 = !DILocation(line: 69, column: 10, scope: !3702)
!3704 = !DILocation(line: 69, column: 6, scope: !3697)
!3705 = !DILocation(line: 70, column: 3, scope: !3702)
!3706 = !DILocalVariable(name: "fd", scope: !3697, file: !456, line: 73, type: !34)
!3707 = !DILocation(line: 73, column: 6, scope: !3697)
!3708 = !DILocation(line: 73, column: 11, scope: !3697)
!3709 = !DILocation(line: 74, column: 6, scope: !3710)
!3710 = distinct !DILexicalBlock(scope: !3697, file: !456, line: 74, column: 6)
!3711 = !DILocation(line: 74, column: 9, scope: !3710)
!3712 = !DILocation(line: 74, column: 6, scope: !3697)
!3713 = !DILocation(line: 75, column: 8, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !3710, file: !456, line: 74, column: 14)
!3715 = !DILocation(line: 75, column: 6, scope: !3714)
!3716 = !DILocation(line: 76, column: 7, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3714, file: !456, line: 76, column: 7)
!3718 = !DILocation(line: 76, column: 10, scope: !3717)
!3719 = !DILocation(line: 76, column: 7, scope: !3714)
!3720 = !DILocation(line: 77, column: 17, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3717, file: !456, line: 76, column: 15)
!3722 = !DILocation(line: 78, column: 4, scope: !3721)
!3723 = !DILocation(line: 80, column: 2, scope: !3714)
!3724 = !DILocation(line: 81, column: 11, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !3697, file: !456, line: 81, column: 6)
!3726 = !DILocation(line: 81, column: 6, scope: !3725)
!3727 = !DILocation(line: 81, column: 52, scope: !3725)
!3728 = !DILocation(line: 81, column: 6, scope: !3697)
!3729 = !DILocation(line: 82, column: 16, scope: !3725)
!3730 = !DILocation(line: 82, column: 3, scope: !3725)
!3731 = !DILocation(line: 83, column: 8, scope: !3697)
!3732 = !DILocation(line: 83, column: 2, scope: !3697)
!3733 = !DILabel(scope: !3697, name: "oddify_constant", file: !456, line: 85)
!3734 = !DILocation(line: 85, column: 1, scope: !3697)
!3735 = !DILocation(line: 86, column: 15, scope: !3697)
!3736 = !DILocation(line: 87, column: 19, scope: !3697)
!3737 = !DILocation(line: 87, column: 2, scope: !3697)
!3738 = !DILocation(line: 88, column: 1, scope: !3697)
!3739 = distinct !DISubprogram(name: "murmur3_set_seed", scope: !3242, file: !3242, line: 343, type: !3740, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3231, retainedNodes: !286)
!3740 = !DISubroutineType(types: !3741)
!3741 = !{null, !3219}
!3742 = !DILocalVariable(name: "seed", arg: 1, scope: !3739, file: !3242, line: 343, type: !3219)
!3743 = !DILocation(line: 343, column: 33, scope: !3739)
!3744 = !DILocation(line: 345, column: 18, scope: !3739)
!3745 = !DILocation(line: 345, column: 16, scope: !3739)
!3746 = !DILocation(line: 346, column: 1, scope: !3739)
!3747 = distinct !DISubprogram(name: "base64_encode", scope: !443, file: !443, line: 61, type: !3748, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !437, retainedNodes: !286)
!3748 = !DISubroutineType(types: !3749)
!3749 = !{!674, !3750, !55, !480}
!3750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 64)
!3751 = !DILocalVariable(name: "src", arg: 1, scope: !3747, file: !443, line: 61, type: !3750)
!3752 = !DILocation(line: 61, column: 52, scope: !3747)
!3753 = !DILocalVariable(name: "len", arg: 2, scope: !3747, file: !443, line: 61, type: !55)
!3754 = !DILocation(line: 61, column: 64, scope: !3747)
!3755 = !DILocalVariable(name: "out_len", arg: 3, scope: !3747, file: !443, line: 62, type: !480)
!3756 = !DILocation(line: 62, column: 18, scope: !3747)
!3757 = !DILocalVariable(name: "out", scope: !3747, file: !443, line: 64, type: !674)
!3758 = !DILocation(line: 64, column: 17, scope: !3747)
!3759 = !DILocalVariable(name: "pos", scope: !3747, file: !443, line: 64, type: !674)
!3760 = !DILocation(line: 64, column: 23, scope: !3747)
!3761 = !DILocalVariable(name: "end", scope: !3747, file: !443, line: 65, type: !3750)
!3762 = !DILocation(line: 65, column: 23, scope: !3747)
!3763 = !DILocalVariable(name: "in", scope: !3747, file: !443, line: 65, type: !3750)
!3764 = !DILocation(line: 65, column: 29, scope: !3747)
!3765 = !DILocalVariable(name: "olen", scope: !3747, file: !443, line: 66, type: !55)
!3766 = !DILocation(line: 66, column: 9, scope: !3747)
!3767 = !DILocalVariable(name: "line_len", scope: !3747, file: !443, line: 67, type: !34)
!3768 = !DILocation(line: 67, column: 6, scope: !3747)
!3769 = !DILocation(line: 69, column: 9, scope: !3747)
!3770 = !DILocation(line: 69, column: 13, scope: !3747)
!3771 = !DILocation(line: 69, column: 17, scope: !3747)
!3772 = !DILocation(line: 69, column: 21, scope: !3747)
!3773 = !DILocation(line: 69, column: 7, scope: !3747)
!3774 = !DILocation(line: 70, column: 10, scope: !3747)
!3775 = !DILocation(line: 70, column: 15, scope: !3747)
!3776 = !DILocation(line: 70, column: 7, scope: !3747)
!3777 = !DILocation(line: 71, column: 6, scope: !3747)
!3778 = !DILocation(line: 72, column: 6, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3747, file: !443, line: 72, column: 6)
!3780 = !DILocation(line: 72, column: 13, scope: !3779)
!3781 = !DILocation(line: 72, column: 11, scope: !3779)
!3782 = !DILocation(line: 72, column: 6, scope: !3747)
!3783 = !DILocation(line: 73, column: 3, scope: !3779)
!3784 = !DILocation(line: 74, column: 15, scope: !3747)
!3785 = !DILocation(line: 74, column: 8, scope: !3747)
!3786 = !DILocation(line: 74, column: 6, scope: !3747)
!3787 = !DILocation(line: 75, column: 6, scope: !3788)
!3788 = distinct !DILexicalBlock(scope: !3747, file: !443, line: 75, column: 6)
!3789 = !DILocation(line: 75, column: 10, scope: !3788)
!3790 = !DILocation(line: 75, column: 6, scope: !3747)
!3791 = !DILocation(line: 76, column: 3, scope: !3788)
!3792 = !DILocation(line: 78, column: 8, scope: !3747)
!3793 = !DILocation(line: 78, column: 14, scope: !3747)
!3794 = !DILocation(line: 78, column: 12, scope: !3747)
!3795 = !DILocation(line: 78, column: 6, scope: !3747)
!3796 = !DILocation(line: 79, column: 7, scope: !3747)
!3797 = !DILocation(line: 79, column: 5, scope: !3747)
!3798 = !DILocation(line: 80, column: 8, scope: !3747)
!3799 = !DILocation(line: 80, column: 6, scope: !3747)
!3800 = !DILocation(line: 81, column: 11, scope: !3747)
!3801 = !DILocation(line: 82, column: 2, scope: !3747)
!3802 = !DILocation(line: 82, column: 9, scope: !3747)
!3803 = !DILocation(line: 82, column: 15, scope: !3747)
!3804 = !DILocation(line: 82, column: 13, scope: !3747)
!3805 = !DILocation(line: 82, column: 18, scope: !3747)
!3806 = !DILocation(line: 83, column: 25, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3747, file: !443, line: 82, column: 24)
!3808 = !DILocation(line: 83, column: 31, scope: !3807)
!3809 = !DILocation(line: 83, column: 12, scope: !3807)
!3810 = !DILocation(line: 83, column: 7, scope: !3807)
!3811 = !DILocation(line: 83, column: 10, scope: !3807)
!3812 = !DILocation(line: 84, column: 27, scope: !3807)
!3813 = !DILocation(line: 84, column: 33, scope: !3807)
!3814 = !DILocation(line: 84, column: 41, scope: !3807)
!3815 = !DILocation(line: 84, column: 50, scope: !3807)
!3816 = !DILocation(line: 84, column: 56, scope: !3807)
!3817 = !DILocation(line: 84, column: 47, scope: !3807)
!3818 = !DILocation(line: 84, column: 12, scope: !3807)
!3819 = !DILocation(line: 84, column: 7, scope: !3807)
!3820 = !DILocation(line: 84, column: 10, scope: !3807)
!3821 = !DILocation(line: 85, column: 27, scope: !3807)
!3822 = !DILocation(line: 85, column: 33, scope: !3807)
!3823 = !DILocation(line: 85, column: 41, scope: !3807)
!3824 = !DILocation(line: 85, column: 50, scope: !3807)
!3825 = !DILocation(line: 85, column: 56, scope: !3807)
!3826 = !DILocation(line: 85, column: 47, scope: !3807)
!3827 = !DILocation(line: 85, column: 12, scope: !3807)
!3828 = !DILocation(line: 85, column: 7, scope: !3807)
!3829 = !DILocation(line: 85, column: 10, scope: !3807)
!3830 = !DILocation(line: 86, column: 25, scope: !3807)
!3831 = !DILocation(line: 86, column: 31, scope: !3807)
!3832 = !DILocation(line: 86, column: 12, scope: !3807)
!3833 = !DILocation(line: 86, column: 7, scope: !3807)
!3834 = !DILocation(line: 86, column: 10, scope: !3807)
!3835 = !DILocation(line: 87, column: 6, scope: !3807)
!3836 = !DILocation(line: 88, column: 12, scope: !3807)
!3837 = !DILocation(line: 89, column: 7, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3807, file: !443, line: 89, column: 7)
!3839 = !DILocation(line: 89, column: 16, scope: !3838)
!3840 = !DILocation(line: 89, column: 7, scope: !3807)
!3841 = !DILocation(line: 90, column: 8, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3838, file: !443, line: 89, column: 23)
!3843 = !DILocation(line: 90, column: 11, scope: !3842)
!3844 = !DILocation(line: 91, column: 13, scope: !3842)
!3845 = !DILocation(line: 92, column: 3, scope: !3842)
!3846 = distinct !{!3846, !3801, !3847, !3413}
!3847 = !DILocation(line: 93, column: 2, scope: !3747)
!3848 = !DILocation(line: 95, column: 6, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3747, file: !443, line: 95, column: 6)
!3850 = !DILocation(line: 95, column: 12, scope: !3849)
!3851 = !DILocation(line: 95, column: 10, scope: !3849)
!3852 = !DILocation(line: 95, column: 6, scope: !3747)
!3853 = !DILocation(line: 96, column: 25, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3849, file: !443, line: 95, column: 16)
!3855 = !DILocation(line: 96, column: 31, scope: !3854)
!3856 = !DILocation(line: 96, column: 12, scope: !3854)
!3857 = !DILocation(line: 96, column: 7, scope: !3854)
!3858 = !DILocation(line: 96, column: 10, scope: !3854)
!3859 = !DILocation(line: 97, column: 7, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3854, file: !443, line: 97, column: 7)
!3861 = !DILocation(line: 97, column: 13, scope: !3860)
!3862 = !DILocation(line: 97, column: 11, scope: !3860)
!3863 = !DILocation(line: 97, column: 16, scope: !3860)
!3864 = !DILocation(line: 97, column: 7, scope: !3854)
!3865 = !DILocation(line: 98, column: 27, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3860, file: !443, line: 97, column: 22)
!3867 = !DILocation(line: 98, column: 33, scope: !3866)
!3868 = !DILocation(line: 98, column: 41, scope: !3866)
!3869 = !DILocation(line: 98, column: 13, scope: !3866)
!3870 = !DILocation(line: 98, column: 8, scope: !3866)
!3871 = !DILocation(line: 98, column: 11, scope: !3866)
!3872 = !DILocation(line: 99, column: 8, scope: !3866)
!3873 = !DILocation(line: 99, column: 11, scope: !3866)
!3874 = !DILocation(line: 100, column: 3, scope: !3866)
!3875 = !DILocation(line: 101, column: 28, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3860, file: !443, line: 100, column: 10)
!3877 = !DILocation(line: 101, column: 34, scope: !3876)
!3878 = !DILocation(line: 101, column: 42, scope: !3876)
!3879 = !DILocation(line: 102, column: 13, scope: !3876)
!3880 = !DILocation(line: 102, column: 19, scope: !3876)
!3881 = !DILocation(line: 101, column: 48, scope: !3876)
!3882 = !DILocation(line: 101, column: 13, scope: !3876)
!3883 = !DILocation(line: 101, column: 8, scope: !3876)
!3884 = !DILocation(line: 101, column: 11, scope: !3876)
!3885 = !DILocation(line: 103, column: 27, scope: !3876)
!3886 = !DILocation(line: 103, column: 33, scope: !3876)
!3887 = !DILocation(line: 103, column: 41, scope: !3876)
!3888 = !DILocation(line: 103, column: 13, scope: !3876)
!3889 = !DILocation(line: 103, column: 8, scope: !3876)
!3890 = !DILocation(line: 103, column: 11, scope: !3876)
!3891 = !DILocation(line: 105, column: 7, scope: !3854)
!3892 = !DILocation(line: 105, column: 10, scope: !3854)
!3893 = !DILocation(line: 106, column: 12, scope: !3854)
!3894 = !DILocation(line: 107, column: 2, scope: !3854)
!3895 = !DILocation(line: 109, column: 6, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3747, file: !443, line: 109, column: 6)
!3897 = !DILocation(line: 109, column: 6, scope: !3747)
!3898 = !DILocation(line: 110, column: 7, scope: !3896)
!3899 = !DILocation(line: 110, column: 10, scope: !3896)
!3900 = !DILocation(line: 110, column: 3, scope: !3896)
!3901 = !DILocation(line: 112, column: 3, scope: !3747)
!3902 = !DILocation(line: 112, column: 7, scope: !3747)
!3903 = !DILocation(line: 113, column: 6, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3747, file: !443, line: 113, column: 6)
!3905 = !DILocation(line: 113, column: 6, scope: !3747)
!3906 = !DILocation(line: 114, column: 23, scope: !3904)
!3907 = !DILocation(line: 114, column: 29, scope: !3904)
!3908 = !DILocation(line: 114, column: 27, scope: !3904)
!3909 = !DILocation(line: 114, column: 4, scope: !3904)
!3910 = !DILocation(line: 114, column: 12, scope: !3904)
!3911 = !DILocation(line: 114, column: 3, scope: !3904)
!3912 = !DILocation(line: 115, column: 9, scope: !3747)
!3913 = !DILocation(line: 115, column: 2, scope: !3747)
!3914 = !DILocation(line: 116, column: 1, scope: !3747)
!3915 = distinct !DISubprogram(name: "base64_decode", scope: !443, file: !443, line: 128, type: !3748, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !437, retainedNodes: !286)
!3916 = !DILocalVariable(name: "src", arg: 1, scope: !3915, file: !443, line: 128, type: !3750)
!3917 = !DILocation(line: 128, column: 52, scope: !3915)
!3918 = !DILocalVariable(name: "len", arg: 2, scope: !3915, file: !443, line: 128, type: !55)
!3919 = !DILocation(line: 128, column: 64, scope: !3915)
!3920 = !DILocalVariable(name: "out_len", arg: 3, scope: !3915, file: !443, line: 129, type: !480)
!3921 = !DILocation(line: 129, column: 18, scope: !3915)
!3922 = !DILocalVariable(name: "out", scope: !3915, file: !443, line: 131, type: !674)
!3923 = !DILocation(line: 131, column: 17, scope: !3915)
!3924 = !DILocalVariable(name: "pos", scope: !3915, file: !443, line: 131, type: !674)
!3925 = !DILocation(line: 131, column: 23, scope: !3915)
!3926 = !DILocalVariable(name: "block", scope: !3915, file: !443, line: 131, type: !3927)
!3927 = !DICompositeType(tag: DW_TAG_array_type, baseType: !432, size: 32, elements: !365)
!3928 = !DILocation(line: 131, column: 28, scope: !3915)
!3929 = !DILocalVariable(name: "i", scope: !3915, file: !443, line: 132, type: !55)
!3930 = !DILocation(line: 132, column: 9, scope: !3915)
!3931 = !DILocalVariable(name: "count", scope: !3915, file: !443, line: 132, type: !55)
!3932 = !DILocation(line: 132, column: 12, scope: !3915)
!3933 = !DILocalVariable(name: "olen", scope: !3915, file: !443, line: 132, type: !55)
!3934 = !DILocation(line: 132, column: 19, scope: !3915)
!3935 = !DILocalVariable(name: "pad", scope: !3915, file: !443, line: 133, type: !34)
!3936 = !DILocation(line: 133, column: 6, scope: !3915)
!3937 = !DILocation(line: 135, column: 8, scope: !3915)
!3938 = !DILocation(line: 136, column: 9, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3915, file: !443, line: 136, column: 2)
!3940 = !DILocation(line: 136, column: 7, scope: !3939)
!3941 = !DILocation(line: 136, column: 14, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3939, file: !443, line: 136, column: 2)
!3943 = !DILocation(line: 136, column: 18, scope: !3942)
!3944 = !DILocation(line: 136, column: 16, scope: !3942)
!3945 = !DILocation(line: 136, column: 2, scope: !3939)
!3946 = !DILocation(line: 137, column: 27, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3948, file: !443, line: 137, column: 7)
!3948 = distinct !DILexicalBlock(scope: !3942, file: !443, line: 136, column: 28)
!3949 = !DILocation(line: 137, column: 31, scope: !3947)
!3950 = !DILocation(line: 137, column: 7, scope: !3947)
!3951 = !DILocation(line: 137, column: 35, scope: !3947)
!3952 = !DILocation(line: 137, column: 7, scope: !3948)
!3953 = !DILocation(line: 138, column: 9, scope: !3947)
!3954 = !DILocation(line: 138, column: 4, scope: !3947)
!3955 = !DILocation(line: 139, column: 2, scope: !3948)
!3956 = !DILocation(line: 136, column: 24, scope: !3942)
!3957 = !DILocation(line: 136, column: 2, scope: !3942)
!3958 = distinct !{!3958, !3945, !3959, !3413}
!3959 = !DILocation(line: 139, column: 2, scope: !3939)
!3960 = !DILocation(line: 141, column: 6, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3915, file: !443, line: 141, column: 6)
!3962 = !DILocation(line: 141, column: 12, scope: !3961)
!3963 = !DILocation(line: 141, column: 17, scope: !3961)
!3964 = !DILocation(line: 141, column: 20, scope: !3961)
!3965 = !DILocation(line: 141, column: 26, scope: !3961)
!3966 = !DILocation(line: 141, column: 6, scope: !3915)
!3967 = !DILocation(line: 142, column: 3, scope: !3961)
!3968 = !DILocation(line: 144, column: 10, scope: !3915)
!3969 = !DILocation(line: 144, column: 16, scope: !3915)
!3970 = !DILocation(line: 144, column: 20, scope: !3915)
!3971 = !DILocation(line: 144, column: 25, scope: !3915)
!3972 = !DILocation(line: 144, column: 7, scope: !3915)
!3973 = !DILocation(line: 145, column: 21, scope: !3915)
!3974 = !DILocation(line: 145, column: 14, scope: !3915)
!3975 = !DILocation(line: 145, column: 12, scope: !3915)
!3976 = !DILocation(line: 145, column: 6, scope: !3915)
!3977 = !DILocation(line: 146, column: 6, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3915, file: !443, line: 146, column: 6)
!3979 = !DILocation(line: 146, column: 10, scope: !3978)
!3980 = !DILocation(line: 146, column: 6, scope: !3915)
!3981 = !DILocation(line: 147, column: 3, scope: !3978)
!3982 = !DILocation(line: 149, column: 8, scope: !3915)
!3983 = !DILocation(line: 150, column: 9, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !3915, file: !443, line: 150, column: 2)
!3985 = !DILocation(line: 150, column: 7, scope: !3984)
!3986 = !DILocation(line: 150, column: 14, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3984, file: !443, line: 150, column: 2)
!3988 = !DILocation(line: 150, column: 18, scope: !3987)
!3989 = !DILocation(line: 150, column: 16, scope: !3987)
!3990 = !DILocation(line: 150, column: 2, scope: !3984)
!3991 = !DILocalVariable(name: "tmp", scope: !3992, file: !443, line: 151, type: !432)
!3992 = distinct !DILexicalBlock(scope: !3987, file: !443, line: 150, column: 28)
!3993 = !DILocation(line: 151, column: 17, scope: !3992)
!3994 = !DILocation(line: 151, column: 43, scope: !3992)
!3995 = !DILocation(line: 151, column: 47, scope: !3992)
!3996 = !DILocation(line: 151, column: 23, scope: !3992)
!3997 = !DILocation(line: 152, column: 7, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3992, file: !443, line: 152, column: 7)
!3999 = !DILocation(line: 152, column: 11, scope: !3998)
!4000 = !DILocation(line: 152, column: 7, scope: !3992)
!4001 = !DILocation(line: 153, column: 4, scope: !3998)
!4002 = !DILocation(line: 155, column: 7, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !3992, file: !443, line: 155, column: 7)
!4004 = !DILocation(line: 155, column: 11, scope: !4003)
!4005 = !DILocation(line: 155, column: 14, scope: !4003)
!4006 = !DILocation(line: 155, column: 7, scope: !3992)
!4007 = !DILocation(line: 156, column: 7, scope: !4003)
!4008 = !DILocation(line: 156, column: 4, scope: !4003)
!4009 = !DILocation(line: 157, column: 18, scope: !3992)
!4010 = !DILocation(line: 157, column: 9, scope: !3992)
!4011 = !DILocation(line: 157, column: 3, scope: !3992)
!4012 = !DILocation(line: 157, column: 16, scope: !3992)
!4013 = !DILocation(line: 158, column: 8, scope: !3992)
!4014 = !DILocation(line: 159, column: 7, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !3992, file: !443, line: 159, column: 7)
!4016 = !DILocation(line: 159, column: 13, scope: !4015)
!4017 = !DILocation(line: 159, column: 7, scope: !3992)
!4018 = !DILocation(line: 160, column: 30, scope: !4019)
!4019 = distinct !DILexicalBlock(scope: !4015, file: !443, line: 159, column: 19)
!4020 = !DILocation(line: 160, column: 39, scope: !4019)
!4021 = !DILocation(line: 160, column: 48, scope: !4019)
!4022 = !DILocation(line: 160, column: 57, scope: !4019)
!4023 = !DILocation(line: 160, column: 45, scope: !4019)
!4024 = !DILocation(line: 160, column: 13, scope: !4019)
!4025 = !DILocation(line: 160, column: 8, scope: !4019)
!4026 = !DILocation(line: 160, column: 11, scope: !4019)
!4027 = !DILocation(line: 161, column: 30, scope: !4019)
!4028 = !DILocation(line: 161, column: 39, scope: !4019)
!4029 = !DILocation(line: 161, column: 48, scope: !4019)
!4030 = !DILocation(line: 161, column: 57, scope: !4019)
!4031 = !DILocation(line: 161, column: 45, scope: !4019)
!4032 = !DILocation(line: 161, column: 13, scope: !4019)
!4033 = !DILocation(line: 161, column: 8, scope: !4019)
!4034 = !DILocation(line: 161, column: 11, scope: !4019)
!4035 = !DILocation(line: 162, column: 30, scope: !4019)
!4036 = !DILocation(line: 162, column: 39, scope: !4019)
!4037 = !DILocation(line: 162, column: 47, scope: !4019)
!4038 = !DILocation(line: 162, column: 45, scope: !4019)
!4039 = !DILocation(line: 162, column: 13, scope: !4019)
!4040 = !DILocation(line: 162, column: 8, scope: !4019)
!4041 = !DILocation(line: 162, column: 11, scope: !4019)
!4042 = !DILocation(line: 163, column: 10, scope: !4019)
!4043 = !DILocation(line: 164, column: 8, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4019, file: !443, line: 164, column: 8)
!4045 = !DILocation(line: 164, column: 8, scope: !4019)
!4046 = !DILocation(line: 165, column: 9, scope: !4047)
!4047 = distinct !DILexicalBlock(scope: !4048, file: !443, line: 165, column: 9)
!4048 = distinct !DILexicalBlock(scope: !4044, file: !443, line: 164, column: 13)
!4049 = !DILocation(line: 165, column: 13, scope: !4047)
!4050 = !DILocation(line: 165, column: 9, scope: !4048)
!4051 = !DILocation(line: 166, column: 9, scope: !4047)
!4052 = !DILocation(line: 166, column: 6, scope: !4047)
!4053 = !DILocation(line: 167, column: 14, scope: !4054)
!4054 = distinct !DILexicalBlock(scope: !4047, file: !443, line: 167, column: 14)
!4055 = !DILocation(line: 167, column: 18, scope: !4054)
!4056 = !DILocation(line: 167, column: 14, scope: !4047)
!4057 = !DILocation(line: 168, column: 10, scope: !4054)
!4058 = !DILocation(line: 168, column: 6, scope: !4054)
!4059 = !DILocation(line: 171, column: 11, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4054, file: !443, line: 169, column: 10)
!4061 = !DILocation(line: 171, column: 6, scope: !4060)
!4062 = !DILocation(line: 172, column: 6, scope: !4060)
!4063 = !DILocation(line: 174, column: 5, scope: !4048)
!4064 = !DILocation(line: 176, column: 3, scope: !4019)
!4065 = !DILocation(line: 177, column: 2, scope: !3992)
!4066 = !DILocation(line: 150, column: 24, scope: !3987)
!4067 = !DILocation(line: 150, column: 2, scope: !3987)
!4068 = distinct !{!4068, !3990, !4069, !3413}
!4069 = !DILocation(line: 177, column: 2, scope: !3984)
!4070 = !DILocation(line: 178, column: 10, scope: !3915)
!4071 = !DILocation(line: 178, column: 14, scope: !3915)
!4072 = !DILocation(line: 180, column: 22, scope: !3915)
!4073 = !DILocation(line: 180, column: 28, scope: !3915)
!4074 = !DILocation(line: 180, column: 26, scope: !3915)
!4075 = !DILocation(line: 180, column: 3, scope: !3915)
!4076 = !DILocation(line: 180, column: 11, scope: !3915)
!4077 = !DILocation(line: 181, column: 9, scope: !3915)
!4078 = !DILocation(line: 181, column: 2, scope: !3915)
!4079 = !DILocation(line: 182, column: 1, scope: !3915)
!4080 = distinct !DISubprogram(name: "hash_int_new", scope: !456, file: !456, line: 165, type: !4081, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !452, retainedNodes: !286)
!4081 = !DISubroutineType(types: !4082)
!4082 = !{!4083, !115, !115}
!4083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4084, size: 64)
!4084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash", file: !456, line: 55, size: 320, elements: !4085)
!4085 = !{!4086, !4087, !4091, !4092, !4093, !4094}
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4084, file: !456, line: 56, baseType: !9, size: 32)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !4084, file: !456, line: 57, baseType: !4088, size: 64, offset: 64)
!4088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4089, size: 64)
!4089 = !DISubroutineType(types: !4090)
!4090 = !{!9, !465}
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "key_compare", scope: !4084, file: !456, line: 58, baseType: !462, size: 64, offset: 128)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "free_value", scope: !4084, file: !456, line: 59, baseType: !115, size: 64, offset: 192)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "free_key", scope: !4084, file: !456, line: 60, baseType: !115, size: 64, offset: 256)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !4084, file: !456, line: 61, baseType: !4095, offset: 320)
!4095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4096, elements: !4107)
!4096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_bucket", file: !456, line: 49, size: 128, elements: !4097)
!4097 = !{!4098, !4105, !4106}
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !4096, file: !456, line: 50, baseType: !4099, size: 64)
!4099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4100, size: 64)
!4100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_entry", file: !456, line: 43, size: 192, elements: !4101)
!4101 = !{!4102, !4103, !4104}
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !4100, file: !456, line: 44, baseType: !205, size: 64)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4100, file: !456, line: 45, baseType: !465, size: 64, offset: 64)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "hashval", scope: !4100, file: !456, line: 46, baseType: !9, size: 32, offset: 128)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !4096, file: !456, line: 51, baseType: !9, size: 32, offset: 64)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !4096, file: !456, line: 52, baseType: !9, size: 32, offset: 96)
!4107 = !{!4108}
!4108 = !DISubrange(count: -1)
!4109 = !DILocalVariable(name: "free_key", arg: 1, scope: !4080, file: !456, line: 165, type: !115)
!4110 = !DILocation(line: 165, column: 34, scope: !4080)
!4111 = !DILocalVariable(name: "free_value", arg: 2, scope: !4080, file: !456, line: 166, type: !115)
!4112 = !DILocation(line: 166, column: 11, scope: !4080)
!4113 = !DILocation(line: 170, column: 4, scope: !4080)
!4114 = !DILocation(line: 171, column: 4, scope: !4080)
!4115 = !DILocation(line: 168, column: 9, scope: !4080)
!4116 = !DILocation(line: 168, column: 2, scope: !4080)
!4117 = distinct !DISubprogram(name: "hash_int", scope: !456, file: !456, line: 90, type: !4089, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !452, retainedNodes: !286)
!4118 = !DILocalVariable(name: "keyptr", arg: 1, scope: !4117, file: !456, line: 90, type: !465)
!4119 = !DILocation(line: 90, column: 45, scope: !4117)
!4120 = !DILocalVariable(name: "key", scope: !4117, file: !456, line: 93, type: !9)
!4121 = !DILocation(line: 93, column: 11, scope: !4117)
!4122 = !DILocation(line: 93, column: 33, scope: !4117)
!4123 = !DILocation(line: 93, column: 27, scope: !4117)
!4124 = !DILocation(line: 93, column: 17, scope: !4117)
!4125 = !DILocalVariable(name: "c2", scope: !4117, file: !456, line: 94, type: !9)
!4126 = !DILocation(line: 94, column: 11, scope: !4117)
!4127 = !DILocation(line: 94, column: 16, scope: !4117)
!4128 = !DILocation(line: 96, column: 9, scope: !4117)
!4129 = !DILocation(line: 96, column: 13, scope: !4117)
!4130 = !DILocation(line: 96, column: 22, scope: !4117)
!4131 = !DILocation(line: 96, column: 26, scope: !4117)
!4132 = !DILocation(line: 96, column: 19, scope: !4117)
!4133 = !DILocation(line: 96, column: 6, scope: !4117)
!4134 = !DILocation(line: 97, column: 9, scope: !4117)
!4135 = !DILocation(line: 97, column: 13, scope: !4117)
!4136 = !DILocation(line: 97, column: 6, scope: !4117)
!4137 = !DILocation(line: 98, column: 9, scope: !4117)
!4138 = !DILocation(line: 98, column: 13, scope: !4117)
!4139 = !DILocation(line: 98, column: 6, scope: !4117)
!4140 = !DILocation(line: 99, column: 9, scope: !4117)
!4141 = !DILocation(line: 99, column: 6, scope: !4117)
!4142 = !DILocation(line: 100, column: 9, scope: !4117)
!4143 = !DILocation(line: 100, column: 13, scope: !4117)
!4144 = !DILocation(line: 100, column: 6, scope: !4117)
!4145 = !DILocation(line: 101, column: 9, scope: !4117)
!4146 = !DILocation(line: 101, column: 2, scope: !4117)
!4147 = distinct !DISubprogram(name: "hash_int_key_cmp", scope: !456, file: !456, line: 141, type: !463, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !452, retainedNodes: !286)
!4148 = !DILocalVariable(name: "k1", arg: 1, scope: !4147, file: !456, line: 141, type: !465)
!4149 = !DILocation(line: 141, column: 48, scope: !4147)
!4150 = !DILocalVariable(name: "k2", arg: 2, scope: !4147, file: !456, line: 141, type: !465)
!4151 = !DILocation(line: 141, column: 64, scope: !4147)
!4152 = !DILocalVariable(name: "a", scope: !4147, file: !456, line: 143, type: !34)
!4153 = !DILocation(line: 143, column: 6, scope: !4147)
!4154 = !DILocation(line: 143, column: 25, scope: !4147)
!4155 = !DILocation(line: 143, column: 15, scope: !4147)
!4156 = !DILocation(line: 143, column: 10, scope: !4147)
!4157 = !DILocalVariable(name: "b", scope: !4147, file: !456, line: 144, type: !34)
!4158 = !DILocation(line: 144, column: 6, scope: !4147)
!4159 = !DILocation(line: 144, column: 25, scope: !4147)
!4160 = !DILocation(line: 144, column: 15, scope: !4147)
!4161 = !DILocation(line: 144, column: 10, scope: !4147)
!4162 = !DILocation(line: 145, column: 10, scope: !4147)
!4163 = !DILocation(line: 145, column: 14, scope: !4147)
!4164 = !DILocation(line: 145, column: 12, scope: !4147)
!4165 = !DILocation(line: 145, column: 20, scope: !4147)
!4166 = !DILocation(line: 145, column: 24, scope: !4147)
!4167 = !DILocation(line: 145, column: 22, scope: !4147)
!4168 = !DILocation(line: 145, column: 17, scope: !4147)
!4169 = !DILocation(line: 145, column: 2, scope: !4147)
!4170 = distinct !DISubprogram(name: "hash_internal_new", scope: !456, file: !456, line: 148, type: !4171, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !452, retainedNodes: !286)
!4171 = !DISubroutineType(types: !4172)
!4172 = !{!4083, !4088, !462, !115, !115}
!4173 = !DILocalVariable(name: "hash_value", arg: 1, scope: !4170, file: !456, line: 149, type: !4088)
!4174 = !DILocation(line: 149, column: 15, scope: !4170)
!4175 = !DILocalVariable(name: "key_compare", arg: 2, scope: !4170, file: !456, line: 150, type: !462)
!4176 = !DILocation(line: 150, column: 10, scope: !4170)
!4177 = !DILocalVariable(name: "free_key", arg: 3, scope: !4170, file: !456, line: 151, type: !115)
!4178 = !DILocation(line: 151, column: 11, scope: !4170)
!4179 = !DILocalVariable(name: "free_value", arg: 4, scope: !4170, file: !456, line: 152, type: !115)
!4180 = !DILocation(line: 152, column: 11, scope: !4170)
!4181 = !DILocalVariable(name: "hash", scope: !4170, file: !456, line: 154, type: !4083)
!4182 = !DILocation(line: 154, column: 15, scope: !4170)
!4183 = !DILocation(line: 154, column: 22, scope: !4170)
!4184 = !DILocation(line: 156, column: 6, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4170, file: !456, line: 156, column: 6)
!4186 = !DILocation(line: 156, column: 11, scope: !4185)
!4187 = !DILocation(line: 156, column: 6, scope: !4170)
!4188 = !DILocation(line: 157, column: 3, scope: !4185)
!4189 = !DILocation(line: 158, column: 21, scope: !4170)
!4190 = !DILocation(line: 158, column: 2, scope: !4170)
!4191 = !DILocation(line: 158, column: 8, scope: !4170)
!4192 = !DILocation(line: 158, column: 19, scope: !4170)
!4193 = !DILocation(line: 159, column: 22, scope: !4170)
!4194 = !DILocation(line: 159, column: 2, scope: !4170)
!4195 = !DILocation(line: 159, column: 8, scope: !4170)
!4196 = !DILocation(line: 159, column: 20, scope: !4170)
!4197 = !DILocation(line: 160, column: 21, scope: !4170)
!4198 = !DILocation(line: 160, column: 2, scope: !4170)
!4199 = !DILocation(line: 160, column: 8, scope: !4170)
!4200 = !DILocation(line: 160, column: 19, scope: !4170)
!4201 = !DILocation(line: 161, column: 19, scope: !4170)
!4202 = !DILocation(line: 161, column: 2, scope: !4170)
!4203 = !DILocation(line: 161, column: 8, scope: !4170)
!4204 = !DILocation(line: 161, column: 17, scope: !4170)
!4205 = !DILocation(line: 162, column: 9, scope: !4170)
!4206 = !DILocation(line: 162, column: 2, scope: !4170)
!4207 = !DILocation(line: 163, column: 1, scope: !4170)
!4208 = distinct !DISubprogram(name: "hash_str_new", scope: !456, file: !456, line: 174, type: !4081, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !452, retainedNodes: !286)
!4209 = !DILocalVariable(name: "free_key", arg: 1, scope: !4208, file: !456, line: 174, type: !115)
!4210 = !DILocation(line: 174, column: 34, scope: !4208)
!4211 = !DILocalVariable(name: "free_value", arg: 2, scope: !4208, file: !456, line: 175, type: !115)
!4212 = !DILocation(line: 175, column: 11, scope: !4208)
!4213 = !DILocalVariable(name: "hash_func", scope: !4208, file: !456, line: 177, type: !4088)
!4214 = !DILocation(line: 177, column: 13, scope: !4208)
!4215 = !DILocation(line: 187, column: 12, scope: !4208)
!4216 = !DILocation(line: 191, column: 4, scope: !4208)
!4217 = !DILocation(line: 193, column: 4, scope: !4208)
!4218 = !DILocation(line: 194, column: 4, scope: !4208)
!4219 = !DILocation(line: 190, column: 9, scope: !4208)
!4220 = !DILocation(line: 190, column: 2, scope: !4208)
!4221 = distinct !DISubprogram(name: "murmur3_simple", scope: !3242, file: !3242, line: 322, type: !4089, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3231, retainedNodes: !286)
!4222 = !DILocalVariable(name: "keyptr", arg: 1, scope: !4221, file: !3242, line: 322, type: !465)
!4223 = !DILocation(line: 322, column: 28, scope: !4221)
!4224 = !DILocalVariable(name: "len", scope: !4221, file: !3242, line: 324, type: !55)
!4225 = !DILocation(line: 324, column: 12, scope: !4221)
!4226 = !DILocation(line: 324, column: 33, scope: !4221)
!4227 = !DILocation(line: 324, column: 18, scope: !4221)
!4228 = !DILocalVariable(name: "hash", scope: !4221, file: !3242, line: 326, type: !4229)
!4229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3238, size: 128, elements: !159)
!4230 = !DILocation(line: 326, column: 14, scope: !4221)
!4231 = !DILocation(line: 327, column: 25, scope: !4221)
!4232 = !DILocation(line: 327, column: 33, scope: !4221)
!4233 = !DILocation(line: 327, column: 38, scope: !4221)
!4234 = !DILocation(line: 327, column: 50, scope: !4221)
!4235 = !DILocalVariable(name: "key", arg: 1, scope: !4236, file: !3242, line: 223, type: !465)
!4236 = distinct !DISubprogram(name: "MurmurHash3_x64_128", scope: !3242, file: !3242, line: 223, type: !4237, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3231, retainedNodes: !286)
!4237 = !DISubroutineType(types: !4238)
!4238 = !{null, !465, !490, !3219, !111}
!4239 = !DILocation(line: 223, column: 33, scope: !4236, inlinedAt: !4240)
!4240 = distinct !DILocation(line: 327, column: 5, scope: !4221)
!4241 = !DILocalVariable(name: "len", arg: 2, scope: !4236, file: !3242, line: 223, type: !490)
!4242 = !DILocation(line: 223, column: 51, scope: !4236, inlinedAt: !4240)
!4243 = !DILocalVariable(name: "seed", arg: 3, scope: !4236, file: !3242, line: 223, type: !3219)
!4244 = !DILocation(line: 223, column: 71, scope: !4236, inlinedAt: !4240)
!4245 = !DILocalVariable(name: "out", arg: 4, scope: !4236, file: !3242, line: 224, type: !111)
!4246 = !DILocation(line: 224, column: 19, scope: !4236, inlinedAt: !4240)
!4247 = !DILocalVariable(name: "data", scope: !4236, file: !3242, line: 226, type: !3234)
!4248 = !DILocation(line: 226, column: 20, scope: !4236, inlinedAt: !4240)
!4249 = !DILocation(line: 226, column: 44, scope: !4236, inlinedAt: !4240)
!4250 = !DILocalVariable(name: "nblocks", scope: !4236, file: !3242, line: 227, type: !490)
!4251 = !DILocation(line: 227, column: 18, scope: !4236, inlinedAt: !4240)
!4252 = !DILocation(line: 227, column: 28, scope: !4236, inlinedAt: !4240)
!4253 = !DILocation(line: 227, column: 32, scope: !4236, inlinedAt: !4240)
!4254 = !DILocalVariable(name: "i", scope: !4236, file: !3242, line: 228, type: !55)
!4255 = !DILocation(line: 228, column: 12, scope: !4236, inlinedAt: !4240)
!4256 = !DILocalVariable(name: "h1", scope: !4236, file: !3242, line: 229, type: !3238)
!4257 = !DILocation(line: 229, column: 14, scope: !4236, inlinedAt: !4240)
!4258 = !DILocation(line: 229, column: 19, scope: !4236, inlinedAt: !4240)
!4259 = !DILocalVariable(name: "h2", scope: !4236, file: !3242, line: 230, type: !3238)
!4260 = !DILocation(line: 230, column: 14, scope: !4236, inlinedAt: !4240)
!4261 = !DILocation(line: 230, column: 19, scope: !4236, inlinedAt: !4240)
!4262 = !DILocalVariable(name: "c1", scope: !4236, file: !3242, line: 231, type: !3238)
!4263 = !DILocation(line: 231, column: 14, scope: !4236, inlinedAt: !4240)
!4264 = !DILocalVariable(name: "c2", scope: !4236, file: !3242, line: 232, type: !3238)
!4265 = !DILocation(line: 232, column: 14, scope: !4236, inlinedAt: !4240)
!4266 = !DILocalVariable(name: "blocks", scope: !4236, file: !3242, line: 236, type: !3236)
!4267 = !DILocation(line: 236, column: 21, scope: !4236, inlinedAt: !4240)
!4268 = !DILocation(line: 236, column: 49, scope: !4236, inlinedAt: !4240)
!4269 = !DILocation(line: 237, column: 12, scope: !4270, inlinedAt: !4240)
!4270 = distinct !DILexicalBlock(scope: !4236, file: !3242, line: 237, column: 5)
!4271 = !DILocation(line: 237, column: 10, scope: !4270, inlinedAt: !4240)
!4272 = !DILocation(line: 237, column: 17, scope: !4273, inlinedAt: !4240)
!4273 = distinct !DILexicalBlock(scope: !4270, file: !3242, line: 237, column: 5)
!4274 = !DILocation(line: 237, column: 21, scope: !4273, inlinedAt: !4240)
!4275 = !DILocation(line: 237, column: 19, scope: !4273, inlinedAt: !4240)
!4276 = !DILocation(line: 237, column: 5, scope: !4270, inlinedAt: !4240)
!4277 = !DILocalVariable(name: "k1", scope: !4278, file: !3242, line: 238, type: !3238)
!4278 = distinct !DILexicalBlock(scope: !4273, file: !3242, line: 237, column: 35)
!4279 = !DILocation(line: 238, column: 18, scope: !4278, inlinedAt: !4240)
!4280 = !DILocalVariable(name: "k2", scope: !4278, file: !3242, line: 238, type: !3238)
!4281 = !DILocation(line: 238, column: 22, scope: !4278, inlinedAt: !4240)
!4282 = !DILocation(line: 240, column: 21, scope: !4278, inlinedAt: !4240)
!4283 = !DILocation(line: 240, column: 30, scope: !4278, inlinedAt: !4240)
!4284 = !DILocation(line: 240, column: 32, scope: !4278, inlinedAt: !4240)
!4285 = !DILocation(line: 240, column: 28, scope: !4278, inlinedAt: !4240)
!4286 = !DILocation(line: 240, column: 9, scope: !4278, inlinedAt: !4240)
!4287 = !DILocation(line: 241, column: 21, scope: !4278, inlinedAt: !4240)
!4288 = !DILocation(line: 241, column: 30, scope: !4278, inlinedAt: !4240)
!4289 = !DILocation(line: 241, column: 32, scope: !4278, inlinedAt: !4240)
!4290 = !DILocation(line: 241, column: 28, scope: !4278, inlinedAt: !4240)
!4291 = !DILocation(line: 241, column: 36, scope: !4278, inlinedAt: !4240)
!4292 = !DILocation(line: 241, column: 9, scope: !4278, inlinedAt: !4240)
!4293 = !DILocation(line: 243, column: 15, scope: !4278, inlinedAt: !4240)
!4294 = !DILocation(line: 243, column: 12, scope: !4278, inlinedAt: !4240)
!4295 = !DILocation(line: 244, column: 14, scope: !4278, inlinedAt: !4240)
!4296 = !DILocalVariable(name: "x", arg: 1, scope: !4297, file: !3242, line: 30, type: !3238)
!4297 = distinct !DISubprogram(name: "rotl64", scope: !3242, file: !3242, line: 30, type: !4298, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3231, retainedNodes: !286)
!4298 = !DISubroutineType(types: !4299)
!4299 = !{!3238, !3238, !4300}
!4300 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !4301, line: 24, baseType: !4302)
!4301 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h", directory: "", checksumkind: CSK_MD5, checksum: "55bcbdc3159515ebd91d351a70d505f4")
!4302 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !154, line: 37, baseType: !4303)
!4303 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!4304 = !DILocation(line: 30, column: 46, scope: !4297, inlinedAt: !4305)
!4305 = distinct !DILocation(line: 244, column: 14, scope: !4278, inlinedAt: !4240)
!4306 = !DILocalVariable(name: "r", arg: 2, scope: !4297, file: !3242, line: 30, type: !4300)
!4307 = !DILocation(line: 30, column: 56, scope: !4297, inlinedAt: !4305)
!4308 = !DILocation(line: 32, column: 13, scope: !4297, inlinedAt: !4305)
!4309 = !DILocation(line: 32, column: 18, scope: !4297, inlinedAt: !4305)
!4310 = !DILocation(line: 32, column: 15, scope: !4297, inlinedAt: !4305)
!4311 = !DILocation(line: 32, column: 24, scope: !4297, inlinedAt: !4305)
!4312 = !DILocation(line: 32, column: 35, scope: !4297, inlinedAt: !4305)
!4313 = !DILocation(line: 32, column: 33, scope: !4297, inlinedAt: !4305)
!4314 = !DILocation(line: 32, column: 26, scope: !4297, inlinedAt: !4305)
!4315 = !DILocation(line: 32, column: 21, scope: !4297, inlinedAt: !4305)
!4316 = !DILocation(line: 244, column: 12, scope: !4278, inlinedAt: !4240)
!4317 = !DILocation(line: 245, column: 15, scope: !4278, inlinedAt: !4240)
!4318 = !DILocation(line: 245, column: 12, scope: !4278, inlinedAt: !4240)
!4319 = !DILocation(line: 246, column: 15, scope: !4278, inlinedAt: !4240)
!4320 = !DILocation(line: 246, column: 12, scope: !4278, inlinedAt: !4240)
!4321 = !DILocation(line: 247, column: 14, scope: !4278, inlinedAt: !4240)
!4322 = !DILocation(line: 30, column: 46, scope: !4297, inlinedAt: !4323)
!4323 = distinct !DILocation(line: 247, column: 14, scope: !4278, inlinedAt: !4240)
!4324 = !DILocation(line: 30, column: 56, scope: !4297, inlinedAt: !4323)
!4325 = !DILocation(line: 32, column: 13, scope: !4297, inlinedAt: !4323)
!4326 = !DILocation(line: 32, column: 18, scope: !4297, inlinedAt: !4323)
!4327 = !DILocation(line: 32, column: 15, scope: !4297, inlinedAt: !4323)
!4328 = !DILocation(line: 32, column: 24, scope: !4297, inlinedAt: !4323)
!4329 = !DILocation(line: 32, column: 35, scope: !4297, inlinedAt: !4323)
!4330 = !DILocation(line: 32, column: 33, scope: !4297, inlinedAt: !4323)
!4331 = !DILocation(line: 32, column: 26, scope: !4297, inlinedAt: !4323)
!4332 = !DILocation(line: 32, column: 21, scope: !4297, inlinedAt: !4323)
!4333 = !DILocation(line: 247, column: 12, scope: !4278, inlinedAt: !4240)
!4334 = !DILocation(line: 248, column: 15, scope: !4278, inlinedAt: !4240)
!4335 = !DILocation(line: 248, column: 12, scope: !4278, inlinedAt: !4240)
!4336 = !DILocation(line: 249, column: 14, scope: !4278, inlinedAt: !4240)
!4337 = !DILocation(line: 249, column: 17, scope: !4278, inlinedAt: !4240)
!4338 = !DILocation(line: 249, column: 21, scope: !4278, inlinedAt: !4240)
!4339 = !DILocation(line: 249, column: 12, scope: !4278, inlinedAt: !4240)
!4340 = !DILocation(line: 250, column: 15, scope: !4278, inlinedAt: !4240)
!4341 = !DILocation(line: 250, column: 12, scope: !4278, inlinedAt: !4240)
!4342 = !DILocation(line: 251, column: 14, scope: !4278, inlinedAt: !4240)
!4343 = !DILocation(line: 30, column: 46, scope: !4297, inlinedAt: !4344)
!4344 = distinct !DILocation(line: 251, column: 14, scope: !4278, inlinedAt: !4240)
!4345 = !DILocation(line: 30, column: 56, scope: !4297, inlinedAt: !4344)
!4346 = !DILocation(line: 32, column: 13, scope: !4297, inlinedAt: !4344)
!4347 = !DILocation(line: 32, column: 18, scope: !4297, inlinedAt: !4344)
!4348 = !DILocation(line: 32, column: 15, scope: !4297, inlinedAt: !4344)
!4349 = !DILocation(line: 32, column: 24, scope: !4297, inlinedAt: !4344)
!4350 = !DILocation(line: 32, column: 35, scope: !4297, inlinedAt: !4344)
!4351 = !DILocation(line: 32, column: 33, scope: !4297, inlinedAt: !4344)
!4352 = !DILocation(line: 32, column: 26, scope: !4297, inlinedAt: !4344)
!4353 = !DILocation(line: 32, column: 21, scope: !4297, inlinedAt: !4344)
!4354 = !DILocation(line: 251, column: 12, scope: !4278, inlinedAt: !4240)
!4355 = !DILocation(line: 252, column: 15, scope: !4278, inlinedAt: !4240)
!4356 = !DILocation(line: 252, column: 12, scope: !4278, inlinedAt: !4240)
!4357 = !DILocation(line: 253, column: 15, scope: !4278, inlinedAt: !4240)
!4358 = !DILocation(line: 253, column: 12, scope: !4278, inlinedAt: !4240)
!4359 = !DILocation(line: 254, column: 14, scope: !4278, inlinedAt: !4240)
!4360 = !DILocation(line: 30, column: 46, scope: !4297, inlinedAt: !4361)
!4361 = distinct !DILocation(line: 254, column: 14, scope: !4278, inlinedAt: !4240)
!4362 = !DILocation(line: 30, column: 56, scope: !4297, inlinedAt: !4361)
!4363 = !DILocation(line: 32, column: 13, scope: !4297, inlinedAt: !4361)
!4364 = !DILocation(line: 32, column: 18, scope: !4297, inlinedAt: !4361)
!4365 = !DILocation(line: 32, column: 15, scope: !4297, inlinedAt: !4361)
!4366 = !DILocation(line: 32, column: 24, scope: !4297, inlinedAt: !4361)
!4367 = !DILocation(line: 32, column: 35, scope: !4297, inlinedAt: !4361)
!4368 = !DILocation(line: 32, column: 33, scope: !4297, inlinedAt: !4361)
!4369 = !DILocation(line: 32, column: 26, scope: !4297, inlinedAt: !4361)
!4370 = !DILocation(line: 32, column: 21, scope: !4297, inlinedAt: !4361)
!4371 = !DILocation(line: 254, column: 12, scope: !4278, inlinedAt: !4240)
!4372 = !DILocation(line: 255, column: 15, scope: !4278, inlinedAt: !4240)
!4373 = !DILocation(line: 255, column: 12, scope: !4278, inlinedAt: !4240)
!4374 = !DILocation(line: 256, column: 14, scope: !4278, inlinedAt: !4240)
!4375 = !DILocation(line: 256, column: 17, scope: !4278, inlinedAt: !4240)
!4376 = !DILocation(line: 256, column: 21, scope: !4278, inlinedAt: !4240)
!4377 = !DILocation(line: 256, column: 12, scope: !4278, inlinedAt: !4240)
!4378 = !DILocation(line: 237, column: 31, scope: !4273, inlinedAt: !4240)
!4379 = !DILocation(line: 237, column: 5, scope: !4273, inlinedAt: !4240)
!4380 = distinct !{!4380, !4276, !4381, !3413}
!4381 = !DILocation(line: 257, column: 5, scope: !4270, inlinedAt: !4240)
!4382 = !DILocalVariable(name: "tail", scope: !4236, file: !3242, line: 261, type: !3234)
!4383 = !DILocation(line: 261, column: 20, scope: !4236, inlinedAt: !4240)
!4384 = !DILocation(line: 261, column: 45, scope: !4236, inlinedAt: !4240)
!4385 = !DILocation(line: 261, column: 52, scope: !4236, inlinedAt: !4240)
!4386 = !DILocation(line: 261, column: 60, scope: !4236, inlinedAt: !4240)
!4387 = !DILocation(line: 261, column: 50, scope: !4236, inlinedAt: !4240)
!4388 = !DILocalVariable(name: "k1", scope: !4236, file: !3242, line: 262, type: !3238)
!4389 = !DILocation(line: 262, column: 14, scope: !4236, inlinedAt: !4240)
!4390 = !DILocalVariable(name: "k2", scope: !4236, file: !3242, line: 263, type: !3238)
!4391 = !DILocation(line: 263, column: 14, scope: !4236, inlinedAt: !4240)
!4392 = !DILocation(line: 264, column: 13, scope: !4236, inlinedAt: !4240)
!4393 = !DILocation(line: 264, column: 17, scope: !4236, inlinedAt: !4240)
!4394 = !DILocation(line: 264, column: 5, scope: !4236, inlinedAt: !4240)
!4395 = !DILocation(line: 266, column: 27, scope: !4396, inlinedAt: !4240)
!4396 = distinct !DILexicalBlock(scope: !4236, file: !3242, line: 264, column: 23)
!4397 = !DILocation(line: 266, column: 15, scope: !4396, inlinedAt: !4240)
!4398 = !DILocation(line: 266, column: 37, scope: !4396, inlinedAt: !4240)
!4399 = !DILocation(line: 266, column: 12, scope: !4396, inlinedAt: !4240)
!4400 = !DILocation(line: 266, column: 9, scope: !4396, inlinedAt: !4240)
!4401 = !DILocation(line: 268, column: 27, scope: !4396, inlinedAt: !4240)
!4402 = !DILocation(line: 268, column: 15, scope: !4396, inlinedAt: !4240)
!4403 = !DILocation(line: 268, column: 37, scope: !4396, inlinedAt: !4240)
!4404 = !DILocation(line: 268, column: 12, scope: !4396, inlinedAt: !4240)
!4405 = !DILocation(line: 268, column: 9, scope: !4396, inlinedAt: !4240)
!4406 = !DILocation(line: 270, column: 27, scope: !4396, inlinedAt: !4240)
!4407 = !DILocation(line: 270, column: 15, scope: !4396, inlinedAt: !4240)
!4408 = !DILocation(line: 270, column: 37, scope: !4396, inlinedAt: !4240)
!4409 = !DILocation(line: 270, column: 12, scope: !4396, inlinedAt: !4240)
!4410 = !DILocation(line: 270, column: 9, scope: !4396, inlinedAt: !4240)
!4411 = !DILocation(line: 272, column: 27, scope: !4396, inlinedAt: !4240)
!4412 = !DILocation(line: 272, column: 15, scope: !4396, inlinedAt: !4240)
!4413 = !DILocation(line: 272, column: 37, scope: !4396, inlinedAt: !4240)
!4414 = !DILocation(line: 272, column: 12, scope: !4396, inlinedAt: !4240)
!4415 = !DILocation(line: 272, column: 9, scope: !4396, inlinedAt: !4240)
!4416 = !DILocation(line: 274, column: 27, scope: !4396, inlinedAt: !4240)
!4417 = !DILocation(line: 274, column: 15, scope: !4396, inlinedAt: !4240)
!4418 = !DILocation(line: 274, column: 37, scope: !4396, inlinedAt: !4240)
!4419 = !DILocation(line: 274, column: 12, scope: !4396, inlinedAt: !4240)
!4420 = !DILocation(line: 274, column: 9, scope: !4396, inlinedAt: !4240)
!4421 = !DILocation(line: 276, column: 27, scope: !4396, inlinedAt: !4240)
!4422 = !DILocation(line: 276, column: 15, scope: !4396, inlinedAt: !4240)
!4423 = !DILocation(line: 276, column: 36, scope: !4396, inlinedAt: !4240)
!4424 = !DILocation(line: 276, column: 12, scope: !4396, inlinedAt: !4240)
!4425 = !DILocation(line: 276, column: 9, scope: !4396, inlinedAt: !4240)
!4426 = !DILocation(line: 278, column: 27, scope: !4396, inlinedAt: !4240)
!4427 = !DILocation(line: 278, column: 15, scope: !4396, inlinedAt: !4240)
!4428 = !DILocation(line: 278, column: 12, scope: !4396, inlinedAt: !4240)
!4429 = !DILocation(line: 279, column: 15, scope: !4396, inlinedAt: !4240)
!4430 = !DILocation(line: 279, column: 12, scope: !4396, inlinedAt: !4240)
!4431 = !DILocation(line: 280, column: 14, scope: !4396, inlinedAt: !4240)
!4432 = !DILocation(line: 30, column: 46, scope: !4297, inlinedAt: !4433)
!4433 = distinct !DILocation(line: 280, column: 14, scope: !4396, inlinedAt: !4240)
!4434 = !DILocation(line: 30, column: 56, scope: !4297, inlinedAt: !4433)
!4435 = !DILocation(line: 32, column: 13, scope: !4297, inlinedAt: !4433)
!4436 = !DILocation(line: 32, column: 18, scope: !4297, inlinedAt: !4433)
!4437 = !DILocation(line: 32, column: 15, scope: !4297, inlinedAt: !4433)
!4438 = !DILocation(line: 32, column: 24, scope: !4297, inlinedAt: !4433)
!4439 = !DILocation(line: 32, column: 35, scope: !4297, inlinedAt: !4433)
!4440 = !DILocation(line: 32, column: 33, scope: !4297, inlinedAt: !4433)
!4441 = !DILocation(line: 32, column: 26, scope: !4297, inlinedAt: !4433)
!4442 = !DILocation(line: 32, column: 21, scope: !4297, inlinedAt: !4433)
!4443 = !DILocation(line: 280, column: 12, scope: !4396, inlinedAt: !4240)
!4444 = !DILocation(line: 281, column: 15, scope: !4396, inlinedAt: !4240)
!4445 = !DILocation(line: 281, column: 12, scope: !4396, inlinedAt: !4240)
!4446 = !DILocation(line: 282, column: 15, scope: !4396, inlinedAt: !4240)
!4447 = !DILocation(line: 282, column: 12, scope: !4396, inlinedAt: !4240)
!4448 = !DILocation(line: 282, column: 9, scope: !4396, inlinedAt: !4240)
!4449 = !DILocation(line: 284, column: 27, scope: !4396, inlinedAt: !4240)
!4450 = !DILocation(line: 284, column: 15, scope: !4396, inlinedAt: !4240)
!4451 = !DILocation(line: 284, column: 36, scope: !4396, inlinedAt: !4240)
!4452 = !DILocation(line: 284, column: 12, scope: !4396, inlinedAt: !4240)
!4453 = !DILocation(line: 284, column: 9, scope: !4396, inlinedAt: !4240)
!4454 = !DILocation(line: 286, column: 27, scope: !4396, inlinedAt: !4240)
!4455 = !DILocation(line: 286, column: 15, scope: !4396, inlinedAt: !4240)
!4456 = !DILocation(line: 286, column: 36, scope: !4396, inlinedAt: !4240)
!4457 = !DILocation(line: 286, column: 12, scope: !4396, inlinedAt: !4240)
!4458 = !DILocation(line: 286, column: 9, scope: !4396, inlinedAt: !4240)
!4459 = !DILocation(line: 288, column: 27, scope: !4396, inlinedAt: !4240)
!4460 = !DILocation(line: 288, column: 15, scope: !4396, inlinedAt: !4240)
!4461 = !DILocation(line: 288, column: 36, scope: !4396, inlinedAt: !4240)
!4462 = !DILocation(line: 288, column: 12, scope: !4396, inlinedAt: !4240)
!4463 = !DILocation(line: 288, column: 9, scope: !4396, inlinedAt: !4240)
!4464 = !DILocation(line: 290, column: 27, scope: !4396, inlinedAt: !4240)
!4465 = !DILocation(line: 290, column: 15, scope: !4396, inlinedAt: !4240)
!4466 = !DILocation(line: 290, column: 36, scope: !4396, inlinedAt: !4240)
!4467 = !DILocation(line: 290, column: 12, scope: !4396, inlinedAt: !4240)
!4468 = !DILocation(line: 290, column: 9, scope: !4396, inlinedAt: !4240)
!4469 = !DILocation(line: 292, column: 27, scope: !4396, inlinedAt: !4240)
!4470 = !DILocation(line: 292, column: 15, scope: !4396, inlinedAt: !4240)
!4471 = !DILocation(line: 292, column: 36, scope: !4396, inlinedAt: !4240)
!4472 = !DILocation(line: 292, column: 12, scope: !4396, inlinedAt: !4240)
!4473 = !DILocation(line: 292, column: 9, scope: !4396, inlinedAt: !4240)
!4474 = !DILocation(line: 294, column: 27, scope: !4396, inlinedAt: !4240)
!4475 = !DILocation(line: 294, column: 15, scope: !4396, inlinedAt: !4240)
!4476 = !DILocation(line: 294, column: 36, scope: !4396, inlinedAt: !4240)
!4477 = !DILocation(line: 294, column: 12, scope: !4396, inlinedAt: !4240)
!4478 = !DILocation(line: 294, column: 9, scope: !4396, inlinedAt: !4240)
!4479 = !DILocation(line: 296, column: 27, scope: !4396, inlinedAt: !4240)
!4480 = !DILocation(line: 296, column: 15, scope: !4396, inlinedAt: !4240)
!4481 = !DILocation(line: 296, column: 36, scope: !4396, inlinedAt: !4240)
!4482 = !DILocation(line: 296, column: 12, scope: !4396, inlinedAt: !4240)
!4483 = !DILocation(line: 296, column: 9, scope: !4396, inlinedAt: !4240)
!4484 = !DILocation(line: 298, column: 27, scope: !4396, inlinedAt: !4240)
!4485 = !DILocation(line: 298, column: 15, scope: !4396, inlinedAt: !4240)
!4486 = !DILocation(line: 298, column: 12, scope: !4396, inlinedAt: !4240)
!4487 = !DILocation(line: 299, column: 15, scope: !4396, inlinedAt: !4240)
!4488 = !DILocation(line: 299, column: 12, scope: !4396, inlinedAt: !4240)
!4489 = !DILocation(line: 300, column: 14, scope: !4396, inlinedAt: !4240)
!4490 = !DILocation(line: 30, column: 46, scope: !4297, inlinedAt: !4491)
!4491 = distinct !DILocation(line: 300, column: 14, scope: !4396, inlinedAt: !4240)
!4492 = !DILocation(line: 30, column: 56, scope: !4297, inlinedAt: !4491)
!4493 = !DILocation(line: 32, column: 13, scope: !4297, inlinedAt: !4491)
!4494 = !DILocation(line: 32, column: 18, scope: !4297, inlinedAt: !4491)
!4495 = !DILocation(line: 32, column: 15, scope: !4297, inlinedAt: !4491)
!4496 = !DILocation(line: 32, column: 24, scope: !4297, inlinedAt: !4491)
!4497 = !DILocation(line: 32, column: 35, scope: !4297, inlinedAt: !4491)
!4498 = !DILocation(line: 32, column: 33, scope: !4297, inlinedAt: !4491)
!4499 = !DILocation(line: 32, column: 26, scope: !4297, inlinedAt: !4491)
!4500 = !DILocation(line: 32, column: 21, scope: !4297, inlinedAt: !4491)
!4501 = !DILocation(line: 300, column: 12, scope: !4396, inlinedAt: !4240)
!4502 = !DILocation(line: 301, column: 15, scope: !4396, inlinedAt: !4240)
!4503 = !DILocation(line: 301, column: 12, scope: !4396, inlinedAt: !4240)
!4504 = !DILocation(line: 302, column: 15, scope: !4396, inlinedAt: !4240)
!4505 = !DILocation(line: 302, column: 12, scope: !4396, inlinedAt: !4240)
!4506 = !DILocation(line: 303, column: 5, scope: !4396, inlinedAt: !4240)
!4507 = !DILocation(line: 307, column: 21, scope: !4236, inlinedAt: !4240)
!4508 = !DILocation(line: 307, column: 8, scope: !4236, inlinedAt: !4240)
!4509 = !DILocation(line: 308, column: 21, scope: !4236, inlinedAt: !4240)
!4510 = !DILocation(line: 308, column: 8, scope: !4236, inlinedAt: !4240)
!4511 = !DILocation(line: 309, column: 11, scope: !4236, inlinedAt: !4240)
!4512 = !DILocation(line: 309, column: 8, scope: !4236, inlinedAt: !4240)
!4513 = !DILocation(line: 310, column: 11, scope: !4236, inlinedAt: !4240)
!4514 = !DILocation(line: 310, column: 8, scope: !4236, inlinedAt: !4240)
!4515 = !DILocation(line: 311, column: 17, scope: !4236, inlinedAt: !4240)
!4516 = !DILocalVariable(name: "k", arg: 1, scope: !4517, file: !3242, line: 57, type: !3238)
!4517 = distinct !DISubprogram(name: "fmix64", scope: !3242, file: !3242, line: 57, type: !4518, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3231, retainedNodes: !286)
!4518 = !DISubroutineType(types: !4519)
!4519 = !{!3238, !3238}
!4520 = !DILocation(line: 57, column: 46, scope: !4517, inlinedAt: !4521)
!4521 = distinct !DILocation(line: 311, column: 10, scope: !4236, inlinedAt: !4240)
!4522 = !DILocation(line: 59, column: 10, scope: !4517, inlinedAt: !4521)
!4523 = !DILocation(line: 59, column: 12, scope: !4517, inlinedAt: !4521)
!4524 = !DILocation(line: 59, column: 7, scope: !4517, inlinedAt: !4521)
!4525 = !DILocation(line: 60, column: 7, scope: !4517, inlinedAt: !4521)
!4526 = !DILocation(line: 61, column: 10, scope: !4517, inlinedAt: !4521)
!4527 = !DILocation(line: 61, column: 12, scope: !4517, inlinedAt: !4521)
!4528 = !DILocation(line: 61, column: 7, scope: !4517, inlinedAt: !4521)
!4529 = !DILocation(line: 62, column: 7, scope: !4517, inlinedAt: !4521)
!4530 = !DILocation(line: 63, column: 10, scope: !4517, inlinedAt: !4521)
!4531 = !DILocation(line: 63, column: 12, scope: !4517, inlinedAt: !4521)
!4532 = !DILocation(line: 63, column: 7, scope: !4517, inlinedAt: !4521)
!4533 = !DILocation(line: 64, column: 12, scope: !4517, inlinedAt: !4521)
!4534 = !DILocation(line: 311, column: 8, scope: !4236, inlinedAt: !4240)
!4535 = !DILocation(line: 312, column: 17, scope: !4236, inlinedAt: !4240)
!4536 = !DILocation(line: 57, column: 46, scope: !4517, inlinedAt: !4537)
!4537 = distinct !DILocation(line: 312, column: 10, scope: !4236, inlinedAt: !4240)
!4538 = !DILocation(line: 59, column: 10, scope: !4517, inlinedAt: !4537)
!4539 = !DILocation(line: 59, column: 12, scope: !4517, inlinedAt: !4537)
!4540 = !DILocation(line: 59, column: 7, scope: !4517, inlinedAt: !4537)
!4541 = !DILocation(line: 60, column: 7, scope: !4517, inlinedAt: !4537)
!4542 = !DILocation(line: 61, column: 10, scope: !4517, inlinedAt: !4537)
!4543 = !DILocation(line: 61, column: 12, scope: !4517, inlinedAt: !4537)
!4544 = !DILocation(line: 61, column: 7, scope: !4517, inlinedAt: !4537)
!4545 = !DILocation(line: 62, column: 7, scope: !4517, inlinedAt: !4537)
!4546 = !DILocation(line: 63, column: 10, scope: !4517, inlinedAt: !4537)
!4547 = !DILocation(line: 63, column: 12, scope: !4517, inlinedAt: !4537)
!4548 = !DILocation(line: 63, column: 7, scope: !4517, inlinedAt: !4537)
!4549 = !DILocation(line: 64, column: 12, scope: !4517, inlinedAt: !4537)
!4550 = !DILocation(line: 312, column: 8, scope: !4236, inlinedAt: !4240)
!4551 = !DILocation(line: 313, column: 11, scope: !4236, inlinedAt: !4240)
!4552 = !DILocation(line: 313, column: 8, scope: !4236, inlinedAt: !4240)
!4553 = !DILocation(line: 314, column: 11, scope: !4236, inlinedAt: !4240)
!4554 = !DILocation(line: 314, column: 8, scope: !4236, inlinedAt: !4240)
!4555 = !DILocation(line: 315, column: 29, scope: !4236, inlinedAt: !4240)
!4556 = !DILocation(line: 315, column: 19, scope: !4236, inlinedAt: !4240)
!4557 = !DILocation(line: 315, column: 27, scope: !4236, inlinedAt: !4240)
!4558 = !DILocation(line: 316, column: 29, scope: !4236, inlinedAt: !4240)
!4559 = !DILocation(line: 316, column: 19, scope: !4236, inlinedAt: !4240)
!4560 = !DILocation(line: 316, column: 5, scope: !4236, inlinedAt: !4240)
!4561 = !DILocation(line: 316, column: 27, scope: !4236, inlinedAt: !4240)
!4562 = !DILocation(line: 328, column: 26, scope: !4221)
!4563 = !DILocation(line: 328, column: 12, scope: !4221)
!4564 = !DILocation(line: 328, column: 5, scope: !4221)
!4565 = distinct !DISubprogram(name: "hash_free", scope: !456, file: !456, line: 197, type: !4566, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !452, retainedNodes: !286)
!4566 = !DISubroutineType(types: !4567)
!4567 = !{null, !4083}
!4568 = !DILocalVariable(name: "hash", arg: 1, scope: !4565, file: !456, line: 197, type: !4083)
!4569 = !DILocation(line: 197, column: 29, scope: !4565)
!4570 = !DILocalVariable(name: "bucket", scope: !4565, file: !456, line: 199, type: !4571)
!4571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4096, size: 64)
!4572 = !DILocation(line: 199, column: 22, scope: !4565)
!4573 = !DILocalVariable(name: "bucket_end", scope: !4565, file: !456, line: 199, type: !4571)
!4574 = !DILocation(line: 199, column: 31, scope: !4565)
!4575 = !DILocation(line: 201, column: 6, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4565, file: !456, line: 201, column: 6)
!4577 = !DILocation(line: 201, column: 11, scope: !4576)
!4578 = !DILocation(line: 201, column: 6, scope: !4565)
!4579 = !DILocation(line: 202, column: 3, scope: !4576)
!4580 = !DILocation(line: 204, column: 11, scope: !4565)
!4581 = !DILocation(line: 204, column: 17, scope: !4565)
!4582 = !DILocation(line: 204, column: 9, scope: !4565)
!4583 = !DILocation(line: 205, column: 15, scope: !4565)
!4584 = !DILocation(line: 205, column: 22, scope: !4565)
!4585 = !DILocation(line: 205, column: 13, scope: !4565)
!4586 = !DILocation(line: 206, column: 2, scope: !4565)
!4587 = !DILocation(line: 206, column: 9, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4589, file: !456, line: 206, column: 2)
!4589 = distinct !DILexicalBlock(scope: !4565, file: !456, line: 206, column: 2)
!4590 = !DILocation(line: 206, column: 18, scope: !4588)
!4591 = !DILocation(line: 206, column: 16, scope: !4588)
!4592 = !DILocation(line: 206, column: 2, scope: !4589)
!4593 = !DILocation(line: 207, column: 7, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4595, file: !456, line: 207, column: 7)
!4595 = distinct !DILexicalBlock(scope: !4588, file: !456, line: 206, column: 40)
!4596 = !DILocation(line: 207, column: 13, scope: !4594)
!4597 = !DILocation(line: 207, column: 7, scope: !4595)
!4598 = !DILocalVariable(name: "entry", scope: !4599, file: !456, line: 208, type: !4099)
!4599 = distinct !DILexicalBlock(scope: !4594, file: !456, line: 207, column: 25)
!4600 = !DILocation(line: 208, column: 23, scope: !4599)
!4601 = !DILocalVariable(name: "entry_end", scope: !4599, file: !456, line: 208, type: !4099)
!4602 = !DILocation(line: 208, column: 31, scope: !4599)
!4603 = !DILocation(line: 209, column: 12, scope: !4599)
!4604 = !DILocation(line: 209, column: 20, scope: !4599)
!4605 = !DILocation(line: 209, column: 10, scope: !4599)
!4606 = !DILocation(line: 210, column: 16, scope: !4599)
!4607 = !DILocation(line: 210, column: 24, scope: !4599)
!4608 = !DILocation(line: 210, column: 32, scope: !4599)
!4609 = !DILocation(line: 210, column: 22, scope: !4599)
!4610 = !DILocation(line: 210, column: 14, scope: !4599)
!4611 = !DILocation(line: 211, column: 4, scope: !4599)
!4612 = !DILocation(line: 211, column: 11, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4614, file: !456, line: 211, column: 4)
!4614 = distinct !DILexicalBlock(scope: !4599, file: !456, line: 211, column: 4)
!4615 = !DILocation(line: 211, column: 19, scope: !4613)
!4616 = !DILocation(line: 211, column: 17, scope: !4613)
!4617 = !DILocation(line: 211, column: 4, scope: !4614)
!4618 = !DILocation(line: 212, column: 5, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4613, file: !456, line: 211, column: 39)
!4620 = !DILocation(line: 212, column: 11, scope: !4619)
!4621 = !DILocation(line: 212, column: 30, scope: !4619)
!4622 = !DILocation(line: 212, column: 37, scope: !4619)
!4623 = !DILocation(line: 213, column: 9, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4619, file: !456, line: 213, column: 9)
!4625 = !DILocation(line: 213, column: 15, scope: !4624)
!4626 = !DILocation(line: 213, column: 9, scope: !4619)
!4627 = !DILocation(line: 214, column: 6, scope: !4624)
!4628 = !DILocation(line: 214, column: 12, scope: !4624)
!4629 = !DILocation(line: 214, column: 29, scope: !4624)
!4630 = !DILocation(line: 214, column: 36, scope: !4624)
!4631 = !DILocation(line: 215, column: 4, scope: !4619)
!4632 = !DILocation(line: 211, column: 35, scope: !4613)
!4633 = !DILocation(line: 211, column: 4, scope: !4613)
!4634 = distinct !{!4634, !4617, !4635, !3413}
!4635 = !DILocation(line: 215, column: 4, scope: !4614)
!4636 = !DILocation(line: 216, column: 3, scope: !4599)
!4637 = !DILocation(line: 217, column: 8, scope: !4595)
!4638 = !DILocation(line: 217, column: 16, scope: !4595)
!4639 = !DILocation(line: 217, column: 3, scope: !4595)
!4640 = !DILocation(line: 218, column: 2, scope: !4595)
!4641 = !DILocation(line: 206, column: 36, scope: !4588)
!4642 = !DILocation(line: 206, column: 2, scope: !4588)
!4643 = distinct !{!4643, !4592, !4644, !3413}
!4644 = !DILocation(line: 218, column: 2, scope: !4589)
!4645 = !DILocation(line: 219, column: 7, scope: !4565)
!4646 = !DILocation(line: 219, column: 2, scope: !4565)
!4647 = !DILocation(line: 220, column: 1, scope: !4565)
!4648 = distinct !DISubprogram(name: "hash_add", scope: !456, file: !456, line: 228, type: !4649, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !452, retainedNodes: !286)
!4649 = !DISubroutineType(types: !4650)
!4650 = !{!34, !4083, !465, !465}
!4651 = !DILocalVariable(name: "hash", arg: 1, scope: !4648, file: !456, line: 228, type: !4083)
!4652 = !DILocation(line: 228, column: 27, scope: !4648)
!4653 = !DILocalVariable(name: "key", arg: 2, scope: !4648, file: !456, line: 228, type: !465)
!4654 = !DILocation(line: 228, column: 45, scope: !4648)
!4655 = !DILocalVariable(name: "value", arg: 3, scope: !4648, file: !456, line: 228, type: !465)
!4656 = !DILocation(line: 228, column: 62, scope: !4648)
!4657 = !DILocalVariable(name: "hashval", scope: !4648, file: !456, line: 230, type: !9)
!4658 = !DILocation(line: 230, column: 11, scope: !4648)
!4659 = !DILocation(line: 230, column: 21, scope: !4648)
!4660 = !DILocation(line: 230, column: 27, scope: !4648)
!4661 = !DILocation(line: 230, column: 38, scope: !4648)
!4662 = !DILocalVariable(name: "pos", scope: !4648, file: !456, line: 231, type: !9)
!4663 = !DILocation(line: 231, column: 11, scope: !4648)
!4664 = !DILocation(line: 231, column: 17, scope: !4648)
!4665 = !DILocation(line: 231, column: 25, scope: !4648)
!4666 = !DILocalVariable(name: "bucket", scope: !4648, file: !456, line: 232, type: !4571)
!4667 = !DILocation(line: 232, column: 22, scope: !4648)
!4668 = !DILocation(line: 232, column: 31, scope: !4648)
!4669 = !DILocation(line: 232, column: 37, scope: !4648)
!4670 = !DILocation(line: 232, column: 47, scope: !4648)
!4671 = !DILocation(line: 232, column: 45, scope: !4648)
!4672 = !DILocalVariable(name: "entry", scope: !4648, file: !456, line: 233, type: !4099)
!4673 = !DILocation(line: 233, column: 21, scope: !4648)
!4674 = !DILocalVariable(name: "entry_end", scope: !4648, file: !456, line: 233, type: !4099)
!4675 = !DILocation(line: 233, column: 29, scope: !4648)
!4676 = !DILocation(line: 235, column: 6, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4648, file: !456, line: 235, column: 6)
!4678 = !DILocation(line: 235, column: 14, scope: !4677)
!4679 = !DILocation(line: 235, column: 19, scope: !4677)
!4680 = !DILocation(line: 235, column: 26, scope: !4677)
!4681 = !DILocation(line: 235, column: 34, scope: !4677)
!4682 = !DILocation(line: 235, column: 23, scope: !4677)
!4683 = !DILocation(line: 235, column: 6, scope: !4648)
!4684 = !DILocalVariable(name: "new_total", scope: !4685, file: !456, line: 236, type: !9)
!4685 = distinct !DILexicalBlock(scope: !4677, file: !456, line: 235, column: 41)
!4686 = !DILocation(line: 236, column: 12, scope: !4685)
!4687 = !DILocation(line: 236, column: 24, scope: !4685)
!4688 = !DILocation(line: 236, column: 32, scope: !4685)
!4689 = !DILocation(line: 236, column: 38, scope: !4685)
!4690 = !DILocalVariable(name: "tmp", scope: !4685, file: !456, line: 237, type: !4099)
!4691 = !DILocation(line: 237, column: 22, scope: !4685)
!4692 = !DILocation(line: 237, column: 41, scope: !4685)
!4693 = !DILocation(line: 237, column: 49, scope: !4685)
!4694 = !DILocation(line: 237, column: 58, scope: !4685)
!4695 = !DILocation(line: 237, column: 28, scope: !4685)
!4696 = !DILocation(line: 238, column: 7, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4685, file: !456, line: 238, column: 7)
!4698 = !DILocation(line: 238, column: 11, scope: !4697)
!4699 = !DILocation(line: 238, column: 7, scope: !4685)
!4700 = !DILocation(line: 239, column: 12, scope: !4697)
!4701 = !DILocation(line: 239, column: 11, scope: !4697)
!4702 = !DILocation(line: 239, column: 4, scope: !4697)
!4703 = !DILocation(line: 240, column: 21, scope: !4685)
!4704 = !DILocation(line: 240, column: 3, scope: !4685)
!4705 = !DILocation(line: 240, column: 11, scope: !4685)
!4706 = !DILocation(line: 240, column: 19, scope: !4685)
!4707 = !DILocation(line: 241, column: 19, scope: !4685)
!4708 = !DILocation(line: 241, column: 3, scope: !4685)
!4709 = !DILocation(line: 241, column: 11, scope: !4685)
!4710 = !DILocation(line: 241, column: 17, scope: !4685)
!4711 = !DILocation(line: 242, column: 2, scope: !4685)
!4712 = !DILocation(line: 244, column: 10, scope: !4648)
!4713 = !DILocation(line: 244, column: 18, scope: !4648)
!4714 = !DILocation(line: 244, column: 8, scope: !4648)
!4715 = !DILocation(line: 245, column: 14, scope: !4648)
!4716 = !DILocation(line: 245, column: 22, scope: !4648)
!4717 = !DILocation(line: 245, column: 30, scope: !4648)
!4718 = !DILocation(line: 245, column: 20, scope: !4648)
!4719 = !DILocation(line: 245, column: 12, scope: !4648)
!4720 = !DILocation(line: 246, column: 2, scope: !4648)
!4721 = !DILocation(line: 246, column: 9, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4723, file: !456, line: 246, column: 2)
!4723 = distinct !DILexicalBlock(scope: !4648, file: !456, line: 246, column: 2)
!4724 = !DILocation(line: 246, column: 17, scope: !4722)
!4725 = !DILocation(line: 246, column: 15, scope: !4722)
!4726 = !DILocation(line: 246, column: 2, scope: !4723)
!4727 = !DILocation(line: 247, column: 7, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4729, file: !456, line: 247, column: 7)
!4729 = distinct !DILexicalBlock(scope: !4722, file: !456, line: 246, column: 37)
!4730 = !DILocation(line: 247, column: 18, scope: !4728)
!4731 = !DILocation(line: 247, column: 25, scope: !4728)
!4732 = !DILocation(line: 247, column: 15, scope: !4728)
!4733 = !DILocation(line: 247, column: 7, scope: !4729)
!4734 = !DILocation(line: 248, column: 4, scope: !4728)
!4735 = !DILocation(line: 249, column: 7, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4729, file: !456, line: 249, column: 7)
!4737 = !DILocation(line: 249, column: 13, scope: !4736)
!4738 = !DILocation(line: 249, column: 25, scope: !4736)
!4739 = !DILocation(line: 249, column: 30, scope: !4736)
!4740 = !DILocation(line: 249, column: 37, scope: !4736)
!4741 = !DILocation(line: 249, column: 42, scope: !4736)
!4742 = !DILocation(line: 249, column: 7, scope: !4729)
!4743 = !DILocation(line: 250, column: 4, scope: !4736)
!4744 = !DILocation(line: 251, column: 7, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4729, file: !456, line: 251, column: 7)
!4746 = !DILocation(line: 251, column: 13, scope: !4745)
!4747 = !DILocation(line: 251, column: 7, scope: !4729)
!4748 = !DILocation(line: 252, column: 4, scope: !4745)
!4749 = !DILocation(line: 252, column: 10, scope: !4745)
!4750 = !DILocation(line: 252, column: 29, scope: !4745)
!4751 = !DILocation(line: 252, column: 36, scope: !4745)
!4752 = !DILocation(line: 253, column: 7, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4729, file: !456, line: 253, column: 7)
!4754 = !DILocation(line: 253, column: 13, scope: !4753)
!4755 = !DILocation(line: 253, column: 7, scope: !4729)
!4756 = !DILocation(line: 254, column: 4, scope: !4753)
!4757 = !DILocation(line: 254, column: 10, scope: !4753)
!4758 = !DILocation(line: 254, column: 27, scope: !4753)
!4759 = !DILocation(line: 254, column: 34, scope: !4753)
!4760 = !DILocation(line: 256, column: 16, scope: !4729)
!4761 = !DILocation(line: 256, column: 3, scope: !4729)
!4762 = !DILocation(line: 256, column: 10, scope: !4729)
!4763 = !DILocation(line: 256, column: 14, scope: !4729)
!4764 = !DILocation(line: 257, column: 18, scope: !4729)
!4765 = !DILocation(line: 257, column: 3, scope: !4729)
!4766 = !DILocation(line: 257, column: 10, scope: !4729)
!4767 = !DILocation(line: 257, column: 16, scope: !4729)
!4768 = !DILocation(line: 258, column: 3, scope: !4729)
!4769 = !DILocation(line: 246, column: 33, scope: !4722)
!4770 = !DILocation(line: 246, column: 2, scope: !4722)
!4771 = distinct !{!4771, !4726, !4772, !3413}
!4772 = !DILocation(line: 259, column: 2, scope: !4723)
!4773 = !DILocation(line: 261, column: 15, scope: !4648)
!4774 = !DILocation(line: 261, column: 2, scope: !4648)
!4775 = !DILocation(line: 261, column: 9, scope: !4648)
!4776 = !DILocation(line: 261, column: 13, scope: !4648)
!4777 = !DILocation(line: 262, column: 17, scope: !4648)
!4778 = !DILocation(line: 262, column: 2, scope: !4648)
!4779 = !DILocation(line: 262, column: 9, scope: !4648)
!4780 = !DILocation(line: 262, column: 15, scope: !4648)
!4781 = !DILocation(line: 263, column: 19, scope: !4648)
!4782 = !DILocation(line: 263, column: 2, scope: !4648)
!4783 = !DILocation(line: 263, column: 9, scope: !4648)
!4784 = !DILocation(line: 263, column: 17, scope: !4648)
!4785 = !DILocation(line: 264, column: 2, scope: !4648)
!4786 = !DILocation(line: 264, column: 10, scope: !4648)
!4787 = !DILocation(line: 264, column: 14, scope: !4648)
!4788 = !DILocation(line: 265, column: 2, scope: !4648)
!4789 = !DILocation(line: 265, column: 8, scope: !4648)
!4790 = !DILocation(line: 265, column: 13, scope: !4648)
!4791 = !DILocation(line: 266, column: 2, scope: !4648)
!4792 = !DILocation(line: 267, column: 1, scope: !4648)
!4793 = distinct !DISubprogram(name: "reallocarray", scope: !4794, file: !4794, line: 45, type: !4795, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3328, retainedNodes: !286)
!4794 = !DIFile(filename: "common/reallocarray.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "72caf594d7fe0d89f4073c86d2b69ce6")
!4795 = !DISubroutineType(types: !4796)
!4796 = !{!111, !111, !55, !55}
!4797 = !DILocalVariable(name: "optr", arg: 1, scope: !4793, file: !4794, line: 45, type: !111)
!4798 = !DILocation(line: 45, column: 20, scope: !4793)
!4799 = !DILocalVariable(name: "nmemb", arg: 2, scope: !4793, file: !4794, line: 45, type: !55)
!4800 = !DILocation(line: 45, column: 33, scope: !4793)
!4801 = !DILocalVariable(name: "size", arg: 3, scope: !4793, file: !4794, line: 45, type: !55)
!4802 = !DILocation(line: 45, column: 47, scope: !4793)
!4803 = !DILocalVariable(name: "total_size", scope: !4793, file: !4794, line: 47, type: !55)
!4804 = !DILocation(line: 47, column: 12, scope: !4793)
!4805 = !DILocation(line: 48, column: 9, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4793, file: !4794, line: 48, column: 9)
!4807 = !DILocation(line: 48, column: 9, scope: !4793)
!4808 = !DILocation(line: 49, column: 9, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4806, file: !4794, line: 48, column: 61)
!4810 = !DILocation(line: 49, column: 15, scope: !4809)
!4811 = !DILocation(line: 50, column: 9, scope: !4809)
!4812 = !DILocation(line: 52, column: 20, scope: !4793)
!4813 = !DILocation(line: 52, column: 26, scope: !4793)
!4814 = !DILocation(line: 52, column: 12, scope: !4793)
!4815 = !DILocation(line: 52, column: 5, scope: !4793)
!4816 = !DILocation(line: 53, column: 1, scope: !4793)
!4817 = distinct !DISubprogram(name: "umull_overflow", scope: !4794, file: !4794, line: 33, type: !4818, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3328, retainedNodes: !286)
!4818 = !DISubroutineType(types: !4819)
!4819 = !{!137, !55, !55, !480}
!4820 = !DILocalVariable(name: "a", arg: 1, scope: !4817, file: !4794, line: 33, type: !55)
!4821 = !DILocation(line: 33, column: 42, scope: !4817)
!4822 = !DILocalVariable(name: "b", arg: 2, scope: !4817, file: !4794, line: 33, type: !55)
!4823 = !DILocation(line: 33, column: 52, scope: !4817)
!4824 = !DILocalVariable(name: "out", arg: 3, scope: !4817, file: !4794, line: 33, type: !480)
!4825 = !DILocation(line: 33, column: 63, scope: !4817)
!4826 = !DILocation(line: 35, column: 10, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4817, file: !4794, line: 35, column: 9)
!4828 = !DILocation(line: 35, column: 12, scope: !4827)
!4829 = !DILocation(line: 35, column: 31, scope: !4827)
!4830 = !DILocation(line: 35, column: 34, scope: !4827)
!4831 = !DILocation(line: 35, column: 36, scope: !4827)
!4832 = !DILocation(line: 35, column: 56, scope: !4827)
!4833 = !DILocation(line: 35, column: 59, scope: !4827)
!4834 = !DILocation(line: 35, column: 61, scope: !4827)
!4835 = !DILocation(line: 35, column: 65, scope: !4827)
!4836 = !DILocation(line: 35, column: 79, scope: !4827)
!4837 = !DILocation(line: 35, column: 77, scope: !4827)
!4838 = !DILocation(line: 35, column: 83, scope: !4827)
!4839 = !DILocation(line: 35, column: 81, scope: !4827)
!4840 = !DILocation(line: 35, column: 9, scope: !4817)
!4841 = !DILocation(line: 36, column: 9, scope: !4827)
!4842 = !DILocation(line: 37, column: 12, scope: !4817)
!4843 = !DILocation(line: 37, column: 16, scope: !4817)
!4844 = !DILocation(line: 37, column: 14, scope: !4817)
!4845 = !DILocation(line: 37, column: 6, scope: !4817)
!4846 = !DILocation(line: 37, column: 10, scope: !4817)
!4847 = !DILocation(line: 38, column: 5, scope: !4817)
!4848 = !DILocation(line: 39, column: 1, scope: !4817)
!4849 = distinct !DISubprogram(name: "hash_add_unique", scope: !456, file: !456, line: 270, type: !4649, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !452, retainedNodes: !286)
!4850 = !DILocalVariable(name: "hash", arg: 1, scope: !4849, file: !456, line: 270, type: !4083)
!4851 = !DILocation(line: 270, column: 34, scope: !4849)
!4852 = !DILocalVariable(name: "key", arg: 2, scope: !4849, file: !456, line: 270, type: !465)
!4853 = !DILocation(line: 270, column: 52, scope: !4849)
!4854 = !DILocalVariable(name: "value", arg: 3, scope: !4849, file: !456, line: 270, type: !465)
!4855 = !DILocation(line: 270, column: 69, scope: !4849)
!4856 = !DILocalVariable(name: "hashval", scope: !4849, file: !456, line: 272, type: !9)
!4857 = !DILocation(line: 272, column: 11, scope: !4849)
!4858 = !DILocation(line: 272, column: 21, scope: !4849)
!4859 = !DILocation(line: 272, column: 27, scope: !4849)
!4860 = !DILocation(line: 272, column: 38, scope: !4849)
!4861 = !DILocalVariable(name: "pos", scope: !4849, file: !456, line: 273, type: !9)
!4862 = !DILocation(line: 273, column: 11, scope: !4849)
!4863 = !DILocation(line: 273, column: 17, scope: !4849)
!4864 = !DILocation(line: 273, column: 25, scope: !4849)
!4865 = !DILocalVariable(name: "bucket", scope: !4849, file: !456, line: 274, type: !4571)
!4866 = !DILocation(line: 274, column: 22, scope: !4849)
!4867 = !DILocation(line: 274, column: 31, scope: !4849)
!4868 = !DILocation(line: 274, column: 37, scope: !4849)
!4869 = !DILocation(line: 274, column: 47, scope: !4849)
!4870 = !DILocation(line: 274, column: 45, scope: !4849)
!4871 = !DILocalVariable(name: "entry", scope: !4849, file: !456, line: 275, type: !4099)
!4872 = !DILocation(line: 275, column: 21, scope: !4849)
!4873 = !DILocalVariable(name: "entry_end", scope: !4849, file: !456, line: 275, type: !4099)
!4874 = !DILocation(line: 275, column: 29, scope: !4849)
!4875 = !DILocation(line: 277, column: 6, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4849, file: !456, line: 277, column: 6)
!4877 = !DILocation(line: 277, column: 14, scope: !4876)
!4878 = !DILocation(line: 277, column: 19, scope: !4876)
!4879 = !DILocation(line: 277, column: 26, scope: !4876)
!4880 = !DILocation(line: 277, column: 34, scope: !4876)
!4881 = !DILocation(line: 277, column: 23, scope: !4876)
!4882 = !DILocation(line: 277, column: 6, scope: !4849)
!4883 = !DILocalVariable(name: "new_total", scope: !4884, file: !456, line: 278, type: !9)
!4884 = distinct !DILexicalBlock(scope: !4876, file: !456, line: 277, column: 41)
!4885 = !DILocation(line: 278, column: 12, scope: !4884)
!4886 = !DILocation(line: 278, column: 24, scope: !4884)
!4887 = !DILocation(line: 278, column: 32, scope: !4884)
!4888 = !DILocation(line: 278, column: 38, scope: !4884)
!4889 = !DILocalVariable(name: "tmp", scope: !4884, file: !456, line: 279, type: !4099)
!4890 = !DILocation(line: 279, column: 22, scope: !4884)
!4891 = !DILocation(line: 279, column: 41, scope: !4884)
!4892 = !DILocation(line: 279, column: 49, scope: !4884)
!4893 = !DILocation(line: 279, column: 58, scope: !4884)
!4894 = !DILocation(line: 279, column: 28, scope: !4884)
!4895 = !DILocation(line: 280, column: 7, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4884, file: !456, line: 280, column: 7)
!4897 = !DILocation(line: 280, column: 11, scope: !4896)
!4898 = !DILocation(line: 280, column: 7, scope: !4884)
!4899 = !DILocation(line: 281, column: 12, scope: !4896)
!4900 = !DILocation(line: 281, column: 11, scope: !4896)
!4901 = !DILocation(line: 281, column: 4, scope: !4896)
!4902 = !DILocation(line: 282, column: 21, scope: !4884)
!4903 = !DILocation(line: 282, column: 3, scope: !4884)
!4904 = !DILocation(line: 282, column: 11, scope: !4884)
!4905 = !DILocation(line: 282, column: 19, scope: !4884)
!4906 = !DILocation(line: 283, column: 19, scope: !4884)
!4907 = !DILocation(line: 283, column: 3, scope: !4884)
!4908 = !DILocation(line: 283, column: 11, scope: !4884)
!4909 = !DILocation(line: 283, column: 17, scope: !4884)
!4910 = !DILocation(line: 284, column: 2, scope: !4884)
!4911 = !DILocation(line: 286, column: 10, scope: !4849)
!4912 = !DILocation(line: 286, column: 18, scope: !4849)
!4913 = !DILocation(line: 286, column: 8, scope: !4849)
!4914 = !DILocation(line: 287, column: 14, scope: !4849)
!4915 = !DILocation(line: 287, column: 22, scope: !4849)
!4916 = !DILocation(line: 287, column: 30, scope: !4849)
!4917 = !DILocation(line: 287, column: 20, scope: !4849)
!4918 = !DILocation(line: 287, column: 12, scope: !4849)
!4919 = !DILocation(line: 288, column: 2, scope: !4849)
!4920 = !DILocation(line: 288, column: 9, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4922, file: !456, line: 288, column: 2)
!4922 = distinct !DILexicalBlock(scope: !4849, file: !456, line: 288, column: 2)
!4923 = !DILocation(line: 288, column: 17, scope: !4921)
!4924 = !DILocation(line: 288, column: 15, scope: !4921)
!4925 = !DILocation(line: 288, column: 2, scope: !4922)
!4926 = !DILocation(line: 289, column: 7, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4928, file: !456, line: 289, column: 7)
!4928 = distinct !DILexicalBlock(scope: !4921, file: !456, line: 288, column: 37)
!4929 = !DILocation(line: 289, column: 18, scope: !4927)
!4930 = !DILocation(line: 289, column: 25, scope: !4927)
!4931 = !DILocation(line: 289, column: 15, scope: !4927)
!4932 = !DILocation(line: 289, column: 7, scope: !4928)
!4933 = !DILocation(line: 290, column: 4, scope: !4927)
!4934 = !DILocation(line: 291, column: 7, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4928, file: !456, line: 291, column: 7)
!4936 = !DILocation(line: 291, column: 13, scope: !4935)
!4937 = !DILocation(line: 291, column: 25, scope: !4935)
!4938 = !DILocation(line: 291, column: 30, scope: !4935)
!4939 = !DILocation(line: 291, column: 37, scope: !4935)
!4940 = !DILocation(line: 291, column: 42, scope: !4935)
!4941 = !DILocation(line: 291, column: 7, scope: !4928)
!4942 = !DILocation(line: 292, column: 4, scope: !4935)
!4943 = !DILocation(line: 293, column: 2, scope: !4928)
!4944 = !DILocation(line: 288, column: 33, scope: !4921)
!4945 = !DILocation(line: 288, column: 2, scope: !4921)
!4946 = distinct !{!4946, !4925, !4947, !3413}
!4947 = !DILocation(line: 293, column: 2, scope: !4922)
!4948 = !DILocation(line: 295, column: 15, scope: !4849)
!4949 = !DILocation(line: 295, column: 2, scope: !4849)
!4950 = !DILocation(line: 295, column: 9, scope: !4849)
!4951 = !DILocation(line: 295, column: 13, scope: !4849)
!4952 = !DILocation(line: 296, column: 17, scope: !4849)
!4953 = !DILocation(line: 296, column: 2, scope: !4849)
!4954 = !DILocation(line: 296, column: 9, scope: !4849)
!4955 = !DILocation(line: 296, column: 15, scope: !4849)
!4956 = !DILocation(line: 297, column: 19, scope: !4849)
!4957 = !DILocation(line: 297, column: 2, scope: !4849)
!4958 = !DILocation(line: 297, column: 9, scope: !4849)
!4959 = !DILocation(line: 297, column: 17, scope: !4849)
!4960 = !DILocation(line: 298, column: 2, scope: !4849)
!4961 = !DILocation(line: 298, column: 10, scope: !4849)
!4962 = !DILocation(line: 298, column: 14, scope: !4849)
!4963 = !DILocation(line: 299, column: 2, scope: !4849)
!4964 = !DILocation(line: 299, column: 8, scope: !4849)
!4965 = !DILocation(line: 299, column: 13, scope: !4849)
!4966 = !DILocation(line: 300, column: 2, scope: !4849)
!4967 = !DILocation(line: 301, column: 1, scope: !4849)
!4968 = distinct !DISubprogram(name: "hash_find", scope: !456, file: !456, line: 323, type: !4969, scopeLine: 324, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !452, retainedNodes: !286)
!4969 = !DISubroutineType(types: !4970)
!4970 = !{!111, !4971, !465}
!4971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4972, size: 64)
!4972 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4084)
!4973 = !DILocalVariable(name: "hash", arg: 1, scope: !4968, file: !456, line: 323, type: !4971)
!4974 = !DILocation(line: 323, column: 36, scope: !4968)
!4975 = !DILocalVariable(name: "key", arg: 2, scope: !4968, file: !456, line: 323, type: !465)
!4976 = !DILocation(line: 323, column: 54, scope: !4968)
!4977 = !DILocalVariable(name: "entry", scope: !4968, file: !456, line: 325, type: !4978)
!4978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4979, size: 64)
!4979 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4100)
!4980 = !DILocation(line: 325, column: 27, scope: !4968)
!4981 = !DILocation(line: 327, column: 26, scope: !4968)
!4982 = !DILocation(line: 327, column: 32, scope: !4968)
!4983 = !DILocation(line: 327, column: 37, scope: !4968)
!4984 = !DILocation(line: 327, column: 43, scope: !4968)
!4985 = !DILocation(line: 327, column: 54, scope: !4968)
!4986 = !DILocation(line: 327, column: 10, scope: !4968)
!4987 = !DILocation(line: 327, column: 8, scope: !4968)
!4988 = !DILocation(line: 328, column: 6, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4968, file: !456, line: 328, column: 6)
!4990 = !DILocation(line: 328, column: 6, scope: !4968)
!4991 = !DILocation(line: 329, column: 18, scope: !4989)
!4992 = !DILocation(line: 329, column: 25, scope: !4989)
!4993 = !DILocation(line: 329, column: 3, scope: !4989)
!4994 = !DILocation(line: 330, column: 2, scope: !4968)
!4995 = !DILocation(line: 331, column: 1, scope: !4968)
!4996 = distinct !DISubprogram(name: "hash_find_entry", scope: !456, file: !456, line: 303, type: !4997, scopeLine: 306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !452, retainedNodes: !286)
!4997 = !DISubroutineType(types: !4998)
!4998 = !{!4099, !4971, !205, !9}
!4999 = !DILocalVariable(name: "hash", arg: 1, scope: !4996, file: !456, line: 303, type: !4971)
!5000 = !DILocation(line: 303, column: 69, scope: !4996)
!5001 = !DILocalVariable(name: "key", arg: 2, scope: !4996, file: !456, line: 304, type: !205)
!5002 = !DILocation(line: 304, column: 21, scope: !4996)
!5003 = !DILocalVariable(name: "hashval", arg: 3, scope: !4996, file: !456, line: 305, type: !9)
!5004 = !DILocation(line: 305, column: 18, scope: !4996)
!5005 = !DILocalVariable(name: "pos", scope: !4996, file: !456, line: 307, type: !9)
!5006 = !DILocation(line: 307, column: 11, scope: !4996)
!5007 = !DILocation(line: 307, column: 17, scope: !4996)
!5008 = !DILocation(line: 307, column: 25, scope: !4996)
!5009 = !DILocalVariable(name: "bucket", scope: !4996, file: !456, line: 308, type: !5010)
!5010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5011, size: 64)
!5011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4096)
!5012 = !DILocation(line: 308, column: 28, scope: !4996)
!5013 = !DILocation(line: 308, column: 37, scope: !4996)
!5014 = !DILocation(line: 308, column: 43, scope: !4996)
!5015 = !DILocation(line: 308, column: 53, scope: !4996)
!5016 = !DILocation(line: 308, column: 51, scope: !4996)
!5017 = !DILocalVariable(name: "entry", scope: !4996, file: !456, line: 309, type: !4099)
!5018 = !DILocation(line: 309, column: 21, scope: !4996)
!5019 = !DILocalVariable(name: "entry_end", scope: !4996, file: !456, line: 309, type: !4099)
!5020 = !DILocation(line: 309, column: 29, scope: !4996)
!5021 = !DILocation(line: 311, column: 10, scope: !4996)
!5022 = !DILocation(line: 311, column: 18, scope: !4996)
!5023 = !DILocation(line: 311, column: 8, scope: !4996)
!5024 = !DILocation(line: 312, column: 14, scope: !4996)
!5025 = !DILocation(line: 312, column: 22, scope: !4996)
!5026 = !DILocation(line: 312, column: 30, scope: !4996)
!5027 = !DILocation(line: 312, column: 20, scope: !4996)
!5028 = !DILocation(line: 312, column: 12, scope: !4996)
!5029 = !DILocation(line: 313, column: 2, scope: !4996)
!5030 = !DILocation(line: 313, column: 9, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5032, file: !456, line: 313, column: 2)
!5032 = distinct !DILexicalBlock(scope: !4996, file: !456, line: 313, column: 2)
!5033 = !DILocation(line: 313, column: 17, scope: !5031)
!5034 = !DILocation(line: 313, column: 15, scope: !5031)
!5035 = !DILocation(line: 313, column: 2, scope: !5032)
!5036 = !DILocation(line: 314, column: 7, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5038, file: !456, line: 314, column: 7)
!5038 = distinct !DILexicalBlock(scope: !5031, file: !456, line: 313, column: 37)
!5039 = !DILocation(line: 314, column: 18, scope: !5037)
!5040 = !DILocation(line: 314, column: 25, scope: !5037)
!5041 = !DILocation(line: 314, column: 15, scope: !5037)
!5042 = !DILocation(line: 314, column: 7, scope: !5038)
!5043 = !DILocation(line: 315, column: 4, scope: !5037)
!5044 = !DILocation(line: 316, column: 7, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5038, file: !456, line: 316, column: 7)
!5046 = !DILocation(line: 316, column: 13, scope: !5045)
!5047 = !DILocation(line: 316, column: 25, scope: !5045)
!5048 = !DILocation(line: 316, column: 30, scope: !5045)
!5049 = !DILocation(line: 316, column: 37, scope: !5045)
!5050 = !DILocation(line: 316, column: 42, scope: !5045)
!5051 = !DILocation(line: 316, column: 7, scope: !5038)
!5052 = !DILocation(line: 317, column: 11, scope: !5045)
!5053 = !DILocation(line: 317, column: 4, scope: !5045)
!5054 = !DILocation(line: 318, column: 2, scope: !5038)
!5055 = !DILocation(line: 313, column: 33, scope: !5031)
!5056 = !DILocation(line: 313, column: 2, scope: !5031)
!5057 = distinct !{!5057, !5035, !5058, !3413}
!5058 = !DILocation(line: 318, column: 2, scope: !5032)
!5059 = !DILocation(line: 320, column: 2, scope: !4996)
!5060 = !DILocation(line: 321, column: 1, scope: !4996)
!5061 = distinct !DISubprogram(name: "hash_del", scope: !456, file: !456, line: 333, type: !5062, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !452, retainedNodes: !286)
!5062 = !DISubroutineType(types: !5063)
!5063 = !{!34, !4083, !465}
!5064 = !DILocalVariable(name: "hash", arg: 1, scope: !5061, file: !456, line: 333, type: !4083)
!5065 = !DILocation(line: 333, column: 27, scope: !5061)
!5066 = !DILocalVariable(name: "key", arg: 2, scope: !5061, file: !456, line: 333, type: !465)
!5067 = !DILocation(line: 333, column: 45, scope: !5061)
!5068 = !DILocalVariable(name: "hashval", scope: !5061, file: !456, line: 335, type: !9)
!5069 = !DILocation(line: 335, column: 11, scope: !5061)
!5070 = !DILocation(line: 335, column: 21, scope: !5061)
!5071 = !DILocation(line: 335, column: 27, scope: !5061)
!5072 = !DILocation(line: 335, column: 38, scope: !5061)
!5073 = !DILocalVariable(name: "pos", scope: !5061, file: !456, line: 336, type: !9)
!5074 = !DILocation(line: 336, column: 11, scope: !5061)
!5075 = !DILocation(line: 336, column: 17, scope: !5061)
!5076 = !DILocation(line: 336, column: 25, scope: !5061)
!5077 = !DILocalVariable(name: "steps_used", scope: !5061, file: !456, line: 337, type: !9)
!5078 = !DILocation(line: 337, column: 11, scope: !5061)
!5079 = !DILocalVariable(name: "steps_total", scope: !5061, file: !456, line: 337, type: !9)
!5080 = !DILocation(line: 337, column: 23, scope: !5061)
!5081 = !DILocalVariable(name: "bucket", scope: !5061, file: !456, line: 338, type: !4571)
!5082 = !DILocation(line: 338, column: 22, scope: !5061)
!5083 = !DILocation(line: 338, column: 31, scope: !5061)
!5084 = !DILocation(line: 338, column: 37, scope: !5061)
!5085 = !DILocation(line: 338, column: 47, scope: !5061)
!5086 = !DILocation(line: 338, column: 45, scope: !5061)
!5087 = !DILocalVariable(name: "entry", scope: !5061, file: !456, line: 339, type: !4099)
!5088 = !DILocation(line: 339, column: 21, scope: !5061)
!5089 = !DILocalVariable(name: "entry_end", scope: !5061, file: !456, line: 339, type: !4099)
!5090 = !DILocation(line: 339, column: 29, scope: !5061)
!5091 = !DILocation(line: 341, column: 26, scope: !5061)
!5092 = !DILocation(line: 341, column: 32, scope: !5061)
!5093 = !DILocation(line: 341, column: 37, scope: !5061)
!5094 = !DILocation(line: 341, column: 10, scope: !5061)
!5095 = !DILocation(line: 341, column: 8, scope: !5061)
!5096 = !DILocation(line: 342, column: 6, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5061, file: !456, line: 342, column: 6)
!5098 = !DILocation(line: 342, column: 12, scope: !5097)
!5099 = !DILocation(line: 342, column: 6, scope: !5061)
!5100 = !DILocation(line: 343, column: 3, scope: !5097)
!5101 = !DILocation(line: 345, column: 6, scope: !5102)
!5102 = distinct !DILexicalBlock(scope: !5061, file: !456, line: 345, column: 6)
!5103 = !DILocation(line: 345, column: 12, scope: !5102)
!5104 = !DILocation(line: 345, column: 6, scope: !5061)
!5105 = !DILocation(line: 346, column: 3, scope: !5102)
!5106 = !DILocation(line: 346, column: 9, scope: !5102)
!5107 = !DILocation(line: 346, column: 28, scope: !5102)
!5108 = !DILocation(line: 346, column: 35, scope: !5102)
!5109 = !DILocation(line: 347, column: 6, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5061, file: !456, line: 347, column: 6)
!5111 = !DILocation(line: 347, column: 12, scope: !5110)
!5112 = !DILocation(line: 347, column: 6, scope: !5061)
!5113 = !DILocation(line: 348, column: 3, scope: !5110)
!5114 = !DILocation(line: 348, column: 9, scope: !5110)
!5115 = !DILocation(line: 348, column: 26, scope: !5110)
!5116 = !DILocation(line: 348, column: 33, scope: !5110)
!5117 = !DILocation(line: 350, column: 14, scope: !5061)
!5118 = !DILocation(line: 350, column: 22, scope: !5061)
!5119 = !DILocation(line: 350, column: 32, scope: !5061)
!5120 = !DILocation(line: 350, column: 40, scope: !5061)
!5121 = !DILocation(line: 350, column: 30, scope: !5061)
!5122 = !DILocation(line: 350, column: 12, scope: !5061)
!5123 = !DILocation(line: 351, column: 10, scope: !5061)
!5124 = !DILocation(line: 351, column: 17, scope: !5061)
!5125 = !DILocation(line: 351, column: 23, scope: !5061)
!5126 = !DILocation(line: 352, column: 12, scope: !5061)
!5127 = !DILocation(line: 352, column: 24, scope: !5061)
!5128 = !DILocation(line: 352, column: 22, scope: !5061)
!5129 = !DILocation(line: 352, column: 31, scope: !5061)
!5130 = !DILocation(line: 351, column: 2, scope: !5061)
!5131 = !DILocation(line: 354, column: 2, scope: !5061)
!5132 = !DILocation(line: 354, column: 10, scope: !5061)
!5133 = !DILocation(line: 354, column: 14, scope: !5061)
!5134 = !DILocation(line: 355, column: 2, scope: !5061)
!5135 = !DILocation(line: 355, column: 8, scope: !5061)
!5136 = !DILocation(line: 355, column: 13, scope: !5061)
!5137 = !DILocation(line: 357, column: 15, scope: !5061)
!5138 = !DILocation(line: 357, column: 23, scope: !5061)
!5139 = !DILocation(line: 357, column: 28, scope: !5061)
!5140 = !DILocation(line: 357, column: 13, scope: !5061)
!5141 = !DILocation(line: 358, column: 16, scope: !5061)
!5142 = !DILocation(line: 358, column: 24, scope: !5061)
!5143 = !DILocation(line: 358, column: 30, scope: !5061)
!5144 = !DILocation(line: 358, column: 14, scope: !5061)
!5145 = !DILocation(line: 359, column: 6, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5061, file: !456, line: 359, column: 6)
!5147 = !DILocation(line: 359, column: 17, scope: !5146)
!5148 = !DILocation(line: 359, column: 23, scope: !5146)
!5149 = !DILocation(line: 359, column: 21, scope: !5146)
!5150 = !DILocation(line: 359, column: 6, scope: !5061)
!5151 = !DILocalVariable(name: "tmp", scope: !5152, file: !456, line: 360, type: !4099)
!5152 = distinct !DILexicalBlock(scope: !5146, file: !456, line: 359, column: 36)
!5153 = !DILocation(line: 360, column: 22, scope: !5152)
!5154 = !DILocation(line: 360, column: 41, scope: !5152)
!5155 = !DILocation(line: 360, column: 49, scope: !5152)
!5156 = !DILocation(line: 360, column: 58, scope: !5152)
!5157 = !DILocation(line: 360, column: 69, scope: !5152)
!5158 = !DILocation(line: 360, column: 28, scope: !5152)
!5159 = !DILocation(line: 362, column: 7, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5152, file: !456, line: 362, column: 7)
!5161 = !DILocation(line: 362, column: 7, scope: !5152)
!5162 = !DILocation(line: 363, column: 22, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5160, file: !456, line: 362, column: 12)
!5164 = !DILocation(line: 363, column: 4, scope: !5163)
!5165 = !DILocation(line: 363, column: 12, scope: !5163)
!5166 = !DILocation(line: 363, column: 20, scope: !5163)
!5167 = !DILocation(line: 364, column: 21, scope: !5163)
!5168 = !DILocation(line: 364, column: 32, scope: !5163)
!5169 = !DILocation(line: 364, column: 37, scope: !5163)
!5170 = !DILocation(line: 364, column: 4, scope: !5163)
!5171 = !DILocation(line: 364, column: 12, scope: !5163)
!5172 = !DILocation(line: 364, column: 18, scope: !5163)
!5173 = !DILocation(line: 365, column: 3, scope: !5163)
!5174 = !DILocation(line: 366, column: 2, scope: !5152)
!5175 = !DILocation(line: 368, column: 2, scope: !5061)
!5176 = !DILocation(line: 369, column: 1, scope: !5061)
!5177 = distinct !DISubprogram(name: "hash_get_count", scope: !456, file: !456, line: 371, type: !5178, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !452, retainedNodes: !286)
!5178 = !DISubroutineType(types: !5179)
!5179 = !{!9, !4971}
!5180 = !DILocalVariable(name: "hash", arg: 1, scope: !5177, file: !456, line: 371, type: !4971)
!5181 = !DILocation(line: 371, column: 44, scope: !5177)
!5182 = !DILocation(line: 373, column: 9, scope: !5177)
!5183 = !DILocation(line: 373, column: 15, scope: !5177)
!5184 = !DILocation(line: 373, column: 2, scope: !5177)
!5185 = distinct !DISubprogram(name: "hash_iter_init", scope: !456, file: !456, line: 376, type: !5186, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !452, retainedNodes: !286)
!5186 = !DISubroutineType(types: !5187)
!5187 = !{null, !4971, !5188}
!5188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5189, size: 64)
!5189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_iter", file: !129, line: 8, size: 128, elements: !5190)
!5190 = !{!5191, !5192, !5193}
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !5189, file: !129, line: 9, baseType: !4971, size: 64)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "bucket", scope: !5189, file: !129, line: 10, baseType: !9, size: 32, offset: 64)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !5189, file: !129, line: 11, baseType: !34, size: 32, offset: 96)
!5194 = !DILocalVariable(name: "hash", arg: 1, scope: !5185, file: !456, line: 376, type: !4971)
!5195 = !DILocation(line: 376, column: 40, scope: !5185)
!5196 = !DILocalVariable(name: "iter", arg: 2, scope: !5185, file: !456, line: 376, type: !5188)
!5197 = !DILocation(line: 376, column: 64, scope: !5185)
!5198 = !DILocation(line: 378, column: 15, scope: !5185)
!5199 = !DILocation(line: 378, column: 2, scope: !5185)
!5200 = !DILocation(line: 378, column: 8, scope: !5185)
!5201 = !DILocation(line: 378, column: 13, scope: !5185)
!5202 = !DILocation(line: 379, column: 2, scope: !5185)
!5203 = !DILocation(line: 379, column: 8, scope: !5185)
!5204 = !DILocation(line: 379, column: 15, scope: !5185)
!5205 = !DILocation(line: 380, column: 2, scope: !5185)
!5206 = !DILocation(line: 380, column: 8, scope: !5185)
!5207 = !DILocation(line: 380, column: 14, scope: !5185)
!5208 = !DILocation(line: 381, column: 1, scope: !5185)
!5209 = distinct !DISubprogram(name: "hash_iter_next", scope: !456, file: !456, line: 383, type: !5210, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !452, retainedNodes: !286)
!5210 = !DISubroutineType(types: !5211)
!5211 = !{!137, !5188, !5212, !5212}
!5212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 64)
!5213 = !DILocalVariable(name: "iter", arg: 1, scope: !5209, file: !456, line: 383, type: !5188)
!5214 = !DILocation(line: 383, column: 39, scope: !5209)
!5215 = !DILocalVariable(name: "key", arg: 2, scope: !5209, file: !456, line: 383, type: !5212)
!5216 = !DILocation(line: 383, column: 58, scope: !5209)
!5217 = !DILocalVariable(name: "value", arg: 3, scope: !5209, file: !456, line: 384, type: !5212)
!5218 = !DILocation(line: 384, column: 21, scope: !5209)
!5219 = !DILocalVariable(name: "b", scope: !5209, file: !456, line: 386, type: !5010)
!5220 = !DILocation(line: 386, column: 28, scope: !5209)
!5221 = !DILocation(line: 386, column: 32, scope: !5209)
!5222 = !DILocation(line: 386, column: 38, scope: !5209)
!5223 = !DILocation(line: 386, column: 44, scope: !5209)
!5224 = !DILocation(line: 386, column: 54, scope: !5209)
!5225 = !DILocation(line: 386, column: 60, scope: !5209)
!5226 = !DILocation(line: 386, column: 52, scope: !5209)
!5227 = !DILocalVariable(name: "e", scope: !5209, file: !456, line: 387, type: !4978)
!5228 = !DILocation(line: 387, column: 27, scope: !5209)
!5229 = !DILocation(line: 389, column: 2, scope: !5209)
!5230 = !DILocation(line: 389, column: 8, scope: !5209)
!5231 = !DILocation(line: 389, column: 13, scope: !5209)
!5232 = !DILocation(line: 391, column: 16, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5209, file: !456, line: 391, column: 6)
!5234 = !DILocation(line: 391, column: 22, scope: !5233)
!5235 = !DILocation(line: 391, column: 31, scope: !5233)
!5236 = !DILocation(line: 391, column: 34, scope: !5233)
!5237 = !DILocation(line: 391, column: 28, scope: !5233)
!5238 = !DILocation(line: 391, column: 6, scope: !5209)
!5239 = !DILocation(line: 392, column: 3, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5233, file: !456, line: 391, column: 40)
!5241 = !DILocation(line: 392, column: 9, scope: !5240)
!5242 = !DILocation(line: 392, column: 15, scope: !5240)
!5243 = !DILocation(line: 394, column: 8, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5240, file: !456, line: 394, column: 3)
!5245 = !DILocation(line: 394, column: 14, scope: !5244)
!5246 = !DILocation(line: 394, column: 20, scope: !5244)
!5247 = !DILocation(line: 394, column: 24, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !5244, file: !456, line: 394, column: 3)
!5249 = !DILocation(line: 394, column: 30, scope: !5248)
!5250 = !DILocation(line: 394, column: 37, scope: !5248)
!5251 = !DILocation(line: 394, column: 3, scope: !5244)
!5252 = !DILocation(line: 396, column: 8, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5248, file: !456, line: 395, column: 24)
!5254 = !DILocation(line: 396, column: 14, scope: !5253)
!5255 = !DILocation(line: 396, column: 20, scope: !5253)
!5256 = !DILocation(line: 396, column: 30, scope: !5253)
!5257 = !DILocation(line: 396, column: 36, scope: !5253)
!5258 = !DILocation(line: 396, column: 28, scope: !5253)
!5259 = !DILocation(line: 396, column: 6, scope: !5253)
!5260 = !DILocation(line: 398, column: 8, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5253, file: !456, line: 398, column: 8)
!5262 = !DILocation(line: 398, column: 11, scope: !5261)
!5263 = !DILocation(line: 398, column: 16, scope: !5261)
!5264 = !DILocation(line: 398, column: 8, scope: !5253)
!5265 = !DILocation(line: 399, column: 5, scope: !5261)
!5266 = !DILocation(line: 400, column: 3, scope: !5253)
!5267 = !DILocation(line: 395, column: 8, scope: !5248)
!5268 = !DILocation(line: 395, column: 14, scope: !5248)
!5269 = !DILocation(line: 395, column: 20, scope: !5248)
!5270 = !DILocation(line: 394, column: 3, scope: !5248)
!5271 = distinct !{!5271, !5251, !5272, !3413}
!5272 = !DILocation(line: 400, column: 3, scope: !5244)
!5273 = !DILocation(line: 402, column: 7, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5240, file: !456, line: 402, column: 7)
!5275 = !DILocation(line: 402, column: 13, scope: !5274)
!5276 = !DILocation(line: 402, column: 20, scope: !5274)
!5277 = !DILocation(line: 402, column: 7, scope: !5240)
!5278 = !DILocation(line: 403, column: 4, scope: !5274)
!5279 = !DILocation(line: 404, column: 2, scope: !5240)
!5280 = !DILocation(line: 406, column: 6, scope: !5209)
!5281 = !DILocation(line: 406, column: 9, scope: !5209)
!5282 = !DILocation(line: 406, column: 19, scope: !5209)
!5283 = !DILocation(line: 406, column: 25, scope: !5209)
!5284 = !DILocation(line: 406, column: 17, scope: !5209)
!5285 = !DILocation(line: 406, column: 4, scope: !5209)
!5286 = !DILocation(line: 408, column: 6, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5209, file: !456, line: 408, column: 6)
!5288 = !DILocation(line: 408, column: 12, scope: !5287)
!5289 = !DILocation(line: 408, column: 6, scope: !5209)
!5290 = !DILocation(line: 409, column: 12, scope: !5287)
!5291 = !DILocation(line: 409, column: 15, scope: !5287)
!5292 = !DILocation(line: 409, column: 4, scope: !5287)
!5293 = !DILocation(line: 409, column: 10, scope: !5287)
!5294 = !DILocation(line: 409, column: 3, scope: !5287)
!5295 = !DILocation(line: 410, column: 6, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5209, file: !456, line: 410, column: 6)
!5297 = !DILocation(line: 410, column: 10, scope: !5296)
!5298 = !DILocation(line: 410, column: 6, scope: !5209)
!5299 = !DILocation(line: 411, column: 10, scope: !5296)
!5300 = !DILocation(line: 411, column: 13, scope: !5296)
!5301 = !DILocation(line: 411, column: 4, scope: !5296)
!5302 = !DILocation(line: 411, column: 8, scope: !5296)
!5303 = !DILocation(line: 411, column: 3, scope: !5296)
!5304 = !DILocation(line: 413, column: 2, scope: !5209)
!5305 = !DILocation(line: 414, column: 1, scope: !5209)
!5306 = !DILocalVariable(name: "value", arg: 1, scope: !476, file: !477, line: 24, type: !55)
!5307 = !DILocation(line: 24, column: 23, scope: !476)
!5308 = !DILocalVariable(name: "dst", arg: 2, scope: !476, file: !477, line: 25, type: !52)
!5309 = !DILocation(line: 25, column: 21, scope: !476)
!5310 = !DILocalVariable(name: "length_out", arg: 3, scope: !476, file: !477, line: 26, type: !480)
!5311 = !DILocation(line: 26, column: 24, scope: !476)
!5312 = !DILocalVariable(name: "next", scope: !476, file: !477, line: 33, type: !55)
!5313 = !DILocation(line: 33, column: 12, scope: !476)
!5314 = !DILocation(line: 40, column: 5, scope: !476)
!5315 = !DILocation(line: 40, column: 13, scope: !476)
!5316 = !DILocation(line: 40, column: 17, scope: !476)
!5317 = !DILocation(line: 41, column: 5, scope: !476)
!5318 = !DILocation(line: 41, column: 12, scope: !476)
!5319 = !DILocation(line: 41, column: 18, scope: !476)
!5320 = !DILocalVariable(name: "i", scope: !5321, file: !477, line: 42, type: !3219)
!5321 = distinct !DILexicalBlock(scope: !476, file: !477, line: 41, column: 26)
!5322 = !DILocation(line: 42, column: 17, scope: !5321)
!5323 = !DILocation(line: 42, column: 33, scope: !5321)
!5324 = !DILocation(line: 42, column: 39, scope: !5321)
!5325 = !DILocation(line: 42, column: 46, scope: !5321)
!5326 = !DILocation(line: 42, column: 21, scope: !5321)
!5327 = !DILocation(line: 43, column: 8, scope: !5321)
!5328 = !DILocation(line: 44, column: 21, scope: !5321)
!5329 = !DILocation(line: 44, column: 23, scope: !5321)
!5330 = !DILocation(line: 44, column: 14, scope: !5321)
!5331 = !DILocation(line: 44, column: 2, scope: !5321)
!5332 = !DILocation(line: 44, column: 6, scope: !5321)
!5333 = !DILocation(line: 44, column: 12, scope: !5321)
!5334 = !DILocation(line: 45, column: 25, scope: !5321)
!5335 = !DILocation(line: 45, column: 18, scope: !5321)
!5336 = !DILocation(line: 45, column: 2, scope: !5321)
!5337 = !DILocation(line: 45, column: 6, scope: !5321)
!5338 = !DILocation(line: 45, column: 11, scope: !5321)
!5339 = !DILocation(line: 45, column: 16, scope: !5321)
!5340 = !DILocation(line: 46, column: 7, scope: !5321)
!5341 = distinct !{!5341, !5317, !5342, !3413}
!5342 = !DILocation(line: 47, column: 5, scope: !476)
!5343 = !DILocation(line: 49, column: 9, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !476, file: !477, line: 49, column: 9)
!5345 = !DILocation(line: 49, column: 15, scope: !5344)
!5346 = !DILocation(line: 49, column: 9, scope: !476)
!5347 = !DILocation(line: 50, column: 37, scope: !5348)
!5348 = distinct !DILexicalBlock(scope: !5344, file: !477, line: 49, column: 21)
!5349 = !DILocation(line: 50, column: 27, scope: !5348)
!5350 = !DILocation(line: 50, column: 25, scope: !5348)
!5351 = !DILocation(line: 50, column: 14, scope: !5348)
!5352 = !DILocation(line: 50, column: 2, scope: !5348)
!5353 = !DILocation(line: 50, column: 6, scope: !5348)
!5354 = !DILocation(line: 50, column: 12, scope: !5348)
!5355 = !DILocation(line: 51, column: 25, scope: !5348)
!5356 = !DILocation(line: 51, column: 23, scope: !5348)
!5357 = !DILocation(line: 51, column: 30, scope: !5348)
!5358 = !DILocation(line: 51, column: 3, scope: !5348)
!5359 = !DILocation(line: 51, column: 14, scope: !5348)
!5360 = !DILocation(line: 52, column: 9, scope: !5348)
!5361 = !DILocation(line: 52, column: 15, scope: !5348)
!5362 = !DILocation(line: 52, column: 13, scope: !5348)
!5363 = !DILocation(line: 52, column: 2, scope: !5348)
!5364 = !DILocalVariable(name: "i", scope: !476, file: !477, line: 54, type: !484)
!5365 = !DILocation(line: 54, column: 14, scope: !476)
!5366 = !DILocation(line: 54, column: 28, scope: !476)
!5367 = !DILocation(line: 54, column: 18, scope: !476)
!5368 = !DILocation(line: 54, column: 34, scope: !476)
!5369 = !DILocation(line: 55, column: 24, scope: !476)
!5370 = !DILocation(line: 55, column: 26, scope: !476)
!5371 = !DILocation(line: 55, column: 17, scope: !476)
!5372 = !DILocation(line: 55, column: 5, scope: !476)
!5373 = !DILocation(line: 55, column: 9, scope: !476)
!5374 = !DILocation(line: 55, column: 15, scope: !476)
!5375 = !DILocation(line: 56, column: 28, scope: !476)
!5376 = !DILocation(line: 56, column: 21, scope: !476)
!5377 = !DILocation(line: 56, column: 5, scope: !476)
!5378 = !DILocation(line: 56, column: 9, scope: !476)
!5379 = !DILocation(line: 56, column: 14, scope: !476)
!5380 = !DILocation(line: 56, column: 19, scope: !476)
!5381 = !DILocation(line: 57, column: 28, scope: !476)
!5382 = !DILocation(line: 57, column: 26, scope: !476)
!5383 = !DILocation(line: 57, column: 6, scope: !476)
!5384 = !DILocation(line: 57, column: 17, scope: !476)
!5385 = !DILocation(line: 58, column: 12, scope: !476)
!5386 = !DILocation(line: 58, column: 18, scope: !476)
!5387 = !DILocation(line: 58, column: 16, scope: !476)
!5388 = !DILocation(line: 58, column: 23, scope: !476)
!5389 = !DILocation(line: 58, column: 5, scope: !476)
!5390 = !DILocation(line: 59, column: 1, scope: !476)
!5391 = distinct !DISubprogram(name: "int_to_string", scope: !477, file: !477, line: 62, type: !5392, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !481, retainedNodes: !286)
!5392 = !DISubroutineType(types: !5393)
!5393 = !{!52, !5394, !52, !480}
!5394 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !187, line: 108, baseType: !2965)
!5395 = !DILocalVariable(name: "value", arg: 1, scope: !5391, file: !477, line: 62, type: !5394)
!5396 = !DILocation(line: 62, column: 23, scope: !5391)
!5397 = !DILocalVariable(name: "dst", arg: 2, scope: !5391, file: !477, line: 63, type: !52)
!5398 = !DILocation(line: 63, column: 20, scope: !5391)
!5399 = !DILocalVariable(name: "length_out", arg: 3, scope: !5391, file: !477, line: 64, type: !480)
!5400 = !DILocation(line: 64, column: 23, scope: !5391)
!5401 = !DILocation(line: 66, column: 9, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5391, file: !477, line: 66, column: 9)
!5403 = !DILocation(line: 66, column: 15, scope: !5402)
!5404 = !DILocation(line: 66, column: 9, scope: !5391)
!5405 = !DILocalVariable(name: "p", scope: !5406, file: !477, line: 67, type: !52)
!5406 = distinct !DILexicalBlock(scope: !5402, file: !477, line: 66, column: 20)
!5407 = !DILocation(line: 67, column: 15, scope: !5406)
!5408 = !DILocation(line: 67, column: 44, scope: !5406)
!5409 = !DILocation(line: 67, column: 43, scope: !5406)
!5410 = !DILocation(line: 67, column: 51, scope: !5406)
!5411 = !DILocation(line: 67, column: 56, scope: !5406)
!5412 = !DILocation(line: 24, column: 23, scope: !476, inlinedAt: !5413)
!5413 = distinct !DILocation(line: 67, column: 19, scope: !5406)
!5414 = !DILocation(line: 25, column: 21, scope: !476, inlinedAt: !5413)
!5415 = !DILocation(line: 26, column: 24, scope: !476, inlinedAt: !5413)
!5416 = !DILocation(line: 33, column: 12, scope: !476, inlinedAt: !5413)
!5417 = !DILocation(line: 40, column: 5, scope: !476, inlinedAt: !5413)
!5418 = !DILocation(line: 40, column: 13, scope: !476, inlinedAt: !5413)
!5419 = !DILocation(line: 40, column: 17, scope: !476, inlinedAt: !5413)
!5420 = !DILocation(line: 41, column: 5, scope: !476, inlinedAt: !5413)
!5421 = !DILocation(line: 41, column: 12, scope: !476, inlinedAt: !5413)
!5422 = !DILocation(line: 41, column: 18, scope: !476, inlinedAt: !5413)
!5423 = !DILocation(line: 42, column: 17, scope: !5321, inlinedAt: !5413)
!5424 = !DILocation(line: 42, column: 33, scope: !5321, inlinedAt: !5413)
!5425 = !DILocation(line: 42, column: 39, scope: !5321, inlinedAt: !5413)
!5426 = !DILocation(line: 42, column: 46, scope: !5321, inlinedAt: !5413)
!5427 = !DILocation(line: 42, column: 21, scope: !5321, inlinedAt: !5413)
!5428 = !DILocation(line: 43, column: 8, scope: !5321, inlinedAt: !5413)
!5429 = !DILocation(line: 44, column: 21, scope: !5321, inlinedAt: !5413)
!5430 = !DILocation(line: 44, column: 23, scope: !5321, inlinedAt: !5413)
!5431 = !DILocation(line: 44, column: 14, scope: !5321, inlinedAt: !5413)
!5432 = !DILocation(line: 44, column: 2, scope: !5321, inlinedAt: !5413)
!5433 = !DILocation(line: 44, column: 6, scope: !5321, inlinedAt: !5413)
!5434 = !DILocation(line: 44, column: 12, scope: !5321, inlinedAt: !5413)
!5435 = !DILocation(line: 45, column: 25, scope: !5321, inlinedAt: !5413)
!5436 = !DILocation(line: 45, column: 18, scope: !5321, inlinedAt: !5413)
!5437 = !DILocation(line: 45, column: 2, scope: !5321, inlinedAt: !5413)
!5438 = !DILocation(line: 45, column: 6, scope: !5321, inlinedAt: !5413)
!5439 = !DILocation(line: 45, column: 11, scope: !5321, inlinedAt: !5413)
!5440 = !DILocation(line: 45, column: 16, scope: !5321, inlinedAt: !5413)
!5441 = !DILocation(line: 46, column: 7, scope: !5321, inlinedAt: !5413)
!5442 = distinct !{!5442, !5420, !5443, !3413}
!5443 = !DILocation(line: 47, column: 5, scope: !476, inlinedAt: !5413)
!5444 = !DILocation(line: 49, column: 9, scope: !5344, inlinedAt: !5413)
!5445 = !DILocation(line: 49, column: 15, scope: !5344, inlinedAt: !5413)
!5446 = !DILocation(line: 49, column: 9, scope: !476, inlinedAt: !5413)
!5447 = !DILocation(line: 50, column: 37, scope: !5348, inlinedAt: !5413)
!5448 = !DILocation(line: 50, column: 27, scope: !5348, inlinedAt: !5413)
!5449 = !DILocation(line: 50, column: 25, scope: !5348, inlinedAt: !5413)
!5450 = !DILocation(line: 50, column: 14, scope: !5348, inlinedAt: !5413)
!5451 = !DILocation(line: 50, column: 2, scope: !5348, inlinedAt: !5413)
!5452 = !DILocation(line: 50, column: 6, scope: !5348, inlinedAt: !5413)
!5453 = !DILocation(line: 50, column: 12, scope: !5348, inlinedAt: !5413)
!5454 = !DILocation(line: 51, column: 25, scope: !5348, inlinedAt: !5413)
!5455 = !DILocation(line: 51, column: 23, scope: !5348, inlinedAt: !5413)
!5456 = !DILocation(line: 51, column: 30, scope: !5348, inlinedAt: !5413)
!5457 = !DILocation(line: 51, column: 3, scope: !5348, inlinedAt: !5413)
!5458 = !DILocation(line: 51, column: 14, scope: !5348, inlinedAt: !5413)
!5459 = !DILocation(line: 52, column: 9, scope: !5348, inlinedAt: !5413)
!5460 = !DILocation(line: 52, column: 15, scope: !5348, inlinedAt: !5413)
!5461 = !DILocation(line: 52, column: 13, scope: !5348, inlinedAt: !5413)
!5462 = !DILocation(line: 52, column: 2, scope: !5348, inlinedAt: !5413)
!5463 = !DILocation(line: 54, column: 14, scope: !476, inlinedAt: !5413)
!5464 = !DILocation(line: 54, column: 28, scope: !476, inlinedAt: !5413)
!5465 = !DILocation(line: 54, column: 18, scope: !476, inlinedAt: !5413)
!5466 = !DILocation(line: 54, column: 34, scope: !476, inlinedAt: !5413)
!5467 = !DILocation(line: 55, column: 24, scope: !476, inlinedAt: !5413)
!5468 = !DILocation(line: 55, column: 26, scope: !476, inlinedAt: !5413)
!5469 = !DILocation(line: 55, column: 17, scope: !476, inlinedAt: !5413)
!5470 = !DILocation(line: 55, column: 5, scope: !476, inlinedAt: !5413)
!5471 = !DILocation(line: 55, column: 9, scope: !476, inlinedAt: !5413)
!5472 = !DILocation(line: 55, column: 15, scope: !476, inlinedAt: !5413)
!5473 = !DILocation(line: 56, column: 28, scope: !476, inlinedAt: !5413)
!5474 = !DILocation(line: 56, column: 21, scope: !476, inlinedAt: !5413)
!5475 = !DILocation(line: 56, column: 5, scope: !476, inlinedAt: !5413)
!5476 = !DILocation(line: 56, column: 9, scope: !476, inlinedAt: !5413)
!5477 = !DILocation(line: 56, column: 14, scope: !476, inlinedAt: !5413)
!5478 = !DILocation(line: 56, column: 19, scope: !476, inlinedAt: !5413)
!5479 = !DILocation(line: 57, column: 28, scope: !476, inlinedAt: !5413)
!5480 = !DILocation(line: 57, column: 26, scope: !476, inlinedAt: !5413)
!5481 = !DILocation(line: 57, column: 6, scope: !476, inlinedAt: !5413)
!5482 = !DILocation(line: 57, column: 17, scope: !476, inlinedAt: !5413)
!5483 = !DILocation(line: 58, column: 12, scope: !476, inlinedAt: !5413)
!5484 = !DILocation(line: 58, column: 18, scope: !476, inlinedAt: !5413)
!5485 = !DILocation(line: 58, column: 16, scope: !476, inlinedAt: !5413)
!5486 = !DILocation(line: 58, column: 23, scope: !476, inlinedAt: !5413)
!5487 = !DILocation(line: 58, column: 5, scope: !476, inlinedAt: !5413)
!5488 = !DILocation(line: 59, column: 1, scope: !476, inlinedAt: !5413)
!5489 = !DILocation(line: 68, column: 10, scope: !5406)
!5490 = !DILocation(line: 68, column: 14, scope: !5406)
!5491 = !DILocation(line: 69, column: 12, scope: !5406)
!5492 = !DILocation(line: 69, column: 9, scope: !5406)
!5493 = !DILocation(line: 71, column: 16, scope: !5406)
!5494 = !DILocation(line: 71, column: 9, scope: !5406)
!5495 = !DILocation(line: 74, column: 36, scope: !5391)
!5496 = !DILocation(line: 74, column: 43, scope: !5391)
!5497 = !DILocation(line: 74, column: 48, scope: !5391)
!5498 = !DILocation(line: 24, column: 23, scope: !476, inlinedAt: !5499)
!5499 = distinct !DILocation(line: 74, column: 12, scope: !5391)
!5500 = !DILocation(line: 25, column: 21, scope: !476, inlinedAt: !5499)
!5501 = !DILocation(line: 26, column: 24, scope: !476, inlinedAt: !5499)
!5502 = !DILocation(line: 33, column: 12, scope: !476, inlinedAt: !5499)
!5503 = !DILocation(line: 40, column: 5, scope: !476, inlinedAt: !5499)
!5504 = !DILocation(line: 40, column: 13, scope: !476, inlinedAt: !5499)
!5505 = !DILocation(line: 40, column: 17, scope: !476, inlinedAt: !5499)
!5506 = !DILocation(line: 41, column: 5, scope: !476, inlinedAt: !5499)
!5507 = !DILocation(line: 41, column: 12, scope: !476, inlinedAt: !5499)
!5508 = !DILocation(line: 41, column: 18, scope: !476, inlinedAt: !5499)
!5509 = !DILocation(line: 42, column: 17, scope: !5321, inlinedAt: !5499)
!5510 = !DILocation(line: 42, column: 33, scope: !5321, inlinedAt: !5499)
!5511 = !DILocation(line: 42, column: 39, scope: !5321, inlinedAt: !5499)
!5512 = !DILocation(line: 42, column: 46, scope: !5321, inlinedAt: !5499)
!5513 = !DILocation(line: 42, column: 21, scope: !5321, inlinedAt: !5499)
!5514 = !DILocation(line: 43, column: 8, scope: !5321, inlinedAt: !5499)
!5515 = !DILocation(line: 44, column: 21, scope: !5321, inlinedAt: !5499)
!5516 = !DILocation(line: 44, column: 23, scope: !5321, inlinedAt: !5499)
!5517 = !DILocation(line: 44, column: 14, scope: !5321, inlinedAt: !5499)
!5518 = !DILocation(line: 44, column: 2, scope: !5321, inlinedAt: !5499)
!5519 = !DILocation(line: 44, column: 6, scope: !5321, inlinedAt: !5499)
!5520 = !DILocation(line: 44, column: 12, scope: !5321, inlinedAt: !5499)
!5521 = !DILocation(line: 45, column: 25, scope: !5321, inlinedAt: !5499)
!5522 = !DILocation(line: 45, column: 18, scope: !5321, inlinedAt: !5499)
!5523 = !DILocation(line: 45, column: 2, scope: !5321, inlinedAt: !5499)
!5524 = !DILocation(line: 45, column: 6, scope: !5321, inlinedAt: !5499)
!5525 = !DILocation(line: 45, column: 11, scope: !5321, inlinedAt: !5499)
!5526 = !DILocation(line: 45, column: 16, scope: !5321, inlinedAt: !5499)
!5527 = !DILocation(line: 46, column: 7, scope: !5321, inlinedAt: !5499)
!5528 = distinct !{!5528, !5506, !5529, !3413}
!5529 = !DILocation(line: 47, column: 5, scope: !476, inlinedAt: !5499)
!5530 = !DILocation(line: 49, column: 9, scope: !5344, inlinedAt: !5499)
!5531 = !DILocation(line: 49, column: 15, scope: !5344, inlinedAt: !5499)
!5532 = !DILocation(line: 49, column: 9, scope: !476, inlinedAt: !5499)
!5533 = !DILocation(line: 50, column: 37, scope: !5348, inlinedAt: !5499)
!5534 = !DILocation(line: 50, column: 27, scope: !5348, inlinedAt: !5499)
!5535 = !DILocation(line: 50, column: 25, scope: !5348, inlinedAt: !5499)
!5536 = !DILocation(line: 50, column: 14, scope: !5348, inlinedAt: !5499)
!5537 = !DILocation(line: 50, column: 2, scope: !5348, inlinedAt: !5499)
!5538 = !DILocation(line: 50, column: 6, scope: !5348, inlinedAt: !5499)
!5539 = !DILocation(line: 50, column: 12, scope: !5348, inlinedAt: !5499)
!5540 = !DILocation(line: 51, column: 25, scope: !5348, inlinedAt: !5499)
!5541 = !DILocation(line: 51, column: 23, scope: !5348, inlinedAt: !5499)
!5542 = !DILocation(line: 51, column: 30, scope: !5348, inlinedAt: !5499)
!5543 = !DILocation(line: 51, column: 3, scope: !5348, inlinedAt: !5499)
!5544 = !DILocation(line: 51, column: 14, scope: !5348, inlinedAt: !5499)
!5545 = !DILocation(line: 52, column: 9, scope: !5348, inlinedAt: !5499)
!5546 = !DILocation(line: 52, column: 15, scope: !5348, inlinedAt: !5499)
!5547 = !DILocation(line: 52, column: 13, scope: !5348, inlinedAt: !5499)
!5548 = !DILocation(line: 52, column: 2, scope: !5348, inlinedAt: !5499)
!5549 = !DILocation(line: 54, column: 14, scope: !476, inlinedAt: !5499)
!5550 = !DILocation(line: 54, column: 28, scope: !476, inlinedAt: !5499)
!5551 = !DILocation(line: 54, column: 18, scope: !476, inlinedAt: !5499)
!5552 = !DILocation(line: 54, column: 34, scope: !476, inlinedAt: !5499)
!5553 = !DILocation(line: 55, column: 24, scope: !476, inlinedAt: !5499)
!5554 = !DILocation(line: 55, column: 26, scope: !476, inlinedAt: !5499)
!5555 = !DILocation(line: 55, column: 17, scope: !476, inlinedAt: !5499)
!5556 = !DILocation(line: 55, column: 5, scope: !476, inlinedAt: !5499)
!5557 = !DILocation(line: 55, column: 9, scope: !476, inlinedAt: !5499)
!5558 = !DILocation(line: 55, column: 15, scope: !476, inlinedAt: !5499)
!5559 = !DILocation(line: 56, column: 28, scope: !476, inlinedAt: !5499)
!5560 = !DILocation(line: 56, column: 21, scope: !476, inlinedAt: !5499)
!5561 = !DILocation(line: 56, column: 5, scope: !476, inlinedAt: !5499)
!5562 = !DILocation(line: 56, column: 9, scope: !476, inlinedAt: !5499)
!5563 = !DILocation(line: 56, column: 14, scope: !476, inlinedAt: !5499)
!5564 = !DILocation(line: 56, column: 19, scope: !476, inlinedAt: !5499)
!5565 = !DILocation(line: 57, column: 28, scope: !476, inlinedAt: !5499)
!5566 = !DILocation(line: 57, column: 26, scope: !476, inlinedAt: !5499)
!5567 = !DILocation(line: 57, column: 6, scope: !476, inlinedAt: !5499)
!5568 = !DILocation(line: 57, column: 17, scope: !476, inlinedAt: !5499)
!5569 = !DILocation(line: 58, column: 12, scope: !476, inlinedAt: !5499)
!5570 = !DILocation(line: 58, column: 18, scope: !476, inlinedAt: !5499)
!5571 = !DILocation(line: 58, column: 16, scope: !476, inlinedAt: !5499)
!5572 = !DILocation(line: 58, column: 23, scope: !476, inlinedAt: !5499)
!5573 = !DILocation(line: 58, column: 5, scope: !476, inlinedAt: !5499)
!5574 = !DILocation(line: 59, column: 1, scope: !476, inlinedAt: !5499)
!5575 = !DILocation(line: 74, column: 5, scope: !5391)
!5576 = !DILocation(line: 75, column: 1, scope: !5391)
!5577 = distinct !DISubprogram(name: "list_check_node", scope: !496, file: !496, line: 48, type: !5578, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3266, retainedNodes: !286)
!5578 = !DISubroutineType(types: !5579)
!5579 = !{!3269, !5580, !205}
!5580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5581, size: 64)
!5581 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3270)
!5582 = !DILocalVariable(name: "node", arg: 1, scope: !5577, file: !496, line: 48, type: !5580)
!5583 = !DILocation(line: 48, column: 59, scope: !5577)
!5584 = !DILocalVariable(name: "abortstr", arg: 2, scope: !5577, file: !496, line: 49, type: !205)
!5585 = !DILocation(line: 49, column: 19, scope: !5577)
!5586 = !DILocalVariable(name: "p", scope: !5577, file: !496, line: 51, type: !5580)
!5587 = !DILocation(line: 51, column: 26, scope: !5577)
!5588 = !DILocalVariable(name: "n", scope: !5577, file: !496, line: 51, type: !5580)
!5589 = !DILocation(line: 51, column: 30, scope: !5577)
!5590 = !DILocalVariable(name: "count", scope: !5577, file: !496, line: 52, type: !9)
!5591 = !DILocation(line: 52, column: 15, scope: !5577)
!5592 = !DILocation(line: 54, column: 11, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5577, file: !496, line: 54, column: 2)
!5594 = !DILocation(line: 54, column: 9, scope: !5593)
!5595 = !DILocation(line: 54, column: 21, scope: !5593)
!5596 = !DILocation(line: 54, column: 27, scope: !5593)
!5597 = !DILocation(line: 54, column: 19, scope: !5593)
!5598 = !DILocation(line: 54, column: 7, scope: !5593)
!5599 = !DILocation(line: 54, column: 33, scope: !5600)
!5600 = distinct !DILexicalBlock(scope: !5593, file: !496, line: 54, column: 2)
!5601 = !DILocation(line: 54, column: 38, scope: !5600)
!5602 = !DILocation(line: 54, column: 35, scope: !5600)
!5603 = !DILocation(line: 54, column: 2, scope: !5593)
!5604 = !DILocation(line: 55, column: 8, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5600, file: !496, line: 54, column: 64)
!5606 = !DILocation(line: 56, column: 7, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5605, file: !496, line: 56, column: 7)
!5608 = !DILocation(line: 56, column: 10, scope: !5607)
!5609 = !DILocation(line: 56, column: 18, scope: !5607)
!5610 = !DILocation(line: 56, column: 15, scope: !5607)
!5611 = !DILocation(line: 56, column: 7, scope: !5605)
!5612 = !DILocation(line: 57, column: 19, scope: !5607)
!5613 = !DILocation(line: 57, column: 29, scope: !5607)
!5614 = !DILocation(line: 57, column: 35, scope: !5607)
!5615 = !DILocation(line: 57, column: 38, scope: !5607)
!5616 = !DILocation(line: 57, column: 11, scope: !5607)
!5617 = !DILocation(line: 57, column: 4, scope: !5607)
!5618 = !DILocation(line: 58, column: 2, scope: !5605)
!5619 = !DILocation(line: 54, column: 48, scope: !5600)
!5620 = !DILocation(line: 54, column: 46, scope: !5600)
!5621 = !DILocation(line: 54, column: 55, scope: !5600)
!5622 = !DILocation(line: 54, column: 58, scope: !5600)
!5623 = !DILocation(line: 54, column: 53, scope: !5600)
!5624 = !DILocation(line: 54, column: 2, scope: !5600)
!5625 = distinct !{!5625, !5603, !5626, !3413}
!5626 = !DILocation(line: 58, column: 2, scope: !5593)
!5627 = !DILocation(line: 60, column: 6, scope: !5628)
!5628 = distinct !DILexicalBlock(scope: !5577, file: !496, line: 60, column: 6)
!5629 = !DILocation(line: 60, column: 12, scope: !5628)
!5630 = !DILocation(line: 60, column: 20, scope: !5628)
!5631 = !DILocation(line: 60, column: 17, scope: !5628)
!5632 = !DILocation(line: 60, column: 6, scope: !5577)
!5633 = !DILocation(line: 61, column: 18, scope: !5628)
!5634 = !DILocation(line: 61, column: 28, scope: !5628)
!5635 = !DILocation(line: 61, column: 34, scope: !5628)
!5636 = !DILocation(line: 61, column: 10, scope: !5628)
!5637 = !DILocation(line: 61, column: 3, scope: !5628)
!5638 = !DILocation(line: 63, column: 29, scope: !5577)
!5639 = !DILocation(line: 63, column: 2, scope: !5577)
!5640 = !DILocation(line: 64, column: 1, scope: !5577)
!5641 = distinct !DISubprogram(name: "corrupt", scope: !496, file: !496, line: 34, type: !5642, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3266, retainedNodes: !286)
!5642 = !DISubroutineType(types: !5643)
!5643 = !{!111, !205, !5580, !5580, !9}
!5644 = !DILocalVariable(name: "abortstr", arg: 1, scope: !5641, file: !496, line: 34, type: !205)
!5645 = !DILocation(line: 34, column: 34, scope: !5641)
!5646 = !DILocalVariable(name: "head", arg: 2, scope: !5641, file: !496, line: 35, type: !5580)
!5647 = !DILocation(line: 35, column: 32, scope: !5641)
!5648 = !DILocalVariable(name: "node", arg: 3, scope: !5641, file: !496, line: 36, type: !5580)
!5649 = !DILocation(line: 36, column: 32, scope: !5641)
!5650 = !DILocalVariable(name: "count", arg: 4, scope: !5641, file: !496, line: 37, type: !9)
!5651 = !DILocation(line: 37, column: 21, scope: !5641)
!5652 = !DILocation(line: 39, column: 6, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5641, file: !496, line: 39, column: 6)
!5654 = !DILocation(line: 39, column: 6, scope: !5641)
!5655 = !DILocation(line: 40, column: 11, scope: !5656)
!5656 = distinct !DILexicalBlock(scope: !5653, file: !496, line: 39, column: 16)
!5657 = !DILocation(line: 42, column: 4, scope: !5656)
!5658 = !DILocation(line: 42, column: 14, scope: !5656)
!5659 = !DILocation(line: 42, column: 20, scope: !5656)
!5660 = !DILocation(line: 42, column: 27, scope: !5656)
!5661 = !DILocation(line: 40, column: 3, scope: !5656)
!5662 = !DILocation(line: 43, column: 3, scope: !5656)
!5663 = !DILocation(line: 45, column: 2, scope: !5641)
!5664 = distinct !DISubprogram(name: "list_check", scope: !496, file: !496, line: 66, type: !5665, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3266, retainedNodes: !286)
!5665 = !DISubroutineType(types: !5666)
!5666 = !{!3274, !5667, !205}
!5667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5668, size: 64)
!5668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3275)
!5669 = !DILocalVariable(name: "h", arg: 1, scope: !5664, file: !496, line: 66, type: !5667)
!5670 = !DILocation(line: 66, column: 54, scope: !5664)
!5671 = !DILocalVariable(name: "abortstr", arg: 2, scope: !5664, file: !496, line: 66, type: !205)
!5672 = !DILocation(line: 66, column: 69, scope: !5664)
!5673 = !DILocation(line: 68, column: 24, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5664, file: !496, line: 68, column: 6)
!5675 = !DILocation(line: 68, column: 27, scope: !5674)
!5676 = !DILocation(line: 68, column: 30, scope: !5674)
!5677 = !DILocation(line: 68, column: 7, scope: !5674)
!5678 = !DILocation(line: 68, column: 6, scope: !5664)
!5679 = !DILocation(line: 69, column: 3, scope: !5674)
!5680 = !DILocation(line: 70, column: 29, scope: !5664)
!5681 = !DILocation(line: 70, column: 2, scope: !5664)
!5682 = !DILocation(line: 71, column: 1, scope: !5664)
!5683 = distinct !DISubprogram(name: "cache_create", scope: !502, file: !502, line: 97, type: !5684, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3279, retainedNodes: !286)
!5684 = !DISubroutineType(types: !5685)
!5685 = !{!5686, !5728, !5741, !111, !151}
!5686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5687, size: 64)
!5687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cache_t", file: !502, line: 44, size: 1536, elements: !5688)
!5688 = !{!5689, !5716, !5724, !5746, !5754, !5755}
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !5687, file: !502, line: 48, baseType: !5690, size: 512)
!5690 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5687, file: !502, line: 45, size: 512, elements: !5691)
!5691 = !{!5692, !5693}
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !5690, file: !502, line: 46, baseType: !127, size: 64)
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5690, file: !502, line: 47, baseType: !5694, size: 448, offset: 64)
!5694 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_rwlock_t", file: !163, line: 91, baseType: !5695)
!5695 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !163, line: 86, size: 448, elements: !5696)
!5696 = !{!5697, !5714, !5715}
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "__data", scope: !5695, file: !163, line: 88, baseType: !5698, size: 448)
!5698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_rwlock_arch_t", file: !5699, line: 23, size: 448, elements: !5700)
!5699 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h", directory: "", checksumkind: CSK_MD5, checksum: "2034038f4a99ff6cb7b9de3a3e8c2a8e")
!5700 = !{!5701, !5702, !5703, !5704, !5705, !5706, !5707, !5708, !5709, !5710, !5712, !5713}
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "__readers", scope: !5698, file: !5699, line: 25, baseType: !9, size: 32)
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "__writers", scope: !5698, file: !5699, line: 26, baseType: !9, size: 32, offset: 32)
!5703 = !DIDerivedType(tag: DW_TAG_member, name: "__wrphase_futex", scope: !5698, file: !5699, line: 27, baseType: !9, size: 32, offset: 64)
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "__writers_futex", scope: !5698, file: !5699, line: 28, baseType: !9, size: 32, offset: 96)
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !5698, file: !5699, line: 29, baseType: !9, size: 32, offset: 128)
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !5698, file: !5699, line: 30, baseType: !9, size: 32, offset: 160)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "__cur_writer", scope: !5698, file: !5699, line: 32, baseType: !34, size: 32, offset: 192)
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "__shared", scope: !5698, file: !5699, line: 33, baseType: !34, size: 32, offset: 224)
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "__rwelision", scope: !5698, file: !5699, line: 34, baseType: !4303, size: 8, offset: 256)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !5698, file: !5699, line: 39, baseType: !5711, size: 56, offset: 264)
!5711 = !DICompositeType(tag: DW_TAG_array_type, baseType: !432, size: 56, elements: !324)
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !5698, file: !5699, line: 42, baseType: !57, size: 64, offset: 320)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "__flags", scope: !5698, file: !5699, line: 45, baseType: !9, size: 32, offset: 384)
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !5695, file: !163, line: 89, baseType: !2822, size: 448)
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !5695, file: !163, line: 90, baseType: !155, size: 64)
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !5687, file: !502, line: 53, baseType: !5717, size: 576, offset: 512)
!5717 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5687, file: !502, line: 50, size: 576, elements: !5718)
!5718 = !{!5719, !5723}
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5717, file: !502, line: 51, baseType: !5720, size: 128)
!5720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !659, line: 208, size: 128, elements: !5721)
!5721 = !{!5722}
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !5720, file: !659, line: 210, baseType: !3292, size: 128)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5717, file: !502, line: 52, baseType: !5694, size: 448, offset: 128)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !5687, file: !502, line: 59, baseType: !5725, size: 192, offset: 1088)
!5725 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5687, file: !502, line: 55, size: 192, elements: !5726)
!5726 = !{!5727, !5740, !5745}
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "create_entry", scope: !5725, file: !502, line: 56, baseType: !5728, size: 64)
!5728 = !DIDerivedType(tag: DW_TAG_typedef, name: "CreateEntryCallback", file: !655, line: 35, baseType: !5729)
!5729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5730, size: 64)
!5730 = !DISubroutineType(types: !5731)
!5731 = !{!5732, !205, !111}
!5732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5733, size: 64)
!5733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cache_entry_t", file: !655, line: 27, size: 320, elements: !5734)
!5734 = !{!5735, !5736, !5737, !5738, !5739}
!5735 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !5733, file: !655, line: 28, baseType: !3292, size: 128)
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !5733, file: !655, line: 29, baseType: !52, size: 64, offset: 128)
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !5733, file: !655, line: 30, baseType: !9, size: 32, offset: 192)
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5733, file: !655, line: 31, baseType: !9, size: 32, offset: 224)
!5739 = !DIDerivedType(tag: DW_TAG_member, name: "time_to_die", scope: !5733, file: !655, line: 32, baseType: !151, size: 64, offset: 256)
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_entry", scope: !5725, file: !502, line: 57, baseType: !5741, size: 64, offset: 64)
!5741 = !DIDerivedType(tag: DW_TAG_typedef, name: "DestroyEntryCallback", file: !655, line: 37, baseType: !5742)
!5742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5743, size: 64)
!5743 = !DISubroutineType(types: !5744)
!5744 = !{null, !5732, !111}
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !5725, file: !502, line: 58, baseType: !111, size: 64, offset: 128)
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !5687, file: !502, line: 64, baseType: !5747, size: 128, offset: 1280)
!5747 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5687, file: !502, line: 61, size: 128, elements: !5748)
!5748 = !{!5749, !5750}
!5749 = !DIDerivedType(tag: DW_TAG_member, name: "time_to_live", scope: !5747, file: !502, line: 62, baseType: !151, size: 64)
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "clock_id", scope: !5747, file: !502, line: 63, baseType: !5751, size: 32, offset: 64)
!5751 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !5752, line: 7, baseType: !5753)
!5752 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/clockid_t.h", directory: "", checksumkind: CSK_MD5, checksum: "099a80153c2ad48bc7f5f4a188cb6d24")
!5753 = !DIDerivedType(tag: DW_TAG_typedef, name: "__clockid_t", file: !154, line: 169, baseType: !34)
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5687, file: !502, line: 66, baseType: !9, size: 32, offset: 1408)
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !5687, file: !502, line: 73, baseType: !5756, size: 96, offset: 1440)
!5756 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5687, file: !502, line: 69, size: 96, elements: !5757)
!5757 = !{!5758, !5759, !5760}
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "hits", scope: !5756, file: !502, line: 70, baseType: !9, size: 32)
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "misses", scope: !5756, file: !502, line: 71, baseType: !9, size: 32, offset: 32)
!5760 = !DIDerivedType(tag: DW_TAG_member, name: "evicted", scope: !5756, file: !502, line: 72, baseType: !9, size: 32, offset: 64)
!5761 = !DILocalVariable(name: "create_entry_cb", arg: 1, scope: !5683, file: !502, line: 97, type: !5728)
!5762 = !DILocation(line: 97, column: 50, scope: !5683)
!5763 = !DILocalVariable(name: "destroy_entry_cb", arg: 2, scope: !5683, file: !502, line: 98, type: !5741)
!5764 = !DILocation(line: 98, column: 51, scope: !5683)
!5765 = !DILocalVariable(name: "cb_context", arg: 3, scope: !5683, file: !502, line: 99, type: !111)
!5766 = !DILocation(line: 99, column: 36, scope: !5683)
!5767 = !DILocalVariable(name: "time_to_live", arg: 4, scope: !5683, file: !502, line: 100, type: !151)
!5768 = !DILocation(line: 100, column: 37, scope: !5683)
!5769 = !DILocalVariable(name: "cache", scope: !5683, file: !502, line: 102, type: !5686)
!5770 = !DILocation(line: 102, column: 21, scope: !5683)
!5771 = !DILocation(line: 104, column: 5, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5773, file: !502, line: 104, column: 5)
!5773 = distinct !DILexicalBlock(scope: !5683, file: !502, line: 104, column: 5)
!5774 = !DILocation(line: 104, column: 5, scope: !5773)
!5775 = !DILocation(line: 105, column: 5, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5777, file: !502, line: 105, column: 5)
!5777 = distinct !DILexicalBlock(scope: !5683, file: !502, line: 105, column: 5)
!5778 = !DILocation(line: 105, column: 5, scope: !5777)
!5779 = !DILocation(line: 106, column: 5, scope: !5780)
!5780 = distinct !DILexicalBlock(scope: !5781, file: !502, line: 106, column: 5)
!5781 = distinct !DILexicalBlock(scope: !5683, file: !502, line: 106, column: 5)
!5782 = !DILocation(line: 106, column: 5, scope: !5781)
!5783 = !DILocation(line: 108, column: 13, scope: !5683)
!5784 = !DILocation(line: 108, column: 11, scope: !5683)
!5785 = !DILocation(line: 109, column: 10, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5683, file: !502, line: 109, column: 9)
!5787 = !DILocation(line: 109, column: 9, scope: !5683)
!5788 = !DILocation(line: 110, column: 9, scope: !5786)
!5789 = !DILocation(line: 112, column: 25, scope: !5683)
!5790 = !DILocation(line: 112, column: 5, scope: !5683)
!5791 = !DILocation(line: 112, column: 12, scope: !5683)
!5792 = !DILocation(line: 112, column: 17, scope: !5683)
!5793 = !DILocation(line: 112, column: 23, scope: !5683)
!5794 = !DILocation(line: 113, column: 10, scope: !5795)
!5795 = distinct !DILexicalBlock(scope: !5683, file: !502, line: 113, column: 9)
!5796 = !DILocation(line: 113, column: 17, scope: !5795)
!5797 = !DILocation(line: 113, column: 22, scope: !5795)
!5798 = !DILocation(line: 113, column: 9, scope: !5683)
!5799 = !DILocation(line: 114, column: 9, scope: !5795)
!5800 = !DILocation(line: 116, column: 30, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5683, file: !502, line: 116, column: 9)
!5802 = !DILocation(line: 116, column: 37, scope: !5801)
!5803 = !DILocation(line: 116, column: 42, scope: !5801)
!5804 = !DILocation(line: 116, column: 9, scope: !5801)
!5805 = !DILocation(line: 116, column: 9, scope: !5683)
!5806 = !DILocation(line: 117, column: 9, scope: !5801)
!5807 = !DILocation(line: 118, column: 30, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5683, file: !502, line: 118, column: 9)
!5809 = !DILocation(line: 118, column: 37, scope: !5808)
!5810 = !DILocation(line: 118, column: 43, scope: !5808)
!5811 = !DILocation(line: 118, column: 9, scope: !5808)
!5812 = !DILocation(line: 118, column: 9, scope: !5683)
!5813 = !DILocation(line: 119, column: 9, scope: !5808)
!5814 = !DILocation(line: 121, column: 30, scope: !5683)
!5815 = !DILocation(line: 121, column: 5, scope: !5683)
!5816 = !DILocation(line: 121, column: 12, scope: !5683)
!5817 = !DILocation(line: 121, column: 15, scope: !5683)
!5818 = !DILocation(line: 121, column: 28, scope: !5683)
!5819 = !DILocation(line: 122, column: 31, scope: !5683)
!5820 = !DILocation(line: 122, column: 5, scope: !5683)
!5821 = !DILocation(line: 122, column: 12, scope: !5683)
!5822 = !DILocation(line: 122, column: 15, scope: !5683)
!5823 = !DILocation(line: 122, column: 29, scope: !5683)
!5824 = !DILocation(line: 123, column: 25, scope: !5683)
!5825 = !DILocation(line: 123, column: 5, scope: !5683)
!5826 = !DILocation(line: 123, column: 12, scope: !5683)
!5827 = !DILocation(line: 123, column: 15, scope: !5683)
!5828 = !DILocation(line: 123, column: 23, scope: !5683)
!5829 = !DILocation(line: 125, column: 32, scope: !5683)
!5830 = !DILocation(line: 125, column: 5, scope: !5683)
!5831 = !DILocation(line: 125, column: 12, scope: !5683)
!5832 = !DILocation(line: 125, column: 21, scope: !5683)
!5833 = !DILocation(line: 125, column: 30, scope: !5683)
!5834 = !DILocation(line: 126, column: 36, scope: !5683)
!5835 = !DILocation(line: 126, column: 5, scope: !5683)
!5836 = !DILocation(line: 126, column: 12, scope: !5683)
!5837 = !DILocation(line: 126, column: 21, scope: !5683)
!5838 = !DILocation(line: 126, column: 34, scope: !5683)
!5839 = !DILocation(line: 128, column: 21, scope: !5683)
!5840 = !DILocation(line: 128, column: 28, scope: !5683)
!5841 = !DILocation(line: 128, column: 34, scope: !5683)
!5842 = !DILocation(line: 128, column: 5, scope: !5683)
!5843 = !DILocation(line: 130, column: 36, scope: !5683)
!5844 = !DILocation(line: 130, column: 5, scope: !5683)
!5845 = !DILocation(line: 132, column: 12, scope: !5683)
!5846 = !DILocation(line: 132, column: 5, scope: !5683)
!5847 = !DILabel(scope: !5683, name: "error_no_queue_lock", file: !502, line: 134)
!5848 = !DILocation(line: 134, column: 1, scope: !5683)
!5849 = !DILocation(line: 135, column: 29, scope: !5683)
!5850 = !DILocation(line: 135, column: 36, scope: !5683)
!5851 = !DILocation(line: 135, column: 41, scope: !5683)
!5852 = !DILocation(line: 135, column: 5, scope: !5683)
!5853 = !DILabel(scope: !5683, name: "error_no_hash_lock", file: !502, line: 136)
!5854 = !DILocation(line: 136, column: 1, scope: !5683)
!5855 = !DILocation(line: 137, column: 15, scope: !5683)
!5856 = !DILocation(line: 137, column: 22, scope: !5683)
!5857 = !DILocation(line: 137, column: 27, scope: !5683)
!5858 = !DILocation(line: 137, column: 5, scope: !5683)
!5859 = !DILabel(scope: !5683, name: "error_no_hash", file: !502, line: 138)
!5860 = !DILocation(line: 138, column: 1, scope: !5683)
!5861 = !DILocation(line: 139, column: 10, scope: !5683)
!5862 = !DILocation(line: 139, column: 5, scope: !5683)
!5863 = !DILocation(line: 141, column: 5, scope: !5683)
!5864 = !DILocation(line: 142, column: 1, scope: !5683)
!5865 = distinct !DISubprogram(name: "detect_fastest_monotonic_clock", scope: !502, file: !502, line: 79, type: !5866, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3279, retainedNodes: !286)
!5866 = !DISubroutineType(types: !5867)
!5867 = !{!5751}
!5868 = !DILocalVariable(name: "ts", scope: !5865, file: !502, line: 82, type: !5869)
!5869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2417, line: 11, size: 128, elements: !5870)
!5870 = !{!5871, !5872}
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !5869, file: !2417, line: 16, baseType: !153, size: 64)
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !5869, file: !2417, line: 21, baseType: !2421, size: 64, offset: 64)
!5873 = !DILocation(line: 82, column: 21, scope: !5865)
!5874 = !DILocation(line: 84, column: 10, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5865, file: !502, line: 84, column: 9)
!5876 = !DILocation(line: 84, column: 9, scope: !5865)
!5877 = !DILocation(line: 85, column: 9, scope: !5875)
!5878 = !DILocation(line: 87, column: 5, scope: !5865)
!5879 = !DILocation(line: 88, column: 1, scope: !5865)
!5880 = distinct !DISubprogram(name: "list_head_init", scope: !659, file: !659, line: 309, type: !5881, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3279, retainedNodes: !286)
!5881 = !DISubroutineType(types: !5882)
!5882 = !{null, !5883}
!5883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5720, size: 64)
!5884 = !DILocalVariable(name: "h", arg: 1, scope: !5880, file: !659, line: 309, type: !5883)
!5885 = !DILocation(line: 309, column: 53, scope: !5880)
!5886 = !DILocation(line: 311, column: 27, scope: !5880)
!5887 = !DILocation(line: 311, column: 30, scope: !5880)
!5888 = !DILocation(line: 311, column: 14, scope: !5880)
!5889 = !DILocation(line: 311, column: 17, scope: !5880)
!5890 = !DILocation(line: 311, column: 19, scope: !5880)
!5891 = !DILocation(line: 311, column: 24, scope: !5880)
!5892 = !DILocation(line: 311, column: 2, scope: !5880)
!5893 = !DILocation(line: 311, column: 5, scope: !5880)
!5894 = !DILocation(line: 311, column: 7, scope: !5880)
!5895 = !DILocation(line: 311, column: 12, scope: !5880)
!5896 = !DILocation(line: 312, column: 1, scope: !5880)
!5897 = distinct !DISubprogram(name: "cache_pruner_job", scope: !502, file: !502, line: 272, type: !2140, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3279, retainedNodes: !286)
!5898 = !DILocalVariable(name: "data", arg: 1, scope: !5897, file: !502, line: 272, type: !111)
!5899 = !DILocation(line: 272, column: 36, scope: !5897)
!5900 = !DILocalVariable(name: "cache", scope: !5897, file: !502, line: 274, type: !5686)
!5901 = !DILocation(line: 274, column: 21, scope: !5897)
!5902 = !DILocation(line: 274, column: 29, scope: !5897)
!5903 = !DILocalVariable(name: "node", scope: !5897, file: !502, line: 275, type: !5732)
!5904 = !DILocation(line: 275, column: 27, scope: !5897)
!5905 = !DILocalVariable(name: "next", scope: !5897, file: !502, line: 275, type: !5732)
!5906 = !DILocation(line: 275, column: 34, scope: !5897)
!5907 = !DILocalVariable(name: "now", scope: !5897, file: !502, line: 276, type: !5869)
!5908 = !DILocation(line: 276, column: 21, scope: !5897)
!5909 = !DILocalVariable(name: "shutting_down", scope: !5897, file: !502, line: 277, type: !137)
!5910 = !DILocation(line: 277, column: 10, scope: !5897)
!5911 = !DILocation(line: 277, column: 26, scope: !5897)
!5912 = !DILocation(line: 277, column: 33, scope: !5897)
!5913 = !DILocation(line: 277, column: 39, scope: !5897)
!5914 = !DILocalVariable(name: "evicted", scope: !5897, file: !502, line: 278, type: !9)
!5915 = !DILocation(line: 278, column: 14, scope: !5897)
!5916 = !DILocalVariable(name: "queue", scope: !5897, file: !502, line: 279, type: !5720)
!5917 = !DILocation(line: 279, column: 22, scope: !5897)
!5918 = !DILocation(line: 281, column: 9, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5897, file: !502, line: 281, column: 9)
!5920 = !DILocation(line: 281, column: 9, scope: !5897)
!5921 = !DILocation(line: 282, column: 9, scope: !5919)
!5922 = !DILocation(line: 285, column: 21, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5897, file: !502, line: 285, column: 9)
!5924 = !DILocation(line: 285, column: 28, scope: !5923)
!5925 = !DILocation(line: 285, column: 34, scope: !5923)
!5926 = !DILocation(line: 285, column: 9, scope: !5923)
!5927 = !DILocation(line: 285, column: 9, scope: !5897)
!5928 = !DILocation(line: 286, column: 13, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5930, file: !502, line: 286, column: 13)
!5930 = distinct !DILexicalBlock(scope: !5923, file: !502, line: 285, column: 41)
!5931 = !DILocation(line: 286, column: 13, scope: !5930)
!5932 = !DILocation(line: 287, column: 13, scope: !5929)
!5933 = !DILocation(line: 288, column: 9, scope: !5930)
!5934 = !DILocation(line: 293, column: 5, scope: !5897)
!5935 = !DILocation(line: 294, column: 31, scope: !5897)
!5936 = !DILocation(line: 294, column: 38, scope: !5897)
!5937 = !DILocation(line: 294, column: 44, scope: !5897)
!5938 = !DILocation(line: 294, column: 5, scope: !5897)
!5939 = !DILocation(line: 295, column: 21, scope: !5897)
!5940 = !DILocation(line: 295, column: 28, scope: !5897)
!5941 = !DILocation(line: 295, column: 34, scope: !5897)
!5942 = !DILocation(line: 295, column: 5, scope: !5897)
!5943 = !DILocation(line: 297, column: 9, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5897, file: !502, line: 297, column: 9)
!5945 = !DILocation(line: 297, column: 9, scope: !5897)
!5946 = !DILocation(line: 298, column: 9, scope: !5947)
!5947 = distinct !DILexicalBlock(scope: !5944, file: !502, line: 297, column: 62)
!5948 = !DILocation(line: 299, column: 9, scope: !5947)
!5949 = !DILocation(line: 302, column: 29, scope: !5897)
!5950 = !DILocalVariable(name: "cache", arg: 1, scope: !5951, file: !502, line: 90, type: !5686)
!5951 = distinct !DISubprogram(name: "clock_monotonic_gettime", scope: !502, file: !502, line: 90, type: !5952, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3279, retainedNodes: !286)
!5952 = !DISubroutineType(types: !5953)
!5953 = !{null, !5686, !5954}
!5954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5869, size: 64)
!5955 = !DILocation(line: 90, column: 67, scope: !5951, inlinedAt: !5956)
!5956 = distinct !DILocation(line: 302, column: 5, scope: !5897)
!5957 = !DILocalVariable(name: "ts", arg: 2, scope: !5951, file: !502, line: 91, type: !5954)
!5958 = !DILocation(line: 91, column: 22, scope: !5951, inlinedAt: !5956)
!5959 = !DILocation(line: 93, column: 9, scope: !5960, inlinedAt: !5956)
!5960 = distinct !DILexicalBlock(scope: !5951, file: !502, line: 93, column: 9)
!5961 = !DILocation(line: 93, column: 9, scope: !5951, inlinedAt: !5956)
!5962 = !DILocation(line: 94, column: 9, scope: !5960, inlinedAt: !5956)
!5963 = !DILocation(line: 303, column: 5, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !5897, file: !502, line: 303, column: 5)
!5965 = !DILocation(line: 303, column: 5, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !5964, file: !502, line: 303, column: 5)
!5967 = !DILocalVariable(name: "key", scope: !5968, file: !502, line: 304, type: !52)
!5968 = distinct !DILexicalBlock(scope: !5966, file: !502, line: 303, column: 53)
!5969 = !DILocation(line: 304, column: 15, scope: !5968)
!5970 = !DILocation(line: 304, column: 21, scope: !5968)
!5971 = !DILocation(line: 304, column: 27, scope: !5968)
!5972 = !DILocation(line: 306, column: 17, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5968, file: !502, line: 306, column: 13)
!5974 = !DILocation(line: 306, column: 26, scope: !5973)
!5975 = !DILocation(line: 306, column: 32, scope: !5973)
!5976 = !DILocation(line: 306, column: 24, scope: !5973)
!5977 = !DILocation(line: 306, column: 44, scope: !5973)
!5978 = !DILocation(line: 306, column: 47, scope: !5973)
!5979 = !DILocation(line: 306, column: 13, scope: !5968)
!5980 = !DILocation(line: 307, column: 13, scope: !5973)
!5981 = !DILocation(line: 309, column: 19, scope: !5968)
!5982 = !DILocation(line: 309, column: 25, scope: !5968)
!5983 = !DILocation(line: 309, column: 9, scope: !5968)
!5984 = !DILocation(line: 311, column: 13, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5968, file: !502, line: 311, column: 13)
!5986 = !DILocation(line: 311, column: 13, scope: !5968)
!5987 = !DILocation(line: 312, column: 13, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5985, file: !502, line: 311, column: 65)
!5989 = !DILocation(line: 313, column: 13, scope: !5988)
!5990 = !DILocation(line: 316, column: 18, scope: !5968)
!5991 = !DILocation(line: 316, column: 25, scope: !5968)
!5992 = !DILocation(line: 316, column: 30, scope: !5968)
!5993 = !DILocation(line: 316, column: 37, scope: !5968)
!5994 = !DILocation(line: 316, column: 9, scope: !5968)
!5995 = !DILocation(line: 318, column: 13, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5968, file: !502, line: 318, column: 13)
!5997 = !DILocation(line: 318, column: 13, scope: !5968)
!5998 = !DILocation(line: 319, column: 13, scope: !5996)
!5999 = !DILocation(line: 321, column: 13, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5968, file: !502, line: 321, column: 13)
!6001 = !DILocation(line: 321, column: 36, scope: !6000)
!6002 = !DILocation(line: 321, column: 13, scope: !5968)
!6003 = !DILocation(line: 322, column: 13, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !6000, file: !502, line: 321, column: 42)
!6005 = !DILocation(line: 322, column: 20, scope: !6004)
!6006 = !DILocation(line: 322, column: 23, scope: !6004)
!6007 = !DILocation(line: 322, column: 37, scope: !6004)
!6008 = !DILocation(line: 322, column: 43, scope: !6004)
!6009 = !DILocation(line: 322, column: 50, scope: !6004)
!6010 = !DILocation(line: 322, column: 53, scope: !6004)
!6011 = !DILocation(line: 323, column: 9, scope: !6004)
!6012 = !DILocation(line: 324, column: 13, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !6000, file: !502, line: 323, column: 16)
!6014 = !DILocation(line: 327, column: 18, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !6013, file: !502, line: 327, column: 17)
!6016 = !DILocation(line: 327, column: 17, scope: !6013)
!6017 = !DILocation(line: 328, column: 17, scope: !6015)
!6018 = !DILocation(line: 328, column: 24, scope: !6015)
!6019 = !DILocation(line: 328, column: 27, scope: !6015)
!6020 = !DILocation(line: 328, column: 41, scope: !6015)
!6021 = !DILocation(line: 328, column: 47, scope: !6015)
!6022 = !DILocation(line: 328, column: 54, scope: !6015)
!6023 = !DILocation(line: 328, column: 57, scope: !6015)
!6024 = !DILocation(line: 331, column: 16, scope: !5968)
!6025 = !DILocation(line: 332, column: 5, scope: !5968)
!6026 = distinct !{!6026, !5963, !6027, !3413}
!6027 = !DILocation(line: 332, column: 5, scope: !5964)
!6028 = !DILocation(line: 337, column: 9, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !5897, file: !502, line: 337, column: 9)
!6030 = !DILocation(line: 337, column: 9, scope: !5897)
!6031 = !DILocation(line: 338, column: 9, scope: !6029)
!6032 = !DILocation(line: 342, column: 9, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !5897, file: !502, line: 342, column: 9)
!6034 = !DILocation(line: 342, column: 9, scope: !5897)
!6035 = !DILocation(line: 343, column: 28, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !6033, file: !502, line: 342, column: 61)
!6037 = !DILocation(line: 343, column: 35, scope: !6036)
!6038 = !DILocation(line: 343, column: 41, scope: !6036)
!6039 = !DILocation(line: 343, column: 9, scope: !6036)
!6040 = !DILocation(line: 344, column: 32, scope: !6036)
!6041 = !DILocation(line: 344, column: 39, scope: !6036)
!6042 = !DILocation(line: 344, column: 45, scope: !6036)
!6043 = !DILocation(line: 344, column: 9, scope: !6036)
!6044 = !DILocation(line: 345, column: 5, scope: !6036)
!6045 = !DILocation(line: 346, column: 9, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !6033, file: !502, line: 345, column: 12)
!6047 = !DILabel(scope: !5897, name: "end", file: !502, line: 349)
!6048 = !DILocation(line: 349, column: 1, scope: !5897)
!6049 = !DILocation(line: 351, column: 5, scope: !5897)
!6050 = !DILocation(line: 353, column: 12, scope: !5897)
!6051 = !DILocation(line: 353, column: 5, scope: !5897)
!6052 = !DILocation(line: 354, column: 1, scope: !5897)
!6053 = distinct !DISubprogram(name: "lwan_job_add", scope: !867, file: !867, line: 113, type: !6054, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !856, retainedNodes: !286)
!6054 = !DISubroutineType(types: !6055)
!6055 = !{null, !2139, !111}
!6056 = !DILocalVariable(name: "cb", arg: 1, scope: !6053, file: !867, line: 113, type: !2139)
!6057 = !DILocation(line: 113, column: 26, scope: !6053)
!6058 = !DILocalVariable(name: "data", arg: 2, scope: !6053, file: !867, line: 113, type: !111)
!6059 = !DILocation(line: 113, column: 49, scope: !6053)
!6060 = !DILocation(line: 115, column: 5, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6062, file: !867, line: 115, column: 5)
!6062 = distinct !DILexicalBlock(scope: !6053, file: !867, line: 115, column: 5)
!6063 = !DILocation(line: 115, column: 5, scope: !6062)
!6064 = !DILocalVariable(name: "job", scope: !6053, file: !867, line: 117, type: !6065)
!6065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6066, size: 64)
!6066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "job_t", file: !867, line: 33, size: 256, elements: !6067)
!6067 = !{!6068, !6069, !6070}
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "jobs", scope: !6066, file: !867, line: 34, baseType: !860, size: 128)
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !6066, file: !867, line: 35, baseType: !2139, size: 64, offset: 128)
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6066, file: !867, line: 36, baseType: !111, size: 64, offset: 192)
!6071 = !DILocation(line: 117, column: 19, scope: !6053)
!6072 = !DILocation(line: 117, column: 25, scope: !6053)
!6073 = !DILocation(line: 118, column: 10, scope: !6074)
!6074 = distinct !DILexicalBlock(scope: !6053, file: !867, line: 118, column: 9)
!6075 = !DILocation(line: 118, column: 9, scope: !6053)
!6076 = !DILocation(line: 119, column: 9, scope: !6074)
!6077 = !DILocation(line: 121, column: 15, scope: !6053)
!6078 = !DILocation(line: 121, column: 5, scope: !6053)
!6079 = !DILocation(line: 121, column: 10, scope: !6053)
!6080 = !DILocation(line: 121, column: 13, scope: !6053)
!6081 = !DILocation(line: 122, column: 17, scope: !6053)
!6082 = !DILocation(line: 122, column: 5, scope: !6053)
!6083 = !DILocation(line: 122, column: 10, scope: !6053)
!6084 = !DILocation(line: 122, column: 15, scope: !6053)
!6085 = !DILocation(line: 124, column: 9, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !6053, file: !867, line: 124, column: 9)
!6087 = !DILocation(line: 124, column: 9, scope: !6053)
!6088 = !DILocation(line: 125, column: 26, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6086, file: !867, line: 124, column: 52)
!6090 = !DILocation(line: 125, column: 31, scope: !6089)
!6091 = !DILocation(line: 125, column: 9, scope: !6089)
!6092 = !DILocation(line: 126, column: 9, scope: !6089)
!6093 = !DILocation(line: 127, column: 5, scope: !6089)
!6094 = !DILocation(line: 128, column: 9, scope: !6095)
!6095 = distinct !DILexicalBlock(scope: !6086, file: !867, line: 127, column: 12)
!6096 = !DILocation(line: 129, column: 14, scope: !6095)
!6097 = !DILocation(line: 129, column: 9, scope: !6095)
!6098 = !DILocation(line: 131, column: 1, scope: !6053)
!6099 = distinct !DISubprogram(name: "lwan_status_critical_perror_debug", scope: !2636, file: !2636, line: 197, type: !6100, scopeLine: 197, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2632, retainedNodes: !286)
!6100 = !DISubroutineType(types: !6101)
!6101 = !{null, !205, !3317, !205, !205, null}
!6102 = !DILocalVariable(name: "file", arg: 1, scope: !6099, file: !2636, line: 197, type: !205)
!6103 = !DILocation(line: 197, column: 1, scope: !6099)
!6104 = !DILocalVariable(name: "line", arg: 2, scope: !6099, file: !2636, line: 197, type: !3317)
!6105 = !DILocalVariable(name: "func", arg: 3, scope: !6099, file: !2636, line: 197, type: !205)
!6106 = !DILocalVariable(name: "fmt", arg: 4, scope: !6099, file: !2636, line: 197, type: !205)
!6107 = !DILocation(line: 197, column: 1, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !6099, file: !2636, line: 197, column: 1)
!6109 = !DILocalVariable(name: "values", scope: !6110, file: !2636, line: 197, type: !6111)
!6110 = distinct !DILexicalBlock(scope: !6108, file: !2636, line: 197, column: 1)
!6111 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2964, line: 52, baseType: !6112)
!6112 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !6113, line: 14, baseType: !6114)
!6113 = !DIFile(filename: "SVF/llvm-16.0.0.obj/lib/clang/16/include/stdarg.h", directory: "/home/raj", checksumkind: CSK_MD5, checksum: "4c819f80dd915987182e9ab226e27a5a")
!6114 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6115, baseType: !6116)
!6115 = !DIFile(filename: "common/lwan-status.c", directory: "/home/raj/lwan")
!6116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6117, size: 192, elements: !1833)
!6117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", size: 192, elements: !6118)
!6118 = !{!6119, !6120, !6121, !6122}
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !6117, file: !6115, line: 188, baseType: !9, size: 32)
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !6117, file: !6115, line: 188, baseType: !9, size: 32, offset: 32)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !6117, file: !6115, line: 188, baseType: !111, size: 64, offset: 64)
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !6117, file: !6115, line: 188, baseType: !111, size: 64, offset: 128)
!6123 = !DILocation(line: 197, column: 1, scope: !6110)
!6124 = !DILocation(line: 197, column: 1, scope: !6125)
!6125 = distinct !DILexicalBlock(scope: !6099, file: !2636, line: 197, column: 1)
!6126 = distinct !DISubprogram(name: "list_add", scope: !659, file: !659, line: 327, type: !6127, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !856, retainedNodes: !286)
!6127 = !DISubroutineType(types: !6128)
!6128 = !{null, !6129, !859}
!6129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!6130 = !DILocalVariable(name: "h", arg: 1, scope: !6126, file: !659, line: 327, type: !6129)
!6131 = !DILocation(line: 327, column: 47, scope: !6126)
!6132 = !DILocalVariable(name: "n", arg: 2, scope: !6126, file: !659, line: 327, type: !859)
!6133 = !DILocation(line: 327, column: 68, scope: !6126)
!6134 = !DILocation(line: 329, column: 12, scope: !6126)
!6135 = !DILocation(line: 329, column: 15, scope: !6126)
!6136 = !DILocation(line: 329, column: 17, scope: !6126)
!6137 = !DILocation(line: 329, column: 2, scope: !6126)
!6138 = !DILocation(line: 329, column: 5, scope: !6126)
!6139 = !DILocation(line: 329, column: 10, scope: !6126)
!6140 = !DILocation(line: 330, column: 13, scope: !6126)
!6141 = !DILocation(line: 330, column: 16, scope: !6126)
!6142 = !DILocation(line: 330, column: 2, scope: !6126)
!6143 = !DILocation(line: 330, column: 5, scope: !6126)
!6144 = !DILocation(line: 330, column: 10, scope: !6126)
!6145 = !DILocation(line: 331, column: 20, scope: !6126)
!6146 = !DILocation(line: 331, column: 2, scope: !6126)
!6147 = !DILocation(line: 331, column: 5, scope: !6126)
!6148 = !DILocation(line: 331, column: 7, scope: !6126)
!6149 = !DILocation(line: 331, column: 13, scope: !6126)
!6150 = !DILocation(line: 331, column: 18, scope: !6126)
!6151 = !DILocation(line: 332, column: 14, scope: !6126)
!6152 = !DILocation(line: 332, column: 2, scope: !6126)
!6153 = !DILocation(line: 332, column: 5, scope: !6126)
!6154 = !DILocation(line: 332, column: 7, scope: !6126)
!6155 = !DILocation(line: 332, column: 12, scope: !6126)
!6156 = !DILocation(line: 333, column: 8, scope: !6126)
!6157 = !DILocation(line: 334, column: 1, scope: !6126)
!6158 = distinct !DISubprogram(name: "lwan_status_warning_debug", scope: !2636, file: !2636, line: 192, type: !6100, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2632, retainedNodes: !286)
!6159 = !DILocalVariable(name: "file", arg: 1, scope: !6158, file: !2636, line: 192, type: !205)
!6160 = !DILocation(line: 192, column: 1, scope: !6158)
!6161 = !DILocalVariable(name: "line", arg: 2, scope: !6158, file: !2636, line: 192, type: !3317)
!6162 = !DILocalVariable(name: "func", arg: 3, scope: !6158, file: !2636, line: 192, type: !205)
!6163 = !DILocalVariable(name: "fmt", arg: 4, scope: !6158, file: !2636, line: 192, type: !205)
!6164 = !DILocation(line: 192, column: 1, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6158, file: !2636, line: 192, column: 1)
!6166 = !DILocalVariable(name: "values", scope: !6167, file: !2636, line: 192, type: !6111)
!6167 = distinct !DILexicalBlock(scope: !6165, file: !2636, line: 192, column: 1)
!6168 = !DILocation(line: 192, column: 1, scope: !6167)
!6169 = distinct !DISubprogram(name: "status_out", scope: !2636, file: !2636, line: 141, type: !6170, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2632, retainedNodes: !286)
!6170 = !DISubroutineType(types: !6171)
!6171 = !{null, !205, !3317, !205, !2677, !205, !6172}
!6172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6117, size: 64)
!6173 = !DILocalVariable(name: "file", arg: 1, scope: !6169, file: !2636, line: 141, type: !205)
!6174 = !DILocation(line: 141, column: 24, scope: !6169)
!6175 = !DILocalVariable(name: "line", arg: 2, scope: !6169, file: !2636, line: 141, type: !3317)
!6176 = !DILocation(line: 141, column: 40, scope: !6169)
!6177 = !DILocalVariable(name: "func", arg: 3, scope: !6169, file: !2636, line: 141, type: !205)
!6178 = !DILocation(line: 141, column: 58, scope: !6169)
!6179 = !DILocalVariable(name: "type", arg: 4, scope: !6169, file: !2636, line: 142, type: !2677)
!6180 = !DILocation(line: 142, column: 32, scope: !6169)
!6181 = !DILocalVariable(name: "fmt", arg: 5, scope: !6169, file: !2636, line: 142, type: !205)
!6182 = !DILocation(line: 142, column: 50, scope: !6169)
!6183 = !DILocalVariable(name: "values", arg: 6, scope: !6169, file: !2636, line: 142, type: !6172)
!6184 = !DILocation(line: 142, column: 63, scope: !6169)
!6185 = !DILocalVariable(name: "output", scope: !6169, file: !2636, line: 145, type: !52)
!6186 = !DILocation(line: 145, column: 11, scope: !6169)
!6187 = !DILocalVariable(name: "len", scope: !6169, file: !2636, line: 146, type: !34)
!6188 = !DILocation(line: 146, column: 9, scope: !6169)
!6189 = !DILocation(line: 148, column: 30, scope: !6169)
!6190 = !DILocation(line: 148, column: 35, scope: !6169)
!6191 = !DILocation(line: 148, column: 11, scope: !6169)
!6192 = !DILocation(line: 148, column: 9, scope: !6169)
!6193 = !DILocation(line: 149, column: 9, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6169, file: !2636, line: 149, column: 9)
!6195 = !DILocation(line: 149, column: 13, scope: !6194)
!6196 = !DILocation(line: 149, column: 9, scope: !6169)
!6197 = !DILocation(line: 153, column: 24, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6194, file: !2636, line: 149, column: 19)
!6199 = !DILocation(line: 153, column: 30, scope: !6198)
!6200 = !DILocation(line: 153, column: 36, scope: !6198)
!6201 = !DILocation(line: 153, column: 42, scope: !6198)
!6202 = !DILocation(line: 153, column: 48, scope: !6198)
!6203 = !DILocation(line: 153, column: 64, scope: !6198)
!6204 = !DILocation(line: 153, column: 56, scope: !6198)
!6205 = !DILocation(line: 153, column: 9, scope: !6198)
!6206 = !DILocation(line: 155, column: 14, scope: !6198)
!6207 = !DILocation(line: 155, column: 9, scope: !6198)
!6208 = !DILocation(line: 156, column: 5, scope: !6198)
!6209 = !DILocation(line: 157, column: 1, scope: !6169)
!6210 = distinct !DISubprogram(name: "status_out_msg", scope: !2636, file: !2636, line: 99, type: !6211, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2632, retainedNodes: !286)
!6211 = !DISubroutineType(types: !6212)
!6212 = !{null, !205, !3317, !205, !2677, !205, !55}
!6213 = !DILocalVariable(name: "file", arg: 1, scope: !6210, file: !2636, line: 99, type: !205)
!6214 = !DILocation(line: 99, column: 28, scope: !6210)
!6215 = !DILocalVariable(name: "line", arg: 2, scope: !6210, file: !2636, line: 99, type: !3317)
!6216 = !DILocation(line: 99, column: 44, scope: !6210)
!6217 = !DILocalVariable(name: "func", arg: 3, scope: !6210, file: !2636, line: 99, type: !205)
!6218 = !DILocation(line: 99, column: 62, scope: !6210)
!6219 = !DILocalVariable(name: "type", arg: 4, scope: !6210, file: !2636, line: 100, type: !2677)
!6220 = !DILocation(line: 100, column: 36, scope: !6210)
!6221 = !DILocalVariable(name: "msg", arg: 5, scope: !6210, file: !2636, line: 100, type: !205)
!6222 = !DILocation(line: 100, column: 54, scope: !6210)
!6223 = !DILocalVariable(name: "msg_len", arg: 6, scope: !6210, file: !2636, line: 100, type: !55)
!6224 = !DILocation(line: 100, column: 66, scope: !6210)
!6225 = !DILocalVariable(name: "error_number", scope: !6210, file: !2636, line: 103, type: !34)
!6226 = !DILocation(line: 103, column: 9, scope: !6210)
!6227 = !DILocation(line: 103, column: 24, scope: !6210)
!6228 = !DILocalVariable(name: "start_len", scope: !6210, file: !2636, line: 104, type: !55)
!6229 = !DILocation(line: 104, column: 12, scope: !6210)
!6230 = !DILocalVariable(name: "end_len", scope: !6210, file: !2636, line: 104, type: !55)
!6231 = !DILocation(line: 104, column: 23, scope: !6210)
!6232 = !DILocalVariable(name: "start_color", scope: !6210, file: !2636, line: 105, type: !205)
!6233 = !DILocation(line: 105, column: 17, scope: !6210)
!6234 = !DILocation(line: 105, column: 56, scope: !6210)
!6235 = !DILocation(line: 105, column: 31, scope: !6210)
!6236 = !DILocalVariable(name: "end_color", scope: !6210, file: !2636, line: 106, type: !205)
!6237 = !DILocation(line: 106, column: 17, scope: !6210)
!6238 = !DILocation(line: 106, column: 52, scope: !6210)
!6239 = !DILocation(line: 106, column: 29, scope: !6210)
!6240 = !DILocation(line: 108, column: 9, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6210, file: !2636, line: 108, column: 9)
!6242 = !DILocation(line: 108, column: 9, scope: !6210)
!6243 = !DILocation(line: 109, column: 9, scope: !6241)
!6244 = !DILocation(line: 112, column: 13, scope: !6210)
!6245 = !DILocation(line: 112, column: 45, scope: !6210)
!6246 = !DILocation(line: 112, column: 5, scope: !6210)
!6247 = !DILocation(line: 113, column: 13, scope: !6210)
!6248 = !DILocation(line: 113, column: 54, scope: !6210)
!6249 = !DILocation(line: 113, column: 45, scope: !6210)
!6250 = !DILocation(line: 113, column: 61, scope: !6210)
!6251 = !DILocation(line: 113, column: 5, scope: !6210)
!6252 = !DILocation(line: 114, column: 13, scope: !6210)
!6253 = !DILocation(line: 114, column: 45, scope: !6210)
!6254 = !DILocation(line: 114, column: 5, scope: !6210)
!6255 = !DILocation(line: 115, column: 13, scope: !6210)
!6256 = !DILocation(line: 115, column: 5, scope: !6210)
!6257 = !DILocation(line: 118, column: 12, scope: !6210)
!6258 = !DILocation(line: 118, column: 25, scope: !6210)
!6259 = !DILocation(line: 118, column: 39, scope: !6210)
!6260 = !DILocation(line: 118, column: 5, scope: !6210)
!6261 = !DILocation(line: 119, column: 12, scope: !6210)
!6262 = !DILocation(line: 119, column: 17, scope: !6210)
!6263 = !DILocation(line: 119, column: 29, scope: !6210)
!6264 = !DILocation(line: 119, column: 5, scope: !6210)
!6265 = !DILocation(line: 121, column: 9, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6210, file: !2636, line: 121, column: 9)
!6267 = !DILocation(line: 121, column: 14, scope: !6266)
!6268 = !DILocation(line: 121, column: 9, scope: !6210)
!6269 = !DILocalVariable(name: "buffer", scope: !6270, file: !2636, line: 122, type: !6271)
!6270 = distinct !DILexicalBlock(scope: !6266, file: !2636, line: 121, column: 31)
!6271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 4096, elements: !6272)
!6272 = !{!6273}
!6273 = !DISubrange(count: 512)
!6274 = !DILocation(line: 122, column: 14, scope: !6270)
!6275 = !DILocalVariable(name: "error_msg", scope: !6270, file: !2636, line: 123, type: !52)
!6276 = !DILocation(line: 123, column: 15, scope: !6270)
!6277 = !DILocation(line: 123, column: 38, scope: !6270)
!6278 = !DILocation(line: 123, column: 52, scope: !6270)
!6279 = !DILocation(line: 123, column: 27, scope: !6270)
!6280 = !DILocation(line: 124, column: 20, scope: !6270)
!6281 = !DILocation(line: 124, column: 9, scope: !6270)
!6282 = !DILocation(line: 125, column: 20, scope: !6270)
!6283 = !DILocation(line: 125, column: 9, scope: !6270)
!6284 = !DILocation(line: 126, column: 16, scope: !6270)
!6285 = !DILocation(line: 126, column: 34, scope: !6270)
!6286 = !DILocation(line: 126, column: 27, scope: !6270)
!6287 = !DILocation(line: 126, column: 49, scope: !6270)
!6288 = !DILocation(line: 126, column: 9, scope: !6270)
!6289 = !DILocation(line: 127, column: 5, scope: !6270)
!6290 = !DILocation(line: 129, column: 16, scope: !6210)
!6291 = !DILocation(line: 129, column: 5, scope: !6210)
!6292 = !DILocation(line: 130, column: 12, scope: !6210)
!6293 = !DILocation(line: 130, column: 23, scope: !6210)
!6294 = !DILocation(line: 130, column: 35, scope: !6210)
!6295 = !DILocation(line: 130, column: 5, scope: !6210)
!6296 = !DILocation(line: 131, column: 17, scope: !6210)
!6297 = !DILocation(line: 131, column: 5, scope: !6210)
!6298 = !DILocation(line: 133, column: 9, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6210, file: !2636, line: 133, column: 9)
!6300 = !DILocation(line: 133, column: 9, scope: !6210)
!6301 = !DILocation(line: 134, column: 9, scope: !6299)
!6302 = !DILocation(line: 135, column: 1, scope: !6210)
!6303 = distinct !DISubprogram(name: "get_color_start_for_type", scope: !2636, file: !2636, line: 64, type: !2675, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2632, retainedNodes: !286)
!6304 = !DILocalVariable(name: "type", arg: 1, scope: !6303, file: !2636, line: 64, type: !2677)
!6305 = !DILocation(line: 64, column: 45, scope: !6303)
!6306 = !DILocalVariable(name: "len_out", arg: 2, scope: !6303, file: !2636, line: 64, type: !480)
!6307 = !DILocation(line: 64, column: 59, scope: !6303)
!6308 = !DILocalVariable(name: "retval", scope: !6303, file: !2636, line: 66, type: !205)
!6309 = !DILocation(line: 66, column: 17, scope: !6303)
!6310 = !DILocation(line: 68, column: 9, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6303, file: !2636, line: 68, column: 9)
!6312 = !DILocation(line: 68, column: 14, scope: !6311)
!6313 = !DILocation(line: 68, column: 9, scope: !6303)
!6314 = !DILocation(line: 69, column: 16, scope: !6311)
!6315 = !DILocation(line: 69, column: 9, scope: !6311)
!6316 = !DILocation(line: 70, column: 14, scope: !6317)
!6317 = distinct !DILexicalBlock(scope: !6311, file: !2636, line: 70, column: 14)
!6318 = !DILocation(line: 70, column: 19, scope: !6317)
!6319 = !DILocation(line: 70, column: 14, scope: !6311)
!6320 = !DILocation(line: 71, column: 16, scope: !6317)
!6321 = !DILocation(line: 71, column: 9, scope: !6317)
!6322 = !DILocation(line: 72, column: 14, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !6317, file: !2636, line: 72, column: 14)
!6324 = !DILocation(line: 72, column: 19, scope: !6323)
!6325 = !DILocation(line: 72, column: 14, scope: !6317)
!6326 = !DILocation(line: 73, column: 16, scope: !6323)
!6327 = !DILocation(line: 73, column: 9, scope: !6323)
!6328 = !DILocation(line: 74, column: 14, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6323, file: !2636, line: 74, column: 14)
!6330 = !DILocation(line: 74, column: 19, scope: !6329)
!6331 = !DILocation(line: 74, column: 14, scope: !6323)
!6332 = !DILocation(line: 75, column: 16, scope: !6329)
!6333 = !DILocation(line: 75, column: 9, scope: !6329)
!6334 = !DILocation(line: 76, column: 14, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6329, file: !2636, line: 76, column: 14)
!6336 = !DILocation(line: 76, column: 19, scope: !6335)
!6337 = !DILocation(line: 76, column: 14, scope: !6329)
!6338 = !DILocation(line: 77, column: 16, scope: !6335)
!6339 = !DILocation(line: 77, column: 9, scope: !6335)
!6340 = !DILocation(line: 79, column: 16, scope: !6335)
!6341 = !DILocation(line: 81, column: 23, scope: !6303)
!6342 = !DILocation(line: 81, column: 16, scope: !6303)
!6343 = !DILocation(line: 81, column: 6, scope: !6303)
!6344 = !DILocation(line: 81, column: 14, scope: !6303)
!6345 = !DILocation(line: 83, column: 12, scope: !6303)
!6346 = !DILocation(line: 83, column: 5, scope: !6303)
!6347 = !DILocalVariable(name: "type", arg: 1, scope: !2674, file: !2636, line: 87, type: !2677)
!6348 = !DILocation(line: 87, column: 43, scope: !2674)
!6349 = !DILocalVariable(name: "len_out", arg: 2, scope: !2674, file: !2636, line: 88, type: !480)
!6350 = !DILocation(line: 88, column: 33, scope: !2674)
!6351 = !DILocation(line: 91, column: 23, scope: !2674)
!6352 = !DILocation(line: 91, column: 16, scope: !2674)
!6353 = !DILocation(line: 91, column: 6, scope: !2674)
!6354 = !DILocation(line: 91, column: 14, scope: !2674)
!6355 = !DILocation(line: 92, column: 12, scope: !2674)
!6356 = !DILocation(line: 92, column: 5, scope: !2674)
!6357 = distinct !DISubprogram(name: "list_empty", scope: !659, file: !659, line: 364, type: !6358, scopeLine: 365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3279, retainedNodes: !286)
!6358 = !DISubroutineType(types: !6359)
!6359 = !{!137, !6360}
!6360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6361, size: 64)
!6361 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5720)
!6362 = !DILocalVariable(name: "h", arg: 1, scope: !6357, file: !659, line: 364, type: !6360)
!6363 = !DILocation(line: 364, column: 55, scope: !6357)
!6364 = !DILocation(line: 366, column: 8, scope: !6357)
!6365 = !DILocation(line: 367, column: 9, scope: !6357)
!6366 = !DILocation(line: 367, column: 12, scope: !6357)
!6367 = !DILocation(line: 367, column: 14, scope: !6357)
!6368 = !DILocation(line: 367, column: 23, scope: !6357)
!6369 = !DILocation(line: 367, column: 26, scope: !6357)
!6370 = !DILocation(line: 367, column: 19, scope: !6357)
!6371 = !DILocation(line: 367, column: 2, scope: !6357)
!6372 = distinct !DISubprogram(name: "lwan_status_perror_debug", scope: !2636, file: !2636, line: 194, type: !6100, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2632, retainedNodes: !286)
!6373 = !DILocalVariable(name: "file", arg: 1, scope: !6372, file: !2636, line: 194, type: !205)
!6374 = !DILocation(line: 194, column: 1, scope: !6372)
!6375 = !DILocalVariable(name: "line", arg: 2, scope: !6372, file: !2636, line: 194, type: !3317)
!6376 = !DILocalVariable(name: "func", arg: 3, scope: !6372, file: !2636, line: 194, type: !205)
!6377 = !DILocalVariable(name: "fmt", arg: 4, scope: !6372, file: !2636, line: 194, type: !205)
!6378 = !DILocation(line: 194, column: 1, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !6372, file: !2636, line: 194, column: 1)
!6380 = !DILocalVariable(name: "values", scope: !6381, file: !2636, line: 194, type: !6111)
!6381 = distinct !DILexicalBlock(scope: !6379, file: !2636, line: 194, column: 1)
!6382 = !DILocation(line: 194, column: 1, scope: !6381)
!6383 = distinct !DISubprogram(name: "list_append_list", scope: !659, file: !659, line: 588, type: !6384, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3279, retainedNodes: !286)
!6384 = !DISubroutineType(types: !6385)
!6385 = !{null, !5883, !5883}
!6386 = !DILocalVariable(name: "to", arg: 1, scope: !6383, file: !659, line: 588, type: !5883)
!6387 = !DILocation(line: 588, column: 55, scope: !6383)
!6388 = !DILocalVariable(name: "from", arg: 2, scope: !6383, file: !659, line: 589, type: !5883)
!6389 = !DILocation(line: 589, column: 27, scope: !6383)
!6390 = !DILocalVariable(name: "from_tail", scope: !6383, file: !659, line: 591, type: !3291)
!6391 = !DILocation(line: 591, column: 20, scope: !6383)
!6392 = !DILocation(line: 591, column: 32, scope: !6383)
!6393 = !DILocation(line: 591, column: 50, scope: !6383)
!6394 = !DILocation(line: 591, column: 52, scope: !6383)
!6395 = !DILocalVariable(name: "to_tail", scope: !6383, file: !659, line: 592, type: !3291)
!6396 = !DILocation(line: 592, column: 20, scope: !6383)
!6397 = !DILocation(line: 592, column: 30, scope: !6383)
!6398 = !DILocation(line: 592, column: 46, scope: !6383)
!6399 = !DILocation(line: 592, column: 48, scope: !6383)
!6400 = !DILocation(line: 595, column: 15, scope: !6383)
!6401 = !DILocation(line: 595, column: 2, scope: !6383)
!6402 = !DILocation(line: 595, column: 6, scope: !6383)
!6403 = !DILocation(line: 595, column: 8, scope: !6383)
!6404 = !DILocation(line: 595, column: 13, scope: !6383)
!6405 = !DILocation(line: 596, column: 21, scope: !6383)
!6406 = !DILocation(line: 596, column: 25, scope: !6383)
!6407 = !DILocation(line: 596, column: 2, scope: !6383)
!6408 = !DILocation(line: 596, column: 13, scope: !6383)
!6409 = !DILocation(line: 596, column: 18, scope: !6383)
!6410 = !DILocation(line: 597, column: 19, scope: !6383)
!6411 = !DILocation(line: 597, column: 25, scope: !6383)
!6412 = !DILocation(line: 597, column: 2, scope: !6383)
!6413 = !DILocation(line: 597, column: 11, scope: !6383)
!6414 = !DILocation(line: 597, column: 16, scope: !6383)
!6415 = !DILocation(line: 598, column: 17, scope: !6383)
!6416 = !DILocation(line: 598, column: 2, scope: !6383)
!6417 = !DILocation(line: 598, column: 8, scope: !6383)
!6418 = !DILocation(line: 598, column: 10, scope: !6383)
!6419 = !DILocation(line: 598, column: 15, scope: !6383)
!6420 = !DILocation(line: 601, column: 12, scope: !6383)
!6421 = !DILocation(line: 601, column: 18, scope: !6383)
!6422 = !DILocation(line: 601, column: 2, scope: !6383)
!6423 = !DILocation(line: 602, column: 17, scope: !6383)
!6424 = !DILocation(line: 602, column: 2, scope: !6383)
!6425 = !DILocation(line: 603, column: 1, scope: !6383)
!6426 = distinct !DISubprogram(name: "list_node_to_off_", scope: !659, file: !659, line: 716, type: !6427, scopeLine: 717, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3279, retainedNodes: !286)
!6427 = !DISubroutineType(types: !6428)
!6428 = !{!111, !3291, !55}
!6429 = !DILocalVariable(name: "node", arg: 1, scope: !6426, file: !659, line: 716, type: !3291)
!6430 = !DILocation(line: 716, column: 57, scope: !6426)
!6431 = !DILocalVariable(name: "off", arg: 2, scope: !6426, file: !659, line: 716, type: !55)
!6432 = !DILocation(line: 716, column: 70, scope: !6426)
!6433 = !DILocation(line: 718, column: 26, scope: !6426)
!6434 = !DILocation(line: 718, column: 33, scope: !6426)
!6435 = !DILocation(line: 718, column: 31, scope: !6426)
!6436 = !DILocation(line: 718, column: 2, scope: !6426)
!6437 = distinct !DISubprogram(name: "list_node_from_off_", scope: !659, file: !659, line: 720, type: !6438, scopeLine: 721, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3279, retainedNodes: !286)
!6438 = !DISubroutineType(types: !6439)
!6439 = !{!3291, !111, !55}
!6440 = !DILocalVariable(name: "ptr", arg: 1, scope: !6437, file: !659, line: 720, type: !111)
!6441 = !DILocation(line: 720, column: 59, scope: !6437)
!6442 = !DILocalVariable(name: "off", arg: 2, scope: !6437, file: !659, line: 720, type: !55)
!6443 = !DILocation(line: 720, column: 71, scope: !6437)
!6444 = !DILocation(line: 722, column: 38, scope: !6437)
!6445 = !DILocation(line: 722, column: 44, scope: !6437)
!6446 = !DILocation(line: 722, column: 42, scope: !6437)
!6447 = !DILocation(line: 722, column: 2, scope: !6437)
!6448 = distinct !DISubprogram(name: "list_del", scope: !659, file: !659, line: 384, type: !6449, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3279, retainedNodes: !286)
!6449 = !DISubroutineType(types: !6450)
!6450 = !{null, !3291}
!6451 = !DILocalVariable(name: "n", arg: 1, scope: !6448, file: !659, line: 384, type: !3291)
!6452 = !DILocation(line: 384, column: 47, scope: !6448)
!6453 = !DILocation(line: 386, column: 8, scope: !6448)
!6454 = !DILocation(line: 387, column: 18, scope: !6448)
!6455 = !DILocation(line: 387, column: 21, scope: !6448)
!6456 = !DILocation(line: 387, column: 2, scope: !6448)
!6457 = !DILocation(line: 387, column: 5, scope: !6448)
!6458 = !DILocation(line: 387, column: 11, scope: !6448)
!6459 = !DILocation(line: 387, column: 16, scope: !6448)
!6460 = !DILocation(line: 388, column: 18, scope: !6448)
!6461 = !DILocation(line: 388, column: 21, scope: !6448)
!6462 = !DILocation(line: 388, column: 2, scope: !6448)
!6463 = !DILocation(line: 388, column: 5, scope: !6448)
!6464 = !DILocation(line: 388, column: 11, scope: !6448)
!6465 = !DILocation(line: 388, column: 16, scope: !6448)
!6466 = !DILocation(line: 393, column: 1, scope: !6448)
!6467 = distinct !DISubprogram(name: "list_prepend_list", scope: !659, file: !659, line: 618, type: !6384, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3279, retainedNodes: !286)
!6468 = !DILocalVariable(name: "to", arg: 1, scope: !6467, file: !659, line: 618, type: !5883)
!6469 = !DILocation(line: 618, column: 56, scope: !6467)
!6470 = !DILocalVariable(name: "from", arg: 2, scope: !6467, file: !659, line: 619, type: !5883)
!6471 = !DILocation(line: 619, column: 28, scope: !6467)
!6472 = !DILocalVariable(name: "from_tail", scope: !6467, file: !659, line: 621, type: !3291)
!6473 = !DILocation(line: 621, column: 20, scope: !6467)
!6474 = !DILocation(line: 621, column: 32, scope: !6467)
!6475 = !DILocation(line: 621, column: 50, scope: !6467)
!6476 = !DILocation(line: 621, column: 52, scope: !6467)
!6477 = !DILocalVariable(name: "to_head", scope: !6467, file: !659, line: 622, type: !3291)
!6478 = !DILocation(line: 622, column: 20, scope: !6467)
!6479 = !DILocation(line: 622, column: 30, scope: !6467)
!6480 = !DILocation(line: 622, column: 46, scope: !6467)
!6481 = !DILocation(line: 622, column: 48, scope: !6467)
!6482 = !DILocation(line: 625, column: 16, scope: !6467)
!6483 = !DILocation(line: 625, column: 22, scope: !6467)
!6484 = !DILocation(line: 625, column: 2, scope: !6467)
!6485 = !DILocation(line: 625, column: 6, scope: !6467)
!6486 = !DILocation(line: 625, column: 8, scope: !6467)
!6487 = !DILocation(line: 625, column: 13, scope: !6467)
!6488 = !DILocation(line: 626, column: 18, scope: !6467)
!6489 = !DILocation(line: 626, column: 22, scope: !6467)
!6490 = !DILocation(line: 626, column: 2, scope: !6467)
!6491 = !DILocation(line: 626, column: 8, scope: !6467)
!6492 = !DILocation(line: 626, column: 10, scope: !6467)
!6493 = !DILocation(line: 626, column: 15, scope: !6467)
!6494 = !DILocation(line: 627, column: 18, scope: !6467)
!6495 = !DILocation(line: 627, column: 2, scope: !6467)
!6496 = !DILocation(line: 627, column: 11, scope: !6467)
!6497 = !DILocation(line: 627, column: 16, scope: !6467)
!6498 = !DILocation(line: 628, column: 20, scope: !6467)
!6499 = !DILocation(line: 628, column: 2, scope: !6467)
!6500 = !DILocation(line: 628, column: 13, scope: !6467)
!6501 = !DILocation(line: 628, column: 18, scope: !6467)
!6502 = !DILocation(line: 631, column: 12, scope: !6467)
!6503 = !DILocation(line: 631, column: 18, scope: !6467)
!6504 = !DILocation(line: 631, column: 2, scope: !6467)
!6505 = !DILocation(line: 632, column: 17, scope: !6467)
!6506 = !DILocation(line: 632, column: 2, scope: !6467)
!6507 = !DILocation(line: 633, column: 1, scope: !6467)
!6508 = distinct !DISubprogram(name: "cache_destroy", scope: !502, file: !502, line: 144, type: !6509, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3279, retainedNodes: !286)
!6509 = !DISubroutineType(types: !6510)
!6510 = !{null, !5686}
!6511 = !DILocalVariable(name: "cache", arg: 1, scope: !6508, file: !502, line: 144, type: !5686)
!6512 = !DILocation(line: 144, column: 36, scope: !6508)
!6513 = !DILocation(line: 146, column: 5, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6515, file: !502, line: 146, column: 5)
!6515 = distinct !DILexicalBlock(scope: !6508, file: !502, line: 146, column: 5)
!6516 = !DILocation(line: 146, column: 5, scope: !6515)
!6517 = !DILocation(line: 149, column: 5, scope: !6508)
!6518 = !DILocation(line: 154, column: 36, scope: !6508)
!6519 = !DILocation(line: 154, column: 5, scope: !6508)
!6520 = !DILocation(line: 155, column: 5, scope: !6508)
!6521 = !DILocation(line: 155, column: 12, scope: !6508)
!6522 = !DILocation(line: 155, column: 18, scope: !6508)
!6523 = !DILocation(line: 156, column: 22, scope: !6508)
!6524 = !DILocation(line: 156, column: 5, scope: !6508)
!6525 = !DILocation(line: 157, column: 29, scope: !6508)
!6526 = !DILocation(line: 157, column: 36, scope: !6508)
!6527 = !DILocation(line: 157, column: 41, scope: !6508)
!6528 = !DILocation(line: 157, column: 5, scope: !6508)
!6529 = !DILocation(line: 158, column: 29, scope: !6508)
!6530 = !DILocation(line: 158, column: 36, scope: !6508)
!6531 = !DILocation(line: 158, column: 42, scope: !6508)
!6532 = !DILocation(line: 158, column: 5, scope: !6508)
!6533 = !DILocation(line: 159, column: 15, scope: !6508)
!6534 = !DILocation(line: 159, column: 22, scope: !6508)
!6535 = !DILocation(line: 159, column: 27, scope: !6508)
!6536 = !DILocation(line: 159, column: 5, scope: !6508)
!6537 = !DILocation(line: 160, column: 10, scope: !6508)
!6538 = !DILocation(line: 160, column: 5, scope: !6508)
!6539 = !DILocation(line: 161, column: 1, scope: !6508)
!6540 = distinct !DISubprogram(name: "lwan_status_debug_debug", scope: !2636, file: !2636, line: 188, type: !6100, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2632, retainedNodes: !286)
!6541 = !DILocalVariable(name: "file", arg: 1, scope: !6540, file: !2636, line: 188, type: !205)
!6542 = !DILocation(line: 188, column: 1, scope: !6540)
!6543 = !DILocalVariable(name: "line", arg: 2, scope: !6540, file: !2636, line: 188, type: !3317)
!6544 = !DILocalVariable(name: "func", arg: 3, scope: !6540, file: !2636, line: 188, type: !205)
!6545 = !DILocalVariable(name: "fmt", arg: 4, scope: !6540, file: !2636, line: 188, type: !205)
!6546 = !DILocation(line: 188, column: 1, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !6540, file: !2636, line: 188, column: 1)
!6548 = !DILocalVariable(name: "values", scope: !6549, file: !2636, line: 188, type: !6111)
!6549 = distinct !DILexicalBlock(scope: !6547, file: !2636, line: 188, column: 1)
!6550 = !DILocation(line: 188, column: 1, scope: !6549)
!6551 = distinct !DISubprogram(name: "lwan_job_del", scope: !867, file: !867, line: 133, type: !6054, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !856, retainedNodes: !286)
!6552 = !DILocalVariable(name: "cb", arg: 1, scope: !6551, file: !867, line: 133, type: !2139)
!6553 = !DILocation(line: 133, column: 26, scope: !6551)
!6554 = !DILocalVariable(name: "data", arg: 2, scope: !6551, file: !867, line: 133, type: !111)
!6555 = !DILocation(line: 133, column: 49, scope: !6551)
!6556 = !DILocalVariable(name: "node", scope: !6551, file: !867, line: 135, type: !6065)
!6557 = !DILocation(line: 135, column: 19, scope: !6551)
!6558 = !DILocalVariable(name: "next", scope: !6551, file: !867, line: 135, type: !6065)
!6559 = !DILocation(line: 135, column: 26, scope: !6551)
!6560 = !DILocation(line: 137, column: 5, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6562, file: !867, line: 137, column: 5)
!6562 = distinct !DILexicalBlock(scope: !6551, file: !867, line: 137, column: 5)
!6563 = !DILocation(line: 137, column: 5, scope: !6562)
!6564 = !DILocation(line: 139, column: 9, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6551, file: !867, line: 139, column: 9)
!6566 = !DILocation(line: 139, column: 9, scope: !6551)
!6567 = !DILocation(line: 140, column: 9, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6569, file: !867, line: 140, column: 9)
!6569 = distinct !DILexicalBlock(scope: !6565, file: !867, line: 139, column: 52)
!6570 = !DILocation(line: 140, column: 9, scope: !6571)
!6571 = distinct !DILexicalBlock(scope: !6568, file: !867, line: 140, column: 9)
!6572 = !DILocation(line: 141, column: 17, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !6574, file: !867, line: 141, column: 17)
!6574 = distinct !DILexicalBlock(scope: !6571, file: !867, line: 140, column: 53)
!6575 = !DILocation(line: 141, column: 23, scope: !6573)
!6576 = !DILocation(line: 141, column: 29, scope: !6573)
!6577 = !DILocation(line: 141, column: 20, scope: !6573)
!6578 = !DILocation(line: 141, column: 32, scope: !6573)
!6579 = !DILocation(line: 141, column: 35, scope: !6573)
!6580 = !DILocation(line: 141, column: 43, scope: !6573)
!6581 = !DILocation(line: 141, column: 49, scope: !6573)
!6582 = !DILocation(line: 141, column: 40, scope: !6573)
!6583 = !DILocation(line: 141, column: 17, scope: !6574)
!6584 = !DILocation(line: 142, column: 27, scope: !6585)
!6585 = distinct !DILexicalBlock(scope: !6573, file: !867, line: 141, column: 55)
!6586 = !DILocation(line: 142, column: 33, scope: !6585)
!6587 = !DILocation(line: 142, column: 17, scope: !6585)
!6588 = !DILocation(line: 143, column: 22, scope: !6585)
!6589 = !DILocation(line: 143, column: 17, scope: !6585)
!6590 = !DILocation(line: 144, column: 13, scope: !6585)
!6591 = !DILocation(line: 145, column: 9, scope: !6574)
!6592 = distinct !{!6592, !6567, !6593, !3413}
!6593 = !DILocation(line: 145, column: 9, scope: !6568)
!6594 = !DILocation(line: 146, column: 9, scope: !6569)
!6595 = !DILocation(line: 147, column: 5, scope: !6569)
!6596 = !DILocation(line: 148, column: 1, scope: !6551)
!6597 = distinct !DISubprogram(name: "list_node_to_off_", scope: !659, file: !659, line: 716, type: !6598, scopeLine: 717, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !856, retainedNodes: !286)
!6598 = !DISubroutineType(types: !6599)
!6599 = !{!111, !859, !55}
!6600 = !DILocalVariable(name: "node", arg: 1, scope: !6597, file: !659, line: 716, type: !859)
!6601 = !DILocation(line: 716, column: 57, scope: !6597)
!6602 = !DILocalVariable(name: "off", arg: 2, scope: !6597, file: !659, line: 716, type: !55)
!6603 = !DILocation(line: 716, column: 70, scope: !6597)
!6604 = !DILocation(line: 718, column: 26, scope: !6597)
!6605 = !DILocation(line: 718, column: 33, scope: !6597)
!6606 = !DILocation(line: 718, column: 31, scope: !6597)
!6607 = !DILocation(line: 718, column: 2, scope: !6597)
!6608 = distinct !DISubprogram(name: "list_node_from_off_", scope: !659, file: !659, line: 720, type: !6609, scopeLine: 721, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !856, retainedNodes: !286)
!6609 = !DISubroutineType(types: !6610)
!6610 = !{!859, !111, !55}
!6611 = !DILocalVariable(name: "ptr", arg: 1, scope: !6608, file: !659, line: 720, type: !111)
!6612 = !DILocation(line: 720, column: 59, scope: !6608)
!6613 = !DILocalVariable(name: "off", arg: 2, scope: !6608, file: !659, line: 720, type: !55)
!6614 = !DILocation(line: 720, column: 71, scope: !6608)
!6615 = !DILocation(line: 722, column: 38, scope: !6608)
!6616 = !DILocation(line: 722, column: 44, scope: !6608)
!6617 = !DILocation(line: 722, column: 42, scope: !6608)
!6618 = !DILocation(line: 722, column: 2, scope: !6608)
!6619 = distinct !DISubprogram(name: "list_del", scope: !659, file: !659, line: 384, type: !6620, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !856, retainedNodes: !286)
!6620 = !DISubroutineType(types: !6621)
!6621 = !{null, !859}
!6622 = !DILocalVariable(name: "n", arg: 1, scope: !6619, file: !659, line: 384, type: !859)
!6623 = !DILocation(line: 384, column: 47, scope: !6619)
!6624 = !DILocation(line: 386, column: 8, scope: !6619)
!6625 = !DILocation(line: 387, column: 18, scope: !6619)
!6626 = !DILocation(line: 387, column: 21, scope: !6619)
!6627 = !DILocation(line: 387, column: 2, scope: !6619)
!6628 = !DILocation(line: 387, column: 5, scope: !6619)
!6629 = !DILocation(line: 387, column: 11, scope: !6619)
!6630 = !DILocation(line: 387, column: 16, scope: !6619)
!6631 = !DILocation(line: 388, column: 18, scope: !6619)
!6632 = !DILocation(line: 388, column: 21, scope: !6619)
!6633 = !DILocation(line: 388, column: 2, scope: !6619)
!6634 = !DILocation(line: 388, column: 5, scope: !6619)
!6635 = !DILocation(line: 388, column: 11, scope: !6619)
!6636 = !DILocation(line: 388, column: 16, scope: !6619)
!6637 = !DILocation(line: 393, column: 1, scope: !6619)
!6638 = distinct !DISubprogram(name: "cache_get_and_ref_entry", scope: !502, file: !502, line: 170, type: !6639, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3279, retainedNodes: !286)
!6639 = !DISubroutineType(types: !6640)
!6640 = !{!5732, !5686, !205, !363}
!6641 = !DILocalVariable(name: "cache", arg: 1, scope: !6638, file: !502, line: 170, type: !5686)
!6642 = !DILocation(line: 170, column: 63, scope: !6638)
!6643 = !DILocalVariable(name: "key", arg: 2, scope: !6638, file: !502, line: 171, type: !205)
!6644 = !DILocation(line: 171, column: 59, scope: !6638)
!6645 = !DILocalVariable(name: "error", arg: 3, scope: !6638, file: !502, line: 171, type: !363)
!6646 = !DILocation(line: 171, column: 69, scope: !6638)
!6647 = !DILocalVariable(name: "entry", scope: !6638, file: !502, line: 173, type: !5732)
!6648 = !DILocation(line: 173, column: 27, scope: !6638)
!6649 = !DILocation(line: 175, column: 5, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6651, file: !502, line: 175, column: 5)
!6651 = distinct !DILexicalBlock(scope: !6638, file: !502, line: 175, column: 5)
!6652 = !DILocation(line: 175, column: 5, scope: !6651)
!6653 = !DILocation(line: 176, column: 5, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6655, file: !502, line: 176, column: 5)
!6655 = distinct !DILexicalBlock(scope: !6638, file: !502, line: 176, column: 5)
!6656 = !DILocation(line: 176, column: 5, scope: !6655)
!6657 = !DILocation(line: 177, column: 5, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6659, file: !502, line: 177, column: 5)
!6659 = distinct !DILexicalBlock(scope: !6638, file: !502, line: 177, column: 5)
!6660 = !DILocation(line: 177, column: 5, scope: !6659)
!6661 = !DILocation(line: 179, column: 6, scope: !6638)
!6662 = !DILocation(line: 179, column: 12, scope: !6638)
!6663 = !DILocation(line: 184, column: 9, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6638, file: !502, line: 184, column: 9)
!6665 = !DILocation(line: 184, column: 9, scope: !6638)
!6666 = !DILocation(line: 185, column: 10, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6664, file: !502, line: 184, column: 73)
!6668 = !DILocation(line: 185, column: 16, scope: !6667)
!6669 = !DILocation(line: 186, column: 9, scope: !6667)
!6670 = !DILocation(line: 190, column: 23, scope: !6638)
!6671 = !DILocation(line: 190, column: 30, scope: !6638)
!6672 = !DILocation(line: 190, column: 35, scope: !6638)
!6673 = !DILocation(line: 190, column: 42, scope: !6638)
!6674 = !DILocation(line: 190, column: 13, scope: !6638)
!6675 = !DILocation(line: 190, column: 11, scope: !6638)
!6676 = !DILocation(line: 191, column: 9, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6638, file: !502, line: 191, column: 9)
!6678 = !DILocation(line: 191, column: 9, scope: !6638)
!6679 = !DILocation(line: 192, column: 9, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6677, file: !502, line: 191, column: 24)
!6681 = !DILocation(line: 193, column: 32, scope: !6680)
!6682 = !DILocation(line: 193, column: 39, scope: !6680)
!6683 = !DILocation(line: 193, column: 44, scope: !6680)
!6684 = !DILocation(line: 193, column: 9, scope: !6680)
!6685 = !DILocation(line: 195, column: 9, scope: !6680)
!6686 = !DILocation(line: 197, column: 16, scope: !6680)
!6687 = !DILocation(line: 197, column: 9, scope: !6680)
!6688 = !DILocation(line: 201, column: 28, scope: !6638)
!6689 = !DILocation(line: 201, column: 35, scope: !6638)
!6690 = !DILocation(line: 201, column: 40, scope: !6638)
!6691 = !DILocation(line: 201, column: 5, scope: !6638)
!6692 = !DILocation(line: 204, column: 5, scope: !6638)
!6693 = !DILocation(line: 207, column: 13, scope: !6638)
!6694 = !DILocation(line: 207, column: 20, scope: !6638)
!6695 = !DILocation(line: 207, column: 23, scope: !6638)
!6696 = !DILocation(line: 207, column: 36, scope: !6638)
!6697 = !DILocation(line: 207, column: 41, scope: !6638)
!6698 = !DILocation(line: 207, column: 48, scope: !6638)
!6699 = !DILocation(line: 207, column: 51, scope: !6638)
!6700 = !DILocation(line: 207, column: 11, scope: !6638)
!6701 = !DILocation(line: 208, column: 10, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6638, file: !502, line: 208, column: 9)
!6703 = !DILocation(line: 208, column: 9, scope: !6638)
!6704 = !DILocation(line: 209, column: 9, scope: !6702)
!6705 = !DILocation(line: 211, column: 12, scope: !6638)
!6706 = !DILocation(line: 211, column: 5, scope: !6638)
!6707 = !DILocation(line: 212, column: 25, scope: !6638)
!6708 = !DILocation(line: 212, column: 18, scope: !6638)
!6709 = !DILocation(line: 212, column: 5, scope: !6638)
!6710 = !DILocation(line: 212, column: 12, scope: !6638)
!6711 = !DILocation(line: 212, column: 16, scope: !6638)
!6712 = !DILocation(line: 213, column: 5, scope: !6638)
!6713 = !DILocation(line: 213, column: 12, scope: !6638)
!6714 = !DILocation(line: 213, column: 17, scope: !6638)
!6715 = !DILocation(line: 215, column: 35, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6638, file: !502, line: 215, column: 9)
!6717 = !DILocation(line: 215, column: 42, scope: !6716)
!6718 = !DILocation(line: 215, column: 47, scope: !6716)
!6719 = !DILocation(line: 215, column: 9, scope: !6716)
!6720 = !DILocation(line: 215, column: 53, scope: !6716)
!6721 = !DILocation(line: 215, column: 9, scope: !6638)
!6722 = !DILocation(line: 221, column: 37, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6716, file: !502, line: 215, column: 63)
!6724 = !DILocalVariable(name: "entry", arg: 1, scope: !6725, file: !502, line: 164, type: !5732)
!6725 = distinct !DISubprogram(name: "convert_to_temporary", scope: !502, file: !502, line: 163, type: !6726, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3279, retainedNodes: !286)
!6726 = !DISubroutineType(types: !6727)
!6727 = !{!5732, !5732}
!6728 = !DILocation(line: 164, column: 27, scope: !6725, inlinedAt: !6729)
!6729 = distinct !DILocation(line: 221, column: 16, scope: !6723)
!6730 = !DILocation(line: 166, column: 5, scope: !6725, inlinedAt: !6729)
!6731 = !DILocation(line: 166, column: 12, scope: !6725, inlinedAt: !6729)
!6732 = !DILocation(line: 166, column: 18, scope: !6725, inlinedAt: !6729)
!6733 = !DILocation(line: 167, column: 12, scope: !6725, inlinedAt: !6729)
!6734 = !DILocation(line: 221, column: 9, scope: !6723)
!6735 = !DILocation(line: 224, column: 26, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !6638, file: !502, line: 224, column: 9)
!6737 = !DILocation(line: 224, column: 33, scope: !6736)
!6738 = !DILocation(line: 224, column: 38, scope: !6736)
!6739 = !DILocation(line: 224, column: 45, scope: !6736)
!6740 = !DILocation(line: 224, column: 52, scope: !6736)
!6741 = !DILocation(line: 224, column: 57, scope: !6736)
!6742 = !DILocation(line: 224, column: 10, scope: !6736)
!6743 = !DILocation(line: 224, column: 9, scope: !6638)
!6744 = !DILocalVariable(name: "time_to_die", scope: !6745, file: !502, line: 225, type: !5869)
!6745 = distinct !DILexicalBlock(scope: !6736, file: !502, line: 224, column: 65)
!6746 = !DILocation(line: 225, column: 25, scope: !6745)
!6747 = !DILocation(line: 226, column: 33, scope: !6745)
!6748 = !DILocation(line: 90, column: 67, scope: !5951, inlinedAt: !6749)
!6749 = distinct !DILocation(line: 226, column: 9, scope: !6745)
!6750 = !DILocation(line: 91, column: 22, scope: !5951, inlinedAt: !6749)
!6751 = !DILocation(line: 93, column: 9, scope: !5960, inlinedAt: !6749)
!6752 = !DILocation(line: 93, column: 9, scope: !5951, inlinedAt: !6749)
!6753 = !DILocation(line: 94, column: 9, scope: !5960, inlinedAt: !6749)
!6754 = !DILocation(line: 227, column: 42, scope: !6745)
!6755 = !DILocation(line: 227, column: 51, scope: !6745)
!6756 = !DILocation(line: 227, column: 58, scope: !6745)
!6757 = !DILocation(line: 227, column: 67, scope: !6745)
!6758 = !DILocation(line: 227, column: 49, scope: !6745)
!6759 = !DILocation(line: 227, column: 9, scope: !6745)
!6760 = !DILocation(line: 227, column: 16, scope: !6745)
!6761 = !DILocation(line: 227, column: 28, scope: !6745)
!6762 = !DILocation(line: 229, column: 13, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6745, file: !502, line: 229, column: 13)
!6764 = !DILocation(line: 229, column: 13, scope: !6745)
!6765 = !DILocation(line: 230, column: 28, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6763, file: !502, line: 229, column: 65)
!6767 = !DILocation(line: 230, column: 35, scope: !6766)
!6768 = !DILocation(line: 230, column: 41, scope: !6766)
!6769 = !DILocation(line: 230, column: 48, scope: !6766)
!6770 = !DILocation(line: 230, column: 55, scope: !6766)
!6771 = !DILocation(line: 230, column: 13, scope: !6766)
!6772 = !DILocation(line: 231, column: 36, scope: !6766)
!6773 = !DILocation(line: 231, column: 43, scope: !6766)
!6774 = !DILocation(line: 231, column: 49, scope: !6766)
!6775 = !DILocation(line: 231, column: 13, scope: !6766)
!6776 = !DILocation(line: 232, column: 9, scope: !6766)
!6777 = !DILocation(line: 233, column: 41, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !6763, file: !502, line: 232, column: 16)
!6779 = !DILocation(line: 164, column: 27, scope: !6725, inlinedAt: !6780)
!6780 = distinct !DILocation(line: 233, column: 20, scope: !6778)
!6781 = !DILocation(line: 166, column: 5, scope: !6725, inlinedAt: !6780)
!6782 = !DILocation(line: 166, column: 12, scope: !6725, inlinedAt: !6780)
!6783 = !DILocation(line: 166, column: 18, scope: !6725, inlinedAt: !6780)
!6784 = !DILocation(line: 167, column: 12, scope: !6725, inlinedAt: !6780)
!6785 = !DILocation(line: 233, column: 13, scope: !6778)
!6786 = !DILocation(line: 235, column: 5, scope: !6745)
!6787 = !DILocation(line: 242, column: 30, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6736, file: !502, line: 235, column: 12)
!6789 = !DILocation(line: 164, column: 27, scope: !6725, inlinedAt: !6790)
!6790 = distinct !DILocation(line: 242, column: 9, scope: !6788)
!6791 = !DILocation(line: 166, column: 5, scope: !6725, inlinedAt: !6790)
!6792 = !DILocation(line: 166, column: 12, scope: !6725, inlinedAt: !6790)
!6793 = !DILocation(line: 166, column: 18, scope: !6725, inlinedAt: !6790)
!6794 = !DILocation(line: 167, column: 12, scope: !6725, inlinedAt: !6790)
!6795 = !DILocation(line: 245, column: 28, scope: !6638)
!6796 = !DILocation(line: 245, column: 35, scope: !6638)
!6797 = !DILocation(line: 245, column: 40, scope: !6638)
!6798 = !DILocation(line: 245, column: 5, scope: !6638)
!6799 = !DILocation(line: 246, column: 12, scope: !6638)
!6800 = !DILocation(line: 246, column: 5, scope: !6638)
!6801 = !DILocation(line: 247, column: 1, scope: !6638)
!6802 = distinct !DISubprogram(name: "list_add_tail", scope: !659, file: !659, line: 346, type: !6803, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3279, retainedNodes: !286)
!6803 = !DISubroutineType(types: !6804)
!6804 = !{null, !5883, !3291}
!6805 = !DILocalVariable(name: "h", arg: 1, scope: !6802, file: !659, line: 346, type: !5883)
!6806 = !DILocation(line: 346, column: 52, scope: !6802)
!6807 = !DILocalVariable(name: "n", arg: 2, scope: !6802, file: !659, line: 346, type: !3291)
!6808 = !DILocation(line: 346, column: 73, scope: !6802)
!6809 = !DILocation(line: 348, column: 13, scope: !6802)
!6810 = !DILocation(line: 348, column: 16, scope: !6802)
!6811 = !DILocation(line: 348, column: 2, scope: !6802)
!6812 = !DILocation(line: 348, column: 5, scope: !6802)
!6813 = !DILocation(line: 348, column: 10, scope: !6802)
!6814 = !DILocation(line: 349, column: 12, scope: !6802)
!6815 = !DILocation(line: 349, column: 15, scope: !6802)
!6816 = !DILocation(line: 349, column: 17, scope: !6802)
!6817 = !DILocation(line: 349, column: 2, scope: !6802)
!6818 = !DILocation(line: 349, column: 5, scope: !6802)
!6819 = !DILocation(line: 349, column: 10, scope: !6802)
!6820 = !DILocation(line: 350, column: 20, scope: !6802)
!6821 = !DILocation(line: 350, column: 2, scope: !6802)
!6822 = !DILocation(line: 350, column: 5, scope: !6802)
!6823 = !DILocation(line: 350, column: 7, scope: !6802)
!6824 = !DILocation(line: 350, column: 13, scope: !6802)
!6825 = !DILocation(line: 350, column: 18, scope: !6802)
!6826 = !DILocation(line: 351, column: 14, scope: !6802)
!6827 = !DILocation(line: 351, column: 2, scope: !6802)
!6828 = !DILocation(line: 351, column: 5, scope: !6802)
!6829 = !DILocation(line: 351, column: 7, scope: !6802)
!6830 = !DILocation(line: 351, column: 12, scope: !6802)
!6831 = !DILocation(line: 352, column: 8, scope: !6802)
!6832 = !DILocation(line: 353, column: 1, scope: !6802)
!6833 = distinct !DISubprogram(name: "cache_entry_unref", scope: !502, file: !502, line: 249, type: !6834, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3279, retainedNodes: !286)
!6834 = !DISubroutineType(types: !6835)
!6835 = !{null, !5686, !5732}
!6836 = !DILocalVariable(name: "cache", arg: 1, scope: !6833, file: !502, line: 249, type: !5686)
!6837 = !DILocation(line: 249, column: 40, scope: !6833)
!6838 = !DILocalVariable(name: "entry", arg: 2, scope: !6833, file: !502, line: 249, type: !5732)
!6839 = !DILocation(line: 249, column: 69, scope: !6833)
!6840 = !DILocation(line: 251, column: 5, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6842, file: !502, line: 251, column: 5)
!6842 = distinct !DILexicalBlock(scope: !6833, file: !502, line: 251, column: 5)
!6843 = !DILocation(line: 251, column: 5, scope: !6842)
!6844 = !DILocation(line: 253, column: 9, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6833, file: !502, line: 253, column: 9)
!6846 = !DILocation(line: 253, column: 16, scope: !6845)
!6847 = !DILocation(line: 253, column: 22, scope: !6845)
!6848 = !DILocation(line: 253, column: 9, scope: !6833)
!6849 = !DILocation(line: 254, column: 14, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6845, file: !502, line: 253, column: 35)
!6851 = !DILocation(line: 254, column: 21, scope: !6850)
!6852 = !DILocation(line: 254, column: 9, scope: !6850)
!6853 = !DILocation(line: 255, column: 9, scope: !6850)
!6854 = !DILocation(line: 258, column: 9, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6833, file: !502, line: 258, column: 9)
!6856 = !DILocation(line: 258, column: 9, scope: !6833)
!6857 = !DILocation(line: 259, column: 9, scope: !6855)
!6858 = !DILocation(line: 263, column: 9, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6833, file: !502, line: 263, column: 9)
!6860 = !DILocation(line: 263, column: 16, scope: !6859)
!6861 = !DILocation(line: 263, column: 22, scope: !6859)
!6862 = !DILocation(line: 263, column: 9, scope: !6833)
!6863 = !DILocation(line: 263, column: 34, scope: !6859)
!6864 = !DILabel(scope: !6865, name: "destroy_entry", file: !502, line: 264)
!6865 = distinct !DILexicalBlock(scope: !6859, file: !502, line: 263, column: 34)
!6866 = !DILocation(line: 264, column: 1, scope: !6865)
!6867 = !DILocation(line: 268, column: 9, scope: !6865)
!6868 = !DILocation(line: 268, column: 16, scope: !6865)
!6869 = !DILocation(line: 268, column: 19, scope: !6865)
!6870 = !DILocation(line: 268, column: 33, scope: !6865)
!6871 = !DILocation(line: 268, column: 40, scope: !6865)
!6872 = !DILocation(line: 268, column: 47, scope: !6865)
!6873 = !DILocation(line: 268, column: 50, scope: !6865)
!6874 = !DILocation(line: 269, column: 5, scope: !6865)
!6875 = !DILocation(line: 270, column: 1, scope: !6833)
!6876 = distinct !DISubprogram(name: "cache_coro_get_and_ref_entry", scope: !502, file: !502, line: 357, type: !6877, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3279, retainedNodes: !286)
!6877 = !DISubroutineType(types: !6878)
!6878 = !{!5732, !5686, !76, !205}
!6879 = !DILocalVariable(name: "cache", arg: 1, scope: !6876, file: !502, line: 357, type: !5686)
!6880 = !DILocation(line: 357, column: 46, scope: !6876)
!6881 = !DILocalVariable(name: "coro", arg: 2, scope: !6876, file: !502, line: 357, type: !76)
!6882 = !DILocation(line: 357, column: 61, scope: !6876)
!6883 = !DILocalVariable(name: "key", arg: 3, scope: !6876, file: !502, line: 358, type: !205)
!6884 = !DILocation(line: 358, column: 42, scope: !6876)
!6885 = !DILocalVariable(name: "tries", scope: !6886, file: !502, line: 360, type: !34)
!6886 = distinct !DILexicalBlock(scope: !6876, file: !502, line: 360, column: 5)
!6887 = !DILocation(line: 360, column: 14, scope: !6886)
!6888 = !DILocation(line: 360, column: 10, scope: !6886)
!6889 = !DILocation(line: 360, column: 41, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !6886, file: !502, line: 360, column: 5)
!6891 = !DILocation(line: 360, column: 5, scope: !6886)
!6892 = !DILocalVariable(name: "error", scope: !6893, file: !502, line: 361, type: !34)
!6893 = distinct !DILexicalBlock(scope: !6890, file: !502, line: 360, column: 57)
!6894 = !DILocation(line: 361, column: 13, scope: !6893)
!6895 = !DILocalVariable(name: "ce", scope: !6893, file: !502, line: 362, type: !5732)
!6896 = !DILocation(line: 362, column: 31, scope: !6893)
!6897 = !DILocation(line: 362, column: 60, scope: !6893)
!6898 = !DILocation(line: 362, column: 67, scope: !6893)
!6899 = !DILocation(line: 362, column: 36, scope: !6893)
!6900 = !DILocation(line: 364, column: 13, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6893, file: !502, line: 364, column: 13)
!6902 = !DILocation(line: 364, column: 13, scope: !6893)
!6903 = !DILocation(line: 370, column: 25, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6901, file: !502, line: 364, column: 25)
!6905 = !DILocation(line: 370, column: 63, scope: !6904)
!6906 = !DILocation(line: 370, column: 70, scope: !6904)
!6907 = !DILocation(line: 370, column: 13, scope: !6904)
!6908 = !DILocation(line: 371, column: 20, scope: !6904)
!6909 = !DILocation(line: 371, column: 13, scope: !6904)
!6910 = !DILocation(line: 378, column: 13, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6893, file: !502, line: 378, column: 13)
!6912 = !DILocation(line: 378, column: 19, scope: !6911)
!6913 = !DILocation(line: 378, column: 13, scope: !6893)
!6914 = !DILocation(line: 379, column: 24, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6911, file: !502, line: 378, column: 35)
!6916 = !DILocation(line: 379, column: 13, scope: !6915)
!6917 = !DILocation(line: 380, column: 9, scope: !6915)
!6918 = !DILocation(line: 381, column: 13, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6911, file: !502, line: 380, column: 16)
!6920 = !DILocation(line: 383, column: 5, scope: !6893)
!6921 = !DILocation(line: 360, column: 53, scope: !6890)
!6922 = !DILocation(line: 360, column: 5, scope: !6890)
!6923 = distinct !{!6923, !6891, !6924, !3413}
!6924 = !DILocation(line: 383, column: 5, scope: !6886)
!6925 = !DILocation(line: 385, column: 5, scope: !6876)
!6926 = !DILocation(line: 386, column: 1, scope: !6876)
!6927 = distinct !DISubprogram(name: "coro_defer2", scope: !612, file: !612, line: 308, type: !6928, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3302, retainedNodes: !286)
!6928 = !DISubroutineType(types: !6929)
!6929 = !{null, !6930, !3288, !111, !111}
!6930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6931, size: 64)
!6931 = !DIDerivedType(tag: DW_TAG_typedef, name: "coro_t", file: !78, line: 34, baseType: !6932)
!6932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "coro_t_", file: !612, line: 53, size: 960, elements: !6933)
!6933 = !{!6934, !6943, !6944, !6945, !6957, !6958}
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "switcher", scope: !6932, file: !612, line: 54, baseType: !6935, size: 64)
!6935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6936, size: 64)
!6936 = !DIDerivedType(tag: DW_TAG_typedef, name: "coro_switcher_t", file: !78, line: 35, baseType: !6937)
!6937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "coro_switcher_t_", file: !78, line: 39, size: 1280, elements: !6938)
!6938 = !{!6939, !6942}
!6939 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !6937, file: !78, line: 40, baseType: !6940, size: 640)
!6940 = !DIDerivedType(tag: DW_TAG_typedef, name: "coro_context_t", file: !78, line: 25, baseType: !6941)
!6941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2962, size: 640, elements: !249)
!6942 = !DIDerivedType(tag: DW_TAG_member, name: "callee", scope: !6937, file: !78, line: 41, baseType: !6940, size: 640, offset: 640)
!6943 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !6932, file: !612, line: 55, baseType: !6940, size: 640, offset: 64)
!6944 = !DIDerivedType(tag: DW_TAG_member, name: "yield_value", scope: !6932, file: !612, line: 56, baseType: !34, size: 32, offset: 704)
!6945 = !DIDerivedType(tag: DW_TAG_member, name: "defer", scope: !6932, file: !612, line: 62, baseType: !6946, size: 64, offset: 768)
!6946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6947, size: 64)
!6947 = !DIDerivedType(tag: DW_TAG_typedef, name: "coro_defer_t", file: !612, line: 44, baseType: !6948)
!6948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "coro_defer_t_", file: !612, line: 46, size: 256, elements: !6949)
!6949 = !{!6950, !6951, !6955, !6956}
!6950 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6948, file: !612, line: 47, baseType: !6946, size: 64)
!6951 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !6948, file: !612, line: 48, baseType: !6952, size: 64, offset: 64)
!6952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6953, size: 64)
!6953 = !DISubroutineType(types: !6954)
!6954 = !{null, null}
!6955 = !DIDerivedType(tag: DW_TAG_member, name: "data1", scope: !6948, file: !612, line: 49, baseType: !111, size: 64, offset: 128)
!6956 = !DIDerivedType(tag: DW_TAG_member, name: "data2", scope: !6948, file: !612, line: 50, baseType: !111, size: 64, offset: 192)
!6957 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6932, file: !612, line: 63, baseType: !111, size: 64, offset: 832)
!6958 = !DIDerivedType(tag: DW_TAG_member, name: "ended", scope: !6932, file: !612, line: 65, baseType: !137, size: 8, offset: 896)
!6959 = !DILocalVariable(name: "coro", arg: 1, scope: !6927, file: !612, line: 308, type: !6930)
!6960 = !DILocation(line: 308, column: 21, scope: !6927)
!6961 = !DILocalVariable(name: "func", arg: 2, scope: !6927, file: !612, line: 308, type: !3288)
!6962 = !DILocation(line: 308, column: 34, scope: !6927)
!6963 = !DILocalVariable(name: "data1", arg: 3, scope: !6927, file: !612, line: 309, type: !111)
!6964 = !DILocation(line: 309, column: 19, scope: !6927)
!6965 = !DILocalVariable(name: "data2", arg: 4, scope: !6927, file: !612, line: 309, type: !111)
!6966 = !DILocation(line: 309, column: 32, scope: !6927)
!6967 = !DILocation(line: 311, column: 20, scope: !6927)
!6968 = !DILocation(line: 311, column: 26, scope: !6927)
!6969 = !DILocation(line: 311, column: 32, scope: !6927)
!6970 = !DILocation(line: 311, column: 39, scope: !6927)
!6971 = !DILocation(line: 311, column: 5, scope: !6927)
!6972 = !DILocation(line: 312, column: 1, scope: !6927)
!6973 = distinct !DISubprogram(name: "coro_yield", scope: !612, file: !612, line: 265, type: !6974, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3302, retainedNodes: !286)
!6974 = !DISubroutineType(types: !6975)
!6975 = !{!34, !6930, !34}
!6976 = !DILocalVariable(name: "coro", arg: 1, scope: !6973, file: !612, line: 265, type: !6930)
!6977 = !DILocation(line: 265, column: 20, scope: !6973)
!6978 = !DILocalVariable(name: "value", arg: 2, scope: !6973, file: !612, line: 265, type: !34)
!6979 = !DILocation(line: 265, column: 30, scope: !6973)
!6980 = !DILocation(line: 267, column: 5, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6982, file: !612, line: 267, column: 5)
!6982 = distinct !DILexicalBlock(scope: !6973, file: !612, line: 267, column: 5)
!6983 = !DILocation(line: 267, column: 5, scope: !6982)
!6984 = !DILocation(line: 268, column: 25, scope: !6973)
!6985 = !DILocation(line: 268, column: 5, scope: !6973)
!6986 = !DILocation(line: 268, column: 11, scope: !6973)
!6987 = !DILocation(line: 268, column: 23, scope: !6973)
!6988 = !DILocation(line: 269, column: 23, scope: !6973)
!6989 = !DILocation(line: 269, column: 29, scope: !6973)
!6990 = !DILocation(line: 269, column: 39, scope: !6973)
!6991 = !DILocation(line: 269, column: 48, scope: !6973)
!6992 = !DILocation(line: 269, column: 54, scope: !6973)
!6993 = !DILocation(line: 269, column: 64, scope: !6973)
!6994 = !DILocation(line: 269, column: 5, scope: !6973)
!6995 = !DILocation(line: 270, column: 12, scope: !6973)
!6996 = !DILocation(line: 270, column: 18, scope: !6973)
!6997 = !DILocation(line: 270, column: 5, scope: !6973)
!6998 = distinct !DISubprogram(name: "coro_defer_any", scope: !612, file: !612, line: 285, type: !6999, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3302, retainedNodes: !286)
!6999 = !DISubroutineType(types: !7000)
!7000 = !{null, !6930, !6952, !111, !111}
!7001 = !DILocalVariable(name: "coro", arg: 1, scope: !6998, file: !612, line: 285, type: !6930)
!7002 = !DILocation(line: 285, column: 24, scope: !6998)
!7003 = !DILocalVariable(name: "func", arg: 2, scope: !6998, file: !612, line: 285, type: !6952)
!7004 = !DILocation(line: 285, column: 37, scope: !6998)
!7005 = !DILocalVariable(name: "data1", arg: 3, scope: !6998, file: !612, line: 285, type: !111)
!7006 = !DILocation(line: 285, column: 52, scope: !6998)
!7007 = !DILocalVariable(name: "data2", arg: 4, scope: !6998, file: !612, line: 285, type: !111)
!7008 = !DILocation(line: 285, column: 65, scope: !6998)
!7009 = !DILocalVariable(name: "defer", scope: !6998, file: !612, line: 287, type: !6946)
!7010 = !DILocation(line: 287, column: 19, scope: !6998)
!7011 = !DILocation(line: 287, column: 27, scope: !6998)
!7012 = !DILocation(line: 288, column: 9, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !6998, file: !612, line: 288, column: 9)
!7014 = !DILocation(line: 288, column: 9, scope: !6998)
!7015 = !DILocation(line: 289, column: 9, scope: !7013)
!7016 = !DILocation(line: 291, column: 5, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !7018, file: !612, line: 291, column: 5)
!7018 = distinct !DILexicalBlock(scope: !6998, file: !612, line: 291, column: 5)
!7019 = !DILocation(line: 291, column: 5, scope: !7018)
!7020 = !DILocation(line: 294, column: 19, scope: !6998)
!7021 = !DILocation(line: 294, column: 25, scope: !6998)
!7022 = !DILocation(line: 294, column: 5, scope: !6998)
!7023 = !DILocation(line: 294, column: 12, scope: !6998)
!7024 = !DILocation(line: 294, column: 17, scope: !6998)
!7025 = !DILocation(line: 295, column: 19, scope: !6998)
!7026 = !DILocation(line: 295, column: 5, scope: !6998)
!7027 = !DILocation(line: 295, column: 12, scope: !6998)
!7028 = !DILocation(line: 295, column: 17, scope: !6998)
!7029 = !DILocation(line: 296, column: 20, scope: !6998)
!7030 = !DILocation(line: 296, column: 5, scope: !6998)
!7031 = !DILocation(line: 296, column: 12, scope: !6998)
!7032 = !DILocation(line: 296, column: 18, scope: !6998)
!7033 = !DILocation(line: 297, column: 20, scope: !6998)
!7034 = !DILocation(line: 297, column: 5, scope: !6998)
!7035 = !DILocation(line: 297, column: 12, scope: !6998)
!7036 = !DILocation(line: 297, column: 18, scope: !6998)
!7037 = !DILocation(line: 298, column: 19, scope: !6998)
!7038 = !DILocation(line: 298, column: 5, scope: !6998)
!7039 = !DILocation(line: 298, column: 11, scope: !6998)
!7040 = !DILocation(line: 298, column: 17, scope: !6998)
!7041 = !DILocation(line: 299, column: 1, scope: !6998)
!7042 = distinct !DISubprogram(name: "parse_time_period", scope: !567, file: !567, line: 34, type: !7043, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3297, retainedNodes: !286)
!7043 = !DISubroutineType(types: !7044)
!7044 = !{!9, !205, !9}
!7045 = !DILocalVariable(name: "str", arg: 1, scope: !7042, file: !567, line: 34, type: !205)
!7046 = !DILocation(line: 34, column: 44, scope: !7042)
!7047 = !DILocalVariable(name: "default_value", arg: 2, scope: !7042, file: !567, line: 34, type: !9)
!7048 = !DILocation(line: 34, column: 62, scope: !7042)
!7049 = !DILocalVariable(name: "total", scope: !7042, file: !567, line: 36, type: !9)
!7050 = !DILocation(line: 36, column: 18, scope: !7042)
!7051 = !DILocalVariable(name: "period", scope: !7042, file: !567, line: 37, type: !9)
!7052 = !DILocation(line: 37, column: 18, scope: !7042)
!7053 = !DILocalVariable(name: "multiplier", scope: !7042, file: !567, line: 38, type: !53)
!7054 = !DILocation(line: 38, column: 10, scope: !7042)
!7055 = !DILocation(line: 40, column: 10, scope: !7056)
!7056 = distinct !DILexicalBlock(scope: !7042, file: !567, line: 40, column: 9)
!7057 = !DILocation(line: 40, column: 9, scope: !7042)
!7058 = !DILocation(line: 41, column: 16, scope: !7056)
!7059 = !DILocation(line: 41, column: 9, scope: !7056)
!7060 = !DILocation(line: 43, column: 5, scope: !7042)
!7061 = !DILocation(line: 43, column: 13, scope: !7042)
!7062 = !DILocation(line: 43, column: 12, scope: !7042)
!7063 = !DILocation(line: 43, column: 17, scope: !7042)
!7064 = !DILocation(line: 43, column: 27, scope: !7042)
!7065 = !DILocation(line: 43, column: 20, scope: !7042)
!7066 = !DILocation(line: 43, column: 62, scope: !7042)
!7067 = !DILocation(line: 0, scope: !7042)
!7068 = !DILocation(line: 44, column: 17, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !7042, file: !567, line: 43, column: 68)
!7070 = !DILocation(line: 44, column: 9, scope: !7069)
!7071 = !DILocation(line: 45, column: 28, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7069, file: !567, line: 44, column: 29)
!7073 = !DILocation(line: 45, column: 25, scope: !7072)
!7074 = !DILocation(line: 45, column: 36, scope: !7072)
!7075 = !DILocation(line: 46, column: 28, scope: !7072)
!7076 = !DILocation(line: 46, column: 35, scope: !7072)
!7077 = !DILocation(line: 46, column: 25, scope: !7072)
!7078 = !DILocation(line: 46, column: 49, scope: !7072)
!7079 = !DILocation(line: 47, column: 28, scope: !7072)
!7080 = !DILocation(line: 47, column: 35, scope: !7072)
!7081 = !DILocation(line: 47, column: 25, scope: !7072)
!7082 = !DILocation(line: 47, column: 47, scope: !7072)
!7083 = !DILocation(line: 48, column: 28, scope: !7072)
!7084 = !DILocation(line: 48, column: 35, scope: !7072)
!7085 = !DILocation(line: 48, column: 25, scope: !7072)
!7086 = !DILocation(line: 48, column: 46, scope: !7072)
!7087 = !DILocation(line: 49, column: 28, scope: !7072)
!7088 = !DILocation(line: 49, column: 35, scope: !7072)
!7089 = !DILocation(line: 49, column: 25, scope: !7072)
!7090 = !DILocation(line: 49, column: 47, scope: !7072)
!7091 = !DILocation(line: 50, column: 28, scope: !7072)
!7092 = !DILocation(line: 50, column: 35, scope: !7072)
!7093 = !DILocation(line: 50, column: 25, scope: !7072)
!7094 = !DILocation(line: 50, column: 48, scope: !7072)
!7095 = !DILocation(line: 51, column: 28, scope: !7072)
!7096 = !DILocation(line: 51, column: 35, scope: !7072)
!7097 = !DILocation(line: 51, column: 25, scope: !7072)
!7098 = !DILocation(line: 51, column: 47, scope: !7072)
!7099 = !DILocation(line: 53, column: 13, scope: !7072)
!7100 = !DILocation(line: 55, column: 9, scope: !7072)
!7101 = !DILocation(line: 57, column: 39, scope: !7069)
!7102 = !DILocation(line: 57, column: 44, scope: !7069)
!7103 = !DILocation(line: 57, column: 29, scope: !7069)
!7104 = !DILocation(line: 57, column: 56, scope: !7069)
!7105 = !DILocation(line: 57, column: 13, scope: !7069)
!7106 = distinct !{!7106, !7060, !7107, !3413}
!7107 = !DILocation(line: 58, column: 5, scope: !7042)
!7108 = !DILocation(line: 60, column: 12, scope: !7042)
!7109 = !DILocation(line: 60, column: 20, scope: !7042)
!7110 = !DILocation(line: 60, column: 28, scope: !7042)
!7111 = !DILocation(line: 60, column: 5, scope: !7042)
!7112 = !DILocation(line: 61, column: 1, scope: !7042)
!7113 = distinct !DISubprogram(name: "parse_bool", scope: !567, file: !567, line: 63, type: !7114, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3297, retainedNodes: !286)
!7114 = !DISubroutineType(types: !7115)
!7115 = !{!137, !205, !137}
!7116 = !DILocalVariable(name: "value", arg: 1, scope: !7113, file: !567, line: 63, type: !205)
!7117 = !DILocation(line: 63, column: 29, scope: !7113)
!7118 = !DILocalVariable(name: "default_value", arg: 2, scope: !7113, file: !567, line: 63, type: !137)
!7119 = !DILocation(line: 63, column: 41, scope: !7113)
!7120 = !DILocation(line: 65, column: 10, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !7113, file: !567, line: 65, column: 9)
!7122 = !DILocation(line: 65, column: 9, scope: !7113)
!7123 = !DILocation(line: 66, column: 16, scope: !7121)
!7124 = !DILocation(line: 66, column: 9, scope: !7121)
!7125 = !DILocation(line: 68, column: 17, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7113, file: !567, line: 68, column: 9)
!7127 = !DILocation(line: 68, column: 10, scope: !7126)
!7128 = !DILocation(line: 68, column: 32, scope: !7126)
!7129 = !DILocation(line: 68, column: 43, scope: !7126)
!7130 = !DILocation(line: 68, column: 36, scope: !7126)
!7131 = !DILocation(line: 69, column: 13, scope: !7126)
!7132 = !DILocation(line: 69, column: 24, scope: !7126)
!7133 = !DILocation(line: 69, column: 17, scope: !7126)
!7134 = !DILocation(line: 69, column: 37, scope: !7126)
!7135 = !DILocation(line: 69, column: 48, scope: !7126)
!7136 = !DILocation(line: 69, column: 41, scope: !7126)
!7137 = !DILocation(line: 68, column: 9, scope: !7113)
!7138 = !DILocation(line: 70, column: 9, scope: !7126)
!7139 = !DILocation(line: 72, column: 17, scope: !7140)
!7140 = distinct !DILexicalBlock(scope: !7113, file: !567, line: 72, column: 9)
!7141 = !DILocation(line: 72, column: 10, scope: !7140)
!7142 = !DILocation(line: 72, column: 33, scope: !7140)
!7143 = !DILocation(line: 72, column: 44, scope: !7140)
!7144 = !DILocation(line: 72, column: 37, scope: !7140)
!7145 = !DILocation(line: 73, column: 13, scope: !7140)
!7146 = !DILocation(line: 73, column: 24, scope: !7140)
!7147 = !DILocation(line: 73, column: 17, scope: !7140)
!7148 = !DILocation(line: 73, column: 38, scope: !7140)
!7149 = !DILocation(line: 73, column: 49, scope: !7140)
!7150 = !DILocation(line: 73, column: 42, scope: !7140)
!7151 = !DILocation(line: 72, column: 9, scope: !7113)
!7152 = !DILocation(line: 74, column: 9, scope: !7140)
!7153 = !DILocation(line: 76, column: 12, scope: !7113)
!7154 = !DILocation(line: 76, column: 5, scope: !7113)
!7155 = !DILocation(line: 77, column: 1, scope: !7113)
!7156 = distinct !DISubprogram(name: "parse_long", scope: !567, file: !567, line: 79, type: !7157, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3297, retainedNodes: !286)
!7157 = !DISubroutineType(types: !7158)
!7158 = !{!155, !205, !155}
!7159 = !DILocalVariable(name: "value", arg: 1, scope: !7156, file: !567, line: 79, type: !205)
!7160 = !DILocation(line: 79, column: 29, scope: !7156)
!7161 = !DILocalVariable(name: "default_value", arg: 2, scope: !7156, file: !567, line: 79, type: !155)
!7162 = !DILocation(line: 79, column: 41, scope: !7156)
!7163 = !DILocalVariable(name: "endptr", scope: !7156, file: !567, line: 81, type: !52)
!7164 = !DILocation(line: 81, column: 11, scope: !7156)
!7165 = !DILocalVariable(name: "parsed", scope: !7156, file: !567, line: 82, type: !155)
!7166 = !DILocation(line: 82, column: 10, scope: !7156)
!7167 = !DILocation(line: 84, column: 5, scope: !7156)
!7168 = !DILocation(line: 84, column: 11, scope: !7156)
!7169 = !DILocation(line: 85, column: 21, scope: !7156)
!7170 = !DILocation(line: 85, column: 14, scope: !7156)
!7171 = !DILocation(line: 85, column: 12, scope: !7156)
!7172 = !DILocation(line: 87, column: 9, scope: !7173)
!7173 = distinct !DILexicalBlock(scope: !7156, file: !567, line: 87, column: 9)
!7174 = !DILocation(line: 87, column: 15, scope: !7173)
!7175 = !DILocation(line: 87, column: 9, scope: !7156)
!7176 = !DILocation(line: 88, column: 16, scope: !7173)
!7177 = !DILocation(line: 88, column: 9, scope: !7173)
!7178 = !DILocation(line: 90, column: 10, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !7156, file: !567, line: 90, column: 9)
!7180 = !DILocation(line: 90, column: 9, scope: !7179)
!7181 = !DILocation(line: 90, column: 17, scope: !7179)
!7182 = !DILocation(line: 90, column: 25, scope: !7179)
!7183 = !DILocation(line: 90, column: 28, scope: !7179)
!7184 = !DILocation(line: 90, column: 37, scope: !7179)
!7185 = !DILocation(line: 90, column: 34, scope: !7179)
!7186 = !DILocation(line: 90, column: 9, scope: !7156)
!7187 = !DILocation(line: 91, column: 16, scope: !7179)
!7188 = !DILocation(line: 91, column: 9, scope: !7179)
!7189 = !DILocation(line: 93, column: 12, scope: !7156)
!7190 = !DILocation(line: 93, column: 5, scope: !7156)
!7191 = !DILocation(line: 94, column: 1, scope: !7156)
!7192 = distinct !DISubprogram(name: "config_error", scope: !567, file: !567, line: 96, type: !7193, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3297, retainedNodes: !286)
!7193 = !DISubroutineType(types: !7194)
!7194 = !{!137, !7195, !205, null}
!7195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7196, size: 64)
!7196 = !DIDerivedType(tag: DW_TAG_typedef, name: "config_t", file: !647, line: 32, baseType: !7197)
!7197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "config_t_", file: !647, line: 41, size: 192, elements: !7198)
!7198 = !{!7199, !7245, !7246}
!7199 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !7197, file: !647, line: 42, baseType: !7200, size: 64)
!7200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7201, size: 64)
!7201 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !7202, line: 7, baseType: !7203)
!7202 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "", checksumkind: CSK_MD5, checksum: "571f9fb6223c42439075fdde11a0de5d")
!7203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !7204, line: 49, size: 1728, elements: !7205)
!7204 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "", checksumkind: CSK_MD5, checksum: "1bad07471b7974df4ecc1d1c2ca207e6")
!7205 = !{!7206, !7207, !7208, !7209, !7210, !7211, !7212, !7213, !7214, !7215, !7216, !7217, !7218, !7221, !7223, !7224, !7225, !7226, !7227, !7228, !7229, !7232, !7234, !7237, !7240, !7241, !7242, !7243, !7244}
!7206 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !7203, file: !7204, line: 51, baseType: !34, size: 32)
!7207 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !7203, file: !7204, line: 54, baseType: !52, size: 64, offset: 64)
!7208 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !7203, file: !7204, line: 55, baseType: !52, size: 64, offset: 128)
!7209 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !7203, file: !7204, line: 56, baseType: !52, size: 64, offset: 192)
!7210 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !7203, file: !7204, line: 57, baseType: !52, size: 64, offset: 256)
!7211 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !7203, file: !7204, line: 58, baseType: !52, size: 64, offset: 320)
!7212 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !7203, file: !7204, line: 59, baseType: !52, size: 64, offset: 384)
!7213 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !7203, file: !7204, line: 60, baseType: !52, size: 64, offset: 448)
!7214 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !7203, file: !7204, line: 61, baseType: !52, size: 64, offset: 512)
!7215 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !7203, file: !7204, line: 64, baseType: !52, size: 64, offset: 576)
!7216 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !7203, file: !7204, line: 65, baseType: !52, size: 64, offset: 640)
!7217 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !7203, file: !7204, line: 66, baseType: !52, size: 64, offset: 704)
!7218 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !7203, file: !7204, line: 68, baseType: !7219, size: 64, offset: 768)
!7219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7220, size: 64)
!7220 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !7204, line: 36, flags: DIFlagFwdDecl)
!7221 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !7203, file: !7204, line: 70, baseType: !7222, size: 64, offset: 832)
!7222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7203, size: 64)
!7223 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !7203, file: !7204, line: 72, baseType: !34, size: 32, offset: 896)
!7224 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !7203, file: !7204, line: 73, baseType: !34, size: 32, offset: 928)
!7225 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !7203, file: !7204, line: 74, baseType: !188, size: 64, offset: 960)
!7226 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !7203, file: !7204, line: 77, baseType: !125, size: 16, offset: 1024)
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !7203, file: !7204, line: 78, baseType: !4303, size: 8, offset: 1040)
!7228 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !7203, file: !7204, line: 79, baseType: !1832, size: 8, offset: 1048)
!7229 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !7203, file: !7204, line: 81, baseType: !7230, size: 64, offset: 1088)
!7230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7231, size: 64)
!7231 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !7204, line: 43, baseType: null)
!7232 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !7203, file: !7204, line: 89, baseType: !7233, size: 64, offset: 1152)
!7233 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !154, line: 153, baseType: !155)
!7234 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !7203, file: !7204, line: 91, baseType: !7235, size: 64, offset: 1216)
!7235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7236, size: 64)
!7236 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !7204, line: 37, flags: DIFlagFwdDecl)
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !7203, file: !7204, line: 92, baseType: !7238, size: 64, offset: 1280)
!7238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7239, size: 64)
!7239 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !7204, line: 38, flags: DIFlagFwdDecl)
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !7203, file: !7204, line: 93, baseType: !7222, size: 64, offset: 1344)
!7241 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !7203, file: !7204, line: 94, baseType: !111, size: 64, offset: 1408)
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !7203, file: !7204, line: 95, baseType: !55, size: 64, offset: 1472)
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !7203, file: !7204, line: 96, baseType: !34, size: 32, offset: 1536)
!7244 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !7203, file: !7204, line: 98, baseType: !263, size: 160, offset: 1568)
!7245 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !7197, file: !647, line: 43, baseType: !34, size: 32, offset: 64)
!7246 = !DIDerivedType(tag: DW_TAG_member, name: "error_message", scope: !7197, file: !647, line: 44, baseType: !52, size: 64, offset: 128)
!7247 = !DILocalVariable(name: "conf", arg: 1, scope: !7192, file: !567, line: 96, type: !7195)
!7248 = !DILocation(line: 96, column: 29, scope: !7192)
!7249 = !DILocalVariable(name: "fmt", arg: 2, scope: !7192, file: !567, line: 96, type: !205)
!7250 = !DILocation(line: 96, column: 47, scope: !7192)
!7251 = !DILocalVariable(name: "values", scope: !7192, file: !567, line: 98, type: !7252)
!7252 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2964, line: 52, baseType: !7253)
!7253 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !6113, line: 14, baseType: !7254)
!7254 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7255, baseType: !7256)
!7255 = !DIFile(filename: "common/lwan-config.c", directory: "/home/raj/lwan")
!7256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7257, size: 192, elements: !1833)
!7257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", size: 192, elements: !7258)
!7258 = !{!7259, !7260, !7261, !7262}
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !7257, file: !7255, line: 98, baseType: !9, size: 32)
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !7257, file: !7255, line: 98, baseType: !9, size: 32, offset: 32)
!7261 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !7257, file: !7255, line: 98, baseType: !111, size: 64, offset: 64)
!7262 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !7257, file: !7255, line: 98, baseType: !111, size: 64, offset: 128)
!7263 = !DILocation(line: 98, column: 13, scope: !7192)
!7264 = !DILocalVariable(name: "len", scope: !7192, file: !567, line: 99, type: !34)
!7265 = !DILocation(line: 99, column: 9, scope: !7192)
!7266 = !DILocalVariable(name: "output", scope: !7192, file: !567, line: 100, type: !52)
!7267 = !DILocation(line: 100, column: 11, scope: !7192)
!7268 = !DILocation(line: 102, column: 9, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !7192, file: !567, line: 102, column: 9)
!7270 = !DILocation(line: 102, column: 15, scope: !7269)
!7271 = !DILocation(line: 102, column: 9, scope: !7192)
!7272 = !DILocation(line: 103, column: 9, scope: !7269)
!7273 = !DILocation(line: 105, column: 5, scope: !7192)
!7274 = !DILocation(line: 106, column: 30, scope: !7192)
!7275 = !DILocation(line: 106, column: 35, scope: !7192)
!7276 = !DILocation(line: 106, column: 11, scope: !7192)
!7277 = !DILocation(line: 106, column: 9, scope: !7192)
!7278 = !DILocation(line: 107, column: 5, scope: !7192)
!7279 = !DILocation(line: 109, column: 9, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7192, file: !567, line: 109, column: 9)
!7281 = !DILocation(line: 109, column: 13, scope: !7280)
!7282 = !DILocation(line: 109, column: 9, scope: !7192)
!7283 = !DILocation(line: 110, column: 31, scope: !7284)
!7284 = distinct !DILexicalBlock(scope: !7280, file: !567, line: 109, column: 19)
!7285 = !DILocation(line: 110, column: 9, scope: !7284)
!7286 = !DILocation(line: 110, column: 15, scope: !7284)
!7287 = !DILocation(line: 110, column: 29, scope: !7284)
!7288 = !DILocation(line: 111, column: 9, scope: !7284)
!7289 = !DILocation(line: 114, column: 5, scope: !7192)
!7290 = !DILocation(line: 114, column: 11, scope: !7192)
!7291 = !DILocation(line: 114, column: 25, scope: !7192)
!7292 = !DILocation(line: 115, column: 5, scope: !7192)
!7293 = !DILocation(line: 116, column: 1, scope: !7192)
!7294 = distinct !DISubprogram(name: "config_read_line", scope: !567, file: !567, line: 183, type: !7295, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3297, retainedNodes: !286)
!7295 = !DISubroutineType(types: !7296)
!7296 = !{!137, !7195, !7297}
!7297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7298, size: 64)
!7298 = !DIDerivedType(tag: DW_TAG_typedef, name: "config_line_t", file: !647, line: 33, baseType: !7299)
!7299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "config_line_t_", file: !647, line: 47, size: 8384, elements: !7300)
!7300 = !{!7301, !7314, !7316}
!7301 = !DIDerivedType(tag: DW_TAG_member, scope: !7299, file: !647, line: 48, baseType: !7302, size: 128)
!7302 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7299, file: !647, line: 48, size: 128, elements: !7303)
!7303 = !{!7304, !7309}
!7304 = !DIDerivedType(tag: DW_TAG_member, name: "section", scope: !7302, file: !647, line: 51, baseType: !7305, size: 128)
!7305 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7302, file: !647, line: 49, size: 128, elements: !7306)
!7306 = !{!7307, !7308}
!7307 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7305, file: !647, line: 50, baseType: !52, size: 64)
!7308 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !7305, file: !647, line: 50, baseType: !52, size: 64, offset: 64)
!7309 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !7302, file: !647, line: 54, baseType: !7310, size: 128)
!7310 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7302, file: !647, line: 52, size: 128, elements: !7311)
!7311 = !{!7312, !7313}
!7312 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !7310, file: !647, line: 53, baseType: !52, size: 64)
!7313 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !7310, file: !647, line: 53, baseType: !52, size: 64, offset: 64)
!7314 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7299, file: !647, line: 56, baseType: !7315, size: 32, offset: 128)
!7315 = !DIDerivedType(tag: DW_TAG_typedef, name: "config_line_type_t", file: !647, line: 39, baseType: !646)
!7316 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !7299, file: !647, line: 57, baseType: !7317, size: 8192, offset: 160)
!7317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 8192, elements: !7318)
!7318 = !{!7319}
!7319 = !DISubrange(count: 1024)
!7320 = !DILocalVariable(name: "conf", arg: 1, scope: !7294, file: !567, line: 183, type: !7195)
!7321 = !DILocation(line: 183, column: 33, scope: !7294)
!7322 = !DILocalVariable(name: "l", arg: 2, scope: !7294, file: !567, line: 183, type: !7297)
!7323 = !DILocation(line: 183, column: 54, scope: !7294)
!7324 = !DILocalVariable(name: "line", scope: !7294, file: !567, line: 185, type: !52)
!7325 = !DILocation(line: 185, column: 11, scope: !7294)
!7326 = !DILocalVariable(name: "line_end", scope: !7294, file: !567, line: 185, type: !52)
!7327 = !DILocation(line: 185, column: 18, scope: !7294)
!7328 = !DILocation(line: 187, column: 9, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !7294, file: !567, line: 187, column: 9)
!7330 = !DILocation(line: 187, column: 15, scope: !7329)
!7331 = !DILocation(line: 187, column: 9, scope: !7294)
!7332 = !DILocation(line: 188, column: 9, scope: !7329)
!7333 = !DILabel(scope: !7294, name: "retry", file: !567, line: 190)
!7334 = !DILocation(line: 190, column: 1, scope: !7294)
!7335 = !DILocation(line: 191, column: 16, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7294, file: !567, line: 191, column: 9)
!7337 = !DILocation(line: 191, column: 19, scope: !7336)
!7338 = !DILocation(line: 191, column: 46, scope: !7336)
!7339 = !DILocation(line: 191, column: 52, scope: !7336)
!7340 = !DILocation(line: 191, column: 10, scope: !7336)
!7341 = !DILocation(line: 191, column: 9, scope: !7294)
!7342 = !DILocation(line: 192, column: 9, scope: !7336)
!7343 = !DILocation(line: 194, column: 5, scope: !7294)
!7344 = !DILocation(line: 194, column: 11, scope: !7294)
!7345 = !DILocation(line: 194, column: 15, scope: !7294)
!7346 = !DILocation(line: 196, column: 28, scope: !7294)
!7347 = !DILocation(line: 196, column: 31, scope: !7294)
!7348 = !DILocation(line: 196, column: 12, scope: !7294)
!7349 = !DILocation(line: 196, column: 10, scope: !7294)
!7350 = !DILocation(line: 197, column: 34, scope: !7294)
!7351 = !DILocation(line: 197, column: 12, scope: !7294)
!7352 = !DILocation(line: 197, column: 10, scope: !7294)
!7353 = !DILocation(line: 198, column: 35, scope: !7294)
!7354 = !DILocation(line: 198, column: 12, scope: !7294)
!7355 = !DILocation(line: 198, column: 10, scope: !7294)
!7356 = !DILocation(line: 199, column: 30, scope: !7294)
!7357 = !DILocation(line: 199, column: 16, scope: !7294)
!7358 = !DILocation(line: 199, column: 14, scope: !7294)
!7359 = !DILocation(line: 201, column: 10, scope: !7360)
!7360 = distinct !DILexicalBlock(scope: !7294, file: !567, line: 201, column: 9)
!7361 = !DILocation(line: 201, column: 9, scope: !7360)
!7362 = !DILocation(line: 201, column: 19, scope: !7360)
!7363 = !DILocation(line: 201, column: 9, scope: !7294)
!7364 = !DILocation(line: 202, column: 28, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7366, file: !567, line: 202, column: 13)
!7366 = distinct !DILexicalBlock(scope: !7360, file: !567, line: 201, column: 27)
!7367 = !DILocation(line: 202, column: 34, scope: !7365)
!7368 = !DILocation(line: 202, column: 14, scope: !7365)
!7369 = !DILocation(line: 202, column: 13, scope: !7366)
!7370 = !DILocation(line: 203, column: 26, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7365, file: !567, line: 202, column: 38)
!7372 = !DILocation(line: 203, column: 13, scope: !7371)
!7373 = !DILocation(line: 204, column: 13, scope: !7371)
!7374 = !DILocation(line: 206, column: 5, scope: !7366)
!7375 = !DILocation(line: 206, column: 17, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !7360, file: !567, line: 206, column: 16)
!7377 = !DILocation(line: 206, column: 16, scope: !7376)
!7378 = !DILocation(line: 206, column: 22, scope: !7376)
!7379 = !DILocation(line: 206, column: 16, scope: !7360)
!7380 = !DILocation(line: 207, column: 9, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7376, file: !567, line: 206, column: 31)
!7382 = !DILocation(line: 208, column: 17, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7376, file: !567, line: 208, column: 16)
!7384 = !DILocation(line: 208, column: 16, scope: !7383)
!7385 = !DILocation(line: 208, column: 22, scope: !7383)
!7386 = !DILocation(line: 208, column: 29, scope: !7383)
!7387 = !DILocation(line: 208, column: 32, scope: !7383)
!7388 = !DILocation(line: 208, column: 40, scope: !7383)
!7389 = !DILocation(line: 208, column: 37, scope: !7383)
!7390 = !DILocation(line: 208, column: 16, scope: !7376)
!7391 = !DILocation(line: 209, column: 9, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7383, file: !567, line: 208, column: 50)
!7393 = !DILocation(line: 209, column: 12, scope: !7392)
!7394 = !DILocation(line: 209, column: 17, scope: !7392)
!7395 = !DILocation(line: 210, column: 5, scope: !7392)
!7396 = !DILocalVariable(name: "equal", scope: !7397, file: !567, line: 211, type: !52)
!7397 = distinct !DILexicalBlock(scope: !7383, file: !567, line: 210, column: 12)
!7398 = !DILocation(line: 211, column: 15, scope: !7397)
!7399 = !DILocation(line: 211, column: 30, scope: !7397)
!7400 = !DILocation(line: 211, column: 23, scope: !7397)
!7401 = !DILocation(line: 212, column: 13, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !7397, file: !567, line: 212, column: 13)
!7403 = !DILocation(line: 212, column: 13, scope: !7397)
!7404 = !DILocation(line: 213, column: 29, scope: !7405)
!7405 = distinct !DILexicalBlock(scope: !7406, file: !567, line: 213, column: 17)
!7406 = distinct !DILexicalBlock(scope: !7402, file: !567, line: 212, column: 20)
!7407 = !DILocation(line: 213, column: 35, scope: !7405)
!7408 = !DILocation(line: 213, column: 38, scope: !7405)
!7409 = !DILocation(line: 213, column: 18, scope: !7405)
!7410 = !DILocation(line: 213, column: 17, scope: !7406)
!7411 = !DILocation(line: 214, column: 30, scope: !7412)
!7412 = distinct !DILexicalBlock(scope: !7405, file: !567, line: 213, column: 46)
!7413 = !DILocation(line: 214, column: 17, scope: !7412)
!7414 = !DILocation(line: 215, column: 17, scope: !7412)
!7415 = !DILocation(line: 217, column: 9, scope: !7406)
!7416 = !DILocation(line: 218, column: 26, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7402, file: !567, line: 217, column: 16)
!7418 = !DILocation(line: 218, column: 13, scope: !7417)
!7419 = !DILocation(line: 219, column: 13, scope: !7417)
!7420 = !DILocation(line: 223, column: 5, scope: !7294)
!7421 = !DILocation(line: 224, column: 1, scope: !7294)
!7422 = distinct !DISubprogram(name: "remove_comments", scope: !567, file: !567, line: 118, type: !7423, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3297, retainedNodes: !286)
!7423 = !DISubroutineType(types: !7424)
!7424 = !{!52, !52}
!7425 = !DILocalVariable(name: "line", arg: 1, scope: !7422, file: !567, line: 118, type: !52)
!7426 = !DILocation(line: 118, column: 36, scope: !7422)
!7427 = !DILocalVariable(name: "tmp", scope: !7422, file: !567, line: 120, type: !52)
!7428 = !DILocation(line: 120, column: 11, scope: !7422)
!7429 = !DILocation(line: 120, column: 25, scope: !7422)
!7430 = !DILocation(line: 120, column: 17, scope: !7422)
!7431 = !DILocation(line: 121, column: 9, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7422, file: !567, line: 121, column: 9)
!7433 = !DILocation(line: 121, column: 9, scope: !7422)
!7434 = !DILocation(line: 122, column: 10, scope: !7432)
!7435 = !DILocation(line: 122, column: 14, scope: !7432)
!7436 = !DILocation(line: 122, column: 9, scope: !7432)
!7437 = !DILocation(line: 123, column: 12, scope: !7422)
!7438 = !DILocation(line: 123, column: 5, scope: !7422)
!7439 = distinct !DISubprogram(name: "remove_leading_spaces", scope: !567, file: !567, line: 136, type: !7423, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3297, retainedNodes: !286)
!7440 = !DILocalVariable(name: "line", arg: 1, scope: !7439, file: !567, line: 136, type: !52)
!7441 = !DILocation(line: 136, column: 42, scope: !7439)
!7442 = !DILocation(line: 138, column: 5, scope: !7439)
!7443 = !DILocation(line: 138, column: 12, scope: !7439)
!7444 = !DILocation(line: 139, column: 13, scope: !7439)
!7445 = distinct !{!7445, !7442, !7444, !3413}
!7446 = !DILocation(line: 140, column: 12, scope: !7439)
!7447 = !DILocation(line: 140, column: 5, scope: !7439)
!7448 = distinct !DISubprogram(name: "remove_trailing_spaces", scope: !567, file: !567, line: 126, type: !7423, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3297, retainedNodes: !286)
!7449 = !DILocalVariable(name: "line", arg: 1, scope: !7448, file: !567, line: 126, type: !52)
!7450 = !DILocation(line: 126, column: 43, scope: !7448)
!7451 = !DILocalVariable(name: "end", scope: !7448, file: !567, line: 128, type: !52)
!7452 = !DILocation(line: 128, column: 11, scope: !7448)
!7453 = !DILocation(line: 128, column: 27, scope: !7448)
!7454 = !DILocation(line: 128, column: 17, scope: !7448)
!7455 = !DILocation(line: 130, column: 13, scope: !7456)
!7456 = distinct !DILexicalBlock(scope: !7448, file: !567, line: 130, column: 5)
!7457 = !DILocation(line: 130, column: 10, scope: !7456)
!7458 = !DILocation(line: 130, column: 17, scope: !7459)
!7459 = distinct !DILexicalBlock(scope: !7456, file: !567, line: 130, column: 5)
!7460 = !DILocation(line: 130, column: 5, scope: !7456)
!7461 = !DILocation(line: 130, column: 35, scope: !7459)
!7462 = !DILocation(line: 130, column: 5, scope: !7459)
!7463 = distinct !{!7463, !7460, !7464, !3413}
!7464 = !DILocation(line: 130, column: 38, scope: !7456)
!7465 = !DILocation(line: 131, column: 7, scope: !7448)
!7466 = !DILocation(line: 131, column: 11, scope: !7448)
!7467 = !DILocation(line: 131, column: 16, scope: !7448)
!7468 = !DILocation(line: 133, column: 12, scope: !7448)
!7469 = !DILocation(line: 133, column: 5, scope: !7448)
!7470 = distinct !DISubprogram(name: "find_line_end", scope: !567, file: !567, line: 143, type: !7423, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3297, retainedNodes: !286)
!7471 = !DILocalVariable(name: "line", arg: 1, scope: !7470, file: !567, line: 143, type: !52)
!7472 = !DILocation(line: 143, column: 34, scope: !7470)
!7473 = !DILocation(line: 145, column: 10, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7470, file: !567, line: 145, column: 9)
!7475 = !DILocation(line: 145, column: 9, scope: !7474)
!7476 = !DILocation(line: 145, column: 15, scope: !7474)
!7477 = !DILocation(line: 145, column: 9, scope: !7470)
!7478 = !DILocation(line: 146, column: 16, scope: !7474)
!7479 = !DILocation(line: 146, column: 9, scope: !7474)
!7480 = !DILocation(line: 147, column: 30, scope: !7470)
!7481 = !DILocation(line: 147, column: 20, scope: !7470)
!7482 = !DILocation(line: 147, column: 42, scope: !7470)
!7483 = !DILocation(line: 147, column: 5, scope: !7470)
!7484 = !DILocation(line: 148, column: 1, scope: !7470)
!7485 = distinct !DISubprogram(name: "parse_section", scope: !567, file: !567, line: 150, type: !7486, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3297, retainedNodes: !286)
!7486 = !DISubroutineType(types: !7487)
!7487 = !{!137, !52, !7297}
!7488 = !DILocalVariable(name: "line", arg: 1, scope: !7485, file: !567, line: 150, type: !52)
!7489 = !DILocation(line: 150, column: 33, scope: !7485)
!7490 = !DILocalVariable(name: "l", arg: 2, scope: !7485, file: !567, line: 150, type: !7297)
!7491 = !DILocation(line: 150, column: 54, scope: !7485)
!7492 = !DILocalVariable(name: "name", scope: !7485, file: !567, line: 152, type: !52)
!7493 = !DILocation(line: 152, column: 11, scope: !7485)
!7494 = !DILocalVariable(name: "param", scope: !7485, file: !567, line: 152, type: !52)
!7495 = !DILocation(line: 152, column: 18, scope: !7485)
!7496 = !DILocalVariable(name: "bracket", scope: !7485, file: !567, line: 153, type: !52)
!7497 = !DILocation(line: 153, column: 11, scope: !7485)
!7498 = !DILocation(line: 153, column: 29, scope: !7485)
!7499 = !DILocation(line: 153, column: 21, scope: !7485)
!7500 = !DILocation(line: 154, column: 10, scope: !7501)
!7501 = distinct !DILexicalBlock(scope: !7485, file: !567, line: 154, column: 9)
!7502 = !DILocation(line: 154, column: 9, scope: !7485)
!7503 = !DILocation(line: 155, column: 9, scope: !7501)
!7504 = !DILocalVariable(name: "space", scope: !7485, file: !567, line: 157, type: !52)
!7505 = !DILocation(line: 157, column: 11, scope: !7485)
!7506 = !DILocation(line: 157, column: 26, scope: !7485)
!7507 = !DILocation(line: 157, column: 19, scope: !7485)
!7508 = !DILocation(line: 158, column: 10, scope: !7509)
!7509 = distinct !DILexicalBlock(scope: !7485, file: !567, line: 158, column: 9)
!7510 = !DILocation(line: 158, column: 9, scope: !7485)
!7511 = !DILocation(line: 159, column: 9, scope: !7509)
!7512 = !DILocation(line: 161, column: 6, scope: !7485)
!7513 = !DILocation(line: 161, column: 14, scope: !7485)
!7514 = !DILocation(line: 162, column: 6, scope: !7485)
!7515 = !DILocation(line: 162, column: 12, scope: !7485)
!7516 = !DILocation(line: 163, column: 57, scope: !7485)
!7517 = !DILocation(line: 163, column: 35, scope: !7485)
!7518 = !DILocation(line: 163, column: 12, scope: !7485)
!7519 = !DILocation(line: 163, column: 10, scope: !7485)
!7520 = !DILocation(line: 164, column: 58, scope: !7485)
!7521 = !DILocation(line: 164, column: 64, scope: !7485)
!7522 = !DILocation(line: 164, column: 36, scope: !7485)
!7523 = !DILocation(line: 164, column: 13, scope: !7485)
!7524 = !DILocation(line: 164, column: 11, scope: !7485)
!7525 = !DILocation(line: 166, column: 23, scope: !7485)
!7526 = !DILocation(line: 166, column: 5, scope: !7485)
!7527 = !DILocation(line: 166, column: 8, scope: !7485)
!7528 = !DILocation(line: 166, column: 16, scope: !7485)
!7529 = !DILocation(line: 166, column: 21, scope: !7485)
!7530 = !DILocation(line: 167, column: 24, scope: !7485)
!7531 = !DILocation(line: 167, column: 5, scope: !7485)
!7532 = !DILocation(line: 167, column: 8, scope: !7485)
!7533 = !DILocation(line: 167, column: 16, scope: !7485)
!7534 = !DILocation(line: 167, column: 22, scope: !7485)
!7535 = !DILocation(line: 168, column: 5, scope: !7485)
!7536 = !DILocation(line: 168, column: 8, scope: !7485)
!7537 = !DILocation(line: 168, column: 13, scope: !7485)
!7538 = !DILocation(line: 170, column: 5, scope: !7485)
!7539 = !DILocation(line: 171, column: 1, scope: !7485)
!7540 = distinct !DISubprogram(name: "parse_line", scope: !567, file: !567, line: 173, type: !7541, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3297, retainedNodes: !286)
!7541 = !DISubroutineType(types: !7542)
!7542 = !{!137, !52, !7297, !52}
!7543 = !DILocalVariable(name: "line", arg: 1, scope: !7540, file: !567, line: 173, type: !52)
!7544 = !DILocation(line: 173, column: 30, scope: !7540)
!7545 = !DILocalVariable(name: "l", arg: 2, scope: !7540, file: !567, line: 173, type: !7297)
!7546 = !DILocation(line: 173, column: 51, scope: !7540)
!7547 = !DILocalVariable(name: "equal", arg: 3, scope: !7540, file: !567, line: 173, type: !52)
!7548 = !DILocation(line: 173, column: 60, scope: !7540)
!7549 = !DILocation(line: 175, column: 6, scope: !7540)
!7550 = !DILocation(line: 175, column: 12, scope: !7540)
!7551 = !DILocation(line: 176, column: 64, scope: !7540)
!7552 = !DILocation(line: 176, column: 42, scope: !7540)
!7553 = !DILocation(line: 176, column: 19, scope: !7540)
!7554 = !DILocation(line: 176, column: 5, scope: !7540)
!7555 = !DILocation(line: 176, column: 8, scope: !7540)
!7556 = !DILocation(line: 176, column: 13, scope: !7540)
!7557 = !DILocation(line: 176, column: 17, scope: !7540)
!7558 = !DILocation(line: 177, column: 43, scope: !7540)
!7559 = !DILocation(line: 177, column: 49, scope: !7540)
!7560 = !DILocation(line: 177, column: 21, scope: !7540)
!7561 = !DILocation(line: 177, column: 5, scope: !7540)
!7562 = !DILocation(line: 177, column: 8, scope: !7540)
!7563 = !DILocation(line: 177, column: 13, scope: !7540)
!7564 = !DILocation(line: 177, column: 19, scope: !7540)
!7565 = !DILocation(line: 178, column: 5, scope: !7540)
!7566 = !DILocation(line: 178, column: 8, scope: !7540)
!7567 = !DILocation(line: 178, column: 13, scope: !7540)
!7568 = !DILocation(line: 180, column: 5, scope: !7540)
!7569 = distinct !DISubprogram(name: "config_open", scope: !567, file: !567, line: 226, type: !7570, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3297, retainedNodes: !286)
!7570 = !DISubroutineType(types: !7571)
!7571 = !{!137, !7195, !205}
!7572 = !DILocalVariable(name: "conf", arg: 1, scope: !7569, file: !567, line: 226, type: !7195)
!7573 = !DILocation(line: 226, column: 28, scope: !7569)
!7574 = !DILocalVariable(name: "path", arg: 2, scope: !7569, file: !567, line: 226, type: !205)
!7575 = !DILocation(line: 226, column: 46, scope: !7569)
!7576 = !DILocation(line: 228, column: 10, scope: !7577)
!7577 = distinct !DILexicalBlock(scope: !7569, file: !567, line: 228, column: 9)
!7578 = !DILocation(line: 228, column: 9, scope: !7569)
!7579 = !DILocation(line: 229, column: 9, scope: !7577)
!7580 = !DILocation(line: 230, column: 10, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !7569, file: !567, line: 230, column: 9)
!7582 = !DILocation(line: 230, column: 9, scope: !7569)
!7583 = !DILocation(line: 231, column: 9, scope: !7581)
!7584 = !DILocation(line: 232, column: 24, scope: !7569)
!7585 = !DILocation(line: 232, column: 18, scope: !7569)
!7586 = !DILocation(line: 232, column: 5, scope: !7569)
!7587 = !DILocation(line: 232, column: 11, scope: !7569)
!7588 = !DILocation(line: 232, column: 16, scope: !7569)
!7589 = !DILocation(line: 233, column: 10, scope: !7590)
!7590 = distinct !DILexicalBlock(scope: !7569, file: !567, line: 233, column: 9)
!7591 = !DILocation(line: 233, column: 16, scope: !7590)
!7592 = !DILocation(line: 233, column: 9, scope: !7569)
!7593 = !DILocation(line: 234, column: 9, scope: !7590)
!7594 = !DILocation(line: 235, column: 5, scope: !7569)
!7595 = !DILocation(line: 235, column: 11, scope: !7569)
!7596 = !DILocation(line: 235, column: 16, scope: !7569)
!7597 = !DILocation(line: 236, column: 5, scope: !7569)
!7598 = !DILocation(line: 236, column: 11, scope: !7569)
!7599 = !DILocation(line: 236, column: 25, scope: !7569)
!7600 = !DILocation(line: 237, column: 5, scope: !7569)
!7601 = !DILocation(line: 238, column: 1, scope: !7569)
!7602 = distinct !DISubprogram(name: "config_close", scope: !567, file: !567, line: 240, type: !7603, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3297, retainedNodes: !286)
!7603 = !DISubroutineType(types: !7604)
!7604 = !{null, !7195}
!7605 = !DILocalVariable(name: "conf", arg: 1, scope: !7602, file: !567, line: 240, type: !7195)
!7606 = !DILocation(line: 240, column: 29, scope: !7602)
!7607 = !DILocation(line: 242, column: 10, scope: !7608)
!7608 = distinct !DILexicalBlock(scope: !7602, file: !567, line: 242, column: 9)
!7609 = !DILocation(line: 242, column: 9, scope: !7602)
!7610 = !DILocation(line: 243, column: 9, scope: !7608)
!7611 = !DILocation(line: 244, column: 10, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7602, file: !567, line: 244, column: 9)
!7613 = !DILocation(line: 244, column: 16, scope: !7612)
!7614 = !DILocation(line: 244, column: 9, scope: !7602)
!7615 = !DILocation(line: 245, column: 9, scope: !7612)
!7616 = !DILocation(line: 246, column: 12, scope: !7602)
!7617 = !DILocation(line: 246, column: 18, scope: !7602)
!7618 = !DILocation(line: 246, column: 5, scope: !7602)
!7619 = !DILocation(line: 247, column: 10, scope: !7602)
!7620 = !DILocation(line: 247, column: 16, scope: !7602)
!7621 = !DILocation(line: 247, column: 5, scope: !7602)
!7622 = !DILocation(line: 248, column: 1, scope: !7602)
!7623 = distinct !DISubprogram(name: "coro_reset", scope: !612, file: !612, line: 164, type: !7624, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3302, retainedNodes: !286)
!7624 = !DISubroutineType(types: !7625)
!7625 = !{null, !6930, !7626, !111}
!7626 = !DIDerivedType(tag: DW_TAG_typedef, name: "coro_function_t", file: !78, line: 37, baseType: !7627)
!7627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7628, size: 64)
!7628 = !DISubroutineType(types: !7629)
!7629 = !{!34, !6930}
!7630 = !DILocalVariable(name: "coro", arg: 1, scope: !7623, file: !612, line: 164, type: !6930)
!7631 = !DILocation(line: 164, column: 20, scope: !7623)
!7632 = !DILocalVariable(name: "func", arg: 2, scope: !7623, file: !612, line: 164, type: !7626)
!7633 = !DILocation(line: 164, column: 42, scope: !7623)
!7634 = !DILocalVariable(name: "data", arg: 3, scope: !7623, file: !612, line: 164, type: !111)
!7635 = !DILocation(line: 164, column: 54, scope: !7623)
!7636 = !DILocalVariable(name: "stack", scope: !7623, file: !612, line: 166, type: !674)
!7637 = !DILocation(line: 166, column: 20, scope: !7623)
!7638 = !DILocation(line: 166, column: 46, scope: !7623)
!7639 = !DILocation(line: 166, column: 51, scope: !7623)
!7640 = !DILocation(line: 168, column: 5, scope: !7623)
!7641 = !DILocation(line: 168, column: 11, scope: !7623)
!7642 = !DILocation(line: 168, column: 17, scope: !7623)
!7643 = !DILocation(line: 169, column: 18, scope: !7623)
!7644 = !DILocation(line: 169, column: 5, scope: !7623)
!7645 = !DILocation(line: 169, column: 11, scope: !7623)
!7646 = !DILocation(line: 169, column: 16, scope: !7623)
!7647 = !DILocation(line: 171, column: 23, scope: !7623)
!7648 = !DILocation(line: 171, column: 5, scope: !7623)
!7649 = !DILocation(line: 174, column: 46, scope: !7623)
!7650 = !DILocation(line: 174, column: 34, scope: !7623)
!7651 = !DILocation(line: 174, column: 5, scope: !7623)
!7652 = !DILocation(line: 174, column: 11, scope: !7623)
!7653 = !DILocation(line: 174, column: 32, scope: !7623)
!7654 = !DILocation(line: 175, column: 46, scope: !7623)
!7655 = !DILocation(line: 175, column: 34, scope: !7623)
!7656 = !DILocation(line: 175, column: 5, scope: !7623)
!7657 = !DILocation(line: 175, column: 11, scope: !7623)
!7658 = !DILocation(line: 175, column: 32, scope: !7623)
!7659 = !DILocation(line: 176, column: 5, scope: !7623)
!7660 = !DILocation(line: 176, column: 11, scope: !7623)
!7661 = !DILocation(line: 176, column: 32, scope: !7623)
!7662 = !DILocation(line: 177, column: 46, scope: !7623)
!7663 = !DILocation(line: 177, column: 34, scope: !7623)
!7664 = !DILocation(line: 177, column: 54, scope: !7623)
!7665 = !DILocation(line: 177, column: 52, scope: !7623)
!7666 = !DILocation(line: 177, column: 5, scope: !7623)
!7667 = !DILocation(line: 177, column: 11, scope: !7623)
!7668 = !DILocation(line: 177, column: 32, scope: !7623)
!7669 = !DILocation(line: 200, column: 1, scope: !7623)
!7670 = distinct !DISubprogram(name: "coro_run_deferred", scope: !612, file: !612, line: 152, type: !7671, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3302, retainedNodes: !286)
!7671 = !DISubroutineType(types: !7672)
!7672 = !{null, !6930}
!7673 = !DILocalVariable(name: "coro", arg: 1, scope: !7670, file: !612, line: 152, type: !6930)
!7674 = !DILocation(line: 152, column: 27, scope: !7670)
!7675 = !DILocalVariable(name: "defer", scope: !7676, file: !612, line: 154, type: !6946)
!7676 = distinct !DILexicalBlock(scope: !7670, file: !612, line: 154, column: 5)
!7677 = !DILocation(line: 154, column: 24, scope: !7676)
!7678 = !DILocation(line: 154, column: 32, scope: !7676)
!7679 = !DILocation(line: 154, column: 38, scope: !7676)
!7680 = !DILocation(line: 154, column: 10, scope: !7676)
!7681 = !DILocation(line: 154, column: 45, scope: !7682)
!7682 = distinct !DILexicalBlock(scope: !7676, file: !612, line: 154, column: 5)
!7683 = !DILocation(line: 154, column: 5, scope: !7676)
!7684 = !DILocalVariable(name: "tmp", scope: !7685, file: !612, line: 155, type: !6946)
!7685 = distinct !DILexicalBlock(scope: !7682, file: !612, line: 154, column: 53)
!7686 = !DILocation(line: 155, column: 23, scope: !7685)
!7687 = !DILocation(line: 155, column: 29, scope: !7685)
!7688 = !DILocation(line: 156, column: 9, scope: !7685)
!7689 = !DILocation(line: 156, column: 16, scope: !7685)
!7690 = !DILocation(line: 156, column: 21, scope: !7685)
!7691 = !DILocation(line: 156, column: 28, scope: !7685)
!7692 = !DILocation(line: 156, column: 35, scope: !7685)
!7693 = !DILocation(line: 156, column: 42, scope: !7685)
!7694 = !DILocation(line: 157, column: 17, scope: !7685)
!7695 = !DILocation(line: 157, column: 22, scope: !7685)
!7696 = !DILocation(line: 157, column: 15, scope: !7685)
!7697 = !DILocation(line: 158, column: 14, scope: !7685)
!7698 = !DILocation(line: 158, column: 9, scope: !7685)
!7699 = !DILocation(line: 154, column: 5, scope: !7682)
!7700 = distinct !{!7700, !7683, !7701, !3413}
!7701 = !DILocation(line: 159, column: 5, scope: !7676)
!7702 = !DILocation(line: 160, column: 5, scope: !7670)
!7703 = !DILocation(line: 160, column: 11, scope: !7670)
!7704 = !DILocation(line: 160, column: 17, scope: !7670)
!7705 = !DILocation(line: 161, column: 1, scope: !7670)
!7706 = distinct !DISubprogram(name: "coro_entry_point", scope: !612, file: !612, line: 144, type: !7707, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3302, retainedNodes: !286)
!7707 = !DISubroutineType(types: !7708)
!7708 = !{null, !6930, !7626}
!7709 = !DILocalVariable(name: "coro", arg: 1, scope: !7706, file: !612, line: 144, type: !6930)
!7710 = !DILocation(line: 144, column: 26, scope: !7706)
!7711 = !DILocalVariable(name: "func", arg: 2, scope: !7706, file: !612, line: 144, type: !7626)
!7712 = !DILocation(line: 144, column: 48, scope: !7706)
!7713 = !DILocalVariable(name: "return_value", scope: !7706, file: !612, line: 146, type: !34)
!7714 = !DILocation(line: 146, column: 9, scope: !7706)
!7715 = !DILocation(line: 146, column: 24, scope: !7706)
!7716 = !DILocation(line: 146, column: 29, scope: !7706)
!7717 = !DILocation(line: 147, column: 5, scope: !7706)
!7718 = !DILocation(line: 147, column: 11, scope: !7706)
!7719 = !DILocation(line: 147, column: 17, scope: !7706)
!7720 = !DILocation(line: 148, column: 16, scope: !7706)
!7721 = !DILocation(line: 148, column: 22, scope: !7706)
!7722 = !DILocation(line: 265, column: 20, scope: !6973, inlinedAt: !7723)
!7723 = distinct !DILocation(line: 148, column: 5, scope: !7706)
!7724 = !DILocation(line: 265, column: 30, scope: !6973, inlinedAt: !7723)
!7725 = !DILocation(line: 267, column: 5, scope: !6981, inlinedAt: !7723)
!7726 = !DILocation(line: 267, column: 5, scope: !6982, inlinedAt: !7723)
!7727 = !DILocation(line: 268, column: 25, scope: !6973, inlinedAt: !7723)
!7728 = !DILocation(line: 268, column: 5, scope: !6973, inlinedAt: !7723)
!7729 = !DILocation(line: 268, column: 11, scope: !6973, inlinedAt: !7723)
!7730 = !DILocation(line: 268, column: 23, scope: !6973, inlinedAt: !7723)
!7731 = !DILocation(line: 269, column: 23, scope: !6973, inlinedAt: !7723)
!7732 = !DILocation(line: 269, column: 29, scope: !6973, inlinedAt: !7723)
!7733 = !DILocation(line: 269, column: 39, scope: !6973, inlinedAt: !7723)
!7734 = !DILocation(line: 269, column: 48, scope: !6973, inlinedAt: !7723)
!7735 = !DILocation(line: 269, column: 54, scope: !6973, inlinedAt: !7723)
!7736 = !DILocation(line: 269, column: 5, scope: !6973, inlinedAt: !7723)
!7737 = !DILocation(line: 270, column: 12, scope: !6973, inlinedAt: !7723)
!7738 = !DILocation(line: 270, column: 18, scope: !6973, inlinedAt: !7723)
!7739 = !DILocation(line: 149, column: 1, scope: !7706)
!7740 = distinct !DISubprogram(name: "coro_new", scope: !612, file: !612, line: 203, type: !7741, scopeLine: 204, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3302, retainedNodes: !286)
!7741 = !DISubroutineType(types: !7742)
!7742 = !{!6930, !6935, !7626, !111}
!7743 = !DILocalVariable(name: "switcher", arg: 1, scope: !7740, file: !612, line: 203, type: !6935)
!7744 = !DILocation(line: 203, column: 27, scope: !7740)
!7745 = !DILocalVariable(name: "function", arg: 2, scope: !7740, file: !612, line: 203, type: !7626)
!7746 = !DILocation(line: 203, column: 53, scope: !7740)
!7747 = !DILocalVariable(name: "data", arg: 3, scope: !7740, file: !612, line: 203, type: !111)
!7748 = !DILocation(line: 203, column: 69, scope: !7740)
!7749 = !DILocalVariable(name: "coro", scope: !7740, file: !612, line: 205, type: !6930)
!7750 = !DILocation(line: 205, column: 13, scope: !7740)
!7751 = !DILocation(line: 205, column: 43, scope: !7740)
!7752 = !DILocation(line: 205, column: 41, scope: !7740)
!7753 = !DILocation(line: 205, column: 20, scope: !7740)
!7754 = !DILocation(line: 206, column: 10, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7740, file: !612, line: 206, column: 9)
!7756 = !DILocation(line: 206, column: 9, scope: !7740)
!7757 = !DILocation(line: 207, column: 9, scope: !7755)
!7758 = !DILocation(line: 209, column: 22, scope: !7740)
!7759 = !DILocation(line: 209, column: 5, scope: !7740)
!7760 = !DILocation(line: 209, column: 11, scope: !7740)
!7761 = !DILocation(line: 209, column: 20, scope: !7740)
!7762 = !DILocation(line: 210, column: 5, scope: !7740)
!7763 = !DILocation(line: 210, column: 11, scope: !7740)
!7764 = !DILocation(line: 210, column: 17, scope: !7740)
!7765 = !DILocation(line: 211, column: 16, scope: !7740)
!7766 = !DILocation(line: 211, column: 22, scope: !7740)
!7767 = !DILocation(line: 211, column: 32, scope: !7740)
!7768 = !DILocation(line: 211, column: 5, scope: !7740)
!7769 = !DILocation(line: 218, column: 12, scope: !7740)
!7770 = !DILocation(line: 218, column: 5, scope: !7740)
!7771 = !DILocation(line: 219, column: 1, scope: !7740)
!7772 = distinct !DISubprogram(name: "coro_get_data", scope: !612, file: !612, line: 222, type: !7773, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3302, retainedNodes: !286)
!7773 = !DISubroutineType(types: !7774)
!7774 = !{!111, !6930}
!7775 = !DILocalVariable(name: "coro", arg: 1, scope: !7772, file: !612, line: 222, type: !6930)
!7776 = !DILocation(line: 222, column: 23, scope: !7772)
!7777 = !DILocation(line: 224, column: 12, scope: !7772)
!7778 = !DILocation(line: 224, column: 27, scope: !7772)
!7779 = !DILocation(line: 224, column: 33, scope: !7772)
!7780 = !DILocation(line: 224, column: 5, scope: !7772)
!7781 = distinct !DISubprogram(name: "coro_resume", scope: !612, file: !612, line: 228, type: !7628, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3302, retainedNodes: !286)
!7782 = !DILocalVariable(name: "coro", arg: 1, scope: !7781, file: !612, line: 228, type: !6930)
!7783 = !DILocation(line: 228, column: 21, scope: !7781)
!7784 = !DILocation(line: 230, column: 5, scope: !7785)
!7785 = distinct !DILexicalBlock(scope: !7786, file: !612, line: 230, column: 5)
!7786 = distinct !DILexicalBlock(scope: !7781, file: !612, line: 230, column: 5)
!7787 = !DILocation(line: 230, column: 5, scope: !7786)
!7788 = !DILocation(line: 231, column: 5, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7790, file: !612, line: 231, column: 5)
!7790 = distinct !DILexicalBlock(scope: !7781, file: !612, line: 231, column: 5)
!7791 = !DILocation(line: 231, column: 5, scope: !7790)
!7792 = !DILocation(line: 234, column: 23, scope: !7781)
!7793 = !DILocation(line: 234, column: 29, scope: !7781)
!7794 = !DILocation(line: 234, column: 39, scope: !7781)
!7795 = !DILocation(line: 234, column: 48, scope: !7781)
!7796 = !DILocation(line: 234, column: 54, scope: !7781)
!7797 = !DILocation(line: 234, column: 5, scope: !7781)
!7798 = !DILocation(line: 235, column: 10, scope: !7799)
!7799 = distinct !DILexicalBlock(scope: !7781, file: !612, line: 235, column: 9)
!7800 = !DILocation(line: 235, column: 16, scope: !7799)
!7801 = !DILocation(line: 235, column: 9, scope: !7781)
!7802 = !DILocation(line: 236, column: 17, scope: !7799)
!7803 = !DILocation(line: 236, column: 23, scope: !7799)
!7804 = !DILocation(line: 236, column: 33, scope: !7799)
!7805 = !DILocation(line: 236, column: 39, scope: !7799)
!7806 = !DILocation(line: 236, column: 49, scope: !7799)
!7807 = !DILocation(line: 236, column: 9, scope: !7799)
!7808 = !DILocation(line: 251, column: 12, scope: !7781)
!7809 = !DILocation(line: 251, column: 18, scope: !7781)
!7810 = !DILocation(line: 251, column: 5, scope: !7781)
!7811 = distinct !DISubprogram(name: "coro_resume_value", scope: !612, file: !612, line: 255, type: !6974, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3302, retainedNodes: !286)
!7812 = !DILocalVariable(name: "coro", arg: 1, scope: !7811, file: !612, line: 255, type: !6930)
!7813 = !DILocation(line: 255, column: 27, scope: !7811)
!7814 = !DILocalVariable(name: "value", arg: 2, scope: !7811, file: !612, line: 255, type: !34)
!7815 = !DILocation(line: 255, column: 37, scope: !7811)
!7816 = !DILocation(line: 257, column: 5, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7818, file: !612, line: 257, column: 5)
!7818 = distinct !DILexicalBlock(scope: !7811, file: !612, line: 257, column: 5)
!7819 = !DILocation(line: 257, column: 5, scope: !7818)
!7820 = !DILocation(line: 258, column: 5, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7822, file: !612, line: 258, column: 5)
!7822 = distinct !DILexicalBlock(scope: !7811, file: !612, line: 258, column: 5)
!7823 = !DILocation(line: 258, column: 5, scope: !7822)
!7824 = !DILocation(line: 260, column: 25, scope: !7811)
!7825 = !DILocation(line: 260, column: 5, scope: !7811)
!7826 = !DILocation(line: 260, column: 11, scope: !7811)
!7827 = !DILocation(line: 260, column: 23, scope: !7811)
!7828 = !DILocation(line: 261, column: 24, scope: !7811)
!7829 = !DILocation(line: 228, column: 21, scope: !7781, inlinedAt: !7830)
!7830 = distinct !DILocation(line: 261, column: 12, scope: !7811)
!7831 = !DILocation(line: 230, column: 5, scope: !7785, inlinedAt: !7830)
!7832 = !DILocation(line: 230, column: 5, scope: !7786, inlinedAt: !7830)
!7833 = !DILocation(line: 231, column: 5, scope: !7789, inlinedAt: !7830)
!7834 = !DILocation(line: 231, column: 5, scope: !7790, inlinedAt: !7830)
!7835 = !DILocation(line: 234, column: 23, scope: !7781, inlinedAt: !7830)
!7836 = !DILocation(line: 234, column: 29, scope: !7781, inlinedAt: !7830)
!7837 = !DILocation(line: 234, column: 48, scope: !7781, inlinedAt: !7830)
!7838 = !DILocation(line: 234, column: 54, scope: !7781, inlinedAt: !7830)
!7839 = !DILocation(line: 234, column: 5, scope: !7781, inlinedAt: !7830)
!7840 = !DILocation(line: 235, column: 10, scope: !7799, inlinedAt: !7830)
!7841 = !DILocation(line: 235, column: 16, scope: !7799, inlinedAt: !7830)
!7842 = !DILocation(line: 235, column: 9, scope: !7781, inlinedAt: !7830)
!7843 = !DILocation(line: 236, column: 17, scope: !7799, inlinedAt: !7830)
!7844 = !DILocation(line: 236, column: 23, scope: !7799, inlinedAt: !7830)
!7845 = !DILocation(line: 236, column: 33, scope: !7799, inlinedAt: !7830)
!7846 = !DILocation(line: 236, column: 39, scope: !7799, inlinedAt: !7830)
!7847 = !DILocation(line: 236, column: 49, scope: !7799, inlinedAt: !7830)
!7848 = !DILocation(line: 236, column: 9, scope: !7799, inlinedAt: !7830)
!7849 = !DILocation(line: 251, column: 12, scope: !7781, inlinedAt: !7830)
!7850 = !DILocation(line: 251, column: 18, scope: !7781, inlinedAt: !7830)
!7851 = !DILocation(line: 261, column: 5, scope: !7811)
!7852 = distinct !DISubprogram(name: "coro_free", scope: !612, file: !612, line: 274, type: !7671, scopeLine: 275, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3302, retainedNodes: !286)
!7853 = !DILocalVariable(name: "coro", arg: 1, scope: !7852, file: !612, line: 274, type: !6930)
!7854 = !DILocation(line: 274, column: 19, scope: !7852)
!7855 = !DILocation(line: 276, column: 5, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7857, file: !612, line: 276, column: 5)
!7857 = distinct !DILexicalBlock(scope: !7852, file: !612, line: 276, column: 5)
!7858 = !DILocation(line: 276, column: 5, scope: !7857)
!7859 = !DILocation(line: 280, column: 23, scope: !7852)
!7860 = !DILocation(line: 280, column: 5, scope: !7852)
!7861 = !DILocation(line: 281, column: 10, scope: !7852)
!7862 = !DILocation(line: 281, column: 5, scope: !7852)
!7863 = !DILocation(line: 282, column: 1, scope: !7852)
!7864 = distinct !DISubprogram(name: "coro_defer", scope: !612, file: !612, line: 302, type: !7865, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3302, retainedNodes: !286)
!7865 = !DISubroutineType(types: !7866)
!7866 = !{null, !6930, !115, !111}
!7867 = !DILocalVariable(name: "coro", arg: 1, scope: !7864, file: !612, line: 302, type: !6930)
!7868 = !DILocation(line: 302, column: 20, scope: !7864)
!7869 = !DILocalVariable(name: "func", arg: 2, scope: !7864, file: !612, line: 302, type: !115)
!7870 = !DILocation(line: 302, column: 33, scope: !7864)
!7871 = !DILocalVariable(name: "data", arg: 3, scope: !7864, file: !612, line: 302, type: !111)
!7872 = !DILocation(line: 302, column: 58, scope: !7864)
!7873 = !DILocation(line: 304, column: 20, scope: !7864)
!7874 = !DILocation(line: 304, column: 26, scope: !7864)
!7875 = !DILocation(line: 304, column: 32, scope: !7864)
!7876 = !DILocation(line: 304, column: 5, scope: !7864)
!7877 = !DILocation(line: 305, column: 1, scope: !7864)
!7878 = distinct !DISubprogram(name: "coro_malloc_full", scope: !612, file: !612, line: 315, type: !7879, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3302, retainedNodes: !286)
!7879 = !DISubroutineType(types: !7880)
!7880 = !{!111, !6930, !55, !6952}
!7881 = !DILocalVariable(name: "coro", arg: 1, scope: !7878, file: !612, line: 315, type: !6930)
!7882 = !DILocation(line: 315, column: 26, scope: !7878)
!7883 = !DILocalVariable(name: "size", arg: 2, scope: !7878, file: !612, line: 315, type: !55)
!7884 = !DILocation(line: 315, column: 39, scope: !7878)
!7885 = !DILocalVariable(name: "destroy_func", arg: 3, scope: !7878, file: !612, line: 315, type: !6952)
!7886 = !DILocation(line: 315, column: 52, scope: !7878)
!7887 = !DILocalVariable(name: "defer", scope: !7878, file: !612, line: 317, type: !6946)
!7888 = !DILocation(line: 317, column: 19, scope: !7878)
!7889 = !DILocation(line: 317, column: 51, scope: !7878)
!7890 = !DILocation(line: 317, column: 49, scope: !7878)
!7891 = !DILocation(line: 317, column: 27, scope: !7878)
!7892 = !DILocation(line: 318, column: 9, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7878, file: !612, line: 318, column: 9)
!7894 = !DILocation(line: 318, column: 9, scope: !7878)
!7895 = !DILocation(line: 319, column: 9, scope: !7893)
!7896 = !DILocation(line: 321, column: 19, scope: !7878)
!7897 = !DILocation(line: 321, column: 25, scope: !7878)
!7898 = !DILocation(line: 321, column: 5, scope: !7878)
!7899 = !DILocation(line: 321, column: 12, scope: !7878)
!7900 = !DILocation(line: 321, column: 17, scope: !7878)
!7901 = !DILocation(line: 322, column: 19, scope: !7878)
!7902 = !DILocation(line: 322, column: 5, scope: !7878)
!7903 = !DILocation(line: 322, column: 12, scope: !7878)
!7904 = !DILocation(line: 322, column: 17, scope: !7878)
!7905 = !DILocation(line: 323, column: 20, scope: !7878)
!7906 = !DILocation(line: 323, column: 26, scope: !7878)
!7907 = !DILocation(line: 323, column: 5, scope: !7878)
!7908 = !DILocation(line: 323, column: 12, scope: !7878)
!7909 = !DILocation(line: 323, column: 18, scope: !7878)
!7910 = !DILocation(line: 324, column: 5, scope: !7878)
!7911 = !DILocation(line: 324, column: 12, scope: !7878)
!7912 = !DILocation(line: 324, column: 18, scope: !7878)
!7913 = !DILocation(line: 326, column: 19, scope: !7878)
!7914 = !DILocation(line: 326, column: 5, scope: !7878)
!7915 = !DILocation(line: 326, column: 11, scope: !7878)
!7916 = !DILocation(line: 326, column: 17, scope: !7878)
!7917 = !DILocation(line: 328, column: 12, scope: !7878)
!7918 = !DILocation(line: 328, column: 18, scope: !7878)
!7919 = !DILocation(line: 328, column: 5, scope: !7878)
!7920 = !DILocation(line: 329, column: 1, scope: !7878)
!7921 = distinct !DISubprogram(name: "coro_malloc", scope: !612, file: !612, line: 336, type: !7922, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3302, retainedNodes: !286)
!7922 = !DISubroutineType(types: !7923)
!7923 = !{!111, !6930, !55}
!7924 = !DILocalVariable(name: "coro", arg: 1, scope: !7921, file: !612, line: 336, type: !6930)
!7925 = !DILocation(line: 336, column: 21, scope: !7921)
!7926 = !DILocalVariable(name: "size", arg: 2, scope: !7921, file: !612, line: 336, type: !55)
!7927 = !DILocation(line: 336, column: 34, scope: !7921)
!7928 = !DILocation(line: 338, column: 29, scope: !7921)
!7929 = !DILocation(line: 338, column: 35, scope: !7921)
!7930 = !DILocation(line: 338, column: 12, scope: !7921)
!7931 = !DILocation(line: 338, column: 5, scope: !7921)
!7932 = distinct !DISubprogram(name: "nothing", scope: !612, file: !612, line: 331, type: !1853, scopeLine: 332, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3302, retainedNodes: !286)
!7933 = !DILocation(line: 333, column: 1, scope: !7932)
!7934 = distinct !DISubprogram(name: "coro_strdup", scope: !612, file: !612, line: 342, type: !7935, scopeLine: 343, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3302, retainedNodes: !286)
!7935 = !DISubroutineType(types: !7936)
!7936 = !{!52, !6930, !205}
!7937 = !DILocalVariable(name: "coro", arg: 1, scope: !7934, file: !612, line: 342, type: !6930)
!7938 = !DILocation(line: 342, column: 21, scope: !7934)
!7939 = !DILocalVariable(name: "str", arg: 2, scope: !7934, file: !612, line: 342, type: !205)
!7940 = !DILocation(line: 342, column: 39, scope: !7934)
!7941 = !DILocalVariable(name: "len", scope: !7934, file: !612, line: 344, type: !55)
!7942 = !DILocation(line: 344, column: 12, scope: !7934)
!7943 = !DILocation(line: 344, column: 25, scope: !7934)
!7944 = !DILocation(line: 344, column: 18, scope: !7934)
!7945 = !DILocation(line: 344, column: 30, scope: !7934)
!7946 = !DILocalVariable(name: "dup", scope: !7934, file: !612, line: 345, type: !52)
!7947 = !DILocation(line: 345, column: 11, scope: !7934)
!7948 = !DILocation(line: 345, column: 29, scope: !7934)
!7949 = !DILocation(line: 345, column: 35, scope: !7934)
!7950 = !DILocation(line: 345, column: 17, scope: !7934)
!7951 = !DILocation(line: 346, column: 9, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !7934, file: !612, line: 346, column: 9)
!7953 = !DILocation(line: 346, column: 9, scope: !7934)
!7954 = !DILocation(line: 347, column: 16, scope: !7952)
!7955 = !DILocation(line: 347, column: 21, scope: !7952)
!7956 = !DILocation(line: 347, column: 26, scope: !7952)
!7957 = !DILocation(line: 347, column: 9, scope: !7952)
!7958 = !DILocation(line: 348, column: 12, scope: !7934)
!7959 = !DILocation(line: 348, column: 5, scope: !7934)
!7960 = distinct !DISubprogram(name: "coro_printf", scope: !612, file: !612, line: 352, type: !7961, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3302, retainedNodes: !286)
!7961 = !DISubroutineType(types: !7962)
!7962 = !{!52, !6930, !205, null}
!7963 = !DILocalVariable(name: "coro", arg: 1, scope: !7960, file: !612, line: 352, type: !6930)
!7964 = !DILocation(line: 352, column: 21, scope: !7960)
!7965 = !DILocalVariable(name: "fmt", arg: 2, scope: !7960, file: !612, line: 352, type: !205)
!7966 = !DILocation(line: 352, column: 39, scope: !7960)
!7967 = !DILocalVariable(name: "values", scope: !7960, file: !612, line: 354, type: !7968)
!7968 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2964, line: 52, baseType: !7969)
!7969 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !6113, line: 14, baseType: !7970)
!7970 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7971, baseType: !7972)
!7971 = !DIFile(filename: "common/lwan-coro.c", directory: "/home/raj/lwan")
!7972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7973, size: 192, elements: !1833)
!7973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", size: 192, elements: !7974)
!7974 = !{!7975, !7976, !7977, !7978}
!7975 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !7973, file: !7971, line: 354, baseType: !9, size: 32)
!7976 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !7973, file: !7971, line: 354, baseType: !9, size: 32, offset: 32)
!7977 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !7973, file: !7971, line: 354, baseType: !111, size: 64, offset: 64)
!7978 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !7973, file: !7971, line: 354, baseType: !111, size: 64, offset: 128)
!7979 = !DILocation(line: 354, column: 13, scope: !7960)
!7980 = !DILocalVariable(name: "len", scope: !7960, file: !612, line: 355, type: !34)
!7981 = !DILocation(line: 355, column: 9, scope: !7960)
!7982 = !DILocalVariable(name: "tmp_str", scope: !7960, file: !612, line: 356, type: !52)
!7983 = !DILocation(line: 356, column: 11, scope: !7960)
!7984 = !DILocation(line: 358, column: 5, scope: !7960)
!7985 = !DILocation(line: 359, column: 31, scope: !7960)
!7986 = !DILocation(line: 359, column: 36, scope: !7960)
!7987 = !DILocation(line: 359, column: 11, scope: !7960)
!7988 = !DILocation(line: 359, column: 9, scope: !7960)
!7989 = !DILocation(line: 360, column: 5, scope: !7960)
!7990 = !DILocation(line: 362, column: 9, scope: !7991)
!7991 = distinct !DILexicalBlock(scope: !7960, file: !612, line: 362, column: 9)
!7992 = !DILocation(line: 362, column: 9, scope: !7960)
!7993 = !DILocation(line: 363, column: 9, scope: !7991)
!7994 = !DILocation(line: 365, column: 16, scope: !7960)
!7995 = !DILocation(line: 365, column: 40, scope: !7960)
!7996 = !DILocation(line: 302, column: 20, scope: !7864, inlinedAt: !7997)
!7997 = distinct !DILocation(line: 365, column: 5, scope: !7960)
!7998 = !DILocation(line: 302, column: 33, scope: !7864, inlinedAt: !7997)
!7999 = !DILocation(line: 302, column: 58, scope: !7864, inlinedAt: !7997)
!8000 = !DILocation(line: 304, column: 20, scope: !7864, inlinedAt: !7997)
!8001 = !DILocation(line: 304, column: 26, scope: !7864, inlinedAt: !7997)
!8002 = !DILocation(line: 304, column: 32, scope: !7864, inlinedAt: !7997)
!8003 = !DILocation(line: 304, column: 5, scope: !7864, inlinedAt: !7997)
!8004 = !DILocation(line: 366, column: 12, scope: !7960)
!8005 = !DILocation(line: 366, column: 5, scope: !7960)
!8006 = !DILocation(line: 367, column: 1, scope: !7960)
!8007 = distinct !DISubprogram(name: "lwan_http_authorize_init", scope: !670, file: !670, line: 127, type: !8008, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !643, retainedNodes: !286)
!8008 = !DISubroutineType(types: !8009)
!8009 = !{!137}
!8010 = !DILocation(line: 129, column: 28, scope: !8007)
!8011 = !DILocation(line: 129, column: 26, scope: !8007)
!8012 = !DILocation(line: 132, column: 14, scope: !8007)
!8013 = !DILocation(line: 132, column: 13, scope: !8007)
!8014 = !DILocation(line: 132, column: 12, scope: !8007)
!8015 = !DILocation(line: 132, column: 5, scope: !8007)
!8016 = distinct !DISubprogram(name: "create_realm_file", scope: !670, file: !670, line: 47, type: !8017, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !643, retainedNodes: !286)
!8017 = !DISubroutineType(types: !8018)
!8018 = !{!653, !205, !111}
!8019 = !DILocalVariable(name: "key", arg: 1, scope: !8016, file: !670, line: 48, type: !205)
!8020 = !DILocation(line: 48, column: 23, scope: !8016)
!8021 = !DILocalVariable(name: "context", arg: 2, scope: !8016, file: !670, line: 49, type: !111)
!8022 = !DILocation(line: 49, column: 17, scope: !8016)
!8023 = !DILocalVariable(name: "rpf", scope: !8016, file: !670, line: 51, type: !668)
!8024 = !DILocation(line: 51, column: 35, scope: !8016)
!8025 = !DILocation(line: 51, column: 41, scope: !8016)
!8026 = !DILocalVariable(name: "f", scope: !8016, file: !670, line: 52, type: !8027)
!8027 = !DIDerivedType(tag: DW_TAG_typedef, name: "config_t", file: !647, line: 32, baseType: !8028)
!8028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "config_t_", file: !647, line: 41, size: 192, elements: !8029)
!8029 = !{!8030, !8065, !8066}
!8030 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !8028, file: !647, line: 42, baseType: !8031, size: 64)
!8031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8032, size: 64)
!8032 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !7202, line: 7, baseType: !8033)
!8033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !7204, line: 49, size: 1728, elements: !8034)
!8034 = !{!8035, !8036, !8037, !8038, !8039, !8040, !8041, !8042, !8043, !8044, !8045, !8046, !8047, !8048, !8050, !8051, !8052, !8053, !8054, !8055, !8056, !8057, !8058, !8059, !8060, !8061, !8062, !8063, !8064}
!8035 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !8033, file: !7204, line: 51, baseType: !34, size: 32)
!8036 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !8033, file: !7204, line: 54, baseType: !52, size: 64, offset: 64)
!8037 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !8033, file: !7204, line: 55, baseType: !52, size: 64, offset: 128)
!8038 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !8033, file: !7204, line: 56, baseType: !52, size: 64, offset: 192)
!8039 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !8033, file: !7204, line: 57, baseType: !52, size: 64, offset: 256)
!8040 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !8033, file: !7204, line: 58, baseType: !52, size: 64, offset: 320)
!8041 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !8033, file: !7204, line: 59, baseType: !52, size: 64, offset: 384)
!8042 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !8033, file: !7204, line: 60, baseType: !52, size: 64, offset: 448)
!8043 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !8033, file: !7204, line: 61, baseType: !52, size: 64, offset: 512)
!8044 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !8033, file: !7204, line: 64, baseType: !52, size: 64, offset: 576)
!8045 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !8033, file: !7204, line: 65, baseType: !52, size: 64, offset: 640)
!8046 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !8033, file: !7204, line: 66, baseType: !52, size: 64, offset: 704)
!8047 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !8033, file: !7204, line: 68, baseType: !7219, size: 64, offset: 768)
!8048 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !8033, file: !7204, line: 70, baseType: !8049, size: 64, offset: 832)
!8049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8033, size: 64)
!8050 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !8033, file: !7204, line: 72, baseType: !34, size: 32, offset: 896)
!8051 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !8033, file: !7204, line: 73, baseType: !34, size: 32, offset: 928)
!8052 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !8033, file: !7204, line: 74, baseType: !188, size: 64, offset: 960)
!8053 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !8033, file: !7204, line: 77, baseType: !125, size: 16, offset: 1024)
!8054 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !8033, file: !7204, line: 78, baseType: !4303, size: 8, offset: 1040)
!8055 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !8033, file: !7204, line: 79, baseType: !1832, size: 8, offset: 1048)
!8056 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !8033, file: !7204, line: 81, baseType: !7230, size: 64, offset: 1088)
!8057 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !8033, file: !7204, line: 89, baseType: !7233, size: 64, offset: 1152)
!8058 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !8033, file: !7204, line: 91, baseType: !7235, size: 64, offset: 1216)
!8059 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !8033, file: !7204, line: 92, baseType: !7238, size: 64, offset: 1280)
!8060 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !8033, file: !7204, line: 93, baseType: !8049, size: 64, offset: 1344)
!8061 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !8033, file: !7204, line: 94, baseType: !111, size: 64, offset: 1408)
!8062 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !8033, file: !7204, line: 95, baseType: !55, size: 64, offset: 1472)
!8063 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !8033, file: !7204, line: 96, baseType: !34, size: 32, offset: 1536)
!8064 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !8033, file: !7204, line: 98, baseType: !263, size: 160, offset: 1568)
!8065 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !8028, file: !647, line: 43, baseType: !34, size: 32, offset: 64)
!8066 = !DIDerivedType(tag: DW_TAG_member, name: "error_message", scope: !8028, file: !647, line: 44, baseType: !52, size: 64, offset: 128)
!8067 = !DILocation(line: 52, column: 14, scope: !8016)
!8068 = !DILocalVariable(name: "l", scope: !8016, file: !670, line: 53, type: !8069)
!8069 = !DIDerivedType(tag: DW_TAG_typedef, name: "config_line_t", file: !647, line: 33, baseType: !8070)
!8070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "config_line_t_", file: !647, line: 47, size: 8384, elements: !8071)
!8071 = !{!8072, !8085, !8086}
!8072 = !DIDerivedType(tag: DW_TAG_member, scope: !8070, file: !647, line: 48, baseType: !8073, size: 128)
!8073 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8070, file: !647, line: 48, size: 128, elements: !8074)
!8074 = !{!8075, !8080}
!8075 = !DIDerivedType(tag: DW_TAG_member, name: "section", scope: !8073, file: !647, line: 51, baseType: !8076, size: 128)
!8076 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8073, file: !647, line: 49, size: 128, elements: !8077)
!8077 = !{!8078, !8079}
!8078 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8076, file: !647, line: 50, baseType: !52, size: 64)
!8079 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !8076, file: !647, line: 50, baseType: !52, size: 64, offset: 64)
!8080 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !8073, file: !647, line: 54, baseType: !8081, size: 128)
!8081 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8073, file: !647, line: 52, size: 128, elements: !8082)
!8082 = !{!8083, !8084}
!8083 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !8081, file: !647, line: 53, baseType: !52, size: 64)
!8084 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !8081, file: !647, line: 53, baseType: !52, size: 64, offset: 64)
!8085 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8070, file: !647, line: 56, baseType: !7315, size: 32, offset: 128)
!8086 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !8070, file: !647, line: 57, baseType: !7317, size: 8192, offset: 160)
!8087 = !DILocation(line: 53, column: 19, scope: !8016)
!8088 = !DILocation(line: 55, column: 9, scope: !8089)
!8089 = distinct !DILexicalBlock(scope: !8016, file: !670, line: 55, column: 9)
!8090 = !DILocation(line: 55, column: 9, scope: !8016)
!8091 = !DILocation(line: 56, column: 9, scope: !8089)
!8092 = !DILocation(line: 58, column: 20, scope: !8016)
!8093 = !DILocation(line: 58, column: 5, scope: !8016)
!8094 = !DILocation(line: 58, column: 10, scope: !8016)
!8095 = !DILocation(line: 58, column: 18, scope: !8016)
!8096 = !DILocation(line: 59, column: 9, scope: !8097)
!8097 = distinct !DILexicalBlock(scope: !8016, file: !670, line: 59, column: 9)
!8098 = !DILocation(line: 59, column: 9, scope: !8016)
!8099 = !DILocation(line: 60, column: 9, scope: !8097)
!8100 = !DILocation(line: 62, column: 26, scope: !8101)
!8101 = distinct !DILexicalBlock(scope: !8016, file: !670, line: 62, column: 9)
!8102 = !DILocation(line: 62, column: 10, scope: !8101)
!8103 = !DILocation(line: 62, column: 9, scope: !8016)
!8104 = !DILocation(line: 63, column: 9, scope: !8101)
!8105 = !DILocation(line: 65, column: 5, scope: !8016)
!8106 = !DILocation(line: 65, column: 12, scope: !8016)
!8107 = !DILocation(line: 67, column: 19, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8016, file: !670, line: 65, column: 38)
!8109 = !DILocation(line: 67, column: 9, scope: !8108)
!8110 = !DILocalVariable(name: "username", scope: !8111, file: !670, line: 69, type: !52)
!8111 = distinct !DILexicalBlock(scope: !8112, file: !670, line: 68, column: 37)
!8112 = distinct !DILexicalBlock(scope: !8108, file: !670, line: 67, column: 25)
!8113 = !DILocation(line: 69, column: 19, scope: !8111)
!8114 = !DILocation(line: 69, column: 39, scope: !8111)
!8115 = !DILocation(line: 69, column: 44, scope: !8111)
!8116 = !DILocation(line: 69, column: 30, scope: !8111)
!8117 = !DILocation(line: 70, column: 18, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !8111, file: !670, line: 70, column: 17)
!8119 = !DILocation(line: 70, column: 17, scope: !8111)
!8120 = !DILocation(line: 71, column: 17, scope: !8118)
!8121 = !DILocalVariable(name: "password", scope: !8111, file: !670, line: 73, type: !52)
!8122 = !DILocation(line: 73, column: 19, scope: !8111)
!8123 = !DILocation(line: 73, column: 39, scope: !8111)
!8124 = !DILocation(line: 73, column: 44, scope: !8111)
!8125 = !DILocation(line: 73, column: 30, scope: !8111)
!8126 = !DILocation(line: 74, column: 18, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8111, file: !670, line: 74, column: 17)
!8128 = !DILocation(line: 74, column: 17, scope: !8111)
!8129 = !DILocation(line: 75, column: 22, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !8127, file: !670, line: 74, column: 28)
!8131 = !DILocation(line: 75, column: 17, scope: !8130)
!8132 = !DILocation(line: 76, column: 17, scope: !8130)
!8133 = !DILocalVariable(name: "err", scope: !8111, file: !670, line: 79, type: !34)
!8134 = !DILocation(line: 79, column: 17, scope: !8111)
!8135 = !DILocation(line: 79, column: 39, scope: !8111)
!8136 = !DILocation(line: 79, column: 44, scope: !8111)
!8137 = !DILocation(line: 79, column: 53, scope: !8111)
!8138 = !DILocation(line: 79, column: 63, scope: !8111)
!8139 = !DILocation(line: 79, column: 23, scope: !8111)
!8140 = !DILocation(line: 80, column: 17, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8111, file: !670, line: 80, column: 17)
!8142 = !DILocation(line: 80, column: 17, scope: !8111)
!8143 = !DILocation(line: 81, column: 17, scope: !8141)
!8144 = distinct !{!8144, !8105, !8145, !3413}
!8145 = !DILocation(line: 99, column: 5, scope: !8016)
!8146 = !DILocation(line: 83, column: 18, scope: !8111)
!8147 = !DILocation(line: 83, column: 13, scope: !8111)
!8148 = !DILocation(line: 84, column: 18, scope: !8111)
!8149 = !DILocation(line: 84, column: 13, scope: !8111)
!8150 = !DILocation(line: 86, column: 17, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !8111, file: !670, line: 86, column: 17)
!8152 = !DILocation(line: 86, column: 21, scope: !8151)
!8153 = !DILocation(line: 86, column: 17, scope: !8111)
!8154 = !DILocation(line: 87, column: 17, scope: !8155)
!8155 = distinct !DILexicalBlock(scope: !8151, file: !670, line: 86, column: 33)
!8156 = !DILocation(line: 90, column: 17, scope: !8155)
!8157 = !DILocation(line: 93, column: 13, scope: !8111)
!8158 = !DILocation(line: 96, column: 13, scope: !8112)
!8159 = !DILocation(line: 97, column: 13, scope: !8112)
!8160 = !DILocation(line: 101, column: 11, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8016, file: !670, line: 101, column: 9)
!8162 = !DILocation(line: 101, column: 9, scope: !8161)
!8163 = !DILocation(line: 101, column: 9, scope: !8016)
!8164 = !DILocation(line: 102, column: 9, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8161, file: !670, line: 101, column: 26)
!8166 = !DILocation(line: 104, column: 9, scope: !8165)
!8167 = !DILocation(line: 107, column: 5, scope: !8016)
!8168 = !DILocation(line: 108, column: 36, scope: !8016)
!8169 = !DILocation(line: 108, column: 5, scope: !8016)
!8170 = !DILabel(scope: !8016, name: "error", file: !670, line: 110)
!8171 = !DILocation(line: 110, column: 1, scope: !8016)
!8172 = !DILocation(line: 111, column: 5, scope: !8016)
!8173 = !DILabel(scope: !8016, name: "error_no_close", file: !670, line: 112)
!8174 = !DILocation(line: 112, column: 1, scope: !8016)
!8175 = !DILocation(line: 113, column: 15, scope: !8016)
!8176 = !DILocation(line: 113, column: 20, scope: !8016)
!8177 = !DILocation(line: 113, column: 5, scope: !8016)
!8178 = !DILocation(line: 114, column: 10, scope: !8016)
!8179 = !DILocation(line: 114, column: 5, scope: !8016)
!8180 = !DILocation(line: 115, column: 5, scope: !8016)
!8181 = !DILocation(line: 116, column: 1, scope: !8016)
!8182 = distinct !DISubprogram(name: "destroy_realm_file", scope: !670, file: !670, line: 118, type: !8183, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !643, retainedNodes: !286)
!8183 = !DISubroutineType(types: !8184)
!8184 = !{null, !653, !111}
!8185 = !DILocalVariable(name: "entry", arg: 1, scope: !8182, file: !670, line: 118, type: !653)
!8186 = !DILocation(line: 118, column: 54, scope: !8182)
!8187 = !DILocalVariable(name: "context", arg: 2, scope: !8182, file: !670, line: 119, type: !111)
!8188 = !DILocation(line: 119, column: 39, scope: !8182)
!8189 = !DILocalVariable(name: "rpf", scope: !8182, file: !670, line: 121, type: !668)
!8190 = !DILocation(line: 121, column: 35, scope: !8182)
!8191 = !DILocation(line: 121, column: 73, scope: !8182)
!8192 = !DILocation(line: 122, column: 15, scope: !8182)
!8193 = !DILocation(line: 122, column: 20, scope: !8182)
!8194 = !DILocation(line: 122, column: 5, scope: !8182)
!8195 = !DILocation(line: 123, column: 10, scope: !8182)
!8196 = !DILocation(line: 123, column: 5, scope: !8182)
!8197 = !DILocation(line: 124, column: 1, scope: !8182)
!8198 = distinct !DISubprogram(name: "fourty_two_and_free", scope: !670, file: !670, line: 37, type: !116, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !643, retainedNodes: !286)
!8199 = !DILocalVariable(name: "str", arg: 1, scope: !8198, file: !670, line: 37, type: !111)
!8200 = !DILocation(line: 37, column: 39, scope: !8198)
!8201 = !DILocation(line: 39, column: 9, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8198, file: !670, line: 39, column: 9)
!8203 = !DILocation(line: 39, column: 9, scope: !8198)
!8204 = !DILocalVariable(name: "s", scope: !8205, file: !670, line: 40, type: !52)
!8205 = distinct !DILexicalBlock(scope: !8202, file: !670, line: 39, column: 22)
!8206 = !DILocation(line: 40, column: 15, scope: !8205)
!8207 = !DILocation(line: 40, column: 19, scope: !8205)
!8208 = !DILocation(line: 41, column: 9, scope: !8205)
!8209 = !DILocation(line: 41, column: 17, scope: !8205)
!8210 = !DILocation(line: 41, column: 16, scope: !8205)
!8211 = !DILocation(line: 42, column: 15, scope: !8205)
!8212 = !DILocation(line: 42, column: 18, scope: !8205)
!8213 = distinct !{!8213, !8208, !8214, !3413}
!8214 = !DILocation(line: 42, column: 20, scope: !8205)
!8215 = !DILocation(line: 43, column: 14, scope: !8205)
!8216 = !DILocation(line: 43, column: 9, scope: !8205)
!8217 = !DILocation(line: 44, column: 5, scope: !8205)
!8218 = !DILocation(line: 45, column: 1, scope: !8198)
!8219 = distinct !DISubprogram(name: "lwan_status_error_debug", scope: !2636, file: !2636, line: 193, type: !6100, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2632, retainedNodes: !286)
!8220 = !DILocalVariable(name: "file", arg: 1, scope: !8219, file: !2636, line: 193, type: !205)
!8221 = !DILocation(line: 193, column: 1, scope: !8219)
!8222 = !DILocalVariable(name: "line", arg: 2, scope: !8219, file: !2636, line: 193, type: !3317)
!8223 = !DILocalVariable(name: "func", arg: 3, scope: !8219, file: !2636, line: 193, type: !205)
!8224 = !DILocalVariable(name: "fmt", arg: 4, scope: !8219, file: !2636, line: 193, type: !205)
!8225 = !DILocation(line: 193, column: 1, scope: !8226)
!8226 = distinct !DILexicalBlock(scope: !8219, file: !2636, line: 193, column: 1)
!8227 = !DILocalVariable(name: "values", scope: !8228, file: !2636, line: 193, type: !6111)
!8228 = distinct !DILexicalBlock(scope: !8226, file: !2636, line: 193, column: 1)
!8229 = !DILocation(line: 193, column: 1, scope: !8228)
!8230 = distinct !DISubprogram(name: "lwan_http_authorize_shutdown", scope: !670, file: !670, line: 136, type: !1853, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !643, retainedNodes: !286)
!8231 = !DILocation(line: 138, column: 19, scope: !8230)
!8232 = !DILocation(line: 138, column: 5, scope: !8230)
!8233 = !DILocation(line: 139, column: 1, scope: !8230)
!8234 = !DILocalVariable(name: "request", arg: 1, scope: !678, file: !670, line: 184, type: !681)
!8235 = !DILocation(line: 184, column: 37, scope: !678)
!8236 = !DILocalVariable(name: "authorization", arg: 2, scope: !678, file: !670, line: 185, type: !816)
!8237 = !DILocation(line: 185, column: 35, scope: !678)
!8238 = !DILocalVariable(name: "realm", arg: 3, scope: !678, file: !670, line: 186, type: !205)
!8239 = !DILocation(line: 186, column: 33, scope: !678)
!8240 = !DILocalVariable(name: "password_file", arg: 4, scope: !678, file: !670, line: 187, type: !205)
!8241 = !DILocation(line: 187, column: 33, scope: !678)
!8242 = !DILocalVariable(name: "headers", scope: !678, file: !670, line: 191, type: !767)
!8243 = !DILocation(line: 191, column: 23, scope: !678)
!8244 = !DILocation(line: 193, column: 10, scope: !8245)
!8245 = distinct !DILexicalBlock(scope: !678, file: !670, line: 193, column: 9)
!8246 = !DILocation(line: 193, column: 25, scope: !8245)
!8247 = !DILocation(line: 193, column: 9, scope: !678)
!8248 = !DILocation(line: 194, column: 9, scope: !8245)
!8249 = !DILocation(line: 196, column: 9, scope: !8250)
!8250 = distinct !DILexicalBlock(scope: !678, file: !670, line: 196, column: 9)
!8251 = !DILocation(line: 196, column: 9, scope: !678)
!8252 = !DILocation(line: 197, column: 9, scope: !8250)
!8253 = !DILocation(line: 199, column: 5, scope: !678)
!8254 = !DILocation(line: 199, column: 20, scope: !678)
!8255 = !DILocation(line: 199, column: 26, scope: !678)
!8256 = !DILocation(line: 200, column: 5, scope: !678)
!8257 = !DILocation(line: 200, column: 20, scope: !678)
!8258 = !DILocation(line: 200, column: 24, scope: !678)
!8259 = !DILocation(line: 202, column: 19, scope: !8260)
!8260 = distinct !DILexicalBlock(scope: !678, file: !670, line: 202, column: 9)
!8261 = !DILocation(line: 202, column: 28, scope: !8260)
!8262 = !DILocation(line: 202, column: 34, scope: !8260)
!8263 = !DILocation(line: 202, column: 40, scope: !8260)
!8264 = !DILocation(line: 202, column: 55, scope: !8260)
!8265 = !DILocation(line: 202, column: 9, scope: !8260)
!8266 = !DILocation(line: 202, column: 9, scope: !678)
!8267 = !DILocation(line: 203, column: 9, scope: !8260)
!8268 = !DILocation(line: 202, column: 68, scope: !8260)
!8269 = !DILabel(scope: !678, name: "unauthorized", file: !670, line: 205)
!8270 = !DILocation(line: 205, column: 1, scope: !678)
!8271 = !DILocation(line: 206, column: 27, scope: !678)
!8272 = !DILocation(line: 206, column: 36, scope: !678)
!8273 = !DILocation(line: 206, column: 42, scope: !678)
!8274 = !DILocation(line: 206, column: 15, scope: !678)
!8275 = !DILocation(line: 206, column: 13, scope: !678)
!8276 = !DILocation(line: 207, column: 5, scope: !678)
!8277 = !DILocation(line: 207, column: 16, scope: !678)
!8278 = !DILocation(line: 207, column: 20, scope: !678)
!8279 = !DILocation(line: 208, column: 36, scope: !678)
!8280 = !DILocation(line: 208, column: 45, scope: !678)
!8281 = !DILocation(line: 208, column: 51, scope: !678)
!8282 = !DILocation(line: 209, column: 36, scope: !678)
!8283 = !DILocation(line: 208, column: 24, scope: !678)
!8284 = !DILocation(line: 208, column: 5, scope: !678)
!8285 = !DILocation(line: 208, column: 16, scope: !678)
!8286 = !DILocation(line: 208, column: 22, scope: !678)
!8287 = !DILocation(line: 210, column: 22, scope: !678)
!8288 = !DILocation(line: 210, column: 33, scope: !678)
!8289 = !DILocation(line: 210, column: 39, scope: !678)
!8290 = !DILocation(line: 210, column: 5, scope: !678)
!8291 = !DILocation(line: 210, column: 16, scope: !678)
!8292 = !DILocation(line: 210, column: 20, scope: !678)
!8293 = !DILocation(line: 212, column: 33, scope: !678)
!8294 = !DILocation(line: 212, column: 5, scope: !678)
!8295 = !DILocation(line: 212, column: 14, scope: !678)
!8296 = !DILocation(line: 212, column: 23, scope: !678)
!8297 = !DILocation(line: 212, column: 31, scope: !678)
!8298 = !DILocation(line: 213, column: 5, scope: !678)
!8299 = !DILocation(line: 214, column: 1, scope: !678)
!8300 = distinct !DISubprogram(name: "authorize", scope: !670, file: !670, line: 142, type: !8301, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !643, retainedNodes: !286)
!8301 = !DISubroutineType(types: !8302)
!8302 = !{!137, !76, !816, !205}
!8303 = !DILocalVariable(name: "coro", arg: 1, scope: !8300, file: !670, line: 142, type: !76)
!8304 = !DILocation(line: 142, column: 19, scope: !8300)
!8305 = !DILocalVariable(name: "authorization", arg: 2, scope: !8300, file: !670, line: 143, type: !816)
!8306 = !DILocation(line: 143, column: 26, scope: !8300)
!8307 = !DILocalVariable(name: "password_file", arg: 3, scope: !8300, file: !670, line: 144, type: !205)
!8308 = !DILocation(line: 144, column: 24, scope: !8300)
!8309 = !DILocalVariable(name: "rpf", scope: !8300, file: !670, line: 146, type: !668)
!8310 = !DILocation(line: 146, column: 35, scope: !8300)
!8311 = !DILocalVariable(name: "decoded", scope: !8300, file: !670, line: 147, type: !674)
!8312 = !DILocation(line: 147, column: 20, scope: !8300)
!8313 = !DILocalVariable(name: "colon", scope: !8300, file: !670, line: 148, type: !52)
!8314 = !DILocation(line: 148, column: 11, scope: !8300)
!8315 = !DILocalVariable(name: "password", scope: !8300, file: !670, line: 149, type: !52)
!8316 = !DILocation(line: 149, column: 11, scope: !8300)
!8317 = !DILocalVariable(name: "looked_password", scope: !8300, file: !670, line: 150, type: !52)
!8318 = !DILocation(line: 150, column: 11, scope: !8300)
!8319 = !DILocalVariable(name: "decoded_len", scope: !8300, file: !670, line: 151, type: !55)
!8320 = !DILocation(line: 151, column: 12, scope: !8300)
!8321 = !DILocalVariable(name: "password_ok", scope: !8300, file: !670, line: 152, type: !137)
!8322 = !DILocation(line: 152, column: 10, scope: !8300)
!8323 = !DILocation(line: 155, column: 13, scope: !8300)
!8324 = !DILocation(line: 155, column: 35, scope: !8300)
!8325 = !DILocation(line: 155, column: 41, scope: !8300)
!8326 = !DILocation(line: 154, column: 43, scope: !8300)
!8327 = !DILocation(line: 154, column: 9, scope: !8300)
!8328 = !DILocation(line: 156, column: 9, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8300, file: !670, line: 156, column: 9)
!8330 = !DILocation(line: 156, column: 9, scope: !8300)
!8331 = !DILocation(line: 157, column: 9, scope: !8329)
!8332 = !DILocation(line: 159, column: 46, scope: !8300)
!8333 = !DILocation(line: 159, column: 61, scope: !8300)
!8334 = !DILocation(line: 160, column: 29, scope: !8300)
!8335 = !DILocation(line: 160, column: 44, scope: !8300)
!8336 = !DILocation(line: 159, column: 15, scope: !8300)
!8337 = !DILocation(line: 159, column: 13, scope: !8300)
!8338 = !DILocation(line: 161, column: 9, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8300, file: !670, line: 161, column: 9)
!8340 = !DILocation(line: 161, column: 9, scope: !8300)
!8341 = !DILocation(line: 162, column: 9, scope: !8339)
!8342 = !DILocation(line: 164, column: 9, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8300, file: !670, line: 164, column: 9)
!8344 = !DILocation(line: 164, column: 9, scope: !8300)
!8345 = !DILocation(line: 165, column: 9, scope: !8343)
!8346 = !DILocation(line: 167, column: 20, scope: !8300)
!8347 = !DILocation(line: 167, column: 34, scope: !8300)
!8348 = !DILocation(line: 167, column: 13, scope: !8300)
!8349 = !DILocation(line: 167, column: 11, scope: !8300)
!8350 = !DILocation(line: 168, column: 9, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8300, file: !670, line: 168, column: 9)
!8352 = !DILocation(line: 168, column: 9, scope: !8300)
!8353 = !DILocation(line: 169, column: 9, scope: !8351)
!8354 = !DILocation(line: 171, column: 6, scope: !8300)
!8355 = !DILocation(line: 171, column: 12, scope: !8300)
!8356 = !DILocation(line: 172, column: 16, scope: !8300)
!8357 = !DILocation(line: 172, column: 22, scope: !8300)
!8358 = !DILocation(line: 172, column: 14, scope: !8300)
!8359 = !DILocation(line: 174, column: 33, scope: !8300)
!8360 = !DILocation(line: 174, column: 38, scope: !8300)
!8361 = !DILocation(line: 174, column: 47, scope: !8300)
!8362 = !DILocation(line: 174, column: 23, scope: !8300)
!8363 = !DILocation(line: 174, column: 21, scope: !8300)
!8364 = !DILocation(line: 175, column: 9, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8300, file: !670, line: 175, column: 9)
!8366 = !DILocation(line: 175, column: 9, scope: !8300)
!8367 = !DILocation(line: 176, column: 31, scope: !8365)
!8368 = !DILocation(line: 176, column: 41, scope: !8365)
!8369 = !DILocation(line: 176, column: 24, scope: !8365)
!8370 = !DILocation(line: 176, column: 23, scope: !8365)
!8371 = !DILocation(line: 176, column: 21, scope: !8365)
!8372 = !DILocation(line: 176, column: 9, scope: !8365)
!8373 = !DILabel(scope: !8300, name: "out", file: !670, line: 178)
!8374 = !DILocation(line: 178, column: 1, scope: !8300)
!8375 = !DILocation(line: 179, column: 10, scope: !8300)
!8376 = !DILocation(line: 179, column: 5, scope: !8300)
!8377 = !DILocation(line: 180, column: 12, scope: !8300)
!8378 = !DILocation(line: 180, column: 5, scope: !8300)
!8379 = !DILocation(line: 181, column: 1, scope: !8300)
!8380 = distinct !DISubprogram(name: "lwan_openat", scope: !844, file: !844, line: 33, type: !8381, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3306, retainedNodes: !286)
!8381 = !DISubroutineType(types: !8382)
!8382 = !{!34, !8383, !34, !205, !34}
!8383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8384, size: 64)
!8384 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_request_t", file: !7, line: 106, baseType: !8385)
!8385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_request_t_", file: !7, line: 206, size: 1280, elements: !8386)
!8386 = !{!8387, !8388, !8389, !8395, !8396, !8465, !8476, !8477, !8486}
!8387 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8385, file: !7, line: 207, baseType: !32, size: 32)
!8388 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !8385, file: !7, line: 208, baseType: !34, size: 32, offset: 32)
!8389 = !DIDerivedType(tag: DW_TAG_member, name: "url", scope: !8385, file: !7, line: 209, baseType: !8390, size: 128, offset: 64)
!8390 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_value_t", file: !7, line: 110, baseType: !8391)
!8391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_value_t_", file: !7, line: 191, size: 128, elements: !8392)
!8392 = !{!8393, !8394}
!8393 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !8391, file: !7, line: 192, baseType: !52, size: 64)
!8394 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8391, file: !7, line: 193, baseType: !55, size: 64, offset: 64)
!8395 = !DIDerivedType(tag: DW_TAG_member, name: "original_url", scope: !8385, file: !7, line: 210, baseType: !8390, size: 128, offset: 192)
!8396 = !DIDerivedType(tag: DW_TAG_member, name: "conn", scope: !8385, file: !7, line: 211, baseType: !8397, size: 64, offset: 320)
!8397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8398, size: 64)
!8398 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_connection_t", file: !7, line: 112, baseType: !8399)
!8399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_connection_t_", file: !7, line: 196, size: 256, elements: !8400)
!8400 = !{!8401, !8402, !8403, !8404, !8463, !8464}
!8401 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8399, file: !7, line: 199, baseType: !65, size: 32)
!8402 = !DIDerivedType(tag: DW_TAG_member, name: "time_to_die", scope: !8399, file: !7, line: 200, baseType: !9, size: 32, offset: 32)
!8403 = !DIDerivedType(tag: DW_TAG_member, name: "coro", scope: !8399, file: !7, line: 201, baseType: !76, size: 64, offset: 64)
!8404 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !8399, file: !7, line: 202, baseType: !8405, size: 64, offset: 128)
!8405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8406, size: 64)
!8406 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_thread_t", file: !7, line: 108, baseType: !8407)
!8407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_thread_t_", file: !7, line: 253, size: 832, elements: !8408)
!8408 = !{!8409, !8454, !8460, !8461, !8462}
!8409 = !DIDerivedType(tag: DW_TAG_member, name: "lwan", scope: !8407, file: !7, line: 254, baseType: !8410, size: 64)
!8410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8411, size: 64)
!8411 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_t", file: !7, line: 103, baseType: !8412)
!8412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_t_", file: !7, line: 275, size: 640, elements: !8413)
!8413 = !{!8414, !8435, !8436, !8442, !8443, !8453}
!8414 = !DIDerivedType(tag: DW_TAG_member, name: "url_map_trie", scope: !8412, file: !7, line: 276, baseType: !8415, size: 128)
!8415 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_t", file: !92, line: 25, baseType: !8416)
!8416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_t_", file: !92, line: 41, size: 128, elements: !8417)
!8417 = !{!8418, !8434}
!8418 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !8416, file: !92, line: 42, baseType: !8419, size: 64)
!8419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8420, size: 64)
!8420 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_node_t", file: !92, line: 26, baseType: !8421)
!8421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_node_t_", file: !92, line: 29, size: 640, elements: !8422)
!8422 = !{!8423, !8425, !8433}
!8423 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8421, file: !92, line: 30, baseType: !8424, size: 512)
!8424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8419, size: 512, elements: !102)
!8425 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !8421, file: !92, line: 31, baseType: !8426, size: 64, offset: 512)
!8426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8427, size: 64)
!8427 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_leaf_t", file: !92, line: 27, baseType: !8428)
!8428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_leaf_t_", file: !92, line: 35, size: 192, elements: !8429)
!8429 = !{!8430, !8431, !8432}
!8430 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !8428, file: !92, line: 36, baseType: !52, size: 64)
!8431 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8428, file: !92, line: 37, baseType: !111, size: 64, offset: 64)
!8432 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8428, file: !92, line: 38, baseType: !8426, size: 64, offset: 128)
!8433 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !8421, file: !92, line: 32, baseType: !34, size: 32, offset: 576)
!8434 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !8416, file: !92, line: 43, baseType: !115, size: 64, offset: 64)
!8435 = !DIDerivedType(tag: DW_TAG_member, name: "conns", scope: !8412, file: !7, line: 277, baseType: !8397, size: 64, offset: 128)
!8436 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !8412, file: !7, line: 283, baseType: !8437, size: 128, offset: 192)
!8437 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8412, file: !7, line: 279, size: 128, elements: !8438)
!8438 = !{!8439, !8440, !8441}
!8439 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !8437, file: !7, line: 280, baseType: !8405, size: 64)
!8440 = !DIDerivedType(tag: DW_TAG_member, name: "max_fd", scope: !8437, file: !7, line: 281, baseType: !9, size: 32, offset: 64)
!8441 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !8437, file: !7, line: 282, baseType: !125, size: 16, offset: 96)
!8442 = !DIDerivedType(tag: DW_TAG_member, name: "module_registry", scope: !8412, file: !7, line: 285, baseType: !127, size: 64, offset: 320)
!8443 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !8412, file: !7, line: 286, baseType: !8444, size: 192, offset: 384)
!8444 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_config_t", file: !7, line: 111, baseType: !8445)
!8445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_config_t_", file: !7, line: 266, size: 192, elements: !8446)
!8446 = !{!8447, !8448, !8449, !8450, !8451, !8452}
!8447 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !8445, file: !7, line: 267, baseType: !52, size: 64)
!8448 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive_timeout", scope: !8445, file: !7, line: 268, baseType: !125, size: 16, offset: 64)
!8449 = !DIDerivedType(tag: DW_TAG_member, name: "quiet", scope: !8445, file: !7, line: 269, baseType: !137, size: 8, offset: 80)
!8450 = !DIDerivedType(tag: DW_TAG_member, name: "reuse_port", scope: !8445, file: !7, line: 270, baseType: !137, size: 8, offset: 88)
!8451 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !8445, file: !7, line: 271, baseType: !9, size: 32, offset: 96)
!8452 = !DIDerivedType(tag: DW_TAG_member, name: "n_threads", scope: !8445, file: !7, line: 272, baseType: !125, size: 16, offset: 128)
!8453 = !DIDerivedType(tag: DW_TAG_member, name: "main_socket", scope: !8412, file: !7, line: 287, baseType: !34, size: 32, offset: 576)
!8454 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !8407, file: !7, line: 259, baseType: !8455, size: 576, offset: 64)
!8455 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8407, file: !7, line: 255, size: 576, elements: !8456)
!8456 = !{!8457, !8458, !8459}
!8457 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !8455, file: !7, line: 256, baseType: !146, size: 240)
!8458 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !8455, file: !7, line: 257, baseType: !146, size: 240, offset: 240)
!8459 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !8455, file: !7, line: 258, baseType: !151, size: 64, offset: 512)
!8460 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_fd", scope: !8407, file: !7, line: 261, baseType: !34, size: 32, offset: 640)
!8461 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_fd", scope: !8407, file: !7, line: 262, baseType: !158, size: 64, offset: 672)
!8462 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !8407, file: !7, line: 263, baseType: !162, size: 64, offset: 768)
!8463 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8399, file: !7, line: 203, baseType: !34, size: 32, offset: 192)
!8464 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8399, file: !7, line: 203, baseType: !34, size: 32, offset: 224)
!8465 = !DIDerivedType(tag: DW_TAG_member, name: "query_params", scope: !8385, file: !7, line: 216, baseType: !8466, size: 128, offset: 384)
!8466 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8385, file: !7, line: 213, size: 128, elements: !8467)
!8467 = !{!8468, !8475}
!8468 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8466, file: !7, line: 214, baseType: !8469, size: 64)
!8469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8470, size: 64)
!8470 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_key_value_t", file: !7, line: 105, baseType: !8471)
!8471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_key_value_t_", file: !7, line: 173, size: 128, elements: !8472)
!8472 = !{!8473, !8474}
!8473 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !8471, file: !7, line: 174, baseType: !52, size: 64)
!8474 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !8471, file: !7, line: 175, baseType: !52, size: 64, offset: 64)
!8475 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8466, file: !7, line: 215, baseType: !55, size: 64, offset: 64)
!8476 = !DIDerivedType(tag: DW_TAG_member, name: "post_data", scope: !8385, file: !7, line: 216, baseType: !8466, size: 128, offset: 512)
!8477 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !8385, file: !7, line: 223, baseType: !8478, size: 192, offset: 640)
!8478 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8385, file: !7, line: 217, size: 192, elements: !8479)
!8479 = !{!8480, !8481}
!8480 = !DIDerivedType(tag: DW_TAG_member, name: "if_modified_since", scope: !8478, file: !7, line: 218, baseType: !151, size: 64)
!8481 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !8478, file: !7, line: 222, baseType: !8482, size: 128, offset: 64)
!8482 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8478, file: !7, line: 219, size: 128, elements: !8483)
!8483 = !{!8484, !8485}
!8484 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !8482, file: !7, line: 220, baseType: !2271, size: 64)
!8485 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !8482, file: !7, line: 221, baseType: !2271, size: 64, offset: 64)
!8486 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !8385, file: !7, line: 224, baseType: !8487, size: 448, offset: 832)
!8487 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_response_t", file: !7, line: 107, baseType: !8488)
!8488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_response_t_", file: !7, line: 178, size: 448, elements: !8489)
!8489 = !{!8490, !8506, !8507, !8508, !8509}
!8490 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !8488, file: !7, line: 179, baseType: !8491, size: 64)
!8491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8492, size: 64)
!8492 = !DIDerivedType(tag: DW_TAG_typedef, name: "strbuf_t", file: !197, line: 25, baseType: !8493)
!8493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "strbuf_t_", file: !197, line: 27, size: 256, elements: !8494)
!8494 = !{!8495, !8500, !8505}
!8495 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !8493, file: !197, line: 31, baseType: !8496, size: 64)
!8496 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8493, file: !197, line: 28, size: 64, elements: !8497)
!8497 = !{!8498, !8499}
!8498 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !8496, file: !197, line: 29, baseType: !52, size: 64)
!8499 = !DIDerivedType(tag: DW_TAG_member, name: "static_buffer", scope: !8496, file: !197, line: 30, baseType: !205, size: 64)
!8500 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8493, file: !197, line: 34, baseType: !8501, size: 128, offset: 64)
!8501 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8493, file: !197, line: 32, size: 128, elements: !8502)
!8502 = !{!8503, !8504}
!8503 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !8501, file: !197, line: 33, baseType: !55, size: 64)
!8504 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !8501, file: !197, line: 33, baseType: !55, size: 64, offset: 64)
!8505 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8493, file: !197, line: 35, baseType: !9, size: 32, offset: 192)
!8506 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !8488, file: !7, line: 180, baseType: !205, size: 64, offset: 64)
!8507 = !DIDerivedType(tag: DW_TAG_member, name: "content_length", scope: !8488, file: !7, line: 181, baseType: !55, size: 64, offset: 128)
!8508 = !DIDerivedType(tag: DW_TAG_member, name: "headers", scope: !8488, file: !7, line: 182, baseType: !8469, size: 64, offset: 192)
!8509 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !8488, file: !7, line: 188, baseType: !8510, size: 192, offset: 256)
!8510 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8488, file: !7, line: 184, size: 192, elements: !8511)
!8511 = !{!8512, !8516, !8517}
!8512 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !8510, file: !7, line: 185, baseType: !8513, size: 64)
!8513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8514, size: 64)
!8514 = !DISubroutineType(types: !8515)
!8515 = !{!6, !8383, !111}
!8516 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8510, file: !7, line: 186, baseType: !111, size: 64, offset: 64)
!8517 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !8510, file: !7, line: 187, baseType: !111, size: 64, offset: 128)
!8518 = !DILocalVariable(name: "request", arg: 1, scope: !8380, file: !844, line: 33, type: !8383)
!8519 = !DILocation(line: 33, column: 29, scope: !8380)
!8520 = !DILocalVariable(name: "dirfd", arg: 2, scope: !8380, file: !844, line: 34, type: !34)
!8521 = !DILocation(line: 34, column: 17, scope: !8380)
!8522 = !DILocalVariable(name: "pathname", arg: 3, scope: !8380, file: !844, line: 34, type: !205)
!8523 = !DILocation(line: 34, column: 36, scope: !8380)
!8524 = !DILocalVariable(name: "flags", arg: 4, scope: !8380, file: !844, line: 34, type: !34)
!8525 = !DILocation(line: 34, column: 50, scope: !8380)
!8526 = !DILocalVariable(name: "tries", scope: !8527, file: !844, line: 36, type: !34)
!8527 = distinct !DILexicalBlock(scope: !8380, file: !844, line: 36, column: 5)
!8528 = !DILocation(line: 36, column: 14, scope: !8527)
!8529 = !DILocation(line: 36, column: 10, scope: !8527)
!8530 = !DILocation(line: 36, column: 40, scope: !8531)
!8531 = distinct !DILexicalBlock(scope: !8527, file: !844, line: 36, column: 5)
!8532 = !DILocation(line: 36, column: 5, scope: !8527)
!8533 = !DILocalVariable(name: "fd", scope: !8534, file: !844, line: 37, type: !34)
!8534 = distinct !DILexicalBlock(scope: !8531, file: !844, line: 36, column: 56)
!8535 = !DILocation(line: 37, column: 13, scope: !8534)
!8536 = !DILocation(line: 37, column: 25, scope: !8534)
!8537 = !DILocation(line: 37, column: 32, scope: !8534)
!8538 = !DILocation(line: 37, column: 42, scope: !8534)
!8539 = !DILocation(line: 37, column: 18, scope: !8534)
!8540 = !DILocation(line: 38, column: 13, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8534, file: !844, line: 38, column: 13)
!8542 = !DILocation(line: 38, column: 13, scope: !8534)
!8543 = !DILocation(line: 39, column: 24, scope: !8544)
!8544 = distinct !DILexicalBlock(scope: !8541, file: !844, line: 38, column: 30)
!8545 = !DILocation(line: 39, column: 33, scope: !8544)
!8546 = !DILocation(line: 39, column: 39, scope: !8544)
!8547 = !DILocation(line: 39, column: 82, scope: !8544)
!8548 = !DILocation(line: 39, column: 72, scope: !8544)
!8549 = !DILocation(line: 39, column: 64, scope: !8544)
!8550 = !DILocation(line: 39, column: 13, scope: !8544)
!8551 = !DILocation(line: 40, column: 20, scope: !8544)
!8552 = !DILocation(line: 40, column: 13, scope: !8544)
!8553 = !DILocation(line: 43, column: 17, scope: !8534)
!8554 = !DILocation(line: 43, column: 9, scope: !8534)
!8555 = !DILocation(line: 48, column: 24, scope: !8556)
!8556 = distinct !DILexicalBlock(scope: !8534, file: !844, line: 43, column: 24)
!8557 = !DILocation(line: 48, column: 33, scope: !8556)
!8558 = !DILocation(line: 48, column: 39, scope: !8556)
!8559 = !DILocation(line: 48, column: 13, scope: !8556)
!8560 = !DILocation(line: 49, column: 13, scope: !8556)
!8561 = !DILocation(line: 51, column: 21, scope: !8556)
!8562 = !DILocation(line: 51, column: 20, scope: !8556)
!8563 = !DILocation(line: 51, column: 13, scope: !8556)
!8564 = !DILocation(line: 53, column: 5, scope: !8534)
!8565 = !DILocation(line: 36, column: 52, scope: !8531)
!8566 = !DILocation(line: 36, column: 5, scope: !8531)
!8567 = distinct !{!8567, !8532, !8568, !3413}
!8568 = !DILocation(line: 53, column: 5, scope: !8527)
!8569 = !DILocation(line: 55, column: 5, scope: !8380)
!8570 = !DILocation(line: 56, column: 1, scope: !8380)
!8571 = distinct !DISubprogram(name: "lwan_writev", scope: !844, file: !844, line: 59, type: !8572, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3306, retainedNodes: !286)
!8572 = !DISubroutineType(types: !8573)
!8573 = !{!3313, !8383, !8574, !34}
!8574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8575, size: 64)
!8575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !8576, line: 26, size: 128, elements: !8577)
!8576 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_iovec.h", directory: "", checksumkind: CSK_MD5, checksum: "906dd4c9f8205bfe8a00a7ac49f298dc")
!8577 = !{!8578, !8579}
!8578 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !8575, file: !8576, line: 28, baseType: !111, size: 64)
!8579 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !8575, file: !8576, line: 29, baseType: !55, size: 64, offset: 64)
!8580 = !DILocalVariable(name: "request", arg: 1, scope: !8571, file: !844, line: 59, type: !8383)
!8581 = !DILocation(line: 59, column: 29, scope: !8571)
!8582 = !DILocalVariable(name: "iov", arg: 2, scope: !8571, file: !844, line: 59, type: !8574)
!8583 = !DILocation(line: 59, column: 52, scope: !8571)
!8584 = !DILocalVariable(name: "iov_count", arg: 3, scope: !8571, file: !844, line: 59, type: !34)
!8585 = !DILocation(line: 59, column: 61, scope: !8571)
!8586 = !DILocalVariable(name: "total_written", scope: !8571, file: !844, line: 61, type: !3313)
!8587 = !DILocation(line: 61, column: 13, scope: !8571)
!8588 = !DILocalVariable(name: "curr_iov", scope: !8571, file: !844, line: 62, type: !34)
!8589 = !DILocation(line: 62, column: 9, scope: !8571)
!8590 = !DILocalVariable(name: "tries", scope: !8591, file: !844, line: 64, type: !34)
!8591 = distinct !DILexicalBlock(scope: !8571, file: !844, line: 64, column: 5)
!8592 = !DILocation(line: 64, column: 14, scope: !8591)
!8593 = !DILocation(line: 64, column: 10, scope: !8591)
!8594 = !DILocation(line: 64, column: 40, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8591, file: !844, line: 64, column: 5)
!8596 = !DILocation(line: 64, column: 5, scope: !8591)
!8597 = !DILocalVariable(name: "written", scope: !8598, file: !844, line: 65, type: !3313)
!8598 = distinct !DILexicalBlock(scope: !8595, file: !844, line: 64, column: 48)
!8599 = !DILocation(line: 65, column: 17, scope: !8598)
!8600 = !DILocation(line: 65, column: 34, scope: !8598)
!8601 = !DILocation(line: 65, column: 43, scope: !8598)
!8602 = !DILocation(line: 65, column: 47, scope: !8598)
!8603 = !DILocation(line: 65, column: 53, scope: !8598)
!8604 = !DILocation(line: 65, column: 51, scope: !8598)
!8605 = !DILocation(line: 65, column: 63, scope: !8598)
!8606 = !DILocation(line: 65, column: 75, scope: !8598)
!8607 = !DILocation(line: 65, column: 73, scope: !8598)
!8608 = !DILocation(line: 65, column: 27, scope: !8598)
!8609 = !DILocation(line: 66, column: 13, scope: !8610)
!8610 = distinct !DILexicalBlock(scope: !8598, file: !844, line: 66, column: 13)
!8611 = !DILocation(line: 66, column: 13, scope: !8598)
!8612 = !DILocation(line: 68, column: 18, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8610, file: !844, line: 66, column: 36)
!8614 = !DILocation(line: 70, column: 21, scope: !8613)
!8615 = !DILocation(line: 70, column: 13, scope: !8613)
!8616 = !DILocation(line: 73, column: 17, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8613, file: !844, line: 70, column: 28)
!8618 = !DILocation(line: 75, column: 17, scope: !8617)
!8619 = !DILocation(line: 79, column: 26, scope: !8598)
!8620 = !DILocation(line: 79, column: 23, scope: !8598)
!8621 = !DILocation(line: 81, column: 9, scope: !8598)
!8622 = !DILocation(line: 81, column: 16, scope: !8598)
!8623 = !DILocation(line: 81, column: 27, scope: !8598)
!8624 = !DILocation(line: 81, column: 25, scope: !8598)
!8625 = !DILocation(line: 81, column: 37, scope: !8598)
!8626 = !DILocation(line: 81, column: 40, scope: !8598)
!8627 = !DILocation(line: 81, column: 60, scope: !8598)
!8628 = !DILocation(line: 81, column: 64, scope: !8598)
!8629 = !DILocation(line: 81, column: 74, scope: !8598)
!8630 = !DILocation(line: 81, column: 48, scope: !8598)
!8631 = !DILocation(line: 0, scope: !8598)
!8632 = !DILocation(line: 82, column: 33, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8598, file: !844, line: 81, column: 83)
!8634 = !DILocation(line: 82, column: 37, scope: !8633)
!8635 = !DILocation(line: 82, column: 47, scope: !8633)
!8636 = !DILocation(line: 82, column: 21, scope: !8633)
!8637 = !DILocation(line: 83, column: 21, scope: !8633)
!8638 = distinct !{!8638, !8621, !8639, !3413}
!8639 = !DILocation(line: 84, column: 9, scope: !8598)
!8640 = !DILocation(line: 86, column: 13, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8598, file: !844, line: 86, column: 13)
!8642 = !DILocation(line: 86, column: 25, scope: !8641)
!8643 = !DILocation(line: 86, column: 22, scope: !8641)
!8644 = !DILocation(line: 86, column: 13, scope: !8598)
!8645 = !DILocation(line: 87, column: 20, scope: !8641)
!8646 = !DILocation(line: 87, column: 13, scope: !8641)
!8647 = !DILocation(line: 89, column: 42, scope: !8598)
!8648 = !DILocation(line: 89, column: 46, scope: !8598)
!8649 = !DILocation(line: 89, column: 56, scope: !8598)
!8650 = !DILocation(line: 89, column: 67, scope: !8598)
!8651 = !DILocation(line: 89, column: 65, scope: !8598)
!8652 = !DILocation(line: 89, column: 9, scope: !8598)
!8653 = !DILocation(line: 89, column: 13, scope: !8598)
!8654 = !DILocation(line: 89, column: 23, scope: !8598)
!8655 = !DILocation(line: 89, column: 32, scope: !8598)
!8656 = !DILocation(line: 90, column: 42, scope: !8598)
!8657 = !DILocation(line: 90, column: 9, scope: !8598)
!8658 = !DILocation(line: 90, column: 13, scope: !8598)
!8659 = !DILocation(line: 90, column: 23, scope: !8598)
!8660 = !DILocation(line: 90, column: 31, scope: !8598)
!8661 = !DILabel(scope: !8598, name: "try_again", file: !844, line: 92)
!8662 = !DILocation(line: 92, column: 1, scope: !8598)
!8663 = !DILocation(line: 93, column: 20, scope: !8598)
!8664 = !DILocation(line: 93, column: 29, scope: !8598)
!8665 = !DILocation(line: 93, column: 35, scope: !8598)
!8666 = !DILocation(line: 93, column: 9, scope: !8598)
!8667 = !DILocation(line: 64, column: 5, scope: !8595)
!8668 = distinct !{!8668, !8596, !8669, !3413}
!8669 = !DILocation(line: 94, column: 5, scope: !8591)
!8670 = !DILabel(scope: !8571, name: "out", file: !844, line: 96)
!8671 = !DILocation(line: 96, column: 1, scope: !8571)
!8672 = !DILocation(line: 97, column: 16, scope: !8571)
!8673 = !DILocation(line: 97, column: 25, scope: !8571)
!8674 = !DILocation(line: 97, column: 31, scope: !8571)
!8675 = !DILocation(line: 97, column: 5, scope: !8571)
!8676 = !DILocation(line: 98, column: 5, scope: !8571)
!8677 = distinct !DISubprogram(name: "lwan_write", scope: !844, file: !844, line: 102, type: !8678, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3306, retainedNodes: !286)
!8678 = !DISubroutineType(types: !8679)
!8679 = !{!3313, !8383, !465, !55}
!8680 = !DILocalVariable(name: "request", arg: 1, scope: !8677, file: !844, line: 102, type: !8383)
!8681 = !DILocation(line: 102, column: 28, scope: !8677)
!8682 = !DILocalVariable(name: "buf", arg: 2, scope: !8677, file: !844, line: 102, type: !465)
!8683 = !DILocation(line: 102, column: 49, scope: !8677)
!8684 = !DILocalVariable(name: "count", arg: 3, scope: !8677, file: !844, line: 102, type: !55)
!8685 = !DILocation(line: 102, column: 61, scope: !8677)
!8686 = !DILocalVariable(name: "total_written", scope: !8677, file: !844, line: 104, type: !3313)
!8687 = !DILocation(line: 104, column: 13, scope: !8677)
!8688 = !DILocalVariable(name: "tries", scope: !8689, file: !844, line: 106, type: !34)
!8689 = distinct !DILexicalBlock(scope: !8677, file: !844, line: 106, column: 5)
!8690 = !DILocation(line: 106, column: 14, scope: !8689)
!8691 = !DILocation(line: 106, column: 10, scope: !8689)
!8692 = !DILocation(line: 106, column: 40, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8689, file: !844, line: 106, column: 5)
!8694 = !DILocation(line: 106, column: 5, scope: !8689)
!8695 = !DILocalVariable(name: "written", scope: !8696, file: !844, line: 107, type: !3313)
!8696 = distinct !DILexicalBlock(scope: !8693, file: !844, line: 106, column: 48)
!8697 = !DILocation(line: 107, column: 17, scope: !8696)
!8698 = !DILocation(line: 107, column: 33, scope: !8696)
!8699 = !DILocation(line: 107, column: 42, scope: !8696)
!8700 = !DILocation(line: 107, column: 46, scope: !8696)
!8701 = !DILocation(line: 107, column: 51, scope: !8696)
!8702 = !DILocation(line: 107, column: 27, scope: !8696)
!8703 = !DILocation(line: 108, column: 13, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8696, file: !844, line: 108, column: 13)
!8705 = !DILocation(line: 108, column: 13, scope: !8696)
!8706 = !DILocation(line: 109, column: 18, scope: !8707)
!8707 = distinct !DILexicalBlock(scope: !8704, file: !844, line: 108, column: 36)
!8708 = !DILocation(line: 111, column: 21, scope: !8707)
!8709 = !DILocation(line: 111, column: 13, scope: !8707)
!8710 = !DILocation(line: 114, column: 17, scope: !8711)
!8711 = distinct !DILexicalBlock(scope: !8707, file: !844, line: 111, column: 28)
!8712 = !DILocation(line: 116, column: 17, scope: !8711)
!8713 = !DILocation(line: 120, column: 26, scope: !8696)
!8714 = !DILocation(line: 120, column: 23, scope: !8696)
!8715 = !DILocation(line: 121, column: 21, scope: !8716)
!8716 = distinct !DILexicalBlock(scope: !8696, file: !844, line: 121, column: 13)
!8717 = !DILocation(line: 121, column: 38, scope: !8716)
!8718 = !DILocation(line: 121, column: 35, scope: !8716)
!8719 = !DILocation(line: 121, column: 13, scope: !8696)
!8720 = !DILocation(line: 122, column: 20, scope: !8716)
!8721 = !DILocation(line: 122, column: 13, scope: !8716)
!8722 = !DILocation(line: 123, column: 21, scope: !8723)
!8723 = distinct !DILexicalBlock(scope: !8696, file: !844, line: 123, column: 13)
!8724 = !DILocation(line: 123, column: 37, scope: !8723)
!8725 = !DILocation(line: 123, column: 35, scope: !8723)
!8726 = !DILocation(line: 123, column: 13, scope: !8696)
!8727 = !DILocation(line: 124, column: 27, scope: !8723)
!8728 = !DILocation(line: 124, column: 33, scope: !8723)
!8729 = !DILocation(line: 124, column: 31, scope: !8723)
!8730 = !DILocation(line: 124, column: 17, scope: !8723)
!8731 = !DILocation(line: 124, column: 13, scope: !8723)
!8732 = !DILabel(scope: !8696, name: "try_again", file: !844, line: 126)
!8733 = !DILocation(line: 126, column: 1, scope: !8696)
!8734 = !DILocation(line: 127, column: 20, scope: !8696)
!8735 = !DILocation(line: 127, column: 29, scope: !8696)
!8736 = !DILocation(line: 127, column: 35, scope: !8696)
!8737 = !DILocation(line: 127, column: 9, scope: !8696)
!8738 = !DILocation(line: 106, column: 5, scope: !8693)
!8739 = distinct !{!8739, !8694, !8740, !3413}
!8740 = !DILocation(line: 128, column: 5, scope: !8689)
!8741 = !DILabel(scope: !8677, name: "out", file: !844, line: 130)
!8742 = !DILocation(line: 130, column: 1, scope: !8677)
!8743 = !DILocation(line: 131, column: 16, scope: !8677)
!8744 = !DILocation(line: 131, column: 25, scope: !8677)
!8745 = !DILocation(line: 131, column: 31, scope: !8677)
!8746 = !DILocation(line: 131, column: 5, scope: !8677)
!8747 = !DILocation(line: 132, column: 5, scope: !8677)
!8748 = distinct !DISubprogram(name: "lwan_send", scope: !844, file: !844, line: 136, type: !8749, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3306, retainedNodes: !286)
!8749 = !DISubroutineType(types: !8750)
!8750 = !{!3313, !8383, !465, !55, !34}
!8751 = !DILocalVariable(name: "request", arg: 1, scope: !8748, file: !844, line: 136, type: !8383)
!8752 = !DILocation(line: 136, column: 27, scope: !8748)
!8753 = !DILocalVariable(name: "buf", arg: 2, scope: !8748, file: !844, line: 136, type: !465)
!8754 = !DILocation(line: 136, column: 48, scope: !8748)
!8755 = !DILocalVariable(name: "count", arg: 3, scope: !8748, file: !844, line: 136, type: !55)
!8756 = !DILocation(line: 136, column: 60, scope: !8748)
!8757 = !DILocalVariable(name: "flags", arg: 4, scope: !8748, file: !844, line: 136, type: !34)
!8758 = !DILocation(line: 136, column: 71, scope: !8748)
!8759 = !DILocalVariable(name: "total_sent", scope: !8748, file: !844, line: 138, type: !3313)
!8760 = !DILocation(line: 138, column: 13, scope: !8748)
!8761 = !DILocalVariable(name: "tries", scope: !8762, file: !844, line: 140, type: !34)
!8762 = distinct !DILexicalBlock(scope: !8748, file: !844, line: 140, column: 5)
!8763 = !DILocation(line: 140, column: 14, scope: !8762)
!8764 = !DILocation(line: 140, column: 10, scope: !8762)
!8765 = !DILocation(line: 140, column: 40, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !8762, file: !844, line: 140, column: 5)
!8767 = !DILocation(line: 140, column: 5, scope: !8762)
!8768 = !DILocalVariable(name: "written", scope: !8769, file: !844, line: 141, type: !3313)
!8769 = distinct !DILexicalBlock(scope: !8766, file: !844, line: 140, column: 48)
!8770 = !DILocation(line: 141, column: 17, scope: !8769)
!8771 = !DILocation(line: 141, column: 32, scope: !8769)
!8772 = !DILocation(line: 141, column: 41, scope: !8769)
!8773 = !DILocation(line: 141, column: 45, scope: !8769)
!8774 = !DILocation(line: 141, column: 50, scope: !8769)
!8775 = !DILocation(line: 141, column: 57, scope: !8769)
!8776 = !DILocation(line: 141, column: 27, scope: !8769)
!8777 = !DILocation(line: 142, column: 13, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8769, file: !844, line: 142, column: 13)
!8779 = !DILocation(line: 142, column: 13, scope: !8769)
!8780 = !DILocation(line: 143, column: 18, scope: !8781)
!8781 = distinct !DILexicalBlock(scope: !8778, file: !844, line: 142, column: 36)
!8782 = !DILocation(line: 145, column: 21, scope: !8781)
!8783 = !DILocation(line: 145, column: 13, scope: !8781)
!8784 = !DILocation(line: 148, column: 17, scope: !8785)
!8785 = distinct !DILexicalBlock(scope: !8781, file: !844, line: 145, column: 28)
!8786 = !DILocation(line: 150, column: 17, scope: !8785)
!8787 = !DILocation(line: 154, column: 23, scope: !8769)
!8788 = !DILocation(line: 154, column: 20, scope: !8769)
!8789 = !DILocation(line: 155, column: 21, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8769, file: !844, line: 155, column: 13)
!8791 = !DILocation(line: 155, column: 35, scope: !8790)
!8792 = !DILocation(line: 155, column: 32, scope: !8790)
!8793 = !DILocation(line: 155, column: 13, scope: !8769)
!8794 = !DILocation(line: 156, column: 20, scope: !8790)
!8795 = !DILocation(line: 156, column: 13, scope: !8790)
!8796 = !DILocation(line: 157, column: 21, scope: !8797)
!8797 = distinct !DILexicalBlock(scope: !8769, file: !844, line: 157, column: 13)
!8798 = !DILocation(line: 157, column: 34, scope: !8797)
!8799 = !DILocation(line: 157, column: 32, scope: !8797)
!8800 = !DILocation(line: 157, column: 13, scope: !8769)
!8801 = !DILocation(line: 158, column: 27, scope: !8797)
!8802 = !DILocation(line: 158, column: 33, scope: !8797)
!8803 = !DILocation(line: 158, column: 31, scope: !8797)
!8804 = !DILocation(line: 158, column: 17, scope: !8797)
!8805 = !DILocation(line: 158, column: 13, scope: !8797)
!8806 = !DILabel(scope: !8769, name: "try_again", file: !844, line: 160)
!8807 = !DILocation(line: 160, column: 1, scope: !8769)
!8808 = !DILocation(line: 161, column: 20, scope: !8769)
!8809 = !DILocation(line: 161, column: 29, scope: !8769)
!8810 = !DILocation(line: 161, column: 35, scope: !8769)
!8811 = !DILocation(line: 161, column: 9, scope: !8769)
!8812 = !DILocation(line: 140, column: 5, scope: !8766)
!8813 = distinct !{!8813, !8767, !8814, !3413}
!8814 = !DILocation(line: 162, column: 5, scope: !8762)
!8815 = !DILabel(scope: !8748, name: "out", file: !844, line: 164)
!8816 = !DILocation(line: 164, column: 1, scope: !8748)
!8817 = !DILocation(line: 165, column: 16, scope: !8748)
!8818 = !DILocation(line: 165, column: 25, scope: !8748)
!8819 = !DILocation(line: 165, column: 31, scope: !8748)
!8820 = !DILocation(line: 165, column: 5, scope: !8748)
!8821 = !DILocation(line: 166, column: 5, scope: !8748)
!8822 = distinct !DISubprogram(name: "lwan_sendfile", scope: !844, file: !844, line: 235, type: !8823, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3306, retainedNodes: !286)
!8823 = !DISubroutineType(types: !8824)
!8824 = !{!3313, !8383, !34, !2271, !55}
!8825 = !DILocalVariable(name: "request", arg: 1, scope: !8822, file: !844, line: 235, type: !8383)
!8826 = !DILocation(line: 235, column: 31, scope: !8822)
!8827 = !DILocalVariable(name: "in_fd", arg: 2, scope: !8822, file: !844, line: 235, type: !34)
!8828 = !DILocation(line: 235, column: 44, scope: !8822)
!8829 = !DILocalVariable(name: "offset", arg: 3, scope: !8822, file: !844, line: 235, type: !2271)
!8830 = !DILocation(line: 235, column: 57, scope: !8822)
!8831 = !DILocalVariable(name: "count", arg: 4, scope: !8822, file: !844, line: 235, type: !55)
!8832 = !DILocation(line: 235, column: 72, scope: !8822)
!8833 = !DILocation(line: 237, column: 9, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8822, file: !844, line: 237, column: 9)
!8835 = !DILocation(line: 237, column: 15, scope: !8834)
!8836 = !DILocation(line: 237, column: 9, scope: !8822)
!8837 = !DILocation(line: 238, column: 13, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8839, file: !844, line: 238, column: 13)
!8839 = distinct !DILexicalBlock(scope: !8834, file: !844, line: 237, column: 34)
!8840 = !DILocation(line: 238, column: 13, scope: !8839)
!8841 = !DILocation(line: 240, column: 13, scope: !8838)
!8842 = !DILocation(line: 241, column: 5, scope: !8839)
!8843 = !DILocalVariable(name: "written_bytes", scope: !8822, file: !844, line: 243, type: !3313)
!8844 = !DILocation(line: 243, column: 13, scope: !8822)
!8845 = !DILocation(line: 244, column: 4, scope: !8822)
!8846 = !DILocation(line: 244, column: 13, scope: !8822)
!8847 = !DILocation(line: 244, column: 19, scope: !8822)
!8848 = !DILocation(line: 244, column: 25, scope: !8822)
!8849 = !DILocation(line: 244, column: 32, scope: !8822)
!8850 = !DILocation(line: 244, column: 41, scope: !8822)
!8851 = !DILocation(line: 244, column: 45, scope: !8822)
!8852 = !DILocation(line: 244, column: 53, scope: !8822)
!8853 = !DILocalVariable(name: "coro", arg: 1, scope: !8854, file: !844, line: 205, type: !76)
!8854 = distinct !DISubprogram(name: "sendfile_linux_sendfile", scope: !844, file: !844, line: 205, type: !8855, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3306, retainedNodes: !286)
!8855 = !DISubroutineType(types: !8856)
!8856 = !{!3313, !76, !34, !34, !2271, !55}
!8857 = !DILocation(line: 205, column: 33, scope: !8854, inlinedAt: !8858)
!8858 = distinct !DILocation(line: 243, column: 29, scope: !8822)
!8859 = !DILocalVariable(name: "in_fd", arg: 2, scope: !8854, file: !844, line: 205, type: !34)
!8860 = !DILocation(line: 205, column: 43, scope: !8854, inlinedAt: !8858)
!8861 = !DILocalVariable(name: "out_fd", arg: 3, scope: !8854, file: !844, line: 205, type: !34)
!8862 = !DILocation(line: 205, column: 54, scope: !8854, inlinedAt: !8858)
!8863 = !DILocalVariable(name: "offset", arg: 4, scope: !8854, file: !844, line: 205, type: !2271)
!8864 = !DILocation(line: 205, column: 68, scope: !8854, inlinedAt: !8858)
!8865 = !DILocalVariable(name: "count", arg: 5, scope: !8854, file: !844, line: 205, type: !55)
!8866 = !DILocation(line: 205, column: 83, scope: !8854, inlinedAt: !8858)
!8867 = !DILocalVariable(name: "total_written", scope: !8854, file: !844, line: 207, type: !55)
!8868 = !DILocation(line: 207, column: 12, scope: !8854, inlinedAt: !8858)
!8869 = !DILocalVariable(name: "to_be_written", scope: !8854, file: !844, line: 208, type: !55)
!8870 = !DILocation(line: 208, column: 12, scope: !8854, inlinedAt: !8858)
!8871 = !DILocation(line: 208, column: 28, scope: !8854, inlinedAt: !8858)
!8872 = !DILocation(line: 210, column: 5, scope: !8854, inlinedAt: !8858)
!8873 = !DILocalVariable(name: "written", scope: !8874, file: !844, line: 211, type: !3313)
!8874 = distinct !DILexicalBlock(scope: !8854, file: !844, line: 210, column: 8)
!8875 = !DILocation(line: 211, column: 17, scope: !8874, inlinedAt: !8858)
!8876 = !DILocation(line: 211, column: 36, scope: !8874, inlinedAt: !8858)
!8877 = !DILocation(line: 211, column: 44, scope: !8874, inlinedAt: !8858)
!8878 = !DILocation(line: 211, column: 60, scope: !8874, inlinedAt: !8858)
!8879 = !DILocation(line: 211, column: 27, scope: !8874, inlinedAt: !8858)
!8880 = !DILocation(line: 212, column: 13, scope: !8881, inlinedAt: !8858)
!8881 = distinct !DILexicalBlock(scope: !8874, file: !844, line: 212, column: 13)
!8882 = !DILocation(line: 212, column: 21, scope: !8881, inlinedAt: !8858)
!8883 = !DILocation(line: 212, column: 13, scope: !8874, inlinedAt: !8858)
!8884 = !DILocation(line: 213, column: 21, scope: !8885, inlinedAt: !8858)
!8885 = distinct !DILexicalBlock(scope: !8881, file: !844, line: 212, column: 26)
!8886 = !DILocation(line: 213, column: 13, scope: !8885, inlinedAt: !8858)
!8887 = !DILocation(line: 216, column: 28, scope: !8888, inlinedAt: !8858)
!8888 = distinct !DILexicalBlock(scope: !8885, file: !844, line: 213, column: 28)
!8889 = !DILocation(line: 216, column: 17, scope: !8888, inlinedAt: !8858)
!8890 = !DILocation(line: 217, column: 17, scope: !8888, inlinedAt: !8858)
!8891 = !DILocation(line: 220, column: 28, scope: !8888, inlinedAt: !8858)
!8892 = !DILocation(line: 220, column: 17, scope: !8888, inlinedAt: !8858)
!8893 = !DILocation(line: 221, column: 17, scope: !8888, inlinedAt: !8858)
!8894 = !DILocation(line: 225, column: 34, scope: !8874, inlinedAt: !8858)
!8895 = !DILocation(line: 225, column: 23, scope: !8874, inlinedAt: !8858)
!8896 = !DILocation(line: 226, column: 34, scope: !8874, inlinedAt: !8858)
!8897 = !DILocation(line: 226, column: 23, scope: !8874, inlinedAt: !8858)
!8898 = !DILocation(line: 228, column: 20, scope: !8874, inlinedAt: !8858)
!8899 = !DILocation(line: 228, column: 9, scope: !8874, inlinedAt: !8858)
!8900 = !DILocation(line: 229, column: 5, scope: !8874, inlinedAt: !8858)
!8901 = !DILocation(line: 229, column: 14, scope: !8854, inlinedAt: !8858)
!8902 = !DILocation(line: 229, column: 28, scope: !8854, inlinedAt: !8858)
!8903 = distinct !{!8903, !8872, !8904, !3413}
!8904 = !DILocation(line: 229, column: 31, scope: !8854, inlinedAt: !8858)
!8905 = !DILocation(line: 231, column: 21, scope: !8854, inlinedAt: !8858)
!8906 = !DILocation(line: 246, column: 9, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8822, file: !844, line: 246, column: 9)
!8908 = !DILocation(line: 246, column: 9, scope: !8822)
!8909 = !DILocation(line: 247, column: 17, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !8907, file: !844, line: 246, column: 38)
!8911 = !DILocation(line: 247, column: 9, scope: !8910)
!8912 = !DILocation(line: 250, column: 40, scope: !8913)
!8913 = distinct !DILexicalBlock(scope: !8910, file: !844, line: 247, column: 24)
!8914 = !DILocation(line: 250, column: 49, scope: !8913)
!8915 = !DILocation(line: 250, column: 55, scope: !8913)
!8916 = !DILocation(line: 250, column: 61, scope: !8913)
!8917 = !DILocation(line: 250, column: 68, scope: !8913)
!8918 = !DILocation(line: 250, column: 77, scope: !8913)
!8919 = !DILocation(line: 250, column: 81, scope: !8913)
!8920 = !DILocation(line: 250, column: 89, scope: !8913)
!8921 = !DILocalVariable(name: "coro", arg: 1, scope: !8922, file: !844, line: 170, type: !76)
!8922 = distinct !DISubprogram(name: "sendfile_read_write", scope: !844, file: !844, line: 170, type: !8855, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3306, retainedNodes: !286)
!8923 = !DILocation(line: 170, column: 29, scope: !8922, inlinedAt: !8924)
!8924 = distinct !DILocation(line: 250, column: 20, scope: !8913)
!8925 = !DILocalVariable(name: "in_fd", arg: 2, scope: !8922, file: !844, line: 170, type: !34)
!8926 = !DILocation(line: 170, column: 39, scope: !8922, inlinedAt: !8924)
!8927 = !DILocalVariable(name: "out_fd", arg: 3, scope: !8922, file: !844, line: 170, type: !34)
!8928 = !DILocation(line: 170, column: 50, scope: !8922, inlinedAt: !8924)
!8929 = !DILocalVariable(name: "offset", arg: 4, scope: !8922, file: !844, line: 170, type: !2271)
!8930 = !DILocation(line: 170, column: 64, scope: !8922, inlinedAt: !8924)
!8931 = !DILocalVariable(name: "count", arg: 5, scope: !8922, file: !844, line: 170, type: !55)
!8932 = !DILocation(line: 170, column: 79, scope: !8922, inlinedAt: !8924)
!8933 = !DILocalVariable(name: "total_bytes_written", scope: !8922, file: !844, line: 173, type: !3313)
!8934 = !DILocation(line: 173, column: 13, scope: !8922, inlinedAt: !8924)
!8935 = !DILocalVariable(name: "buffer", scope: !8922, file: !844, line: 176, type: !52)
!8936 = !DILocation(line: 176, column: 11, scope: !8922, inlinedAt: !8924)
!8937 = !DILocation(line: 176, column: 32, scope: !8922, inlinedAt: !8924)
!8938 = !DILocation(line: 176, column: 20, scope: !8922, inlinedAt: !8924)
!8939 = !DILocation(line: 178, column: 9, scope: !8940, inlinedAt: !8924)
!8940 = distinct !DILexicalBlock(scope: !8922, file: !844, line: 178, column: 9)
!8941 = !DILocation(line: 178, column: 16, scope: !8940, inlinedAt: !8924)
!8942 = !DILocation(line: 178, column: 25, scope: !8940, inlinedAt: !8924)
!8943 = !DILocation(line: 178, column: 32, scope: !8940, inlinedAt: !8924)
!8944 = !DILocation(line: 178, column: 19, scope: !8940, inlinedAt: !8924)
!8945 = !DILocation(line: 178, column: 50, scope: !8940, inlinedAt: !8924)
!8946 = !DILocation(line: 178, column: 9, scope: !8922, inlinedAt: !8924)
!8947 = !DILocation(line: 179, column: 9, scope: !8948, inlinedAt: !8924)
!8948 = distinct !DILexicalBlock(scope: !8940, file: !844, line: 178, column: 55)
!8949 = !DILocation(line: 180, column: 9, scope: !8948, inlinedAt: !8924)
!8950 = !DILocation(line: 183, column: 5, scope: !8922, inlinedAt: !8924)
!8951 = !DILocation(line: 183, column: 12, scope: !8922, inlinedAt: !8924)
!8952 = !DILocation(line: 183, column: 18, scope: !8922, inlinedAt: !8924)
!8953 = !DILocalVariable(name: "read_bytes", scope: !8954, file: !844, line: 184, type: !3313)
!8954 = distinct !DILexicalBlock(scope: !8922, file: !844, line: 183, column: 23)
!8955 = !DILocation(line: 184, column: 17, scope: !8954, inlinedAt: !8924)
!8956 = !DILocation(line: 184, column: 35, scope: !8954, inlinedAt: !8924)
!8957 = !DILocation(line: 184, column: 42, scope: !8954, inlinedAt: !8924)
!8958 = !DILocation(line: 184, column: 30, scope: !8954, inlinedAt: !8924)
!8959 = !DILocation(line: 185, column: 13, scope: !8960, inlinedAt: !8924)
!8960 = distinct !DILexicalBlock(scope: !8954, file: !844, line: 185, column: 13)
!8961 = !DILocation(line: 185, column: 24, scope: !8960, inlinedAt: !8924)
!8962 = !DILocation(line: 185, column: 13, scope: !8954, inlinedAt: !8924)
!8963 = !DILocation(line: 186, column: 24, scope: !8964, inlinedAt: !8924)
!8964 = distinct !DILexicalBlock(scope: !8960, file: !844, line: 185, column: 29)
!8965 = !DILocation(line: 186, column: 13, scope: !8964, inlinedAt: !8924)
!8966 = !DILocation(line: 187, column: 13, scope: !8964, inlinedAt: !8924)
!8967 = !DILocalVariable(name: "bytes_written", scope: !8954, file: !844, line: 190, type: !3313)
!8968 = !DILocation(line: 190, column: 17, scope: !8954, inlinedAt: !8924)
!8969 = !DILocation(line: 190, column: 39, scope: !8954, inlinedAt: !8924)
!8970 = !DILocation(line: 190, column: 47, scope: !8954, inlinedAt: !8924)
!8971 = !DILocation(line: 190, column: 63, scope: !8954, inlinedAt: !8924)
!8972 = !DILocation(line: 190, column: 33, scope: !8954, inlinedAt: !8924)
!8973 = !DILocation(line: 191, column: 13, scope: !8974, inlinedAt: !8924)
!8974 = distinct !DILexicalBlock(scope: !8954, file: !844, line: 191, column: 13)
!8975 = !DILocation(line: 191, column: 27, scope: !8974, inlinedAt: !8924)
!8976 = !DILocation(line: 191, column: 13, scope: !8954, inlinedAt: !8924)
!8977 = !DILocation(line: 192, column: 24, scope: !8978, inlinedAt: !8924)
!8978 = distinct !DILexicalBlock(scope: !8974, file: !844, line: 191, column: 32)
!8979 = !DILocation(line: 192, column: 13, scope: !8978, inlinedAt: !8924)
!8980 = !DILocation(line: 193, column: 13, scope: !8978, inlinedAt: !8924)
!8981 = !DILocation(line: 196, column: 32, scope: !8954, inlinedAt: !8924)
!8982 = !DILocation(line: 196, column: 29, scope: !8954, inlinedAt: !8924)
!8983 = !DILocation(line: 197, column: 26, scope: !8954, inlinedAt: !8924)
!8984 = !DILocation(line: 197, column: 15, scope: !8954, inlinedAt: !8924)
!8985 = !DILocation(line: 198, column: 20, scope: !8954, inlinedAt: !8924)
!8986 = !DILocation(line: 198, column: 9, scope: !8954, inlinedAt: !8924)
!8987 = distinct !{!8987, !8950, !8988, !3413}
!8988 = !DILocation(line: 199, column: 5, scope: !8922, inlinedAt: !8924)
!8989 = !DILocation(line: 201, column: 12, scope: !8922, inlinedAt: !8924)
!8990 = !DILocation(line: 201, column: 5, scope: !8922, inlinedAt: !8924)
!8991 = !DILocation(line: 202, column: 1, scope: !8922, inlinedAt: !8924)
!8992 = !DILocation(line: 250, column: 13, scope: !8913)
!8993 = !DILocation(line: 252, column: 5, scope: !8910)
!8994 = !DILocation(line: 253, column: 12, scope: !8822)
!8995 = !DILocation(line: 253, column: 5, scope: !8822)
!8996 = !DILocation(line: 254, column: 1, scope: !8822)
!8997 = distinct !DISubprogram(name: "lwan_job_thread_init", scope: !867, file: !867, line: 75, type: !1853, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !856, retainedNodes: !286)
!8998 = !DILocation(line: 77, column: 5, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !9000, file: !867, line: 77, column: 5)
!9000 = distinct !DILexicalBlock(scope: !8997, file: !867, line: 77, column: 5)
!9001 = !DILocation(line: 77, column: 5, scope: !9000)
!9002 = !DILocation(line: 79, column: 5, scope: !8997)
!9003 = !DILocation(line: 81, column: 5, scope: !8997)
!9004 = !DILocation(line: 83, column: 13, scope: !8997)
!9005 = !DILocation(line: 84, column: 9, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !8997, file: !867, line: 84, column: 9)
!9007 = !DILocation(line: 84, column: 55, scope: !9006)
!9008 = !DILocation(line: 84, column: 9, scope: !8997)
!9009 = !DILocation(line: 85, column: 9, scope: !9006)
!9010 = !DILocalVariable(name: "sched_param", scope: !8997, file: !867, line: 88, type: !9011)
!9011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_param", file: !9012, line: 23, size: 32, elements: !9013)
!9012 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_sched_param.h", directory: "", checksumkind: CSK_MD5, checksum: "13c2f29d5f5dc39597ef32d201b78292")
!9013 = !{!9014}
!9014 = !DIDerivedType(tag: DW_TAG_member, name: "sched_priority", scope: !9011, file: !9012, line: 25, baseType: !34, size: 32)
!9015 = !DILocation(line: 88, column: 24, scope: !8997)
!9016 = !DILocation(line: 91, column: 31, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !8997, file: !867, line: 91, column: 9)
!9018 = !DILocation(line: 91, column: 9, scope: !9017)
!9019 = !DILocation(line: 91, column: 63, scope: !9017)
!9020 = !DILocation(line: 91, column: 9, scope: !8997)
!9021 = !DILocation(line: 92, column: 9, scope: !9017)
!9022 = !DILocation(line: 94, column: 1, scope: !8997)
!9023 = distinct !DISubprogram(name: "list_head_init", scope: !659, file: !659, line: 309, type: !9024, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !856, retainedNodes: !286)
!9024 = !DISubroutineType(types: !9025)
!9025 = !{null, !6129}
!9026 = !DILocalVariable(name: "h", arg: 1, scope: !9023, file: !659, line: 309, type: !6129)
!9027 = !DILocation(line: 309, column: 53, scope: !9023)
!9028 = !DILocation(line: 311, column: 27, scope: !9023)
!9029 = !DILocation(line: 311, column: 30, scope: !9023)
!9030 = !DILocation(line: 311, column: 14, scope: !9023)
!9031 = !DILocation(line: 311, column: 17, scope: !9023)
!9032 = !DILocation(line: 311, column: 19, scope: !9023)
!9033 = !DILocation(line: 311, column: 24, scope: !9023)
!9034 = !DILocation(line: 311, column: 2, scope: !9023)
!9035 = !DILocation(line: 311, column: 5, scope: !9023)
!9036 = !DILocation(line: 311, column: 7, scope: !9023)
!9037 = !DILocation(line: 311, column: 12, scope: !9023)
!9038 = !DILocation(line: 312, column: 1, scope: !9023)
!9039 = distinct !DISubprogram(name: "job_thread", scope: !867, file: !867, line: 45, type: !1409, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !856, retainedNodes: !286)
!9040 = !DILocalVariable(name: "data", arg: 1, scope: !9039, file: !867, line: 45, type: !111)
!9041 = !DILocation(line: 45, column: 18, scope: !9039)
!9042 = !DILocalVariable(name: "rgtp", scope: !9039, file: !867, line: 47, type: !9043)
!9043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2417, line: 11, size: 128, elements: !9044)
!9044 = !{!9045, !9046}
!9045 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !9043, file: !2417, line: 16, baseType: !153, size: 64)
!9046 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !9043, file: !2417, line: 21, baseType: !2421, size: 64, offset: 64)
!9047 = !DILocation(line: 47, column: 21, scope: !9039)
!9048 = !DILocation(line: 49, column: 5, scope: !9039)
!9049 = !DILocation(line: 49, column: 12, scope: !9039)
!9050 = !DILocalVariable(name: "had_job", scope: !9051, file: !867, line: 50, type: !137)
!9051 = distinct !DILexicalBlock(scope: !9039, file: !867, line: 49, column: 21)
!9052 = !DILocation(line: 50, column: 14, scope: !9051)
!9053 = !DILocation(line: 52, column: 13, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9051, file: !867, line: 52, column: 13)
!9055 = !DILocation(line: 52, column: 13, scope: !9051)
!9056 = !DILocalVariable(name: "job", scope: !9057, file: !867, line: 53, type: !6065)
!9057 = distinct !DILexicalBlock(scope: !9054, file: !867, line: 52, column: 56)
!9058 = !DILocation(line: 53, column: 27, scope: !9057)
!9059 = !DILocation(line: 55, column: 13, scope: !9060)
!9060 = distinct !DILexicalBlock(scope: !9057, file: !867, line: 55, column: 13)
!9061 = !DILocation(line: 55, column: 13, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !9060, file: !867, line: 55, column: 13)
!9063 = !DILocation(line: 56, column: 28, scope: !9062)
!9064 = !DILocation(line: 56, column: 33, scope: !9062)
!9065 = !DILocation(line: 56, column: 36, scope: !9062)
!9066 = !DILocation(line: 56, column: 41, scope: !9062)
!9067 = !DILocation(line: 56, column: 25, scope: !9062)
!9068 = !DILocation(line: 56, column: 17, scope: !9062)
!9069 = distinct !{!9069, !9059, !9070, !3413}
!9070 = !DILocation(line: 56, column: 45, scope: !9060)
!9071 = !DILocation(line: 58, column: 13, scope: !9057)
!9072 = !DILocation(line: 59, column: 9, scope: !9057)
!9073 = !DILocation(line: 61, column: 13, scope: !9074)
!9074 = distinct !DILexicalBlock(scope: !9051, file: !867, line: 61, column: 13)
!9075 = !DILocation(line: 61, column: 13, scope: !9051)
!9076 = !DILocation(line: 62, column: 18, scope: !9074)
!9077 = !DILocation(line: 62, column: 25, scope: !9074)
!9078 = !DILocation(line: 62, column: 13, scope: !9074)
!9079 = !DILocation(line: 63, column: 23, scope: !9080)
!9080 = distinct !DILexicalBlock(scope: !9074, file: !867, line: 63, column: 18)
!9081 = !DILocation(line: 63, column: 30, scope: !9080)
!9082 = !DILocation(line: 63, column: 18, scope: !9074)
!9083 = !DILocation(line: 64, column: 18, scope: !9080)
!9084 = !DILocation(line: 64, column: 24, scope: !9080)
!9085 = !DILocation(line: 64, column: 13, scope: !9080)
!9086 = !DILocation(line: 66, column: 13, scope: !9087)
!9087 = distinct !DILexicalBlock(scope: !9051, file: !867, line: 66, column: 13)
!9088 = !DILocation(line: 66, column: 13, scope: !9051)
!9089 = !DILocation(line: 67, column: 17, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9091, file: !867, line: 67, column: 17)
!9091 = distinct !DILexicalBlock(scope: !9087, file: !867, line: 66, column: 51)
!9092 = !DILocation(line: 67, column: 23, scope: !9090)
!9093 = !DILocation(line: 67, column: 17, scope: !9091)
!9094 = !DILocation(line: 68, column: 17, scope: !9090)
!9095 = !DILocation(line: 69, column: 9, scope: !9091)
!9096 = distinct !{!9096, !9048, !9097, !3413}
!9097 = !DILocation(line: 70, column: 5, scope: !9039)
!9098 = !DILocation(line: 72, column: 5, scope: !9039)
!9099 = distinct !DISubprogram(name: "lwan_job_thread_shutdown", scope: !867, file: !867, line: 96, type: !1853, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !856, retainedNodes: !286)
!9100 = !DILocation(line: 98, column: 5, scope: !9099)
!9101 = !DILocation(line: 100, column: 9, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9099, file: !867, line: 100, column: 9)
!9103 = !DILocation(line: 100, column: 9, scope: !9099)
!9104 = !DILocalVariable(name: "node", scope: !9105, file: !867, line: 101, type: !6065)
!9105 = distinct !DILexicalBlock(scope: !9102, file: !867, line: 100, column: 52)
!9106 = !DILocation(line: 101, column: 23, scope: !9105)
!9107 = !DILocalVariable(name: "next", scope: !9105, file: !867, line: 101, type: !6065)
!9108 = !DILocation(line: 101, column: 30, scope: !9105)
!9109 = !DILocation(line: 102, column: 9, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !9105, file: !867, line: 102, column: 9)
!9111 = !DILocation(line: 102, column: 9, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9110, file: !867, line: 102, column: 9)
!9113 = !DILocation(line: 103, column: 23, scope: !9114)
!9114 = distinct !DILexicalBlock(scope: !9112, file: !867, line: 102, column: 53)
!9115 = !DILocation(line: 103, column: 29, scope: !9114)
!9116 = !DILocation(line: 103, column: 13, scope: !9114)
!9117 = !DILocation(line: 104, column: 18, scope: !9114)
!9118 = !DILocation(line: 104, column: 13, scope: !9114)
!9119 = !DILocation(line: 105, column: 9, scope: !9114)
!9120 = distinct !{!9120, !9109, !9121, !3413}
!9121 = !DILocation(line: 105, column: 9, scope: !9110)
!9122 = !DILocation(line: 106, column: 17, scope: !9105)
!9123 = !DILocation(line: 107, column: 32, scope: !9124)
!9124 = distinct !DILexicalBlock(scope: !9105, file: !867, line: 107, column: 13)
!9125 = !DILocation(line: 107, column: 13, scope: !9124)
!9126 = !DILocation(line: 107, column: 44, scope: !9124)
!9127 = !DILocation(line: 107, column: 13, scope: !9105)
!9128 = !DILocation(line: 108, column: 13, scope: !9124)
!9129 = !DILocation(line: 109, column: 9, scope: !9105)
!9130 = !DILocation(line: 110, column: 5, scope: !9105)
!9131 = !DILocation(line: 111, column: 1, scope: !9099)
!9132 = distinct !DISubprogram(name: "lwan_set_url_map", scope: !950, file: !950, line: 249, type: !9133, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !963, retainedNodes: !286)
!9133 = !DISubroutineType(types: !9134)
!9134 = !{null, !9135, !9194}
!9135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9136, size: 64)
!9136 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_t", file: !7, line: 103, baseType: !9137)
!9137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_t_", file: !7, line: 275, size: 640, elements: !9138)
!9138 = !{!9139, !9160, !9185, !9191, !9192, !9193}
!9139 = !DIDerivedType(tag: DW_TAG_member, name: "url_map_trie", scope: !9137, file: !7, line: 276, baseType: !9140, size: 128)
!9140 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_t", file: !92, line: 25, baseType: !9141)
!9141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_t_", file: !92, line: 41, size: 128, elements: !9142)
!9142 = !{!9143, !9159}
!9143 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !9141, file: !92, line: 42, baseType: !9144, size: 64)
!9144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9145, size: 64)
!9145 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_node_t", file: !92, line: 26, baseType: !9146)
!9146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_node_t_", file: !92, line: 29, size: 640, elements: !9147)
!9147 = !{!9148, !9150, !9158}
!9148 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9146, file: !92, line: 30, baseType: !9149, size: 512)
!9149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9144, size: 512, elements: !102)
!9150 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !9146, file: !92, line: 31, baseType: !9151, size: 64, offset: 512)
!9151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9152, size: 64)
!9152 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_leaf_t", file: !92, line: 27, baseType: !9153)
!9153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_leaf_t_", file: !92, line: 35, size: 192, elements: !9154)
!9154 = !{!9155, !9156, !9157}
!9155 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !9153, file: !92, line: 36, baseType: !52, size: 64)
!9156 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9153, file: !92, line: 37, baseType: !111, size: 64, offset: 64)
!9157 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9153, file: !92, line: 38, baseType: !9151, size: 64, offset: 128)
!9158 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !9146, file: !92, line: 32, baseType: !34, size: 32, offset: 576)
!9159 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !9141, file: !92, line: 43, baseType: !115, size: 64, offset: 64)
!9160 = !DIDerivedType(tag: DW_TAG_member, name: "conns", scope: !9137, file: !7, line: 277, baseType: !9161, size: 64, offset: 128)
!9161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9162, size: 64)
!9162 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_connection_t", file: !7, line: 112, baseType: !9163)
!9163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_connection_t_", file: !7, line: 196, size: 256, elements: !9164)
!9164 = !{!9165, !9166, !9167, !9168, !9183, !9184}
!9165 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9163, file: !7, line: 199, baseType: !65, size: 32)
!9166 = !DIDerivedType(tag: DW_TAG_member, name: "time_to_die", scope: !9163, file: !7, line: 200, baseType: !9, size: 32, offset: 32)
!9167 = !DIDerivedType(tag: DW_TAG_member, name: "coro", scope: !9163, file: !7, line: 201, baseType: !76, size: 64, offset: 64)
!9168 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !9163, file: !7, line: 202, baseType: !9169, size: 64, offset: 128)
!9169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9170, size: 64)
!9170 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_thread_t", file: !7, line: 108, baseType: !9171)
!9171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_thread_t_", file: !7, line: 253, size: 832, elements: !9172)
!9172 = !{!9173, !9174, !9180, !9181, !9182}
!9173 = !DIDerivedType(tag: DW_TAG_member, name: "lwan", scope: !9171, file: !7, line: 254, baseType: !9135, size: 64)
!9174 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !9171, file: !7, line: 259, baseType: !9175, size: 576, offset: 64)
!9175 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9171, file: !7, line: 255, size: 576, elements: !9176)
!9176 = !{!9177, !9178, !9179}
!9177 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !9175, file: !7, line: 256, baseType: !146, size: 240)
!9178 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !9175, file: !7, line: 257, baseType: !146, size: 240, offset: 240)
!9179 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !9175, file: !7, line: 258, baseType: !151, size: 64, offset: 512)
!9180 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_fd", scope: !9171, file: !7, line: 261, baseType: !34, size: 32, offset: 640)
!9181 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_fd", scope: !9171, file: !7, line: 262, baseType: !158, size: 64, offset: 672)
!9182 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !9171, file: !7, line: 263, baseType: !162, size: 64, offset: 768)
!9183 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9163, file: !7, line: 203, baseType: !34, size: 32, offset: 192)
!9184 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9163, file: !7, line: 203, baseType: !34, size: 32, offset: 224)
!9185 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !9137, file: !7, line: 283, baseType: !9186, size: 128, offset: 192)
!9186 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9137, file: !7, line: 279, size: 128, elements: !9187)
!9187 = !{!9188, !9189, !9190}
!9188 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !9186, file: !7, line: 280, baseType: !9169, size: 64)
!9189 = !DIDerivedType(tag: DW_TAG_member, name: "max_fd", scope: !9186, file: !7, line: 281, baseType: !9, size: 32, offset: 64)
!9190 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !9186, file: !7, line: 282, baseType: !125, size: 16, offset: 96)
!9191 = !DIDerivedType(tag: DW_TAG_member, name: "module_registry", scope: !9137, file: !7, line: 285, baseType: !127, size: 64, offset: 320)
!9192 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !9137, file: !7, line: 286, baseType: !1386, size: 192, offset: 384)
!9193 = !DIDerivedType(tag: DW_TAG_member, name: "main_socket", scope: !9137, file: !7, line: 287, baseType: !34, size: 32, offset: 576)
!9194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9195, size: 64)
!9195 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9196)
!9196 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_url_map_t", file: !7, line: 109, baseType: !9197)
!9197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_url_map_t_", file: !7, line: 236, size: 576, elements: !9198)
!9198 = !{!9199, !9272, !9273, !9274, !9275, !9276, !9288, !9289}
!9199 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !9197, file: !7, line: 237, baseType: !9200, size: 64)
!9200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9201, size: 64)
!9201 = !DISubroutineType(types: !9202)
!9202 = !{!6, !9203, !9271, !111}
!9203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9204, size: 64)
!9204 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_request_t", file: !7, line: 106, baseType: !9205)
!9205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_request_t_", file: !7, line: 206, size: 1280, elements: !9206)
!9206 = !{!9207, !9208, !9209, !9215, !9216, !9217, !9228, !9229, !9239}
!9207 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9205, file: !7, line: 207, baseType: !32, size: 32)
!9208 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !9205, file: !7, line: 208, baseType: !34, size: 32, offset: 32)
!9209 = !DIDerivedType(tag: DW_TAG_member, name: "url", scope: !9205, file: !7, line: 209, baseType: !9210, size: 128, offset: 64)
!9210 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_value_t", file: !7, line: 110, baseType: !9211)
!9211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_value_t_", file: !7, line: 191, size: 128, elements: !9212)
!9212 = !{!9213, !9214}
!9213 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !9211, file: !7, line: 192, baseType: !52, size: 64)
!9214 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !9211, file: !7, line: 193, baseType: !55, size: 64, offset: 64)
!9215 = !DIDerivedType(tag: DW_TAG_member, name: "original_url", scope: !9205, file: !7, line: 210, baseType: !9210, size: 128, offset: 192)
!9216 = !DIDerivedType(tag: DW_TAG_member, name: "conn", scope: !9205, file: !7, line: 211, baseType: !9161, size: 64, offset: 320)
!9217 = !DIDerivedType(tag: DW_TAG_member, name: "query_params", scope: !9205, file: !7, line: 216, baseType: !9218, size: 128, offset: 384)
!9218 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9205, file: !7, line: 213, size: 128, elements: !9219)
!9219 = !{!9220, !9227}
!9220 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9218, file: !7, line: 214, baseType: !9221, size: 64)
!9221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9222, size: 64)
!9222 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_key_value_t", file: !7, line: 105, baseType: !9223)
!9223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_key_value_t_", file: !7, line: 173, size: 128, elements: !9224)
!9224 = !{!9225, !9226}
!9225 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !9223, file: !7, line: 174, baseType: !52, size: 64)
!9226 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !9223, file: !7, line: 175, baseType: !52, size: 64, offset: 64)
!9227 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !9218, file: !7, line: 215, baseType: !55, size: 64, offset: 64)
!9228 = !DIDerivedType(tag: DW_TAG_member, name: "post_data", scope: !9205, file: !7, line: 216, baseType: !9218, size: 128, offset: 512)
!9229 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !9205, file: !7, line: 223, baseType: !9230, size: 192, offset: 640)
!9230 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9205, file: !7, line: 217, size: 192, elements: !9231)
!9231 = !{!9232, !9233}
!9232 = !DIDerivedType(tag: DW_TAG_member, name: "if_modified_since", scope: !9230, file: !7, line: 218, baseType: !151, size: 64)
!9233 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !9230, file: !7, line: 222, baseType: !9234, size: 128, offset: 64)
!9234 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9230, file: !7, line: 219, size: 128, elements: !9235)
!9235 = !{!9236, !9238}
!9236 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !9234, file: !7, line: 220, baseType: !9237, size: 64)
!9237 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !3311, line: 243, baseType: !188)
!9238 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !9234, file: !7, line: 221, baseType: !9237, size: 64, offset: 64)
!9239 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !9205, file: !7, line: 224, baseType: !9240, size: 448, offset: 832)
!9240 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_response_t", file: !7, line: 107, baseType: !9241)
!9241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_response_t_", file: !7, line: 178, size: 448, elements: !9242)
!9242 = !{!9243, !9259, !9260, !9261, !9262}
!9243 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !9241, file: !7, line: 179, baseType: !9244, size: 64)
!9244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9245, size: 64)
!9245 = !DIDerivedType(tag: DW_TAG_typedef, name: "strbuf_t", file: !197, line: 25, baseType: !9246)
!9246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "strbuf_t_", file: !197, line: 27, size: 256, elements: !9247)
!9247 = !{!9248, !9253, !9258}
!9248 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !9246, file: !197, line: 31, baseType: !9249, size: 64)
!9249 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9246, file: !197, line: 28, size: 64, elements: !9250)
!9250 = !{!9251, !9252}
!9251 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !9249, file: !197, line: 29, baseType: !52, size: 64)
!9252 = !DIDerivedType(tag: DW_TAG_member, name: "static_buffer", scope: !9249, file: !197, line: 30, baseType: !205, size: 64)
!9253 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !9246, file: !197, line: 34, baseType: !9254, size: 128, offset: 64)
!9254 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9246, file: !197, line: 32, size: 128, elements: !9255)
!9255 = !{!9256, !9257}
!9256 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !9254, file: !197, line: 33, baseType: !55, size: 64)
!9257 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !9254, file: !197, line: 33, baseType: !55, size: 64, offset: 64)
!9258 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9246, file: !197, line: 35, baseType: !9, size: 32, offset: 192)
!9259 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !9241, file: !7, line: 180, baseType: !205, size: 64, offset: 64)
!9260 = !DIDerivedType(tag: DW_TAG_member, name: "content_length", scope: !9241, file: !7, line: 181, baseType: !55, size: 64, offset: 128)
!9261 = !DIDerivedType(tag: DW_TAG_member, name: "headers", scope: !9241, file: !7, line: 182, baseType: !9221, size: 64, offset: 192)
!9262 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !9241, file: !7, line: 188, baseType: !9263, size: 192, offset: 256)
!9263 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9241, file: !7, line: 184, size: 192, elements: !9264)
!9264 = !{!9265, !9269, !9270}
!9265 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !9263, file: !7, line: 185, baseType: !9266, size: 64)
!9266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9267, size: 64)
!9267 = !DISubroutineType(types: !9268)
!9268 = !{!6, !9203, !111}
!9269 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9263, file: !7, line: 186, baseType: !111, size: 64, offset: 64)
!9270 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !9263, file: !7, line: 187, baseType: !111, size: 64, offset: 128)
!9271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9240, size: 64)
!9272 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9197, file: !7, line: 238, baseType: !111, size: 64, offset: 64)
!9273 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", scope: !9197, file: !7, line: 240, baseType: !205, size: 64, offset: 128)
!9274 = !DIDerivedType(tag: DW_TAG_member, name: "prefix_len", scope: !9197, file: !7, line: 241, baseType: !55, size: 64, offset: 192)
!9275 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9197, file: !7, line: 242, baseType: !1559, size: 32, offset: 256)
!9276 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !9197, file: !7, line: 244, baseType: !9277, size: 64, offset: 320)
!9277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9278, size: 64)
!9278 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9279)
!9279 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_module_t", file: !7, line: 104, baseType: !9280)
!9280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_module_t_", file: !7, line: 227, size: 384, elements: !9281)
!9281 = !{!9282, !9283, !9284, !9285, !9286, !9287}
!9282 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9280, file: !7, line: 228, baseType: !205, size: 64)
!9283 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !9280, file: !7, line: 229, baseType: !1408, size: 64, offset: 64)
!9284 = !DIDerivedType(tag: DW_TAG_member, name: "init_from_hash", scope: !9280, file: !7, line: 230, baseType: !1412, size: 64, offset: 128)
!9285 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !9280, file: !7, line: 231, baseType: !115, size: 64, offset: 192)
!9286 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !9280, file: !7, line: 232, baseType: !9200, size: 64, offset: 256)
!9287 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9280, file: !7, line: 233, baseType: !1559, size: 32, offset: 320)
!9288 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !9197, file: !7, line: 245, baseType: !111, size: 64, offset: 384)
!9289 = !DIDerivedType(tag: DW_TAG_member, name: "authorization", scope: !9197, file: !7, line: 250, baseType: !9290, size: 128, offset: 448)
!9290 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9197, file: !7, line: 247, size: 128, elements: !9291)
!9291 = !{!9292, !9293}
!9292 = !DIDerivedType(tag: DW_TAG_member, name: "realm", scope: !9290, file: !7, line: 248, baseType: !52, size: 64)
!9293 = !DIDerivedType(tag: DW_TAG_member, name: "password_file", scope: !9290, file: !7, line: 249, baseType: !52, size: 64, offset: 64)
!9294 = !DILocalVariable(name: "l", arg: 1, scope: !9132, file: !950, line: 249, type: !9135)
!9295 = !DILocation(line: 249, column: 31, scope: !9132)
!9296 = !DILocalVariable(name: "map", arg: 2, scope: !9132, file: !950, line: 249, type: !9194)
!9297 = !DILocation(line: 249, column: 56, scope: !9132)
!9298 = !DILocation(line: 251, column: 24, scope: !9132)
!9299 = !DILocation(line: 251, column: 27, scope: !9132)
!9300 = !DILocation(line: 251, column: 5, scope: !9132)
!9301 = !DILocation(line: 252, column: 9, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !9132, file: !950, line: 252, column: 9)
!9303 = !DILocation(line: 252, column: 9, scope: !9132)
!9304 = !DILocation(line: 253, column: 9, scope: !9302)
!9305 = !DILocation(line: 255, column: 5, scope: !9132)
!9306 = !DILocation(line: 255, column: 12, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !9308, file: !950, line: 255, column: 5)
!9308 = distinct !DILexicalBlock(scope: !9132, file: !950, line: 255, column: 5)
!9309 = !DILocation(line: 255, column: 17, scope: !9307)
!9310 = !DILocation(line: 255, column: 5, scope: !9308)
!9311 = !DILocalVariable(name: "copy", scope: !9312, file: !950, line: 256, type: !9313)
!9312 = distinct !DILexicalBlock(scope: !9307, file: !950, line: 255, column: 32)
!9313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9196, size: 64)
!9314 = !DILocation(line: 256, column: 25, scope: !9312)
!9315 = !DILocation(line: 256, column: 45, scope: !9312)
!9316 = !DILocation(line: 256, column: 48, scope: !9312)
!9317 = !DILocation(line: 256, column: 68, scope: !9312)
!9318 = !DILocation(line: 256, column: 32, scope: !9312)
!9319 = !DILocation(line: 258, column: 13, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !9312, file: !950, line: 258, column: 13)
!9321 = !DILocation(line: 258, column: 13, scope: !9312)
!9322 = !DILocation(line: 259, column: 13, scope: !9320)
!9323 = !DILocation(line: 261, column: 13, scope: !9324)
!9324 = distinct !DILexicalBlock(scope: !9312, file: !950, line: 261, column: 13)
!9325 = !DILocation(line: 261, column: 19, scope: !9324)
!9326 = !DILocation(line: 261, column: 26, scope: !9324)
!9327 = !DILocation(line: 261, column: 29, scope: !9324)
!9328 = !DILocation(line: 261, column: 35, scope: !9324)
!9329 = !DILocation(line: 261, column: 43, scope: !9324)
!9330 = !DILocation(line: 261, column: 13, scope: !9312)
!9331 = !DILocation(line: 262, column: 26, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9324, file: !950, line: 261, column: 49)
!9333 = !DILocation(line: 262, column: 32, scope: !9332)
!9334 = !DILocation(line: 262, column: 40, scope: !9332)
!9335 = !DILocation(line: 262, column: 45, scope: !9332)
!9336 = !DILocation(line: 262, column: 51, scope: !9332)
!9337 = !DILocation(line: 262, column: 13, scope: !9332)
!9338 = !DILocation(line: 262, column: 19, scope: !9332)
!9339 = !DILocation(line: 262, column: 24, scope: !9332)
!9340 = !DILocation(line: 263, column: 27, scope: !9332)
!9341 = !DILocation(line: 263, column: 33, scope: !9332)
!9342 = !DILocation(line: 263, column: 41, scope: !9332)
!9343 = !DILocation(line: 263, column: 13, scope: !9332)
!9344 = !DILocation(line: 263, column: 19, scope: !9332)
!9345 = !DILocation(line: 263, column: 25, scope: !9332)
!9346 = !DILocation(line: 264, column: 29, scope: !9332)
!9347 = !DILocation(line: 264, column: 35, scope: !9332)
!9348 = !DILocation(line: 264, column: 43, scope: !9332)
!9349 = !DILocation(line: 264, column: 13, scope: !9332)
!9350 = !DILocation(line: 264, column: 19, scope: !9332)
!9351 = !DILocation(line: 264, column: 27, scope: !9332)
!9352 = !DILocation(line: 265, column: 9, scope: !9332)
!9353 = !DILocation(line: 266, column: 13, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !9324, file: !950, line: 265, column: 16)
!9355 = !DILocation(line: 266, column: 19, scope: !9354)
!9356 = !DILocation(line: 266, column: 25, scope: !9354)
!9357 = !DILocation(line: 268, column: 5, scope: !9312)
!9358 = !DILocation(line: 255, column: 28, scope: !9307)
!9359 = !DILocation(line: 255, column: 5, scope: !9307)
!9360 = distinct !{!9360, !9310, !9361, !3413}
!9361 = !DILocation(line: 268, column: 5, scope: !9308)
!9362 = !DILocation(line: 269, column: 1, scope: !9132)
!9363 = distinct !DISubprogram(name: "lwan_trie_destroy", scope: !3222, file: !3222, line: 184, type: !9364, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3324, retainedNodes: !286)
!9364 = !DISubroutineType(types: !9365)
!9365 = !{null, !9366}
!9366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9367, size: 64)
!9367 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_t", file: !92, line: 25, baseType: !9368)
!9368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_t_", file: !92, line: 41, size: 128, elements: !9369)
!9369 = !{!9370, !9386}
!9370 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !9368, file: !92, line: 42, baseType: !9371, size: 64)
!9371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9372, size: 64)
!9372 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_node_t", file: !92, line: 26, baseType: !9373)
!9373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_node_t_", file: !92, line: 29, size: 640, elements: !9374)
!9374 = !{!9375, !9377, !9385}
!9375 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9373, file: !92, line: 30, baseType: !9376, size: 512)
!9376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9371, size: 512, elements: !102)
!9377 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !9373, file: !92, line: 31, baseType: !9378, size: 64, offset: 512)
!9378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9379, size: 64)
!9379 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_leaf_t", file: !92, line: 27, baseType: !9380)
!9380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_leaf_t_", file: !92, line: 35, size: 192, elements: !9381)
!9381 = !{!9382, !9383, !9384}
!9382 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !9380, file: !92, line: 36, baseType: !52, size: 64)
!9383 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9380, file: !92, line: 37, baseType: !111, size: 64, offset: 64)
!9384 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9380, file: !92, line: 38, baseType: !9378, size: 64, offset: 128)
!9385 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !9373, file: !92, line: 32, baseType: !34, size: 32, offset: 576)
!9386 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !9368, file: !92, line: 43, baseType: !115, size: 64, offset: 64)
!9387 = !DILocalVariable(name: "trie", arg: 1, scope: !9363, file: !3222, line: 184, type: !9366)
!9388 = !DILocation(line: 184, column: 32, scope: !9363)
!9389 = !DILocation(line: 186, column: 10, scope: !9390)
!9390 = distinct !DILexicalBlock(scope: !9363, file: !3222, line: 186, column: 9)
!9391 = !DILocation(line: 186, column: 15, scope: !9390)
!9392 = !DILocation(line: 186, column: 19, scope: !9390)
!9393 = !DILocation(line: 186, column: 25, scope: !9390)
!9394 = !DILocation(line: 186, column: 9, scope: !9363)
!9395 = !DILocation(line: 187, column: 9, scope: !9390)
!9396 = !DILocation(line: 188, column: 28, scope: !9363)
!9397 = !DILocation(line: 188, column: 34, scope: !9363)
!9398 = !DILocation(line: 188, column: 40, scope: !9363)
!9399 = !DILocation(line: 188, column: 5, scope: !9363)
!9400 = !DILocation(line: 189, column: 1, scope: !9363)
!9401 = distinct !DISubprogram(name: "destroy_urlmap", scope: !950, file: !950, line: 88, type: !116, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !963, retainedNodes: !286)
!9402 = !DILocalVariable(name: "data", arg: 1, scope: !9401, file: !950, line: 88, type: !111)
!9403 = !DILocation(line: 88, column: 34, scope: !9401)
!9404 = !DILocalVariable(name: "url_map", scope: !9401, file: !950, line: 90, type: !9313)
!9405 = !DILocation(line: 90, column: 21, scope: !9401)
!9406 = !DILocation(line: 90, column: 31, scope: !9401)
!9407 = !DILocation(line: 92, column: 9, scope: !9408)
!9408 = distinct !DILexicalBlock(scope: !9401, file: !950, line: 92, column: 9)
!9409 = !DILocation(line: 92, column: 18, scope: !9408)
!9410 = !DILocation(line: 92, column: 9, scope: !9401)
!9411 = !DILocalVariable(name: "module", scope: !9412, file: !950, line: 93, type: !9277)
!9412 = distinct !DILexicalBlock(scope: !9408, file: !950, line: 92, column: 26)
!9413 = !DILocation(line: 93, column: 30, scope: !9412)
!9414 = !DILocation(line: 93, column: 39, scope: !9412)
!9415 = !DILocation(line: 93, column: 48, scope: !9412)
!9416 = !DILocation(line: 94, column: 13, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9412, file: !950, line: 94, column: 13)
!9418 = !DILocation(line: 94, column: 21, scope: !9417)
!9419 = !DILocation(line: 94, column: 13, scope: !9412)
!9420 = !DILocation(line: 95, column: 13, scope: !9417)
!9421 = !DILocation(line: 95, column: 21, scope: !9417)
!9422 = !DILocation(line: 95, column: 30, scope: !9417)
!9423 = !DILocation(line: 95, column: 39, scope: !9417)
!9424 = !DILocation(line: 96, column: 5, scope: !9412)
!9425 = !DILocation(line: 96, column: 16, scope: !9426)
!9426 = distinct !DILexicalBlock(scope: !9408, file: !950, line: 96, column: 16)
!9427 = !DILocation(line: 96, column: 25, scope: !9426)
!9428 = !DILocation(line: 96, column: 16, scope: !9408)
!9429 = !DILocation(line: 97, column: 19, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !9426, file: !950, line: 96, column: 31)
!9431 = !DILocation(line: 97, column: 28, scope: !9430)
!9432 = !DILocation(line: 97, column: 9, scope: !9430)
!9433 = !DILocation(line: 98, column: 5, scope: !9430)
!9434 = !DILocation(line: 100, column: 10, scope: !9401)
!9435 = !DILocation(line: 100, column: 19, scope: !9401)
!9436 = !DILocation(line: 100, column: 33, scope: !9401)
!9437 = !DILocation(line: 100, column: 5, scope: !9401)
!9438 = !DILocation(line: 101, column: 10, scope: !9401)
!9439 = !DILocation(line: 101, column: 19, scope: !9401)
!9440 = !DILocation(line: 101, column: 33, scope: !9401)
!9441 = !DILocation(line: 101, column: 5, scope: !9401)
!9442 = !DILocation(line: 102, column: 18, scope: !9401)
!9443 = !DILocation(line: 102, column: 27, scope: !9401)
!9444 = !DILocation(line: 102, column: 5, scope: !9401)
!9445 = !DILocation(line: 103, column: 10, scope: !9401)
!9446 = !DILocation(line: 103, column: 5, scope: !9401)
!9447 = !DILocation(line: 104, column: 1, scope: !9401)
!9448 = distinct !DISubprogram(name: "lwan_trie_init", scope: !3222, file: !3222, line: 26, type: !9449, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3324, retainedNodes: !286)
!9449 = !DISubroutineType(types: !9450)
!9450 = !{!137, !9366, !115}
!9451 = !DILocalVariable(name: "trie", arg: 1, scope: !9448, file: !3222, line: 26, type: !9366)
!9452 = !DILocation(line: 26, column: 29, scope: !9448)
!9453 = !DILocalVariable(name: "free_node", arg: 2, scope: !9448, file: !3222, line: 26, type: !115)
!9454 = !DILocation(line: 26, column: 42, scope: !9448)
!9455 = !DILocation(line: 28, column: 10, scope: !9456)
!9456 = distinct !DILexicalBlock(scope: !9448, file: !3222, line: 28, column: 9)
!9457 = !DILocation(line: 28, column: 9, scope: !9448)
!9458 = !DILocation(line: 29, column: 9, scope: !9456)
!9459 = !DILocation(line: 30, column: 5, scope: !9448)
!9460 = !DILocation(line: 30, column: 11, scope: !9448)
!9461 = !DILocation(line: 30, column: 16, scope: !9448)
!9462 = !DILocation(line: 31, column: 23, scope: !9448)
!9463 = !DILocation(line: 31, column: 5, scope: !9448)
!9464 = !DILocation(line: 31, column: 11, scope: !9448)
!9465 = !DILocation(line: 31, column: 21, scope: !9448)
!9466 = !DILocation(line: 32, column: 5, scope: !9448)
!9467 = !DILocation(line: 33, column: 1, scope: !9448)
!9468 = distinct !DISubprogram(name: "add_url_map", scope: !950, file: !950, line: 106, type: !9469, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !963, retainedNodes: !286)
!9469 = !DISubroutineType(types: !9470)
!9470 = !{!9313, !9471, !205, !9194}
!9471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9140, size: 64)
!9472 = !DILocalVariable(name: "t", arg: 1, scope: !9468, file: !950, line: 106, type: !9471)
!9473 = !DILocation(line: 106, column: 49, scope: !9468)
!9474 = !DILocalVariable(name: "prefix", arg: 2, scope: !9468, file: !950, line: 106, type: !205)
!9475 = !DILocation(line: 106, column: 64, scope: !9468)
!9476 = !DILocalVariable(name: "map", arg: 3, scope: !9468, file: !950, line: 106, type: !9194)
!9477 = !DILocation(line: 106, column: 94, scope: !9468)
!9478 = !DILocalVariable(name: "copy", scope: !9468, file: !950, line: 108, type: !9313)
!9479 = !DILocation(line: 108, column: 21, scope: !9468)
!9480 = !DILocation(line: 108, column: 28, scope: !9468)
!9481 = !DILocation(line: 110, column: 10, scope: !9482)
!9482 = distinct !DILexicalBlock(scope: !9468, file: !950, line: 110, column: 9)
!9483 = !DILocation(line: 110, column: 9, scope: !9468)
!9484 = !DILocation(line: 111, column: 9, scope: !9482)
!9485 = !DILocation(line: 113, column: 12, scope: !9468)
!9486 = !DILocation(line: 113, column: 18, scope: !9468)
!9487 = !DILocation(line: 113, column: 5, scope: !9468)
!9488 = !DILocation(line: 115, column: 27, scope: !9468)
!9489 = !DILocation(line: 115, column: 36, scope: !9468)
!9490 = !DILocation(line: 115, column: 45, scope: !9468)
!9491 = !DILocation(line: 115, column: 51, scope: !9468)
!9492 = !DILocation(line: 115, column: 20, scope: !9468)
!9493 = !DILocation(line: 115, column: 5, scope: !9468)
!9494 = !DILocation(line: 115, column: 11, scope: !9468)
!9495 = !DILocation(line: 115, column: 18, scope: !9468)
!9496 = !DILocation(line: 116, column: 31, scope: !9468)
!9497 = !DILocation(line: 116, column: 37, scope: !9468)
!9498 = !DILocation(line: 116, column: 24, scope: !9468)
!9499 = !DILocation(line: 116, column: 5, scope: !9468)
!9500 = !DILocation(line: 116, column: 11, scope: !9468)
!9501 = !DILocation(line: 116, column: 22, scope: !9468)
!9502 = !DILocation(line: 117, column: 19, scope: !9468)
!9503 = !DILocation(line: 117, column: 22, scope: !9468)
!9504 = !DILocation(line: 117, column: 28, scope: !9468)
!9505 = !DILocation(line: 117, column: 36, scope: !9468)
!9506 = !DILocation(line: 117, column: 5, scope: !9468)
!9507 = !DILocation(line: 119, column: 12, scope: !9468)
!9508 = !DILocation(line: 119, column: 5, scope: !9468)
!9509 = distinct !DISubprogram(name: "lwan_trie_add", scope: !3222, file: !3222, line: 65, type: !9510, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3324, retainedNodes: !286)
!9510 = !DISubroutineType(types: !9511)
!9511 = !{null, !9366, !205, !111}
!9512 = !DILocalVariable(name: "trie", arg: 1, scope: !9509, file: !3222, line: 65, type: !9366)
!9513 = !DILocation(line: 65, column: 28, scope: !9509)
!9514 = !DILocalVariable(name: "key", arg: 2, scope: !9509, file: !3222, line: 65, type: !205)
!9515 = !DILocation(line: 65, column: 46, scope: !9509)
!9516 = !DILocalVariable(name: "data", arg: 3, scope: !9509, file: !3222, line: 65, type: !111)
!9517 = !DILocation(line: 65, column: 57, scope: !9509)
!9518 = !DILocation(line: 67, column: 9, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !9509, file: !3222, line: 67, column: 9)
!9520 = !DILocation(line: 67, column: 9, scope: !9509)
!9521 = !DILocation(line: 68, column: 9, scope: !9519)
!9522 = !DILocalVariable(name: "knode", scope: !9509, file: !3222, line: 70, type: !9523)
!9523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9371, size: 64)
!9524 = !DILocation(line: 70, column: 24, scope: !9509)
!9525 = !DILocalVariable(name: "node", scope: !9509, file: !3222, line: 70, type: !9371)
!9526 = !DILocation(line: 70, column: 32, scope: !9509)
!9527 = !DILocalVariable(name: "orig_key", scope: !9509, file: !3222, line: 71, type: !205)
!9528 = !DILocation(line: 71, column: 17, scope: !9509)
!9529 = !DILocation(line: 71, column: 28, scope: !9509)
!9530 = !DILocation(line: 74, column: 19, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9509, file: !3222, line: 74, column: 5)
!9532 = !DILocation(line: 74, column: 25, scope: !9531)
!9533 = !DILocation(line: 74, column: 16, scope: !9531)
!9534 = !DILocation(line: 74, column: 10, scope: !9531)
!9535 = !DILocation(line: 74, column: 32, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9531, file: !3222, line: 74, column: 5)
!9537 = !DILocation(line: 74, column: 31, scope: !9536)
!9538 = !DILocation(line: 74, column: 5, scope: !9531)
!9539 = !DILocation(line: 75, column: 9, scope: !9536)
!9540 = !DILocation(line: 75, column: 9, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9542, file: !3222, line: 75, column: 9)
!9542 = distinct !DILexicalBlock(scope: !9536, file: !3222, line: 75, column: 9)
!9543 = !DILocation(line: 75, column: 9, scope: !9542)
!9544 = !DILocation(line: 75, column: 9, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9541, file: !3222, line: 75, column: 9)
!9546 = !DILocation(line: 75, column: 9, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9545, file: !3222, line: 75, column: 9)
!9548 = !DILocation(line: 74, column: 46, scope: !9536)
!9549 = !DILocation(line: 74, column: 52, scope: !9536)
!9550 = !DILocation(line: 74, column: 67, scope: !9536)
!9551 = !DILocation(line: 74, column: 63, scope: !9536)
!9552 = !DILocation(line: 74, column: 70, scope: !9536)
!9553 = !DILocation(line: 74, column: 43, scope: !9536)
!9554 = !DILocation(line: 74, column: 5, scope: !9536)
!9555 = distinct !{!9555, !9538, !9556, !3413}
!9556 = !DILocation(line: 75, column: 9, scope: !9531)
!9557 = !DILocation(line: 78, column: 5, scope: !9509)
!9558 = !DILocation(line: 78, column: 5, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !9560, file: !3222, line: 78, column: 5)
!9560 = distinct !DILexicalBlock(scope: !9509, file: !3222, line: 78, column: 5)
!9561 = !DILocation(line: 78, column: 5, scope: !9560)
!9562 = !DILocation(line: 78, column: 5, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9559, file: !3222, line: 78, column: 5)
!9564 = !DILocation(line: 78, column: 5, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9563, file: !3222, line: 78, column: 5)
!9566 = !DILocalVariable(name: "leaf", scope: !9509, file: !3222, line: 80, type: !9378)
!9567 = !DILocation(line: 80, column: 23, scope: !9509)
!9568 = !DILocation(line: 80, column: 49, scope: !9509)
!9569 = !DILocation(line: 80, column: 55, scope: !9509)
!9570 = !DILocation(line: 80, column: 74, scope: !9509)
!9571 = !DILocation(line: 80, column: 80, scope: !9509)
!9572 = !DILocation(line: 80, column: 78, scope: !9509)
!9573 = !DILocalVariable(name: "node", arg: 1, scope: !9574, file: !3222, line: 36, type: !9371)
!9574 = distinct !DISubprogram(name: "find_leaf_with_key", scope: !3222, file: !3222, line: 36, type: !9575, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3324, retainedNodes: !286)
!9575 = !DISubroutineType(types: !9576)
!9576 = !{!9378, !9371, !205, !55}
!9577 = !DILocation(line: 36, column: 38, scope: !9574, inlinedAt: !9578)
!9578 = distinct !DILocation(line: 80, column: 30, scope: !9509)
!9579 = !DILocalVariable(name: "key", arg: 2, scope: !9574, file: !3222, line: 36, type: !205)
!9580 = !DILocation(line: 36, column: 56, scope: !9574, inlinedAt: !9578)
!9581 = !DILocalVariable(name: "len", arg: 3, scope: !9574, file: !3222, line: 36, type: !55)
!9582 = !DILocation(line: 36, column: 68, scope: !9574, inlinedAt: !9578)
!9583 = !DILocalVariable(name: "leaf", scope: !9574, file: !3222, line: 38, type: !9378)
!9584 = !DILocation(line: 38, column: 23, scope: !9574, inlinedAt: !9578)
!9585 = !DILocation(line: 38, column: 30, scope: !9574, inlinedAt: !9578)
!9586 = !DILocation(line: 38, column: 36, scope: !9574, inlinedAt: !9578)
!9587 = !DILocation(line: 40, column: 10, scope: !9588, inlinedAt: !9578)
!9588 = distinct !DILexicalBlock(scope: !9574, file: !3222, line: 40, column: 9)
!9589 = !DILocation(line: 40, column: 9, scope: !9574, inlinedAt: !9578)
!9590 = !DILocation(line: 41, column: 9, scope: !9588, inlinedAt: !9578)
!9591 = !DILocation(line: 43, column: 10, scope: !9592, inlinedAt: !9578)
!9592 = distinct !DILexicalBlock(scope: !9574, file: !3222, line: 43, column: 9)
!9593 = !DILocation(line: 43, column: 16, scope: !9592, inlinedAt: !9578)
!9594 = !DILocation(line: 43, column: 9, scope: !9574, inlinedAt: !9578)
!9595 = !DILocation(line: 44, column: 16, scope: !9592, inlinedAt: !9578)
!9596 = !DILocation(line: 44, column: 9, scope: !9592, inlinedAt: !9578)
!9597 = !DILocation(line: 46, column: 5, scope: !9574, inlinedAt: !9578)
!9598 = !DILocation(line: 46, column: 12, scope: !9599, inlinedAt: !9578)
!9599 = distinct !DILexicalBlock(scope: !9600, file: !3222, line: 46, column: 5)
!9600 = distinct !DILexicalBlock(scope: !9574, file: !3222, line: 46, column: 5)
!9601 = !DILocation(line: 46, column: 5, scope: !9600, inlinedAt: !9578)
!9602 = !DILocation(line: 47, column: 22, scope: !9603, inlinedAt: !9578)
!9603 = distinct !DILexicalBlock(scope: !9604, file: !3222, line: 47, column: 13)
!9604 = distinct !DILexicalBlock(scope: !9599, file: !3222, line: 46, column: 37)
!9605 = !DILocation(line: 47, column: 28, scope: !9603, inlinedAt: !9578)
!9606 = !DILocation(line: 47, column: 33, scope: !9603, inlinedAt: !9578)
!9607 = !DILocation(line: 47, column: 38, scope: !9603, inlinedAt: !9578)
!9608 = !DILocation(line: 47, column: 42, scope: !9603, inlinedAt: !9578)
!9609 = !DILocation(line: 47, column: 14, scope: !9603, inlinedAt: !9578)
!9610 = !DILocation(line: 47, column: 13, scope: !9604, inlinedAt: !9578)
!9611 = !DILocation(line: 48, column: 20, scope: !9603, inlinedAt: !9578)
!9612 = !DILocation(line: 48, column: 13, scope: !9603, inlinedAt: !9578)
!9613 = !DILocation(line: 46, column: 25, scope: !9599, inlinedAt: !9578)
!9614 = !DILocation(line: 46, column: 31, scope: !9599, inlinedAt: !9578)
!9615 = !DILocation(line: 46, column: 23, scope: !9599, inlinedAt: !9578)
!9616 = !DILocation(line: 46, column: 5, scope: !9599, inlinedAt: !9578)
!9617 = distinct !{!9617, !9601, !9618, !3413}
!9618 = !DILocation(line: 49, column: 5, scope: !9600, inlinedAt: !9578)
!9619 = !DILocation(line: 51, column: 5, scope: !9574, inlinedAt: !9578)
!9620 = !DILocation(line: 52, column: 1, scope: !9574, inlinedAt: !9578)
!9621 = !DILocalVariable(name: "had_key", scope: !9509, file: !3222, line: 81, type: !137)
!9622 = !DILocation(line: 81, column: 10, scope: !9509)
!9623 = !DILocation(line: 81, column: 20, scope: !9509)
!9624 = !DILocation(line: 82, column: 10, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9509, file: !3222, line: 82, column: 9)
!9626 = !DILocation(line: 82, column: 9, scope: !9509)
!9627 = !DILocation(line: 83, column: 16, scope: !9628)
!9628 = distinct !DILexicalBlock(scope: !9625, file: !3222, line: 82, column: 16)
!9629 = !DILocation(line: 83, column: 14, scope: !9628)
!9630 = !DILocation(line: 84, column: 14, scope: !9631)
!9631 = distinct !DILexicalBlock(scope: !9628, file: !3222, line: 84, column: 13)
!9632 = !DILocation(line: 84, column: 13, scope: !9628)
!9633 = !DILocation(line: 85, column: 13, scope: !9631)
!9634 = !DILocation(line: 86, column: 5, scope: !9628)
!9635 = !DILocation(line: 88, column: 18, scope: !9509)
!9636 = !DILocation(line: 88, column: 5, scope: !9509)
!9637 = !DILocation(line: 88, column: 11, scope: !9509)
!9638 = !DILocation(line: 88, column: 16, scope: !9509)
!9639 = !DILocation(line: 89, column: 10, scope: !9640)
!9640 = distinct !DILexicalBlock(scope: !9509, file: !3222, line: 89, column: 9)
!9641 = !DILocation(line: 89, column: 9, scope: !9509)
!9642 = !DILocation(line: 90, column: 28, scope: !9643)
!9643 = distinct !DILexicalBlock(scope: !9640, file: !3222, line: 89, column: 19)
!9644 = !DILocation(line: 90, column: 21, scope: !9643)
!9645 = !DILocation(line: 90, column: 9, scope: !9643)
!9646 = !DILocation(line: 90, column: 15, scope: !9643)
!9647 = !DILocation(line: 90, column: 19, scope: !9643)
!9648 = !DILocation(line: 91, column: 22, scope: !9643)
!9649 = !DILocation(line: 91, column: 28, scope: !9643)
!9650 = !DILocation(line: 91, column: 9, scope: !9643)
!9651 = !DILocation(line: 91, column: 15, scope: !9643)
!9652 = !DILocation(line: 91, column: 20, scope: !9643)
!9653 = !DILocation(line: 92, column: 22, scope: !9643)
!9654 = !DILocation(line: 92, column: 9, scope: !9643)
!9655 = !DILocation(line: 92, column: 15, scope: !9643)
!9656 = !DILocation(line: 92, column: 20, scope: !9643)
!9657 = !DILocation(line: 93, column: 5, scope: !9643)
!9658 = !DILocation(line: 94, column: 5, scope: !9509)
!9659 = !DILabel(scope: !9509, name: "oom", file: !3222, line: 96)
!9660 = !DILocation(line: 96, column: 1, scope: !9509)
!9661 = !DILocation(line: 97, column: 5, scope: !9509)
!9662 = !DILocation(line: 98, column: 1, scope: !9509)
!9663 = distinct !DISubprogram(name: "lwan_trie_node_destroy", scope: !3222, file: !3222, line: 155, type: !9664, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3324, retainedNodes: !286)
!9664 = !DISubroutineType(types: !9665)
!9665 = !{null, !9366, !9371}
!9666 = !DILocalVariable(name: "trie", arg: 1, scope: !9663, file: !3222, line: 155, type: !9366)
!9667 = !DILocation(line: 155, column: 37, scope: !9663)
!9668 = !DILocalVariable(name: "node", arg: 2, scope: !9663, file: !3222, line: 155, type: !9371)
!9669 = !DILocation(line: 155, column: 61, scope: !9663)
!9670 = !DILocation(line: 157, column: 10, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9663, file: !3222, line: 157, column: 9)
!9672 = !DILocation(line: 157, column: 9, scope: !9663)
!9673 = !DILocation(line: 158, column: 9, scope: !9671)
!9674 = !DILocalVariable(name: "nodes_destroyed", scope: !9663, file: !3222, line: 160, type: !9675)
!9675 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !4301, line: 26, baseType: !9676)
!9676 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !154, line: 41, baseType: !34)
!9677 = !DILocation(line: 160, column: 13, scope: !9663)
!9678 = !DILocation(line: 160, column: 31, scope: !9663)
!9679 = !DILocation(line: 160, column: 37, scope: !9663)
!9680 = !DILocalVariable(name: "leaf", scope: !9681, file: !3222, line: 162, type: !9378)
!9681 = distinct !DILexicalBlock(scope: !9663, file: !3222, line: 162, column: 5)
!9682 = !DILocation(line: 162, column: 28, scope: !9681)
!9683 = !DILocation(line: 162, column: 35, scope: !9681)
!9684 = !DILocation(line: 162, column: 41, scope: !9681)
!9685 = !DILocation(line: 162, column: 10, scope: !9681)
!9686 = !DILocation(line: 162, column: 47, scope: !9687)
!9687 = distinct !DILexicalBlock(scope: !9681, file: !3222, line: 162, column: 5)
!9688 = !DILocation(line: 162, column: 5, scope: !9681)
!9689 = !DILocalVariable(name: "tmp", scope: !9690, file: !3222, line: 163, type: !9378)
!9690 = distinct !DILexicalBlock(scope: !9687, file: !3222, line: 162, column: 54)
!9691 = !DILocation(line: 163, column: 27, scope: !9690)
!9692 = !DILocation(line: 163, column: 33, scope: !9690)
!9693 = !DILocation(line: 163, column: 39, scope: !9690)
!9694 = !DILocation(line: 165, column: 13, scope: !9695)
!9695 = distinct !DILexicalBlock(scope: !9690, file: !3222, line: 165, column: 13)
!9696 = !DILocation(line: 165, column: 19, scope: !9695)
!9697 = !DILocation(line: 165, column: 13, scope: !9690)
!9698 = !DILocation(line: 166, column: 13, scope: !9695)
!9699 = !DILocation(line: 166, column: 19, scope: !9695)
!9700 = !DILocation(line: 166, column: 29, scope: !9695)
!9701 = !DILocation(line: 166, column: 35, scope: !9695)
!9702 = !DILocation(line: 168, column: 14, scope: !9690)
!9703 = !DILocation(line: 168, column: 20, scope: !9690)
!9704 = !DILocation(line: 168, column: 9, scope: !9690)
!9705 = !DILocation(line: 169, column: 14, scope: !9690)
!9706 = !DILocation(line: 169, column: 9, scope: !9690)
!9707 = !DILocation(line: 170, column: 16, scope: !9690)
!9708 = !DILocation(line: 170, column: 14, scope: !9690)
!9709 = !DILocation(line: 162, column: 5, scope: !9687)
!9710 = distinct !{!9710, !9688, !9711, !3413}
!9711 = !DILocation(line: 171, column: 5, scope: !9681)
!9712 = !DILocalVariable(name: "i", scope: !9713, file: !3222, line: 173, type: !9675)
!9713 = distinct !DILexicalBlock(scope: !9663, file: !3222, line: 173, column: 5)
!9714 = !DILocation(line: 173, column: 18, scope: !9713)
!9715 = !DILocation(line: 173, column: 10, scope: !9713)
!9716 = !DILocation(line: 173, column: 25, scope: !9717)
!9717 = distinct !DILexicalBlock(scope: !9713, file: !3222, line: 173, column: 5)
!9718 = !DILocation(line: 173, column: 41, scope: !9717)
!9719 = !DILocation(line: 173, column: 45, scope: !9717)
!9720 = !DILocation(line: 173, column: 48, scope: !9717)
!9721 = !DILocation(line: 173, column: 50, scope: !9717)
!9722 = !DILocation(line: 0, scope: !9717)
!9723 = !DILocation(line: 173, column: 5, scope: !9713)
!9724 = !DILocation(line: 174, column: 13, scope: !9725)
!9725 = distinct !DILexicalBlock(scope: !9726, file: !3222, line: 174, column: 13)
!9726 = distinct !DILexicalBlock(scope: !9717, file: !3222, line: 173, column: 60)
!9727 = !DILocation(line: 174, column: 19, scope: !9725)
!9728 = !DILocation(line: 174, column: 24, scope: !9725)
!9729 = !DILocation(line: 174, column: 13, scope: !9726)
!9730 = !DILocation(line: 175, column: 36, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9725, file: !3222, line: 174, column: 28)
!9732 = !DILocation(line: 175, column: 42, scope: !9731)
!9733 = !DILocation(line: 175, column: 48, scope: !9731)
!9734 = !DILocation(line: 175, column: 53, scope: !9731)
!9735 = !DILocation(line: 175, column: 13, scope: !9731)
!9736 = !DILocation(line: 176, column: 13, scope: !9731)
!9737 = !DILocation(line: 177, column: 9, scope: !9731)
!9738 = !DILocation(line: 178, column: 5, scope: !9726)
!9739 = !DILocation(line: 173, column: 56, scope: !9717)
!9740 = !DILocation(line: 173, column: 5, scope: !9717)
!9741 = distinct !{!9741, !9723, !9742, !3413}
!9742 = !DILocation(line: 178, column: 5, scope: !9713)
!9743 = !DILocation(line: 180, column: 10, scope: !9663)
!9744 = !DILocation(line: 180, column: 5, scope: !9663)
!9745 = !DILocation(line: 181, column: 1, scope: !9663)
!9746 = distinct !DISubprogram(name: "get_config_path", scope: !950, file: !950, line: 301, type: !9747, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !963, retainedNodes: !286)
!9747 = !DISubroutineType(types: !9748)
!9748 = !{!205, !52}
!9749 = !DILocalVariable(name: "path_buf", arg: 1, scope: !9746, file: !950, line: 301, type: !52)
!9750 = !DILocation(line: 301, column: 35, scope: !9746)
!9751 = !DILocalVariable(name: "path", scope: !9746, file: !950, line: 303, type: !52)
!9752 = !DILocation(line: 303, column: 11, scope: !9746)
!9753 = !DILocalVariable(name: "path_len", scope: !9746, file: !950, line: 304, type: !3313)
!9754 = !DILocation(line: 304, column: 13, scope: !9746)
!9755 = !DILocation(line: 308, column: 43, scope: !9746)
!9756 = !DILocation(line: 308, column: 16, scope: !9746)
!9757 = !DILocation(line: 308, column: 14, scope: !9746)
!9758 = !DILocation(line: 309, column: 9, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !9746, file: !950, line: 309, column: 9)
!9760 = !DILocation(line: 309, column: 18, scope: !9759)
!9761 = !DILocation(line: 309, column: 9, scope: !9746)
!9762 = !DILocation(line: 310, column: 9, scope: !9759)
!9763 = !DILocation(line: 311, column: 5, scope: !9746)
!9764 = !DILocation(line: 311, column: 14, scope: !9746)
!9765 = !DILocation(line: 311, column: 24, scope: !9746)
!9766 = !DILocation(line: 312, column: 20, scope: !9746)
!9767 = !DILocation(line: 312, column: 12, scope: !9746)
!9768 = !DILocation(line: 312, column: 10, scope: !9746)
!9769 = !DILocation(line: 313, column: 10, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9746, file: !950, line: 313, column: 9)
!9771 = !DILocation(line: 313, column: 9, scope: !9746)
!9772 = !DILocation(line: 314, column: 9, scope: !9770)
!9773 = !DILocalVariable(name: "ret", scope: !9746, file: !950, line: 315, type: !34)
!9774 = !DILocation(line: 315, column: 9, scope: !9746)
!9775 = !DILocation(line: 315, column: 24, scope: !9746)
!9776 = !DILocation(line: 315, column: 55, scope: !9746)
!9777 = !DILocation(line: 315, column: 60, scope: !9746)
!9778 = !DILocation(line: 315, column: 15, scope: !9746)
!9779 = !DILocation(line: 316, column: 9, scope: !9780)
!9780 = distinct !DILexicalBlock(scope: !9746, file: !950, line: 316, column: 9)
!9781 = !DILocation(line: 316, column: 13, scope: !9780)
!9782 = !DILocation(line: 316, column: 17, scope: !9780)
!9783 = !DILocation(line: 316, column: 20, scope: !9780)
!9784 = !DILocation(line: 316, column: 24, scope: !9780)
!9785 = !DILocation(line: 316, column: 9, scope: !9746)
!9786 = !DILocation(line: 317, column: 9, scope: !9780)
!9787 = !DILocation(line: 319, column: 12, scope: !9746)
!9788 = !DILocation(line: 319, column: 5, scope: !9746)
!9789 = !DILabel(scope: !9746, name: "out", file: !950, line: 321)
!9790 = !DILocation(line: 321, column: 1, scope: !9746)
!9791 = !DILocation(line: 322, column: 5, scope: !9746)
!9792 = !DILocation(line: 323, column: 1, scope: !9746)
!9793 = distinct !DISubprogram(name: "lwan_init", scope: !950, file: !950, line: 434, type: !9794, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !963, retainedNodes: !286)
!9794 = !DISubroutineType(types: !9795)
!9795 = !{null, !9135}
!9796 = !DILocalVariable(name: "l", arg: 1, scope: !9793, file: !950, line: 434, type: !9135)
!9797 = !DILocation(line: 434, column: 19, scope: !9793)
!9798 = !DILocation(line: 436, column: 27, scope: !9793)
!9799 = !DILocation(line: 436, column: 5, scope: !9793)
!9800 = !DILocation(line: 437, column: 1, scope: !9793)
!9801 = distinct !DISubprogram(name: "lwan_init_with_config", scope: !950, file: !950, line: 446, type: !9802, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !963, retainedNodes: !286)
!9802 = !DISubroutineType(types: !9803)
!9803 = !{null, !9135, !9804}
!9804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64)
!9805 = !DILocalVariable(name: "l", arg: 1, scope: !9801, file: !950, line: 446, type: !9135)
!9806 = !DILocation(line: 446, column: 31, scope: !9801)
!9807 = !DILocalVariable(name: "config", arg: 2, scope: !9801, file: !950, line: 446, type: !9804)
!9808 = !DILocation(line: 446, column: 55, scope: !9801)
!9809 = !DILocation(line: 449, column: 12, scope: !9801)
!9810 = !DILocation(line: 449, column: 5, scope: !9801)
!9811 = !DILocation(line: 450, column: 13, scope: !9801)
!9812 = !DILocation(line: 450, column: 16, scope: !9801)
!9813 = !DILocation(line: 450, column: 24, scope: !9801)
!9814 = !DILocation(line: 450, column: 5, scope: !9801)
!9815 = !DILocation(line: 454, column: 22, scope: !9801)
!9816 = !DILocation(line: 454, column: 5, scope: !9801)
!9817 = !DILocation(line: 459, column: 5, scope: !9801)
!9818 = !DILocation(line: 460, column: 5, scope: !9801)
!9819 = !DILocation(line: 461, column: 5, scope: !9801)
!9820 = !DILocation(line: 463, column: 22, scope: !9801)
!9821 = !DILocation(line: 463, column: 5, scope: !9801)
!9822 = !DILocation(line: 464, column: 26, scope: !9801)
!9823 = !DILocation(line: 464, column: 29, scope: !9801)
!9824 = !DILocation(line: 464, column: 5, scope: !9801)
!9825 = !DILocation(line: 465, column: 26, scope: !9801)
!9826 = !DILocation(line: 465, column: 29, scope: !9801)
!9827 = !DILocation(line: 465, column: 5, scope: !9801)
!9828 = !DILocation(line: 471, column: 9, scope: !9829)
!9829 = distinct !DILexicalBlock(scope: !9801, file: !950, line: 471, column: 9)
!9830 = !DILocation(line: 471, column: 16, scope: !9829)
!9831 = !DILocation(line: 471, column: 9, scope: !9801)
!9832 = !DILocation(line: 472, column: 32, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9834, file: !950, line: 472, column: 13)
!9834 = distinct !DILexicalBlock(scope: !9829, file: !950, line: 471, column: 36)
!9835 = !DILocation(line: 472, column: 14, scope: !9833)
!9836 = !DILocation(line: 472, column: 13, scope: !9834)
!9837 = !DILocation(line: 473, column: 13, scope: !9833)
!9838 = !DILocation(line: 474, column: 5, scope: !9834)
!9839 = !DILocation(line: 477, column: 5, scope: !9801)
!9840 = !DILocation(line: 479, column: 10, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !9801, file: !950, line: 479, column: 9)
!9842 = !DILocation(line: 479, column: 13, scope: !9841)
!9843 = !DILocation(line: 479, column: 20, scope: !9841)
!9844 = !DILocation(line: 479, column: 9, scope: !9801)
!9845 = !DILocation(line: 480, column: 27, scope: !9846)
!9846 = distinct !DILexicalBlock(scope: !9841, file: !950, line: 479, column: 31)
!9847 = !DILocation(line: 480, column: 9, scope: !9846)
!9848 = !DILocation(line: 480, column: 12, scope: !9846)
!9849 = !DILocation(line: 480, column: 19, scope: !9846)
!9850 = !DILocation(line: 480, column: 25, scope: !9846)
!9851 = !DILocation(line: 481, column: 13, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9846, file: !950, line: 481, column: 13)
!9853 = !DILocation(line: 481, column: 16, scope: !9852)
!9854 = !DILocation(line: 481, column: 23, scope: !9852)
!9855 = !DILocation(line: 481, column: 29, scope: !9852)
!9856 = !DILocation(line: 481, column: 13, scope: !9846)
!9857 = !DILocation(line: 482, column: 13, scope: !9852)
!9858 = !DILocation(line: 482, column: 16, scope: !9852)
!9859 = !DILocation(line: 482, column: 23, scope: !9852)
!9860 = !DILocation(line: 482, column: 29, scope: !9852)
!9861 = !DILocation(line: 483, column: 5, scope: !9846)
!9862 = !DILocation(line: 484, column: 27, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9841, file: !950, line: 483, column: 12)
!9864 = !DILocation(line: 484, column: 30, scope: !9863)
!9865 = !DILocation(line: 484, column: 37, scope: !9863)
!9866 = !DILocation(line: 484, column: 9, scope: !9863)
!9867 = !DILocation(line: 484, column: 12, scope: !9863)
!9868 = !DILocation(line: 484, column: 19, scope: !9863)
!9869 = !DILocation(line: 484, column: 25, scope: !9863)
!9870 = !DILocalVariable(name: "max_open_files", scope: !9801, file: !950, line: 487, type: !9871)
!9871 = !DIDerivedType(tag: DW_TAG_typedef, name: "rlim_t", file: !1199, line: 131, baseType: !1226)
!9872 = !DILocation(line: 487, column: 12, scope: !9801)
!9873 = !DILocation(line: 487, column: 29, scope: !9801)
!9874 = !DILocation(line: 488, column: 26, scope: !9801)
!9875 = !DILocation(line: 488, column: 37, scope: !9801)
!9876 = !DILocation(line: 488, column: 5, scope: !9801)
!9877 = !DILocation(line: 490, column: 34, scope: !9801)
!9878 = !DILocation(line: 490, column: 24, scope: !9801)
!9879 = !DILocation(line: 490, column: 61, scope: !9801)
!9880 = !DILocation(line: 490, column: 64, scope: !9801)
!9881 = !DILocation(line: 490, column: 71, scope: !9801)
!9882 = !DILocation(line: 490, column: 51, scope: !9801)
!9883 = !DILocation(line: 490, column: 49, scope: !9801)
!9884 = !DILocation(line: 490, column: 5, scope: !9801)
!9885 = !DILocation(line: 490, column: 8, scope: !9801)
!9886 = !DILocation(line: 490, column: 15, scope: !9801)
!9887 = !DILocation(line: 490, column: 22, scope: !9801)
!9888 = !DILocation(line: 491, column: 5, scope: !9801)
!9889 = !DILocation(line: 494, column: 5, scope: !9801)
!9890 = !DILocation(line: 495, column: 5, scope: !9801)
!9891 = !DILocation(line: 497, column: 22, scope: !9801)
!9892 = !DILocation(line: 497, column: 5, scope: !9801)
!9893 = !DILocation(line: 498, column: 22, scope: !9801)
!9894 = !DILocation(line: 498, column: 5, scope: !9801)
!9895 = !DILocation(line: 499, column: 5, scope: !9801)
!9896 = !DILocation(line: 500, column: 1, scope: !9801)
!9897 = distinct !DISubprogram(name: "lwan_status_init", scope: !2636, file: !2636, line: 48, type: !9898, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2632, retainedNodes: !286)
!9898 = !DISubroutineType(types: !9899)
!9899 = !{null, !9900}
!9900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9901, size: 64)
!9901 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_t", file: !7, line: 103, baseType: !9902)
!9902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_t_", file: !7, line: 275, size: 640, elements: !9903)
!9903 = !{!9904, !9925, !9950, !9956, !9957, !9967}
!9904 = !DIDerivedType(tag: DW_TAG_member, name: "url_map_trie", scope: !9902, file: !7, line: 276, baseType: !9905, size: 128)
!9905 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_t", file: !92, line: 25, baseType: !9906)
!9906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_t_", file: !92, line: 41, size: 128, elements: !9907)
!9907 = !{!9908, !9924}
!9908 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !9906, file: !92, line: 42, baseType: !9909, size: 64)
!9909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9910, size: 64)
!9910 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_node_t", file: !92, line: 26, baseType: !9911)
!9911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_node_t_", file: !92, line: 29, size: 640, elements: !9912)
!9912 = !{!9913, !9915, !9923}
!9913 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9911, file: !92, line: 30, baseType: !9914, size: 512)
!9914 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9909, size: 512, elements: !102)
!9915 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !9911, file: !92, line: 31, baseType: !9916, size: 64, offset: 512)
!9916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9917, size: 64)
!9917 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_leaf_t", file: !92, line: 27, baseType: !9918)
!9918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_leaf_t_", file: !92, line: 35, size: 192, elements: !9919)
!9919 = !{!9920, !9921, !9922}
!9920 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !9918, file: !92, line: 36, baseType: !52, size: 64)
!9921 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9918, file: !92, line: 37, baseType: !111, size: 64, offset: 64)
!9922 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9918, file: !92, line: 38, baseType: !9916, size: 64, offset: 128)
!9923 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !9911, file: !92, line: 32, baseType: !34, size: 32, offset: 576)
!9924 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !9906, file: !92, line: 43, baseType: !115, size: 64, offset: 64)
!9925 = !DIDerivedType(tag: DW_TAG_member, name: "conns", scope: !9902, file: !7, line: 277, baseType: !9926, size: 64, offset: 128)
!9926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9927, size: 64)
!9927 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_connection_t", file: !7, line: 112, baseType: !9928)
!9928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_connection_t_", file: !7, line: 196, size: 256, elements: !9929)
!9929 = !{!9930, !9931, !9932, !9933, !9948, !9949}
!9930 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9928, file: !7, line: 199, baseType: !65, size: 32)
!9931 = !DIDerivedType(tag: DW_TAG_member, name: "time_to_die", scope: !9928, file: !7, line: 200, baseType: !9, size: 32, offset: 32)
!9932 = !DIDerivedType(tag: DW_TAG_member, name: "coro", scope: !9928, file: !7, line: 201, baseType: !76, size: 64, offset: 64)
!9933 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !9928, file: !7, line: 202, baseType: !9934, size: 64, offset: 128)
!9934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9935, size: 64)
!9935 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_thread_t", file: !7, line: 108, baseType: !9936)
!9936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_thread_t_", file: !7, line: 253, size: 832, elements: !9937)
!9937 = !{!9938, !9939, !9945, !9946, !9947}
!9938 = !DIDerivedType(tag: DW_TAG_member, name: "lwan", scope: !9936, file: !7, line: 254, baseType: !9900, size: 64)
!9939 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !9936, file: !7, line: 259, baseType: !9940, size: 576, offset: 64)
!9940 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9936, file: !7, line: 255, size: 576, elements: !9941)
!9941 = !{!9942, !9943, !9944}
!9942 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !9940, file: !7, line: 256, baseType: !146, size: 240)
!9943 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !9940, file: !7, line: 257, baseType: !146, size: 240, offset: 240)
!9944 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !9940, file: !7, line: 258, baseType: !151, size: 64, offset: 512)
!9945 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_fd", scope: !9936, file: !7, line: 261, baseType: !34, size: 32, offset: 640)
!9946 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_fd", scope: !9936, file: !7, line: 262, baseType: !158, size: 64, offset: 672)
!9947 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !9936, file: !7, line: 263, baseType: !162, size: 64, offset: 768)
!9948 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9928, file: !7, line: 203, baseType: !34, size: 32, offset: 192)
!9949 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9928, file: !7, line: 203, baseType: !34, size: 32, offset: 224)
!9950 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !9902, file: !7, line: 283, baseType: !9951, size: 128, offset: 192)
!9951 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9902, file: !7, line: 279, size: 128, elements: !9952)
!9952 = !{!9953, !9954, !9955}
!9953 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !9951, file: !7, line: 280, baseType: !9934, size: 64)
!9954 = !DIDerivedType(tag: DW_TAG_member, name: "max_fd", scope: !9951, file: !7, line: 281, baseType: !9, size: 32, offset: 64)
!9955 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !9951, file: !7, line: 282, baseType: !125, size: 16, offset: 96)
!9956 = !DIDerivedType(tag: DW_TAG_member, name: "module_registry", scope: !9902, file: !7, line: 285, baseType: !127, size: 64, offset: 320)
!9957 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !9902, file: !7, line: 286, baseType: !9958, size: 192, offset: 384)
!9958 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_config_t", file: !7, line: 111, baseType: !9959)
!9959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_config_t_", file: !7, line: 266, size: 192, elements: !9960)
!9960 = !{!9961, !9962, !9963, !9964, !9965, !9966}
!9961 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !9959, file: !7, line: 267, baseType: !52, size: 64)
!9962 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive_timeout", scope: !9959, file: !7, line: 268, baseType: !125, size: 16, offset: 64)
!9963 = !DIDerivedType(tag: DW_TAG_member, name: "quiet", scope: !9959, file: !7, line: 269, baseType: !137, size: 8, offset: 80)
!9964 = !DIDerivedType(tag: DW_TAG_member, name: "reuse_port", scope: !9959, file: !7, line: 270, baseType: !137, size: 8, offset: 88)
!9965 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !9959, file: !7, line: 271, baseType: !9, size: 32, offset: 96)
!9966 = !DIDerivedType(tag: DW_TAG_member, name: "n_threads", scope: !9959, file: !7, line: 272, baseType: !125, size: 16, offset: 128)
!9967 = !DIDerivedType(tag: DW_TAG_member, name: "main_socket", scope: !9902, file: !7, line: 287, baseType: !34, size: 32, offset: 576)
!9968 = !DILocalVariable(name: "l", arg: 1, scope: !9897, file: !2636, line: 48, type: !9900)
!9969 = !DILocation(line: 48, column: 26, scope: !9897)
!9970 = !DILocation(line: 53, column: 11, scope: !9897)
!9971 = !DILocation(line: 54, column: 12, scope: !9897)
!9972 = !DILocation(line: 56, column: 1, scope: !9897)
!9973 = !DILocation(line: 73, column: 5, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9975, file: !1852, line: 73, column: 5)
!9975 = distinct !DILexicalBlock(scope: !1851, file: !1852, line: 73, column: 5)
!9976 = !DILocation(line: 73, column: 5, scope: !9975)
!9977 = !DILocation(line: 75, column: 5, scope: !1851)
!9978 = !DILocation(line: 77, column: 46, scope: !1851)
!9979 = !DILocation(line: 77, column: 22, scope: !1851)
!9980 = !DILocation(line: 77, column: 20, scope: !1851)
!9981 = !DILocation(line: 78, column: 9, scope: !9982)
!9982 = distinct !DILexicalBlock(scope: !1851, file: !1852, line: 78, column: 9)
!9983 = !DILocation(line: 78, column: 9, scope: !1851)
!9984 = !DILocation(line: 79, column: 9, scope: !9982)
!9985 = !DILocation(line: 80, column: 1, scope: !1851)
!9986 = distinct !DISubprogram(name: "lwan_tables_init", scope: !2709, file: !2709, line: 35, type: !1853, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2705, retainedNodes: !286)
!9987 = !DILocation(line: 37, column: 9, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9986, file: !2709, line: 37, column: 9)
!9989 = !DILocation(line: 37, column: 9, scope: !9986)
!9990 = !DILocation(line: 38, column: 9, scope: !9988)
!9991 = !DILocation(line: 40, column: 5, scope: !9986)
!9992 = !DILocalVariable(name: "uncompressed_length", scope: !9986, file: !2709, line: 41, type: !9993)
!9993 = !DIDerivedType(tag: DW_TAG_typedef, name: "uLongf", file: !2723, line: 405, baseType: !9994)
!9994 = !DIDerivedType(tag: DW_TAG_typedef, name: "uLong", file: !2723, line: 394, baseType: !57)
!9995 = !DILocation(line: 41, column: 12, scope: !9986)
!9996 = !DILocalVariable(name: "ret", scope: !9986, file: !2709, line: 42, type: !34)
!9997 = !DILocation(line: 42, column: 9, scope: !9986)
!9998 = !DILocation(line: 42, column: 15, scope: !9986)
!9999 = !DILocation(line: 45, column: 9, scope: !10000)
!10000 = distinct !DILexicalBlock(scope: !9986, file: !2709, line: 45, column: 9)
!10001 = !DILocation(line: 45, column: 13, scope: !10000)
!10002 = !DILocation(line: 45, column: 9, scope: !9986)
!10003 = !DILocation(line: 46, column: 9, scope: !10000)
!10004 = !DILocation(line: 49, column: 9, scope: !10005)
!10005 = distinct !DILexicalBlock(scope: !9986, file: !2709, line: 49, column: 9)
!10006 = !DILocation(line: 49, column: 29, scope: !10005)
!10007 = !DILocation(line: 49, column: 9, scope: !9986)
!10008 = !DILocation(line: 50, column: 9, scope: !10005)
!10009 = !DILocalVariable(name: "ptr", scope: !9986, file: !2709, line: 53, type: !674)
!10010 = !DILocation(line: 53, column: 20, scope: !9986)
!10011 = !DILocalVariable(name: "i", scope: !10012, file: !2709, line: 54, type: !55)
!10012 = distinct !DILexicalBlock(scope: !9986, file: !2709, line: 54, column: 5)
!10013 = !DILocation(line: 54, column: 17, scope: !10012)
!10014 = !DILocation(line: 54, column: 10, scope: !10012)
!10015 = !DILocation(line: 54, column: 24, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !10012, file: !2709, line: 54, column: 5)
!10017 = !DILocation(line: 54, column: 26, scope: !10016)
!10018 = !DILocation(line: 54, column: 5, scope: !10012)
!10019 = !DILocation(line: 55, column: 44, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !10016, file: !2709, line: 54, column: 47)
!10021 = !DILocation(line: 55, column: 22, scope: !10020)
!10022 = !DILocation(line: 55, column: 9, scope: !10020)
!10023 = !DILocation(line: 55, column: 25, scope: !10020)
!10024 = !DILocation(line: 55, column: 35, scope: !10020)
!10025 = !DILocation(line: 56, column: 42, scope: !10020)
!10026 = !DILocation(line: 56, column: 46, scope: !10020)
!10027 = !DILocation(line: 56, column: 32, scope: !10020)
!10028 = !DILocation(line: 56, column: 57, scope: !10020)
!10029 = !DILocation(line: 56, column: 13, scope: !10020)
!10030 = !DILocation(line: 57, column: 39, scope: !10020)
!10031 = !DILocation(line: 57, column: 22, scope: !10020)
!10032 = !DILocation(line: 57, column: 9, scope: !10020)
!10033 = !DILocation(line: 57, column: 25, scope: !10020)
!10034 = !DILocation(line: 57, column: 30, scope: !10020)
!10035 = !DILocation(line: 58, column: 42, scope: !10020)
!10036 = !DILocation(line: 58, column: 46, scope: !10020)
!10037 = !DILocation(line: 58, column: 32, scope: !10020)
!10038 = !DILocation(line: 58, column: 57, scope: !10020)
!10039 = !DILocation(line: 58, column: 13, scope: !10020)
!10040 = !DILocation(line: 59, column: 5, scope: !10020)
!10041 = !DILocation(line: 54, column: 43, scope: !10016)
!10042 = !DILocation(line: 54, column: 5, scope: !10016)
!10043 = distinct !{!10043, !10018, !10044, !3413}
!10044 = !DILocation(line: 59, column: 5, scope: !10012)
!10045 = !DILocation(line: 61, column: 30, scope: !9986)
!10046 = !DILocation(line: 62, column: 1, scope: !9986)
!10047 = distinct !DISubprogram(name: "lwan_module_init", scope: !950, file: !950, line: 53, type: !9794, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !963, retainedNodes: !286)
!10048 = !DILocalVariable(name: "l", arg: 1, scope: !10047, file: !950, line: 53, type: !9135)
!10049 = !DILocation(line: 53, column: 38, scope: !10047)
!10050 = !DILocation(line: 55, column: 10, scope: !10051)
!10051 = distinct !DILexicalBlock(scope: !10047, file: !950, line: 55, column: 9)
!10052 = !DILocation(line: 55, column: 13, scope: !10051)
!10053 = !DILocation(line: 55, column: 9, scope: !10047)
!10054 = !DILocation(line: 56, column: 9, scope: !10055)
!10055 = distinct !DILexicalBlock(scope: !10051, file: !950, line: 55, column: 30)
!10056 = !DILocation(line: 57, column: 30, scope: !10055)
!10057 = !DILocation(line: 57, column: 9, scope: !10055)
!10058 = !DILocation(line: 57, column: 12, scope: !10055)
!10059 = !DILocation(line: 57, column: 28, scope: !10055)
!10060 = !DILocation(line: 58, column: 5, scope: !10055)
!10061 = !DILocation(line: 59, column: 1, scope: !10047)
!10062 = !DILocation(line: 1023, column: 5, scope: !2152)
!10063 = distinct !DISubprogram(name: "lwan_module_register", scope: !950, file: !950, line: 66, type: !10064, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !963, retainedNodes: !286)
!10064 = !DISubroutineType(types: !10065)
!10065 = !{null, !9135, !9277}
!10066 = !DILocalVariable(name: "l", arg: 1, scope: !10063, file: !950, line: 66, type: !9135)
!10067 = !DILocation(line: 66, column: 42, scope: !10063)
!10068 = !DILocalVariable(name: "module", arg: 2, scope: !10063, file: !950, line: 66, type: !9277)
!10069 = !DILocation(line: 66, column: 66, scope: !10063)
!10070 = !DILocation(line: 68, column: 10, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10063, file: !950, line: 68, column: 9)
!10072 = !DILocation(line: 68, column: 18, scope: !10071)
!10073 = !DILocation(line: 68, column: 9, scope: !10063)
!10074 = !DILocation(line: 69, column: 9, scope: !10071)
!10075 = !DILocation(line: 71, column: 5, scope: !10063)
!10076 = !DILocation(line: 72, column: 14, scope: !10063)
!10077 = !DILocation(line: 72, column: 17, scope: !10063)
!10078 = !DILocation(line: 72, column: 34, scope: !10063)
!10079 = !DILocation(line: 72, column: 42, scope: !10063)
!10080 = !DILocation(line: 72, column: 48, scope: !10063)
!10081 = !DILocation(line: 72, column: 5, scope: !10063)
!10082 = !DILocation(line: 73, column: 1, scope: !10063)
!10083 = !DILocation(line: 73, column: 5, scope: !1397)
!10084 = distinct !DISubprogram(name: "setup_from_config", scope: !950, file: !950, line: 325, type: !10085, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !963, retainedNodes: !286)
!10085 = !DISubroutineType(types: !10086)
!10086 = !{!137, !9135}
!10087 = !DILocalVariable(name: "lwan", arg: 1, scope: !10084, file: !950, line: 325, type: !9135)
!10088 = !DILocation(line: 325, column: 39, scope: !10084)
!10089 = !DILocalVariable(name: "conf", scope: !10084, file: !950, line: 327, type: !10090)
!10090 = !DIDerivedType(tag: DW_TAG_typedef, name: "config_t", file: !647, line: 32, baseType: !10091)
!10091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "config_t_", file: !647, line: 41, size: 192, elements: !10092)
!10092 = !{!10093, !10128, !10129}
!10093 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !10091, file: !647, line: 42, baseType: !10094, size: 64)
!10094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10095, size: 64)
!10095 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !7202, line: 7, baseType: !10096)
!10096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !7204, line: 49, size: 1728, elements: !10097)
!10097 = !{!10098, !10099, !10100, !10101, !10102, !10103, !10104, !10105, !10106, !10107, !10108, !10109, !10110, !10111, !10113, !10114, !10115, !10116, !10117, !10118, !10119, !10120, !10121, !10122, !10123, !10124, !10125, !10126, !10127}
!10098 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !10096, file: !7204, line: 51, baseType: !34, size: 32)
!10099 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !10096, file: !7204, line: 54, baseType: !52, size: 64, offset: 64)
!10100 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !10096, file: !7204, line: 55, baseType: !52, size: 64, offset: 128)
!10101 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !10096, file: !7204, line: 56, baseType: !52, size: 64, offset: 192)
!10102 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !10096, file: !7204, line: 57, baseType: !52, size: 64, offset: 256)
!10103 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !10096, file: !7204, line: 58, baseType: !52, size: 64, offset: 320)
!10104 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !10096, file: !7204, line: 59, baseType: !52, size: 64, offset: 384)
!10105 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !10096, file: !7204, line: 60, baseType: !52, size: 64, offset: 448)
!10106 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !10096, file: !7204, line: 61, baseType: !52, size: 64, offset: 512)
!10107 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !10096, file: !7204, line: 64, baseType: !52, size: 64, offset: 576)
!10108 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !10096, file: !7204, line: 65, baseType: !52, size: 64, offset: 640)
!10109 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !10096, file: !7204, line: 66, baseType: !52, size: 64, offset: 704)
!10110 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !10096, file: !7204, line: 68, baseType: !7219, size: 64, offset: 768)
!10111 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !10096, file: !7204, line: 70, baseType: !10112, size: 64, offset: 832)
!10112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10096, size: 64)
!10113 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !10096, file: !7204, line: 72, baseType: !34, size: 32, offset: 896)
!10114 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !10096, file: !7204, line: 73, baseType: !34, size: 32, offset: 928)
!10115 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !10096, file: !7204, line: 74, baseType: !188, size: 64, offset: 960)
!10116 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !10096, file: !7204, line: 77, baseType: !125, size: 16, offset: 1024)
!10117 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !10096, file: !7204, line: 78, baseType: !4303, size: 8, offset: 1040)
!10118 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !10096, file: !7204, line: 79, baseType: !1832, size: 8, offset: 1048)
!10119 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !10096, file: !7204, line: 81, baseType: !7230, size: 64, offset: 1088)
!10120 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !10096, file: !7204, line: 89, baseType: !7233, size: 64, offset: 1152)
!10121 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !10096, file: !7204, line: 91, baseType: !7235, size: 64, offset: 1216)
!10122 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !10096, file: !7204, line: 92, baseType: !7238, size: 64, offset: 1280)
!10123 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !10096, file: !7204, line: 93, baseType: !10112, size: 64, offset: 1344)
!10124 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !10096, file: !7204, line: 94, baseType: !111, size: 64, offset: 1408)
!10125 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !10096, file: !7204, line: 95, baseType: !55, size: 64, offset: 1472)
!10126 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !10096, file: !7204, line: 96, baseType: !34, size: 32, offset: 1536)
!10127 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !10096, file: !7204, line: 98, baseType: !263, size: 160, offset: 1568)
!10128 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !10091, file: !647, line: 43, baseType: !34, size: 32, offset: 64)
!10129 = !DIDerivedType(tag: DW_TAG_member, name: "error_message", scope: !10091, file: !647, line: 44, baseType: !52, size: 64, offset: 128)
!10130 = !DILocation(line: 327, column: 14, scope: !10084)
!10131 = !DILocalVariable(name: "line", scope: !10084, file: !950, line: 328, type: !10132)
!10132 = !DIDerivedType(tag: DW_TAG_typedef, name: "config_line_t", file: !647, line: 33, baseType: !10133)
!10133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "config_line_t_", file: !647, line: 47, size: 8384, elements: !10134)
!10134 = !{!10135, !10148, !10149}
!10135 = !DIDerivedType(tag: DW_TAG_member, scope: !10133, file: !647, line: 48, baseType: !10136, size: 128)
!10136 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10133, file: !647, line: 48, size: 128, elements: !10137)
!10137 = !{!10138, !10143}
!10138 = !DIDerivedType(tag: DW_TAG_member, name: "section", scope: !10136, file: !647, line: 51, baseType: !10139, size: 128)
!10139 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10136, file: !647, line: 49, size: 128, elements: !10140)
!10140 = !{!10141, !10142}
!10141 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10139, file: !647, line: 50, baseType: !52, size: 64)
!10142 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !10139, file: !647, line: 50, baseType: !52, size: 64, offset: 64)
!10143 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !10136, file: !647, line: 54, baseType: !10144, size: 128)
!10144 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10136, file: !647, line: 52, size: 128, elements: !10145)
!10145 = !{!10146, !10147}
!10146 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10144, file: !647, line: 53, baseType: !52, size: 64)
!10147 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !10144, file: !647, line: 53, baseType: !52, size: 64, offset: 64)
!10148 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10133, file: !647, line: 56, baseType: !7315, size: 32, offset: 128)
!10149 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !10133, file: !647, line: 57, baseType: !7317, size: 8192, offset: 160)
!10150 = !DILocation(line: 328, column: 19, scope: !10084)
!10151 = !DILocalVariable(name: "has_listener", scope: !10084, file: !950, line: 329, type: !137)
!10152 = !DILocation(line: 329, column: 10, scope: !10084)
!10153 = !DILocalVariable(name: "path_buf", scope: !10084, file: !950, line: 330, type: !10154)
!10154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 32768, elements: !10155)
!10155 = !{!10156}
!10156 = !DISubrange(count: 4096)
!10157 = !DILocation(line: 330, column: 10, scope: !10084)
!10158 = !DILocalVariable(name: "path", scope: !10084, file: !950, line: 331, type: !205)
!10159 = !DILocation(line: 331, column: 17, scope: !10084)
!10160 = !DILocation(line: 333, column: 28, scope: !10084)
!10161 = !DILocation(line: 333, column: 12, scope: !10084)
!10162 = !DILocation(line: 333, column: 10, scope: !10084)
!10163 = !DILocation(line: 334, column: 5, scope: !10084)
!10164 = !DILocation(line: 336, column: 26, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10084, file: !950, line: 336, column: 9)
!10166 = !DILocation(line: 336, column: 32, scope: !10165)
!10167 = !DILocation(line: 336, column: 10, scope: !10165)
!10168 = !DILocation(line: 336, column: 9, scope: !10084)
!10169 = !DILocation(line: 337, column: 9, scope: !10165)
!10170 = !DILocation(line: 339, column: 29, scope: !10171)
!10171 = distinct !DILexicalBlock(scope: !10084, file: !950, line: 339, column: 9)
!10172 = !DILocation(line: 339, column: 10, scope: !10171)
!10173 = !DILocation(line: 339, column: 9, scope: !10084)
!10174 = !DILocation(line: 340, column: 9, scope: !10171)
!10175 = !DILocation(line: 342, column: 5, scope: !10084)
!10176 = !DILocation(line: 342, column: 12, scope: !10084)
!10177 = !DILocation(line: 343, column: 22, scope: !10178)
!10178 = distinct !DILexicalBlock(scope: !10084, file: !950, line: 342, column: 44)
!10179 = !DILocation(line: 343, column: 9, scope: !10178)
!10180 = !DILocation(line: 345, column: 30, scope: !10181)
!10181 = distinct !DILexicalBlock(scope: !10182, file: !950, line: 345, column: 17)
!10182 = distinct !DILexicalBlock(scope: !10178, file: !950, line: 343, column: 28)
!10183 = !DILocation(line: 345, column: 35, scope: !10181)
!10184 = !DILocation(line: 345, column: 18, scope: !10181)
!10185 = !DILocation(line: 345, column: 17, scope: !10182)
!10186 = !DILocation(line: 346, column: 83, scope: !10181)
!10187 = !DILocation(line: 346, column: 88, scope: !10181)
!10188 = !DILocation(line: 347, column: 44, scope: !10181)
!10189 = !DILocation(line: 347, column: 29, scope: !10181)
!10190 = !DILocation(line: 346, column: 67, scope: !10181)
!10191 = !DILocation(line: 346, column: 51, scope: !10181)
!10192 = !DILocation(line: 346, column: 17, scope: !10181)
!10193 = !DILocation(line: 346, column: 23, scope: !10181)
!10194 = !DILocation(line: 346, column: 30, scope: !10181)
!10195 = !DILocation(line: 346, column: 49, scope: !10181)
!10196 = !DILocation(line: 348, column: 35, scope: !10197)
!10197 = distinct !DILexicalBlock(scope: !10181, file: !950, line: 348, column: 22)
!10198 = !DILocation(line: 348, column: 40, scope: !10197)
!10199 = !DILocation(line: 348, column: 23, scope: !10197)
!10200 = !DILocation(line: 348, column: 22, scope: !10181)
!10201 = !DILocation(line: 349, column: 54, scope: !10197)
!10202 = !DILocation(line: 349, column: 59, scope: !10197)
!10203 = !DILocation(line: 350, column: 44, scope: !10197)
!10204 = !DILocation(line: 349, column: 38, scope: !10197)
!10205 = !DILocation(line: 349, column: 17, scope: !10197)
!10206 = !DILocation(line: 349, column: 23, scope: !10197)
!10207 = !DILocation(line: 349, column: 30, scope: !10197)
!10208 = !DILocation(line: 349, column: 36, scope: !10197)
!10209 = !DILocation(line: 351, column: 35, scope: !10210)
!10210 = distinct !DILexicalBlock(scope: !10197, file: !950, line: 351, column: 22)
!10211 = !DILocation(line: 351, column: 40, scope: !10210)
!10212 = !DILocation(line: 351, column: 23, scope: !10210)
!10213 = !DILocation(line: 351, column: 22, scope: !10197)
!10214 = !DILocation(line: 352, column: 59, scope: !10210)
!10215 = !DILocation(line: 352, column: 64, scope: !10210)
!10216 = !DILocation(line: 353, column: 44, scope: !10210)
!10217 = !DILocation(line: 352, column: 43, scope: !10210)
!10218 = !DILocation(line: 352, column: 17, scope: !10210)
!10219 = !DILocation(line: 352, column: 23, scope: !10210)
!10220 = !DILocation(line: 352, column: 30, scope: !10210)
!10221 = !DILocation(line: 352, column: 41, scope: !10210)
!10222 = !DILocation(line: 354, column: 35, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !10210, file: !950, line: 354, column: 22)
!10224 = !DILocation(line: 354, column: 40, scope: !10223)
!10225 = !DILocation(line: 354, column: 23, scope: !10223)
!10226 = !DILocation(line: 354, column: 22, scope: !10210)
!10227 = !DILocation(line: 355, column: 63, scope: !10223)
!10228 = !DILocation(line: 355, column: 68, scope: !10223)
!10229 = !DILocation(line: 356, column: 44, scope: !10223)
!10230 = !DILocation(line: 355, column: 40, scope: !10223)
!10231 = !DILocation(line: 355, column: 17, scope: !10223)
!10232 = !DILocation(line: 355, column: 23, scope: !10223)
!10233 = !DILocation(line: 355, column: 30, scope: !10223)
!10234 = !DILocation(line: 355, column: 38, scope: !10223)
!10235 = !DILocation(line: 357, column: 35, scope: !10236)
!10236 = distinct !DILexicalBlock(scope: !10223, file: !950, line: 357, column: 22)
!10237 = !DILocation(line: 357, column: 40, scope: !10236)
!10238 = !DILocation(line: 357, column: 23, scope: !10236)
!10239 = !DILocation(line: 357, column: 22, scope: !10223)
!10240 = !DILocalVariable(name: "n_threads", scope: !10241, file: !950, line: 358, type: !155)
!10241 = distinct !DILexicalBlock(scope: !10236, file: !950, line: 357, column: 57)
!10242 = !DILocation(line: 358, column: 22, scope: !10241)
!10243 = !DILocation(line: 358, column: 50, scope: !10241)
!10244 = !DILocation(line: 358, column: 55, scope: !10241)
!10245 = !DILocation(line: 358, column: 77, scope: !10241)
!10246 = !DILocation(line: 358, column: 62, scope: !10241)
!10247 = !DILocation(line: 358, column: 34, scope: !10241)
!10248 = !DILocation(line: 359, column: 21, scope: !10249)
!10249 = distinct !DILexicalBlock(scope: !10241, file: !950, line: 359, column: 21)
!10250 = !DILocation(line: 359, column: 31, scope: !10249)
!10251 = !DILocation(line: 359, column: 21, scope: !10241)
!10252 = !DILocation(line: 360, column: 74, scope: !10249)
!10253 = !DILocation(line: 360, column: 21, scope: !10249)
!10254 = !DILocation(line: 361, column: 62, scope: !10241)
!10255 = !DILocation(line: 361, column: 42, scope: !10241)
!10256 = !DILocation(line: 361, column: 17, scope: !10241)
!10257 = !DILocation(line: 361, column: 23, scope: !10241)
!10258 = !DILocation(line: 361, column: 30, scope: !10241)
!10259 = !DILocation(line: 361, column: 40, scope: !10241)
!10260 = !DILocation(line: 362, column: 13, scope: !10241)
!10261 = !DILocation(line: 364, column: 68, scope: !10236)
!10262 = !DILocation(line: 364, column: 73, scope: !10236)
!10263 = !DILocation(line: 364, column: 17, scope: !10236)
!10264 = !DILocation(line: 365, column: 13, scope: !10182)
!10265 = !DILocation(line: 367, column: 18, scope: !10266)
!10266 = distinct !DILexicalBlock(scope: !10182, file: !950, line: 367, column: 17)
!10267 = !DILocation(line: 367, column: 17, scope: !10182)
!10268 = !DILocation(line: 368, column: 30, scope: !10269)
!10269 = distinct !DILexicalBlock(scope: !10266, file: !950, line: 367, column: 32)
!10270 = !DILocation(line: 369, column: 34, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !10269, file: !950, line: 369, column: 21)
!10272 = !DILocation(line: 369, column: 42, scope: !10271)
!10273 = !DILocation(line: 369, column: 22, scope: !10271)
!10274 = !DILocation(line: 369, column: 21, scope: !10269)
!10275 = !DILocation(line: 370, column: 50, scope: !10271)
!10276 = !DILocation(line: 370, column: 21, scope: !10271)
!10277 = !DILocation(line: 372, column: 74, scope: !10271)
!10278 = !DILocation(line: 372, column: 82, scope: !10271)
!10279 = !DILocation(line: 372, column: 21, scope: !10271)
!10280 = !DILocation(line: 373, column: 13, scope: !10269)
!10281 = !DILocation(line: 374, column: 17, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10266, file: !950, line: 373, column: 20)
!10283 = !DILocation(line: 376, column: 13, scope: !10182)
!10284 = !DILocation(line: 378, column: 13, scope: !10182)
!10285 = !DILocation(line: 379, column: 9, scope: !10182)
!10286 = distinct !{!10286, !10175, !10287, !3413}
!10287 = !DILocation(line: 380, column: 5, scope: !10084)
!10288 = !DILocation(line: 382, column: 14, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10084, file: !950, line: 382, column: 9)
!10290 = !DILocation(line: 382, column: 9, scope: !10289)
!10291 = !DILocation(line: 382, column: 9, scope: !10084)
!10292 = !DILocation(line: 383, column: 9, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10289, file: !950, line: 382, column: 29)
!10294 = !DILocation(line: 387, column: 5, scope: !10084)
!10295 = !DILocation(line: 389, column: 5, scope: !10084)
!10296 = !DILocation(line: 390, column: 1, scope: !10084)
!10297 = distinct !DISubprogram(name: "get_number_of_cpus", scope: !950, file: !950, line: 423, type: !10298, scopeLine: 424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !963, retainedNodes: !286)
!10298 = !DISubroutineType(types: !10299)
!10299 = !{!125}
!10300 = !DILocalVariable(name: "n_online_cpus", scope: !10297, file: !950, line: 425, type: !155)
!10301 = !DILocation(line: 425, column: 10, scope: !10297)
!10302 = !DILocation(line: 425, column: 26, scope: !10297)
!10303 = !DILocation(line: 426, column: 9, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10297, file: !950, line: 426, column: 9)
!10305 = !DILocation(line: 426, column: 9, scope: !10297)
!10306 = !DILocation(line: 427, column: 9, scope: !10307)
!10307 = distinct !DILexicalBlock(scope: !10304, file: !950, line: 426, column: 38)
!10308 = !DILocation(line: 428, column: 9, scope: !10307)
!10309 = !DILocation(line: 430, column: 32, scope: !10297)
!10310 = !DILocation(line: 430, column: 12, scope: !10297)
!10311 = !DILocation(line: 430, column: 5, scope: !10297)
!10312 = !DILocation(line: 431, column: 1, scope: !10297)
!10313 = distinct !DISubprogram(name: "setup_open_file_count_limits", scope: !950, file: !950, line: 393, type: !10314, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !963, retainedNodes: !286)
!10314 = !DISubroutineType(types: !10315)
!10315 = !{!9871}
!10316 = !DILocalVariable(name: "r", scope: !10313, file: !950, line: 395, type: !10317)
!10317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1199, line: 139, size: 128, elements: !10318)
!10318 = !{!10319, !10320}
!10319 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !10317, file: !1199, line: 142, baseType: !9871, size: 64)
!10320 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !10317, file: !1199, line: 144, baseType: !9871, size: 64, offset: 64)
!10321 = !DILocation(line: 395, column: 19, scope: !10313)
!10322 = !DILocation(line: 397, column: 9, scope: !10323)
!10323 = distinct !DILexicalBlock(scope: !10313, file: !950, line: 397, column: 9)
!10324 = !DILocation(line: 397, column: 38, scope: !10323)
!10325 = !DILocation(line: 397, column: 9, scope: !10313)
!10326 = !DILocation(line: 398, column: 9, scope: !10323)
!10327 = !DILocation(line: 400, column: 11, scope: !10328)
!10328 = distinct !DILexicalBlock(scope: !10313, file: !950, line: 400, column: 9)
!10329 = !DILocation(line: 400, column: 25, scope: !10328)
!10330 = !DILocation(line: 400, column: 20, scope: !10328)
!10331 = !DILocation(line: 400, column: 9, scope: !10313)
!10332 = !DILocation(line: 401, column: 18, scope: !10328)
!10333 = !DILocation(line: 401, column: 9, scope: !10328)
!10334 = !DILocation(line: 403, column: 11, scope: !10335)
!10335 = distinct !DILexicalBlock(scope: !10313, file: !950, line: 403, column: 9)
!10336 = !DILocation(line: 403, column: 20, scope: !10335)
!10337 = !DILocation(line: 403, column: 9, scope: !10313)
!10338 = !DILocation(line: 404, column: 11, scope: !10335)
!10339 = !DILocation(line: 404, column: 20, scope: !10335)
!10340 = !DILocation(line: 404, column: 9, scope: !10335)
!10341 = !DILocation(line: 405, column: 16, scope: !10342)
!10342 = distinct !DILexicalBlock(scope: !10335, file: !950, line: 405, column: 14)
!10343 = !DILocation(line: 405, column: 29, scope: !10342)
!10344 = !DILocation(line: 405, column: 25, scope: !10342)
!10345 = !DILocation(line: 405, column: 14, scope: !10335)
!10346 = !DILocation(line: 406, column: 24, scope: !10342)
!10347 = !DILocation(line: 406, column: 11, scope: !10342)
!10348 = !DILocation(line: 406, column: 20, scope: !10342)
!10349 = !DILocation(line: 406, column: 9, scope: !10342)
!10350 = !DILocation(line: 408, column: 9, scope: !10351)
!10351 = distinct !DILexicalBlock(scope: !10313, file: !950, line: 408, column: 9)
!10352 = !DILocation(line: 408, column: 38, scope: !10351)
!10353 = !DILocation(line: 408, column: 9, scope: !10313)
!10354 = !DILocation(line: 409, column: 9, scope: !10351)
!10355 = !DILocation(line: 411, column: 14, scope: !10313)
!10356 = !DILocation(line: 411, column: 5, scope: !10313)
!10357 = !DILocation(line: 412, column: 1, scope: !10313)
!10358 = distinct !DISubprogram(name: "allocate_connections", scope: !950, file: !950, line: 415, type: !10359, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !963, retainedNodes: !286)
!10359 = !DISubroutineType(types: !10360)
!10360 = !{null, !9135, !55}
!10361 = !DILocalVariable(name: "l", arg: 1, scope: !10358, file: !950, line: 415, type: !9135)
!10362 = !DILocation(line: 415, column: 30, scope: !10358)
!10363 = !DILocalVariable(name: "max_open_files", arg: 2, scope: !10358, file: !950, line: 415, type: !55)
!10364 = !DILocation(line: 415, column: 40, scope: !10358)
!10365 = !DILocation(line: 417, column: 23, scope: !10358)
!10366 = !DILocation(line: 417, column: 16, scope: !10358)
!10367 = !DILocation(line: 417, column: 5, scope: !10358)
!10368 = !DILocation(line: 417, column: 8, scope: !10358)
!10369 = !DILocation(line: 417, column: 14, scope: !10358)
!10370 = !DILocation(line: 418, column: 10, scope: !10371)
!10371 = distinct !DILexicalBlock(scope: !10358, file: !950, line: 418, column: 9)
!10372 = !DILocation(line: 418, column: 13, scope: !10371)
!10373 = !DILocation(line: 418, column: 9, scope: !10358)
!10374 = !DILocation(line: 419, column: 9, scope: !10371)
!10375 = !DILocation(line: 420, column: 1, scope: !10358)
!10376 = distinct !DISubprogram(name: "lwan_status_info_debug", scope: !2636, file: !2636, line: 191, type: !6100, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2632, retainedNodes: !286)
!10377 = !DILocalVariable(name: "file", arg: 1, scope: !10376, file: !2636, line: 191, type: !205)
!10378 = !DILocation(line: 191, column: 1, scope: !10376)
!10379 = !DILocalVariable(name: "line", arg: 2, scope: !10376, file: !2636, line: 191, type: !3317)
!10380 = !DILocalVariable(name: "func", arg: 3, scope: !10376, file: !2636, line: 191, type: !205)
!10381 = !DILocalVariable(name: "fmt", arg: 4, scope: !10376, file: !2636, line: 191, type: !205)
!10382 = !DILocation(line: 191, column: 1, scope: !10383)
!10383 = distinct !DILexicalBlock(scope: !10376, file: !2636, line: 191, column: 1)
!10384 = !DILocalVariable(name: "values", scope: !10385, file: !2636, line: 191, type: !6111)
!10385 = distinct !DILexicalBlock(scope: !10383, file: !2636, line: 191, column: 1)
!10386 = !DILocation(line: 191, column: 1, scope: !10385)
!10387 = distinct !DISubprogram(name: "lwan_thread_init", scope: !3115, file: !3115, line: 412, type: !10388, scopeLine: 413, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3168, retainedNodes: !286)
!10388 = !DISubroutineType(types: !10389)
!10389 = !{null, !10390}
!10390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10391, size: 64)
!10391 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_t", file: !7, line: 103, baseType: !10392)
!10392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_t_", file: !7, line: 275, size: 640, elements: !10393)
!10393 = !{!10394, !10415, !10440, !10446, !10447, !10457}
!10394 = !DIDerivedType(tag: DW_TAG_member, name: "url_map_trie", scope: !10392, file: !7, line: 276, baseType: !10395, size: 128)
!10395 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_t", file: !92, line: 25, baseType: !10396)
!10396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_t_", file: !92, line: 41, size: 128, elements: !10397)
!10397 = !{!10398, !10414}
!10398 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !10396, file: !92, line: 42, baseType: !10399, size: 64)
!10399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10400, size: 64)
!10400 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_node_t", file: !92, line: 26, baseType: !10401)
!10401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_node_t_", file: !92, line: 29, size: 640, elements: !10402)
!10402 = !{!10403, !10405, !10413}
!10403 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10401, file: !92, line: 30, baseType: !10404, size: 512)
!10404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10399, size: 512, elements: !102)
!10405 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !10401, file: !92, line: 31, baseType: !10406, size: 64, offset: 512)
!10406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10407, size: 64)
!10407 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_leaf_t", file: !92, line: 27, baseType: !10408)
!10408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_leaf_t_", file: !92, line: 35, size: 192, elements: !10409)
!10409 = !{!10410, !10411, !10412}
!10410 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10408, file: !92, line: 36, baseType: !52, size: 64)
!10411 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10408, file: !92, line: 37, baseType: !111, size: 64, offset: 64)
!10412 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10408, file: !92, line: 38, baseType: !10406, size: 64, offset: 128)
!10413 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !10401, file: !92, line: 32, baseType: !34, size: 32, offset: 576)
!10414 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !10396, file: !92, line: 43, baseType: !115, size: 64, offset: 64)
!10415 = !DIDerivedType(tag: DW_TAG_member, name: "conns", scope: !10392, file: !7, line: 277, baseType: !10416, size: 64, offset: 128)
!10416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10417, size: 64)
!10417 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_connection_t", file: !7, line: 112, baseType: !10418)
!10418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_connection_t_", file: !7, line: 196, size: 256, elements: !10419)
!10419 = !{!10420, !10421, !10422, !10423, !10438, !10439}
!10420 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10418, file: !7, line: 199, baseType: !65, size: 32)
!10421 = !DIDerivedType(tag: DW_TAG_member, name: "time_to_die", scope: !10418, file: !7, line: 200, baseType: !9, size: 32, offset: 32)
!10422 = !DIDerivedType(tag: DW_TAG_member, name: "coro", scope: !10418, file: !7, line: 201, baseType: !76, size: 64, offset: 64)
!10423 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !10418, file: !7, line: 202, baseType: !10424, size: 64, offset: 128)
!10424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10425, size: 64)
!10425 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_thread_t", file: !7, line: 108, baseType: !10426)
!10426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_thread_t_", file: !7, line: 253, size: 832, elements: !10427)
!10427 = !{!10428, !10429, !10435, !10436, !10437}
!10428 = !DIDerivedType(tag: DW_TAG_member, name: "lwan", scope: !10426, file: !7, line: 254, baseType: !10390, size: 64)
!10429 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !10426, file: !7, line: 259, baseType: !10430, size: 576, offset: 64)
!10430 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10426, file: !7, line: 255, size: 576, elements: !10431)
!10431 = !{!10432, !10433, !10434}
!10432 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !10430, file: !7, line: 256, baseType: !146, size: 240)
!10433 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !10430, file: !7, line: 257, baseType: !146, size: 240, offset: 240)
!10434 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !10430, file: !7, line: 258, baseType: !151, size: 64, offset: 512)
!10435 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_fd", scope: !10426, file: !7, line: 261, baseType: !34, size: 32, offset: 640)
!10436 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_fd", scope: !10426, file: !7, line: 262, baseType: !158, size: 64, offset: 672)
!10437 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !10426, file: !7, line: 263, baseType: !162, size: 64, offset: 768)
!10438 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10418, file: !7, line: 203, baseType: !34, size: 32, offset: 192)
!10439 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10418, file: !7, line: 203, baseType: !34, size: 32, offset: 224)
!10440 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !10392, file: !7, line: 283, baseType: !10441, size: 128, offset: 192)
!10441 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10392, file: !7, line: 279, size: 128, elements: !10442)
!10442 = !{!10443, !10444, !10445}
!10443 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !10441, file: !7, line: 280, baseType: !10424, size: 64)
!10444 = !DIDerivedType(tag: DW_TAG_member, name: "max_fd", scope: !10441, file: !7, line: 281, baseType: !9, size: 32, offset: 64)
!10445 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !10441, file: !7, line: 282, baseType: !125, size: 16, offset: 96)
!10446 = !DIDerivedType(tag: DW_TAG_member, name: "module_registry", scope: !10392, file: !7, line: 285, baseType: !127, size: 64, offset: 320)
!10447 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !10392, file: !7, line: 286, baseType: !10448, size: 192, offset: 384)
!10448 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_config_t", file: !7, line: 111, baseType: !10449)
!10449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_config_t_", file: !7, line: 266, size: 192, elements: !10450)
!10450 = !{!10451, !10452, !10453, !10454, !10455, !10456}
!10451 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !10449, file: !7, line: 267, baseType: !52, size: 64)
!10452 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive_timeout", scope: !10449, file: !7, line: 268, baseType: !125, size: 16, offset: 64)
!10453 = !DIDerivedType(tag: DW_TAG_member, name: "quiet", scope: !10449, file: !7, line: 269, baseType: !137, size: 8, offset: 80)
!10454 = !DIDerivedType(tag: DW_TAG_member, name: "reuse_port", scope: !10449, file: !7, line: 270, baseType: !137, size: 8, offset: 88)
!10455 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !10449, file: !7, line: 271, baseType: !9, size: 32, offset: 96)
!10456 = !DIDerivedType(tag: DW_TAG_member, name: "n_threads", scope: !10449, file: !7, line: 272, baseType: !125, size: 16, offset: 128)
!10457 = !DIDerivedType(tag: DW_TAG_member, name: "main_socket", scope: !10392, file: !7, line: 287, baseType: !34, size: 32, offset: 576)
!10458 = !DILocalVariable(name: "l", arg: 1, scope: !10387, file: !3115, line: 412, type: !10390)
!10459 = !DILocation(line: 412, column: 26, scope: !10387)
!10460 = !DILocation(line: 414, column: 5, scope: !10387)
!10461 = !DILocation(line: 416, column: 40, scope: !10387)
!10462 = !DILocation(line: 416, column: 43, scope: !10387)
!10463 = !DILocation(line: 416, column: 50, scope: !10387)
!10464 = !DILocation(line: 416, column: 32, scope: !10387)
!10465 = !DILocation(line: 416, column: 25, scope: !10387)
!10466 = !DILocation(line: 416, column: 5, scope: !10387)
!10467 = !DILocation(line: 416, column: 8, scope: !10387)
!10468 = !DILocation(line: 416, column: 15, scope: !10387)
!10469 = !DILocation(line: 416, column: 23, scope: !10387)
!10470 = !DILocation(line: 417, column: 10, scope: !10471)
!10471 = distinct !DILexicalBlock(scope: !10387, file: !3115, line: 417, column: 9)
!10472 = !DILocation(line: 417, column: 13, scope: !10471)
!10473 = !DILocation(line: 417, column: 20, scope: !10471)
!10474 = !DILocation(line: 417, column: 9, scope: !10387)
!10475 = !DILocation(line: 418, column: 9, scope: !10471)
!10476 = !DILocalVariable(name: "i", scope: !10477, file: !3115, line: 420, type: !936)
!10477 = distinct !DILexicalBlock(scope: !10387, file: !3115, line: 420, column: 5)
!10478 = !DILocation(line: 420, column: 16, scope: !10477)
!10479 = !DILocation(line: 420, column: 10, scope: !10477)
!10480 = !DILocation(line: 420, column: 23, scope: !10481)
!10481 = distinct !DILexicalBlock(scope: !10477, file: !3115, line: 420, column: 5)
!10482 = !DILocation(line: 420, column: 27, scope: !10481)
!10483 = !DILocation(line: 420, column: 30, scope: !10481)
!10484 = !DILocation(line: 420, column: 37, scope: !10481)
!10485 = !DILocation(line: 420, column: 25, scope: !10481)
!10486 = !DILocation(line: 420, column: 5, scope: !10477)
!10487 = !DILocation(line: 421, column: 23, scope: !10481)
!10488 = !DILocation(line: 421, column: 27, scope: !10481)
!10489 = !DILocation(line: 421, column: 30, scope: !10481)
!10490 = !DILocation(line: 421, column: 37, scope: !10481)
!10491 = !DILocation(line: 421, column: 45, scope: !10481)
!10492 = !DILocation(line: 421, column: 9, scope: !10481)
!10493 = !DILocation(line: 420, column: 45, scope: !10481)
!10494 = !DILocation(line: 420, column: 5, scope: !10481)
!10495 = distinct !{!10495, !10486, !10496, !3413}
!10496 = !DILocation(line: 421, column: 47, scope: !10477)
!10497 = !DILocation(line: 422, column: 1, scope: !10387)
!10498 = distinct !DISubprogram(name: "lwan_socket_init", scope: !2569, file: !2569, line: 229, type: !10499, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3320, retainedNodes: !286)
!10499 = !DISubroutineType(types: !10500)
!10500 = !{null, !10501}
!10501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10502, size: 64)
!10502 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_t", file: !7, line: 103, baseType: !10503)
!10503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_t_", file: !7, line: 275, size: 640, elements: !10504)
!10504 = !{!10505, !10526, !10551, !10557, !10558, !10568}
!10505 = !DIDerivedType(tag: DW_TAG_member, name: "url_map_trie", scope: !10503, file: !7, line: 276, baseType: !10506, size: 128)
!10506 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_t", file: !92, line: 25, baseType: !10507)
!10507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_t_", file: !92, line: 41, size: 128, elements: !10508)
!10508 = !{!10509, !10525}
!10509 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !10507, file: !92, line: 42, baseType: !10510, size: 64)
!10510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10511, size: 64)
!10511 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_node_t", file: !92, line: 26, baseType: !10512)
!10512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_node_t_", file: !92, line: 29, size: 640, elements: !10513)
!10513 = !{!10514, !10516, !10524}
!10514 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10512, file: !92, line: 30, baseType: !10515, size: 512)
!10515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10510, size: 512, elements: !102)
!10516 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !10512, file: !92, line: 31, baseType: !10517, size: 64, offset: 512)
!10517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10518, size: 64)
!10518 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_leaf_t", file: !92, line: 27, baseType: !10519)
!10519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_leaf_t_", file: !92, line: 35, size: 192, elements: !10520)
!10520 = !{!10521, !10522, !10523}
!10521 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10519, file: !92, line: 36, baseType: !52, size: 64)
!10522 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10519, file: !92, line: 37, baseType: !111, size: 64, offset: 64)
!10523 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10519, file: !92, line: 38, baseType: !10517, size: 64, offset: 128)
!10524 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !10512, file: !92, line: 32, baseType: !34, size: 32, offset: 576)
!10525 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !10507, file: !92, line: 43, baseType: !115, size: 64, offset: 64)
!10526 = !DIDerivedType(tag: DW_TAG_member, name: "conns", scope: !10503, file: !7, line: 277, baseType: !10527, size: 64, offset: 128)
!10527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10528, size: 64)
!10528 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_connection_t", file: !7, line: 112, baseType: !10529)
!10529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_connection_t_", file: !7, line: 196, size: 256, elements: !10530)
!10530 = !{!10531, !10532, !10533, !10534, !10549, !10550}
!10531 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10529, file: !7, line: 199, baseType: !65, size: 32)
!10532 = !DIDerivedType(tag: DW_TAG_member, name: "time_to_die", scope: !10529, file: !7, line: 200, baseType: !9, size: 32, offset: 32)
!10533 = !DIDerivedType(tag: DW_TAG_member, name: "coro", scope: !10529, file: !7, line: 201, baseType: !76, size: 64, offset: 64)
!10534 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !10529, file: !7, line: 202, baseType: !10535, size: 64, offset: 128)
!10535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10536, size: 64)
!10536 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_thread_t", file: !7, line: 108, baseType: !10537)
!10537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_thread_t_", file: !7, line: 253, size: 832, elements: !10538)
!10538 = !{!10539, !10540, !10546, !10547, !10548}
!10539 = !DIDerivedType(tag: DW_TAG_member, name: "lwan", scope: !10537, file: !7, line: 254, baseType: !10501, size: 64)
!10540 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !10537, file: !7, line: 259, baseType: !10541, size: 576, offset: 64)
!10541 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10537, file: !7, line: 255, size: 576, elements: !10542)
!10542 = !{!10543, !10544, !10545}
!10543 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !10541, file: !7, line: 256, baseType: !146, size: 240)
!10544 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !10541, file: !7, line: 257, baseType: !146, size: 240, offset: 240)
!10545 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !10541, file: !7, line: 258, baseType: !151, size: 64, offset: 512)
!10546 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_fd", scope: !10537, file: !7, line: 261, baseType: !34, size: 32, offset: 640)
!10547 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_fd", scope: !10537, file: !7, line: 262, baseType: !158, size: 64, offset: 672)
!10548 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !10537, file: !7, line: 263, baseType: !162, size: 64, offset: 768)
!10549 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10529, file: !7, line: 203, baseType: !34, size: 32, offset: 192)
!10550 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10529, file: !7, line: 203, baseType: !34, size: 32, offset: 224)
!10551 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !10503, file: !7, line: 283, baseType: !10552, size: 128, offset: 192)
!10552 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10503, file: !7, line: 279, size: 128, elements: !10553)
!10553 = !{!10554, !10555, !10556}
!10554 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !10552, file: !7, line: 280, baseType: !10535, size: 64)
!10555 = !DIDerivedType(tag: DW_TAG_member, name: "max_fd", scope: !10552, file: !7, line: 281, baseType: !9, size: 32, offset: 64)
!10556 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !10552, file: !7, line: 282, baseType: !125, size: 16, offset: 96)
!10557 = !DIDerivedType(tag: DW_TAG_member, name: "module_registry", scope: !10503, file: !7, line: 285, baseType: !127, size: 64, offset: 320)
!10558 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !10503, file: !7, line: 286, baseType: !10559, size: 192, offset: 384)
!10559 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_config_t", file: !7, line: 111, baseType: !10560)
!10560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_config_t_", file: !7, line: 266, size: 192, elements: !10561)
!10561 = !{!10562, !10563, !10564, !10565, !10566, !10567}
!10562 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !10560, file: !7, line: 267, baseType: !52, size: 64)
!10563 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive_timeout", scope: !10560, file: !7, line: 268, baseType: !125, size: 16, offset: 64)
!10564 = !DIDerivedType(tag: DW_TAG_member, name: "quiet", scope: !10560, file: !7, line: 269, baseType: !137, size: 8, offset: 80)
!10565 = !DIDerivedType(tag: DW_TAG_member, name: "reuse_port", scope: !10560, file: !7, line: 270, baseType: !137, size: 8, offset: 88)
!10566 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !10560, file: !7, line: 271, baseType: !9, size: 32, offset: 96)
!10567 = !DIDerivedType(tag: DW_TAG_member, name: "n_threads", scope: !10560, file: !7, line: 272, baseType: !125, size: 16, offset: 128)
!10568 = !DIDerivedType(tag: DW_TAG_member, name: "main_socket", scope: !10503, file: !7, line: 287, baseType: !34, size: 32, offset: 576)
!10569 = !DILocalVariable(name: "l", arg: 1, scope: !10498, file: !2569, line: 229, type: !10501)
!10570 = !DILocation(line: 229, column: 26, scope: !10498)
!10571 = !DILocalVariable(name: "fd", scope: !10498, file: !2569, line: 231, type: !34)
!10572 = !DILocation(line: 231, column: 9, scope: !10498)
!10573 = !DILocalVariable(name: "n", scope: !10498, file: !2569, line: 231, type: !34)
!10574 = !DILocation(line: 231, column: 13, scope: !10498)
!10575 = !DILocation(line: 233, column: 5, scope: !10498)
!10576 = !DILocation(line: 235, column: 9, scope: !10498)
!10577 = !DILocation(line: 235, column: 7, scope: !10498)
!10578 = !DILocation(line: 236, column: 9, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10498, file: !2569, line: 236, column: 9)
!10580 = !DILocation(line: 236, column: 11, scope: !10579)
!10581 = !DILocation(line: 236, column: 9, scope: !10498)
!10582 = !DILocation(line: 237, column: 9, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10579, file: !2569, line: 236, column: 16)
!10584 = !DILocation(line: 238, column: 16, scope: !10585)
!10585 = distinct !DILexicalBlock(scope: !10579, file: !2569, line: 238, column: 16)
!10586 = !DILocation(line: 238, column: 18, scope: !10585)
!10587 = !DILocation(line: 238, column: 16, scope: !10579)
!10588 = !DILocation(line: 239, column: 14, scope: !10589)
!10589 = distinct !DILexicalBlock(scope: !10585, file: !2569, line: 238, column: 24)
!10590 = !DILocation(line: 239, column: 12, scope: !10589)
!10591 = !DILocation(line: 240, column: 5, scope: !10589)
!10592 = !DILocation(line: 241, column: 36, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10585, file: !2569, line: 240, column: 12)
!10594 = !DILocation(line: 241, column: 14, scope: !10593)
!10595 = !DILocation(line: 241, column: 12, scope: !10593)
!10596 = !DILocation(line: 244, column: 5, scope: !10498)
!10597 = !DILocation(line: 244, column: 5, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10599, file: !2569, line: 244, column: 5)
!10599 = distinct !DILexicalBlock(scope: !10498, file: !2569, line: 244, column: 5)
!10600 = !DILocation(line: 244, column: 5, scope: !10599)
!10601 = !DILocation(line: 247, column: 5, scope: !10498)
!10602 = !DILocation(line: 247, column: 5, scope: !10603)
!10603 = distinct !DILexicalBlock(scope: !10604, file: !2569, line: 247, column: 5)
!10604 = distinct !DILexicalBlock(scope: !10498, file: !2569, line: 247, column: 5)
!10605 = !DILocation(line: 247, column: 5, scope: !10604)
!10606 = !DILocation(line: 249, column: 5, scope: !10498)
!10607 = !DILocation(line: 249, column: 5, scope: !10608)
!10608 = distinct !DILexicalBlock(scope: !10609, file: !2569, line: 249, column: 5)
!10609 = distinct !DILexicalBlock(scope: !10498, file: !2569, line: 249, column: 5)
!10610 = !DILocation(line: 249, column: 5, scope: !10609)
!10611 = !DILocation(line: 252, column: 22, scope: !10498)
!10612 = !DILocation(line: 252, column: 5, scope: !10498)
!10613 = !DILocation(line: 252, column: 8, scope: !10498)
!10614 = !DILocation(line: 252, column: 20, scope: !10498)
!10615 = !DILocation(line: 253, column: 1, scope: !10498)
!10616 = distinct !DISubprogram(name: "sd_listen_fds", scope: !3255, file: !3255, line: 40, type: !10617, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3335, retainedNodes: !286)
!10617 = !DISubroutineType(types: !10618)
!10618 = !{!34, !34}
!10619 = !DILocalVariable(name: "unset_environment", arg: 1, scope: !10616, file: !3255, line: 40, type: !34)
!10620 = !DILocation(line: 40, column: 23, scope: !10616)
!10621 = !DILocalVariable(name: "r", scope: !10616, file: !3255, line: 41, type: !34)
!10622 = !DILocation(line: 41, column: 13, scope: !10616)
!10623 = !DILocalVariable(name: "fd", scope: !10616, file: !3255, line: 41, type: !34)
!10624 = !DILocation(line: 41, column: 16, scope: !10616)
!10625 = !DILocalVariable(name: "e", scope: !10616, file: !3255, line: 42, type: !205)
!10626 = !DILocation(line: 42, column: 21, scope: !10616)
!10627 = !DILocalVariable(name: "p", scope: !10616, file: !3255, line: 43, type: !52)
!10628 = !DILocation(line: 43, column: 15, scope: !10616)
!10629 = !DILocalVariable(name: "l", scope: !10616, file: !3255, line: 44, type: !57)
!10630 = !DILocation(line: 44, column: 23, scope: !10616)
!10631 = !DILocation(line: 46, column: 13, scope: !10616)
!10632 = !DILocation(line: 46, column: 11, scope: !10616)
!10633 = !DILocation(line: 47, column: 14, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10616, file: !3255, line: 47, column: 13)
!10635 = !DILocation(line: 47, column: 13, scope: !10616)
!10636 = !DILocation(line: 48, column: 19, scope: !10637)
!10637 = distinct !DILexicalBlock(scope: !10634, file: !3255, line: 47, column: 17)
!10638 = !DILocation(line: 49, column: 17, scope: !10637)
!10639 = !DILocation(line: 52, column: 9, scope: !10616)
!10640 = !DILocation(line: 52, column: 15, scope: !10616)
!10641 = !DILocation(line: 53, column: 21, scope: !10616)
!10642 = !DILocation(line: 53, column: 13, scope: !10616)
!10643 = !DILocation(line: 53, column: 11, scope: !10616)
!10644 = !DILocation(line: 55, column: 13, scope: !10645)
!10645 = distinct !DILexicalBlock(scope: !10616, file: !3255, line: 55, column: 13)
!10646 = !DILocation(line: 55, column: 19, scope: !10645)
!10647 = !DILocation(line: 55, column: 13, scope: !10616)
!10648 = !DILocation(line: 56, column: 22, scope: !10649)
!10649 = distinct !DILexicalBlock(scope: !10645, file: !3255, line: 55, column: 24)
!10650 = !DILocation(line: 56, column: 21, scope: !10649)
!10651 = !DILocation(line: 56, column: 19, scope: !10649)
!10652 = !DILocation(line: 57, column: 17, scope: !10649)
!10653 = !DILocation(line: 60, column: 14, scope: !10654)
!10654 = distinct !DILexicalBlock(scope: !10616, file: !3255, line: 60, column: 13)
!10655 = !DILocation(line: 60, column: 16, scope: !10654)
!10656 = !DILocation(line: 60, column: 19, scope: !10654)
!10657 = !DILocation(line: 60, column: 24, scope: !10654)
!10658 = !DILocation(line: 60, column: 21, scope: !10654)
!10659 = !DILocation(line: 60, column: 26, scope: !10654)
!10660 = !DILocation(line: 60, column: 30, scope: !10654)
!10661 = !DILocation(line: 60, column: 29, scope: !10654)
!10662 = !DILocation(line: 60, column: 32, scope: !10654)
!10663 = !DILocation(line: 60, column: 35, scope: !10654)
!10664 = !DILocation(line: 60, column: 37, scope: !10654)
!10665 = !DILocation(line: 60, column: 13, scope: !10616)
!10666 = !DILocation(line: 61, column: 19, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10654, file: !3255, line: 60, column: 43)
!10668 = !DILocation(line: 62, column: 17, scope: !10667)
!10669 = !DILocation(line: 66, column: 13, scope: !10670)
!10670 = distinct !DILexicalBlock(scope: !10616, file: !3255, line: 66, column: 13)
!10671 = !DILocation(line: 66, column: 33, scope: !10670)
!10672 = !DILocation(line: 66, column: 25, scope: !10670)
!10673 = !DILocation(line: 66, column: 22, scope: !10670)
!10674 = !DILocation(line: 66, column: 13, scope: !10616)
!10675 = !DILocation(line: 67, column: 19, scope: !10676)
!10676 = distinct !DILexicalBlock(scope: !10670, file: !3255, line: 66, column: 36)
!10677 = !DILocation(line: 68, column: 17, scope: !10676)
!10678 = !DILocation(line: 71, column: 13, scope: !10616)
!10679 = !DILocation(line: 71, column: 11, scope: !10616)
!10680 = !DILocation(line: 72, column: 14, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10616, file: !3255, line: 72, column: 13)
!10682 = !DILocation(line: 72, column: 13, scope: !10616)
!10683 = !DILocation(line: 73, column: 19, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !10681, file: !3255, line: 72, column: 17)
!10685 = !DILocation(line: 74, column: 17, scope: !10684)
!10686 = !DILocation(line: 77, column: 9, scope: !10616)
!10687 = !DILocation(line: 77, column: 15, scope: !10616)
!10688 = !DILocation(line: 78, column: 21, scope: !10616)
!10689 = !DILocation(line: 78, column: 13, scope: !10616)
!10690 = !DILocation(line: 78, column: 11, scope: !10616)
!10691 = !DILocation(line: 80, column: 13, scope: !10692)
!10692 = distinct !DILexicalBlock(scope: !10616, file: !3255, line: 80, column: 13)
!10693 = !DILocation(line: 80, column: 19, scope: !10692)
!10694 = !DILocation(line: 80, column: 13, scope: !10616)
!10695 = !DILocation(line: 81, column: 22, scope: !10696)
!10696 = distinct !DILexicalBlock(scope: !10692, file: !3255, line: 80, column: 24)
!10697 = !DILocation(line: 81, column: 21, scope: !10696)
!10698 = !DILocation(line: 81, column: 19, scope: !10696)
!10699 = !DILocation(line: 82, column: 17, scope: !10696)
!10700 = !DILocation(line: 85, column: 14, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10616, file: !3255, line: 85, column: 13)
!10702 = !DILocation(line: 85, column: 16, scope: !10701)
!10703 = !DILocation(line: 85, column: 19, scope: !10701)
!10704 = !DILocation(line: 85, column: 24, scope: !10701)
!10705 = !DILocation(line: 85, column: 21, scope: !10701)
!10706 = !DILocation(line: 85, column: 26, scope: !10701)
!10707 = !DILocation(line: 85, column: 30, scope: !10701)
!10708 = !DILocation(line: 85, column: 29, scope: !10701)
!10709 = !DILocation(line: 85, column: 13, scope: !10616)
!10710 = !DILocation(line: 86, column: 19, scope: !10711)
!10711 = distinct !DILexicalBlock(scope: !10701, file: !3255, line: 85, column: 33)
!10712 = !DILocation(line: 87, column: 17, scope: !10711)
!10713 = !DILocation(line: 90, column: 17, scope: !10714)
!10714 = distinct !DILexicalBlock(scope: !10616, file: !3255, line: 90, column: 9)
!10715 = !DILocation(line: 90, column: 14, scope: !10714)
!10716 = !DILocation(line: 90, column: 40, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10714, file: !3255, line: 90, column: 9)
!10718 = !DILocation(line: 90, column: 73, scope: !10717)
!10719 = !DILocation(line: 90, column: 67, scope: !10717)
!10720 = !DILocation(line: 90, column: 65, scope: !10717)
!10721 = !DILocation(line: 90, column: 43, scope: !10717)
!10722 = !DILocation(line: 90, column: 9, scope: !10714)
!10723 = !DILocalVariable(name: "flags", scope: !10724, file: !3255, line: 91, type: !34)
!10724 = distinct !DILexicalBlock(scope: !10717, file: !3255, line: 90, column: 83)
!10725 = !DILocation(line: 91, column: 21, scope: !10724)
!10726 = !DILocation(line: 93, column: 31, scope: !10724)
!10727 = !DILocation(line: 93, column: 25, scope: !10724)
!10728 = !DILocation(line: 93, column: 23, scope: !10724)
!10729 = !DILocation(line: 94, column: 21, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10724, file: !3255, line: 94, column: 21)
!10731 = !DILocation(line: 94, column: 27, scope: !10730)
!10732 = !DILocation(line: 94, column: 21, scope: !10724)
!10733 = !DILocation(line: 95, column: 30, scope: !10734)
!10734 = distinct !DILexicalBlock(scope: !10730, file: !3255, line: 94, column: 32)
!10735 = !DILocation(line: 95, column: 29, scope: !10734)
!10736 = !DILocation(line: 95, column: 27, scope: !10734)
!10737 = !DILocation(line: 96, column: 25, scope: !10734)
!10738 = !DILocation(line: 99, column: 21, scope: !10739)
!10739 = distinct !DILexicalBlock(scope: !10724, file: !3255, line: 99, column: 21)
!10740 = !DILocation(line: 99, column: 27, scope: !10739)
!10741 = !DILocation(line: 99, column: 21, scope: !10724)
!10742 = !DILocation(line: 100, column: 25, scope: !10739)
!10743 = !DILocation(line: 102, column: 27, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10724, file: !3255, line: 102, column: 21)
!10745 = !DILocation(line: 102, column: 40, scope: !10744)
!10746 = !DILocation(line: 102, column: 46, scope: !10744)
!10747 = !DILocation(line: 102, column: 21, scope: !10744)
!10748 = !DILocation(line: 102, column: 60, scope: !10744)
!10749 = !DILocation(line: 102, column: 21, scope: !10724)
!10750 = !DILocation(line: 103, column: 30, scope: !10751)
!10751 = distinct !DILexicalBlock(scope: !10744, file: !3255, line: 102, column: 65)
!10752 = !DILocation(line: 103, column: 29, scope: !10751)
!10753 = !DILocation(line: 103, column: 27, scope: !10751)
!10754 = !DILocation(line: 104, column: 25, scope: !10751)
!10755 = !DILocation(line: 106, column: 9, scope: !10724)
!10756 = !DILocation(line: 90, column: 79, scope: !10717)
!10757 = !DILocation(line: 90, column: 9, scope: !10717)
!10758 = distinct !{!10758, !10722, !10759, !3413}
!10759 = !DILocation(line: 106, column: 9, scope: !10714)
!10760 = !DILocation(line: 108, column: 19, scope: !10616)
!10761 = !DILocation(line: 108, column: 13, scope: !10616)
!10762 = !DILocation(line: 108, column: 11, scope: !10616)
!10763 = !DILocation(line: 108, column: 9, scope: !10616)
!10764 = !DILabel(scope: !10616, name: "finish", file: !3255, line: 110)
!10765 = !DILocation(line: 110, column: 1, scope: !10616)
!10766 = !DILocation(line: 111, column: 13, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !10616, file: !3255, line: 111, column: 13)
!10768 = !DILocation(line: 111, column: 13, scope: !10616)
!10769 = !DILocation(line: 112, column: 17, scope: !10770)
!10770 = distinct !DILexicalBlock(scope: !10767, file: !3255, line: 111, column: 32)
!10771 = !DILocation(line: 113, column: 17, scope: !10770)
!10772 = !DILocation(line: 114, column: 9, scope: !10770)
!10773 = !DILocation(line: 116, column: 16, scope: !10616)
!10774 = !DILocation(line: 116, column: 9, scope: !10616)
!10775 = distinct !DISubprogram(name: "lwan_status_critical_debug", scope: !2636, file: !2636, line: 196, type: !6100, scopeLine: 196, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2632, retainedNodes: !286)
!10776 = !DILocalVariable(name: "file", arg: 1, scope: !10775, file: !2636, line: 196, type: !205)
!10777 = !DILocation(line: 196, column: 1, scope: !10775)
!10778 = !DILocalVariable(name: "line", arg: 2, scope: !10775, file: !2636, line: 196, type: !3317)
!10779 = !DILocalVariable(name: "func", arg: 3, scope: !10775, file: !2636, line: 196, type: !205)
!10780 = !DILocalVariable(name: "fmt", arg: 4, scope: !10775, file: !2636, line: 196, type: !205)
!10781 = !DILocation(line: 196, column: 1, scope: !10782)
!10782 = distinct !DILexicalBlock(scope: !10775, file: !2636, line: 196, column: 1)
!10783 = !DILocalVariable(name: "values", scope: !10784, file: !2636, line: 196, type: !6111)
!10784 = distinct !DILexicalBlock(scope: !10782, file: !2636, line: 196, column: 1)
!10785 = !DILocation(line: 196, column: 1, scope: !10784)
!10786 = !DILocation(line: 196, column: 1, scope: !10787)
!10787 = distinct !DILexicalBlock(scope: !10775, file: !2636, line: 196, column: 1)
!10788 = distinct !DISubprogram(name: "setup_socket_from_systemd", scope: !2569, file: !2569, line: 59, type: !10789, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3320, retainedNodes: !286)
!10789 = !DISubroutineType(types: !10790)
!10790 = !{!34}
!10791 = !DILocalVariable(name: "fd", scope: !10788, file: !2569, line: 61, type: !34)
!10792 = !DILocation(line: 61, column: 9, scope: !10788)
!10793 = !DILocation(line: 63, column: 28, scope: !10794)
!10794 = distinct !DILexicalBlock(scope: !10788, file: !2569, line: 63, column: 9)
!10795 = !DILocation(line: 63, column: 10, scope: !10794)
!10796 = !DILocation(line: 63, column: 9, scope: !10788)
!10797 = !DILocation(line: 64, column: 9, scope: !10794)
!10798 = !DILocalVariable(name: "flags", scope: !10788, file: !2569, line: 67, type: !34)
!10799 = !DILocation(line: 67, column: 9, scope: !10788)
!10800 = !DILocation(line: 67, column: 23, scope: !10788)
!10801 = !DILocation(line: 67, column: 17, scope: !10788)
!10802 = !DILocation(line: 68, column: 9, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10788, file: !2569, line: 68, column: 9)
!10804 = !DILocation(line: 68, column: 15, scope: !10803)
!10805 = !DILocation(line: 68, column: 9, scope: !10788)
!10806 = !DILocation(line: 69, column: 9, scope: !10803)
!10807 = !DILocation(line: 70, column: 15, scope: !10808)
!10808 = distinct !DILexicalBlock(scope: !10788, file: !2569, line: 70, column: 9)
!10809 = !DILocation(line: 70, column: 28, scope: !10808)
!10810 = !DILocation(line: 70, column: 34, scope: !10808)
!10811 = !DILocation(line: 70, column: 9, scope: !10808)
!10812 = !DILocation(line: 70, column: 48, scope: !10808)
!10813 = !DILocation(line: 70, column: 9, scope: !10788)
!10814 = !DILocation(line: 71, column: 9, scope: !10808)
!10815 = !DILocation(line: 73, column: 12, scope: !10788)
!10816 = !DILocation(line: 73, column: 5, scope: !10788)
!10817 = distinct !DISubprogram(name: "setup_socket_normally", scope: !2569, file: !2569, line: 200, type: !10818, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3320, retainedNodes: !286)
!10818 = !DISubroutineType(types: !10819)
!10819 = !{!34, !10501}
!10820 = !DILocalVariable(name: "l", arg: 1, scope: !10817, file: !2569, line: 200, type: !10501)
!10821 = !DILocation(line: 200, column: 31, scope: !10817)
!10822 = !DILocalVariable(name: "node", scope: !10817, file: !2569, line: 202, type: !52)
!10823 = !DILocation(line: 202, column: 11, scope: !10817)
!10824 = !DILocalVariable(name: "port", scope: !10817, file: !2569, line: 202, type: !52)
!10825 = !DILocation(line: 202, column: 18, scope: !10817)
!10826 = !DILocalVariable(name: "listener", scope: !10817, file: !2569, line: 203, type: !52)
!10827 = !DILocation(line: 203, column: 11, scope: !10817)
!10828 = !DILocalVariable(name: "__old", scope: !10829, file: !2569, line: 203, type: !205)
!10829 = distinct !DILexicalBlock(scope: !10817, file: !2569, line: 203, column: 22)
!10830 = !DILocation(line: 203, column: 22, scope: !10829)
!10831 = !DILocalVariable(name: "__len", scope: !10829, file: !2569, line: 203, type: !55)
!10832 = !DILocalVariable(name: "__new", scope: !10829, file: !2569, line: 203, type: !52)
!10833 = !DILocalVariable(name: "family", scope: !10817, file: !2569, line: 204, type: !1784)
!10834 = !DILocation(line: 204, column: 17, scope: !10817)
!10835 = !DILocation(line: 204, column: 41, scope: !10817)
!10836 = !DILocation(line: 204, column: 26, scope: !10817)
!10837 = !DILocation(line: 205, column: 9, scope: !10838)
!10838 = distinct !DILexicalBlock(scope: !10817, file: !2569, line: 205, column: 9)
!10839 = !DILocation(line: 205, column: 16, scope: !10838)
!10840 = !DILocation(line: 205, column: 9, scope: !10817)
!10841 = !DILocation(line: 206, column: 9, scope: !10838)
!10842 = !DILocalVariable(name: "addrs", scope: !10817, file: !2569, line: 208, type: !10843)
!10843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10844, size: 64)
!10844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "addrinfo", file: !10845, line: 565, size: 384, elements: !10846)
!10845 = !DIFile(filename: "/usr/include/netdb.h", directory: "", checksumkind: CSK_MD5, checksum: "dd84cdc2a8dcb66c232d326e9ca8b469")
!10846 = !{!10847, !10848, !10849, !10850, !10851, !10852, !10858, !10859}
!10847 = !DIDerivedType(tag: DW_TAG_member, name: "ai_flags", scope: !10844, file: !10845, line: 567, baseType: !34, size: 32)
!10848 = !DIDerivedType(tag: DW_TAG_member, name: "ai_family", scope: !10844, file: !10845, line: 568, baseType: !34, size: 32, offset: 32)
!10849 = !DIDerivedType(tag: DW_TAG_member, name: "ai_socktype", scope: !10844, file: !10845, line: 569, baseType: !34, size: 32, offset: 64)
!10850 = !DIDerivedType(tag: DW_TAG_member, name: "ai_protocol", scope: !10844, file: !10845, line: 570, baseType: !34, size: 32, offset: 96)
!10851 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addrlen", scope: !10844, file: !10845, line: 571, baseType: !3341, size: 32, offset: 128)
!10852 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addr", scope: !10844, file: !10845, line: 572, baseType: !10853, size: 64, offset: 192)
!10853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10854, size: 64)
!10854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !1781, line: 180, size: 128, elements: !10855)
!10855 = !{!10856, !10857}
!10856 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !10854, file: !1781, line: 182, baseType: !1784, size: 16)
!10857 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !10854, file: !1781, line: 183, baseType: !297, size: 112, offset: 16)
!10858 = !DIDerivedType(tag: DW_TAG_member, name: "ai_canonname", scope: !10844, file: !10845, line: 573, baseType: !52, size: 64, offset: 256)
!10859 = !DIDerivedType(tag: DW_TAG_member, name: "ai_next", scope: !10844, file: !10845, line: 574, baseType: !10843, size: 64, offset: 320)
!10860 = !DILocation(line: 208, column: 22, scope: !10817)
!10861 = !DILocalVariable(name: "hints", scope: !10817, file: !2569, line: 209, type: !10844)
!10862 = !DILocation(line: 209, column: 21, scope: !10817)
!10863 = !DILocation(line: 209, column: 29, scope: !10817)
!10864 = !DILocation(line: 210, column: 22, scope: !10817)
!10865 = !DILocalVariable(name: "ret", scope: !10817, file: !2569, line: 215, type: !34)
!10866 = !DILocation(line: 215, column: 9, scope: !10817)
!10867 = !DILocation(line: 215, column: 27, scope: !10817)
!10868 = !DILocation(line: 215, column: 33, scope: !10817)
!10869 = !DILocation(line: 215, column: 15, scope: !10817)
!10870 = !DILocation(line: 216, column: 9, scope: !10871)
!10871 = distinct !DILexicalBlock(scope: !10817, file: !2569, line: 216, column: 9)
!10872 = !DILocation(line: 216, column: 9, scope: !10817)
!10873 = !DILocation(line: 217, column: 9, scope: !10871)
!10874 = !DILocalVariable(name: "fd", scope: !10817, file: !2569, line: 219, type: !34)
!10875 = !DILocation(line: 219, column: 9, scope: !10817)
!10876 = !DILocation(line: 219, column: 40, scope: !10817)
!10877 = !DILocation(line: 219, column: 47, scope: !10817)
!10878 = !DILocation(line: 219, column: 50, scope: !10817)
!10879 = !DILocation(line: 219, column: 57, scope: !10817)
!10880 = !DILocation(line: 219, column: 14, scope: !10817)
!10881 = !DILocation(line: 220, column: 18, scope: !10817)
!10882 = !DILocation(line: 220, column: 5, scope: !10817)
!10883 = !DILocation(line: 221, column: 12, scope: !10817)
!10884 = !DILocation(line: 221, column: 5, scope: !10817)
!10885 = distinct !DISubprogram(name: "parse_listener", scope: !2569, file: !2569, line: 130, type: !10886, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3320, retainedNodes: !286)
!10886 = !DISubroutineType(types: !10887)
!10887 = !{!1784, !52, !353, !353}
!10888 = !DILocalVariable(name: "listener", arg: 1, scope: !10885, file: !2569, line: 130, type: !52)
!10889 = !DILocation(line: 130, column: 22, scope: !10885)
!10890 = !DILocalVariable(name: "node", arg: 2, scope: !10885, file: !2569, line: 130, type: !353)
!10891 = !DILocation(line: 130, column: 39, scope: !10885)
!10892 = !DILocalVariable(name: "port", arg: 3, scope: !10885, file: !2569, line: 130, type: !353)
!10893 = !DILocation(line: 130, column: 52, scope: !10885)
!10894 = !DILocation(line: 132, column: 10, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10885, file: !2569, line: 132, column: 9)
!10896 = !DILocation(line: 132, column: 9, scope: !10895)
!10897 = !DILocation(line: 132, column: 19, scope: !10895)
!10898 = !DILocation(line: 132, column: 9, scope: !10885)
!10899 = !DILocation(line: 133, column: 36, scope: !10895)
!10900 = !DILocation(line: 133, column: 46, scope: !10895)
!10901 = !DILocation(line: 133, column: 52, scope: !10895)
!10902 = !DILocation(line: 133, column: 16, scope: !10895)
!10903 = !DILocation(line: 133, column: 9, scope: !10895)
!10904 = !DILocation(line: 134, column: 32, scope: !10885)
!10905 = !DILocation(line: 134, column: 42, scope: !10885)
!10906 = !DILocation(line: 134, column: 48, scope: !10885)
!10907 = !DILocation(line: 134, column: 12, scope: !10885)
!10908 = !DILocation(line: 134, column: 5, scope: !10885)
!10909 = !DILocation(line: 135, column: 1, scope: !10885)
!10910 = distinct !DISubprogram(name: "bind_and_listen_addrinfos", scope: !2569, file: !2569, line: 175, type: !10911, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3320, retainedNodes: !286)
!10911 = !DISubroutineType(types: !10912)
!10912 = !{!34, !10843, !137}
!10913 = !DILocalVariable(name: "addrs", arg: 1, scope: !10910, file: !2569, line: 175, type: !10843)
!10914 = !DILocation(line: 175, column: 44, scope: !10910)
!10915 = !DILocalVariable(name: "reuse_port", arg: 2, scope: !10910, file: !2569, line: 175, type: !137)
!10916 = !DILocation(line: 175, column: 56, scope: !10910)
!10917 = !DILocalVariable(name: "addr", scope: !10910, file: !2569, line: 177, type: !10918)
!10918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10919, size: 64)
!10919 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10844)
!10920 = !DILocation(line: 177, column: 28, scope: !10910)
!10921 = !DILocation(line: 180, column: 17, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !10910, file: !2569, line: 180, column: 5)
!10923 = !DILocation(line: 180, column: 15, scope: !10922)
!10924 = !DILocation(line: 180, column: 10, scope: !10922)
!10925 = !DILocation(line: 180, column: 24, scope: !10926)
!10926 = distinct !DILexicalBlock(scope: !10922, file: !2569, line: 180, column: 5)
!10927 = !DILocation(line: 180, column: 5, scope: !10922)
!10928 = !DILocalVariable(name: "fd", scope: !10929, file: !2569, line: 181, type: !34)
!10929 = distinct !DILexicalBlock(scope: !10926, file: !2569, line: 180, column: 52)
!10930 = !DILocation(line: 181, column: 13, scope: !10929)
!10931 = !DILocation(line: 181, column: 25, scope: !10929)
!10932 = !DILocation(line: 181, column: 31, scope: !10929)
!10933 = !DILocation(line: 182, column: 13, scope: !10929)
!10934 = !DILocation(line: 182, column: 19, scope: !10929)
!10935 = !DILocation(line: 182, column: 31, scope: !10929)
!10936 = !DILocation(line: 182, column: 47, scope: !10929)
!10937 = !DILocation(line: 182, column: 53, scope: !10929)
!10938 = !DILocation(line: 181, column: 18, scope: !10929)
!10939 = !DILocation(line: 183, column: 13, scope: !10940)
!10940 = distinct !DILexicalBlock(scope: !10929, file: !2569, line: 183, column: 13)
!10941 = !DILocation(line: 183, column: 16, scope: !10940)
!10942 = !DILocation(line: 183, column: 13, scope: !10929)
!10943 = !DILocation(line: 184, column: 13, scope: !10940)
!10944 = !DILocation(line: 186, column: 9, scope: !10929)
!10945 = !DILocation(line: 186, column: 9, scope: !10946)
!10946 = distinct !DILexicalBlock(scope: !10947, file: !2569, line: 186, column: 9)
!10947 = distinct !DILexicalBlock(scope: !10929, file: !2569, line: 186, column: 9)
!10948 = !DILocation(line: 186, column: 9, scope: !10947)
!10949 = !DILocation(line: 187, column: 9, scope: !10929)
!10950 = !DILocation(line: 187, column: 9, scope: !10951)
!10951 = distinct !DILexicalBlock(scope: !10952, file: !2569, line: 187, column: 9)
!10952 = distinct !DILexicalBlock(scope: !10929, file: !2569, line: 187, column: 9)
!10953 = !DILocation(line: 187, column: 9, scope: !10952)
!10954 = !DILocation(line: 190, column: 19, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10929, file: !2569, line: 190, column: 13)
!10956 = !DILocation(line: 190, column: 23, scope: !10955)
!10957 = !DILocation(line: 190, column: 29, scope: !10955)
!10958 = !DILocation(line: 190, column: 38, scope: !10955)
!10959 = !DILocation(line: 190, column: 44, scope: !10955)
!10960 = !DILocation(line: 190, column: 14, scope: !10955)
!10961 = !DILocation(line: 190, column: 13, scope: !10929)
!10962 = !DILocation(line: 191, column: 36, scope: !10955)
!10963 = !DILocation(line: 191, column: 40, scope: !10955)
!10964 = !DILocation(line: 191, column: 20, scope: !10955)
!10965 = !DILocation(line: 191, column: 13, scope: !10955)
!10966 = !DILocation(line: 193, column: 15, scope: !10929)
!10967 = !DILocation(line: 193, column: 9, scope: !10929)
!10968 = !DILocation(line: 194, column: 5, scope: !10929)
!10969 = !DILocation(line: 180, column: 37, scope: !10926)
!10970 = !DILocation(line: 180, column: 43, scope: !10926)
!10971 = !DILocation(line: 180, column: 35, scope: !10926)
!10972 = !DILocation(line: 180, column: 5, scope: !10926)
!10973 = distinct !{!10973, !10927, !10974, !3413}
!10974 = !DILocation(line: 194, column: 5, scope: !10922)
!10975 = !DILocation(line: 196, column: 5, scope: !10910)
!10976 = distinct !DISubprogram(name: "listen_addrinfo", scope: !2569, file: !2569, line: 138, type: !10977, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3320, retainedNodes: !286)
!10977 = !DISubroutineType(types: !10978)
!10978 = !{!34, !34, !10918}
!10979 = !DILocalVariable(name: "fd", arg: 1, scope: !10976, file: !2569, line: 138, type: !34)
!10980 = !DILocation(line: 138, column: 21, scope: !10976)
!10981 = !DILocalVariable(name: "addr", arg: 2, scope: !10976, file: !2569, line: 138, type: !10918)
!10982 = !DILocation(line: 138, column: 48, scope: !10976)
!10983 = !DILocation(line: 140, column: 16, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !10976, file: !2569, line: 140, column: 9)
!10985 = !DILocation(line: 140, column: 20, scope: !10984)
!10986 = !DILocation(line: 140, column: 9, scope: !10984)
!10987 = !DILocation(line: 140, column: 40, scope: !10984)
!10988 = !DILocation(line: 140, column: 9, scope: !10976)
!10989 = !DILocation(line: 141, column: 9, scope: !10984)
!10990 = !DILocalVariable(name: "host_buf", scope: !10976, file: !2569, line: 143, type: !10991)
!10991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 8200, elements: !10992)
!10992 = !{!10993}
!10993 = !DISubrange(count: 1025)
!10994 = !DILocation(line: 143, column: 10, scope: !10976)
!10995 = !DILocalVariable(name: "serv_buf", scope: !10976, file: !2569, line: 143, type: !580)
!10996 = !DILocation(line: 143, column: 32, scope: !10976)
!10997 = !DILocalVariable(name: "ret", scope: !10976, file: !2569, line: 144, type: !34)
!10998 = !DILocation(line: 144, column: 9, scope: !10976)
!10999 = !DILocation(line: 144, column: 27, scope: !10976)
!11000 = !DILocation(line: 144, column: 33, scope: !10976)
!11001 = !DILocation(line: 144, column: 42, scope: !10976)
!11002 = !DILocation(line: 144, column: 48, scope: !10976)
!11003 = !DILocation(line: 144, column: 60, scope: !10976)
!11004 = !DILocation(line: 145, column: 23, scope: !10976)
!11005 = !DILocation(line: 144, column: 15, scope: !10976)
!11006 = !DILocation(line: 146, column: 9, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !10976, file: !2569, line: 146, column: 9)
!11008 = !DILocation(line: 146, column: 9, scope: !10976)
!11009 = !DILocation(line: 147, column: 9, scope: !11007)
!11010 = !DILocation(line: 149, column: 9, scope: !11011)
!11011 = distinct !DILexicalBlock(scope: !10976, file: !2569, line: 149, column: 9)
!11012 = !DILocation(line: 149, column: 15, scope: !11011)
!11013 = !DILocation(line: 149, column: 25, scope: !11011)
!11014 = !DILocation(line: 149, column: 9, scope: !10976)
!11015 = !DILocation(line: 150, column: 9, scope: !11011)
!11016 = !DILocation(line: 152, column: 9, scope: !11011)
!11017 = !DILocation(line: 154, column: 12, scope: !10976)
!11018 = !DILocation(line: 154, column: 5, scope: !10976)
!11019 = distinct !DISubprogram(name: "get_backlog_size", scope: !2569, file: !2569, line: 38, type: !10789, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3320, retainedNodes: !286)
!11020 = !DILocalVariable(name: "backlog", scope: !11019, file: !2569, line: 41, type: !34)
!11021 = !DILocation(line: 41, column: 9, scope: !11019)
!11022 = !DILocalVariable(name: "somaxconn", scope: !11019, file: !2569, line: 45, type: !11023)
!11023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11024, size: 64)
!11024 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !7202, line: 7, baseType: !11025)
!11025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !7204, line: 49, size: 1728, elements: !11026)
!11026 = !{!11027, !11028, !11029, !11030, !11031, !11032, !11033, !11034, !11035, !11036, !11037, !11038, !11039, !11040, !11042, !11043, !11044, !11045, !11046, !11047, !11048, !11049, !11050, !11051, !11052, !11053, !11054, !11055, !11056}
!11027 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !11025, file: !7204, line: 51, baseType: !34, size: 32)
!11028 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !11025, file: !7204, line: 54, baseType: !52, size: 64, offset: 64)
!11029 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !11025, file: !7204, line: 55, baseType: !52, size: 64, offset: 128)
!11030 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !11025, file: !7204, line: 56, baseType: !52, size: 64, offset: 192)
!11031 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !11025, file: !7204, line: 57, baseType: !52, size: 64, offset: 256)
!11032 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !11025, file: !7204, line: 58, baseType: !52, size: 64, offset: 320)
!11033 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !11025, file: !7204, line: 59, baseType: !52, size: 64, offset: 384)
!11034 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !11025, file: !7204, line: 60, baseType: !52, size: 64, offset: 448)
!11035 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !11025, file: !7204, line: 61, baseType: !52, size: 64, offset: 512)
!11036 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !11025, file: !7204, line: 64, baseType: !52, size: 64, offset: 576)
!11037 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !11025, file: !7204, line: 65, baseType: !52, size: 64, offset: 640)
!11038 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !11025, file: !7204, line: 66, baseType: !52, size: 64, offset: 704)
!11039 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !11025, file: !7204, line: 68, baseType: !7219, size: 64, offset: 768)
!11040 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !11025, file: !7204, line: 70, baseType: !11041, size: 64, offset: 832)
!11041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11025, size: 64)
!11042 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !11025, file: !7204, line: 72, baseType: !34, size: 32, offset: 896)
!11043 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !11025, file: !7204, line: 73, baseType: !34, size: 32, offset: 928)
!11044 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !11025, file: !7204, line: 74, baseType: !188, size: 64, offset: 960)
!11045 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !11025, file: !7204, line: 77, baseType: !125, size: 16, offset: 1024)
!11046 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !11025, file: !7204, line: 78, baseType: !4303, size: 8, offset: 1040)
!11047 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !11025, file: !7204, line: 79, baseType: !1832, size: 8, offset: 1048)
!11048 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !11025, file: !7204, line: 81, baseType: !7230, size: 64, offset: 1088)
!11049 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !11025, file: !7204, line: 89, baseType: !7233, size: 64, offset: 1152)
!11050 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !11025, file: !7204, line: 91, baseType: !7235, size: 64, offset: 1216)
!11051 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !11025, file: !7204, line: 92, baseType: !7238, size: 64, offset: 1280)
!11052 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !11025, file: !7204, line: 93, baseType: !11041, size: 64, offset: 1344)
!11053 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !11025, file: !7204, line: 94, baseType: !111, size: 64, offset: 1408)
!11054 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !11025, file: !7204, line: 95, baseType: !55, size: 64, offset: 1472)
!11055 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !11025, file: !7204, line: 96, baseType: !34, size: 32, offset: 1536)
!11056 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !11025, file: !7204, line: 98, baseType: !263, size: 160, offset: 1568)
!11057 = !DILocation(line: 45, column: 11, scope: !11019)
!11058 = !DILocation(line: 47, column: 17, scope: !11019)
!11059 = !DILocation(line: 47, column: 15, scope: !11019)
!11060 = !DILocation(line: 48, column: 9, scope: !11061)
!11061 = distinct !DILexicalBlock(scope: !11019, file: !2569, line: 48, column: 9)
!11062 = !DILocation(line: 48, column: 9, scope: !11019)
!11063 = !DILocalVariable(name: "tmp", scope: !11064, file: !2569, line: 49, type: !34)
!11064 = distinct !DILexicalBlock(scope: !11061, file: !2569, line: 48, column: 20)
!11065 = !DILocation(line: 49, column: 13, scope: !11064)
!11066 = !DILocation(line: 50, column: 20, scope: !11067)
!11067 = distinct !DILexicalBlock(scope: !11064, file: !2569, line: 50, column: 13)
!11068 = !DILocation(line: 50, column: 13, scope: !11067)
!11069 = !DILocation(line: 50, column: 43, scope: !11067)
!11070 = !DILocation(line: 50, column: 13, scope: !11064)
!11071 = !DILocation(line: 51, column: 23, scope: !11067)
!11072 = !DILocation(line: 51, column: 21, scope: !11067)
!11073 = !DILocation(line: 51, column: 13, scope: !11067)
!11074 = !DILocation(line: 52, column: 16, scope: !11064)
!11075 = !DILocation(line: 52, column: 9, scope: !11064)
!11076 = !DILocation(line: 53, column: 5, scope: !11064)
!11077 = !DILocation(line: 55, column: 12, scope: !11019)
!11078 = !DILocation(line: 55, column: 5, scope: !11019)
!11079 = distinct !DISubprogram(name: "parse_listener_ipv6", scope: !2569, file: !2569, line: 108, type: !10886, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3320, retainedNodes: !286)
!11080 = !DILocalVariable(name: "listener", arg: 1, scope: !11079, file: !2569, line: 108, type: !52)
!11081 = !DILocation(line: 108, column: 27, scope: !11079)
!11082 = !DILocalVariable(name: "node", arg: 2, scope: !11079, file: !2569, line: 108, type: !353)
!11083 = !DILocation(line: 108, column: 44, scope: !11079)
!11084 = !DILocalVariable(name: "port", arg: 3, scope: !11079, file: !2569, line: 108, type: !353)
!11085 = !DILocation(line: 108, column: 57, scope: !11079)
!11086 = !DILocalVariable(name: "last_colon", scope: !11079, file: !2569, line: 110, type: !52)
!11087 = !DILocation(line: 110, column: 11, scope: !11079)
!11088 = !DILocation(line: 110, column: 32, scope: !11079)
!11089 = !DILocation(line: 110, column: 24, scope: !11079)
!11090 = !DILocation(line: 111, column: 10, scope: !11091)
!11091 = distinct !DILexicalBlock(scope: !11079, file: !2569, line: 111, column: 9)
!11092 = !DILocation(line: 111, column: 9, scope: !11079)
!11093 = !DILocation(line: 112, column: 9, scope: !11091)
!11094 = !DILocation(line: 114, column: 11, scope: !11095)
!11095 = distinct !DILexicalBlock(scope: !11079, file: !2569, line: 114, column: 9)
!11096 = !DILocation(line: 114, column: 22, scope: !11095)
!11097 = !DILocation(line: 114, column: 9, scope: !11095)
!11098 = !DILocation(line: 114, column: 27, scope: !11095)
!11099 = !DILocation(line: 114, column: 9, scope: !11079)
!11100 = !DILocation(line: 116, column: 11, scope: !11101)
!11101 = distinct !DILexicalBlock(scope: !11095, file: !2569, line: 114, column: 35)
!11102 = !DILocation(line: 116, column: 22, scope: !11101)
!11103 = !DILocation(line: 116, column: 27, scope: !11101)
!11104 = !DILocation(line: 117, column: 17, scope: !11101)
!11105 = !DILocation(line: 117, column: 26, scope: !11101)
!11106 = !DILocation(line: 117, column: 10, scope: !11101)
!11107 = !DILocation(line: 117, column: 15, scope: !11101)
!11108 = !DILocation(line: 118, column: 17, scope: !11101)
!11109 = !DILocation(line: 118, column: 28, scope: !11101)
!11110 = !DILocation(line: 118, column: 10, scope: !11101)
!11111 = !DILocation(line: 118, column: 15, scope: !11101)
!11112 = !DILocation(line: 119, column: 5, scope: !11101)
!11113 = !DILocation(line: 121, column: 9, scope: !11114)
!11114 = distinct !DILexicalBlock(scope: !11095, file: !2569, line: 119, column: 12)
!11115 = !DILocation(line: 121, column: 25, scope: !11114)
!11116 = !DILocation(line: 121, column: 18, scope: !11114)
!11117 = !DILocation(line: 121, column: 35, scope: !11114)
!11118 = !DILocation(line: 121, column: 40, scope: !11114)
!11119 = !DILocation(line: 122, column: 17, scope: !11114)
!11120 = !DILocation(line: 122, column: 26, scope: !11114)
!11121 = !DILocation(line: 122, column: 10, scope: !11114)
!11122 = !DILocation(line: 122, column: 15, scope: !11114)
!11123 = !DILocation(line: 123, column: 10, scope: !11114)
!11124 = !DILocation(line: 123, column: 15, scope: !11114)
!11125 = !DILocation(line: 126, column: 5, scope: !11079)
!11126 = !DILocation(line: 127, column: 1, scope: !11079)
!11127 = distinct !DISubprogram(name: "parse_listener_ipv4", scope: !2569, file: !2569, line: 77, type: !10886, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3320, retainedNodes: !286)
!11128 = !DILocalVariable(name: "listener", arg: 1, scope: !11127, file: !2569, line: 77, type: !52)
!11129 = !DILocation(line: 77, column: 27, scope: !11127)
!11130 = !DILocalVariable(name: "node", arg: 2, scope: !11127, file: !2569, line: 77, type: !353)
!11131 = !DILocation(line: 77, column: 44, scope: !11127)
!11132 = !DILocalVariable(name: "port", arg: 3, scope: !11127, file: !2569, line: 77, type: !353)
!11133 = !DILocation(line: 77, column: 57, scope: !11127)
!11134 = !DILocalVariable(name: "colon", scope: !11127, file: !2569, line: 79, type: !52)
!11135 = !DILocation(line: 79, column: 11, scope: !11127)
!11136 = !DILocation(line: 79, column: 27, scope: !11127)
!11137 = !DILocation(line: 79, column: 19, scope: !11127)
!11138 = !DILocation(line: 80, column: 10, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11127, file: !2569, line: 80, column: 9)
!11140 = !DILocation(line: 80, column: 9, scope: !11127)
!11141 = !DILocation(line: 81, column: 10, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11139, file: !2569, line: 80, column: 17)
!11143 = !DILocation(line: 81, column: 15, scope: !11142)
!11144 = !DILocation(line: 82, column: 21, scope: !11145)
!11145 = distinct !DILexicalBlock(scope: !11142, file: !2569, line: 82, column: 13)
!11146 = !DILocation(line: 82, column: 14, scope: !11145)
!11147 = !DILocation(line: 82, column: 13, scope: !11142)
!11148 = !DILocation(line: 84, column: 14, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !11145, file: !2569, line: 82, column: 37)
!11150 = !DILocation(line: 84, column: 19, scope: !11149)
!11151 = !DILocation(line: 85, column: 9, scope: !11149)
!11152 = !DILocation(line: 87, column: 21, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11145, file: !2569, line: 85, column: 16)
!11154 = !DILocation(line: 87, column: 14, scope: !11153)
!11155 = !DILocation(line: 87, column: 19, scope: !11153)
!11156 = !DILocation(line: 89, column: 5, scope: !11142)
!11157 = !DILocation(line: 94, column: 10, scope: !11158)
!11158 = distinct !DILexicalBlock(scope: !11139, file: !2569, line: 89, column: 12)
!11159 = !DILocation(line: 94, column: 16, scope: !11158)
!11160 = !DILocation(line: 95, column: 17, scope: !11158)
!11161 = !DILocation(line: 95, column: 10, scope: !11158)
!11162 = !DILocation(line: 95, column: 15, scope: !11158)
!11163 = !DILocation(line: 96, column: 17, scope: !11158)
!11164 = !DILocation(line: 96, column: 23, scope: !11158)
!11165 = !DILocation(line: 96, column: 10, scope: !11158)
!11166 = !DILocation(line: 96, column: 15, scope: !11158)
!11167 = !DILocation(line: 98, column: 22, scope: !11168)
!11168 = distinct !DILexicalBlock(scope: !11158, file: !2569, line: 98, column: 13)
!11169 = !DILocation(line: 98, column: 21, scope: !11168)
!11170 = !DILocation(line: 98, column: 14, scope: !11168)
!11171 = !DILocation(line: 98, column: 13, scope: !11158)
!11172 = !DILocation(line: 100, column: 14, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11168, file: !2569, line: 98, column: 34)
!11174 = !DILocation(line: 100, column: 19, scope: !11173)
!11175 = !DILocation(line: 101, column: 9, scope: !11173)
!11176 = !DILocation(line: 104, column: 5, scope: !11127)
!11177 = distinct !DISubprogram(name: "sd_is_socket_inet", scope: !3255, file: !3255, line: 263, type: !11178, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3335, retainedNodes: !286)
!11178 = !DISubroutineType(types: !11179)
!11179 = !{!34, !34, !34, !34, !34, !1794}
!11180 = !DILocalVariable(name: "fd", arg: 1, scope: !11177, file: !3255, line: 263, type: !34)
!11181 = !DILocation(line: 263, column: 27, scope: !11177)
!11182 = !DILocalVariable(name: "family", arg: 2, scope: !11177, file: !3255, line: 263, type: !34)
!11183 = !DILocation(line: 263, column: 35, scope: !11177)
!11184 = !DILocalVariable(name: "type", arg: 3, scope: !11177, file: !3255, line: 263, type: !34)
!11185 = !DILocation(line: 263, column: 47, scope: !11177)
!11186 = !DILocalVariable(name: "listening", arg: 4, scope: !11177, file: !3255, line: 263, type: !34)
!11187 = !DILocation(line: 263, column: 57, scope: !11177)
!11188 = !DILocalVariable(name: "port", arg: 5, scope: !11177, file: !3255, line: 263, type: !1794)
!11189 = !DILocation(line: 263, column: 77, scope: !11177)
!11190 = !DILocalVariable(name: "sockaddr", scope: !11177, file: !3255, line: 264, type: !11191)
!11191 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sockaddr_union", file: !3255, line: 229, size: 1024, elements: !11192)
!11192 = !{!11193, !11198, !11208, !11224, !11233}
!11193 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !11191, file: !3255, line: 230, baseType: !11194, size: 128)
!11194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !1781, line: 180, size: 128, elements: !11195)
!11195 = !{!11196, !11197}
!11196 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !11194, file: !1781, line: 182, baseType: !1784, size: 16)
!11197 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !11194, file: !1781, line: 183, baseType: !297, size: 112, offset: 16)
!11198 = !DIDerivedType(tag: DW_TAG_member, name: "in4", scope: !11191, file: !3255, line: 231, baseType: !11199, size: 128)
!11199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in", file: !1789, line: 245, size: 128, elements: !11200)
!11200 = !{!11201, !11202, !11203, !11207}
!11201 = !DIDerivedType(tag: DW_TAG_member, name: "sin_family", scope: !11199, file: !1789, line: 247, baseType: !1784, size: 16)
!11202 = !DIDerivedType(tag: DW_TAG_member, name: "sin_port", scope: !11199, file: !1789, line: 248, baseType: !1793, size: 16, offset: 16)
!11203 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !11199, file: !1789, line: 249, baseType: !11204, size: 32, offset: 32)
!11204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !1789, line: 31, size: 32, elements: !11205)
!11205 = !{!11206}
!11206 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !11204, file: !1789, line: 33, baseType: !1800, size: 32)
!11207 = !DIDerivedType(tag: DW_TAG_member, name: "sin_zero", scope: !11199, file: !1789, line: 252, baseType: !1802, size: 64, offset: 64)
!11208 = !DIDerivedType(tag: DW_TAG_member, name: "in6", scope: !11191, file: !3255, line: 232, baseType: !11209, size: 224)
!11209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in6", file: !1789, line: 260, size: 224, elements: !11210)
!11210 = !{!11211, !11212, !11213, !11214, !11223}
!11211 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_family", scope: !11209, file: !1789, line: 262, baseType: !1784, size: 16)
!11212 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_port", scope: !11209, file: !1789, line: 263, baseType: !1793, size: 16, offset: 16)
!11213 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_flowinfo", scope: !11209, file: !1789, line: 264, baseType: !484, size: 32, offset: 32)
!11214 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_addr", scope: !11209, file: !1789, line: 265, baseType: !11215, size: 128, offset: 64)
!11215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !1789, line: 219, size: 128, elements: !11216)
!11216 = !{!11217}
!11217 = !DIDerivedType(tag: DW_TAG_member, name: "__in6_u", scope: !11215, file: !1789, line: 226, baseType: !11218, size: 128)
!11218 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11215, file: !1789, line: 221, size: 128, elements: !11219)
!11219 = !{!11220, !11221, !11222}
!11220 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr8", scope: !11218, file: !1789, line: 223, baseType: !1816, size: 128)
!11221 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr16", scope: !11218, file: !1789, line: 224, baseType: !1820, size: 128)
!11222 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr32", scope: !11218, file: !1789, line: 225, baseType: !1822, size: 128)
!11223 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_scope_id", scope: !11209, file: !1789, line: 266, baseType: !484, size: 32, offset: 192)
!11224 = !DIDerivedType(tag: DW_TAG_member, name: "un", scope: !11191, file: !3255, line: 233, baseType: !11225, size: 880)
!11225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_un", file: !11226, line: 29, size: 880, elements: !11227)
!11226 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/un.h", directory: "", checksumkind: CSK_MD5, checksum: "543d98cd612c9215c9333043f81a0cd3")
!11227 = !{!11228, !11229}
!11228 = !DIDerivedType(tag: DW_TAG_member, name: "sun_family", scope: !11225, file: !11226, line: 31, baseType: !1784, size: 16)
!11229 = !DIDerivedType(tag: DW_TAG_member, name: "sun_path", scope: !11225, file: !11226, line: 32, baseType: !11230, size: 864, offset: 16)
!11230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 864, elements: !11231)
!11231 = !{!11232}
!11232 = !DISubrange(count: 108)
!11233 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !11191, file: !3255, line: 234, baseType: !11234, size: 1024)
!11234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_storage", file: !1781, line: 193, size: 1024, elements: !11235)
!11235 = !{!11236, !11237, !11241}
!11236 = !DIDerivedType(tag: DW_TAG_member, name: "ss_family", scope: !11234, file: !1781, line: 195, baseType: !1784, size: 16)
!11237 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_padding", scope: !11234, file: !1781, line: 196, baseType: !11238, size: 944, offset: 16)
!11238 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 944, elements: !11239)
!11239 = !{!11240}
!11240 = !DISubrange(count: 118)
!11241 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_align", scope: !11234, file: !1781, line: 197, baseType: !57, size: 64, offset: 960)
!11242 = !DILocation(line: 264, column: 30, scope: !11177)
!11243 = !DILocalVariable(name: "l", scope: !11177, file: !3255, line: 265, type: !3341)
!11244 = !DILocation(line: 265, column: 19, scope: !11177)
!11245 = !DILocalVariable(name: "r", scope: !11177, file: !3255, line: 266, type: !34)
!11246 = !DILocation(line: 266, column: 13, scope: !11177)
!11247 = !DILocation(line: 268, column: 13, scope: !11248)
!11248 = distinct !DILexicalBlock(scope: !11177, file: !3255, line: 268, column: 13)
!11249 = !DILocation(line: 268, column: 20, scope: !11248)
!11250 = !DILocation(line: 268, column: 25, scope: !11248)
!11251 = !DILocation(line: 268, column: 28, scope: !11248)
!11252 = !DILocation(line: 268, column: 35, scope: !11248)
!11253 = !DILocation(line: 268, column: 46, scope: !11248)
!11254 = !DILocation(line: 268, column: 49, scope: !11248)
!11255 = !DILocation(line: 268, column: 56, scope: !11248)
!11256 = !DILocation(line: 268, column: 13, scope: !11177)
!11257 = !DILocation(line: 269, column: 17, scope: !11248)
!11258 = !DILocation(line: 271, column: 35, scope: !11177)
!11259 = !DILocation(line: 271, column: 39, scope: !11177)
!11260 = !DILocation(line: 271, column: 45, scope: !11177)
!11261 = !DILocation(line: 271, column: 13, scope: !11177)
!11262 = !DILocation(line: 271, column: 11, scope: !11177)
!11263 = !DILocation(line: 272, column: 13, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11177, file: !3255, line: 272, column: 13)
!11265 = !DILocation(line: 272, column: 15, scope: !11264)
!11266 = !DILocation(line: 272, column: 13, scope: !11177)
!11267 = !DILocation(line: 273, column: 24, scope: !11264)
!11268 = !DILocation(line: 273, column: 17, scope: !11264)
!11269 = !DILocation(line: 275, column: 25, scope: !11270)
!11270 = distinct !DILexicalBlock(scope: !11177, file: !3255, line: 275, column: 13)
!11271 = !DILocation(line: 275, column: 29, scope: !11270)
!11272 = !DILocation(line: 275, column: 13, scope: !11270)
!11273 = !DILocation(line: 275, column: 47, scope: !11270)
!11274 = !DILocation(line: 275, column: 13, scope: !11177)
!11275 = !DILocation(line: 276, column: 25, scope: !11270)
!11276 = !DILocation(line: 276, column: 24, scope: !11270)
!11277 = !DILocation(line: 276, column: 17, scope: !11270)
!11278 = !DILocation(line: 278, column: 13, scope: !11279)
!11279 = distinct !DILexicalBlock(scope: !11177, file: !3255, line: 278, column: 13)
!11280 = !DILocation(line: 278, column: 15, scope: !11279)
!11281 = !DILocation(line: 278, column: 13, scope: !11177)
!11282 = !DILocation(line: 279, column: 17, scope: !11279)
!11283 = !DILocation(line: 281, column: 25, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !11177, file: !3255, line: 281, column: 13)
!11285 = !DILocation(line: 281, column: 13, scope: !11284)
!11286 = !DILocation(line: 281, column: 35, scope: !11284)
!11287 = !DILocation(line: 281, column: 46, scope: !11284)
!11288 = !DILocation(line: 282, column: 25, scope: !11284)
!11289 = !DILocation(line: 282, column: 13, scope: !11284)
!11290 = !DILocation(line: 282, column: 35, scope: !11284)
!11291 = !DILocation(line: 281, column: 13, scope: !11177)
!11292 = !DILocation(line: 283, column: 17, scope: !11284)
!11293 = !DILocation(line: 285, column: 13, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11177, file: !3255, line: 285, column: 13)
!11295 = !DILocation(line: 285, column: 20, scope: !11294)
!11296 = !DILocation(line: 285, column: 13, scope: !11177)
!11297 = !DILocation(line: 286, column: 33, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !11294, file: !3255, line: 286, column: 21)
!11299 = !DILocation(line: 286, column: 21, scope: !11298)
!11300 = !DILocation(line: 286, column: 46, scope: !11298)
!11301 = !DILocation(line: 286, column: 43, scope: !11298)
!11302 = !DILocation(line: 286, column: 21, scope: !11294)
!11303 = !DILocation(line: 287, column: 25, scope: !11298)
!11304 = !DILocation(line: 289, column: 13, scope: !11305)
!11305 = distinct !DILexicalBlock(scope: !11177, file: !3255, line: 289, column: 13)
!11306 = !DILocation(line: 289, column: 18, scope: !11305)
!11307 = !DILocation(line: 289, column: 13, scope: !11177)
!11308 = !DILocation(line: 290, column: 33, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11310, file: !3255, line: 290, column: 21)
!11310 = distinct !DILexicalBlock(scope: !11305, file: !3255, line: 289, column: 23)
!11311 = !DILocation(line: 290, column: 21, scope: !11309)
!11312 = !DILocation(line: 290, column: 43, scope: !11309)
!11313 = !DILocation(line: 290, column: 21, scope: !11310)
!11314 = !DILocation(line: 291, column: 29, scope: !11315)
!11315 = distinct !DILexicalBlock(scope: !11316, file: !3255, line: 291, column: 29)
!11316 = distinct !DILexicalBlock(scope: !11309, file: !3255, line: 290, column: 55)
!11317 = !DILocation(line: 291, column: 31, scope: !11315)
!11318 = !DILocation(line: 291, column: 29, scope: !11316)
!11319 = !DILocation(line: 292, column: 33, scope: !11315)
!11320 = !DILocation(line: 294, column: 38, scope: !11316)
!11321 = !DILocation(line: 294, column: 32, scope: !11316)
!11322 = !DILocation(line: 294, column: 60, scope: !11316)
!11323 = !DILocation(line: 294, column: 47, scope: !11316)
!11324 = !DILocation(line: 294, column: 44, scope: !11316)
!11325 = !DILocation(line: 294, column: 25, scope: !11316)
!11326 = !DILocation(line: 296, column: 29, scope: !11327)
!11327 = distinct !DILexicalBlock(scope: !11328, file: !3255, line: 296, column: 29)
!11328 = distinct !DILexicalBlock(scope: !11309, file: !3255, line: 295, column: 24)
!11329 = !DILocation(line: 296, column: 31, scope: !11327)
!11330 = !DILocation(line: 296, column: 29, scope: !11328)
!11331 = !DILocation(line: 297, column: 33, scope: !11327)
!11332 = !DILocation(line: 299, column: 38, scope: !11328)
!11333 = !DILocation(line: 299, column: 32, scope: !11328)
!11334 = !DILocation(line: 299, column: 60, scope: !11328)
!11335 = !DILocation(line: 299, column: 47, scope: !11328)
!11336 = !DILocation(line: 299, column: 44, scope: !11328)
!11337 = !DILocation(line: 299, column: 25, scope: !11328)
!11338 = !DILocation(line: 303, column: 9, scope: !11177)
!11339 = !DILocation(line: 304, column: 1, scope: !11177)
!11340 = distinct !DISubprogram(name: "sd_is_socket_internal", scope: !3255, file: !3255, line: 186, type: !11341, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3335, retainedNodes: !286)
!11341 = !DISubroutineType(types: !11342)
!11342 = !{!34, !34, !34, !34}
!11343 = !DILocalVariable(name: "fd", arg: 1, scope: !11340, file: !3255, line: 186, type: !34)
!11344 = !DILocation(line: 186, column: 38, scope: !11340)
!11345 = !DILocalVariable(name: "type", arg: 2, scope: !11340, file: !3255, line: 186, type: !34)
!11346 = !DILocation(line: 186, column: 46, scope: !11340)
!11347 = !DILocalVariable(name: "listening", arg: 3, scope: !11340, file: !3255, line: 186, type: !34)
!11348 = !DILocation(line: 186, column: 56, scope: !11340)
!11349 = !DILocalVariable(name: "st_fd", scope: !11340, file: !3255, line: 187, type: !11350)
!11350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2394, line: 26, size: 1152, elements: !11351)
!11351 = !{!11352, !11353, !11354, !11355, !11356, !11357, !11358, !11359, !11360, !11361, !11362, !11363, !11368, !11369, !11370}
!11352 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !11350, file: !2394, line: 31, baseType: !2397, size: 64)
!11353 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !11350, file: !2394, line: 36, baseType: !2399, size: 64, offset: 64)
!11354 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !11350, file: !2394, line: 44, baseType: !2401, size: 64, offset: 128)
!11355 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !11350, file: !2394, line: 45, baseType: !2403, size: 32, offset: 192)
!11356 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !11350, file: !2394, line: 47, baseType: !2405, size: 32, offset: 224)
!11357 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !11350, file: !2394, line: 48, baseType: !2407, size: 32, offset: 256)
!11358 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !11350, file: !2394, line: 50, baseType: !34, size: 32, offset: 288)
!11359 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !11350, file: !2394, line: 52, baseType: !2397, size: 64, offset: 320)
!11360 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !11350, file: !2394, line: 57, baseType: !188, size: 64, offset: 384)
!11361 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !11350, file: !2394, line: 61, baseType: !2412, size: 64, offset: 448)
!11362 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !11350, file: !2394, line: 63, baseType: !2414, size: 64, offset: 512)
!11363 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !11350, file: !2394, line: 74, baseType: !11364, size: 128, offset: 576)
!11364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2417, line: 11, size: 128, elements: !11365)
!11365 = !{!11366, !11367}
!11366 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !11364, file: !2417, line: 16, baseType: !153, size: 64)
!11367 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !11364, file: !2417, line: 21, baseType: !2421, size: 64, offset: 64)
!11368 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !11350, file: !2394, line: 75, baseType: !11364, size: 128, offset: 704)
!11369 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !11350, file: !2394, line: 76, baseType: !11364, size: 128, offset: 832)
!11370 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !11350, file: !2394, line: 89, baseType: !2425, size: 192, offset: 960)
!11371 = !DILocation(line: 187, column: 21, scope: !11340)
!11372 = !DILocation(line: 189, column: 13, scope: !11373)
!11373 = distinct !DILexicalBlock(scope: !11340, file: !3255, line: 189, column: 13)
!11374 = !DILocation(line: 189, column: 16, scope: !11373)
!11375 = !DILocation(line: 189, column: 20, scope: !11373)
!11376 = !DILocation(line: 189, column: 23, scope: !11373)
!11377 = !DILocation(line: 189, column: 28, scope: !11373)
!11378 = !DILocation(line: 189, column: 13, scope: !11340)
!11379 = !DILocation(line: 190, column: 17, scope: !11373)
!11380 = !DILocation(line: 192, column: 19, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11340, file: !3255, line: 192, column: 13)
!11382 = !DILocation(line: 192, column: 13, scope: !11381)
!11383 = !DILocation(line: 192, column: 31, scope: !11381)
!11384 = !DILocation(line: 192, column: 13, scope: !11340)
!11385 = !DILocation(line: 193, column: 25, scope: !11381)
!11386 = !DILocation(line: 193, column: 24, scope: !11381)
!11387 = !DILocation(line: 193, column: 17, scope: !11381)
!11388 = !DILocation(line: 195, column: 14, scope: !11389)
!11389 = distinct !DILexicalBlock(scope: !11340, file: !3255, line: 195, column: 13)
!11390 = !DILocation(line: 195, column: 13, scope: !11340)
!11391 = !DILocation(line: 196, column: 17, scope: !11389)
!11392 = !DILocation(line: 198, column: 13, scope: !11393)
!11393 = distinct !DILexicalBlock(scope: !11340, file: !3255, line: 198, column: 13)
!11394 = !DILocation(line: 198, column: 18, scope: !11393)
!11395 = !DILocation(line: 198, column: 13, scope: !11340)
!11396 = !DILocalVariable(name: "other_type", scope: !11397, file: !3255, line: 199, type: !34)
!11397 = distinct !DILexicalBlock(scope: !11393, file: !3255, line: 198, column: 24)
!11398 = !DILocation(line: 199, column: 21, scope: !11397)
!11399 = !DILocalVariable(name: "l", scope: !11397, file: !3255, line: 200, type: !3341)
!11400 = !DILocation(line: 200, column: 27, scope: !11397)
!11401 = !DILocation(line: 202, column: 32, scope: !11402)
!11402 = distinct !DILexicalBlock(scope: !11397, file: !3255, line: 202, column: 21)
!11403 = !DILocation(line: 202, column: 21, scope: !11402)
!11404 = !DILocation(line: 202, column: 74, scope: !11402)
!11405 = !DILocation(line: 202, column: 21, scope: !11397)
!11406 = !DILocation(line: 203, column: 33, scope: !11402)
!11407 = !DILocation(line: 203, column: 32, scope: !11402)
!11408 = !DILocation(line: 203, column: 25, scope: !11402)
!11409 = !DILocation(line: 205, column: 21, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11397, file: !3255, line: 205, column: 21)
!11411 = !DILocation(line: 205, column: 23, scope: !11410)
!11412 = !DILocation(line: 205, column: 21, scope: !11397)
!11413 = !DILocation(line: 206, column: 25, scope: !11410)
!11414 = !DILocation(line: 208, column: 21, scope: !11415)
!11415 = distinct !DILexicalBlock(scope: !11397, file: !3255, line: 208, column: 21)
!11416 = !DILocation(line: 208, column: 35, scope: !11415)
!11417 = !DILocation(line: 208, column: 32, scope: !11415)
!11418 = !DILocation(line: 208, column: 21, scope: !11397)
!11419 = !DILocation(line: 209, column: 25, scope: !11415)
!11420 = !DILocation(line: 210, column: 9, scope: !11397)
!11421 = !DILocation(line: 212, column: 13, scope: !11422)
!11422 = distinct !DILexicalBlock(scope: !11340, file: !3255, line: 212, column: 13)
!11423 = !DILocation(line: 212, column: 23, scope: !11422)
!11424 = !DILocation(line: 212, column: 13, scope: !11340)
!11425 = !DILocalVariable(name: "accepting", scope: !11426, file: !3255, line: 213, type: !34)
!11426 = distinct !DILexicalBlock(scope: !11422, file: !3255, line: 212, column: 29)
!11427 = !DILocation(line: 213, column: 21, scope: !11426)
!11428 = !DILocalVariable(name: "l", scope: !11426, file: !3255, line: 214, type: !3341)
!11429 = !DILocation(line: 214, column: 27, scope: !11426)
!11430 = !DILocation(line: 216, column: 32, scope: !11431)
!11431 = distinct !DILexicalBlock(scope: !11426, file: !3255, line: 216, column: 21)
!11432 = !DILocation(line: 216, column: 21, scope: !11431)
!11433 = !DILocation(line: 216, column: 79, scope: !11431)
!11434 = !DILocation(line: 216, column: 21, scope: !11426)
!11435 = !DILocation(line: 217, column: 33, scope: !11431)
!11436 = !DILocation(line: 217, column: 32, scope: !11431)
!11437 = !DILocation(line: 217, column: 25, scope: !11431)
!11438 = !DILocation(line: 219, column: 21, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11426, file: !3255, line: 219, column: 21)
!11440 = !DILocation(line: 219, column: 23, scope: !11439)
!11441 = !DILocation(line: 219, column: 21, scope: !11426)
!11442 = !DILocation(line: 220, column: 25, scope: !11439)
!11443 = !DILocation(line: 222, column: 22, scope: !11444)
!11444 = distinct !DILexicalBlock(scope: !11426, file: !3255, line: 222, column: 21)
!11445 = !DILocation(line: 222, column: 21, scope: !11444)
!11446 = !DILocation(line: 222, column: 36, scope: !11444)
!11447 = !DILocation(line: 222, column: 35, scope: !11444)
!11448 = !DILocation(line: 222, column: 32, scope: !11444)
!11449 = !DILocation(line: 222, column: 21, scope: !11426)
!11450 = !DILocation(line: 223, column: 25, scope: !11444)
!11451 = !DILocation(line: 224, column: 9, scope: !11426)
!11452 = !DILocation(line: 226, column: 9, scope: !11340)
!11453 = !DILocation(line: 227, column: 1, scope: !11340)
!11454 = distinct !DISubprogram(name: "create_thread", scope: !3115, file: !3115, line: 368, type: !11455, scopeLine: 369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3168, retainedNodes: !286)
!11455 = !DISubroutineType(types: !11456)
!11456 = !{null, !10390, !10424}
!11457 = !DILocalVariable(name: "l", arg: 1, scope: !11454, file: !3115, line: 368, type: !10390)
!11458 = !DILocation(line: 368, column: 23, scope: !11454)
!11459 = !DILocalVariable(name: "thread", arg: 2, scope: !11454, file: !3115, line: 368, type: !10424)
!11460 = !DILocation(line: 368, column: 41, scope: !11454)
!11461 = !DILocalVariable(name: "attr", scope: !11454, file: !3115, line: 370, type: !11462)
!11462 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_attr_t", file: !163, line: 62, baseType: !11463)
!11463 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "pthread_attr_t", file: !163, line: 56, size: 448, elements: !11464)
!11464 = !{!11465, !11466}
!11465 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !11463, file: !163, line: 58, baseType: !2822, size: 448)
!11466 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !11463, file: !163, line: 59, baseType: !155, size: 64)
!11467 = !DILocation(line: 370, column: 20, scope: !11454)
!11468 = !DILocation(line: 372, column: 12, scope: !11454)
!11469 = !DILocation(line: 372, column: 5, scope: !11454)
!11470 = !DILocation(line: 373, column: 20, scope: !11454)
!11471 = !DILocation(line: 373, column: 5, scope: !11454)
!11472 = !DILocation(line: 373, column: 13, scope: !11454)
!11473 = !DILocation(line: 373, column: 18, scope: !11454)
!11474 = !DILocation(line: 375, column: 29, scope: !11475)
!11475 = distinct !DILexicalBlock(scope: !11454, file: !3115, line: 375, column: 9)
!11476 = !DILocation(line: 375, column: 10, scope: !11475)
!11477 = !DILocation(line: 375, column: 18, scope: !11475)
!11478 = !DILocation(line: 375, column: 27, scope: !11475)
!11479 = !DILocation(line: 375, column: 59, scope: !11475)
!11480 = !DILocation(line: 375, column: 9, scope: !11454)
!11481 = !DILocation(line: 376, column: 9, scope: !11475)
!11482 = !DILocation(line: 378, column: 9, scope: !11483)
!11483 = distinct !DILexicalBlock(scope: !11454, file: !3115, line: 378, column: 9)
!11484 = !DILocation(line: 378, column: 9, scope: !11454)
!11485 = !DILocation(line: 379, column: 9, scope: !11483)
!11486 = !DILocation(line: 381, column: 9, scope: !11487)
!11487 = distinct !DILexicalBlock(scope: !11454, file: !3115, line: 381, column: 9)
!11488 = !DILocation(line: 381, column: 9, scope: !11454)
!11489 = !DILocation(line: 382, column: 9, scope: !11487)
!11490 = !DILocation(line: 384, column: 9, scope: !11491)
!11491 = distinct !DILexicalBlock(scope: !11454, file: !3115, line: 384, column: 9)
!11492 = !DILocation(line: 384, column: 9, scope: !11454)
!11493 = !DILocation(line: 385, column: 9, scope: !11491)
!11494 = !DILocation(line: 387, column: 15, scope: !11495)
!11495 = distinct !DILexicalBlock(scope: !11454, file: !3115, line: 387, column: 9)
!11496 = !DILocation(line: 387, column: 23, scope: !11495)
!11497 = !DILocation(line: 387, column: 9, scope: !11495)
!11498 = !DILocation(line: 387, column: 56, scope: !11495)
!11499 = !DILocation(line: 387, column: 9, scope: !11454)
!11500 = !DILocation(line: 388, column: 9, scope: !11495)
!11501 = !DILocalVariable(name: "event", scope: !11454, file: !3115, line: 390, type: !11502)
!11502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "epoll_event", file: !3185, line: 84, size: 96, elements: !11503)
!11503 = !{!11504, !11505}
!11504 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !11502, file: !3185, line: 86, baseType: !484, size: 32)
!11505 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11502, file: !3185, line: 87, baseType: !11506, size: 64, offset: 32)
!11506 = !DIDerivedType(tag: DW_TAG_typedef, name: "epoll_data_t", file: !3185, line: 82, baseType: !11507)
!11507 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "epoll_data", file: !3185, line: 76, size: 64, elements: !11508)
!11508 = !{!11509, !11510, !11511, !11512}
!11509 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !11507, file: !3185, line: 78, baseType: !111, size: 64)
!11510 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !11507, file: !3185, line: 79, baseType: !34, size: 32)
!11511 = !DIDerivedType(tag: DW_TAG_member, name: "u32", scope: !11507, file: !3185, line: 80, baseType: !484, size: 32)
!11512 = !DIDerivedType(tag: DW_TAG_member, name: "u64", scope: !11507, file: !3185, line: 81, baseType: !3238, size: 64)
!11513 = !DILocation(line: 390, column: 24, scope: !11454)
!11514 = !DILocation(line: 391, column: 19, scope: !11515)
!11515 = distinct !DILexicalBlock(scope: !11454, file: !3115, line: 391, column: 9)
!11516 = !DILocation(line: 391, column: 27, scope: !11515)
!11517 = !DILocation(line: 391, column: 52, scope: !11515)
!11518 = !DILocation(line: 391, column: 60, scope: !11515)
!11519 = !DILocation(line: 391, column: 9, scope: !11515)
!11520 = !DILocation(line: 391, column: 80, scope: !11515)
!11521 = !DILocation(line: 391, column: 9, scope: !11454)
!11522 = !DILocation(line: 392, column: 9, scope: !11515)
!11523 = !DILocation(line: 394, column: 25, scope: !11524)
!11524 = distinct !DILexicalBlock(scope: !11454, file: !3115, line: 394, column: 9)
!11525 = !DILocation(line: 394, column: 33, scope: !11524)
!11526 = !DILocation(line: 394, column: 62, scope: !11524)
!11527 = !DILocation(line: 394, column: 9, scope: !11524)
!11528 = !DILocation(line: 394, column: 9, scope: !11454)
!11529 = !DILocation(line: 395, column: 9, scope: !11524)
!11530 = !DILocation(line: 397, column: 9, scope: !11531)
!11531 = distinct !DILexicalBlock(scope: !11454, file: !3115, line: 397, column: 9)
!11532 = !DILocation(line: 397, column: 9, scope: !11454)
!11533 = !DILocation(line: 398, column: 9, scope: !11531)
!11534 = !DILocation(line: 399, column: 1, scope: !11454)
!11535 = distinct !DISubprogram(name: "thread_io_loop", scope: !3115, file: !3115, line: 300, type: !1409, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3168, retainedNodes: !286)
!11536 = !DILocalVariable(name: "data", arg: 1, scope: !11535, file: !3115, line: 300, type: !111)
!11537 = !DILocation(line: 300, column: 22, scope: !11535)
!11538 = !DILocalVariable(name: "t", scope: !11535, file: !3115, line: 302, type: !10424)
!11539 = !DILocation(line: 302, column: 20, scope: !11535)
!11540 = !DILocation(line: 302, column: 24, scope: !11535)
!11541 = !DILocalVariable(name: "epoll_fd", scope: !11535, file: !3115, line: 303, type: !3317)
!11542 = !DILocation(line: 303, column: 15, scope: !11535)
!11543 = !DILocation(line: 303, column: 26, scope: !11535)
!11544 = !DILocation(line: 303, column: 29, scope: !11535)
!11545 = !DILocalVariable(name: "read_pipe_fd", scope: !11535, file: !3115, line: 304, type: !3317)
!11546 = !DILocation(line: 304, column: 15, scope: !11535)
!11547 = !DILocation(line: 304, column: 30, scope: !11535)
!11548 = !DILocation(line: 304, column: 33, scope: !11535)
!11549 = !DILocalVariable(name: "max_events", scope: !11535, file: !3115, line: 305, type: !3317)
!11550 = !DILocation(line: 305, column: 15, scope: !11535)
!11551 = !DILocation(line: 305, column: 37, scope: !11535)
!11552 = !DILocation(line: 305, column: 40, scope: !11535)
!11553 = !DILocation(line: 305, column: 46, scope: !11535)
!11554 = !DILocation(line: 305, column: 53, scope: !11535)
!11555 = !DILocalVariable(name: "a", arg: 1, scope: !11556, file: !3115, line: 128, type: !3317)
!11556 = distinct !DISubprogram(name: "min", scope: !3115, file: !3115, line: 128, type: !11557, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3168, retainedNodes: !286)
!11557 = !DISubroutineType(types: !11558)
!11558 = !{!34, !3317, !3317}
!11559 = !DILocation(line: 128, column: 15, scope: !11556, inlinedAt: !11560)
!11560 = distinct !DILocation(line: 305, column: 28, scope: !11535)
!11561 = !DILocalVariable(name: "b", arg: 2, scope: !11556, file: !3115, line: 128, type: !3317)
!11562 = !DILocation(line: 128, column: 28, scope: !11556, inlinedAt: !11560)
!11563 = !DILocation(line: 130, column: 12, scope: !11556, inlinedAt: !11560)
!11564 = !DILocation(line: 130, column: 16, scope: !11556, inlinedAt: !11560)
!11565 = !DILocation(line: 130, column: 14, scope: !11556, inlinedAt: !11560)
!11566 = !DILocation(line: 130, column: 20, scope: !11556, inlinedAt: !11560)
!11567 = !DILocation(line: 130, column: 24, scope: !11556, inlinedAt: !11560)
!11568 = !DILocalVariable(name: "conns", scope: !11535, file: !3115, line: 306, type: !10416)
!11569 = !DILocation(line: 306, column: 24, scope: !11535)
!11570 = !DILocation(line: 306, column: 32, scope: !11535)
!11571 = !DILocation(line: 306, column: 35, scope: !11535)
!11572 = !DILocation(line: 306, column: 41, scope: !11535)
!11573 = !DILocalVariable(name: "events", scope: !11535, file: !3115, line: 307, type: !11574)
!11574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11502, size: 64)
!11575 = !DILocation(line: 307, column: 25, scope: !11535)
!11576 = !DILocalVariable(name: "switcher", scope: !11535, file: !3115, line: 308, type: !11577)
!11577 = !DIDerivedType(tag: DW_TAG_typedef, name: "coro_switcher_t", file: !78, line: 35, baseType: !11578)
!11578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "coro_switcher_t_", file: !78, line: 39, size: 1280, elements: !11579)
!11579 = !{!11580, !11581}
!11580 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !11578, file: !78, line: 40, baseType: !6940, size: 640)
!11581 = !DIDerivedType(tag: DW_TAG_member, name: "callee", scope: !11578, file: !78, line: 41, baseType: !6940, size: 640, offset: 640)
!11582 = !DILocation(line: 308, column: 21, scope: !11535)
!11583 = !DILocalVariable(name: "dq", scope: !11535, file: !3115, line: 309, type: !11584)
!11584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "death_queue_t", file: !3115, line: 32, size: 384, elements: !11585)
!11585 = !{!11586, !11587, !11588, !11589}
!11586 = !DIDerivedType(tag: DW_TAG_member, name: "conns", scope: !11584, file: !3115, line: 33, baseType: !10416, size: 64)
!11587 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11584, file: !3115, line: 34, baseType: !10417, size: 256, offset: 64)
!11588 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !11584, file: !3115, line: 35, baseType: !9, size: 32, offset: 320)
!11589 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive_timeout", scope: !11584, file: !3115, line: 36, baseType: !125, size: 16, offset: 352)
!11590 = !DILocation(line: 309, column: 26, scope: !11535)
!11591 = !DILocalVariable(name: "n_fds", scope: !11535, file: !3115, line: 310, type: !34)
!11592 = !DILocation(line: 310, column: 9, scope: !11535)
!11593 = !DILocation(line: 312, column: 5, scope: !11535)
!11594 = !DILocation(line: 315, column: 29, scope: !11535)
!11595 = !DILocation(line: 315, column: 21, scope: !11535)
!11596 = !DILocation(line: 315, column: 14, scope: !11535)
!11597 = !DILocation(line: 315, column: 12, scope: !11535)
!11598 = !DILocation(line: 316, column: 9, scope: !11599)
!11599 = distinct !DILexicalBlock(scope: !11535, file: !3115, line: 316, column: 9)
!11600 = !DILocation(line: 316, column: 9, scope: !11535)
!11601 = !DILocation(line: 317, column: 9, scope: !11599)
!11602 = !DILocation(line: 319, column: 27, scope: !11535)
!11603 = !DILocation(line: 319, column: 34, scope: !11535)
!11604 = !DILocation(line: 319, column: 37, scope: !11535)
!11605 = !DILocation(line: 319, column: 43, scope: !11535)
!11606 = !DILocation(line: 319, column: 50, scope: !11535)
!11607 = !DILocation(line: 319, column: 5, scope: !11535)
!11608 = !DILocation(line: 321, column: 5, scope: !11535)
!11609 = !DILocation(line: 322, column: 36, scope: !11610)
!11610 = distinct !DILexicalBlock(scope: !11611, file: !3115, line: 321, column: 14)
!11611 = distinct !DILexicalBlock(scope: !11612, file: !3115, line: 321, column: 5)
!11612 = distinct !DILexicalBlock(scope: !11535, file: !3115, line: 321, column: 5)
!11613 = !DILocation(line: 322, column: 46, scope: !11610)
!11614 = !DILocation(line: 322, column: 54, scope: !11610)
!11615 = !DILocalVariable(name: "dq", arg: 1, scope: !11616, file: !3115, line: 108, type: !11619)
!11616 = distinct !DISubprogram(name: "death_queue_epoll_timeout", scope: !3115, file: !3115, line: 108, type: !11617, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3168, retainedNodes: !286)
!11617 = !DISubroutineType(types: !11618)
!11618 = !{!34, !11619}
!11619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11584, size: 64)
!11620 = !DILocation(line: 108, column: 49, scope: !11616, inlinedAt: !11621)
!11621 = distinct !DILocation(line: 323, column: 36, scope: !11610)
!11622 = !DILocation(line: 110, column: 30, scope: !11616, inlinedAt: !11621)
!11623 = !DILocation(line: 110, column: 12, scope: !11616, inlinedAt: !11621)
!11624 = !DILocation(line: 322, column: 25, scope: !11610)
!11625 = !DILocation(line: 322, column: 23, scope: !11610)
!11626 = !DILocation(line: 322, column: 9, scope: !11610)
!11627 = !DILocation(line: 325, column: 21, scope: !11628)
!11628 = distinct !DILexicalBlock(scope: !11610, file: !3115, line: 323, column: 69)
!11629 = !DILocation(line: 325, column: 13, scope: !11628)
!11630 = !DILocation(line: 328, column: 17, scope: !11631)
!11631 = distinct !DILexicalBlock(scope: !11628, file: !3115, line: 325, column: 28)
!11632 = !DILocation(line: 330, column: 13, scope: !11628)
!11633 = distinct !{!11633, !11634, !11635}
!11634 = !DILocation(line: 321, column: 5, scope: !11612)
!11635 = !DILocation(line: 359, column: 5, scope: !11612)
!11636 = !DILocation(line: 332, column: 13, scope: !11628)
!11637 = !DILocation(line: 333, column: 13, scope: !11628)
!11638 = !DILocation(line: 335, column: 31, scope: !11628)
!11639 = !DILocation(line: 335, column: 13, scope: !11628)
!11640 = !DILocalVariable(name: "ep_event", scope: !11641, file: !3115, line: 337, type: !11574)
!11641 = distinct !DILexicalBlock(scope: !11628, file: !3115, line: 337, column: 13)
!11642 = !DILocation(line: 337, column: 38, scope: !11641)
!11643 = !DILocation(line: 337, column: 49, scope: !11641)
!11644 = !DILocation(line: 337, column: 18, scope: !11641)
!11645 = !DILocation(line: 337, column: 62, scope: !11646)
!11646 = distinct !DILexicalBlock(scope: !11641, file: !3115, line: 337, column: 13)
!11647 = !DILocation(line: 337, column: 13, scope: !11641)
!11648 = !DILocalVariable(name: "conn", scope: !11649, file: !3115, line: 338, type: !10416)
!11649 = distinct !DILexicalBlock(scope: !11646, file: !3115, line: 337, column: 78)
!11650 = !DILocation(line: 338, column: 36, scope: !11649)
!11651 = !DILocation(line: 340, column: 22, scope: !11652)
!11652 = distinct !DILexicalBlock(scope: !11649, file: !3115, line: 340, column: 21)
!11653 = !DILocation(line: 340, column: 32, scope: !11652)
!11654 = !DILocation(line: 340, column: 37, scope: !11652)
!11655 = !DILocation(line: 340, column: 21, scope: !11649)
!11656 = !DILocation(line: 341, column: 50, scope: !11657)
!11657 = distinct !DILexicalBlock(scope: !11652, file: !3115, line: 340, column: 42)
!11658 = !DILocation(line: 341, column: 60, scope: !11657)
!11659 = !DILocation(line: 341, column: 74, scope: !11657)
!11660 = !DILocation(line: 341, column: 28, scope: !11657)
!11661 = !DILocation(line: 341, column: 26, scope: !11657)
!11662 = !DILocation(line: 342, column: 25, scope: !11663)
!11663 = distinct !DILexicalBlock(scope: !11657, file: !3115, line: 342, column: 25)
!11664 = !DILocation(line: 342, column: 25, scope: !11657)
!11665 = !DILocation(line: 343, column: 25, scope: !11663)
!11666 = !DILocation(line: 344, column: 51, scope: !11657)
!11667 = !DILocalVariable(name: "conn", arg: 1, scope: !11668, file: !3115, line: 262, type: !10416)
!11668 = distinct !DISubprogram(name: "spawn_or_reset_coro_if_needed", scope: !3115, file: !3115, line: 262, type: !11669, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3168, retainedNodes: !286)
!11669 = !DISubroutineType(types: !11670)
!11670 = !{null, !10416, !11671, !11619}
!11671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11577, size: 64)
!11672 = !DILocation(line: 262, column: 50, scope: !11668, inlinedAt: !11673)
!11673 = distinct !DILocation(line: 344, column: 21, scope: !11657)
!11674 = !DILocalVariable(name: "switcher", arg: 2, scope: !11668, file: !3115, line: 263, type: !11671)
!11675 = !DILocation(line: 263, column: 30, scope: !11668, inlinedAt: !11673)
!11676 = !DILocalVariable(name: "dq", arg: 3, scope: !11668, file: !3115, line: 263, type: !11619)
!11677 = !DILocation(line: 263, column: 62, scope: !11668, inlinedAt: !11673)
!11678 = !DILocation(line: 265, column: 9, scope: !11679, inlinedAt: !11673)
!11679 = distinct !DILexicalBlock(scope: !11668, file: !3115, line: 265, column: 9)
!11680 = !DILocation(line: 265, column: 15, scope: !11679, inlinedAt: !11673)
!11681 = !DILocation(line: 265, column: 9, scope: !11668, inlinedAt: !11673)
!11682 = !DILocation(line: 266, column: 13, scope: !11683, inlinedAt: !11673)
!11683 = distinct !DILexicalBlock(scope: !11684, file: !3115, line: 266, column: 13)
!11684 = distinct !DILexicalBlock(scope: !11679, file: !3115, line: 265, column: 21)
!11685 = !DILocation(line: 266, column: 19, scope: !11683, inlinedAt: !11673)
!11686 = !DILocation(line: 266, column: 25, scope: !11683, inlinedAt: !11673)
!11687 = !DILocation(line: 266, column: 13, scope: !11684, inlinedAt: !11673)
!11688 = !DILocation(line: 267, column: 13, scope: !11683, inlinedAt: !11673)
!11689 = !DILocation(line: 269, column: 20, scope: !11684, inlinedAt: !11673)
!11690 = !DILocation(line: 269, column: 26, scope: !11684, inlinedAt: !11673)
!11691 = !DILocation(line: 269, column: 54, scope: !11684, inlinedAt: !11673)
!11692 = !DILocation(line: 269, column: 9, scope: !11684, inlinedAt: !11673)
!11693 = !DILocation(line: 270, column: 5, scope: !11684, inlinedAt: !11673)
!11694 = !DILocation(line: 271, column: 31, scope: !11695, inlinedAt: !11673)
!11695 = distinct !DILexicalBlock(scope: !11679, file: !3115, line: 270, column: 12)
!11696 = !DILocation(line: 271, column: 63, scope: !11695, inlinedAt: !11673)
!11697 = !DILocation(line: 271, column: 22, scope: !11695, inlinedAt: !11673)
!11698 = !DILocation(line: 271, column: 9, scope: !11695, inlinedAt: !11673)
!11699 = !DILocation(line: 271, column: 15, scope: !11695, inlinedAt: !11673)
!11700 = !DILocation(line: 271, column: 20, scope: !11695, inlinedAt: !11673)
!11701 = !DILocation(line: 273, column: 28, scope: !11695, inlinedAt: !11673)
!11702 = !DILocation(line: 273, column: 32, scope: !11695, inlinedAt: !11673)
!11703 = !DILocation(line: 273, column: 9, scope: !11695, inlinedAt: !11673)
!11704 = !DILocation(line: 274, column: 9, scope: !11695, inlinedAt: !11673)
!11705 = !DILocation(line: 274, column: 21, scope: !11695, inlinedAt: !11673)
!11706 = !DILocation(line: 276, column: 5, scope: !11668, inlinedAt: !11673)
!11707 = !DILocation(line: 276, column: 17, scope: !11668, inlinedAt: !11673)
!11708 = !DILocation(line: 277, column: 5, scope: !11668, inlinedAt: !11673)
!11709 = !DILocation(line: 277, column: 17, scope: !11668, inlinedAt: !11673)
!11710 = !DILocation(line: 278, column: 1, scope: !11668, inlinedAt: !11673)
!11711 = !DILocation(line: 345, column: 17, scope: !11657)
!11712 = !DILocation(line: 346, column: 28, scope: !11713)
!11713 = distinct !DILexicalBlock(scope: !11652, file: !3115, line: 345, column: 24)
!11714 = !DILocation(line: 346, column: 38, scope: !11713)
!11715 = !DILocation(line: 346, column: 43, scope: !11713)
!11716 = !DILocation(line: 346, column: 26, scope: !11713)
!11717 = !DILocation(line: 347, column: 25, scope: !11718)
!11718 = distinct !DILexicalBlock(scope: !11713, file: !3115, line: 347, column: 25)
!11719 = !DILocation(line: 347, column: 25, scope: !11713)
!11720 = !DILocation(line: 348, column: 43, scope: !11721)
!11721 = distinct !DILexicalBlock(scope: !11718, file: !3115, line: 347, column: 79)
!11722 = !DILocalVariable(name: "dq", arg: 1, scope: !11723, file: !3115, line: 114, type: !11619)
!11723 = distinct !DISubprogram(name: "destroy_coro", scope: !3115, file: !3115, line: 114, type: !11724, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3168, retainedNodes: !286)
!11724 = !DISubroutineType(types: !11725)
!11725 = !{null, !11619, !10416}
!11726 = !DILocation(line: 114, column: 36, scope: !11723, inlinedAt: !11727)
!11727 = distinct !DILocation(line: 348, column: 25, scope: !11721)
!11728 = !DILocalVariable(name: "conn", arg: 2, scope: !11723, file: !3115, line: 114, type: !10416)
!11729 = !DILocation(line: 114, column: 59, scope: !11723, inlinedAt: !11727)
!11730 = !DILocation(line: 116, column: 24, scope: !11723, inlinedAt: !11727)
!11731 = !DILocation(line: 116, column: 28, scope: !11723, inlinedAt: !11727)
!11732 = !DILocation(line: 116, column: 5, scope: !11723, inlinedAt: !11727)
!11733 = !DILocation(line: 117, column: 9, scope: !11734, inlinedAt: !11727)
!11734 = distinct !DILexicalBlock(scope: !11723, file: !3115, line: 117, column: 9)
!11735 = !DILocation(line: 117, column: 9, scope: !11723, inlinedAt: !11727)
!11736 = !DILocation(line: 118, column: 19, scope: !11737, inlinedAt: !11727)
!11737 = distinct !DILexicalBlock(scope: !11734, file: !3115, line: 117, column: 29)
!11738 = !DILocation(line: 118, column: 25, scope: !11737, inlinedAt: !11727)
!11739 = !DILocation(line: 118, column: 9, scope: !11737, inlinedAt: !11727)
!11740 = !DILocation(line: 119, column: 9, scope: !11737, inlinedAt: !11727)
!11741 = !DILocation(line: 119, column: 15, scope: !11737, inlinedAt: !11727)
!11742 = !DILocation(line: 119, column: 20, scope: !11737, inlinedAt: !11727)
!11743 = !DILocation(line: 120, column: 5, scope: !11737, inlinedAt: !11727)
!11744 = !DILocation(line: 121, column: 9, scope: !11745, inlinedAt: !11727)
!11745 = distinct !DILexicalBlock(scope: !11723, file: !3115, line: 121, column: 9)
!11746 = !DILocation(line: 121, column: 15, scope: !11745, inlinedAt: !11727)
!11747 = !DILocation(line: 121, column: 21, scope: !11745, inlinedAt: !11727)
!11748 = !DILocation(line: 121, column: 9, scope: !11723, inlinedAt: !11727)
!11749 = !DILocation(line: 122, column: 9, scope: !11750, inlinedAt: !11727)
!11750 = distinct !DILexicalBlock(scope: !11745, file: !3115, line: 121, column: 38)
!11751 = !DILocation(line: 122, column: 21, scope: !11750, inlinedAt: !11727)
!11752 = !DILocation(line: 123, column: 38, scope: !11750, inlinedAt: !11727)
!11753 = !DILocation(line: 123, column: 15, scope: !11750, inlinedAt: !11727)
!11754 = !DILocation(line: 123, column: 9, scope: !11750, inlinedAt: !11727)
!11755 = !DILocation(line: 124, column: 5, scope: !11750, inlinedAt: !11727)
!11756 = !DILocation(line: 349, column: 25, scope: !11721)
!11757 = !DILocation(line: 352, column: 51, scope: !11713)
!11758 = !DILocation(line: 262, column: 50, scope: !11668, inlinedAt: !11759)
!11759 = distinct !DILocation(line: 352, column: 21, scope: !11713)
!11760 = !DILocation(line: 263, column: 30, scope: !11668, inlinedAt: !11759)
!11761 = !DILocation(line: 263, column: 62, scope: !11668, inlinedAt: !11759)
!11762 = !DILocation(line: 265, column: 9, scope: !11679, inlinedAt: !11759)
!11763 = !DILocation(line: 265, column: 15, scope: !11679, inlinedAt: !11759)
!11764 = !DILocation(line: 265, column: 9, scope: !11668, inlinedAt: !11759)
!11765 = !DILocation(line: 266, column: 13, scope: !11683, inlinedAt: !11759)
!11766 = !DILocation(line: 266, column: 19, scope: !11683, inlinedAt: !11759)
!11767 = !DILocation(line: 266, column: 25, scope: !11683, inlinedAt: !11759)
!11768 = !DILocation(line: 266, column: 13, scope: !11684, inlinedAt: !11759)
!11769 = !DILocation(line: 267, column: 13, scope: !11683, inlinedAt: !11759)
!11770 = !DILocation(line: 269, column: 20, scope: !11684, inlinedAt: !11759)
!11771 = !DILocation(line: 269, column: 26, scope: !11684, inlinedAt: !11759)
!11772 = !DILocation(line: 269, column: 54, scope: !11684, inlinedAt: !11759)
!11773 = !DILocation(line: 269, column: 9, scope: !11684, inlinedAt: !11759)
!11774 = !DILocation(line: 270, column: 5, scope: !11684, inlinedAt: !11759)
!11775 = !DILocation(line: 271, column: 31, scope: !11695, inlinedAt: !11759)
!11776 = !DILocation(line: 271, column: 63, scope: !11695, inlinedAt: !11759)
!11777 = !DILocation(line: 271, column: 22, scope: !11695, inlinedAt: !11759)
!11778 = !DILocation(line: 271, column: 9, scope: !11695, inlinedAt: !11759)
!11779 = !DILocation(line: 271, column: 15, scope: !11695, inlinedAt: !11759)
!11780 = !DILocation(line: 271, column: 20, scope: !11695, inlinedAt: !11759)
!11781 = !DILocation(line: 273, column: 28, scope: !11695, inlinedAt: !11759)
!11782 = !DILocation(line: 273, column: 32, scope: !11695, inlinedAt: !11759)
!11783 = !DILocation(line: 273, column: 9, scope: !11695, inlinedAt: !11759)
!11784 = !DILocation(line: 274, column: 9, scope: !11695, inlinedAt: !11759)
!11785 = !DILocation(line: 274, column: 21, scope: !11695, inlinedAt: !11759)
!11786 = !DILocation(line: 276, column: 5, scope: !11668, inlinedAt: !11759)
!11787 = !DILocation(line: 276, column: 17, scope: !11668, inlinedAt: !11759)
!11788 = !DILocation(line: 277, column: 5, scope: !11668, inlinedAt: !11759)
!11789 = !DILocation(line: 277, column: 17, scope: !11668, inlinedAt: !11759)
!11790 = !DILocation(line: 278, column: 1, scope: !11668, inlinedAt: !11759)
!11791 = !DILocation(line: 353, column: 48, scope: !11713)
!11792 = !DILocation(line: 353, column: 54, scope: !11713)
!11793 = !DILocalVariable(name: "dq", arg: 1, scope: !11794, file: !3115, line: 174, type: !11619)
!11794 = distinct !DISubprogram(name: "resume_coro_if_needed", scope: !3115, file: !3115, line: 174, type: !11795, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3168, retainedNodes: !286)
!11795 = !DISubroutineType(types: !11796)
!11796 = !{null, !11619, !10416, !34}
!11797 = !DILocation(line: 174, column: 45, scope: !11794, inlinedAt: !11798)
!11798 = distinct !DILocation(line: 353, column: 21, scope: !11713)
!11799 = !DILocalVariable(name: "conn", arg: 2, scope: !11794, file: !3115, line: 174, type: !10416)
!11800 = !DILocation(line: 174, column: 68, scope: !11794, inlinedAt: !11798)
!11801 = !DILocalVariable(name: "epoll_fd", arg: 3, scope: !11794, file: !3115, line: 175, type: !34)
!11802 = !DILocation(line: 175, column: 9, scope: !11794, inlinedAt: !11798)
!11803 = !DILocation(line: 177, column: 5, scope: !11804, inlinedAt: !11798)
!11804 = distinct !DILexicalBlock(scope: !11805, file: !3115, line: 177, column: 5)
!11805 = distinct !DILexicalBlock(scope: !11794, file: !3115, line: 177, column: 5)
!11806 = !DILocation(line: 177, column: 5, scope: !11805, inlinedAt: !11798)
!11807 = !DILocation(line: 179, column: 11, scope: !11808, inlinedAt: !11798)
!11808 = distinct !DILexicalBlock(scope: !11794, file: !3115, line: 179, column: 9)
!11809 = !DILocation(line: 179, column: 17, scope: !11808, inlinedAt: !11798)
!11810 = !DILocation(line: 179, column: 23, scope: !11808, inlinedAt: !11798)
!11811 = !DILocation(line: 179, column: 9, scope: !11794, inlinedAt: !11798)
!11812 = !DILocation(line: 180, column: 9, scope: !11808, inlinedAt: !11798)
!11813 = !DILocalVariable(name: "yield_result", scope: !11794, file: !3115, line: 182, type: !11814)
!11814 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_connection_coro_yield_t", file: !7, line: 171, baseType: !1724)
!11815 = !DILocation(line: 182, column: 34, scope: !11794, inlinedAt: !11798)
!11816 = !DILocation(line: 182, column: 61, scope: !11794, inlinedAt: !11798)
!11817 = !DILocation(line: 182, column: 67, scope: !11794, inlinedAt: !11798)
!11818 = !DILocation(line: 182, column: 49, scope: !11794, inlinedAt: !11798)
!11819 = !DILocation(line: 184, column: 9, scope: !11820, inlinedAt: !11798)
!11820 = distinct !DILexicalBlock(scope: !11794, file: !3115, line: 184, column: 9)
!11821 = !DILocation(line: 184, column: 22, scope: !11820, inlinedAt: !11798)
!11822 = !DILocation(line: 184, column: 9, scope: !11794, inlinedAt: !11798)
!11823 = !DILocation(line: 185, column: 22, scope: !11824, inlinedAt: !11798)
!11824 = distinct !DILexicalBlock(scope: !11820, file: !3115, line: 184, column: 46)
!11825 = !DILocation(line: 185, column: 26, scope: !11824, inlinedAt: !11798)
!11826 = !DILocation(line: 114, column: 36, scope: !11723, inlinedAt: !11827)
!11827 = distinct !DILocation(line: 185, column: 9, scope: !11824, inlinedAt: !11798)
!11828 = !DILocation(line: 114, column: 59, scope: !11723, inlinedAt: !11827)
!11829 = !DILocation(line: 116, column: 24, scope: !11723, inlinedAt: !11827)
!11830 = !DILocation(line: 116, column: 28, scope: !11723, inlinedAt: !11827)
!11831 = !DILocation(line: 116, column: 5, scope: !11723, inlinedAt: !11827)
!11832 = !DILocation(line: 117, column: 9, scope: !11734, inlinedAt: !11827)
!11833 = !DILocation(line: 117, column: 9, scope: !11723, inlinedAt: !11827)
!11834 = !DILocation(line: 118, column: 19, scope: !11737, inlinedAt: !11827)
!11835 = !DILocation(line: 118, column: 25, scope: !11737, inlinedAt: !11827)
!11836 = !DILocation(line: 118, column: 9, scope: !11737, inlinedAt: !11827)
!11837 = !DILocation(line: 119, column: 9, scope: !11737, inlinedAt: !11827)
!11838 = !DILocation(line: 119, column: 15, scope: !11737, inlinedAt: !11827)
!11839 = !DILocation(line: 119, column: 20, scope: !11737, inlinedAt: !11827)
!11840 = !DILocation(line: 120, column: 5, scope: !11737, inlinedAt: !11827)
!11841 = !DILocation(line: 121, column: 9, scope: !11745, inlinedAt: !11827)
!11842 = !DILocation(line: 121, column: 15, scope: !11745, inlinedAt: !11827)
!11843 = !DILocation(line: 121, column: 21, scope: !11745, inlinedAt: !11827)
!11844 = !DILocation(line: 121, column: 9, scope: !11723, inlinedAt: !11827)
!11845 = !DILocation(line: 122, column: 9, scope: !11750, inlinedAt: !11827)
!11846 = !DILocation(line: 122, column: 21, scope: !11750, inlinedAt: !11827)
!11847 = !DILocation(line: 123, column: 38, scope: !11750, inlinedAt: !11827)
!11848 = !DILocation(line: 123, column: 15, scope: !11750, inlinedAt: !11827)
!11849 = !DILocation(line: 123, column: 9, scope: !11750, inlinedAt: !11827)
!11850 = !DILocation(line: 124, column: 5, scope: !11750, inlinedAt: !11827)
!11851 = !DILocation(line: 186, column: 9, scope: !11824, inlinedAt: !11798)
!11852 = !DILocalVariable(name: "write_events", scope: !11794, file: !3115, line: 189, type: !137)
!11853 = !DILocation(line: 189, column: 10, scope: !11794, inlinedAt: !11798)
!11854 = !DILocation(line: 190, column: 9, scope: !11855, inlinedAt: !11798)
!11855 = distinct !DILexicalBlock(scope: !11794, file: !3115, line: 190, column: 9)
!11856 = !DILocation(line: 190, column: 15, scope: !11855, inlinedAt: !11798)
!11857 = !DILocation(line: 190, column: 21, scope: !11855, inlinedAt: !11798)
!11858 = !DILocation(line: 190, column: 9, scope: !11794, inlinedAt: !11798)
!11859 = !DILocation(line: 191, column: 22, scope: !11860, inlinedAt: !11798)
!11860 = distinct !DILexicalBlock(scope: !11855, file: !3115, line: 190, column: 39)
!11861 = !DILocation(line: 192, column: 5, scope: !11860, inlinedAt: !11798)
!11862 = !DILocalVariable(name: "should_resume_coro", scope: !11863, file: !3115, line: 193, type: !137)
!11863 = distinct !DILexicalBlock(scope: !11855, file: !3115, line: 192, column: 12)
!11864 = !DILocation(line: 193, column: 14, scope: !11863, inlinedAt: !11798)
!11865 = !DILocation(line: 193, column: 36, scope: !11863, inlinedAt: !11798)
!11866 = !DILocation(line: 193, column: 49, scope: !11863, inlinedAt: !11798)
!11867 = !DILocation(line: 195, column: 13, scope: !11868, inlinedAt: !11798)
!11868 = distinct !DILexicalBlock(scope: !11863, file: !3115, line: 195, column: 13)
!11869 = !DILocation(line: 195, column: 13, scope: !11863, inlinedAt: !11798)
!11870 = !DILocation(line: 196, column: 13, scope: !11868, inlinedAt: !11798)
!11871 = !DILocation(line: 196, column: 25, scope: !11868, inlinedAt: !11798)
!11872 = !DILocation(line: 198, column: 13, scope: !11868, inlinedAt: !11798)
!11873 = !DILocation(line: 198, column: 25, scope: !11868, inlinedAt: !11798)
!11874 = !DILocation(line: 200, column: 25, scope: !11863, inlinedAt: !11798)
!11875 = !DILocation(line: 200, column: 31, scope: !11863, inlinedAt: !11798)
!11876 = !DILocation(line: 200, column: 37, scope: !11863, inlinedAt: !11798)
!11877 = !DILocation(line: 200, column: 24, scope: !11863, inlinedAt: !11798)
!11878 = !DILocation(line: 200, column: 22, scope: !11863, inlinedAt: !11798)
!11879 = !DILocation(line: 201, column: 13, scope: !11880, inlinedAt: !11798)
!11880 = distinct !DILexicalBlock(scope: !11863, file: !3115, line: 201, column: 13)
!11881 = !DILocation(line: 201, column: 35, scope: !11880, inlinedAt: !11798)
!11882 = !DILocation(line: 201, column: 32, scope: !11880, inlinedAt: !11798)
!11883 = !DILocation(line: 201, column: 13, scope: !11863, inlinedAt: !11798)
!11884 = !DILocation(line: 202, column: 13, scope: !11880, inlinedAt: !11798)
!11885 = !DILocalVariable(name: "event", scope: !11794, file: !3115, line: 205, type: !11502)
!11886 = !DILocation(line: 205, column: 24, scope: !11794, inlinedAt: !11798)
!11887 = !DILocation(line: 206, column: 40, scope: !11794, inlinedAt: !11798)
!11888 = !DILocation(line: 206, column: 19, scope: !11794, inlinedAt: !11798)
!11889 = !DILocation(line: 205, column: 32, scope: !11794, inlinedAt: !11798)
!11890 = !DILocation(line: 207, column: 21, scope: !11794, inlinedAt: !11798)
!11891 = !DILocation(line: 207, column: 14, scope: !11794, inlinedAt: !11798)
!11892 = !DILocalVariable(name: "fd", scope: !11794, file: !3115, line: 210, type: !34)
!11893 = !DILocation(line: 210, column: 9, scope: !11794, inlinedAt: !11798)
!11894 = !DILocation(line: 210, column: 37, scope: !11794, inlinedAt: !11798)
!11895 = !DILocation(line: 210, column: 14, scope: !11794, inlinedAt: !11798)
!11896 = !DILocation(line: 211, column: 9, scope: !11897, inlinedAt: !11798)
!11897 = distinct !DILexicalBlock(scope: !11794, file: !3115, line: 211, column: 9)
!11898 = !DILocation(line: 211, column: 9, scope: !11794, inlinedAt: !11798)
!11899 = !DILocation(line: 212, column: 9, scope: !11897, inlinedAt: !11798)
!11900 = !DILocation(line: 214, column: 5, scope: !11794, inlinedAt: !11798)
!11901 = !DILocation(line: 214, column: 17, scope: !11794, inlinedAt: !11798)
!11902 = !DILocation(line: 215, column: 1, scope: !11794, inlinedAt: !11798)
!11903 = !DILocation(line: 356, column: 47, scope: !11649)
!11904 = !DILocation(line: 356, column: 17, scope: !11649)
!11905 = !DILocation(line: 357, column: 13, scope: !11649)
!11906 = !DILocation(line: 337, column: 74, scope: !11646)
!11907 = !DILocation(line: 337, column: 13, scope: !11646)
!11908 = distinct !{!11908, !11647, !11909, !3413}
!11909 = !DILocation(line: 357, column: 13, scope: !11641)
!11910 = !DILocation(line: 358, column: 9, scope: !11628)
!11911 = !DILocation(line: 321, column: 5, scope: !11611)
!11912 = !DILabel(scope: !11535, name: "epoll_fd_closed", file: !3115, line: 361)
!11913 = !DILocation(line: 361, column: 1, scope: !11535)
!11914 = !DILocation(line: 362, column: 10, scope: !11535)
!11915 = !DILocation(line: 362, column: 5, scope: !11535)
!11916 = !DILocation(line: 364, column: 5, scope: !11535)
!11917 = distinct !DISubprogram(name: "death_queue_init", scope: !3115, file: !3115, line: 98, type: !11918, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3168, retainedNodes: !286)
!11918 = !DISubroutineType(types: !11919)
!11919 = !{null, !11619, !10416, !125}
!11920 = !DILocalVariable(name: "dq", arg: 1, scope: !11917, file: !3115, line: 98, type: !11619)
!11921 = !DILocation(line: 98, column: 40, scope: !11917)
!11922 = !DILocalVariable(name: "conns", arg: 2, scope: !11917, file: !3115, line: 98, type: !10416)
!11923 = !DILocation(line: 98, column: 63, scope: !11917)
!11924 = !DILocalVariable(name: "keep_alive_timeout", arg: 3, scope: !11917, file: !3115, line: 99, type: !125)
!11925 = !DILocation(line: 99, column: 20, scope: !11917)
!11926 = !DILocation(line: 101, column: 17, scope: !11917)
!11927 = !DILocation(line: 101, column: 5, scope: !11917)
!11928 = !DILocation(line: 101, column: 9, scope: !11917)
!11929 = !DILocation(line: 101, column: 15, scope: !11917)
!11930 = !DILocation(line: 102, column: 5, scope: !11917)
!11931 = !DILocation(line: 102, column: 9, scope: !11917)
!11932 = !DILocation(line: 102, column: 14, scope: !11917)
!11933 = !DILocation(line: 103, column: 30, scope: !11917)
!11934 = !DILocation(line: 103, column: 5, scope: !11917)
!11935 = !DILocation(line: 103, column: 9, scope: !11917)
!11936 = !DILocation(line: 103, column: 28, scope: !11917)
!11937 = !DILocation(line: 104, column: 21, scope: !11917)
!11938 = !DILocation(line: 104, column: 25, scope: !11917)
!11939 = !DILocation(line: 104, column: 30, scope: !11917)
!11940 = !DILocation(line: 104, column: 35, scope: !11917)
!11941 = !DILocation(line: 104, column: 5, scope: !11917)
!11942 = !DILocation(line: 104, column: 9, scope: !11917)
!11943 = !DILocation(line: 104, column: 14, scope: !11917)
!11944 = !DILocation(line: 104, column: 19, scope: !11917)
!11945 = !DILocation(line: 105, column: 1, scope: !11917)
!11946 = distinct !DISubprogram(name: "death_queue_empty", scope: !3115, file: !3115, line: 74, type: !11947, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3168, retainedNodes: !286)
!11947 = !DISubroutineType(types: !11948)
!11948 = !{!137, !11619}
!11949 = !DILocalVariable(name: "dq", arg: 1, scope: !11946, file: !3115, line: 74, type: !11619)
!11950 = !DILocation(line: 74, column: 53, scope: !11946)
!11951 = !DILocation(line: 76, column: 12, scope: !11946)
!11952 = !DILocation(line: 76, column: 16, scope: !11946)
!11953 = !DILocation(line: 76, column: 21, scope: !11946)
!11954 = !DILocation(line: 76, column: 26, scope: !11946)
!11955 = !DILocation(line: 76, column: 5, scope: !11946)
!11956 = distinct !DISubprogram(name: "death_queue_kill_waiting", scope: !3115, file: !3115, line: 218, type: !11957, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3168, retainedNodes: !286)
!11957 = !DISubroutineType(types: !11958)
!11958 = !{null, !11619}
!11959 = !DILocalVariable(name: "dq", arg: 1, scope: !11956, file: !3115, line: 218, type: !11619)
!11960 = !DILocation(line: 218, column: 48, scope: !11956)
!11961 = !DILocation(line: 220, column: 5, scope: !11956)
!11962 = !DILocation(line: 220, column: 9, scope: !11956)
!11963 = !DILocation(line: 220, column: 13, scope: !11956)
!11964 = !DILocation(line: 222, column: 5, scope: !11956)
!11965 = !DILocation(line: 222, column: 31, scope: !11956)
!11966 = !DILocation(line: 222, column: 13, scope: !11956)
!11967 = !DILocation(line: 222, column: 12, scope: !11956)
!11968 = !DILocalVariable(name: "conn", scope: !11969, file: !3115, line: 223, type: !10416)
!11969 = distinct !DILexicalBlock(scope: !11956, file: !3115, line: 222, column: 36)
!11970 = !DILocation(line: 223, column: 28, scope: !11969)
!11971 = !DILocation(line: 223, column: 59, scope: !11969)
!11972 = !DILocation(line: 223, column: 63, scope: !11969)
!11973 = !DILocation(line: 223, column: 67, scope: !11969)
!11974 = !DILocation(line: 223, column: 72, scope: !11969)
!11975 = !DILocation(line: 223, column: 35, scope: !11969)
!11976 = !DILocation(line: 225, column: 13, scope: !11977)
!11977 = distinct !DILexicalBlock(scope: !11969, file: !3115, line: 225, column: 13)
!11978 = !DILocation(line: 225, column: 19, scope: !11977)
!11979 = !DILocation(line: 225, column: 33, scope: !11977)
!11980 = !DILocation(line: 225, column: 37, scope: !11977)
!11981 = !DILocation(line: 225, column: 31, scope: !11977)
!11982 = !DILocation(line: 225, column: 13, scope: !11969)
!11983 = !DILocation(line: 226, column: 13, scope: !11977)
!11984 = !DILocation(line: 228, column: 22, scope: !11969)
!11985 = !DILocation(line: 228, column: 26, scope: !11969)
!11986 = !DILocation(line: 114, column: 36, scope: !11723, inlinedAt: !11987)
!11987 = distinct !DILocation(line: 228, column: 9, scope: !11969)
!11988 = !DILocation(line: 114, column: 59, scope: !11723, inlinedAt: !11987)
!11989 = !DILocation(line: 116, column: 24, scope: !11723, inlinedAt: !11987)
!11990 = !DILocation(line: 116, column: 28, scope: !11723, inlinedAt: !11987)
!11991 = !DILocation(line: 116, column: 5, scope: !11723, inlinedAt: !11987)
!11992 = !DILocation(line: 117, column: 9, scope: !11734, inlinedAt: !11987)
!11993 = !DILocation(line: 117, column: 9, scope: !11723, inlinedAt: !11987)
!11994 = !DILocation(line: 118, column: 19, scope: !11737, inlinedAt: !11987)
!11995 = !DILocation(line: 118, column: 25, scope: !11737, inlinedAt: !11987)
!11996 = !DILocation(line: 118, column: 9, scope: !11737, inlinedAt: !11987)
!11997 = !DILocation(line: 119, column: 9, scope: !11737, inlinedAt: !11987)
!11998 = !DILocation(line: 119, column: 15, scope: !11737, inlinedAt: !11987)
!11999 = !DILocation(line: 119, column: 20, scope: !11737, inlinedAt: !11987)
!12000 = !DILocation(line: 120, column: 5, scope: !11737, inlinedAt: !11987)
!12001 = !DILocation(line: 121, column: 9, scope: !11745, inlinedAt: !11987)
!12002 = !DILocation(line: 121, column: 15, scope: !11745, inlinedAt: !11987)
!12003 = !DILocation(line: 121, column: 21, scope: !11745, inlinedAt: !11987)
!12004 = !DILocation(line: 121, column: 9, scope: !11723, inlinedAt: !11987)
!12005 = !DILocation(line: 122, column: 9, scope: !11750, inlinedAt: !11987)
!12006 = !DILocation(line: 122, column: 21, scope: !11750, inlinedAt: !11987)
!12007 = !DILocation(line: 123, column: 38, scope: !11750, inlinedAt: !11987)
!12008 = !DILocation(line: 123, column: 15, scope: !11750, inlinedAt: !11987)
!12009 = !DILocation(line: 123, column: 9, scope: !11750, inlinedAt: !11987)
!12010 = !DILocation(line: 124, column: 5, scope: !11750, inlinedAt: !11987)
!12011 = distinct !{!12011, !11964, !12012, !3413}
!12012 = !DILocation(line: 229, column: 5, scope: !11956)
!12013 = !DILocation(line: 232, column: 5, scope: !11956)
!12014 = !DILocation(line: 232, column: 9, scope: !11956)
!12015 = !DILocation(line: 232, column: 14, scope: !11956)
!12016 = !DILocation(line: 233, column: 1, scope: !11956)
!12017 = distinct !DISubprogram(name: "update_date_cache", scope: !3115, file: !3115, line: 250, type: !12018, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3168, retainedNodes: !286)
!12018 = !DISubroutineType(types: !12019)
!12019 = !{null, !10424}
!12020 = !DILocalVariable(name: "thread", arg: 1, scope: !12017, file: !3115, line: 250, type: !10424)
!12021 = !DILocation(line: 250, column: 34, scope: !12017)
!12022 = !DILocalVariable(name: "now", scope: !12017, file: !3115, line: 252, type: !151)
!12023 = !DILocation(line: 252, column: 12, scope: !12017)
!12024 = !DILocation(line: 252, column: 18, scope: !12017)
!12025 = !DILocation(line: 253, column: 9, scope: !12026)
!12026 = distinct !DILexicalBlock(scope: !12017, file: !3115, line: 253, column: 9)
!12027 = !DILocation(line: 253, column: 16, scope: !12026)
!12028 = !DILocation(line: 253, column: 24, scope: !12026)
!12029 = !DILocation(line: 253, column: 29, scope: !12026)
!12030 = !DILocation(line: 253, column: 13, scope: !12026)
!12031 = !DILocation(line: 253, column: 9, scope: !12017)
!12032 = !DILocation(line: 254, column: 29, scope: !12033)
!12033 = distinct !DILexicalBlock(scope: !12026, file: !3115, line: 253, column: 35)
!12034 = !DILocation(line: 254, column: 9, scope: !12033)
!12035 = !DILocation(line: 254, column: 17, scope: !12033)
!12036 = !DILocation(line: 254, column: 22, scope: !12033)
!12037 = !DILocation(line: 254, column: 27, scope: !12033)
!12038 = !DILocation(line: 255, column: 30, scope: !12033)
!12039 = !DILocation(line: 255, column: 35, scope: !12033)
!12040 = !DILocation(line: 255, column: 43, scope: !12033)
!12041 = !DILocation(line: 255, column: 48, scope: !12033)
!12042 = !DILocation(line: 255, column: 9, scope: !12033)
!12043 = !DILocation(line: 256, column: 30, scope: !12033)
!12044 = !DILocation(line: 256, column: 44, scope: !12033)
!12045 = !DILocation(line: 256, column: 52, scope: !12033)
!12046 = !DILocation(line: 256, column: 58, scope: !12033)
!12047 = !DILocation(line: 256, column: 65, scope: !12033)
!12048 = !DILocation(line: 256, column: 36, scope: !12033)
!12049 = !DILocation(line: 256, column: 34, scope: !12033)
!12050 = !DILocation(line: 257, column: 21, scope: !12033)
!12051 = !DILocation(line: 257, column: 29, scope: !12033)
!12052 = !DILocation(line: 257, column: 34, scope: !12033)
!12053 = !DILocation(line: 256, column: 9, scope: !12033)
!12054 = !DILocation(line: 258, column: 5, scope: !12033)
!12055 = !DILocation(line: 259, column: 1, scope: !12017)
!12056 = distinct !DISubprogram(name: "grab_and_watch_client", scope: !3115, file: !3115, line: 281, type: !12057, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3168, retainedNodes: !286)
!12057 = !DISubroutineType(types: !12058)
!12058 = !{!10416, !34, !34, !10416}
!12059 = !DILocalVariable(name: "epoll_fd", arg: 1, scope: !12056, file: !3115, line: 281, type: !34)
!12060 = !DILocation(line: 281, column: 27, scope: !12056)
!12061 = !DILocalVariable(name: "pipe_fd", arg: 2, scope: !12056, file: !3115, line: 281, type: !34)
!12062 = !DILocation(line: 281, column: 41, scope: !12056)
!12063 = !DILocalVariable(name: "conns", arg: 3, scope: !12056, file: !3115, line: 281, type: !10416)
!12064 = !DILocation(line: 281, column: 69, scope: !12056)
!12065 = !DILocalVariable(name: "fd", scope: !12056, file: !3115, line: 283, type: !34)
!12066 = !DILocation(line: 283, column: 9, scope: !12056)
!12067 = !DILocation(line: 284, column: 9, scope: !12068)
!12068 = distinct !DILexicalBlock(scope: !12056, file: !3115, line: 284, column: 9)
!12069 = !DILocation(line: 284, column: 9, scope: !12056)
!12070 = !DILocation(line: 285, column: 9, scope: !12071)
!12071 = distinct !DILexicalBlock(scope: !12068, file: !3115, line: 284, column: 67)
!12072 = !DILocation(line: 286, column: 9, scope: !12071)
!12073 = !DILocalVariable(name: "event", scope: !12056, file: !3115, line: 289, type: !11502)
!12074 = !DILocation(line: 289, column: 24, scope: !12056)
!12075 = !DILocation(line: 289, column: 32, scope: !12056)
!12076 = !DILocation(line: 290, column: 19, scope: !12056)
!12077 = !DILocation(line: 291, column: 22, scope: !12056)
!12078 = !DILocation(line: 291, column: 28, scope: !12056)
!12079 = !DILocation(line: 291, column: 14, scope: !12056)
!12080 = !DILocation(line: 293, column: 9, scope: !12081)
!12081 = distinct !DILexicalBlock(scope: !12056, file: !3115, line: 293, column: 9)
!12082 = !DILocation(line: 293, column: 9, scope: !12056)
!12083 = !DILocation(line: 294, column: 9, scope: !12081)
!12084 = !DILocation(line: 296, column: 13, scope: !12056)
!12085 = !DILocation(line: 296, column: 19, scope: !12056)
!12086 = !DILocation(line: 296, column: 5, scope: !12056)
!12087 = !DILocation(line: 297, column: 1, scope: !12056)
!12088 = distinct !DISubprogram(name: "process_request_coro", scope: !3115, file: !3115, line: 134, type: !2145, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3168, retainedNodes: !286)
!12089 = !DILocalVariable(name: "coro", arg: 1, scope: !12088, file: !3115, line: 134, type: !76)
!12090 = !DILocation(line: 134, column: 30, scope: !12088)
!12091 = !DILocalVariable(name: "strbuf", scope: !12088, file: !3115, line: 136, type: !12092)
!12092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12093, size: 64)
!12093 = !DIDerivedType(tag: DW_TAG_typedef, name: "strbuf_t", file: !197, line: 25, baseType: !12094)
!12094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "strbuf_t_", file: !197, line: 27, size: 256, elements: !12095)
!12095 = !{!12096, !12101, !12106}
!12096 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !12094, file: !197, line: 31, baseType: !12097, size: 64)
!12097 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12094, file: !197, line: 28, size: 64, elements: !12098)
!12098 = !{!12099, !12100}
!12099 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !12097, file: !197, line: 29, baseType: !52, size: 64)
!12100 = !DIDerivedType(tag: DW_TAG_member, name: "static_buffer", scope: !12097, file: !197, line: 30, baseType: !205, size: 64)
!12101 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !12094, file: !197, line: 34, baseType: !12102, size: 128, offset: 64)
!12102 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12094, file: !197, line: 32, size: 128, elements: !12103)
!12103 = !{!12104, !12105}
!12104 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !12102, file: !197, line: 33, baseType: !55, size: 64)
!12105 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !12102, file: !197, line: 33, baseType: !55, size: 64, offset: 64)
!12106 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !12094, file: !197, line: 35, baseType: !9, size: 32, offset: 192)
!12107 = !DILocation(line: 136, column: 15, scope: !12088)
!12108 = !DILocation(line: 136, column: 41, scope: !12088)
!12109 = !DILocation(line: 136, column: 24, scope: !12088)
!12110 = !DILocalVariable(name: "conn", scope: !12088, file: !3115, line: 137, type: !10416)
!12111 = !DILocation(line: 137, column: 24, scope: !12088)
!12112 = !DILocation(line: 137, column: 45, scope: !12088)
!12113 = !DILocation(line: 137, column: 31, scope: !12088)
!12114 = !DILocalVariable(name: "lwan", scope: !12088, file: !3115, line: 138, type: !10390)
!12115 = !DILocation(line: 138, column: 13, scope: !12088)
!12116 = !DILocation(line: 138, column: 20, scope: !12088)
!12117 = !DILocation(line: 138, column: 26, scope: !12088)
!12118 = !DILocation(line: 138, column: 34, scope: !12088)
!12119 = !DILocalVariable(name: "fd", scope: !12088, file: !3115, line: 139, type: !34)
!12120 = !DILocation(line: 139, column: 9, scope: !12088)
!12121 = !DILocation(line: 139, column: 37, scope: !12088)
!12122 = !DILocation(line: 139, column: 14, scope: !12088)
!12123 = !DILocalVariable(name: "request_buffer", scope: !12088, file: !3115, line: 140, type: !10154)
!12124 = !DILocation(line: 140, column: 10, scope: !12088)
!12125 = !DILocalVariable(name: "buffer", scope: !12088, file: !3115, line: 141, type: !12126)
!12126 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_value_t", file: !7, line: 110, baseType: !12127)
!12127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_value_t_", file: !7, line: 191, size: 128, elements: !12128)
!12128 = !{!12129, !12130}
!12129 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !12127, file: !7, line: 192, baseType: !52, size: 64)
!12130 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !12127, file: !7, line: 193, baseType: !55, size: 64, offset: 64)
!12131 = !DILocation(line: 141, column: 18, scope: !12088)
!12132 = !DILocation(line: 141, column: 27, scope: !12088)
!12133 = !DILocation(line: 142, column: 18, scope: !12088)
!12134 = !DILocalVariable(name: "next_request", scope: !12088, file: !3115, line: 145, type: !52)
!12135 = !DILocation(line: 145, column: 11, scope: !12088)
!12136 = !DILocation(line: 147, column: 17, scope: !12088)
!12137 = !DILocation(line: 147, column: 5, scope: !12088)
!12138 = !DILocation(line: 149, column: 5, scope: !12088)
!12139 = !DILocalVariable(name: "request", scope: !12140, file: !3115, line: 150, type: !12141)
!12140 = distinct !DILexicalBlock(scope: !12088, file: !3115, line: 149, column: 18)
!12141 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_request_t", file: !7, line: 106, baseType: !12142)
!12142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_request_t_", file: !7, line: 206, size: 1280, elements: !12143)
!12143 = !{!12144, !12145, !12146, !12147, !12148, !12149, !12160, !12161, !12170}
!12144 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !12142, file: !7, line: 207, baseType: !32, size: 32)
!12145 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !12142, file: !7, line: 208, baseType: !34, size: 32, offset: 32)
!12146 = !DIDerivedType(tag: DW_TAG_member, name: "url", scope: !12142, file: !7, line: 209, baseType: !12126, size: 128, offset: 64)
!12147 = !DIDerivedType(tag: DW_TAG_member, name: "original_url", scope: !12142, file: !7, line: 210, baseType: !12126, size: 128, offset: 192)
!12148 = !DIDerivedType(tag: DW_TAG_member, name: "conn", scope: !12142, file: !7, line: 211, baseType: !10416, size: 64, offset: 320)
!12149 = !DIDerivedType(tag: DW_TAG_member, name: "query_params", scope: !12142, file: !7, line: 216, baseType: !12150, size: 128, offset: 384)
!12150 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12142, file: !7, line: 213, size: 128, elements: !12151)
!12151 = !{!12152, !12159}
!12152 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12150, file: !7, line: 214, baseType: !12153, size: 64)
!12153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12154, size: 64)
!12154 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_key_value_t", file: !7, line: 105, baseType: !12155)
!12155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_key_value_t_", file: !7, line: 173, size: 128, elements: !12156)
!12156 = !{!12157, !12158}
!12157 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12155, file: !7, line: 174, baseType: !52, size: 64)
!12158 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !12155, file: !7, line: 175, baseType: !52, size: 64, offset: 64)
!12159 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !12150, file: !7, line: 215, baseType: !55, size: 64, offset: 64)
!12160 = !DIDerivedType(tag: DW_TAG_member, name: "post_data", scope: !12142, file: !7, line: 216, baseType: !12150, size: 128, offset: 512)
!12161 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !12142, file: !7, line: 223, baseType: !12162, size: 192, offset: 640)
!12162 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12142, file: !7, line: 217, size: 192, elements: !12163)
!12163 = !{!12164, !12165}
!12164 = !DIDerivedType(tag: DW_TAG_member, name: "if_modified_since", scope: !12162, file: !7, line: 218, baseType: !151, size: 64)
!12165 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !12162, file: !7, line: 222, baseType: !12166, size: 128, offset: 64)
!12166 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12162, file: !7, line: 219, size: 128, elements: !12167)
!12167 = !{!12168, !12169}
!12168 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !12166, file: !7, line: 220, baseType: !2271, size: 64)
!12169 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !12166, file: !7, line: 221, baseType: !2271, size: 64, offset: 64)
!12170 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !12142, file: !7, line: 224, baseType: !12171, size: 448, offset: 832)
!12171 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_response_t", file: !7, line: 107, baseType: !12172)
!12172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_response_t_", file: !7, line: 178, size: 448, elements: !12173)
!12173 = !{!12174, !12175, !12176, !12177, !12178}
!12174 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !12172, file: !7, line: 179, baseType: !12092, size: 64)
!12175 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !12172, file: !7, line: 180, baseType: !205, size: 64, offset: 64)
!12176 = !DIDerivedType(tag: DW_TAG_member, name: "content_length", scope: !12172, file: !7, line: 181, baseType: !55, size: 64, offset: 128)
!12177 = !DIDerivedType(tag: DW_TAG_member, name: "headers", scope: !12172, file: !7, line: 182, baseType: !12153, size: 64, offset: 192)
!12178 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !12172, file: !7, line: 188, baseType: !12179, size: 192, offset: 256)
!12179 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12172, file: !7, line: 184, size: 192, elements: !12180)
!12180 = !{!12181, !12186, !12187}
!12181 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !12179, file: !7, line: 185, baseType: !12182, size: 64)
!12182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12183, size: 64)
!12183 = !DISubroutineType(types: !12184)
!12184 = !{!6, !12185, !111}
!12185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12141, size: 64)
!12186 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12179, file: !7, line: 186, baseType: !111, size: 64, offset: 64)
!12187 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !12179, file: !7, line: 187, baseType: !111, size: 64, offset: 128)
!12188 = !DILocation(line: 150, column: 24, scope: !12140)
!12189 = !DILocation(line: 150, column: 34, scope: !12140)
!12190 = !DILocation(line: 152, column: 19, scope: !12140)
!12191 = !DILocation(line: 151, column: 21, scope: !12140)
!12192 = !DILocation(line: 153, column: 25, scope: !12140)
!12193 = !DILocation(line: 154, column: 27, scope: !12140)
!12194 = !DILocation(line: 158, column: 9, scope: !12195)
!12195 = distinct !DILexicalBlock(scope: !12196, file: !3115, line: 158, column: 9)
!12196 = distinct !DILexicalBlock(scope: !12140, file: !3115, line: 158, column: 9)
!12197 = !DILocation(line: 158, column: 9, scope: !12196)
!12198 = !DILocation(line: 160, column: 45, scope: !12140)
!12199 = !DILocation(line: 160, column: 70, scope: !12140)
!12200 = !DILocation(line: 160, column: 24, scope: !12140)
!12201 = !DILocation(line: 160, column: 22, scope: !12140)
!12202 = !DILocation(line: 161, column: 14, scope: !12203)
!12203 = distinct !DILexicalBlock(scope: !12140, file: !3115, line: 161, column: 13)
!12204 = !DILocation(line: 161, column: 13, scope: !12140)
!12205 = !DILocation(line: 162, column: 13, scope: !12203)
!12206 = !DILocation(line: 164, column: 20, scope: !12140)
!12207 = !DILocation(line: 164, column: 9, scope: !12140)
!12208 = !DILocation(line: 166, column: 13, scope: !12209)
!12209 = distinct !DILexicalBlock(scope: !12140, file: !3115, line: 166, column: 13)
!12210 = !DILocation(line: 166, column: 13, scope: !12140)
!12211 = !DILocation(line: 167, column: 13, scope: !12209)
!12212 = distinct !{!12212, !12138, !12213}
!12213 = !DILocation(line: 168, column: 5, scope: !12088)
!12214 = !DILocation(line: 170, column: 5, scope: !12088)
!12215 = !DILocation(line: 171, column: 1, scope: !12088)
!12216 = distinct !DISubprogram(name: "death_queue_insert", scope: !3115, file: !3115, line: 56, type: !11724, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3168, retainedNodes: !286)
!12217 = !DILocalVariable(name: "dq", arg: 1, scope: !12216, file: !3115, line: 56, type: !11619)
!12218 = !DILocation(line: 56, column: 54, scope: !12216)
!12219 = !DILocalVariable(name: "new_node", arg: 2, scope: !12216, file: !3115, line: 57, type: !10416)
!12220 = !DILocation(line: 57, column: 24, scope: !12216)
!12221 = !DILocation(line: 59, column: 5, scope: !12216)
!12222 = !DILocation(line: 59, column: 15, scope: !12216)
!12223 = !DILocation(line: 59, column: 20, scope: !12216)
!12224 = !DILocation(line: 60, column: 22, scope: !12216)
!12225 = !DILocation(line: 60, column: 26, scope: !12216)
!12226 = !DILocation(line: 60, column: 31, scope: !12216)
!12227 = !DILocation(line: 60, column: 5, scope: !12216)
!12228 = !DILocation(line: 60, column: 15, scope: !12216)
!12229 = !DILocation(line: 60, column: 20, scope: !12216)
!12230 = !DILocalVariable(name: "prev", scope: !12216, file: !3115, line: 61, type: !10416)
!12231 = !DILocation(line: 61, column: 24, scope: !12216)
!12232 = !DILocation(line: 61, column: 55, scope: !12216)
!12233 = !DILocation(line: 61, column: 59, scope: !12216)
!12234 = !DILocation(line: 61, column: 63, scope: !12216)
!12235 = !DILocation(line: 61, column: 68, scope: !12216)
!12236 = !DILocation(line: 61, column: 31, scope: !12216)
!12237 = !DILocation(line: 62, column: 58, scope: !12216)
!12238 = !DILocation(line: 62, column: 62, scope: !12216)
!12239 = !DILocation(line: 62, column: 34, scope: !12216)
!12240 = !DILocation(line: 62, column: 21, scope: !12216)
!12241 = !DILocation(line: 62, column: 27, scope: !12216)
!12242 = !DILocation(line: 62, column: 32, scope: !12216)
!12243 = !DILocation(line: 62, column: 5, scope: !12216)
!12244 = !DILocation(line: 62, column: 9, scope: !12216)
!12245 = !DILocation(line: 62, column: 14, scope: !12216)
!12246 = !DILocation(line: 62, column: 19, scope: !12216)
!12247 = !DILocation(line: 63, column: 1, scope: !12216)
!12248 = distinct !DISubprogram(name: "death_queue_remove", scope: !3115, file: !3115, line: 65, type: !11724, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3168, retainedNodes: !286)
!12249 = !DILocalVariable(name: "dq", arg: 1, scope: !12248, file: !3115, line: 65, type: !11619)
!12250 = !DILocation(line: 65, column: 54, scope: !12248)
!12251 = !DILocalVariable(name: "node", arg: 2, scope: !12248, file: !3115, line: 66, type: !10416)
!12252 = !DILocation(line: 66, column: 24, scope: !12248)
!12253 = !DILocalVariable(name: "prev", scope: !12248, file: !3115, line: 68, type: !10416)
!12254 = !DILocation(line: 68, column: 24, scope: !12248)
!12255 = !DILocation(line: 68, column: 55, scope: !12248)
!12256 = !DILocation(line: 68, column: 59, scope: !12248)
!12257 = !DILocation(line: 68, column: 65, scope: !12248)
!12258 = !DILocation(line: 68, column: 31, scope: !12248)
!12259 = !DILocalVariable(name: "next", scope: !12248, file: !3115, line: 69, type: !10416)
!12260 = !DILocation(line: 69, column: 24, scope: !12248)
!12261 = !DILocation(line: 69, column: 55, scope: !12248)
!12262 = !DILocation(line: 69, column: 59, scope: !12248)
!12263 = !DILocation(line: 69, column: 65, scope: !12248)
!12264 = !DILocation(line: 69, column: 31, scope: !12248)
!12265 = !DILocation(line: 70, column: 18, scope: !12248)
!12266 = !DILocation(line: 70, column: 24, scope: !12248)
!12267 = !DILocation(line: 70, column: 5, scope: !12248)
!12268 = !DILocation(line: 70, column: 11, scope: !12248)
!12269 = !DILocation(line: 70, column: 16, scope: !12248)
!12270 = !DILocation(line: 71, column: 18, scope: !12248)
!12271 = !DILocation(line: 71, column: 24, scope: !12248)
!12272 = !DILocation(line: 71, column: 5, scope: !12248)
!12273 = !DILocation(line: 71, column: 11, scope: !12248)
!12274 = !DILocation(line: 71, column: 16, scope: !12248)
!12275 = !DILocation(line: 72, column: 1, scope: !12248)
!12276 = distinct !DISubprogram(name: "lwan_connection_get_fd", scope: !1572, file: !1572, line: 801, type: !12277, scopeLine: 802, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!12277 = !DISubroutineType(types: !12278)
!12278 = !{!34, !1594}
!12279 = !DILocalVariable(name: "conn", arg: 1, scope: !12276, file: !1572, line: 801, type: !1594)
!12280 = !DILocation(line: 801, column: 43, scope: !12276)
!12281 = !DILocation(line: 803, column: 29, scope: !12276)
!12282 = !DILocation(line: 803, column: 36, scope: !12276)
!12283 = !DILocation(line: 803, column: 42, scope: !12276)
!12284 = !DILocation(line: 803, column: 50, scope: !12276)
!12285 = !DILocation(line: 803, column: 56, scope: !12276)
!12286 = !DILocation(line: 803, column: 34, scope: !12276)
!12287 = !DILocation(line: 803, column: 12, scope: !12276)
!12288 = !DILocation(line: 803, column: 5, scope: !12276)
!12289 = distinct !DISubprogram(name: "death_queue_move_to_last", scope: !3115, file: !3115, line: 79, type: !11724, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3168, retainedNodes: !286)
!12290 = !DILocalVariable(name: "dq", arg: 1, scope: !12289, file: !3115, line: 79, type: !11619)
!12291 = !DILocation(line: 79, column: 60, scope: !12289)
!12292 = !DILocalVariable(name: "conn", arg: 2, scope: !12289, file: !3115, line: 80, type: !10416)
!12293 = !DILocation(line: 80, column: 24, scope: !12289)
!12294 = !DILocation(line: 90, column: 25, scope: !12289)
!12295 = !DILocation(line: 90, column: 29, scope: !12289)
!12296 = !DILocation(line: 90, column: 36, scope: !12289)
!12297 = !DILocation(line: 90, column: 40, scope: !12289)
!12298 = !DILocation(line: 91, column: 26, scope: !12289)
!12299 = !DILocation(line: 91, column: 32, scope: !12289)
!12300 = !DILocation(line: 91, column: 38, scope: !12289)
!12301 = !DILocation(line: 91, column: 24, scope: !12289)
!12302 = !DILocation(line: 91, column: 23, scope: !12289)
!12303 = !DILocation(line: 90, column: 59, scope: !12289)
!12304 = !DILocation(line: 90, column: 34, scope: !12289)
!12305 = !DILocation(line: 90, column: 5, scope: !12289)
!12306 = !DILocation(line: 90, column: 11, scope: !12289)
!12307 = !DILocation(line: 90, column: 23, scope: !12289)
!12308 = !DILocation(line: 93, column: 24, scope: !12289)
!12309 = !DILocation(line: 93, column: 28, scope: !12289)
!12310 = !DILocation(line: 93, column: 5, scope: !12289)
!12311 = !DILocation(line: 94, column: 24, scope: !12289)
!12312 = !DILocation(line: 94, column: 28, scope: !12289)
!12313 = !DILocation(line: 94, column: 5, scope: !12289)
!12314 = !DILocation(line: 95, column: 1, scope: !12289)
!12315 = distinct !DISubprogram(name: "death_queue_idx_to_node", scope: !3115, file: !3115, line: 50, type: !12316, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3168, retainedNodes: !286)
!12316 = !DISubroutineType(types: !12317)
!12317 = !{!10416, !11619, !34}
!12318 = !DILocalVariable(name: "dq", arg: 1, scope: !12315, file: !3115, line: 50, type: !11619)
!12319 = !DILocation(line: 50, column: 80, scope: !12315)
!12320 = !DILocalVariable(name: "idx", arg: 2, scope: !12315, file: !3115, line: 51, type: !34)
!12321 = !DILocation(line: 51, column: 9, scope: !12315)
!12322 = !DILocation(line: 53, column: 13, scope: !12315)
!12323 = !DILocation(line: 53, column: 17, scope: !12315)
!12324 = !DILocation(line: 53, column: 12, scope: !12315)
!12325 = !DILocation(line: 53, column: 25, scope: !12315)
!12326 = !DILocation(line: 53, column: 29, scope: !12315)
!12327 = !DILocation(line: 53, column: 37, scope: !12315)
!12328 = !DILocation(line: 53, column: 41, scope: !12315)
!12329 = !DILocation(line: 53, column: 47, scope: !12315)
!12330 = !DILocation(line: 53, column: 5, scope: !12315)
!12331 = distinct !DISubprogram(name: "death_queue_node_to_idx", scope: !3115, file: !3115, line: 44, type: !12332, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3168, retainedNodes: !286)
!12332 = !DISubroutineType(types: !12333)
!12333 = !{!34, !11619, !10416}
!12334 = !DILocalVariable(name: "dq", arg: 1, scope: !12331, file: !3115, line: 44, type: !11619)
!12335 = !DILocation(line: 44, column: 65, scope: !12331)
!12336 = !DILocalVariable(name: "conn", arg: 2, scope: !12331, file: !3115, line: 45, type: !10416)
!12337 = !DILocation(line: 45, column: 24, scope: !12331)
!12338 = !DILocation(line: 47, column: 13, scope: !12331)
!12339 = !DILocation(line: 47, column: 22, scope: !12331)
!12340 = !DILocation(line: 47, column: 26, scope: !12331)
!12341 = !DILocation(line: 47, column: 18, scope: !12331)
!12342 = !DILocation(line: 47, column: 12, scope: !12331)
!12343 = !DILocation(line: 47, column: 56, scope: !12331)
!12344 = !DILocation(line: 47, column: 63, scope: !12331)
!12345 = !DILocation(line: 47, column: 67, scope: !12331)
!12346 = !DILocation(line: 47, column: 61, scope: !12331)
!12347 = !DILocation(line: 47, column: 39, scope: !12331)
!12348 = !DILocation(line: 47, column: 5, scope: !12331)
!12349 = distinct !DISubprogram(name: "strbuf_free", scope: !3350, file: !3350, line: 125, type: !12350, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3344, retainedNodes: !286)
!12350 = !DISubroutineType(types: !12351)
!12351 = !{null, !12352}
!12352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12353, size: 64)
!12353 = !DIDerivedType(tag: DW_TAG_typedef, name: "strbuf_t", file: !197, line: 25, baseType: !12354)
!12354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "strbuf_t_", file: !197, line: 27, size: 256, elements: !12355)
!12355 = !{!12356, !12361, !12366}
!12356 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !12354, file: !197, line: 31, baseType: !12357, size: 64)
!12357 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12354, file: !197, line: 28, size: 64, elements: !12358)
!12358 = !{!12359, !12360}
!12359 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !12357, file: !197, line: 29, baseType: !52, size: 64)
!12360 = !DIDerivedType(tag: DW_TAG_member, name: "static_buffer", scope: !12357, file: !197, line: 30, baseType: !205, size: 64)
!12361 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !12354, file: !197, line: 34, baseType: !12362, size: 128, offset: 64)
!12362 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12354, file: !197, line: 32, size: 128, elements: !12363)
!12363 = !{!12364, !12365}
!12364 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !12362, file: !197, line: 33, baseType: !55, size: 64)
!12365 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !12362, file: !197, line: 33, baseType: !55, size: 64, offset: 64)
!12366 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !12354, file: !197, line: 35, baseType: !9, size: 32, offset: 192)
!12367 = !DILocalVariable(name: "s", arg: 1, scope: !12349, file: !3350, line: 125, type: !12352)
!12368 = !DILocation(line: 125, column: 23, scope: !12349)
!12369 = !DILocation(line: 127, column: 9, scope: !12370)
!12370 = distinct !DILexicalBlock(scope: !12349, file: !3350, line: 127, column: 9)
!12371 = !DILocation(line: 127, column: 9, scope: !12349)
!12372 = !DILocation(line: 128, column: 9, scope: !12370)
!12373 = !DILocation(line: 129, column: 11, scope: !12374)
!12374 = distinct !DILexicalBlock(scope: !12349, file: !3350, line: 129, column: 9)
!12375 = !DILocation(line: 129, column: 14, scope: !12374)
!12376 = !DILocation(line: 129, column: 20, scope: !12374)
!12377 = !DILocation(line: 129, column: 9, scope: !12349)
!12378 = !DILocation(line: 130, column: 14, scope: !12374)
!12379 = !DILocation(line: 130, column: 17, scope: !12374)
!12380 = !DILocation(line: 130, column: 23, scope: !12374)
!12381 = !DILocation(line: 130, column: 9, scope: !12374)
!12382 = !DILocation(line: 131, column: 9, scope: !12383)
!12383 = distinct !DILexicalBlock(scope: !12349, file: !3350, line: 131, column: 9)
!12384 = !DILocation(line: 131, column: 12, scope: !12383)
!12385 = !DILocation(line: 131, column: 18, scope: !12383)
!12386 = !DILocation(line: 131, column: 9, scope: !12349)
!12387 = !DILocation(line: 132, column: 14, scope: !12383)
!12388 = !DILocation(line: 132, column: 9, scope: !12383)
!12389 = !DILocation(line: 133, column: 1, scope: !12349)
!12390 = distinct !DISubprogram(name: "strbuf_init", scope: !3350, file: !3350, line: 100, type: !12391, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3344, retainedNodes: !286)
!12391 = !DISubroutineType(types: !12392)
!12392 = !{!137, !12352}
!12393 = !DILocalVariable(name: "s", arg: 1, scope: !12390, file: !3350, line: 100, type: !12352)
!12394 = !DILocation(line: 100, column: 23, scope: !12390)
!12395 = !DILocation(line: 102, column: 34, scope: !12390)
!12396 = !DILocation(line: 102, column: 12, scope: !12390)
!12397 = !DILocation(line: 102, column: 5, scope: !12390)
!12398 = distinct !DISubprogram(name: "lwan_process_request", scope: !1572, file: !1572, line: 713, type: !12399, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!12399 = !DISubroutineType(types: !12400)
!12400 = !{!52, !1607, !1580, !1745, !52}
!12401 = !DILocalVariable(name: "l", arg: 1, scope: !12398, file: !1572, line: 713, type: !1607)
!12402 = !DILocation(line: 713, column: 30, scope: !12398)
!12403 = !DILocalVariable(name: "request", arg: 2, scope: !12398, file: !1572, line: 713, type: !1580)
!12404 = !DILocation(line: 713, column: 49, scope: !12398)
!12405 = !DILocalVariable(name: "buffer", arg: 3, scope: !12398, file: !1572, line: 714, type: !1745)
!12406 = !DILocation(line: 714, column: 19, scope: !12398)
!12407 = !DILocalVariable(name: "next_request", arg: 4, scope: !12398, file: !1572, line: 714, type: !52)
!12408 = !DILocation(line: 714, column: 33, scope: !12398)
!12409 = !DILocalVariable(name: "status", scope: !12398, file: !1572, line: 716, type: !6)
!12410 = !DILocation(line: 716, column: 24, scope: !12398)
!12411 = !DILocalVariable(name: "url_map", scope: !12398, file: !1572, line: 717, type: !12412)
!12412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12413, size: 64)
!12413 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_url_map_t", file: !7, line: 109, baseType: !12414)
!12414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_url_map_t_", file: !7, line: 236, size: 576, elements: !12415)
!12415 = !{!12416, !12421, !12422, !12423, !12424, !12425, !12437, !12438}
!12416 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !12414, file: !7, line: 237, baseType: !12417, size: 64)
!12417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12418, size: 64)
!12418 = !DISubroutineType(types: !12419)
!12419 = !{!6, !1580, !12420, !111}
!12420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 64)
!12421 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12414, file: !7, line: 238, baseType: !111, size: 64, offset: 64)
!12422 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", scope: !12414, file: !7, line: 240, baseType: !205, size: 64, offset: 128)
!12423 = !DIDerivedType(tag: DW_TAG_member, name: "prefix_len", scope: !12414, file: !7, line: 241, baseType: !55, size: 64, offset: 192)
!12424 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !12414, file: !7, line: 242, baseType: !1559, size: 32, offset: 256)
!12425 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !12414, file: !7, line: 244, baseType: !12426, size: 64, offset: 320)
!12426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12427, size: 64)
!12427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12428)
!12428 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_module_t", file: !7, line: 104, baseType: !12429)
!12429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_module_t_", file: !7, line: 227, size: 384, elements: !12430)
!12430 = !{!12431, !12432, !12433, !12434, !12435, !12436}
!12431 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12429, file: !7, line: 228, baseType: !205, size: 64)
!12432 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !12429, file: !7, line: 229, baseType: !1408, size: 64, offset: 64)
!12433 = !DIDerivedType(tag: DW_TAG_member, name: "init_from_hash", scope: !12429, file: !7, line: 230, baseType: !1412, size: 64, offset: 128)
!12434 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !12429, file: !7, line: 231, baseType: !115, size: 64, offset: 192)
!12435 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !12429, file: !7, line: 232, baseType: !12417, size: 64, offset: 256)
!12436 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !12429, file: !7, line: 233, baseType: !1559, size: 32, offset: 320)
!12437 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !12414, file: !7, line: 245, baseType: !111, size: 64, offset: 384)
!12438 = !DIDerivedType(tag: DW_TAG_member, name: "authorization", scope: !12414, file: !7, line: 250, baseType: !12439, size: 128, offset: 448)
!12439 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12414, file: !7, line: 247, size: 128, elements: !12440)
!12440 = !{!12441, !12442}
!12441 = !DIDerivedType(tag: DW_TAG_member, name: "realm", scope: !12439, file: !7, line: 248, baseType: !52, size: 64)
!12442 = !DIDerivedType(tag: DW_TAG_member, name: "password_file", scope: !12439, file: !7, line: 249, baseType: !52, size: 64, offset: 64)
!12443 = !DILocation(line: 717, column: 21, scope: !12398)
!12444 = !DILocalVariable(name: "helper", scope: !12398, file: !1572, line: 719, type: !1742)
!12445 = !DILocation(line: 719, column: 34, scope: !12398)
!12446 = !DILocation(line: 719, column: 43, scope: !12398)
!12447 = !DILocation(line: 720, column: 19, scope: !12398)
!12448 = !DILocation(line: 721, column: 25, scope: !12398)
!12449 = !DILocation(line: 724, column: 27, scope: !12398)
!12450 = !DILocalVariable(name: "request", arg: 1, scope: !12451, file: !1572, line: 591, type: !1580)
!12451 = distinct !DISubprogram(name: "read_request", scope: !1572, file: !1572, line: 591, type: !12452, scopeLine: 592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!12452 = !DISubroutineType(types: !12453)
!12453 = !{!6, !1580, !1741}
!12454 = !DILocation(line: 591, column: 30, scope: !12451, inlinedAt: !12455)
!12455 = distinct !DILocation(line: 724, column: 14, scope: !12398)
!12456 = !DILocalVariable(name: "helper", arg: 2, scope: !12451, file: !1572, line: 591, type: !1741)
!12457 = !DILocation(line: 591, column: 69, scope: !12451, inlinedAt: !12455)
!12458 = !DILocation(line: 593, column: 37, scope: !12451, inlinedAt: !12455)
!12459 = !DILocation(line: 593, column: 46, scope: !12451, inlinedAt: !12455)
!12460 = !DILocation(line: 593, column: 54, scope: !12451, inlinedAt: !12455)
!12461 = !DILocation(line: 593, column: 62, scope: !12451, inlinedAt: !12455)
!12462 = !DILocation(line: 593, column: 12, scope: !12451, inlinedAt: !12455)
!12463 = !DILocation(line: 724, column: 12, scope: !12398)
!12464 = !DILocation(line: 725, column: 9, scope: !12465)
!12465 = distinct !DILexicalBlock(scope: !12398, file: !1572, line: 725, column: 9)
!12466 = !DILocation(line: 725, column: 9, scope: !12398)
!12467 = !DILocation(line: 727, column: 13, scope: !12468)
!12468 = distinct !DILexicalBlock(scope: !12469, file: !1572, line: 727, column: 13)
!12469 = distinct !DILexicalBlock(scope: !12465, file: !1572, line: 725, column: 38)
!12470 = !DILocation(line: 727, column: 20, scope: !12468)
!12471 = !DILocation(line: 727, column: 13, scope: !12469)
!12472 = !DILocation(line: 728, column: 35, scope: !12468)
!12473 = !DILocation(line: 728, column: 44, scope: !12468)
!12474 = !DILocation(line: 728, column: 13, scope: !12468)
!12475 = !DILocation(line: 729, column: 9, scope: !12469)
!12476 = !DILocation(line: 732, column: 33, scope: !12398)
!12477 = !DILocation(line: 732, column: 14, scope: !12398)
!12478 = !DILocation(line: 732, column: 12, scope: !12398)
!12479 = !DILocation(line: 733, column: 9, scope: !12480)
!12480 = distinct !DILexicalBlock(scope: !12398, file: !1572, line: 733, column: 9)
!12481 = !DILocation(line: 733, column: 9, scope: !12398)
!12482 = !DILocation(line: 734, column: 31, scope: !12483)
!12483 = distinct !DILexicalBlock(scope: !12480, file: !1572, line: 733, column: 38)
!12484 = !DILocation(line: 734, column: 40, scope: !12483)
!12485 = !DILocation(line: 734, column: 9, scope: !12483)
!12486 = !DILocation(line: 735, column: 9, scope: !12483)
!12487 = !DILocation(line: 738, column: 40, scope: !12398)
!12488 = !DILocation(line: 738, column: 43, scope: !12398)
!12489 = !DILocation(line: 738, column: 57, scope: !12398)
!12490 = !DILocation(line: 738, column: 66, scope: !12398)
!12491 = !DILocation(line: 738, column: 70, scope: !12398)
!12492 = !DILocation(line: 738, column: 15, scope: !12398)
!12493 = !DILocation(line: 738, column: 13, scope: !12398)
!12494 = !DILocation(line: 739, column: 9, scope: !12495)
!12495 = distinct !DILexicalBlock(scope: !12398, file: !1572, line: 739, column: 9)
!12496 = !DILocation(line: 739, column: 9, scope: !12398)
!12497 = !DILocation(line: 740, column: 31, scope: !12498)
!12498 = distinct !DILexicalBlock(scope: !12495, file: !1572, line: 739, column: 29)
!12499 = !DILocation(line: 740, column: 9, scope: !12498)
!12500 = !DILocation(line: 741, column: 9, scope: !12498)
!12501 = !DILocation(line: 744, column: 27, scope: !12398)
!12502 = !DILocation(line: 744, column: 36, scope: !12398)
!12503 = !DILocation(line: 744, column: 5, scope: !12398)
!12504 = !DILocation(line: 744, column: 14, scope: !12398)
!12505 = !DILocation(line: 744, column: 18, scope: !12398)
!12506 = !DILocation(line: 744, column: 24, scope: !12398)
!12507 = !DILocation(line: 745, column: 25, scope: !12398)
!12508 = !DILocation(line: 745, column: 34, scope: !12398)
!12509 = !DILocation(line: 745, column: 5, scope: !12398)
!12510 = !DILocation(line: 745, column: 14, scope: !12398)
!12511 = !DILocation(line: 745, column: 18, scope: !12398)
!12512 = !DILocation(line: 745, column: 22, scope: !12398)
!12513 = !DILocation(line: 747, column: 35, scope: !12398)
!12514 = !DILocation(line: 747, column: 44, scope: !12398)
!12515 = !DILocation(line: 747, column: 14, scope: !12398)
!12516 = !DILocation(line: 747, column: 12, scope: !12398)
!12517 = !DILocation(line: 748, column: 9, scope: !12518)
!12518 = distinct !DILexicalBlock(scope: !12398, file: !1572, line: 748, column: 9)
!12519 = !DILocation(line: 748, column: 9, scope: !12398)
!12520 = !DILocation(line: 749, column: 31, scope: !12521)
!12521 = distinct !DILexicalBlock(scope: !12518, file: !1572, line: 748, column: 38)
!12522 = !DILocation(line: 749, column: 40, scope: !12521)
!12523 = !DILocation(line: 749, column: 9, scope: !12521)
!12524 = !DILocation(line: 750, column: 9, scope: !12521)
!12525 = !DILocation(line: 753, column: 14, scope: !12398)
!12526 = !DILocation(line: 753, column: 23, scope: !12398)
!12527 = !DILocation(line: 753, column: 31, scope: !12398)
!12528 = !DILocation(line: 753, column: 41, scope: !12398)
!12529 = !DILocation(line: 753, column: 50, scope: !12398)
!12530 = !DILocation(line: 753, column: 60, scope: !12398)
!12531 = !DILocation(line: 753, column: 69, scope: !12398)
!12532 = !DILocation(line: 753, column: 12, scope: !12398)
!12533 = !DILocation(line: 754, column: 19, scope: !12398)
!12534 = !DILocation(line: 754, column: 28, scope: !12398)
!12535 = !DILocation(line: 754, column: 5, scope: !12398)
!12536 = !DILabel(scope: !12398, name: "out", file: !1572, line: 756)
!12537 = !DILocation(line: 756, column: 1, scope: !12398)
!12538 = !DILocation(line: 757, column: 19, scope: !12398)
!12539 = !DILocation(line: 757, column: 5, scope: !12398)
!12540 = distinct !DISubprogram(name: "strbuf_reset_length", scope: !3350, file: !3350, line: 291, type: !12391, scopeLine: 292, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3344, retainedNodes: !286)
!12541 = !DILocalVariable(name: "s", arg: 1, scope: !12540, file: !3350, line: 291, type: !12352)
!12542 = !DILocation(line: 291, column: 31, scope: !12540)
!12543 = !DILocation(line: 293, column: 9, scope: !12544)
!12544 = distinct !DILexicalBlock(scope: !12540, file: !3350, line: 293, column: 9)
!12545 = !DILocation(line: 293, column: 12, scope: !12544)
!12546 = !DILocation(line: 293, column: 18, scope: !12544)
!12547 = !DILocation(line: 293, column: 9, scope: !12540)
!12548 = !DILocation(line: 294, column: 9, scope: !12549)
!12549 = distinct !DILexicalBlock(scope: !12544, file: !3350, line: 293, column: 28)
!12550 = !DILocation(line: 294, column: 12, scope: !12549)
!12551 = !DILocation(line: 294, column: 18, scope: !12549)
!12552 = !DILocation(line: 295, column: 34, scope: !12549)
!12553 = !DILocation(line: 295, column: 37, scope: !12549)
!12554 = !DILocation(line: 295, column: 41, scope: !12549)
!12555 = !DILocation(line: 295, column: 27, scope: !12549)
!12556 = !DILocation(line: 295, column: 9, scope: !12549)
!12557 = !DILocation(line: 295, column: 12, scope: !12549)
!12558 = !DILocation(line: 295, column: 25, scope: !12549)
!12559 = !DILocation(line: 296, column: 13, scope: !12560)
!12560 = distinct !DILexicalBlock(scope: !12549, file: !3350, line: 296, column: 13)
!12561 = !DILocation(line: 296, column: 13, scope: !12549)
!12562 = !DILocation(line: 297, column: 13, scope: !12560)
!12563 = !DILocation(line: 298, column: 5, scope: !12549)
!12564 = !DILocation(line: 300, column: 5, scope: !12540)
!12565 = !DILocation(line: 300, column: 8, scope: !12540)
!12566 = !DILocation(line: 300, column: 12, scope: !12540)
!12567 = !DILocation(line: 300, column: 19, scope: !12540)
!12568 = !DILocation(line: 301, column: 5, scope: !12540)
!12569 = !DILocation(line: 301, column: 8, scope: !12540)
!12570 = !DILocation(line: 301, column: 14, scope: !12540)
!12571 = !DILocation(line: 301, column: 24, scope: !12540)
!12572 = !DILocation(line: 303, column: 5, scope: !12540)
!12573 = !DILocation(line: 304, column: 1, scope: !12540)
!12574 = distinct !DISubprogram(name: "read_request_finalizer", scope: !1572, file: !1572, line: 562, type: !12575, scopeLine: 564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!12575 = !DISubroutineType(types: !12576)
!12576 = !{!12577, !55, !55, !1741}
!12577 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_read_finalizer_t", file: !1572, line: 39, baseType: !1718)
!12578 = !DILocalVariable(name: "total_read", arg: 1, scope: !12574, file: !1572, line: 562, type: !55)
!12579 = !DILocation(line: 562, column: 60, scope: !12574)
!12580 = !DILocalVariable(name: "buffer_size", arg: 2, scope: !12574, file: !1572, line: 563, type: !55)
!12581 = !DILocation(line: 563, column: 12, scope: !12574)
!12582 = !DILocalVariable(name: "helper", arg: 3, scope: !12574, file: !1572, line: 563, type: !1741)
!12583 = !DILocation(line: 563, column: 55, scope: !12574)
!12584 = !DILocation(line: 565, column: 9, scope: !12585)
!12585 = distinct !DILexicalBlock(scope: !12574, file: !1572, line: 565, column: 9)
!12586 = !DILocation(line: 565, column: 9, scope: !12574)
!12587 = !DILocation(line: 566, column: 9, scope: !12585)
!12588 = !DILocation(line: 568, column: 9, scope: !12589)
!12589 = distinct !DILexicalBlock(scope: !12574, file: !1572, line: 568, column: 9)
!12590 = !DILocation(line: 568, column: 9, scope: !12574)
!12591 = !DILocation(line: 569, column: 9, scope: !12589)
!12592 = !DILocation(line: 571, column: 9, scope: !12593)
!12593 = distinct !DILexicalBlock(scope: !12574, file: !1572, line: 571, column: 9)
!12594 = !DILocation(line: 571, column: 9, scope: !12574)
!12595 = !DILocation(line: 572, column: 9, scope: !12596)
!12596 = distinct !DILexicalBlock(scope: !12593, file: !1572, line: 571, column: 39)
!12597 = !DILocation(line: 572, column: 17, scope: !12596)
!12598 = !DILocation(line: 572, column: 30, scope: !12596)
!12599 = !DILocation(line: 573, column: 9, scope: !12596)
!12600 = !DILocation(line: 576, column: 9, scope: !12601)
!12601 = distinct !DILexicalBlock(scope: !12574, file: !1572, line: 576, column: 9)
!12602 = !DILocation(line: 576, column: 9, scope: !12574)
!12603 = !DILocation(line: 577, column: 9, scope: !12601)
!12604 = !DILocation(line: 579, column: 25, scope: !12605)
!12605 = distinct !DILexicalBlock(scope: !12574, file: !1572, line: 579, column: 9)
!12606 = !DILocation(line: 579, column: 33, scope: !12605)
!12607 = !DILocation(line: 579, column: 41, scope: !12605)
!12608 = !DILocalVariable(name: "buffer", arg: 1, scope: !1730, file: !1572, line: 66, type: !52)
!12609 = !DILocation(line: 66, column: 23, scope: !1730, inlinedAt: !12610)
!12610 = distinct !DILocation(line: 579, column: 9, scope: !12605)
!12611 = !DILocation(line: 75, column: 5, scope: !1730, inlinedAt: !12610)
!12612 = !DILocalVariable(name: "s", arg: 1, scope: !12613, file: !7, line: 68, type: !205)
!12613 = distinct !DISubprogram(name: "string_as_int32", scope: !7, file: !7, line: 68, type: !12614, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!12614 = !DISubroutineType(types: !12615)
!12615 = !{!9675, !205}
!12616 = !DILocation(line: 68, column: 58, scope: !12613, inlinedAt: !12617)
!12617 = distinct !DILocation(line: 75, column: 5, scope: !1730, inlinedAt: !12610)
!12618 = !DILocalVariable(name: "i", scope: !12613, file: !7, line: 70, type: !9675)
!12619 = !DILocation(line: 70, column: 13, scope: !12613, inlinedAt: !12617)
!12620 = !DILocation(line: 71, column: 16, scope: !12613, inlinedAt: !12617)
!12621 = !DILocation(line: 71, column: 5, scope: !12613, inlinedAt: !12617)
!12622 = !DILocation(line: 72, column: 12, scope: !12613, inlinedAt: !12617)
!12623 = !DILocation(line: 77, column: 9, scope: !12624, inlinedAt: !12610)
!12624 = distinct !DILexicalBlock(scope: !1730, file: !1572, line: 75, column: 27)
!12625 = !DILocation(line: 79, column: 9, scope: !12624, inlinedAt: !12610)
!12626 = !DILocation(line: 81, column: 9, scope: !12624, inlinedAt: !12610)
!12627 = !DILocation(line: 84, column: 5, scope: !1730, inlinedAt: !12610)
!12628 = !DILocation(line: 85, column: 1, scope: !1730, inlinedAt: !12610)
!12629 = !DILocation(line: 579, column: 48, scope: !12605)
!12630 = !DILocation(line: 579, column: 9, scope: !12574)
!12631 = !DILocalVariable(name: "post_data_separator", scope: !12632, file: !1572, line: 580, type: !52)
!12632 = distinct !DILexicalBlock(scope: !12605, file: !1572, line: 579, column: 72)
!12633 = !DILocation(line: 580, column: 15, scope: !12632)
!12634 = !DILocation(line: 580, column: 45, scope: !12632)
!12635 = !DILocation(line: 580, column: 53, scope: !12632)
!12636 = !DILocation(line: 580, column: 61, scope: !12632)
!12637 = !DILocation(line: 580, column: 37, scope: !12632)
!12638 = !DILocation(line: 581, column: 13, scope: !12639)
!12639 = distinct !DILexicalBlock(scope: !12632, file: !1572, line: 581, column: 13)
!12640 = !DILocation(line: 581, column: 13, scope: !12632)
!12641 = !DILocation(line: 582, column: 17, scope: !12642)
!12642 = distinct !DILexicalBlock(scope: !12643, file: !1572, line: 582, column: 17)
!12643 = distinct !DILexicalBlock(scope: !12639, file: !1572, line: 581, column: 34)
!12644 = !DILocation(line: 582, column: 17, scope: !12643)
!12645 = !DILocation(line: 583, column: 17, scope: !12642)
!12646 = !DILocation(line: 584, column: 9, scope: !12643)
!12647 = !DILocation(line: 585, column: 5, scope: !12632)
!12648 = !DILocation(line: 587, column: 5, scope: !12574)
!12649 = !DILocation(line: 588, column: 1, scope: !12574)
!12650 = distinct !DISubprogram(name: "read_from_request_socket", scope: !1572, file: !1572, line: 488, type: !12651, scopeLine: 491, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!12651 = !DISubroutineType(types: !12652)
!12652 = !{!6, !1580, !1745, !1741, !490, !12653}
!12653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12575, size: 64)
!12654 = !DILocalVariable(name: "request", arg: 1, scope: !12650, file: !1572, line: 488, type: !1580)
!12655 = !DILocation(line: 488, column: 68, scope: !12650)
!12656 = !DILocalVariable(name: "buffer", arg: 2, scope: !12650, file: !1572, line: 489, type: !1745)
!12657 = !DILocation(line: 489, column: 19, scope: !12650)
!12658 = !DILocalVariable(name: "helper", arg: 3, scope: !12650, file: !1572, line: 489, type: !1741)
!12659 = !DILocation(line: 489, column: 57, scope: !12650)
!12660 = !DILocalVariable(name: "buffer_size", arg: 4, scope: !12650, file: !1572, line: 489, type: !490)
!12661 = !DILocation(line: 489, column: 78, scope: !12650)
!12662 = !DILocalVariable(name: "finalizer", arg: 5, scope: !12650, file: !1572, line: 490, type: !12653)
!12663 = !DILocation(line: 490, column: 29, scope: !12650)
!12664 = !DILocalVariable(name: "n", scope: !12650, file: !1572, line: 492, type: !5394)
!12665 = !DILocation(line: 492, column: 13, scope: !12650)
!12666 = !DILocalVariable(name: "total_read", scope: !12650, file: !1572, line: 493, type: !55)
!12667 = !DILocation(line: 493, column: 12, scope: !12650)
!12668 = !DILocalVariable(name: "packets_remaining", scope: !12650, file: !1572, line: 494, type: !34)
!12669 = !DILocation(line: 494, column: 9, scope: !12650)
!12670 = !DILocation(line: 496, column: 9, scope: !12671)
!12671 = distinct !DILexicalBlock(scope: !12650, file: !1572, line: 496, column: 9)
!12672 = !DILocation(line: 496, column: 17, scope: !12671)
!12673 = !DILocation(line: 496, column: 9, scope: !12650)
!12674 = !DILocation(line: 497, column: 33, scope: !12675)
!12675 = distinct !DILexicalBlock(scope: !12671, file: !1572, line: 496, column: 31)
!12676 = !DILocation(line: 497, column: 41, scope: !12675)
!12677 = !DILocation(line: 497, column: 56, scope: !12675)
!12678 = !DILocation(line: 497, column: 64, scope: !12675)
!12679 = !DILocation(line: 497, column: 54, scope: !12675)
!12680 = !DILocation(line: 497, column: 9, scope: !12675)
!12681 = !DILocation(line: 497, column: 17, scope: !12675)
!12682 = !DILocation(line: 497, column: 21, scope: !12675)
!12683 = !DILocation(line: 500, column: 17, scope: !12675)
!12684 = !DILocation(line: 500, column: 25, scope: !12675)
!12685 = !DILocation(line: 500, column: 32, scope: !12675)
!12686 = !DILocation(line: 500, column: 40, scope: !12675)
!12687 = !DILocation(line: 500, column: 54, scope: !12675)
!12688 = !DILocation(line: 500, column: 62, scope: !12675)
!12689 = !DILocation(line: 500, column: 9, scope: !12675)
!12690 = !DILocation(line: 501, column: 22, scope: !12675)
!12691 = !DILocation(line: 501, column: 30, scope: !12675)
!12692 = !DILocation(line: 501, column: 20, scope: !12675)
!12693 = !DILocation(line: 502, column: 9, scope: !12675)
!12694 = !DILocation(line: 505, column: 5, scope: !12650)
!12695 = !DILocation(line: 505, column: 12, scope: !12696)
!12696 = distinct !DILexicalBlock(scope: !12697, file: !1572, line: 505, column: 5)
!12697 = distinct !DILexicalBlock(scope: !12650, file: !1572, line: 505, column: 5)
!12698 = !DILocation(line: 505, column: 30, scope: !12696)
!12699 = !DILocation(line: 505, column: 5, scope: !12697)
!12700 = !DILocation(line: 506, column: 18, scope: !12701)
!12701 = distinct !DILexicalBlock(scope: !12696, file: !1572, line: 505, column: 56)
!12702 = !DILocation(line: 506, column: 27, scope: !12701)
!12703 = !DILocation(line: 506, column: 31, scope: !12701)
!12704 = !DILocation(line: 506, column: 39, scope: !12701)
!12705 = !DILocation(line: 506, column: 47, scope: !12701)
!12706 = !DILocation(line: 506, column: 45, scope: !12701)
!12707 = !DILocation(line: 507, column: 30, scope: !12701)
!12708 = !DILocation(line: 507, column: 44, scope: !12701)
!12709 = !DILocation(line: 507, column: 42, scope: !12701)
!12710 = !DILocation(line: 506, column: 13, scope: !12701)
!12711 = !DILocation(line: 506, column: 11, scope: !12701)
!12712 = !DILocation(line: 509, column: 13, scope: !12713)
!12713 = distinct !DILexicalBlock(scope: !12701, file: !1572, line: 509, column: 13)
!12714 = !DILocation(line: 509, column: 13, scope: !12701)
!12715 = !DILocation(line: 510, column: 24, scope: !12716)
!12716 = distinct !DILexicalBlock(scope: !12713, file: !1572, line: 509, column: 31)
!12717 = !DILocation(line: 510, column: 33, scope: !12716)
!12718 = !DILocation(line: 510, column: 39, scope: !12716)
!12719 = !DILocation(line: 510, column: 13, scope: !12716)
!12720 = !DILocation(line: 511, column: 13, scope: !12716)
!12721 = !DILocation(line: 514, column: 13, scope: !12722)
!12722 = distinct !DILexicalBlock(scope: !12701, file: !1572, line: 514, column: 13)
!12723 = !DILocation(line: 514, column: 13, scope: !12701)
!12724 = !DILocation(line: 515, column: 21, scope: !12725)
!12725 = distinct !DILexicalBlock(scope: !12722, file: !1572, line: 514, column: 30)
!12726 = !DILocation(line: 515, column: 13, scope: !12725)
!12727 = !DILocation(line: 515, column: 28, scope: !12725)
!12728 = !DILabel(scope: !12729, name: "yield_and_read_again", file: !1572, line: 518)
!12729 = distinct !DILexicalBlock(scope: !12725, file: !1572, line: 515, column: 28)
!12730 = !DILocation(line: 518, column: 1, scope: !12729)
!12731 = !DILocation(line: 519, column: 17, scope: !12729)
!12732 = !DILocation(line: 519, column: 26, scope: !12729)
!12733 = !DILocation(line: 519, column: 32, scope: !12729)
!12734 = !DILocation(line: 519, column: 38, scope: !12729)
!12735 = !DILocation(line: 520, column: 28, scope: !12729)
!12736 = !DILocation(line: 520, column: 37, scope: !12729)
!12737 = !DILocation(line: 520, column: 43, scope: !12729)
!12738 = !DILocation(line: 520, column: 17, scope: !12729)
!12739 = !DILocation(line: 521, column: 17, scope: !12729)
!12740 = !DILocation(line: 525, column: 17, scope: !12741)
!12741 = distinct !DILexicalBlock(scope: !12725, file: !1572, line: 525, column: 17)
!12742 = !DILocation(line: 525, column: 17, scope: !12725)
!12743 = !DILocation(line: 526, column: 17, scope: !12741)
!12744 = !DILocation(line: 529, column: 24, scope: !12725)
!12745 = !DILocation(line: 529, column: 33, scope: !12725)
!12746 = !DILocation(line: 529, column: 39, scope: !12725)
!12747 = !DILocation(line: 529, column: 13, scope: !12725)
!12748 = !DILocation(line: 530, column: 13, scope: !12725)
!12749 = !DILocation(line: 533, column: 31, scope: !12701)
!12750 = !DILocation(line: 533, column: 20, scope: !12701)
!12751 = !DILocation(line: 534, column: 9, scope: !12701)
!12752 = !DILocation(line: 534, column: 17, scope: !12701)
!12753 = !DILocation(line: 534, column: 23, scope: !12701)
!12754 = !DILocation(line: 534, column: 35, scope: !12701)
!12755 = !DILocation(line: 535, column: 31, scope: !12701)
!12756 = !DILocation(line: 535, column: 9, scope: !12701)
!12757 = !DILocation(line: 535, column: 17, scope: !12701)
!12758 = !DILocation(line: 535, column: 21, scope: !12701)
!12759 = !DILabel(scope: !12701, name: "try_to_finalize", file: !1572, line: 537)
!12760 = !DILocation(line: 537, column: 1, scope: !12701)
!12761 = !DILocation(line: 538, column: 17, scope: !12701)
!12762 = !DILocation(line: 538, column: 27, scope: !12701)
!12763 = !DILocation(line: 538, column: 39, scope: !12701)
!12764 = !DILocation(line: 538, column: 52, scope: !12701)
!12765 = !DILocation(line: 538, column: 9, scope: !12701)
!12766 = !DILocation(line: 540, column: 13, scope: !12767)
!12767 = distinct !DILexicalBlock(scope: !12701, file: !1572, line: 538, column: 61)
!12768 = !DILocation(line: 540, column: 22, scope: !12767)
!12769 = !DILocation(line: 540, column: 28, scope: !12767)
!12770 = !DILocation(line: 540, column: 34, scope: !12767)
!12771 = !DILocation(line: 541, column: 13, scope: !12767)
!12772 = !DILocation(line: 543, column: 13, scope: !12767)
!12773 = !DILocation(line: 545, column: 13, scope: !12767)
!12774 = !DILocation(line: 547, column: 13, scope: !12767)
!12775 = !DILocation(line: 549, column: 5, scope: !12701)
!12776 = !DILocation(line: 505, column: 52, scope: !12696)
!12777 = !DILocation(line: 505, column: 5, scope: !12696)
!12778 = distinct !{!12778, !12699, !12779, !3413}
!12779 = !DILocation(line: 549, column: 5, scope: !12697)
!12780 = !DILocation(line: 559, column: 5, scope: !12650)
!12781 = !DILocation(line: 560, column: 1, scope: !12650)
!12782 = distinct !DISubprogram(name: "lwan_default_response", scope: !1852, file: !1852, line: 182, type: !12783, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1855, retainedNodes: !286)
!12783 = !DISubroutineType(types: !12784)
!12784 = !{null, !1965, !6}
!12785 = !DILocalVariable(name: "request", arg: 1, scope: !12782, file: !1852, line: 182, type: !1965)
!12786 = !DILocation(line: 182, column: 39, scope: !12782)
!12787 = !DILocalVariable(name: "status", arg: 2, scope: !12782, file: !1852, line: 182, type: !6)
!12788 = !DILocation(line: 182, column: 67, scope: !12782)
!12789 = !DILocation(line: 184, column: 5, scope: !12782)
!12790 = !DILocation(line: 184, column: 14, scope: !12782)
!12791 = !DILocation(line: 184, column: 23, scope: !12782)
!12792 = !DILocation(line: 184, column: 33, scope: !12782)
!12793 = !DILocation(line: 186, column: 32, scope: !12782)
!12794 = !DILocation(line: 186, column: 48, scope: !12782)
!12795 = !DILocation(line: 186, column: 57, scope: !12782)
!12796 = !DILocation(line: 186, column: 66, scope: !12782)
!12797 = !DILocation(line: 187, column: 36, scope: !12782)
!12798 = !DILocation(line: 188, column: 57, scope: !12782)
!12799 = !DILocation(line: 188, column: 30, scope: !12782)
!12800 = !DILocation(line: 189, column: 68, scope: !12782)
!12801 = !DILocation(line: 189, column: 29, scope: !12782)
!12802 = !DILocation(line: 186, column: 5, scope: !12782)
!12803 = !DILocation(line: 192, column: 19, scope: !12782)
!12804 = !DILocation(line: 192, column: 28, scope: !12782)
!12805 = !DILocation(line: 192, column: 5, scope: !12782)
!12806 = !DILocation(line: 193, column: 1, scope: !12782)
!12807 = distinct !DISubprogram(name: "parse_http_request", scope: !1572, file: !1572, line: 634, type: !12452, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!12808 = !DILocalVariable(name: "request", arg: 1, scope: !12807, file: !1572, line: 634, type: !1580)
!12809 = !DILocation(line: 634, column: 36, scope: !12807)
!12810 = !DILocalVariable(name: "helper", arg: 2, scope: !12807, file: !1572, line: 634, type: !1741)
!12811 = !DILocation(line: 634, column: 75, scope: !12807)
!12812 = !DILocalVariable(name: "buffer", scope: !12807, file: !1572, line: 636, type: !52)
!12813 = !DILocation(line: 636, column: 11, scope: !12807)
!12814 = !DILocation(line: 638, column: 40, scope: !12807)
!12815 = !DILocation(line: 638, column: 48, scope: !12807)
!12816 = !DILocation(line: 638, column: 56, scope: !12807)
!12817 = !DILocalVariable(name: "buffer", arg: 1, scope: !12818, file: !1572, line: 467, type: !52)
!12818 = distinct !DISubprogram(name: "ignore_leading_whitespace", scope: !1572, file: !1572, line: 467, type: !7423, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!12819 = !DILocation(line: 467, column: 33, scope: !12818, inlinedAt: !12820)
!12820 = distinct !DILocation(line: 638, column: 14, scope: !12807)
!12821 = !DILocation(line: 469, column: 5, scope: !12818, inlinedAt: !12820)
!12822 = !DILocation(line: 469, column: 13, scope: !12818, inlinedAt: !12820)
!12823 = !DILocation(line: 469, column: 12, scope: !12818, inlinedAt: !12820)
!12824 = !DILocation(line: 469, column: 20, scope: !12818, inlinedAt: !12820)
!12825 = !DILocation(line: 469, column: 33, scope: !12818, inlinedAt: !12820)
!12826 = !DILocation(line: 469, column: 32, scope: !12818, inlinedAt: !12820)
!12827 = !DILocalVariable(name: "ch", arg: 1, scope: !12828, file: !1572, line: 461, type: !53)
!12828 = distinct !DISubprogram(name: "is_space", scope: !1572, file: !1572, line: 461, type: !12829, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!12829 = !DISubroutineType(types: !12830)
!12830 = !{!57, !53}
!12831 = !DILocation(line: 461, column: 15, scope: !12828, inlinedAt: !12832)
!12832 = distinct !DILocation(line: 469, column: 23, scope: !12818, inlinedAt: !12820)
!12833 = !DILocation(line: 463, column: 56, scope: !12828, inlinedAt: !12832)
!12834 = !DILocation(line: 463, column: 41, scope: !12828, inlinedAt: !12832)
!12835 = !DILocation(line: 463, column: 39, scope: !12828, inlinedAt: !12832)
!12836 = !DILocation(line: 463, column: 60, scope: !12828, inlinedAt: !12832)
!12837 = !DILocalVariable(name: "n", arg: 1, scope: !12838, file: !1572, line: 455, type: !57)
!12838 = distinct !DISubprogram(name: "has_zero_byte", scope: !1572, file: !1572, line: 455, type: !12839, scopeLine: 456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!12839 = !DISubroutineType(types: !12840)
!12840 = !{!57, !57}
!12841 = !DILocation(line: 455, column: 29, scope: !12838, inlinedAt: !12842)
!12842 = distinct !DILocation(line: 463, column: 12, scope: !12828, inlinedAt: !12832)
!12843 = !DILocation(line: 457, column: 14, scope: !12838, inlinedAt: !12842)
!12844 = !DILocation(line: 457, column: 16, scope: !12838, inlinedAt: !12842)
!12845 = !DILocation(line: 457, column: 35, scope: !12838, inlinedAt: !12842)
!12846 = !DILocation(line: 457, column: 34, scope: !12838, inlinedAt: !12842)
!12847 = !DILocation(line: 457, column: 32, scope: !12838, inlinedAt: !12842)
!12848 = !DILocation(line: 457, column: 38, scope: !12838, inlinedAt: !12842)
!12849 = !DILocation(line: 0, scope: !12818, inlinedAt: !12820)
!12850 = !DILocation(line: 470, column: 15, scope: !12818, inlinedAt: !12820)
!12851 = distinct !{!12851, !12821, !12850, !3413}
!12852 = !DILocation(line: 471, column: 12, scope: !12818, inlinedAt: !12820)
!12853 = !DILocation(line: 638, column: 12, scope: !12807)
!12854 = !DILocation(line: 639, column: 9, scope: !12855)
!12855 = distinct !DILexicalBlock(scope: !12807, file: !1572, line: 639, column: 9)
!12856 = !DILocation(line: 639, column: 9, scope: !12807)
!12857 = !DILocation(line: 640, column: 9, scope: !12855)
!12858 = !DILocalVariable(name: "path", scope: !12807, file: !1572, line: 642, type: !52)
!12859 = !DILocation(line: 642, column: 11, scope: !12807)
!12860 = !DILocation(line: 642, column: 39, scope: !12807)
!12861 = !DILocation(line: 642, column: 48, scope: !12807)
!12862 = !DILocalVariable(name: "request", arg: 1, scope: !1577, file: !1572, line: 88, type: !1580)
!12863 = !DILocation(line: 88, column: 38, scope: !1577, inlinedAt: !12864)
!12864 = distinct !DILocation(line: 642, column: 18, scope: !12807)
!12865 = !DILocalVariable(name: "buffer", arg: 2, scope: !1577, file: !1572, line: 88, type: !52)
!12866 = !DILocation(line: 88, column: 53, scope: !1577, inlinedAt: !12864)
!12867 = !DILocalVariable(name: "flags", scope: !1577, file: !1572, line: 90, type: !32)
!12868 = !DILocation(line: 90, column: 26, scope: !1577, inlinedAt: !12864)
!12869 = !DILocation(line: 90, column: 50, scope: !1577, inlinedAt: !12864)
!12870 = !DILocation(line: 66, column: 23, scope: !1730, inlinedAt: !12871)
!12871 = distinct !DILocation(line: 90, column: 34, scope: !1577, inlinedAt: !12864)
!12872 = !DILocation(line: 75, column: 5, scope: !1730, inlinedAt: !12871)
!12873 = !DILocation(line: 68, column: 58, scope: !12613, inlinedAt: !12874)
!12874 = distinct !DILocation(line: 75, column: 5, scope: !1730, inlinedAt: !12871)
!12875 = !DILocation(line: 70, column: 13, scope: !12613, inlinedAt: !12874)
!12876 = !DILocation(line: 71, column: 16, scope: !12613, inlinedAt: !12874)
!12877 = !DILocation(line: 71, column: 5, scope: !12613, inlinedAt: !12874)
!12878 = !DILocation(line: 72, column: 12, scope: !12613, inlinedAt: !12874)
!12879 = !DILocation(line: 77, column: 9, scope: !12624, inlinedAt: !12871)
!12880 = !DILocation(line: 79, column: 9, scope: !12624, inlinedAt: !12871)
!12881 = !DILocation(line: 81, column: 9, scope: !12624, inlinedAt: !12871)
!12882 = !DILocation(line: 84, column: 5, scope: !1730, inlinedAt: !12871)
!12883 = !DILocation(line: 85, column: 1, scope: !1730, inlinedAt: !12871)
!12884 = !DILocation(line: 97, column: 23, scope: !1577, inlinedAt: !12864)
!12885 = !DILocation(line: 97, column: 5, scope: !1577, inlinedAt: !12864)
!12886 = !DILocation(line: 97, column: 20, scope: !1577, inlinedAt: !12864)
!12887 = !DILocation(line: 98, column: 12, scope: !1577, inlinedAt: !12864)
!12888 = !DILocation(line: 98, column: 27, scope: !1577, inlinedAt: !12864)
!12889 = !DILocation(line: 98, column: 21, scope: !1577, inlinedAt: !12864)
!12890 = !DILocation(line: 98, column: 19, scope: !1577, inlinedAt: !12864)
!12891 = !DILocation(line: 643, column: 9, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !12807, file: !1572, line: 643, column: 9)
!12893 = !DILocation(line: 643, column: 9, scope: !12807)
!12894 = !DILocation(line: 644, column: 9, scope: !12892)
!12895 = !DILocation(line: 646, column: 33, scope: !12807)
!12896 = !DILocation(line: 646, column: 42, scope: !12807)
!12897 = !DILocation(line: 646, column: 48, scope: !12807)
!12898 = !DILocation(line: 646, column: 14, scope: !12807)
!12899 = !DILocation(line: 646, column: 12, scope: !12807)
!12900 = !DILocation(line: 647, column: 9, scope: !12901)
!12901 = distinct !DILexicalBlock(scope: !12807, file: !1572, line: 647, column: 9)
!12902 = !DILocation(line: 647, column: 9, scope: !12807)
!12903 = !DILocation(line: 648, column: 9, scope: !12901)
!12904 = !DILocation(line: 650, column: 28, scope: !12807)
!12905 = !DILocation(line: 650, column: 36, scope: !12807)
!12906 = !DILocation(line: 650, column: 44, scope: !12807)
!12907 = !DILocation(line: 650, column: 52, scope: !12807)
!12908 = !DILocation(line: 650, column: 60, scope: !12807)
!12909 = !DILocation(line: 650, column: 68, scope: !12807)
!12910 = !DILocation(line: 650, column: 76, scope: !12807)
!12911 = !DILocation(line: 650, column: 84, scope: !12807)
!12912 = !DILocation(line: 650, column: 66, scope: !12807)
!12913 = !DILocation(line: 650, column: 14, scope: !12807)
!12914 = !DILocation(line: 650, column: 12, scope: !12807)
!12915 = !DILocation(line: 651, column: 9, scope: !12916)
!12916 = distinct !DILexicalBlock(scope: !12807, file: !1572, line: 651, column: 9)
!12917 = !DILocation(line: 651, column: 9, scope: !12807)
!12918 = !DILocation(line: 652, column: 9, scope: !12916)
!12919 = !DILocalVariable(name: "decoded_len", scope: !12807, file: !1572, line: 654, type: !55)
!12920 = !DILocation(line: 654, column: 12, scope: !12807)
!12921 = !DILocation(line: 654, column: 37, scope: !12807)
!12922 = !DILocation(line: 654, column: 46, scope: !12807)
!12923 = !DILocation(line: 654, column: 50, scope: !12807)
!12924 = !DILocation(line: 654, column: 26, scope: !12807)
!12925 = !DILocation(line: 655, column: 9, scope: !12926)
!12926 = distinct !DILexicalBlock(scope: !12807, file: !1572, line: 655, column: 9)
!12927 = !DILocation(line: 655, column: 9, scope: !12807)
!12928 = !DILocation(line: 656, column: 9, scope: !12926)
!12929 = !DILocation(line: 657, column: 52, scope: !12807)
!12930 = !DILocation(line: 657, column: 33, scope: !12807)
!12931 = !DILocation(line: 657, column: 42, scope: !12807)
!12932 = !DILocation(line: 657, column: 46, scope: !12807)
!12933 = !DILocation(line: 657, column: 50, scope: !12807)
!12934 = !DILocation(line: 657, column: 5, scope: !12807)
!12935 = !DILocation(line: 657, column: 14, scope: !12807)
!12936 = !DILocation(line: 657, column: 27, scope: !12807)
!12937 = !DILocation(line: 657, column: 31, scope: !12807)
!12938 = !DILocation(line: 659, column: 29, scope: !12807)
!12939 = !DILocation(line: 659, column: 38, scope: !12807)
!12940 = !DILocalVariable(name: "request", arg: 1, scope: !12941, file: !1572, line: 475, type: !1580)
!12941 = distinct !DISubprogram(name: "compute_keep_alive_flag", scope: !1572, file: !1572, line: 475, type: !1770, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!12942 = !DILocation(line: 475, column: 41, scope: !12941, inlinedAt: !12943)
!12943 = distinct !DILocation(line: 659, column: 5, scope: !12807)
!12944 = !DILocalVariable(name: "helper", arg: 2, scope: !12941, file: !1572, line: 475, type: !1741)
!12945 = !DILocation(line: 475, column: 80, scope: !12941, inlinedAt: !12943)
!12946 = !DILocalVariable(name: "is_keep_alive", scope: !12941, file: !1572, line: 477, type: !137)
!12947 = !DILocation(line: 477, column: 10, scope: !12941, inlinedAt: !12943)
!12948 = !DILocation(line: 478, column: 9, scope: !12949, inlinedAt: !12943)
!12949 = distinct !DILexicalBlock(scope: !12941, file: !1572, line: 478, column: 9)
!12950 = !DILocation(line: 478, column: 18, scope: !12949, inlinedAt: !12943)
!12951 = !DILocation(line: 478, column: 24, scope: !12949, inlinedAt: !12943)
!12952 = !DILocation(line: 478, column: 9, scope: !12941, inlinedAt: !12943)
!12953 = !DILocation(line: 479, column: 26, scope: !12949, inlinedAt: !12943)
!12954 = !DILocation(line: 479, column: 34, scope: !12949, inlinedAt: !12943)
!12955 = !DILocation(line: 479, column: 45, scope: !12949, inlinedAt: !12943)
!12956 = !DILocation(line: 479, column: 23, scope: !12949, inlinedAt: !12943)
!12957 = !DILocation(line: 479, column: 9, scope: !12949, inlinedAt: !12943)
!12958 = !DILocation(line: 481, column: 26, scope: !12949, inlinedAt: !12943)
!12959 = !DILocation(line: 481, column: 34, scope: !12949, inlinedAt: !12943)
!12960 = !DILocation(line: 481, column: 45, scope: !12949, inlinedAt: !12943)
!12961 = !DILocation(line: 481, column: 23, scope: !12949, inlinedAt: !12943)
!12962 = !DILocation(line: 482, column: 9, scope: !12963, inlinedAt: !12943)
!12963 = distinct !DILexicalBlock(scope: !12941, file: !1572, line: 482, column: 9)
!12964 = !DILocation(line: 482, column: 9, scope: !12941, inlinedAt: !12943)
!12965 = !DILocation(line: 483, column: 9, scope: !12963, inlinedAt: !12943)
!12966 = !DILocation(line: 483, column: 18, scope: !12963, inlinedAt: !12943)
!12967 = !DILocation(line: 483, column: 30, scope: !12963, inlinedAt: !12943)
!12968 = !DILocation(line: 485, column: 9, scope: !12963, inlinedAt: !12943)
!12969 = !DILocation(line: 485, column: 18, scope: !12963, inlinedAt: !12943)
!12970 = !DILocation(line: 485, column: 30, scope: !12963, inlinedAt: !12943)
!12971 = !DILocation(line: 661, column: 9, scope: !12972)
!12972 = distinct !DILexicalBlock(scope: !12807, file: !1572, line: 661, column: 9)
!12973 = !DILocation(line: 661, column: 18, scope: !12972)
!12974 = !DILocation(line: 661, column: 24, scope: !12972)
!12975 = !DILocation(line: 661, column: 9, scope: !12807)
!12976 = !DILocalVariable(name: "status", scope: !12977, file: !1572, line: 662, type: !6)
!12977 = distinct !DILexicalBlock(scope: !12972, file: !1572, line: 661, column: 47)
!12978 = !DILocation(line: 662, column: 28, scope: !12977)
!12979 = !DILocation(line: 662, column: 52, scope: !12977)
!12980 = !DILocation(line: 662, column: 61, scope: !12977)
!12981 = !DILocation(line: 662, column: 69, scope: !12977)
!12982 = !DILocation(line: 662, column: 37, scope: !12977)
!12983 = !DILocation(line: 663, column: 13, scope: !12984)
!12984 = distinct !DILexicalBlock(scope: !12977, file: !1572, line: 663, column: 13)
!12985 = !DILocation(line: 663, column: 13, scope: !12977)
!12986 = !DILocation(line: 664, column: 20, scope: !12984)
!12987 = !DILocation(line: 664, column: 13, scope: !12984)
!12988 = !DILocation(line: 665, column: 5, scope: !12977)
!12989 = !DILocation(line: 667, column: 5, scope: !12807)
!12990 = !DILocation(line: 668, column: 1, scope: !12807)
!12991 = distinct !DISubprogram(name: "lwan_trie_lookup_prefix", scope: !3222, file: !3222, line: 137, type: !12992, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3324, retainedNodes: !286)
!12992 = !DISubroutineType(types: !12993)
!12993 = !{!111, !9366, !205}
!12994 = !DILocalVariable(name: "trie", arg: 1, scope: !12991, file: !3222, line: 137, type: !9366)
!12995 = !DILocation(line: 137, column: 38, scope: !12991)
!12996 = !DILocalVariable(name: "key", arg: 2, scope: !12991, file: !3222, line: 137, type: !205)
!12997 = !DILocation(line: 137, column: 56, scope: !12991)
!12998 = !DILocation(line: 139, column: 34, scope: !12991)
!12999 = !DILocation(line: 139, column: 40, scope: !12991)
!13000 = !DILocalVariable(name: "trie", arg: 1, scope: !13001, file: !3222, line: 123, type: !9366)
!13001 = distinct !DISubprogram(name: "lwan_trie_lookup_full", scope: !3222, file: !3222, line: 123, type: !13002, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3324, retainedNodes: !286)
!13002 = !DISubroutineType(types: !13003)
!13003 = !{!111, !9366, !205, !137}
!13004 = !DILocation(line: 123, column: 36, scope: !13001, inlinedAt: !13005)
!13005 = distinct !DILocation(line: 139, column: 12, scope: !12991)
!13006 = !DILocalVariable(name: "key", arg: 2, scope: !13001, file: !3222, line: 123, type: !205)
!13007 = !DILocation(line: 123, column: 54, scope: !13001, inlinedAt: !13005)
!13008 = !DILocalVariable(name: "prefix", arg: 3, scope: !13001, file: !3222, line: 123, type: !137)
!13009 = !DILocation(line: 123, column: 64, scope: !13001, inlinedAt: !13005)
!13010 = !DILocation(line: 125, column: 9, scope: !13011, inlinedAt: !13005)
!13011 = distinct !DILexicalBlock(scope: !13001, file: !3222, line: 125, column: 9)
!13012 = !DILocation(line: 125, column: 9, scope: !13001, inlinedAt: !13005)
!13013 = !DILocation(line: 126, column: 9, scope: !13011, inlinedAt: !13005)
!13014 = !DILocalVariable(name: "prefix_len", scope: !13001, file: !3222, line: 128, type: !55)
!13015 = !DILocation(line: 128, column: 12, scope: !13001, inlinedAt: !13005)
!13016 = !DILocalVariable(name: "node", scope: !13001, file: !3222, line: 129, type: !9371)
!13017 = !DILocation(line: 129, column: 23, scope: !13001, inlinedAt: !13005)
!13018 = !DILocation(line: 129, column: 42, scope: !13001, inlinedAt: !13005)
!13019 = !DILocation(line: 129, column: 48, scope: !13001, inlinedAt: !13005)
!13020 = !DILocation(line: 129, column: 54, scope: !13001, inlinedAt: !13005)
!13021 = !DILocation(line: 129, column: 59, scope: !13001, inlinedAt: !13005)
!13022 = !DILocalVariable(name: "root", arg: 1, scope: !13023, file: !3222, line: 103, type: !9371)
!13023 = distinct !DISubprogram(name: "lookup_node", scope: !3222, file: !3222, line: 103, type: !13024, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3324, retainedNodes: !286)
!13024 = !DISubroutineType(types: !13025)
!13025 = !{!9371, !9371, !205, !137, !480}
!13026 = !DILocation(line: 103, column: 31, scope: !13023, inlinedAt: !13027)
!13027 = distinct !DILocation(line: 129, column: 30, scope: !13001, inlinedAt: !13005)
!13028 = !DILocalVariable(name: "key", arg: 2, scope: !13023, file: !3222, line: 103, type: !205)
!13029 = !DILocation(line: 103, column: 49, scope: !13023, inlinedAt: !13027)
!13030 = !DILocalVariable(name: "prefix", arg: 3, scope: !13023, file: !3222, line: 103, type: !137)
!13031 = !DILocation(line: 103, column: 59, scope: !13023, inlinedAt: !13027)
!13032 = !DILocalVariable(name: "prefix_len", arg: 4, scope: !13023, file: !3222, line: 103, type: !480)
!13033 = !DILocation(line: 103, column: 75, scope: !13023, inlinedAt: !13027)
!13034 = !DILocalVariable(name: "node", scope: !13023, file: !3222, line: 105, type: !9371)
!13035 = !DILocation(line: 105, column: 23, scope: !13023, inlinedAt: !13027)
!13036 = !DILocalVariable(name: "previous_node", scope: !13023, file: !3222, line: 105, type: !9371)
!13037 = !DILocation(line: 105, column: 30, scope: !13023, inlinedAt: !13027)
!13038 = !DILocalVariable(name: "orig_key", scope: !13023, file: !3222, line: 106, type: !205)
!13039 = !DILocation(line: 106, column: 17, scope: !13023, inlinedAt: !13027)
!13040 = !DILocation(line: 106, column: 28, scope: !13023, inlinedAt: !13027)
!13041 = !DILocation(line: 108, column: 17, scope: !13042, inlinedAt: !13027)
!13042 = distinct !DILexicalBlock(scope: !13023, file: !3222, line: 108, column: 5)
!13043 = !DILocation(line: 108, column: 15, scope: !13042, inlinedAt: !13027)
!13044 = !DILocation(line: 108, column: 10, scope: !13042, inlinedAt: !13027)
!13045 = !DILocation(line: 108, column: 23, scope: !13046, inlinedAt: !13027)
!13046 = distinct !DILexicalBlock(scope: !13042, file: !3222, line: 108, column: 5)
!13047 = !DILocation(line: 108, column: 28, scope: !13046, inlinedAt: !13027)
!13048 = !DILocation(line: 108, column: 32, scope: !13046, inlinedAt: !13027)
!13049 = !DILocation(line: 108, column: 31, scope: !13046, inlinedAt: !13027)
!13050 = !DILocation(line: 0, scope: !13046, inlinedAt: !13027)
!13051 = !DILocation(line: 108, column: 5, scope: !13042, inlinedAt: !13027)
!13052 = !DILocation(line: 109, column: 13, scope: !13053, inlinedAt: !13027)
!13053 = distinct !DILexicalBlock(scope: !13054, file: !3222, line: 109, column: 13)
!13054 = distinct !DILexicalBlock(scope: !13046, file: !3222, line: 108, column: 75)
!13055 = !DILocation(line: 109, column: 19, scope: !13053, inlinedAt: !13027)
!13056 = !DILocation(line: 109, column: 13, scope: !13054, inlinedAt: !13027)
!13057 = !DILocation(line: 110, column: 29, scope: !13053, inlinedAt: !13027)
!13058 = !DILocation(line: 110, column: 27, scope: !13053, inlinedAt: !13027)
!13059 = !DILocation(line: 110, column: 13, scope: !13053, inlinedAt: !13027)
!13060 = !DILocation(line: 108, column: 44, scope: !13046, inlinedAt: !13027)
!13061 = !DILocation(line: 108, column: 65, scope: !13046, inlinedAt: !13027)
!13062 = !DILocation(line: 108, column: 61, scope: !13046, inlinedAt: !13027)
!13063 = !DILocation(line: 108, column: 68, scope: !13046, inlinedAt: !13027)
!13064 = !DILocation(line: 108, column: 42, scope: !13046, inlinedAt: !13027)
!13065 = !DILocation(line: 108, column: 5, scope: !13046, inlinedAt: !13027)
!13066 = distinct !{!13066, !13051, !13067, !3413}
!13067 = !DILocation(line: 111, column: 5, scope: !13042, inlinedAt: !13027)
!13068 = !DILocation(line: 113, column: 28, scope: !13023, inlinedAt: !13027)
!13069 = !DILocation(line: 113, column: 34, scope: !13023, inlinedAt: !13027)
!13070 = !DILocation(line: 113, column: 32, scope: !13023, inlinedAt: !13027)
!13071 = !DILocation(line: 113, column: 6, scope: !13023, inlinedAt: !13027)
!13072 = !DILocation(line: 113, column: 17, scope: !13023, inlinedAt: !13027)
!13073 = !DILocation(line: 114, column: 9, scope: !13074, inlinedAt: !13027)
!13074 = distinct !DILexicalBlock(scope: !13023, file: !3222, line: 114, column: 9)
!13075 = !DILocation(line: 114, column: 14, scope: !13074, inlinedAt: !13027)
!13076 = !DILocation(line: 114, column: 17, scope: !13074, inlinedAt: !13027)
!13077 = !DILocation(line: 114, column: 23, scope: !13074, inlinedAt: !13027)
!13078 = !DILocation(line: 114, column: 9, scope: !13023, inlinedAt: !13027)
!13079 = !DILocation(line: 115, column: 16, scope: !13074, inlinedAt: !13027)
!13080 = !DILocation(line: 115, column: 9, scope: !13074, inlinedAt: !13027)
!13081 = !DILocation(line: 116, column: 9, scope: !13082, inlinedAt: !13027)
!13082 = distinct !DILexicalBlock(scope: !13023, file: !3222, line: 116, column: 9)
!13083 = !DILocation(line: 116, column: 16, scope: !13082, inlinedAt: !13027)
!13084 = !DILocation(line: 116, column: 19, scope: !13082, inlinedAt: !13027)
!13085 = !DILocation(line: 116, column: 9, scope: !13023, inlinedAt: !13027)
!13086 = !DILocation(line: 117, column: 16, scope: !13082, inlinedAt: !13027)
!13087 = !DILocation(line: 117, column: 9, scope: !13082, inlinedAt: !13027)
!13088 = !DILocation(line: 118, column: 5, scope: !13023, inlinedAt: !13027)
!13089 = !DILocation(line: 119, column: 1, scope: !13023, inlinedAt: !13027)
!13090 = !DILocation(line: 130, column: 10, scope: !13091, inlinedAt: !13005)
!13091 = distinct !DILexicalBlock(scope: !13001, file: !3222, line: 130, column: 9)
!13092 = !DILocation(line: 130, column: 9, scope: !13001, inlinedAt: !13005)
!13093 = !DILocation(line: 131, column: 9, scope: !13091, inlinedAt: !13005)
!13094 = !DILocalVariable(name: "leaf", scope: !13001, file: !3222, line: 132, type: !9378)
!13095 = !DILocation(line: 132, column: 23, scope: !13001, inlinedAt: !13005)
!13096 = !DILocation(line: 132, column: 49, scope: !13001, inlinedAt: !13005)
!13097 = !DILocation(line: 132, column: 55, scope: !13001, inlinedAt: !13005)
!13098 = !DILocation(line: 132, column: 60, scope: !13001, inlinedAt: !13005)
!13099 = !DILocation(line: 36, column: 38, scope: !9574, inlinedAt: !13100)
!13100 = distinct !DILocation(line: 132, column: 30, scope: !13001, inlinedAt: !13005)
!13101 = !DILocation(line: 36, column: 56, scope: !9574, inlinedAt: !13100)
!13102 = !DILocation(line: 36, column: 68, scope: !9574, inlinedAt: !13100)
!13103 = !DILocation(line: 38, column: 23, scope: !9574, inlinedAt: !13100)
!13104 = !DILocation(line: 38, column: 30, scope: !9574, inlinedAt: !13100)
!13105 = !DILocation(line: 38, column: 36, scope: !9574, inlinedAt: !13100)
!13106 = !DILocation(line: 40, column: 10, scope: !9588, inlinedAt: !13100)
!13107 = !DILocation(line: 40, column: 9, scope: !9574, inlinedAt: !13100)
!13108 = !DILocation(line: 41, column: 9, scope: !9588, inlinedAt: !13100)
!13109 = !DILocation(line: 43, column: 10, scope: !9592, inlinedAt: !13100)
!13110 = !DILocation(line: 43, column: 16, scope: !9592, inlinedAt: !13100)
!13111 = !DILocation(line: 43, column: 9, scope: !9574, inlinedAt: !13100)
!13112 = !DILocation(line: 44, column: 16, scope: !9592, inlinedAt: !13100)
!13113 = !DILocation(line: 44, column: 9, scope: !9592, inlinedAt: !13100)
!13114 = !DILocation(line: 46, column: 5, scope: !9574, inlinedAt: !13100)
!13115 = !DILocation(line: 46, column: 12, scope: !9599, inlinedAt: !13100)
!13116 = !DILocation(line: 46, column: 5, scope: !9600, inlinedAt: !13100)
!13117 = !DILocation(line: 47, column: 22, scope: !9603, inlinedAt: !13100)
!13118 = !DILocation(line: 47, column: 28, scope: !9603, inlinedAt: !13100)
!13119 = !DILocation(line: 47, column: 33, scope: !9603, inlinedAt: !13100)
!13120 = !DILocation(line: 47, column: 38, scope: !9603, inlinedAt: !13100)
!13121 = !DILocation(line: 47, column: 42, scope: !9603, inlinedAt: !13100)
!13122 = !DILocation(line: 47, column: 14, scope: !9603, inlinedAt: !13100)
!13123 = !DILocation(line: 47, column: 13, scope: !9604, inlinedAt: !13100)
!13124 = !DILocation(line: 48, column: 20, scope: !9603, inlinedAt: !13100)
!13125 = !DILocation(line: 48, column: 13, scope: !9603, inlinedAt: !13100)
!13126 = !DILocation(line: 46, column: 25, scope: !9599, inlinedAt: !13100)
!13127 = !DILocation(line: 46, column: 31, scope: !9599, inlinedAt: !13100)
!13128 = !DILocation(line: 46, column: 23, scope: !9599, inlinedAt: !13100)
!13129 = !DILocation(line: 46, column: 5, scope: !9599, inlinedAt: !13100)
!13130 = distinct !{!13130, !13116, !13131, !3413}
!13131 = !DILocation(line: 49, column: 5, scope: !9600, inlinedAt: !13100)
!13132 = !DILocation(line: 51, column: 5, scope: !9574, inlinedAt: !13100)
!13133 = !DILocation(line: 52, column: 1, scope: !9574, inlinedAt: !13100)
!13134 = !DILocation(line: 133, column: 12, scope: !13001, inlinedAt: !13005)
!13135 = !DILocation(line: 133, column: 19, scope: !13001, inlinedAt: !13005)
!13136 = !DILocation(line: 133, column: 25, scope: !13001, inlinedAt: !13005)
!13137 = !DILocation(line: 133, column: 5, scope: !13001, inlinedAt: !13005)
!13138 = !DILocation(line: 134, column: 1, scope: !13001, inlinedAt: !13005)
!13139 = !DILocation(line: 139, column: 5, scope: !12991)
!13140 = distinct !DISubprogram(name: "prepare_for_response", scope: !1572, file: !1572, line: 671, type: !13141, scopeLine: 674, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!13141 = !DISubroutineType(types: !13142)
!13142 = !{!6, !12412, !1580, !1741}
!13143 = !DILocalVariable(name: "url_map", arg: 1, scope: !13140, file: !1572, line: 671, type: !12412)
!13144 = !DILocation(line: 671, column: 38, scope: !13140)
!13145 = !DILocalVariable(name: "request", arg: 2, scope: !13140, file: !1572, line: 672, type: !1580)
!13146 = !DILocation(line: 672, column: 39, scope: !13140)
!13147 = !DILocalVariable(name: "helper", arg: 3, scope: !13140, file: !1572, line: 673, type: !1741)
!13148 = !DILocation(line: 673, column: 53, scope: !13140)
!13149 = !DILocation(line: 675, column: 9, scope: !13150)
!13150 = distinct !DILexicalBlock(scope: !13140, file: !1572, line: 675, column: 9)
!13151 = !DILocation(line: 675, column: 18, scope: !13150)
!13152 = !DILocation(line: 675, column: 24, scope: !13150)
!13153 = !DILocation(line: 675, column: 9, scope: !13140)
!13154 = !DILocation(line: 676, column: 28, scope: !13150)
!13155 = !DILocation(line: 676, column: 37, scope: !13150)
!13156 = !DILocation(line: 676, column: 9, scope: !13150)
!13157 = !DILocation(line: 678, column: 9, scope: !13158)
!13158 = distinct !DILexicalBlock(scope: !13140, file: !1572, line: 678, column: 9)
!13159 = !DILocation(line: 678, column: 18, scope: !13158)
!13160 = !DILocation(line: 678, column: 24, scope: !13158)
!13161 = !DILocation(line: 678, column: 9, scope: !13140)
!13162 = !DILocation(line: 679, column: 33, scope: !13158)
!13163 = !DILocation(line: 679, column: 42, scope: !13158)
!13164 = !DILocation(line: 679, column: 9, scope: !13158)
!13165 = !DILocation(line: 681, column: 9, scope: !13166)
!13166 = distinct !DILexicalBlock(scope: !13140, file: !1572, line: 681, column: 9)
!13167 = !DILocation(line: 681, column: 18, scope: !13166)
!13168 = !DILocation(line: 681, column: 24, scope: !13166)
!13169 = !DILocation(line: 681, column: 9, scope: !13140)
!13170 = !DILocation(line: 682, column: 21, scope: !13166)
!13171 = !DILocation(line: 682, column: 30, scope: !13166)
!13172 = !DILocation(line: 682, column: 9, scope: !13166)
!13173 = !DILocation(line: 684, column: 9, scope: !13174)
!13174 = distinct !DILexicalBlock(scope: !13140, file: !1572, line: 684, column: 9)
!13175 = !DILocation(line: 684, column: 18, scope: !13174)
!13176 = !DILocation(line: 684, column: 24, scope: !13174)
!13177 = !DILocation(line: 684, column: 9, scope: !13140)
!13178 = !DILocation(line: 685, column: 31, scope: !13174)
!13179 = !DILocation(line: 685, column: 40, scope: !13174)
!13180 = !DILocation(line: 685, column: 9, scope: !13174)
!13181 = !DILocation(line: 687, column: 9, scope: !13182)
!13182 = distinct !DILexicalBlock(scope: !13140, file: !1572, line: 687, column: 9)
!13183 = !DILocation(line: 687, column: 18, scope: !13182)
!13184 = !DILocation(line: 687, column: 24, scope: !13182)
!13185 = !DILocation(line: 687, column: 9, scope: !13140)
!13186 = !DILocation(line: 688, column: 13, scope: !13187)
!13187 = distinct !DILexicalBlock(scope: !13188, file: !1572, line: 688, column: 13)
!13188 = distinct !DILexicalBlock(scope: !13182, file: !1572, line: 687, column: 47)
!13189 = !DILocation(line: 688, column: 22, scope: !13187)
!13190 = !DILocation(line: 688, column: 28, scope: !13187)
!13191 = !DILocation(line: 688, column: 13, scope: !13188)
!13192 = !DILocation(line: 689, column: 29, scope: !13187)
!13193 = !DILocation(line: 689, column: 38, scope: !13187)
!13194 = !DILocation(line: 689, column: 13, scope: !13187)
!13195 = !DILocation(line: 691, column: 13, scope: !13187)
!13196 = !DILocation(line: 692, column: 5, scope: !13188)
!13197 = !DILocation(line: 694, column: 9, scope: !13198)
!13198 = distinct !DILexicalBlock(scope: !13140, file: !1572, line: 694, column: 9)
!13199 = !DILocation(line: 694, column: 18, scope: !13198)
!13200 = !DILocation(line: 694, column: 24, scope: !13198)
!13201 = !DILocation(line: 694, column: 9, scope: !13140)
!13202 = !DILocation(line: 695, column: 34, scope: !13203)
!13203 = distinct !DILexicalBlock(scope: !13204, file: !1572, line: 695, column: 13)
!13204 = distinct !DILexicalBlock(scope: !13198, file: !1572, line: 694, column: 50)
!13205 = !DILocation(line: 696, column: 26, scope: !13203)
!13206 = !DILocation(line: 696, column: 34, scope: !13203)
!13207 = !DILocation(line: 697, column: 25, scope: !13203)
!13208 = !DILocation(line: 697, column: 34, scope: !13203)
!13209 = !DILocation(line: 697, column: 48, scope: !13203)
!13210 = !DILocation(line: 698, column: 25, scope: !13203)
!13211 = !DILocation(line: 698, column: 34, scope: !13203)
!13212 = !DILocation(line: 698, column: 48, scope: !13203)
!13213 = !DILocation(line: 695, column: 14, scope: !13203)
!13214 = !DILocation(line: 695, column: 13, scope: !13204)
!13215 = !DILocation(line: 699, column: 13, scope: !13203)
!13216 = !DILocation(line: 700, column: 5, scope: !13204)
!13217 = !DILocation(line: 702, column: 9, scope: !13218)
!13218 = distinct !DILexicalBlock(scope: !13140, file: !1572, line: 702, column: 9)
!13219 = !DILocation(line: 702, column: 18, scope: !13218)
!13220 = !DILocation(line: 702, column: 24, scope: !13218)
!13221 = !DILocation(line: 702, column: 9, scope: !13140)
!13222 = !DILocation(line: 703, column: 9, scope: !13223)
!13223 = distinct !DILexicalBlock(scope: !13218, file: !1572, line: 702, column: 56)
!13224 = !DILocation(line: 703, column: 17, scope: !13223)
!13225 = !DILocation(line: 703, column: 26, scope: !13223)
!13226 = !DILocation(line: 703, column: 30, scope: !13223)
!13227 = !DILocation(line: 703, column: 16, scope: !13223)
!13228 = !DILocation(line: 703, column: 36, scope: !13223)
!13229 = !DILocation(line: 703, column: 43, scope: !13223)
!13230 = !DILocation(line: 703, column: 46, scope: !13223)
!13231 = !DILocation(line: 703, column: 55, scope: !13223)
!13232 = !DILocation(line: 703, column: 59, scope: !13223)
!13233 = !DILocation(line: 703, column: 63, scope: !13223)
!13234 = !DILocation(line: 0, scope: !13223)
!13235 = !DILocation(line: 704, column: 15, scope: !13236)
!13236 = distinct !DILexicalBlock(scope: !13223, file: !1572, line: 703, column: 68)
!13237 = !DILocation(line: 704, column: 24, scope: !13236)
!13238 = !DILocation(line: 704, column: 28, scope: !13236)
!13239 = !DILocation(line: 704, column: 13, scope: !13236)
!13240 = !DILocation(line: 705, column: 15, scope: !13236)
!13241 = !DILocation(line: 705, column: 24, scope: !13236)
!13242 = !DILocation(line: 705, column: 28, scope: !13236)
!13243 = !DILocation(line: 705, column: 13, scope: !13236)
!13244 = distinct !{!13244, !13222, !13245, !3413}
!13245 = !DILocation(line: 706, column: 9, scope: !13223)
!13246 = !DILocation(line: 707, column: 5, scope: !13223)
!13247 = !DILocation(line: 709, column: 5, scope: !13140)
!13248 = !DILocation(line: 710, column: 1, scope: !13140)
!13249 = distinct !DISubprogram(name: "lwan_response", scope: !1852, file: !1852, line: 122, type: !12783, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1855, retainedNodes: !286)
!13250 = !DILocalVariable(name: "request", arg: 1, scope: !13249, file: !1852, line: 122, type: !1965)
!13251 = !DILocation(line: 122, column: 31, scope: !13249)
!13252 = !DILocalVariable(name: "status", arg: 2, scope: !13249, file: !1852, line: 122, type: !6)
!13253 = !DILocation(line: 122, column: 59, scope: !13249)
!13254 = !DILocalVariable(name: "headers", scope: !13249, file: !1852, line: 124, type: !6271)
!13255 = !DILocation(line: 124, column: 10, scope: !13249)
!13256 = !DILocation(line: 126, column: 9, scope: !13257)
!13257 = distinct !DILexicalBlock(scope: !13249, file: !1852, line: 126, column: 9)
!13258 = !DILocation(line: 126, column: 18, scope: !13257)
!13259 = !DILocation(line: 126, column: 24, scope: !13257)
!13260 = !DILocation(line: 126, column: 9, scope: !13249)
!13261 = !DILocation(line: 128, column: 13, scope: !13262)
!13262 = distinct !DILexicalBlock(scope: !13263, file: !1852, line: 128, column: 13)
!13263 = distinct !DILexicalBlock(scope: !13257, file: !1852, line: 126, column: 53)
!13264 = !DILocation(line: 128, column: 13, scope: !13263)
!13265 = !DILocation(line: 129, column: 24, scope: !13262)
!13266 = !DILocation(line: 129, column: 33, scope: !13262)
!13267 = !DILocation(line: 129, column: 39, scope: !13262)
!13268 = !DILocation(line: 129, column: 13, scope: !13262)
!13269 = !DILocation(line: 130, column: 34, scope: !13263)
!13270 = !DILocation(line: 130, column: 9, scope: !13263)
!13271 = !DILocation(line: 131, column: 21, scope: !13263)
!13272 = !DILocation(line: 131, column: 30, scope: !13263)
!13273 = !DILocation(line: 131, column: 9, scope: !13263)
!13274 = !DILocation(line: 132, column: 9, scope: !13263)
!13275 = !DILocation(line: 135, column: 9, scope: !13276)
!13276 = distinct !DILexicalBlock(scope: !13249, file: !1852, line: 135, column: 9)
!13277 = !DILocation(line: 135, column: 9, scope: !13249)
!13278 = !DILocation(line: 136, column: 9, scope: !13279)
!13279 = distinct !DILexicalBlock(scope: !13276, file: !1852, line: 135, column: 59)
!13280 = !DILocation(line: 137, column: 9, scope: !13279)
!13281 = !DILocation(line: 142, column: 9, scope: !13282)
!13282 = distinct !DILexicalBlock(scope: !13249, file: !1852, line: 142, column: 9)
!13283 = !DILocation(line: 142, column: 9, scope: !13249)
!13284 = !DILocation(line: 143, column: 31, scope: !13285)
!13285 = distinct !DILexicalBlock(scope: !13282, file: !1852, line: 142, column: 49)
!13286 = !DILocation(line: 143, column: 40, scope: !13285)
!13287 = !DILocation(line: 143, column: 9, scope: !13285)
!13288 = !DILocation(line: 144, column: 9, scope: !13285)
!13289 = !DILocation(line: 147, column: 17, scope: !13249)
!13290 = !DILocation(line: 147, column: 26, scope: !13249)
!13291 = !DILocation(line: 147, column: 5, scope: !13249)
!13292 = !DILocation(line: 149, column: 9, scope: !13293)
!13293 = distinct !DILexicalBlock(scope: !13249, file: !1852, line: 149, column: 9)
!13294 = !DILocation(line: 149, column: 18, scope: !13293)
!13295 = !DILocation(line: 149, column: 27, scope: !13293)
!13296 = !DILocation(line: 149, column: 34, scope: !13293)
!13297 = !DILocation(line: 149, column: 9, scope: !13249)
!13298 = !DILocalVariable(name: "callback_status", scope: !13299, file: !1852, line: 150, type: !6)
!13299 = distinct !DILexicalBlock(scope: !13293, file: !1852, line: 149, column: 44)
!13300 = !DILocation(line: 150, column: 28, scope: !13299)
!13301 = !DILocation(line: 152, column: 27, scope: !13299)
!13302 = !DILocation(line: 152, column: 36, scope: !13299)
!13303 = !DILocation(line: 152, column: 45, scope: !13299)
!13304 = !DILocation(line: 152, column: 52, scope: !13299)
!13305 = !DILocation(line: 152, column: 61, scope: !13299)
!13306 = !DILocation(line: 153, column: 21, scope: !13299)
!13307 = !DILocation(line: 153, column: 30, scope: !13299)
!13308 = !DILocation(line: 153, column: 39, scope: !13299)
!13309 = !DILocation(line: 153, column: 46, scope: !13299)
!13310 = !DILocation(line: 152, column: 25, scope: !13299)
!13311 = !DILocation(line: 155, column: 9, scope: !13299)
!13312 = !DILocation(line: 155, column: 18, scope: !13299)
!13313 = !DILocation(line: 155, column: 27, scope: !13299)
!13314 = !DILocation(line: 155, column: 34, scope: !13299)
!13315 = !DILocation(line: 155, column: 43, scope: !13299)
!13316 = !DILocation(line: 157, column: 13, scope: !13317)
!13317 = distinct !DILexicalBlock(scope: !13299, file: !1852, line: 157, column: 13)
!13318 = !DILocation(line: 157, column: 29, scope: !13317)
!13319 = !DILocation(line: 157, column: 13, scope: !13299)
!13320 = !DILocation(line: 158, column: 35, scope: !13317)
!13321 = !DILocation(line: 158, column: 44, scope: !13317)
!13322 = !DILocation(line: 158, column: 13, scope: !13317)
!13323 = !DILocation(line: 159, column: 9, scope: !13299)
!13324 = !DILocalVariable(name: "header_len", scope: !13249, file: !1852, line: 162, type: !55)
!13325 = !DILocation(line: 162, column: 12, scope: !13249)
!13326 = !DILocation(line: 162, column: 54, scope: !13249)
!13327 = !DILocation(line: 162, column: 63, scope: !13249)
!13328 = !DILocation(line: 162, column: 71, scope: !13249)
!13329 = !DILocalVariable(name: "request", arg: 1, scope: !13330, file: !1852, line: 231, type: !1965)
!13330 = distinct !DISubprogram(name: "lwan_prepare_response_header", scope: !1852, file: !1852, line: 231, type: !13331, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1855, retainedNodes: !286)
!13331 = !DISubroutineType(types: !13332)
!13332 = !{!55, !1965, !6, !52, !55}
!13333 = !DILocation(line: 231, column: 46, scope: !13330, inlinedAt: !13334)
!13334 = distinct !DILocation(line: 162, column: 25, scope: !13249)
!13335 = !DILocalVariable(name: "status", arg: 2, scope: !13330, file: !1852, line: 231, type: !6)
!13336 = !DILocation(line: 231, column: 74, scope: !13330, inlinedAt: !13334)
!13337 = !DILocalVariable(name: "headers", arg: 3, scope: !13330, file: !1852, line: 231, type: !52)
!13338 = !DILocation(line: 231, column: 87, scope: !13330, inlinedAt: !13334)
!13339 = !DILocalVariable(name: "headers_buf_size", arg: 4, scope: !13330, file: !1852, line: 231, type: !55)
!13340 = !DILocation(line: 231, column: 105, scope: !13330, inlinedAt: !13334)
!13341 = !DILocalVariable(name: "p_headers", scope: !13330, file: !1852, line: 233, type: !52)
!13342 = !DILocation(line: 233, column: 11, scope: !13330, inlinedAt: !13334)
!13343 = !DILocalVariable(name: "p_headers_end", scope: !13330, file: !1852, line: 234, type: !52)
!13344 = !DILocation(line: 234, column: 11, scope: !13330, inlinedAt: !13334)
!13345 = !DILocation(line: 234, column: 27, scope: !13330, inlinedAt: !13334)
!13346 = !DILocation(line: 234, column: 37, scope: !13330, inlinedAt: !13334)
!13347 = !DILocation(line: 234, column: 35, scope: !13330, inlinedAt: !13334)
!13348 = !DILocalVariable(name: "buffer", scope: !13330, file: !1852, line: 235, type: !309)
!13349 = !DILocation(line: 235, column: 10, scope: !13330, inlinedAt: !13334)
!13350 = !DILocalVariable(name: "date_overridden", scope: !13330, file: !1852, line: 236, type: !137)
!13351 = !DILocation(line: 236, column: 10, scope: !13330, inlinedAt: !13334)
!13352 = !DILocalVariable(name: "expires_overridden", scope: !13330, file: !1852, line: 237, type: !137)
!13353 = !DILocation(line: 237, column: 10, scope: !13330, inlinedAt: !13334)
!13354 = !DILocation(line: 239, column: 17, scope: !13330, inlinedAt: !13334)
!13355 = !DILocation(line: 239, column: 15, scope: !13330, inlinedAt: !13334)
!13356 = !DILocation(line: 241, column: 9, scope: !13357, inlinedAt: !13334)
!13357 = distinct !DILexicalBlock(scope: !13330, file: !1852, line: 241, column: 9)
!13358 = !DILocation(line: 241, column: 18, scope: !13357, inlinedAt: !13334)
!13359 = !DILocation(line: 241, column: 24, scope: !13357, inlinedAt: !13334)
!13360 = !DILocation(line: 241, column: 9, scope: !13330, inlinedAt: !13334)
!13361 = !DILocation(line: 242, column: 9, scope: !13362, inlinedAt: !13334)
!13362 = distinct !DILexicalBlock(scope: !13363, file: !1852, line: 242, column: 9)
!13363 = distinct !DILexicalBlock(scope: !13357, file: !1852, line: 242, column: 9)
!13364 = !DILocation(line: 242, column: 9, scope: !13363, inlinedAt: !13334)
!13365 = !DILocation(line: 244, column: 9, scope: !13366, inlinedAt: !13334)
!13366 = distinct !DILexicalBlock(scope: !13367, file: !1852, line: 244, column: 9)
!13367 = distinct !DILexicalBlock(scope: !13357, file: !1852, line: 244, column: 9)
!13368 = !DILocation(line: 244, column: 9, scope: !13367, inlinedAt: !13334)
!13369 = !DILocalVariable(name: "len", scope: !13370, file: !1852, line: 245, type: !55)
!13370 = distinct !DILexicalBlock(scope: !13330, file: !1852, line: 245, column: 5)
!13371 = !DILocation(line: 245, column: 5, scope: !13370, inlinedAt: !13334)
!13372 = !DILocation(line: 245, column: 5, scope: !13373, inlinedAt: !13334)
!13373 = distinct !DILexicalBlock(scope: !13374, file: !1852, line: 245, column: 5)
!13374 = distinct !DILexicalBlock(scope: !13370, file: !1852, line: 245, column: 5)
!13375 = !DILocation(line: 245, column: 5, scope: !13374, inlinedAt: !13334)
!13376 = !DILocation(line: 247, column: 9, scope: !13377, inlinedAt: !13334)
!13377 = distinct !DILexicalBlock(scope: !13330, file: !1852, line: 247, column: 9)
!13378 = !DILocation(line: 247, column: 18, scope: !13377, inlinedAt: !13334)
!13379 = !DILocation(line: 247, column: 24, scope: !13377, inlinedAt: !13334)
!13380 = !DILocation(line: 247, column: 9, scope: !13330, inlinedAt: !13334)
!13381 = !DILocation(line: 248, column: 9, scope: !13382, inlinedAt: !13334)
!13382 = distinct !DILexicalBlock(scope: !13383, file: !1852, line: 248, column: 9)
!13383 = distinct !DILexicalBlock(scope: !13384, file: !1852, line: 248, column: 9)
!13384 = distinct !DILexicalBlock(scope: !13377, file: !1852, line: 247, column: 53)
!13385 = !DILocation(line: 248, column: 9, scope: !13383, inlinedAt: !13334)
!13386 = !DILocation(line: 249, column: 5, scope: !13384, inlinedAt: !13334)
!13387 = !DILocation(line: 249, column: 16, scope: !13388, inlinedAt: !13334)
!13388 = distinct !DILexicalBlock(scope: !13377, file: !1852, line: 249, column: 16)
!13389 = !DILocation(line: 249, column: 25, scope: !13388, inlinedAt: !13334)
!13390 = !DILocation(line: 249, column: 31, scope: !13388, inlinedAt: !13334)
!13391 = !DILocation(line: 249, column: 16, scope: !13377, inlinedAt: !13334)
!13392 = !DILocation(line: 251, column: 5, scope: !13393, inlinedAt: !13334)
!13393 = distinct !DILexicalBlock(scope: !13388, file: !1852, line: 249, column: 61)
!13394 = !DILocation(line: 252, column: 9, scope: !13395, inlinedAt: !13334)
!13395 = distinct !DILexicalBlock(scope: !13396, file: !1852, line: 252, column: 9)
!13396 = distinct !DILexicalBlock(scope: !13397, file: !1852, line: 252, column: 9)
!13397 = distinct !DILexicalBlock(scope: !13388, file: !1852, line: 251, column: 12)
!13398 = !DILocation(line: 252, column: 9, scope: !13396, inlinedAt: !13334)
!13399 = !DILocation(line: 253, column: 13, scope: !13400, inlinedAt: !13334)
!13400 = distinct !DILexicalBlock(scope: !13397, file: !1852, line: 253, column: 13)
!13401 = !DILocation(line: 253, column: 22, scope: !13400, inlinedAt: !13334)
!13402 = !DILocation(line: 253, column: 31, scope: !13400, inlinedAt: !13334)
!13403 = !DILocation(line: 253, column: 38, scope: !13400, inlinedAt: !13334)
!13404 = !DILocation(line: 253, column: 13, scope: !13397, inlinedAt: !13334)
!13405 = !DILocalVariable(name: "len", scope: !13406, file: !1852, line: 254, type: !55)
!13406 = distinct !DILexicalBlock(scope: !13400, file: !1852, line: 254, column: 13)
!13407 = !DILocation(line: 254, column: 13, scope: !13406, inlinedAt: !13334)
!13408 = !DILocalVariable(name: "tmp", scope: !13406, file: !1852, line: 254, type: !52)
!13409 = !DILocation(line: 254, column: 13, scope: !13410, inlinedAt: !13334)
!13410 = distinct !DILexicalBlock(scope: !13406, file: !1852, line: 254, column: 13)
!13411 = !DILocation(line: 254, column: 13, scope: !13412, inlinedAt: !13334)
!13412 = distinct !DILexicalBlock(scope: !13413, file: !1852, line: 254, column: 13)
!13413 = distinct !DILexicalBlock(scope: !13406, file: !1852, line: 254, column: 13)
!13414 = !DILocation(line: 254, column: 13, scope: !13413, inlinedAt: !13334)
!13415 = !DILocalVariable(name: "len", scope: !13416, file: !1852, line: 256, type: !55)
!13416 = distinct !DILexicalBlock(scope: !13400, file: !1852, line: 256, column: 13)
!13417 = !DILocation(line: 256, column: 13, scope: !13416, inlinedAt: !13334)
!13418 = !DILocalVariable(name: "tmp", scope: !13416, file: !1852, line: 256, type: !52)
!13419 = !DILocation(line: 256, column: 13, scope: !13420, inlinedAt: !13334)
!13420 = distinct !DILexicalBlock(scope: !13416, file: !1852, line: 256, column: 13)
!13421 = !DILocation(line: 256, column: 13, scope: !13422, inlinedAt: !13334)
!13422 = distinct !DILexicalBlock(scope: !13423, file: !1852, line: 256, column: 13)
!13423 = distinct !DILexicalBlock(scope: !13416, file: !1852, line: 256, column: 13)
!13424 = !DILocation(line: 256, column: 13, scope: !13423, inlinedAt: !13334)
!13425 = !DILocation(line: 259, column: 5, scope: !13426, inlinedAt: !13334)
!13426 = distinct !DILexicalBlock(scope: !13427, file: !1852, line: 259, column: 5)
!13427 = distinct !DILexicalBlock(scope: !13330, file: !1852, line: 259, column: 5)
!13428 = !DILocation(line: 259, column: 5, scope: !13427, inlinedAt: !13334)
!13429 = !DILocalVariable(name: "len", scope: !13430, file: !1852, line: 260, type: !55)
!13430 = distinct !DILexicalBlock(scope: !13330, file: !1852, line: 260, column: 5)
!13431 = !DILocation(line: 260, column: 5, scope: !13430, inlinedAt: !13334)
!13432 = !DILocation(line: 260, column: 5, scope: !13433, inlinedAt: !13334)
!13433 = distinct !DILexicalBlock(scope: !13434, file: !1852, line: 260, column: 5)
!13434 = distinct !DILexicalBlock(scope: !13430, file: !1852, line: 260, column: 5)
!13435 = !DILocation(line: 260, column: 5, scope: !13434, inlinedAt: !13334)
!13436 = !DILocation(line: 262, column: 9, scope: !13437, inlinedAt: !13334)
!13437 = distinct !DILexicalBlock(scope: !13330, file: !1852, line: 262, column: 9)
!13438 = !DILocation(line: 262, column: 18, scope: !13437, inlinedAt: !13334)
!13439 = !DILocation(line: 262, column: 24, scope: !13437, inlinedAt: !13334)
!13440 = !DILocation(line: 262, column: 30, scope: !13437, inlinedAt: !13334)
!13441 = !DILocation(line: 262, column: 9, scope: !13330, inlinedAt: !13334)
!13442 = !DILocation(line: 263, column: 9, scope: !13443, inlinedAt: !13334)
!13443 = distinct !DILexicalBlock(scope: !13444, file: !1852, line: 263, column: 9)
!13444 = distinct !DILexicalBlock(scope: !13437, file: !1852, line: 263, column: 9)
!13445 = !DILocation(line: 263, column: 9, scope: !13444, inlinedAt: !13334)
!13446 = !DILocation(line: 265, column: 9, scope: !13447, inlinedAt: !13334)
!13447 = distinct !DILexicalBlock(scope: !13448, file: !1852, line: 265, column: 9)
!13448 = distinct !DILexicalBlock(scope: !13437, file: !1852, line: 265, column: 9)
!13449 = !DILocation(line: 265, column: 9, scope: !13448, inlinedAt: !13334)
!13450 = !DILocation(line: 267, column: 10, scope: !13451, inlinedAt: !13334)
!13451 = distinct !DILexicalBlock(scope: !13330, file: !1852, line: 267, column: 9)
!13452 = !DILocation(line: 267, column: 17, scope: !13451, inlinedAt: !13334)
!13453 = !DILocation(line: 267, column: 36, scope: !13451, inlinedAt: !13334)
!13454 = !DILocation(line: 267, column: 39, scope: !13451, inlinedAt: !13334)
!13455 = !DILocation(line: 267, column: 48, scope: !13451, inlinedAt: !13334)
!13456 = !DILocation(line: 267, column: 57, scope: !13451, inlinedAt: !13334)
!13457 = !DILocation(line: 267, column: 9, scope: !13330, inlinedAt: !13334)
!13458 = !DILocalVariable(name: "header", scope: !13459, file: !1852, line: 268, type: !2051)
!13459 = distinct !DILexicalBlock(scope: !13451, file: !1852, line: 267, column: 67)
!13460 = !DILocation(line: 268, column: 27, scope: !13459, inlinedAt: !13334)
!13461 = !DILocation(line: 270, column: 23, scope: !13462, inlinedAt: !13334)
!13462 = distinct !DILexicalBlock(scope: !13459, file: !1852, line: 270, column: 9)
!13463 = !DILocation(line: 270, column: 32, scope: !13462, inlinedAt: !13334)
!13464 = !DILocation(line: 270, column: 41, scope: !13462, inlinedAt: !13334)
!13465 = !DILocation(line: 270, column: 21, scope: !13462, inlinedAt: !13334)
!13466 = !DILocation(line: 270, column: 14, scope: !13462, inlinedAt: !13334)
!13467 = !DILocation(line: 270, column: 50, scope: !13468, inlinedAt: !13334)
!13468 = distinct !DILexicalBlock(scope: !13462, file: !1852, line: 270, column: 9)
!13469 = !DILocation(line: 270, column: 58, scope: !13468, inlinedAt: !13334)
!13470 = !DILocation(line: 270, column: 9, scope: !13462, inlinedAt: !13334)
!13471 = !DILocation(line: 271, column: 17, scope: !13472, inlinedAt: !13334)
!13472 = distinct !DILexicalBlock(scope: !13473, file: !1852, line: 271, column: 17)
!13473 = distinct !DILexicalBlock(scope: !13468, file: !1852, line: 270, column: 73)
!13474 = !DILocation(line: 271, column: 17, scope: !13473, inlinedAt: !13334)
!13475 = !DILocation(line: 272, column: 17, scope: !13472, inlinedAt: !13334)
!13476 = !DILocation(line: 273, column: 17, scope: !13477, inlinedAt: !13334)
!13477 = distinct !DILexicalBlock(scope: !13473, file: !1852, line: 273, column: 17)
!13478 = !DILocation(line: 273, column: 17, scope: !13473, inlinedAt: !13334)
!13479 = !DILocation(line: 274, column: 33, scope: !13477, inlinedAt: !13334)
!13480 = !DILocation(line: 274, column: 17, scope: !13477, inlinedAt: !13334)
!13481 = !DILocation(line: 275, column: 17, scope: !13482, inlinedAt: !13334)
!13482 = distinct !DILexicalBlock(scope: !13473, file: !1852, line: 275, column: 17)
!13483 = !DILocation(line: 275, column: 17, scope: !13473, inlinedAt: !13334)
!13484 = !DILocation(line: 276, column: 36, scope: !13482, inlinedAt: !13334)
!13485 = !DILocation(line: 276, column: 17, scope: !13482, inlinedAt: !13334)
!13486 = !DILocation(line: 278, column: 13, scope: !13487, inlinedAt: !13334)
!13487 = distinct !DILexicalBlock(scope: !13473, file: !1852, line: 278, column: 13)
!13488 = !DILocation(line: 278, column: 13, scope: !13473, inlinedAt: !13334)
!13489 = !DILocation(line: 279, column: 13, scope: !13473, inlinedAt: !13334)
!13490 = !DILocation(line: 280, column: 13, scope: !13473, inlinedAt: !13334)
!13491 = !DILocalVariable(name: "len", scope: !13492, file: !1852, line: 281, type: !55)
!13492 = distinct !DILexicalBlock(scope: !13473, file: !1852, line: 281, column: 13)
!13493 = !DILocation(line: 281, column: 13, scope: !13492, inlinedAt: !13334)
!13494 = !DILocation(line: 281, column: 13, scope: !13495, inlinedAt: !13334)
!13495 = distinct !DILexicalBlock(scope: !13496, file: !1852, line: 281, column: 13)
!13496 = distinct !DILexicalBlock(scope: !13492, file: !1852, line: 281, column: 13)
!13497 = !DILocation(line: 281, column: 13, scope: !13496, inlinedAt: !13334)
!13498 = !DILocation(line: 282, column: 13, scope: !13473, inlinedAt: !13334)
!13499 = !DILocation(line: 283, column: 13, scope: !13473, inlinedAt: !13334)
!13500 = !DILocalVariable(name: "len", scope: !13501, file: !1852, line: 284, type: !55)
!13501 = distinct !DILexicalBlock(scope: !13473, file: !1852, line: 284, column: 13)
!13502 = !DILocation(line: 284, column: 13, scope: !13501, inlinedAt: !13334)
!13503 = !DILocation(line: 284, column: 13, scope: !13504, inlinedAt: !13334)
!13504 = distinct !DILexicalBlock(scope: !13505, file: !1852, line: 284, column: 13)
!13505 = distinct !DILexicalBlock(scope: !13501, file: !1852, line: 284, column: 13)
!13506 = !DILocation(line: 284, column: 13, scope: !13505, inlinedAt: !13334)
!13507 = !DILocation(line: 285, column: 9, scope: !13473, inlinedAt: !13334)
!13508 = !DILocation(line: 270, column: 69, scope: !13468, inlinedAt: !13334)
!13509 = !DILocation(line: 270, column: 9, scope: !13468, inlinedAt: !13334)
!13510 = distinct !{!13510, !13470, !13511, !3413}
!13511 = !DILocation(line: 285, column: 9, scope: !13462, inlinedAt: !13334)
!13512 = !DILocation(line: 286, column: 5, scope: !13459, inlinedAt: !13334)
!13513 = !DILocation(line: 286, column: 16, scope: !13514, inlinedAt: !13334)
!13514 = distinct !DILexicalBlock(scope: !13451, file: !1852, line: 286, column: 16)
!13515 = !DILocation(line: 286, column: 23, scope: !13514, inlinedAt: !13334)
!13516 = !DILocation(line: 286, column: 16, scope: !13451, inlinedAt: !13334)
!13517 = !DILocalVariable(name: "header", scope: !13518, file: !1852, line: 287, type: !2051)
!13518 = distinct !DILexicalBlock(scope: !13514, file: !1852, line: 286, column: 47)
!13519 = !DILocation(line: 287, column: 27, scope: !13518, inlinedAt: !13334)
!13520 = !DILocation(line: 289, column: 23, scope: !13521, inlinedAt: !13334)
!13521 = distinct !DILexicalBlock(scope: !13518, file: !1852, line: 289, column: 9)
!13522 = !DILocation(line: 289, column: 32, scope: !13521, inlinedAt: !13334)
!13523 = !DILocation(line: 289, column: 41, scope: !13521, inlinedAt: !13334)
!13524 = !DILocation(line: 289, column: 21, scope: !13521, inlinedAt: !13334)
!13525 = !DILocation(line: 289, column: 14, scope: !13521, inlinedAt: !13334)
!13526 = !DILocation(line: 289, column: 50, scope: !13527, inlinedAt: !13334)
!13527 = distinct !DILexicalBlock(scope: !13521, file: !1852, line: 289, column: 9)
!13528 = !DILocation(line: 289, column: 58, scope: !13527, inlinedAt: !13334)
!13529 = !DILocation(line: 289, column: 9, scope: !13521, inlinedAt: !13334)
!13530 = !DILocation(line: 290, column: 25, scope: !13531, inlinedAt: !13334)
!13531 = distinct !DILexicalBlock(scope: !13532, file: !1852, line: 290, column: 17)
!13532 = distinct !DILexicalBlock(scope: !13527, file: !1852, line: 289, column: 73)
!13533 = !DILocation(line: 290, column: 33, scope: !13531, inlinedAt: !13334)
!13534 = !DILocation(line: 290, column: 18, scope: !13531, inlinedAt: !13334)
!13535 = !DILocation(line: 290, column: 17, scope: !13532, inlinedAt: !13334)
!13536 = !DILocation(line: 291, column: 17, scope: !13537, inlinedAt: !13334)
!13537 = distinct !DILexicalBlock(scope: !13538, file: !1852, line: 291, column: 17)
!13538 = distinct !DILexicalBlock(scope: !13539, file: !1852, line: 291, column: 17)
!13539 = distinct !DILexicalBlock(scope: !13531, file: !1852, line: 290, column: 59)
!13540 = !DILocation(line: 291, column: 17, scope: !13538, inlinedAt: !13334)
!13541 = !DILocalVariable(name: "len", scope: !13542, file: !1852, line: 292, type: !55)
!13542 = distinct !DILexicalBlock(scope: !13539, file: !1852, line: 292, column: 17)
!13543 = !DILocation(line: 292, column: 17, scope: !13542, inlinedAt: !13334)
!13544 = !DILocation(line: 292, column: 17, scope: !13545, inlinedAt: !13334)
!13545 = distinct !DILexicalBlock(scope: !13546, file: !1852, line: 292, column: 17)
!13546 = distinct !DILexicalBlock(scope: !13542, file: !1852, line: 292, column: 17)
!13547 = !DILocation(line: 292, column: 17, scope: !13546, inlinedAt: !13334)
!13548 = !DILocation(line: 293, column: 17, scope: !13539, inlinedAt: !13334)
!13549 = !DILocation(line: 289, column: 69, scope: !13527, inlinedAt: !13334)
!13550 = !DILocation(line: 289, column: 9, scope: !13527, inlinedAt: !13334)
!13551 = distinct !{!13551, !13529, !13552, !3413}
!13552 = !DILocation(line: 295, column: 9, scope: !13521, inlinedAt: !13334)
!13553 = !DILocation(line: 296, column: 5, scope: !13518, inlinedAt: !13334)
!13554 = !DILocation(line: 298, column: 9, scope: !13555, inlinedAt: !13334)
!13555 = distinct !DILexicalBlock(scope: !13330, file: !1852, line: 298, column: 9)
!13556 = !DILocation(line: 298, column: 9, scope: !13330, inlinedAt: !13334)
!13557 = !DILocation(line: 299, column: 9, scope: !13558, inlinedAt: !13334)
!13558 = distinct !DILexicalBlock(scope: !13559, file: !1852, line: 299, column: 9)
!13559 = distinct !DILexicalBlock(scope: !13560, file: !1852, line: 299, column: 9)
!13560 = distinct !DILexicalBlock(scope: !13555, file: !1852, line: 298, column: 35)
!13561 = !DILocation(line: 299, column: 9, scope: !13559, inlinedAt: !13334)
!13562 = !DILocation(line: 300, column: 9, scope: !13563, inlinedAt: !13334)
!13563 = distinct !DILexicalBlock(scope: !13564, file: !1852, line: 300, column: 9)
!13564 = distinct !DILexicalBlock(scope: !13560, file: !1852, line: 300, column: 9)
!13565 = !DILocation(line: 300, column: 9, scope: !13564, inlinedAt: !13334)
!13566 = !DILocation(line: 301, column: 5, scope: !13560, inlinedAt: !13334)
!13567 = !DILocation(line: 303, column: 9, scope: !13568, inlinedAt: !13334)
!13568 = distinct !DILexicalBlock(scope: !13330, file: !1852, line: 303, column: 9)
!13569 = !DILocation(line: 303, column: 9, scope: !13330, inlinedAt: !13334)
!13570 = !DILocation(line: 304, column: 9, scope: !13571, inlinedAt: !13334)
!13571 = distinct !DILexicalBlock(scope: !13572, file: !1852, line: 304, column: 9)
!13572 = distinct !DILexicalBlock(scope: !13573, file: !1852, line: 304, column: 9)
!13573 = distinct !DILexicalBlock(scope: !13568, file: !1852, line: 303, column: 38)
!13574 = !DILocation(line: 304, column: 9, scope: !13572, inlinedAt: !13334)
!13575 = !DILocation(line: 305, column: 9, scope: !13576, inlinedAt: !13334)
!13576 = distinct !DILexicalBlock(scope: !13577, file: !1852, line: 305, column: 9)
!13577 = distinct !DILexicalBlock(scope: !13573, file: !1852, line: 305, column: 9)
!13578 = !DILocation(line: 305, column: 9, scope: !13577, inlinedAt: !13334)
!13579 = !DILocation(line: 306, column: 5, scope: !13573, inlinedAt: !13334)
!13580 = !DILocation(line: 308, column: 5, scope: !13581, inlinedAt: !13334)
!13581 = distinct !DILexicalBlock(scope: !13582, file: !1852, line: 308, column: 5)
!13582 = distinct !DILexicalBlock(scope: !13330, file: !1852, line: 308, column: 5)
!13583 = !DILocation(line: 308, column: 5, scope: !13582, inlinedAt: !13334)
!13584 = !DILocation(line: 310, column: 21, scope: !13330, inlinedAt: !13334)
!13585 = !DILocation(line: 310, column: 33, scope: !13330, inlinedAt: !13334)
!13586 = !DILocation(line: 310, column: 31, scope: !13330, inlinedAt: !13334)
!13587 = !DILocation(line: 310, column: 41, scope: !13330, inlinedAt: !13334)
!13588 = !DILocation(line: 310, column: 5, scope: !13330, inlinedAt: !13334)
!13589 = !DILocation(line: 311, column: 1, scope: !13330, inlinedAt: !13334)
!13590 = !DILocation(line: 163, column: 9, scope: !13591)
!13591 = distinct !DILexicalBlock(scope: !13249, file: !1852, line: 163, column: 9)
!13592 = !DILocation(line: 163, column: 9, scope: !13249)
!13593 = !DILocation(line: 164, column: 31, scope: !13594)
!13594 = distinct !DILexicalBlock(scope: !13591, file: !1852, line: 163, column: 32)
!13595 = !DILocation(line: 164, column: 9, scope: !13594)
!13596 = !DILocation(line: 165, column: 9, scope: !13594)
!13597 = !DILocation(line: 168, column: 9, scope: !13598)
!13598 = distinct !DILexicalBlock(scope: !13249, file: !1852, line: 168, column: 9)
!13599 = !DILocation(line: 168, column: 18, scope: !13598)
!13600 = !DILocation(line: 168, column: 24, scope: !13598)
!13601 = !DILocation(line: 168, column: 9, scope: !13249)
!13602 = !DILocation(line: 169, column: 20, scope: !13603)
!13603 = distinct !DILexicalBlock(scope: !13598, file: !1852, line: 168, column: 47)
!13604 = !DILocation(line: 169, column: 29, scope: !13603)
!13605 = !DILocation(line: 169, column: 38, scope: !13603)
!13606 = !DILocation(line: 169, column: 9, scope: !13603)
!13607 = !DILocation(line: 170, column: 9, scope: !13603)
!13608 = !DILocalVariable(name: "response_vec", scope: !13249, file: !1852, line: 173, type: !13609)
!13609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13610, size: 256, elements: !159)
!13610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !8576, line: 26, size: 128, elements: !13611)
!13611 = !{!13612, !13613}
!13612 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !13610, file: !8576, line: 28, baseType: !111, size: 64)
!13613 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !13610, file: !8576, line: 29, baseType: !55, size: 64, offset: 64)
!13614 = !DILocation(line: 173, column: 18, scope: !13249)
!13615 = !DILocation(line: 173, column: 35, scope: !13249)
!13616 = !DILocation(line: 174, column: 9, scope: !13249)
!13617 = !DILocation(line: 174, column: 23, scope: !13249)
!13618 = !DILocation(line: 174, column: 43, scope: !13249)
!13619 = !DILocation(line: 175, column: 9, scope: !13249)
!13620 = !DILocation(line: 175, column: 23, scope: !13249)
!13621 = !DILocation(line: 175, column: 79, scope: !13249)
!13622 = !DILocation(line: 178, column: 17, scope: !13249)
!13623 = !DILocation(line: 178, column: 26, scope: !13249)
!13624 = !DILocation(line: 178, column: 5, scope: !13249)
!13625 = !DILocation(line: 179, column: 1, scope: !13249)
!13626 = !DILocalVariable(name: "request", arg: 1, scope: !1962, file: !1852, line: 343, type: !1965)
!13627 = !DILocation(line: 343, column: 42, scope: !1962)
!13628 = !DILocation(line: 345, column: 11, scope: !13629)
!13629 = distinct !DILexicalBlock(scope: !1962, file: !1852, line: 345, column: 9)
!13630 = !DILocation(line: 345, column: 20, scope: !13629)
!13631 = !DILocation(line: 345, column: 26, scope: !13629)
!13632 = !DILocation(line: 345, column: 9, scope: !1962)
!13633 = !DILocation(line: 346, column: 13, scope: !13634)
!13634 = distinct !DILexicalBlock(scope: !13635, file: !1852, line: 346, column: 13)
!13635 = distinct !DILexicalBlock(scope: !13629, file: !1852, line: 345, column: 52)
!13636 = !DILocation(line: 346, column: 13, scope: !13635)
!13637 = !DILocation(line: 347, column: 13, scope: !13634)
!13638 = !DILocation(line: 348, column: 5, scope: !13635)
!13639 = !DILocalVariable(name: "buffer_len", scope: !1962, file: !1852, line: 350, type: !55)
!13640 = !DILocation(line: 350, column: 12, scope: !1962)
!13641 = !DILocation(line: 350, column: 25, scope: !1962)
!13642 = !DILocation(line: 351, column: 9, scope: !13643)
!13643 = distinct !DILexicalBlock(scope: !1962, file: !1852, line: 351, column: 9)
!13644 = !DILocation(line: 351, column: 9, scope: !1962)
!13645 = !DILocation(line: 353, column: 19, scope: !13646)
!13646 = distinct !DILexicalBlock(scope: !13643, file: !1852, line: 351, column: 32)
!13647 = !DILocation(line: 353, column: 9, scope: !13646)
!13648 = !DILocation(line: 354, column: 9, scope: !13646)
!13649 = !DILocalVariable(name: "chunk_size", scope: !1962, file: !1852, line: 357, type: !304)
!13650 = !DILocation(line: 357, column: 10, scope: !1962)
!13651 = !DILocalVariable(name: "converted_len", scope: !1962, file: !1852, line: 358, type: !34)
!13652 = !DILocation(line: 358, column: 9, scope: !1962)
!13653 = !DILocation(line: 358, column: 34, scope: !1962)
!13654 = !DILocation(line: 358, column: 77, scope: !1962)
!13655 = !DILocation(line: 358, column: 25, scope: !1962)
!13656 = !DILocation(line: 359, column: 9, scope: !13657)
!13657 = distinct !DILexicalBlock(scope: !1962, file: !1852, line: 359, column: 9)
!13658 = !DILocation(line: 359, column: 9, scope: !1962)
!13659 = !DILocation(line: 360, column: 9, scope: !13657)
!13660 = !DILocalVariable(name: "chunk_size_len", scope: !1962, file: !1852, line: 361, type: !55)
!13661 = !DILocation(line: 361, column: 12, scope: !1962)
!13662 = !DILocation(line: 361, column: 37, scope: !1962)
!13663 = !DILocation(line: 361, column: 29, scope: !1962)
!13664 = !DILocalVariable(name: "chunk_vec", scope: !1962, file: !1852, line: 363, type: !13665)
!13665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13610, size: 384, elements: !281)
!13666 = !DILocation(line: 363, column: 18, scope: !1962)
!13667 = !DILocation(line: 363, column: 32, scope: !1962)
!13668 = !DILocation(line: 364, column: 9, scope: !1962)
!13669 = !DILocation(line: 364, column: 23, scope: !1962)
!13670 = !DILocation(line: 364, column: 46, scope: !1962)
!13671 = !DILocation(line: 365, column: 9, scope: !1962)
!13672 = !DILocation(line: 365, column: 23, scope: !1962)
!13673 = !DILocation(line: 365, column: 79, scope: !1962)
!13674 = !DILocation(line: 366, column: 9, scope: !1962)
!13675 = !DILocation(line: 369, column: 17, scope: !1962)
!13676 = !DILocation(line: 369, column: 26, scope: !1962)
!13677 = !DILocation(line: 369, column: 5, scope: !1962)
!13678 = !DILocation(line: 371, column: 9, scope: !13679)
!13679 = distinct !DILexicalBlock(scope: !1962, file: !1852, line: 371, column: 9)
!13680 = !DILocation(line: 371, column: 9, scope: !1962)
!13681 = !DILocation(line: 372, column: 20, scope: !13682)
!13682 = distinct !DILexicalBlock(scope: !13679, file: !1852, line: 371, column: 64)
!13683 = !DILocation(line: 372, column: 29, scope: !13682)
!13684 = !DILocation(line: 372, column: 35, scope: !13682)
!13685 = !DILocation(line: 372, column: 9, scope: !13682)
!13686 = !DILocation(line: 373, column: 9, scope: !13682)
!13687 = !DILabel(scope: !1962, name: "abort_coro", file: !1852, line: 376)
!13688 = !DILocation(line: 376, column: 1, scope: !1962)
!13689 = !DILocation(line: 377, column: 16, scope: !1962)
!13690 = !DILocation(line: 377, column: 25, scope: !1962)
!13691 = !DILocation(line: 377, column: 31, scope: !1962)
!13692 = !DILocation(line: 377, column: 5, scope: !1962)
!13693 = !DILocation(line: 378, column: 5, scope: !1962)
!13694 = !DILocation(line: 379, column: 1, scope: !1962)
!13695 = distinct !DISubprogram(name: "log_request", scope: !1852, file: !1852, line: 104, type: !12783, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1855, retainedNodes: !286)
!13696 = !DILocalVariable(name: "request", arg: 1, scope: !13695, file: !1852, line: 104, type: !1965)
!13697 = !DILocation(line: 104, column: 29, scope: !13695)
!13698 = !DILocalVariable(name: "status", arg: 2, scope: !13695, file: !1852, line: 104, type: !6)
!13699 = !DILocation(line: 104, column: 57, scope: !13695)
!13700 = !DILocalVariable(name: "ip_buffer", scope: !13695, file: !1852, line: 106, type: !535)
!13701 = !DILocation(line: 106, column: 10, scope: !13695)
!13702 = !DILocation(line: 108, column: 5, scope: !13695)
!13703 = !DILocation(line: 116, column: 1, scope: !13695)
!13704 = distinct !DISubprogram(name: "lwan_http_status_as_string_with_code", scope: !2709, file: !2709, line: 116, type: !13705, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2705, retainedNodes: !286)
!13705 = !DISubroutineType(types: !13706)
!13706 = !{!205, !6}
!13707 = !DILocalVariable(name: "status", arg: 1, scope: !13704, file: !2709, line: 116, type: !6)
!13708 = !DILocation(line: 116, column: 57, scope: !13704)
!13709 = !DILocation(line: 118, column: 13, scope: !13704)
!13710 = !DILocation(line: 118, column: 5, scope: !13704)
!13711 = !DILocation(line: 119, column: 19, scope: !13712)
!13712 = distinct !DILexicalBlock(scope: !13704, file: !2709, line: 118, column: 21)
!13713 = !DILocation(line: 120, column: 32, scope: !13712)
!13714 = !DILocation(line: 121, column: 34, scope: !13712)
!13715 = !DILocation(line: 122, column: 29, scope: !13712)
!13716 = !DILocation(line: 123, column: 28, scope: !13712)
!13717 = !DILocation(line: 124, column: 31, scope: !13712)
!13718 = !DILocation(line: 125, column: 26, scope: !13712)
!13719 = !DILocation(line: 126, column: 26, scope: !13712)
!13720 = !DILocation(line: 127, column: 28, scope: !13712)
!13721 = !DILocation(line: 128, column: 24, scope: !13712)
!13722 = !DILocation(line: 129, column: 26, scope: !13712)
!13723 = !DILocation(line: 130, column: 36, scope: !13712)
!13724 = !DILocation(line: 131, column: 30, scope: !13712)
!13725 = !DILocation(line: 132, column: 31, scope: !13712)
!13726 = !DILocation(line: 133, column: 32, scope: !13712)
!13727 = !DILocation(line: 134, column: 28, scope: !13712)
!13728 = !DILocation(line: 136, column: 5, scope: !13704)
!13729 = !DILocation(line: 137, column: 1, scope: !13704)
!13730 = distinct !DISubprogram(name: "lwan_request_get_remote_address", scope: !1572, file: !1572, line: 807, type: !13731, scopeLine: 809, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!13731 = !DISubroutineType(types: !13732)
!13732 = !{!205, !1580, !52}
!13733 = !DILocalVariable(name: "request", arg: 1, scope: !13730, file: !1572, line: 807, type: !1580)
!13734 = !DILocation(line: 807, column: 49, scope: !13730)
!13735 = !DILocalVariable(name: "buffer", arg: 2, scope: !13730, file: !1572, line: 808, type: !52)
!13736 = !DILocation(line: 808, column: 18, scope: !13730)
!13737 = !DILocalVariable(name: "sock_addr", scope: !13730, file: !1572, line: 810, type: !13738)
!13738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_storage", file: !1781, line: 193, size: 1024, elements: !13739)
!13739 = !{!13740, !13741, !13742}
!13740 = !DIDerivedType(tag: DW_TAG_member, name: "ss_family", scope: !13738, file: !1781, line: 195, baseType: !1784, size: 16)
!13741 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_padding", scope: !13738, file: !1781, line: 196, baseType: !11238, size: 944, offset: 16)
!13742 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_align", scope: !13738, file: !1781, line: 197, baseType: !57, size: 64, offset: 960)
!13743 = !DILocation(line: 810, column: 29, scope: !13730)
!13744 = !DILocalVariable(name: "sock_len", scope: !13730, file: !1572, line: 811, type: !13745)
!13745 = !DIDerivedType(tag: DW_TAG_typedef, name: "socklen_t", file: !3311, line: 274, baseType: !3342)
!13746 = !DILocation(line: 811, column: 15, scope: !13730)
!13747 = !DILocation(line: 812, column: 9, scope: !13748)
!13748 = distinct !DILexicalBlock(scope: !13730, file: !1572, line: 812, column: 9)
!13749 = !DILocation(line: 812, column: 9, scope: !13730)
!13750 = !DILocation(line: 813, column: 9, scope: !13748)
!13751 = !DILocation(line: 815, column: 19, scope: !13752)
!13752 = distinct !DILexicalBlock(scope: !13730, file: !1572, line: 815, column: 9)
!13753 = !DILocation(line: 815, column: 9, scope: !13752)
!13754 = !DILocation(line: 815, column: 29, scope: !13752)
!13755 = !DILocation(line: 815, column: 9, scope: !13730)
!13756 = !DILocation(line: 816, column: 72, scope: !13752)
!13757 = !DILocation(line: 817, column: 26, scope: !13752)
!13758 = !DILocation(line: 816, column: 16, scope: !13752)
!13759 = !DILocation(line: 816, column: 9, scope: !13752)
!13760 = !DILocation(line: 818, column: 70, scope: !13730)
!13761 = !DILocation(line: 819, column: 22, scope: !13730)
!13762 = !DILocation(line: 818, column: 12, scope: !13730)
!13763 = !DILocation(line: 818, column: 5, scope: !13730)
!13764 = !DILocation(line: 820, column: 1, scope: !13730)
!13765 = distinct !DISubprogram(name: "get_request_method", scope: !1852, file: !1852, line: 92, type: !13766, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1855, retainedNodes: !286)
!13766 = !DISubroutineType(types: !13767)
!13767 = !{!205, !1965}
!13768 = !DILocalVariable(name: "request", arg: 1, scope: !13765, file: !1852, line: 92, type: !1965)
!13769 = !DILocation(line: 92, column: 36, scope: !13765)
!13770 = !DILocation(line: 94, column: 9, scope: !13771)
!13771 = distinct !DILexicalBlock(scope: !13765, file: !1852, line: 94, column: 9)
!13772 = !DILocation(line: 94, column: 18, scope: !13771)
!13773 = !DILocation(line: 94, column: 24, scope: !13771)
!13774 = !DILocation(line: 94, column: 9, scope: !13765)
!13775 = !DILocation(line: 95, column: 9, scope: !13771)
!13776 = !DILocation(line: 96, column: 9, scope: !13777)
!13777 = distinct !DILexicalBlock(scope: !13765, file: !1852, line: 96, column: 9)
!13778 = !DILocation(line: 96, column: 18, scope: !13777)
!13779 = !DILocation(line: 96, column: 24, scope: !13777)
!13780 = !DILocation(line: 96, column: 9, scope: !13765)
!13781 = !DILocation(line: 97, column: 9, scope: !13777)
!13782 = !DILocation(line: 98, column: 9, scope: !13783)
!13783 = distinct !DILexicalBlock(scope: !13765, file: !1852, line: 98, column: 9)
!13784 = !DILocation(line: 98, column: 18, scope: !13783)
!13785 = !DILocation(line: 98, column: 24, scope: !13783)
!13786 = !DILocation(line: 98, column: 9, scope: !13765)
!13787 = !DILocation(line: 99, column: 9, scope: !13783)
!13788 = !DILocation(line: 100, column: 5, scope: !13765)
!13789 = !DILocation(line: 101, column: 1, scope: !13765)
!13790 = distinct !DISubprogram(name: "lwan_response_set_chunked", scope: !1852, file: !1852, line: 322, type: !13791, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1855, retainedNodes: !286)
!13791 = !DISubroutineType(types: !13792)
!13792 = !{!137, !1965, !6}
!13793 = !DILocalVariable(name: "request", arg: 1, scope: !13790, file: !1852, line: 322, type: !1965)
!13794 = !DILocation(line: 322, column: 43, scope: !13790)
!13795 = !DILocalVariable(name: "status", arg: 2, scope: !13790, file: !1852, line: 322, type: !6)
!13796 = !DILocation(line: 322, column: 71, scope: !13790)
!13797 = !DILocalVariable(name: "buffer", scope: !13790, file: !1852, line: 324, type: !10154)
!13798 = !DILocation(line: 324, column: 10, scope: !13790)
!13799 = !DILocalVariable(name: "buffer_len", scope: !13790, file: !1852, line: 325, type: !55)
!13800 = !DILocation(line: 325, column: 12, scope: !13790)
!13801 = !DILocation(line: 327, column: 9, scope: !13802)
!13802 = distinct !DILexicalBlock(scope: !13790, file: !1852, line: 327, column: 9)
!13803 = !DILocation(line: 327, column: 18, scope: !13802)
!13804 = !DILocation(line: 327, column: 24, scope: !13802)
!13805 = !DILocation(line: 327, column: 9, scope: !13790)
!13806 = !DILocation(line: 328, column: 9, scope: !13802)
!13807 = !DILocation(line: 330, column: 5, scope: !13790)
!13808 = !DILocation(line: 330, column: 14, scope: !13790)
!13809 = !DILocation(line: 330, column: 20, scope: !13790)
!13810 = !DILocation(line: 331, column: 47, scope: !13790)
!13811 = !DILocation(line: 331, column: 56, scope: !13790)
!13812 = !DILocation(line: 332, column: 49, scope: !13790)
!13813 = !DILocation(line: 231, column: 46, scope: !13330, inlinedAt: !13814)
!13814 = distinct !DILocation(line: 331, column: 18, scope: !13790)
!13815 = !DILocation(line: 231, column: 74, scope: !13330, inlinedAt: !13814)
!13816 = !DILocation(line: 231, column: 87, scope: !13330, inlinedAt: !13814)
!13817 = !DILocation(line: 231, column: 105, scope: !13330, inlinedAt: !13814)
!13818 = !DILocation(line: 233, column: 11, scope: !13330, inlinedAt: !13814)
!13819 = !DILocation(line: 234, column: 11, scope: !13330, inlinedAt: !13814)
!13820 = !DILocation(line: 234, column: 27, scope: !13330, inlinedAt: !13814)
!13821 = !DILocation(line: 234, column: 37, scope: !13330, inlinedAt: !13814)
!13822 = !DILocation(line: 234, column: 35, scope: !13330, inlinedAt: !13814)
!13823 = !DILocation(line: 235, column: 10, scope: !13330, inlinedAt: !13814)
!13824 = !DILocation(line: 236, column: 10, scope: !13330, inlinedAt: !13814)
!13825 = !DILocation(line: 237, column: 10, scope: !13330, inlinedAt: !13814)
!13826 = !DILocation(line: 239, column: 17, scope: !13330, inlinedAt: !13814)
!13827 = !DILocation(line: 239, column: 15, scope: !13330, inlinedAt: !13814)
!13828 = !DILocation(line: 241, column: 9, scope: !13357, inlinedAt: !13814)
!13829 = !DILocation(line: 241, column: 18, scope: !13357, inlinedAt: !13814)
!13830 = !DILocation(line: 241, column: 24, scope: !13357, inlinedAt: !13814)
!13831 = !DILocation(line: 241, column: 9, scope: !13330, inlinedAt: !13814)
!13832 = !DILocation(line: 242, column: 9, scope: !13362, inlinedAt: !13814)
!13833 = !DILocation(line: 242, column: 9, scope: !13363, inlinedAt: !13814)
!13834 = !DILocation(line: 244, column: 9, scope: !13366, inlinedAt: !13814)
!13835 = !DILocation(line: 244, column: 9, scope: !13367, inlinedAt: !13814)
!13836 = !DILocation(line: 245, column: 5, scope: !13370, inlinedAt: !13814)
!13837 = !DILocation(line: 245, column: 5, scope: !13373, inlinedAt: !13814)
!13838 = !DILocation(line: 245, column: 5, scope: !13374, inlinedAt: !13814)
!13839 = !DILocation(line: 247, column: 9, scope: !13377, inlinedAt: !13814)
!13840 = !DILocation(line: 247, column: 18, scope: !13377, inlinedAt: !13814)
!13841 = !DILocation(line: 247, column: 24, scope: !13377, inlinedAt: !13814)
!13842 = !DILocation(line: 247, column: 9, scope: !13330, inlinedAt: !13814)
!13843 = !DILocation(line: 248, column: 9, scope: !13382, inlinedAt: !13814)
!13844 = !DILocation(line: 248, column: 9, scope: !13383, inlinedAt: !13814)
!13845 = !DILocation(line: 249, column: 5, scope: !13384, inlinedAt: !13814)
!13846 = !DILocation(line: 249, column: 16, scope: !13388, inlinedAt: !13814)
!13847 = !DILocation(line: 249, column: 25, scope: !13388, inlinedAt: !13814)
!13848 = !DILocation(line: 249, column: 31, scope: !13388, inlinedAt: !13814)
!13849 = !DILocation(line: 249, column: 16, scope: !13377, inlinedAt: !13814)
!13850 = !DILocation(line: 251, column: 5, scope: !13393, inlinedAt: !13814)
!13851 = !DILocation(line: 252, column: 9, scope: !13395, inlinedAt: !13814)
!13852 = !DILocation(line: 252, column: 9, scope: !13396, inlinedAt: !13814)
!13853 = !DILocation(line: 253, column: 13, scope: !13400, inlinedAt: !13814)
!13854 = !DILocation(line: 253, column: 22, scope: !13400, inlinedAt: !13814)
!13855 = !DILocation(line: 253, column: 31, scope: !13400, inlinedAt: !13814)
!13856 = !DILocation(line: 253, column: 38, scope: !13400, inlinedAt: !13814)
!13857 = !DILocation(line: 253, column: 13, scope: !13397, inlinedAt: !13814)
!13858 = !DILocation(line: 254, column: 13, scope: !13406, inlinedAt: !13814)
!13859 = !DILocation(line: 254, column: 13, scope: !13410, inlinedAt: !13814)
!13860 = !DILocation(line: 254, column: 13, scope: !13412, inlinedAt: !13814)
!13861 = !DILocation(line: 254, column: 13, scope: !13413, inlinedAt: !13814)
!13862 = !DILocation(line: 256, column: 13, scope: !13416, inlinedAt: !13814)
!13863 = !DILocation(line: 256, column: 13, scope: !13420, inlinedAt: !13814)
!13864 = !DILocation(line: 256, column: 13, scope: !13422, inlinedAt: !13814)
!13865 = !DILocation(line: 256, column: 13, scope: !13423, inlinedAt: !13814)
!13866 = !DILocation(line: 259, column: 5, scope: !13426, inlinedAt: !13814)
!13867 = !DILocation(line: 259, column: 5, scope: !13427, inlinedAt: !13814)
!13868 = !DILocation(line: 260, column: 5, scope: !13430, inlinedAt: !13814)
!13869 = !DILocation(line: 260, column: 5, scope: !13433, inlinedAt: !13814)
!13870 = !DILocation(line: 260, column: 5, scope: !13434, inlinedAt: !13814)
!13871 = !DILocation(line: 262, column: 9, scope: !13437, inlinedAt: !13814)
!13872 = !DILocation(line: 262, column: 18, scope: !13437, inlinedAt: !13814)
!13873 = !DILocation(line: 262, column: 24, scope: !13437, inlinedAt: !13814)
!13874 = !DILocation(line: 262, column: 30, scope: !13437, inlinedAt: !13814)
!13875 = !DILocation(line: 262, column: 9, scope: !13330, inlinedAt: !13814)
!13876 = !DILocation(line: 263, column: 9, scope: !13443, inlinedAt: !13814)
!13877 = !DILocation(line: 263, column: 9, scope: !13444, inlinedAt: !13814)
!13878 = !DILocation(line: 265, column: 9, scope: !13447, inlinedAt: !13814)
!13879 = !DILocation(line: 265, column: 9, scope: !13448, inlinedAt: !13814)
!13880 = !DILocation(line: 267, column: 10, scope: !13451, inlinedAt: !13814)
!13881 = !DILocation(line: 267, column: 17, scope: !13451, inlinedAt: !13814)
!13882 = !DILocation(line: 267, column: 36, scope: !13451, inlinedAt: !13814)
!13883 = !DILocation(line: 267, column: 39, scope: !13451, inlinedAt: !13814)
!13884 = !DILocation(line: 267, column: 48, scope: !13451, inlinedAt: !13814)
!13885 = !DILocation(line: 267, column: 57, scope: !13451, inlinedAt: !13814)
!13886 = !DILocation(line: 267, column: 9, scope: !13330, inlinedAt: !13814)
!13887 = !DILocation(line: 268, column: 27, scope: !13459, inlinedAt: !13814)
!13888 = !DILocation(line: 270, column: 23, scope: !13462, inlinedAt: !13814)
!13889 = !DILocation(line: 270, column: 32, scope: !13462, inlinedAt: !13814)
!13890 = !DILocation(line: 270, column: 41, scope: !13462, inlinedAt: !13814)
!13891 = !DILocation(line: 270, column: 21, scope: !13462, inlinedAt: !13814)
!13892 = !DILocation(line: 270, column: 14, scope: !13462, inlinedAt: !13814)
!13893 = !DILocation(line: 270, column: 50, scope: !13468, inlinedAt: !13814)
!13894 = !DILocation(line: 270, column: 58, scope: !13468, inlinedAt: !13814)
!13895 = !DILocation(line: 270, column: 9, scope: !13462, inlinedAt: !13814)
!13896 = !DILocation(line: 271, column: 17, scope: !13472, inlinedAt: !13814)
!13897 = !DILocation(line: 271, column: 17, scope: !13473, inlinedAt: !13814)
!13898 = !DILocation(line: 272, column: 17, scope: !13472, inlinedAt: !13814)
!13899 = !DILocation(line: 273, column: 17, scope: !13477, inlinedAt: !13814)
!13900 = !DILocation(line: 273, column: 17, scope: !13473, inlinedAt: !13814)
!13901 = !DILocation(line: 274, column: 33, scope: !13477, inlinedAt: !13814)
!13902 = !DILocation(line: 274, column: 17, scope: !13477, inlinedAt: !13814)
!13903 = !DILocation(line: 275, column: 17, scope: !13482, inlinedAt: !13814)
!13904 = !DILocation(line: 275, column: 17, scope: !13473, inlinedAt: !13814)
!13905 = !DILocation(line: 276, column: 36, scope: !13482, inlinedAt: !13814)
!13906 = !DILocation(line: 276, column: 17, scope: !13482, inlinedAt: !13814)
!13907 = !DILocation(line: 278, column: 13, scope: !13487, inlinedAt: !13814)
!13908 = !DILocation(line: 278, column: 13, scope: !13473, inlinedAt: !13814)
!13909 = !DILocation(line: 279, column: 13, scope: !13473, inlinedAt: !13814)
!13910 = !DILocation(line: 280, column: 13, scope: !13473, inlinedAt: !13814)
!13911 = !DILocation(line: 281, column: 13, scope: !13492, inlinedAt: !13814)
!13912 = !DILocation(line: 281, column: 13, scope: !13495, inlinedAt: !13814)
!13913 = !DILocation(line: 281, column: 13, scope: !13496, inlinedAt: !13814)
!13914 = !DILocation(line: 282, column: 13, scope: !13473, inlinedAt: !13814)
!13915 = !DILocation(line: 283, column: 13, scope: !13473, inlinedAt: !13814)
!13916 = !DILocation(line: 284, column: 13, scope: !13501, inlinedAt: !13814)
!13917 = !DILocation(line: 284, column: 13, scope: !13504, inlinedAt: !13814)
!13918 = !DILocation(line: 284, column: 13, scope: !13505, inlinedAt: !13814)
!13919 = !DILocation(line: 285, column: 9, scope: !13473, inlinedAt: !13814)
!13920 = !DILocation(line: 270, column: 69, scope: !13468, inlinedAt: !13814)
!13921 = !DILocation(line: 270, column: 9, scope: !13468, inlinedAt: !13814)
!13922 = distinct !{!13922, !13895, !13923, !3413}
!13923 = !DILocation(line: 285, column: 9, scope: !13462, inlinedAt: !13814)
!13924 = !DILocation(line: 286, column: 5, scope: !13459, inlinedAt: !13814)
!13925 = !DILocation(line: 286, column: 16, scope: !13514, inlinedAt: !13814)
!13926 = !DILocation(line: 286, column: 23, scope: !13514, inlinedAt: !13814)
!13927 = !DILocation(line: 286, column: 16, scope: !13451, inlinedAt: !13814)
!13928 = !DILocation(line: 287, column: 27, scope: !13518, inlinedAt: !13814)
!13929 = !DILocation(line: 289, column: 23, scope: !13521, inlinedAt: !13814)
!13930 = !DILocation(line: 289, column: 32, scope: !13521, inlinedAt: !13814)
!13931 = !DILocation(line: 289, column: 41, scope: !13521, inlinedAt: !13814)
!13932 = !DILocation(line: 289, column: 21, scope: !13521, inlinedAt: !13814)
!13933 = !DILocation(line: 289, column: 14, scope: !13521, inlinedAt: !13814)
!13934 = !DILocation(line: 289, column: 50, scope: !13527, inlinedAt: !13814)
!13935 = !DILocation(line: 289, column: 58, scope: !13527, inlinedAt: !13814)
!13936 = !DILocation(line: 289, column: 9, scope: !13521, inlinedAt: !13814)
!13937 = !DILocation(line: 290, column: 25, scope: !13531, inlinedAt: !13814)
!13938 = !DILocation(line: 290, column: 33, scope: !13531, inlinedAt: !13814)
!13939 = !DILocation(line: 290, column: 18, scope: !13531, inlinedAt: !13814)
!13940 = !DILocation(line: 290, column: 17, scope: !13532, inlinedAt: !13814)
!13941 = !DILocation(line: 291, column: 17, scope: !13537, inlinedAt: !13814)
!13942 = !DILocation(line: 291, column: 17, scope: !13538, inlinedAt: !13814)
!13943 = !DILocation(line: 292, column: 17, scope: !13542, inlinedAt: !13814)
!13944 = !DILocation(line: 292, column: 17, scope: !13545, inlinedAt: !13814)
!13945 = !DILocation(line: 292, column: 17, scope: !13546, inlinedAt: !13814)
!13946 = !DILocation(line: 293, column: 17, scope: !13539, inlinedAt: !13814)
!13947 = !DILocation(line: 289, column: 69, scope: !13527, inlinedAt: !13814)
!13948 = !DILocation(line: 289, column: 9, scope: !13527, inlinedAt: !13814)
!13949 = distinct !{!13949, !13936, !13950, !3413}
!13950 = !DILocation(line: 295, column: 9, scope: !13521, inlinedAt: !13814)
!13951 = !DILocation(line: 296, column: 5, scope: !13518, inlinedAt: !13814)
!13952 = !DILocation(line: 298, column: 9, scope: !13555, inlinedAt: !13814)
!13953 = !DILocation(line: 298, column: 9, scope: !13330, inlinedAt: !13814)
!13954 = !DILocation(line: 299, column: 9, scope: !13558, inlinedAt: !13814)
!13955 = !DILocation(line: 299, column: 9, scope: !13559, inlinedAt: !13814)
!13956 = !DILocation(line: 300, column: 9, scope: !13563, inlinedAt: !13814)
!13957 = !DILocation(line: 300, column: 9, scope: !13564, inlinedAt: !13814)
!13958 = !DILocation(line: 301, column: 5, scope: !13560, inlinedAt: !13814)
!13959 = !DILocation(line: 303, column: 9, scope: !13568, inlinedAt: !13814)
!13960 = !DILocation(line: 303, column: 9, scope: !13330, inlinedAt: !13814)
!13961 = !DILocation(line: 304, column: 9, scope: !13571, inlinedAt: !13814)
!13962 = !DILocation(line: 304, column: 9, scope: !13572, inlinedAt: !13814)
!13963 = !DILocation(line: 305, column: 9, scope: !13576, inlinedAt: !13814)
!13964 = !DILocation(line: 305, column: 9, scope: !13577, inlinedAt: !13814)
!13965 = !DILocation(line: 306, column: 5, scope: !13573, inlinedAt: !13814)
!13966 = !DILocation(line: 308, column: 5, scope: !13581, inlinedAt: !13814)
!13967 = !DILocation(line: 308, column: 5, scope: !13582, inlinedAt: !13814)
!13968 = !DILocation(line: 310, column: 21, scope: !13330, inlinedAt: !13814)
!13969 = !DILocation(line: 310, column: 33, scope: !13330, inlinedAt: !13814)
!13970 = !DILocation(line: 310, column: 31, scope: !13330, inlinedAt: !13814)
!13971 = !DILocation(line: 310, column: 41, scope: !13330, inlinedAt: !13814)
!13972 = !DILocation(line: 310, column: 5, scope: !13330, inlinedAt: !13814)
!13973 = !DILocation(line: 311, column: 1, scope: !13330, inlinedAt: !13814)
!13974 = !DILocation(line: 331, column: 16, scope: !13790)
!13975 = !DILocation(line: 333, column: 9, scope: !13976)
!13976 = distinct !DILexicalBlock(scope: !13790, file: !1852, line: 333, column: 9)
!13977 = !DILocation(line: 333, column: 9, scope: !13790)
!13978 = !DILocation(line: 334, column: 9, scope: !13976)
!13979 = !DILocation(line: 336, column: 5, scope: !13790)
!13980 = !DILocation(line: 336, column: 14, scope: !13790)
!13981 = !DILocation(line: 336, column: 20, scope: !13790)
!13982 = !DILocation(line: 337, column: 15, scope: !13790)
!13983 = !DILocation(line: 337, column: 24, scope: !13790)
!13984 = !DILocation(line: 337, column: 32, scope: !13790)
!13985 = !DILocation(line: 337, column: 5, scope: !13790)
!13986 = !DILocation(line: 339, column: 5, scope: !13790)
!13987 = !DILocation(line: 340, column: 1, scope: !13790)
!13988 = distinct !DISubprogram(name: "parse_query_string", scope: !1572, file: !1572, line: 201, type: !1770, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!13989 = !DILocalVariable(name: "request", arg: 1, scope: !13988, file: !1572, line: 201, type: !1580)
!13990 = !DILocation(line: 201, column: 36, scope: !13988)
!13991 = !DILocalVariable(name: "helper", arg: 2, scope: !13988, file: !1572, line: 201, type: !1741)
!13992 = !DILocation(line: 201, column: 75, scope: !13988)
!13993 = !DILocation(line: 203, column: 32, scope: !13988)
!13994 = !DILocation(line: 203, column: 42, scope: !13988)
!13995 = !DILocation(line: 203, column: 50, scope: !13988)
!13996 = !DILocation(line: 204, column: 14, scope: !13988)
!13997 = !DILocation(line: 204, column: 23, scope: !13988)
!13998 = !DILocation(line: 204, column: 36, scope: !13988)
!13999 = !DILocation(line: 204, column: 43, scope: !13988)
!14000 = !DILocation(line: 204, column: 52, scope: !13988)
!14001 = !DILocation(line: 204, column: 65, scope: !13988)
!14002 = !DILocation(line: 203, column: 5, scope: !13988)
!14003 = !DILocation(line: 205, column: 1, scope: !13988)
!14004 = distinct !DISubprogram(name: "parse_if_modified_since", scope: !1572, file: !1572, line: 379, type: !1770, scopeLine: 380, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!14005 = !DILocalVariable(name: "request", arg: 1, scope: !14004, file: !1572, line: 379, type: !1580)
!14006 = !DILocation(line: 379, column: 41, scope: !14004)
!14007 = !DILocalVariable(name: "helper", arg: 2, scope: !14004, file: !1572, line: 379, type: !1741)
!14008 = !DILocation(line: 379, column: 80, scope: !14004)
!14009 = !DILocation(line: 381, column: 9, scope: !14010)
!14010 = distinct !DILexicalBlock(scope: !14004, file: !1572, line: 381, column: 9)
!14011 = !DILocation(line: 381, column: 9, scope: !14004)
!14012 = !DILocation(line: 382, column: 9, scope: !14010)
!14013 = !DILocalVariable(name: "t", scope: !14004, file: !1572, line: 384, type: !14014)
!14014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !14015, line: 7, size: 448, elements: !14016)
!14015 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h", directory: "", checksumkind: CSK_MD5, checksum: "9e5545b565ef031c4cd0faf90b69386f")
!14016 = !{!14017, !14018, !14019, !14020, !14021, !14022, !14023, !14024, !14025, !14026, !14027}
!14017 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !14014, file: !14015, line: 9, baseType: !34, size: 32)
!14018 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !14014, file: !14015, line: 10, baseType: !34, size: 32, offset: 32)
!14019 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !14014, file: !14015, line: 11, baseType: !34, size: 32, offset: 64)
!14020 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !14014, file: !14015, line: 12, baseType: !34, size: 32, offset: 96)
!14021 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !14014, file: !14015, line: 13, baseType: !34, size: 32, offset: 128)
!14022 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !14014, file: !14015, line: 14, baseType: !34, size: 32, offset: 160)
!14023 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !14014, file: !14015, line: 15, baseType: !34, size: 32, offset: 192)
!14024 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !14014, file: !14015, line: 16, baseType: !34, size: 32, offset: 224)
!14025 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !14014, file: !14015, line: 17, baseType: !34, size: 32, offset: 256)
!14026 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !14014, file: !14015, line: 20, baseType: !155, size: 64, offset: 320)
!14027 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !14014, file: !14015, line: 21, baseType: !205, size: 64, offset: 384)
!14028 = !DILocation(line: 384, column: 15, scope: !14004)
!14029 = !DILocalVariable(name: "processed", scope: !14004, file: !1572, line: 385, type: !52)
!14030 = !DILocation(line: 385, column: 11, scope: !14004)
!14031 = !DILocation(line: 385, column: 32, scope: !14004)
!14032 = !DILocation(line: 385, column: 40, scope: !14004)
!14033 = !DILocation(line: 385, column: 58, scope: !14004)
!14034 = !DILocation(line: 385, column: 23, scope: !14004)
!14035 = !DILocation(line: 388, column: 9, scope: !14036)
!14036 = distinct !DILexicalBlock(scope: !14004, file: !1572, line: 388, column: 9)
!14037 = !DILocation(line: 388, column: 9, scope: !14004)
!14038 = !DILocation(line: 389, column: 9, scope: !14036)
!14039 = !DILocation(line: 390, column: 9, scope: !14040)
!14040 = distinct !DILexicalBlock(scope: !14004, file: !1572, line: 390, column: 9)
!14041 = !DILocation(line: 390, column: 9, scope: !14004)
!14042 = !DILocation(line: 391, column: 9, scope: !14040)
!14043 = !DILocation(line: 393, column: 41, scope: !14004)
!14044 = !DILocation(line: 393, column: 5, scope: !14004)
!14045 = !DILocation(line: 393, column: 14, scope: !14004)
!14046 = !DILocation(line: 393, column: 21, scope: !14004)
!14047 = !DILocation(line: 393, column: 39, scope: !14004)
!14048 = !DILocation(line: 394, column: 1, scope: !14004)
!14049 = distinct !DISubprogram(name: "parse_range", scope: !1572, file: !1572, line: 397, type: !1770, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!14050 = !DILocalVariable(name: "request", arg: 1, scope: !14049, file: !1572, line: 397, type: !1580)
!14051 = !DILocation(line: 397, column: 29, scope: !14049)
!14052 = !DILocalVariable(name: "helper", arg: 2, scope: !14049, file: !1572, line: 397, type: !1741)
!14053 = !DILocation(line: 397, column: 68, scope: !14049)
!14054 = !DILocation(line: 399, column: 9, scope: !14055)
!14055 = distinct !DILexicalBlock(scope: !14049, file: !1572, line: 399, column: 9)
!14056 = !DILocation(line: 399, column: 9, scope: !14049)
!14057 = !DILocation(line: 400, column: 9, scope: !14055)
!14058 = !DILocalVariable(name: "range", scope: !14049, file: !1572, line: 402, type: !52)
!14059 = !DILocation(line: 402, column: 11, scope: !14049)
!14060 = !DILocation(line: 402, column: 19, scope: !14049)
!14061 = !DILocation(line: 402, column: 27, scope: !14049)
!14062 = !DILocation(line: 402, column: 33, scope: !14049)
!14063 = !DILocation(line: 403, column: 9, scope: !14064)
!14064 = distinct !DILexicalBlock(scope: !14049, file: !1572, line: 403, column: 9)
!14065 = !DILocation(line: 403, column: 9, scope: !14049)
!14066 = !DILocation(line: 404, column: 9, scope: !14064)
!14067 = !DILocation(line: 406, column: 11, scope: !14049)
!14068 = !DILocalVariable(name: "from", scope: !14049, file: !1572, line: 407, type: !186)
!14069 = !DILocation(line: 407, column: 11, scope: !14049)
!14070 = !DILocalVariable(name: "to", scope: !14049, file: !1572, line: 407, type: !186)
!14071 = !DILocation(line: 407, column: 17, scope: !14049)
!14072 = !DILocation(line: 409, column: 16, scope: !14073)
!14073 = distinct !DILexicalBlock(scope: !14049, file: !1572, line: 409, column: 9)
!14074 = !DILocation(line: 409, column: 9, scope: !14073)
!14075 = !DILocation(line: 409, column: 56, scope: !14073)
!14076 = !DILocation(line: 409, column: 9, scope: !14049)
!14077 = !DILocation(line: 410, column: 38, scope: !14078)
!14078 = distinct !DILexicalBlock(scope: !14073, file: !1572, line: 409, column: 62)
!14079 = !DILocation(line: 410, column: 9, scope: !14078)
!14080 = !DILocation(line: 410, column: 18, scope: !14078)
!14081 = !DILocation(line: 410, column: 25, scope: !14078)
!14082 = !DILocation(line: 410, column: 31, scope: !14078)
!14083 = !DILocation(line: 410, column: 36, scope: !14078)
!14084 = !DILocation(line: 411, column: 36, scope: !14078)
!14085 = !DILocation(line: 411, column: 9, scope: !14078)
!14086 = !DILocation(line: 411, column: 18, scope: !14078)
!14087 = !DILocation(line: 411, column: 25, scope: !14078)
!14088 = !DILocation(line: 411, column: 31, scope: !14078)
!14089 = !DILocation(line: 411, column: 34, scope: !14078)
!14090 = !DILocation(line: 412, column: 5, scope: !14078)
!14091 = !DILocation(line: 412, column: 23, scope: !14092)
!14092 = distinct !DILexicalBlock(scope: !14073, file: !1572, line: 412, column: 16)
!14093 = !DILocation(line: 412, column: 16, scope: !14092)
!14094 = !DILocation(line: 412, column: 47, scope: !14092)
!14095 = !DILocation(line: 412, column: 16, scope: !14073)
!14096 = !DILocation(line: 413, column: 9, scope: !14097)
!14097 = distinct !DILexicalBlock(scope: !14092, file: !1572, line: 412, column: 53)
!14098 = !DILocation(line: 413, column: 18, scope: !14097)
!14099 = !DILocation(line: 413, column: 25, scope: !14097)
!14100 = !DILocation(line: 413, column: 31, scope: !14097)
!14101 = !DILocation(line: 413, column: 36, scope: !14097)
!14102 = !DILocation(line: 414, column: 36, scope: !14097)
!14103 = !DILocation(line: 414, column: 9, scope: !14097)
!14104 = !DILocation(line: 414, column: 18, scope: !14097)
!14105 = !DILocation(line: 414, column: 25, scope: !14097)
!14106 = !DILocation(line: 414, column: 31, scope: !14097)
!14107 = !DILocation(line: 414, column: 34, scope: !14097)
!14108 = !DILocation(line: 415, column: 5, scope: !14097)
!14109 = !DILocation(line: 415, column: 23, scope: !14110)
!14110 = distinct !DILexicalBlock(scope: !14092, file: !1572, line: 415, column: 16)
!14111 = !DILocation(line: 415, column: 16, scope: !14110)
!14112 = !DILocation(line: 415, column: 51, scope: !14110)
!14113 = !DILocation(line: 415, column: 16, scope: !14092)
!14114 = !DILocation(line: 416, column: 38, scope: !14115)
!14115 = distinct !DILexicalBlock(scope: !14110, file: !1572, line: 415, column: 57)
!14116 = !DILocation(line: 416, column: 9, scope: !14115)
!14117 = !DILocation(line: 416, column: 18, scope: !14115)
!14118 = !DILocation(line: 416, column: 25, scope: !14115)
!14119 = !DILocation(line: 416, column: 31, scope: !14115)
!14120 = !DILocation(line: 416, column: 36, scope: !14115)
!14121 = !DILocation(line: 417, column: 9, scope: !14115)
!14122 = !DILocation(line: 417, column: 18, scope: !14115)
!14123 = !DILocation(line: 417, column: 25, scope: !14115)
!14124 = !DILocation(line: 417, column: 31, scope: !14115)
!14125 = !DILocation(line: 417, column: 34, scope: !14115)
!14126 = !DILocation(line: 418, column: 5, scope: !14115)
!14127 = !DILocation(line: 419, column: 9, scope: !14128)
!14128 = distinct !DILexicalBlock(scope: !14110, file: !1572, line: 418, column: 12)
!14129 = !DILocation(line: 419, column: 18, scope: !14128)
!14130 = !DILocation(line: 419, column: 25, scope: !14128)
!14131 = !DILocation(line: 419, column: 31, scope: !14128)
!14132 = !DILocation(line: 419, column: 36, scope: !14128)
!14133 = !DILocation(line: 420, column: 9, scope: !14128)
!14134 = !DILocation(line: 420, column: 18, scope: !14128)
!14135 = !DILocation(line: 420, column: 25, scope: !14128)
!14136 = !DILocation(line: 420, column: 31, scope: !14128)
!14137 = !DILocation(line: 420, column: 34, scope: !14128)
!14138 = !DILocation(line: 422, column: 1, scope: !14049)
!14139 = !DILocalVariable(name: "request", arg: 1, scope: !1769, file: !1572, line: 425, type: !1580)
!14140 = !DILocation(line: 425, column: 39, scope: !1769)
!14141 = !DILocalVariable(name: "helper", arg: 2, scope: !1769, file: !1572, line: 425, type: !1741)
!14142 = !DILocation(line: 425, column: 78, scope: !1769)
!14143 = !DILocation(line: 427, column: 10, scope: !14144)
!14144 = distinct !DILexicalBlock(scope: !1769, file: !1572, line: 427, column: 9)
!14145 = !DILocation(line: 427, column: 18, scope: !14144)
!14146 = !DILocation(line: 427, column: 34, scope: !14144)
!14147 = !DILocation(line: 427, column: 9, scope: !1769)
!14148 = !DILocation(line: 428, column: 9, scope: !14144)
!14149 = !DILocalVariable(name: "p", scope: !14150, file: !1572, line: 437, type: !52)
!14150 = distinct !DILexicalBlock(scope: !1769, file: !1572, line: 437, column: 5)
!14151 = !DILocation(line: 437, column: 16, scope: !14150)
!14152 = !DILocation(line: 437, column: 20, scope: !14150)
!14153 = !DILocation(line: 437, column: 28, scope: !14150)
!14154 = !DILocation(line: 437, column: 44, scope: !14150)
!14155 = !DILocation(line: 437, column: 10, scope: !14150)
!14156 = !DILocation(line: 437, column: 51, scope: !14157)
!14157 = distinct !DILexicalBlock(scope: !14150, file: !1572, line: 437, column: 5)
!14158 = !DILocation(line: 437, column: 53, scope: !14157)
!14159 = !DILocation(line: 437, column: 57, scope: !14157)
!14160 = !DILocation(line: 437, column: 56, scope: !14157)
!14161 = !DILocation(line: 0, scope: !14157)
!14162 = !DILocation(line: 437, column: 5, scope: !14150)
!14163 = !DILocation(line: 438, column: 9, scope: !14164)
!14164 = distinct !DILexicalBlock(scope: !14157, file: !1572, line: 437, column: 65)
!14165 = !DILocation(line: 68, column: 58, scope: !12613, inlinedAt: !14166)
!14166 = distinct !DILocation(line: 438, column: 9, scope: !14164)
!14167 = !DILocation(line: 70, column: 13, scope: !12613, inlinedAt: !14166)
!14168 = !DILocation(line: 71, column: 16, scope: !12613, inlinedAt: !14166)
!14169 = !DILocation(line: 71, column: 5, scope: !12613, inlinedAt: !14166)
!14170 = !DILocation(line: 72, column: 12, scope: !12613, inlinedAt: !14166)
!14171 = !DILocation(line: 441, column: 13, scope: !14172)
!14172 = distinct !DILexicalBlock(scope: !14164, file: !1572, line: 438, column: 26)
!14173 = !DILocation(line: 441, column: 22, scope: !14172)
!14174 = !DILocation(line: 441, column: 28, scope: !14172)
!14175 = !DILocation(line: 442, column: 13, scope: !14172)
!14176 = !DILocation(line: 445, column: 13, scope: !14172)
!14177 = !DILocation(line: 445, column: 22, scope: !14172)
!14178 = !DILocation(line: 445, column: 28, scope: !14172)
!14179 = !DILocation(line: 446, column: 13, scope: !14172)
!14180 = !DILocation(line: 449, column: 26, scope: !14181)
!14181 = distinct !DILexicalBlock(scope: !14164, file: !1572, line: 449, column: 13)
!14182 = !DILocation(line: 449, column: 19, scope: !14181)
!14183 = !DILocation(line: 449, column: 17, scope: !14181)
!14184 = !DILocation(line: 449, column: 13, scope: !14164)
!14185 = !DILocation(line: 450, column: 13, scope: !14181)
!14186 = !DILocation(line: 451, column: 5, scope: !14164)
!14187 = !DILocation(line: 437, column: 61, scope: !14157)
!14188 = !DILocation(line: 437, column: 5, scope: !14157)
!14189 = distinct !{!14189, !14162, !14190, !3413}
!14190 = !DILocation(line: 451, column: 5, scope: !14150)
!14191 = !DILocation(line: 452, column: 1, scope: !1769)
!14192 = !DILocalVariable(name: "request", arg: 1, scope: !1847, file: !1572, line: 208, type: !1580)
!14193 = !DILocation(line: 208, column: 33, scope: !1847)
!14194 = !DILocalVariable(name: "helper", arg: 2, scope: !1847, file: !1572, line: 208, type: !1741)
!14195 = !DILocation(line: 208, column: 72, scope: !1847)
!14196 = !DILocation(line: 212, column: 9, scope: !14197)
!14197 = distinct !DILexicalBlock(scope: !1847, file: !1572, line: 212, column: 9)
!14198 = !DILocation(line: 212, column: 17, scope: !14197)
!14199 = !DILocation(line: 212, column: 30, scope: !14197)
!14200 = !DILocation(line: 212, column: 34, scope: !14197)
!14201 = !DILocation(line: 212, column: 9, scope: !1847)
!14202 = !DILocation(line: 213, column: 9, scope: !14197)
!14203 = !DILocation(line: 214, column: 9, scope: !14204)
!14204 = distinct !DILexicalBlock(scope: !1847, file: !1572, line: 214, column: 9)
!14205 = !DILocation(line: 214, column: 9, scope: !1847)
!14206 = !DILocation(line: 215, column: 9, scope: !14204)
!14207 = !DILocation(line: 217, column: 32, scope: !1847)
!14208 = !DILocation(line: 217, column: 42, scope: !1847)
!14209 = !DILocation(line: 217, column: 50, scope: !1847)
!14210 = !DILocation(line: 218, column: 14, scope: !1847)
!14211 = !DILocation(line: 218, column: 23, scope: !1847)
!14212 = !DILocation(line: 218, column: 33, scope: !1847)
!14213 = !DILocation(line: 218, column: 40, scope: !1847)
!14214 = !DILocation(line: 218, column: 49, scope: !1847)
!14215 = !DILocation(line: 218, column: 59, scope: !1847)
!14216 = !DILocation(line: 217, column: 5, scope: !1847)
!14217 = !DILocation(line: 219, column: 1, scope: !1847)
!14218 = distinct !DISubprogram(name: "parse_urlencoded_keyvalues", scope: !1572, file: !1572, line: 159, type: !14219, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!14219 = !DISubroutineType(types: !14220)
!14220 = !{null, !1580, !1745, !14221, !480}
!14221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1666, size: 64)
!14222 = !DILocalVariable(name: "request", arg: 1, scope: !14218, file: !1572, line: 159, type: !1580)
!14223 = !DILocation(line: 159, column: 44, scope: !14218)
!14224 = !DILocalVariable(name: "helper_value", arg: 2, scope: !14218, file: !1572, line: 160, type: !1745)
!14225 = !DILocation(line: 160, column: 19, scope: !14218)
!14226 = !DILocalVariable(name: "base", arg: 3, scope: !14218, file: !1572, line: 160, type: !14221)
!14227 = !DILocation(line: 160, column: 52, scope: !14218)
!14228 = !DILocalVariable(name: "len", arg: 4, scope: !14218, file: !1572, line: 160, type: !480)
!14229 = !DILocation(line: 160, column: 66, scope: !14218)
!14230 = !DILocation(line: 162, column: 10, scope: !14231)
!14231 = distinct !DILexicalBlock(scope: !14218, file: !1572, line: 162, column: 9)
!14232 = !DILocation(line: 162, column: 24, scope: !14231)
!14233 = !DILocation(line: 162, column: 9, scope: !14218)
!14234 = !DILocation(line: 163, column: 9, scope: !14231)
!14235 = !DILocalVariable(name: "key", scope: !14218, file: !1572, line: 165, type: !52)
!14236 = !DILocation(line: 165, column: 11, scope: !14218)
!14237 = !DILocation(line: 165, column: 17, scope: !14218)
!14238 = !DILocation(line: 165, column: 31, scope: !14218)
!14239 = !DILocalVariable(name: "value", scope: !14218, file: !1572, line: 166, type: !52)
!14240 = !DILocation(line: 166, column: 11, scope: !14218)
!14241 = !DILocalVariable(name: "values", scope: !14218, file: !1572, line: 167, type: !55)
!14242 = !DILocation(line: 167, column: 12, scope: !14218)
!14243 = !DILocalVariable(name: "kvs", scope: !14218, file: !1572, line: 168, type: !14244)
!14244 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1667, size: 32768, elements: !445)
!14245 = !DILocation(line: 168, column: 22, scope: !14218)
!14246 = !DILocalVariable(name: "ch", scope: !14247, file: !1572, line: 170, type: !52)
!14247 = distinct !DILexicalBlock(scope: !14218, file: !1572, line: 170, column: 5)
!14248 = !DILocation(line: 170, column: 16, scope: !14247)
!14249 = !DILocation(line: 170, column: 21, scope: !14247)
!14250 = !DILocation(line: 170, column: 10, scope: !14247)
!14251 = !DILocation(line: 170, column: 27, scope: !14252)
!14252 = distinct !DILexicalBlock(scope: !14247, file: !1572, line: 170, column: 5)
!14253 = !DILocation(line: 170, column: 26, scope: !14252)
!14254 = !DILocation(line: 170, column: 5, scope: !14247)
!14255 = !DILocation(line: 171, column: 18, scope: !14256)
!14256 = distinct !DILexicalBlock(scope: !14252, file: !1572, line: 170, column: 37)
!14257 = !DILocation(line: 171, column: 17, scope: !14256)
!14258 = !DILocation(line: 171, column: 9, scope: !14256)
!14259 = !DILocation(line: 173, column: 14, scope: !14260)
!14260 = distinct !DILexicalBlock(scope: !14256, file: !1572, line: 171, column: 22)
!14261 = !DILocation(line: 173, column: 17, scope: !14260)
!14262 = !DILocation(line: 174, column: 21, scope: !14260)
!14263 = !DILocation(line: 174, column: 24, scope: !14260)
!14264 = !DILocation(line: 174, column: 19, scope: !14260)
!14265 = !DILocation(line: 175, column: 13, scope: !14260)
!14266 = !DILocation(line: 178, column: 14, scope: !14260)
!14267 = !DILocation(line: 178, column: 17, scope: !14260)
!14268 = !DILocation(line: 179, column: 13, scope: !14260)
!14269 = !DILocation(line: 179, column: 13, scope: !14270)
!14270 = distinct !DILexicalBlock(scope: !14271, file: !1572, line: 179, column: 13)
!14271 = distinct !DILexicalBlock(scope: !14260, file: !1572, line: 179, column: 13)
!14272 = !DILocation(line: 179, column: 13, scope: !14271)
!14273 = !DILocation(line: 179, column: 13, scope: !14274)
!14274 = distinct !DILexicalBlock(scope: !14270, file: !1572, line: 179, column: 13)
!14275 = !DILocation(line: 179, column: 13, scope: !14276)
!14276 = distinct !DILexicalBlock(scope: !14274, file: !1572, line: 179, column: 13)
!14277 = !DILocation(line: 179, column: 13, scope: !14278)
!14278 = distinct !DILexicalBlock(scope: !14274, file: !1572, line: 179, column: 13)
!14279 = !DILocation(line: 180, column: 19, scope: !14260)
!14280 = !DILocation(line: 180, column: 22, scope: !14260)
!14281 = !DILocation(line: 180, column: 17, scope: !14260)
!14282 = !DILocation(line: 181, column: 19, scope: !14260)
!14283 = !DILocation(line: 182, column: 9, scope: !14260)
!14284 = !DILocation(line: 183, column: 5, scope: !14256)
!14285 = !DILocation(line: 170, column: 33, scope: !14252)
!14286 = !DILocation(line: 170, column: 5, scope: !14252)
!14287 = distinct !{!14287, !14254, !14288, !3413}
!14288 = !DILocation(line: 183, column: 5, scope: !14247)
!14289 = !DILocation(line: 185, column: 5, scope: !14218)
!14290 = !DILocation(line: 185, column: 5, scope: !14291)
!14291 = distinct !DILexicalBlock(scope: !14292, file: !1572, line: 185, column: 5)
!14292 = distinct !DILexicalBlock(scope: !14218, file: !1572, line: 185, column: 5)
!14293 = !DILocation(line: 185, column: 5, scope: !14292)
!14294 = !DILocation(line: 185, column: 5, scope: !14295)
!14295 = distinct !DILexicalBlock(scope: !14291, file: !1572, line: 185, column: 5)
!14296 = !DILocation(line: 185, column: 5, scope: !14297)
!14297 = distinct !DILexicalBlock(scope: !14295, file: !1572, line: 185, column: 5)
!14298 = !DILocation(line: 185, column: 5, scope: !14299)
!14299 = distinct !DILexicalBlock(scope: !14295, file: !1572, line: 185, column: 5)
!14300 = !DILabel(scope: !14218, name: "oom", file: !1572, line: 186)
!14301 = !DILocation(line: 186, column: 1, scope: !14218)
!14302 = !DILocation(line: 187, column: 27, scope: !14218)
!14303 = !DILocation(line: 187, column: 23, scope: !14218)
!14304 = !DILocation(line: 187, column: 35, scope: !14218)
!14305 = !DILocation(line: 187, column: 41, scope: !14218)
!14306 = !DILocation(line: 187, column: 9, scope: !14218)
!14307 = !DILocation(line: 187, column: 5, scope: !14218)
!14308 = !DILocation(line: 187, column: 17, scope: !14218)
!14309 = !DILocation(line: 187, column: 21, scope: !14218)
!14310 = !DILocalVariable(name: "kv", scope: !14218, file: !1572, line: 189, type: !1666)
!14311 = !DILocation(line: 189, column: 23, scope: !14218)
!14312 = !DILocation(line: 189, column: 40, scope: !14218)
!14313 = !DILocation(line: 189, column: 49, scope: !14218)
!14314 = !DILocation(line: 189, column: 55, scope: !14218)
!14315 = !DILocation(line: 190, column: 42, scope: !14218)
!14316 = !DILocation(line: 190, column: 40, scope: !14218)
!14317 = !DILocation(line: 190, column: 50, scope: !14218)
!14318 = !DILocation(line: 189, column: 28, scope: !14218)
!14319 = !DILocation(line: 191, column: 9, scope: !14320)
!14320 = distinct !DILexicalBlock(scope: !14218, file: !1572, line: 191, column: 9)
!14321 = !DILocation(line: 191, column: 9, scope: !14218)
!14322 = !DILocation(line: 192, column: 15, scope: !14323)
!14323 = distinct !DILexicalBlock(scope: !14320, file: !1572, line: 191, column: 21)
!14324 = !DILocation(line: 192, column: 20, scope: !14323)
!14325 = !DILocation(line: 192, column: 9, scope: !14323)
!14326 = !DILocation(line: 193, column: 24, scope: !14323)
!14327 = !DILocation(line: 193, column: 17, scope: !14323)
!14328 = !DILocation(line: 193, column: 38, scope: !14323)
!14329 = !DILocation(line: 193, column: 36, scope: !14323)
!14330 = !DILocation(line: 193, column: 46, scope: !14323)
!14331 = !DILocation(line: 193, column: 10, scope: !14323)
!14332 = !DILocation(line: 193, column: 15, scope: !14323)
!14333 = !DILocation(line: 194, column: 16, scope: !14323)
!14334 = !DILocation(line: 194, column: 10, scope: !14323)
!14335 = !DILocation(line: 194, column: 14, scope: !14323)
!14336 = !DILocation(line: 195, column: 5, scope: !14323)
!14337 = !DILocation(line: 196, column: 1, scope: !14218)
!14338 = distinct !DISubprogram(name: "url_decode", scope: !1572, file: !1572, line: 114, type: !14339, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!14339 = !DISubroutineType(types: !14340)
!14340 = !{!55, !52}
!14341 = !DILocalVariable(name: "str", arg: 1, scope: !14338, file: !1572, line: 114, type: !52)
!14342 = !DILocation(line: 114, column: 18, scope: !14338)
!14343 = !DILocation(line: 116, column: 9, scope: !14344)
!14344 = distinct !DILexicalBlock(scope: !14338, file: !1572, line: 116, column: 9)
!14345 = !DILocation(line: 116, column: 9, scope: !14338)
!14346 = !DILocation(line: 117, column: 9, scope: !14344)
!14347 = !DILocalVariable(name: "ch", scope: !14338, file: !1572, line: 119, type: !52)
!14348 = !DILocation(line: 119, column: 11, scope: !14338)
!14349 = !DILocalVariable(name: "decoded", scope: !14338, file: !1572, line: 119, type: !52)
!14350 = !DILocation(line: 119, column: 16, scope: !14338)
!14351 = !DILocation(line: 120, column: 25, scope: !14352)
!14352 = distinct !DILexicalBlock(scope: !14338, file: !1572, line: 120, column: 5)
!14353 = !DILocation(line: 120, column: 23, scope: !14352)
!14354 = !DILocation(line: 120, column: 18, scope: !14352)
!14355 = !DILocation(line: 120, column: 10, scope: !14352)
!14356 = !DILocation(line: 120, column: 31, scope: !14357)
!14357 = distinct !DILexicalBlock(scope: !14352, file: !1572, line: 120, column: 5)
!14358 = !DILocation(line: 120, column: 30, scope: !14357)
!14359 = !DILocation(line: 120, column: 5, scope: !14352)
!14360 = !DILocation(line: 121, column: 14, scope: !14361)
!14361 = distinct !DILexicalBlock(scope: !14362, file: !1572, line: 121, column: 13)
!14362 = distinct !DILexicalBlock(scope: !14357, file: !1572, line: 120, column: 41)
!14363 = !DILocation(line: 121, column: 13, scope: !14361)
!14364 = !DILocation(line: 121, column: 17, scope: !14361)
!14365 = !DILocation(line: 121, column: 24, scope: !14361)
!14366 = !DILocation(line: 121, column: 27, scope: !14361)
!14367 = !DILocalVariable(name: "ch", arg: 1, scope: !14368, file: !1572, line: 108, type: !53)
!14368 = distinct !DISubprogram(name: "is_hex_digit", scope: !1572, file: !1572, line: 108, type: !14369, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!14369 = !DISubroutineType(types: !14370)
!14370 = !{!137, !53}
!14371 = !DILocation(line: 108, column: 19, scope: !14368, inlinedAt: !14372)
!14372 = distinct !DILocation(line: 121, column: 27, scope: !14361)
!14373 = !DILocation(line: 110, column: 13, scope: !14368, inlinedAt: !14372)
!14374 = !DILocation(line: 110, column: 16, scope: !14368, inlinedAt: !14372)
!14375 = !DILocation(line: 110, column: 23, scope: !14368, inlinedAt: !14372)
!14376 = !DILocation(line: 110, column: 26, scope: !14368, inlinedAt: !14372)
!14377 = !DILocation(line: 110, column: 29, scope: !14368, inlinedAt: !14372)
!14378 = !DILocation(line: 110, column: 37, scope: !14368, inlinedAt: !14372)
!14379 = !DILocation(line: 110, column: 41, scope: !14368, inlinedAt: !14372)
!14380 = !DILocation(line: 110, column: 44, scope: !14368, inlinedAt: !14372)
!14381 = !DILocation(line: 110, column: 51, scope: !14368, inlinedAt: !14372)
!14382 = !DILocation(line: 110, column: 54, scope: !14368, inlinedAt: !14372)
!14383 = !DILocation(line: 110, column: 57, scope: !14368, inlinedAt: !14372)
!14384 = !DILocation(line: 110, column: 65, scope: !14368, inlinedAt: !14372)
!14385 = !DILocation(line: 110, column: 69, scope: !14368, inlinedAt: !14372)
!14386 = !DILocation(line: 110, column: 72, scope: !14368, inlinedAt: !14372)
!14387 = !DILocation(line: 110, column: 79, scope: !14368, inlinedAt: !14372)
!14388 = !DILocation(line: 110, column: 82, scope: !14368, inlinedAt: !14372)
!14389 = !DILocation(line: 110, column: 85, scope: !14368, inlinedAt: !14372)
!14390 = !DILocation(line: 0, scope: !14368, inlinedAt: !14372)
!14391 = !DILocation(line: 108, column: 19, scope: !14368, inlinedAt: !14392)
!14392 = distinct !DILocation(line: 121, column: 27, scope: !14361)
!14393 = !DILocation(line: 110, column: 13, scope: !14368, inlinedAt: !14392)
!14394 = !DILocation(line: 110, column: 16, scope: !14368, inlinedAt: !14392)
!14395 = !DILocation(line: 110, column: 23, scope: !14368, inlinedAt: !14392)
!14396 = !DILocation(line: 110, column: 26, scope: !14368, inlinedAt: !14392)
!14397 = !DILocation(line: 110, column: 29, scope: !14368, inlinedAt: !14392)
!14398 = !DILocation(line: 110, column: 37, scope: !14368, inlinedAt: !14392)
!14399 = !DILocation(line: 110, column: 41, scope: !14368, inlinedAt: !14392)
!14400 = !DILocation(line: 110, column: 44, scope: !14368, inlinedAt: !14392)
!14401 = !DILocation(line: 110, column: 51, scope: !14368, inlinedAt: !14392)
!14402 = !DILocation(line: 110, column: 54, scope: !14368, inlinedAt: !14392)
!14403 = !DILocation(line: 110, column: 57, scope: !14368, inlinedAt: !14392)
!14404 = !DILocation(line: 110, column: 65, scope: !14368, inlinedAt: !14392)
!14405 = !DILocation(line: 110, column: 69, scope: !14368, inlinedAt: !14392)
!14406 = !DILocation(line: 110, column: 72, scope: !14368, inlinedAt: !14392)
!14407 = !DILocation(line: 110, column: 79, scope: !14368, inlinedAt: !14392)
!14408 = !DILocation(line: 110, column: 82, scope: !14368, inlinedAt: !14392)
!14409 = !DILocation(line: 110, column: 85, scope: !14368, inlinedAt: !14392)
!14410 = !DILocation(line: 0, scope: !14368, inlinedAt: !14392)
!14411 = !DILocation(line: 0, scope: !14361)
!14412 = !DILocation(line: 121, column: 13, scope: !14362)
!14413 = !DILocalVariable(name: "tmp", scope: !14414, file: !1572, line: 122, type: !53)
!14414 = distinct !DILexicalBlock(scope: !14361, file: !1572, line: 121, column: 79)
!14415 = !DILocation(line: 122, column: 18, scope: !14414)
!14416 = !DILocation(line: 122, column: 48, scope: !14414)
!14417 = !DILocalVariable(name: "ch", arg: 1, scope: !14418, file: !1572, line: 102, type: !53)
!14418 = distinct !DISubprogram(name: "decode_hex_digit", scope: !1572, file: !1572, line: 102, type: !14419, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!14419 = !DISubroutineType(types: !14420)
!14420 = !{!53, !53}
!14421 = !DILocation(line: 102, column: 23, scope: !14418, inlinedAt: !14422)
!14422 = distinct !DILocation(line: 122, column: 31, scope: !14414)
!14423 = !DILocation(line: 104, column: 20, scope: !14418, inlinedAt: !14422)
!14424 = !DILocation(line: 104, column: 23, scope: !14418, inlinedAt: !14422)
!14425 = !DILocation(line: 104, column: 19, scope: !14418, inlinedAt: !14422)
!14426 = !DILocation(line: 104, column: 33, scope: !14418, inlinedAt: !14422)
!14427 = !DILocation(line: 104, column: 36, scope: !14418, inlinedAt: !14422)
!14428 = !DILocation(line: 104, column: 45, scope: !14418, inlinedAt: !14422)
!14429 = !DILocation(line: 104, column: 48, scope: !14418, inlinedAt: !14422)
!14430 = !DILocation(line: 104, column: 53, scope: !14418, inlinedAt: !14422)
!14431 = !DILocation(line: 104, column: 12, scope: !14418, inlinedAt: !14422)
!14432 = !DILocation(line: 122, column: 31, scope: !14414)
!14433 = !DILocation(line: 122, column: 55, scope: !14414)
!14434 = !DILocation(line: 122, column: 79, scope: !14414)
!14435 = !DILocation(line: 102, column: 23, scope: !14418, inlinedAt: !14436)
!14436 = distinct !DILocation(line: 122, column: 62, scope: !14414)
!14437 = !DILocation(line: 104, column: 20, scope: !14418, inlinedAt: !14436)
!14438 = !DILocation(line: 104, column: 23, scope: !14418, inlinedAt: !14436)
!14439 = !DILocation(line: 104, column: 19, scope: !14418, inlinedAt: !14436)
!14440 = !DILocation(line: 104, column: 33, scope: !14418, inlinedAt: !14436)
!14441 = !DILocation(line: 104, column: 36, scope: !14418, inlinedAt: !14436)
!14442 = !DILocation(line: 104, column: 45, scope: !14418, inlinedAt: !14436)
!14443 = !DILocation(line: 104, column: 48, scope: !14418, inlinedAt: !14436)
!14444 = !DILocation(line: 104, column: 53, scope: !14418, inlinedAt: !14436)
!14445 = !DILocation(line: 104, column: 12, scope: !14418, inlinedAt: !14436)
!14446 = !DILocation(line: 122, column: 62, scope: !14414)
!14447 = !DILocation(line: 122, column: 60, scope: !14414)
!14448 = !DILocation(line: 122, column: 24, scope: !14414)
!14449 = !DILocation(line: 123, column: 17, scope: !14450)
!14450 = distinct !DILexicalBlock(scope: !14414, file: !1572, line: 123, column: 17)
!14451 = !DILocation(line: 123, column: 17, scope: !14414)
!14452 = !DILocation(line: 124, column: 17, scope: !14450)
!14453 = !DILocation(line: 125, column: 26, scope: !14414)
!14454 = !DILocation(line: 125, column: 21, scope: !14414)
!14455 = !DILocation(line: 125, column: 24, scope: !14414)
!14456 = !DILocation(line: 126, column: 16, scope: !14414)
!14457 = !DILocation(line: 127, column: 9, scope: !14414)
!14458 = !DILocation(line: 127, column: 21, scope: !14459)
!14459 = distinct !DILexicalBlock(scope: !14361, file: !1572, line: 127, column: 20)
!14460 = !DILocation(line: 127, column: 20, scope: !14459)
!14461 = !DILocation(line: 127, column: 24, scope: !14459)
!14462 = !DILocation(line: 127, column: 20, scope: !14361)
!14463 = !DILocation(line: 128, column: 21, scope: !14464)
!14464 = distinct !DILexicalBlock(scope: !14459, file: !1572, line: 127, column: 32)
!14465 = !DILocation(line: 128, column: 24, scope: !14464)
!14466 = !DILocation(line: 129, column: 9, scope: !14464)
!14467 = !DILocation(line: 130, column: 27, scope: !14468)
!14468 = distinct !DILexicalBlock(scope: !14459, file: !1572, line: 129, column: 16)
!14469 = !DILocation(line: 130, column: 26, scope: !14468)
!14470 = !DILocation(line: 130, column: 21, scope: !14468)
!14471 = !DILocation(line: 130, column: 24, scope: !14468)
!14472 = !DILocation(line: 132, column: 5, scope: !14362)
!14473 = !DILocation(line: 120, column: 37, scope: !14357)
!14474 = !DILocation(line: 120, column: 5, scope: !14357)
!14475 = distinct !{!14475, !14359, !14476, !3413}
!14476 = !DILocation(line: 132, column: 5, scope: !14352)
!14477 = !DILocation(line: 134, column: 6, scope: !14338)
!14478 = !DILocation(line: 134, column: 14, scope: !14338)
!14479 = !DILocation(line: 135, column: 21, scope: !14338)
!14480 = !DILocation(line: 135, column: 31, scope: !14338)
!14481 = !DILocation(line: 135, column: 29, scope: !14338)
!14482 = !DILocation(line: 135, column: 5, scope: !14338)
!14483 = !DILocation(line: 136, column: 1, scope: !14338)
!14484 = distinct !DISubprogram(name: "key_value_compare_qsort_key", scope: !1572, file: !1572, line: 139, type: !463, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!14485 = !DILocalVariable(name: "a", arg: 1, scope: !14484, file: !1572, line: 139, type: !465)
!14486 = !DILocation(line: 139, column: 41, scope: !14484)
!14487 = !DILocalVariable(name: "b", arg: 2, scope: !14484, file: !1572, line: 139, type: !465)
!14488 = !DILocation(line: 139, column: 56, scope: !14484)
!14489 = !DILocation(line: 141, column: 40, scope: !14484)
!14490 = !DILocation(line: 141, column: 44, scope: !14484)
!14491 = !DILocation(line: 141, column: 70, scope: !14484)
!14492 = !DILocation(line: 141, column: 74, scope: !14484)
!14493 = !DILocation(line: 141, column: 12, scope: !14484)
!14494 = !DILocation(line: 141, column: 5, scope: !14484)
!14495 = !DILocalVariable(name: "request", arg: 1, scope: !1827, file: !1572, line: 222, type: !1580)
!14496 = !DILocation(line: 222, column: 36, scope: !1827)
!14497 = !DILocalVariable(name: "buffer", arg: 2, scope: !1827, file: !1572, line: 222, type: !52)
!14498 = !DILocation(line: 222, column: 51, scope: !1827)
!14499 = !DILocalVariable(name: "helper", arg: 3, scope: !1827, file: !1572, line: 223, type: !1741)
!14500 = !DILocation(line: 223, column: 43, scope: !1827)
!14501 = !DILocalVariable(name: "end_of_line", scope: !1827, file: !1572, line: 227, type: !52)
!14502 = !DILocation(line: 227, column: 11, scope: !1827)
!14503 = !DILocation(line: 227, column: 32, scope: !1827)
!14504 = !DILocation(line: 228, column: 30, scope: !1827)
!14505 = !DILocation(line: 228, column: 38, scope: !1827)
!14506 = !DILocation(line: 228, column: 46, scope: !1827)
!14507 = !DILocation(line: 228, column: 61, scope: !1827)
!14508 = !DILocation(line: 228, column: 70, scope: !1827)
!14509 = !DILocation(line: 228, column: 78, scope: !1827)
!14510 = !DILocation(line: 228, column: 86, scope: !1827)
!14511 = !DILocation(line: 228, column: 68, scope: !1827)
!14512 = !DILocation(line: 228, column: 50, scope: !1827)
!14513 = !DILocation(line: 227, column: 25, scope: !1827)
!14514 = !DILocation(line: 229, column: 9, scope: !14515)
!14515 = distinct !DILexicalBlock(scope: !1827, file: !1572, line: 229, column: 9)
!14516 = !DILocation(line: 229, column: 9, scope: !1827)
!14517 = !DILocation(line: 230, column: 9, scope: !14515)
!14518 = !DILocation(line: 231, column: 9, scope: !14519)
!14519 = distinct !DILexicalBlock(scope: !1827, file: !1572, line: 231, column: 9)
!14520 = !DILocation(line: 231, column: 9, scope: !1827)
!14521 = !DILocation(line: 232, column: 9, scope: !14519)
!14522 = !DILocation(line: 233, column: 6, scope: !1827)
!14523 = !DILocation(line: 233, column: 18, scope: !1827)
!14524 = !DILocalVariable(name: "space", scope: !1827, file: !1572, line: 235, type: !52)
!14525 = !DILocation(line: 235, column: 11, scope: !1827)
!14526 = !DILocation(line: 235, column: 19, scope: !1827)
!14527 = !DILocation(line: 235, column: 31, scope: !1827)
!14528 = !DILocation(line: 236, column: 9, scope: !14529)
!14529 = distinct !DILexicalBlock(scope: !1827, file: !1572, line: 236, column: 9)
!14530 = !DILocation(line: 236, column: 9, scope: !1827)
!14531 = !DILocation(line: 237, column: 9, scope: !14529)
!14532 = !DILocation(line: 238, column: 6, scope: !1827)
!14533 = !DILocation(line: 238, column: 12, scope: !1827)
!14534 = !DILocation(line: 240, column: 9, scope: !14535)
!14535 = distinct !DILexicalBlock(scope: !1827, file: !1572, line: 240, column: 9)
!14536 = !DILocation(line: 240, column: 9, scope: !1827)
!14537 = !DILocation(line: 241, column: 9, scope: !14535)
!14538 = !DILocation(line: 243, column: 11, scope: !14539)
!14539 = distinct !DILexicalBlock(scope: !1827, file: !1572, line: 243, column: 9)
!14540 = !DILocation(line: 243, column: 17, scope: !14539)
!14541 = !DILocation(line: 243, column: 9, scope: !14539)
!14542 = !DILocation(line: 243, column: 22, scope: !14539)
!14543 = !DILocation(line: 243, column: 9, scope: !1827)
!14544 = !DILocation(line: 244, column: 9, scope: !14539)
!14545 = !DILocation(line: 244, column: 18, scope: !14539)
!14546 = !DILocation(line: 244, column: 24, scope: !14539)
!14547 = !DILocation(line: 246, column: 9, scope: !14548)
!14548 = distinct !DILexicalBlock(scope: !1827, file: !1572, line: 246, column: 9)
!14549 = !DILocation(line: 246, column: 9, scope: !1827)
!14550 = !DILocation(line: 247, column: 9, scope: !14548)
!14551 = !DILocation(line: 249, column: 26, scope: !1827)
!14552 = !DILocation(line: 249, column: 5, scope: !1827)
!14553 = !DILocation(line: 249, column: 14, scope: !1827)
!14554 = !DILocation(line: 249, column: 18, scope: !1827)
!14555 = !DILocation(line: 249, column: 24, scope: !1827)
!14556 = !DILocation(line: 250, column: 33, scope: !1827)
!14557 = !DILocation(line: 250, column: 41, scope: !1827)
!14558 = !DILocation(line: 250, column: 39, scope: !1827)
!14559 = !DILocation(line: 250, column: 5, scope: !1827)
!14560 = !DILocation(line: 250, column: 14, scope: !1827)
!14561 = !DILocation(line: 250, column: 18, scope: !1827)
!14562 = !DILocation(line: 250, column: 22, scope: !1827)
!14563 = !DILocalVariable(name: "fragment", scope: !1827, file: !1572, line: 253, type: !52)
!14564 = !DILocation(line: 253, column: 11, scope: !1827)
!14565 = !DILocation(line: 253, column: 30, scope: !1827)
!14566 = !DILocation(line: 253, column: 43, scope: !1827)
!14567 = !DILocation(line: 253, column: 52, scope: !1827)
!14568 = !DILocation(line: 253, column: 56, scope: !1827)
!14569 = !DILocation(line: 253, column: 22, scope: !1827)
!14570 = !DILocation(line: 254, column: 9, scope: !14571)
!14571 = distinct !DILexicalBlock(scope: !1827, file: !1572, line: 254, column: 9)
!14572 = !DILocation(line: 254, column: 9, scope: !1827)
!14573 = !DILocation(line: 255, column: 10, scope: !14574)
!14574 = distinct !DILexicalBlock(scope: !14571, file: !1572, line: 254, column: 19)
!14575 = !DILocation(line: 255, column: 19, scope: !14574)
!14576 = !DILocation(line: 256, column: 34, scope: !14574)
!14577 = !DILocation(line: 256, column: 43, scope: !14574)
!14578 = !DILocation(line: 256, column: 9, scope: !14574)
!14579 = !DILocation(line: 256, column: 17, scope: !14574)
!14580 = !DILocation(line: 256, column: 26, scope: !14574)
!14581 = !DILocation(line: 256, column: 32, scope: !14574)
!14582 = !DILocation(line: 257, column: 41, scope: !14574)
!14583 = !DILocation(line: 257, column: 49, scope: !14574)
!14584 = !DILocation(line: 257, column: 47, scope: !14574)
!14585 = !DILocation(line: 257, column: 58, scope: !14574)
!14586 = !DILocation(line: 257, column: 9, scope: !14574)
!14587 = !DILocation(line: 257, column: 17, scope: !14574)
!14588 = !DILocation(line: 257, column: 26, scope: !14574)
!14589 = !DILocation(line: 257, column: 30, scope: !14574)
!14590 = !DILocation(line: 258, column: 29, scope: !14574)
!14591 = !DILocation(line: 258, column: 37, scope: !14574)
!14592 = !DILocation(line: 258, column: 46, scope: !14574)
!14593 = !DILocation(line: 258, column: 50, scope: !14574)
!14594 = !DILocation(line: 258, column: 9, scope: !14574)
!14595 = !DILocation(line: 258, column: 18, scope: !14574)
!14596 = !DILocation(line: 258, column: 22, scope: !14574)
!14597 = !DILocation(line: 258, column: 26, scope: !14574)
!14598 = !DILocation(line: 259, column: 5, scope: !14574)
!14599 = !DILocalVariable(name: "query_string", scope: !1827, file: !1572, line: 263, type: !52)
!14600 = !DILocation(line: 263, column: 11, scope: !1827)
!14601 = !DILocation(line: 263, column: 33, scope: !1827)
!14602 = !DILocation(line: 263, column: 46, scope: !1827)
!14603 = !DILocation(line: 263, column: 55, scope: !1827)
!14604 = !DILocation(line: 263, column: 59, scope: !1827)
!14605 = !DILocation(line: 263, column: 26, scope: !1827)
!14606 = !DILocation(line: 264, column: 9, scope: !14607)
!14607 = distinct !DILexicalBlock(scope: !1827, file: !1572, line: 264, column: 9)
!14608 = !DILocation(line: 264, column: 9, scope: !1827)
!14609 = !DILocation(line: 265, column: 10, scope: !14610)
!14610 = distinct !DILexicalBlock(scope: !14607, file: !1572, line: 264, column: 23)
!14611 = !DILocation(line: 265, column: 23, scope: !14610)
!14612 = !DILocation(line: 266, column: 38, scope: !14610)
!14613 = !DILocation(line: 266, column: 51, scope: !14610)
!14614 = !DILocation(line: 266, column: 9, scope: !14610)
!14615 = !DILocation(line: 266, column: 17, scope: !14610)
!14616 = !DILocation(line: 266, column: 30, scope: !14610)
!14617 = !DILocation(line: 266, column: 36, scope: !14610)
!14618 = !DILocation(line: 267, column: 46, scope: !14610)
!14619 = !DILocation(line: 267, column: 57, scope: !14610)
!14620 = !DILocation(line: 267, column: 68, scope: !14610)
!14621 = !DILocation(line: 267, column: 77, scope: !14610)
!14622 = !DILocation(line: 267, column: 75, scope: !14610)
!14623 = !DILocation(line: 267, column: 90, scope: !14610)
!14624 = !DILocation(line: 267, column: 9, scope: !14610)
!14625 = !DILocation(line: 267, column: 17, scope: !14610)
!14626 = !DILocation(line: 267, column: 30, scope: !14610)
!14627 = !DILocation(line: 267, column: 34, scope: !14610)
!14628 = !DILocation(line: 268, column: 29, scope: !14610)
!14629 = !DILocation(line: 268, column: 37, scope: !14610)
!14630 = !DILocation(line: 268, column: 50, scope: !14610)
!14631 = !DILocation(line: 268, column: 54, scope: !14610)
!14632 = !DILocation(line: 268, column: 9, scope: !14610)
!14633 = !DILocation(line: 268, column: 18, scope: !14610)
!14634 = !DILocation(line: 268, column: 22, scope: !14610)
!14635 = !DILocation(line: 268, column: 26, scope: !14610)
!14636 = !DILocation(line: 269, column: 5, scope: !14610)
!14637 = !DILocation(line: 271, column: 35, scope: !1827)
!14638 = !DILocation(line: 271, column: 5, scope: !1827)
!14639 = !DILocation(line: 271, column: 14, scope: !1827)
!14640 = !DILocation(line: 271, column: 27, scope: !1827)
!14641 = !DILocation(line: 271, column: 33, scope: !1827)
!14642 = !DILocation(line: 272, column: 33, scope: !1827)
!14643 = !DILocation(line: 272, column: 42, scope: !1827)
!14644 = !DILocation(line: 272, column: 46, scope: !1827)
!14645 = !DILocation(line: 272, column: 5, scope: !1827)
!14646 = !DILocation(line: 272, column: 14, scope: !1827)
!14647 = !DILocation(line: 272, column: 27, scope: !1827)
!14648 = !DILocation(line: 272, column: 31, scope: !1827)
!14649 = !DILocation(line: 274, column: 12, scope: !1827)
!14650 = !DILocation(line: 274, column: 24, scope: !1827)
!14651 = !DILocation(line: 274, column: 5, scope: !1827)
!14652 = !DILocation(line: 275, column: 1, scope: !1827)
!14653 = !DILocalVariable(name: "helper", arg: 1, scope: !1738, file: !1572, line: 301, type: !1741)
!14654 = !DILocation(line: 301, column: 45, scope: !1738)
!14655 = !DILocalVariable(name: "buffer", arg: 2, scope: !1738, file: !1572, line: 301, type: !52)
!14656 = !DILocation(line: 301, column: 59, scope: !1738)
!14657 = !DILocalVariable(name: "buffer_end", arg: 3, scope: !1738, file: !1572, line: 301, type: !52)
!14658 = !DILocation(line: 301, column: 73, scope: !1738)
!14659 = !DILocalVariable(name: "p", scope: !14660, file: !1572, line: 316, type: !52)
!14660 = distinct !DILexicalBlock(scope: !1738, file: !1572, line: 316, column: 5)
!14661 = !DILocation(line: 316, column: 16, scope: !14660)
!14662 = !DILocation(line: 316, column: 20, scope: !14660)
!14663 = !DILocation(line: 316, column: 10, scope: !14660)
!14664 = !DILocation(line: 316, column: 29, scope: !14665)
!14665 = distinct !DILexicalBlock(scope: !14660, file: !1572, line: 316, column: 5)
!14666 = !DILocation(line: 316, column: 28, scope: !14665)
!14667 = !DILocation(line: 316, column: 5, scope: !14660)
!14668 = !DILocalVariable(name: "value", scope: !14669, file: !1572, line: 317, type: !52)
!14669 = distinct !DILexicalBlock(scope: !14665, file: !1572, line: 316, column: 46)
!14670 = !DILocation(line: 317, column: 15, scope: !14669)
!14671 = !DILocalVariable(name: "length", scope: !14669, file: !1572, line: 318, type: !55)
!14672 = !DILocation(line: 318, column: 16, scope: !14669)
!14673 = !DILocation(line: 318, column: 9, scope: !14669)
!14674 = !DILabel(scope: !14669, name: "retry", file: !1572, line: 320)
!14675 = !DILocation(line: 320, column: 1, scope: !14669)
!14676 = !DILocation(line: 321, column: 14, scope: !14677)
!14677 = distinct !DILexicalBlock(scope: !14669, file: !1572, line: 321, column: 13)
!14678 = !DILocation(line: 321, column: 16, scope: !14677)
!14679 = !DILocation(line: 321, column: 38, scope: !14677)
!14680 = !DILocation(line: 321, column: 35, scope: !14677)
!14681 = !DILocation(line: 321, column: 13, scope: !14669)
!14682 = !DILocation(line: 322, column: 13, scope: !14677)
!14683 = !DILocation(line: 324, column: 9, scope: !14669)
!14684 = !DILocalVariable(name: "s", arg: 1, scope: !14685, file: !7, line: 75, type: !205)
!14685 = distinct !DISubprogram(name: "string_as_int16", scope: !7, file: !7, line: 75, type: !14686, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!14686 = !DISubroutineType(types: !14687)
!14687 = !{!14688, !205}
!14688 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !4301, line: 25, baseType: !14689)
!14689 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int16_t", file: !154, line: 39, baseType: !936)
!14690 = !DILocation(line: 75, column: 58, scope: !14685, inlinedAt: !14691)
!14691 = distinct !DILocation(line: 324, column: 9, scope: !14669)
!14692 = !DILocalVariable(name: "i", scope: !14685, file: !7, line: 77, type: !14688)
!14693 = !DILocation(line: 77, column: 13, scope: !14685, inlinedAt: !14691)
!14694 = !DILocation(line: 78, column: 16, scope: !14685, inlinedAt: !14691)
!14695 = !DILocation(line: 78, column: 5, scope: !14685, inlinedAt: !14691)
!14696 = !DILocation(line: 79, column: 12, scope: !14685, inlinedAt: !14691)
!14697 = !DILocation(line: 326, column: 14, scope: !14698)
!14698 = distinct !DILexicalBlock(scope: !14669, file: !1572, line: 324, column: 32)
!14699 = !DILocation(line: 326, column: 16, scope: !14698)
!14700 = !DILocation(line: 327, column: 36, scope: !14698)
!14701 = !DILocation(line: 327, column: 38, scope: !14698)
!14702 = !DILocation(line: 327, column: 55, scope: !14698)
!14703 = !DILocation(line: 327, column: 13, scope: !14698)
!14704 = !DILocation(line: 327, column: 21, scope: !14698)
!14705 = !DILocation(line: 327, column: 34, scope: !14698)
!14706 = !DILocation(line: 328, column: 20, scope: !14698)
!14707 = !DILocation(line: 328, column: 13, scope: !14698)
!14708 = !DILocation(line: 331, column: 9, scope: !14669)
!14709 = !DILocation(line: 68, column: 58, scope: !12613, inlinedAt: !14710)
!14710 = distinct !DILocation(line: 331, column: 9, scope: !14669)
!14711 = !DILocation(line: 70, column: 13, scope: !12613, inlinedAt: !14710)
!14712 = !DILocation(line: 71, column: 16, scope: !12613, inlinedAt: !14710)
!14713 = !DILocation(line: 71, column: 5, scope: !12613, inlinedAt: !14710)
!14714 = !DILocation(line: 72, column: 12, scope: !12613, inlinedAt: !14710)
!14715 = !DILocation(line: 332, column: 9, scope: !14716)
!14716 = distinct !DILexicalBlock(scope: !14669, file: !1572, line: 331, column: 28)
!14717 = !DILocalVariable(name: "end", scope: !14718, file: !1572, line: 332, type: !52)
!14718 = distinct !DILexicalBlock(scope: !14716, file: !1572, line: 332, column: 9)
!14719 = !DILocation(line: 332, column: 9, scope: !14718)
!14720 = !DILocation(line: 332, column: 9, scope: !14721)
!14721 = distinct !DILexicalBlock(scope: !14718, file: !1572, line: 332, column: 9)
!14722 = !DILocation(line: 332, column: 9, scope: !14723)
!14723 = distinct !DILexicalBlock(scope: !14718, file: !1572, line: 332, column: 9)
!14724 = !DILocation(line: 332, column: 9, scope: !14725)
!14725 = distinct !DILexicalBlock(scope: !14718, file: !1572, line: 332, column: 9)
!14726 = !DILocation(line: 332, column: 9, scope: !14727)
!14727 = distinct !DILexicalBlock(scope: !14718, file: !1572, line: 332, column: 9)
!14728 = !DILocation(line: 332, column: 9, scope: !14729)
!14729 = distinct !DILexicalBlock(scope: !14727, file: !1572, line: 332, column: 9)
!14730 = !DILocation(line: 332, column: 9, scope: !14731)
!14731 = distinct !DILexicalBlock(scope: !14729, file: !1572, line: 332, column: 9)
!14732 = !DILocation(line: 333, column: 45, scope: !14716)
!14733 = !DILocation(line: 333, column: 13, scope: !14716)
!14734 = !DILocation(line: 333, column: 21, scope: !14716)
!14735 = !DILocation(line: 333, column: 37, scope: !14716)
!14736 = !DILocation(line: 333, column: 43, scope: !14716)
!14737 = !DILocation(line: 334, column: 43, scope: !14716)
!14738 = !DILocation(line: 334, column: 13, scope: !14716)
!14739 = !DILocation(line: 334, column: 21, scope: !14716)
!14740 = !DILocation(line: 334, column: 37, scope: !14716)
!14741 = !DILocation(line: 334, column: 41, scope: !14716)
!14742 = !DILocation(line: 335, column: 13, scope: !14716)
!14743 = !DILocation(line: 336, column: 9, scope: !14716)
!14744 = !DILocalVariable(name: "end", scope: !14745, file: !1572, line: 336, type: !52)
!14745 = distinct !DILexicalBlock(scope: !14716, file: !1572, line: 336, column: 9)
!14746 = !DILocation(line: 336, column: 9, scope: !14745)
!14747 = !DILocation(line: 336, column: 9, scope: !14748)
!14748 = distinct !DILexicalBlock(scope: !14745, file: !1572, line: 336, column: 9)
!14749 = !DILocation(line: 336, column: 9, scope: !14750)
!14750 = distinct !DILexicalBlock(scope: !14745, file: !1572, line: 336, column: 9)
!14751 = !DILocation(line: 336, column: 9, scope: !14752)
!14752 = distinct !DILexicalBlock(scope: !14745, file: !1572, line: 336, column: 9)
!14753 = !DILocation(line: 336, column: 9, scope: !14754)
!14754 = distinct !DILexicalBlock(scope: !14745, file: !1572, line: 336, column: 9)
!14755 = !DILocation(line: 336, column: 9, scope: !14756)
!14756 = distinct !DILexicalBlock(scope: !14754, file: !1572, line: 336, column: 9)
!14757 = !DILocation(line: 336, column: 9, scope: !14758)
!14758 = distinct !DILexicalBlock(scope: !14756, file: !1572, line: 336, column: 9)
!14759 = !DILocation(line: 337, column: 42, scope: !14716)
!14760 = !DILocation(line: 337, column: 13, scope: !14716)
!14761 = !DILocation(line: 337, column: 21, scope: !14716)
!14762 = !DILocation(line: 337, column: 34, scope: !14716)
!14763 = !DILocation(line: 337, column: 40, scope: !14716)
!14764 = !DILocation(line: 338, column: 40, scope: !14716)
!14765 = !DILocation(line: 338, column: 13, scope: !14716)
!14766 = !DILocation(line: 338, column: 21, scope: !14716)
!14767 = !DILocation(line: 338, column: 34, scope: !14716)
!14768 = !DILocation(line: 338, column: 38, scope: !14716)
!14769 = !DILocation(line: 339, column: 13, scope: !14716)
!14770 = !DILocation(line: 340, column: 9, scope: !14716)
!14771 = !DILocalVariable(name: "end", scope: !14772, file: !1572, line: 340, type: !52)
!14772 = distinct !DILexicalBlock(scope: !14716, file: !1572, line: 340, column: 9)
!14773 = !DILocation(line: 340, column: 9, scope: !14772)
!14774 = !DILocation(line: 340, column: 9, scope: !14775)
!14775 = distinct !DILexicalBlock(scope: !14772, file: !1572, line: 340, column: 9)
!14776 = !DILocation(line: 340, column: 9, scope: !14777)
!14777 = distinct !DILexicalBlock(scope: !14772, file: !1572, line: 340, column: 9)
!14778 = !DILocation(line: 340, column: 9, scope: !14779)
!14779 = distinct !DILexicalBlock(scope: !14772, file: !1572, line: 340, column: 9)
!14780 = !DILocation(line: 340, column: 9, scope: !14781)
!14781 = distinct !DILexicalBlock(scope: !14772, file: !1572, line: 340, column: 9)
!14782 = !DILocation(line: 340, column: 9, scope: !14783)
!14783 = distinct !DILexicalBlock(scope: !14781, file: !1572, line: 340, column: 9)
!14784 = !DILocation(line: 340, column: 9, scope: !14785)
!14785 = distinct !DILexicalBlock(scope: !14783, file: !1572, line: 340, column: 9)
!14786 = !DILocation(line: 341, column: 44, scope: !14716)
!14787 = !DILocation(line: 341, column: 13, scope: !14716)
!14788 = !DILocation(line: 341, column: 21, scope: !14716)
!14789 = !DILocation(line: 341, column: 36, scope: !14716)
!14790 = !DILocation(line: 341, column: 42, scope: !14716)
!14791 = !DILocation(line: 342, column: 42, scope: !14716)
!14792 = !DILocation(line: 342, column: 13, scope: !14716)
!14793 = !DILocation(line: 342, column: 21, scope: !14716)
!14794 = !DILocation(line: 342, column: 36, scope: !14716)
!14795 = !DILocation(line: 342, column: 40, scope: !14716)
!14796 = !DILocation(line: 343, column: 13, scope: !14716)
!14797 = !DILocation(line: 345, column: 15, scope: !14716)
!14798 = !DILocation(line: 346, column: 13, scope: !14716)
!14799 = !DILocation(line: 347, column: 9, scope: !14716)
!14800 = !DILocalVariable(name: "end", scope: !14801, file: !1572, line: 347, type: !52)
!14801 = distinct !DILexicalBlock(scope: !14716, file: !1572, line: 347, column: 9)
!14802 = !DILocation(line: 347, column: 9, scope: !14801)
!14803 = !DILocation(line: 347, column: 9, scope: !14804)
!14804 = distinct !DILexicalBlock(scope: !14801, file: !1572, line: 347, column: 9)
!14805 = !DILocation(line: 347, column: 9, scope: !14806)
!14806 = distinct !DILexicalBlock(scope: !14801, file: !1572, line: 347, column: 9)
!14807 = !DILocation(line: 347, column: 9, scope: !14808)
!14808 = distinct !DILexicalBlock(scope: !14801, file: !1572, line: 347, column: 9)
!14809 = !DILocation(line: 347, column: 9, scope: !14810)
!14810 = distinct !DILexicalBlock(scope: !14801, file: !1572, line: 347, column: 9)
!14811 = !DILocation(line: 347, column: 9, scope: !14812)
!14812 = distinct !DILexicalBlock(scope: !14810, file: !1572, line: 347, column: 9)
!14813 = !DILocation(line: 347, column: 9, scope: !14814)
!14814 = distinct !DILexicalBlock(scope: !14812, file: !1572, line: 347, column: 9)
!14815 = !DILocation(line: 348, column: 43, scope: !14716)
!14816 = !DILocation(line: 348, column: 13, scope: !14716)
!14817 = !DILocation(line: 348, column: 21, scope: !14716)
!14818 = !DILocation(line: 348, column: 35, scope: !14716)
!14819 = !DILocation(line: 348, column: 41, scope: !14716)
!14820 = !DILocation(line: 349, column: 41, scope: !14716)
!14821 = !DILocation(line: 349, column: 13, scope: !14716)
!14822 = !DILocation(line: 349, column: 21, scope: !14716)
!14823 = !DILocation(line: 349, column: 35, scope: !14716)
!14824 = !DILocation(line: 349, column: 39, scope: !14716)
!14825 = !DILocation(line: 350, column: 13, scope: !14716)
!14826 = !DILocation(line: 351, column: 9, scope: !14716)
!14827 = !DILocalVariable(name: "end", scope: !14828, file: !1572, line: 351, type: !52)
!14828 = distinct !DILexicalBlock(scope: !14716, file: !1572, line: 351, column: 9)
!14829 = !DILocation(line: 351, column: 9, scope: !14828)
!14830 = !DILocation(line: 351, column: 9, scope: !14831)
!14831 = distinct !DILexicalBlock(scope: !14828, file: !1572, line: 351, column: 9)
!14832 = !DILocation(line: 351, column: 9, scope: !14833)
!14833 = distinct !DILexicalBlock(scope: !14828, file: !1572, line: 351, column: 9)
!14834 = !DILocation(line: 351, column: 9, scope: !14835)
!14835 = distinct !DILexicalBlock(scope: !14828, file: !1572, line: 351, column: 9)
!14836 = !DILocation(line: 351, column: 9, scope: !14837)
!14837 = distinct !DILexicalBlock(scope: !14828, file: !1572, line: 351, column: 9)
!14838 = !DILocation(line: 351, column: 9, scope: !14839)
!14839 = distinct !DILexicalBlock(scope: !14837, file: !1572, line: 351, column: 9)
!14840 = !DILocation(line: 351, column: 9, scope: !14841)
!14841 = distinct !DILexicalBlock(scope: !14839, file: !1572, line: 351, column: 9)
!14842 = !DILocation(line: 352, column: 36, scope: !14716)
!14843 = !DILocation(line: 352, column: 35, scope: !14716)
!14844 = !DILocation(line: 352, column: 42, scope: !14716)
!14845 = !DILocation(line: 352, column: 34, scope: !14716)
!14846 = !DILocation(line: 352, column: 13, scope: !14716)
!14847 = !DILocation(line: 352, column: 21, scope: !14716)
!14848 = !DILocation(line: 352, column: 32, scope: !14716)
!14849 = !DILocation(line: 353, column: 13, scope: !14716)
!14850 = !DILocation(line: 355, column: 15, scope: !14716)
!14851 = !DILocation(line: 356, column: 13, scope: !14716)
!14852 = !DILocation(line: 357, column: 9, scope: !14716)
!14853 = !DILocalVariable(name: "end", scope: !14854, file: !1572, line: 357, type: !52)
!14854 = distinct !DILexicalBlock(scope: !14716, file: !1572, line: 357, column: 9)
!14855 = !DILocation(line: 357, column: 9, scope: !14854)
!14856 = !DILocation(line: 357, column: 9, scope: !14857)
!14857 = distinct !DILexicalBlock(scope: !14854, file: !1572, line: 357, column: 9)
!14858 = !DILocation(line: 357, column: 9, scope: !14859)
!14859 = distinct !DILexicalBlock(scope: !14854, file: !1572, line: 357, column: 9)
!14860 = !DILocation(line: 357, column: 9, scope: !14861)
!14861 = distinct !DILexicalBlock(scope: !14854, file: !1572, line: 357, column: 9)
!14862 = !DILocation(line: 357, column: 9, scope: !14863)
!14863 = distinct !DILexicalBlock(scope: !14854, file: !1572, line: 357, column: 9)
!14864 = !DILocation(line: 357, column: 9, scope: !14865)
!14865 = distinct !DILexicalBlock(scope: !14863, file: !1572, line: 357, column: 9)
!14866 = !DILocation(line: 357, column: 9, scope: !14867)
!14867 = distinct !DILexicalBlock(scope: !14865, file: !1572, line: 357, column: 9)
!14868 = !DILocation(line: 358, column: 47, scope: !14716)
!14869 = !DILocation(line: 358, column: 13, scope: !14716)
!14870 = !DILocation(line: 358, column: 21, scope: !14716)
!14871 = !DILocation(line: 358, column: 39, scope: !14716)
!14872 = !DILocation(line: 358, column: 45, scope: !14716)
!14873 = !DILocation(line: 359, column: 45, scope: !14716)
!14874 = !DILocation(line: 359, column: 13, scope: !14716)
!14875 = !DILocation(line: 359, column: 21, scope: !14716)
!14876 = !DILocation(line: 359, column: 39, scope: !14716)
!14877 = !DILocation(line: 359, column: 43, scope: !14716)
!14878 = !DILocation(line: 360, column: 13, scope: !14716)
!14879 = !DILocation(line: 361, column: 9, scope: !14716)
!14880 = !DILocalVariable(name: "end", scope: !14881, file: !1572, line: 361, type: !52)
!14881 = distinct !DILexicalBlock(scope: !14716, file: !1572, line: 361, column: 9)
!14882 = !DILocation(line: 361, column: 9, scope: !14881)
!14883 = !DILocation(line: 361, column: 9, scope: !14884)
!14884 = distinct !DILexicalBlock(scope: !14881, file: !1572, line: 361, column: 9)
!14885 = !DILocation(line: 361, column: 9, scope: !14886)
!14886 = distinct !DILexicalBlock(scope: !14881, file: !1572, line: 361, column: 9)
!14887 = !DILocation(line: 361, column: 9, scope: !14888)
!14888 = distinct !DILexicalBlock(scope: !14881, file: !1572, line: 361, column: 9)
!14889 = !DILocation(line: 361, column: 9, scope: !14890)
!14890 = distinct !DILexicalBlock(scope: !14881, file: !1572, line: 361, column: 9)
!14891 = !DILocation(line: 361, column: 9, scope: !14892)
!14892 = distinct !DILexicalBlock(scope: !14890, file: !1572, line: 361, column: 9)
!14893 = !DILocation(line: 361, column: 9, scope: !14894)
!14894 = distinct !DILexicalBlock(scope: !14892, file: !1572, line: 361, column: 9)
!14895 = !DILocation(line: 362, column: 35, scope: !14716)
!14896 = !DILocation(line: 362, column: 13, scope: !14716)
!14897 = !DILocation(line: 362, column: 21, scope: !14716)
!14898 = !DILocation(line: 362, column: 27, scope: !14716)
!14899 = !DILocation(line: 362, column: 33, scope: !14716)
!14900 = !DILocation(line: 363, column: 33, scope: !14716)
!14901 = !DILocation(line: 363, column: 13, scope: !14716)
!14902 = !DILocation(line: 363, column: 21, scope: !14716)
!14903 = !DILocation(line: 363, column: 27, scope: !14716)
!14904 = !DILocation(line: 363, column: 31, scope: !14716)
!14905 = !DILocation(line: 364, column: 13, scope: !14716)
!14906 = !DILocation(line: 365, column: 9, scope: !14716)
!14907 = !DILabel(scope: !14669, name: "did_not_match", file: !1572, line: 366)
!14908 = !DILocation(line: 366, column: 1, scope: !14669)
!14909 = !DILocation(line: 367, column: 20, scope: !14669)
!14910 = !DILocation(line: 367, column: 38, scope: !14669)
!14911 = !DILocation(line: 367, column: 51, scope: !14669)
!14912 = !DILocation(line: 367, column: 49, scope: !14669)
!14913 = !DILocation(line: 367, column: 13, scope: !14669)
!14914 = !DILocation(line: 367, column: 11, scope: !14669)
!14915 = !DILocation(line: 368, column: 14, scope: !14916)
!14916 = distinct !DILexicalBlock(scope: !14669, file: !1572, line: 368, column: 13)
!14917 = !DILocation(line: 368, column: 13, scope: !14669)
!14918 = !DILocation(line: 369, column: 13, scope: !14916)
!14919 = !DILocation(line: 370, column: 5, scope: !14669)
!14920 = !DILocation(line: 316, column: 41, scope: !14665)
!14921 = !DILocation(line: 316, column: 39, scope: !14665)
!14922 = !DILocation(line: 316, column: 5, scope: !14665)
!14923 = distinct !{!14923, !14667, !14924, !3413}
!14924 = !DILocation(line: 370, column: 5, scope: !14660)
!14925 = !DILocation(line: 372, column: 12, scope: !1738)
!14926 = !DILocation(line: 372, column: 5, scope: !1738)
!14927 = !DILocation(line: 373, column: 1, scope: !1738)
!14928 = distinct !DISubprogram(name: "read_post_data", scope: !1572, file: !1572, line: 598, type: !14929, scopeLine: 601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!14929 = !DISubroutineType(types: !14930)
!14930 = !{!6, !1580, !1741, !52}
!14931 = !DILocalVariable(name: "request", arg: 1, scope: !14928, file: !1572, line: 598, type: !1580)
!14932 = !DILocation(line: 598, column: 32, scope: !14928)
!14933 = !DILocalVariable(name: "helper", arg: 2, scope: !14928, file: !1572, line: 599, type: !1741)
!14934 = !DILocation(line: 599, column: 39, scope: !14928)
!14935 = !DILocalVariable(name: "buffer", arg: 3, scope: !14928, file: !1572, line: 600, type: !52)
!14936 = !DILocation(line: 600, column: 15, scope: !14928)
!14937 = !DILocalVariable(name: "parsed_length", scope: !14928, file: !1572, line: 602, type: !155)
!14938 = !DILocation(line: 602, column: 10, scope: !14928)
!14939 = !DILocation(line: 604, column: 9, scope: !14940)
!14940 = distinct !DILexicalBlock(scope: !14928, file: !1572, line: 604, column: 9)
!14941 = !DILocation(line: 604, column: 9, scope: !14928)
!14942 = !DILocation(line: 605, column: 9, scope: !14940)
!14943 = !DILocation(line: 607, column: 9, scope: !14944)
!14944 = distinct !DILexicalBlock(scope: !14928, file: !1572, line: 607, column: 9)
!14945 = !DILocation(line: 607, column: 9, scope: !14928)
!14946 = !DILocation(line: 608, column: 9, scope: !14944)
!14947 = !DILocation(line: 610, column: 32, scope: !14928)
!14948 = !DILocation(line: 610, column: 40, scope: !14928)
!14949 = !DILocation(line: 610, column: 55, scope: !14928)
!14950 = !DILocation(line: 610, column: 21, scope: !14928)
!14951 = !DILocation(line: 610, column: 19, scope: !14928)
!14952 = !DILocation(line: 611, column: 9, scope: !14953)
!14953 = distinct !DILexicalBlock(scope: !14928, file: !1572, line: 611, column: 9)
!14954 = !DILocation(line: 611, column: 9, scope: !14928)
!14955 = !DILocation(line: 612, column: 9, scope: !14953)
!14956 = !DILocation(line: 613, column: 9, scope: !14957)
!14957 = distinct !DILexicalBlock(scope: !14928, file: !1572, line: 613, column: 9)
!14958 = !DILocation(line: 613, column: 9, scope: !14928)
!14959 = !DILocation(line: 614, column: 9, scope: !14957)
!14960 = !DILocalVariable(name: "post_data_size", scope: !14928, file: !1572, line: 616, type: !55)
!14961 = !DILocation(line: 616, column: 12, scope: !14928)
!14962 = !DILocation(line: 616, column: 37, scope: !14928)
!14963 = !DILocalVariable(name: "buffer_end", scope: !14928, file: !1572, line: 617, type: !52)
!14964 = !DILocation(line: 617, column: 11, scope: !14928)
!14965 = !DILocation(line: 617, column: 24, scope: !14928)
!14966 = !DILocation(line: 617, column: 32, scope: !14928)
!14967 = !DILocation(line: 617, column: 40, scope: !14928)
!14968 = !DILocation(line: 617, column: 48, scope: !14928)
!14969 = !DILocation(line: 617, column: 56, scope: !14928)
!14970 = !DILocation(line: 617, column: 64, scope: !14928)
!14971 = !DILocation(line: 617, column: 46, scope: !14928)
!14972 = !DILocalVariable(name: "have", scope: !14928, file: !1572, line: 618, type: !55)
!14973 = !DILocation(line: 618, column: 12, scope: !14928)
!14974 = !DILocation(line: 618, column: 39, scope: !14928)
!14975 = !DILocation(line: 618, column: 52, scope: !14928)
!14976 = !DILocation(line: 618, column: 60, scope: !14928)
!14977 = !DILocation(line: 618, column: 50, scope: !14928)
!14978 = !DILocation(line: 620, column: 9, scope: !14979)
!14979 = distinct !DILexicalBlock(scope: !14928, file: !1572, line: 620, column: 9)
!14980 = !DILocation(line: 620, column: 17, scope: !14979)
!14981 = !DILocation(line: 620, column: 14, scope: !14979)
!14982 = !DILocation(line: 620, column: 9, scope: !14928)
!14983 = !DILocation(line: 621, column: 35, scope: !14984)
!14984 = distinct !DILexicalBlock(scope: !14979, file: !1572, line: 620, column: 33)
!14985 = !DILocation(line: 621, column: 43, scope: !14984)
!14986 = !DILocation(line: 621, column: 9, scope: !14984)
!14987 = !DILocation(line: 621, column: 17, scope: !14984)
!14988 = !DILocation(line: 621, column: 27, scope: !14984)
!14989 = !DILocation(line: 621, column: 33, scope: !14984)
!14990 = !DILocation(line: 622, column: 33, scope: !14984)
!14991 = !DILocation(line: 622, column: 9, scope: !14984)
!14992 = !DILocation(line: 622, column: 17, scope: !14984)
!14993 = !DILocation(line: 622, column: 27, scope: !14984)
!14994 = !DILocation(line: 622, column: 31, scope: !14984)
!14995 = !DILocation(line: 623, column: 33, scope: !14984)
!14996 = !DILocation(line: 623, column: 9, scope: !14984)
!14997 = !DILocation(line: 623, column: 17, scope: !14984)
!14998 = !DILocation(line: 623, column: 30, scope: !14984)
!14999 = !DILocation(line: 624, column: 9, scope: !14984)
!15000 = !DILocation(line: 627, column: 9, scope: !15001)
!15001 = distinct !DILexicalBlock(scope: !14928, file: !1572, line: 627, column: 9)
!15002 = !DILocation(line: 627, column: 26, scope: !15001)
!15003 = !DILocation(line: 627, column: 24, scope: !15001)
!15004 = !DILocation(line: 627, column: 9, scope: !14928)
!15005 = !DILocation(line: 628, column: 9, scope: !15001)
!15006 = !DILocation(line: 630, column: 5, scope: !14928)
!15007 = !DILocation(line: 631, column: 1, scope: !14928)
!15008 = distinct !DISubprogram(name: "lwan_http_status_as_string", scope: !2709, file: !2709, line: 140, type: !13705, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2705, retainedNodes: !286)
!15009 = !DILocalVariable(name: "status", arg: 1, scope: !15008, file: !2709, line: 140, type: !6)
!15010 = !DILocation(line: 140, column: 47, scope: !15008)
!15011 = !DILocation(line: 142, column: 49, scope: !15008)
!15012 = !DILocation(line: 142, column: 12, scope: !15008)
!15013 = !DILocation(line: 142, column: 57, scope: !15008)
!15014 = !DILocation(line: 142, column: 5, scope: !15008)
!15015 = distinct !DISubprogram(name: "lwan_http_status_as_descriptive_string", scope: !2709, file: !2709, line: 146, type: !13705, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2705, retainedNodes: !286)
!15016 = !DILocalVariable(name: "status", arg: 1, scope: !15015, file: !2709, line: 146, type: !6)
!15017 = !DILocation(line: 146, column: 59, scope: !15015)
!15018 = !DILocation(line: 148, column: 13, scope: !15015)
!15019 = !DILocation(line: 148, column: 5, scope: !15015)
!15020 = !DILocation(line: 149, column: 19, scope: !15021)
!15021 = distinct !DILexicalBlock(scope: !15015, file: !2709, line: 148, column: 21)
!15022 = !DILocation(line: 150, column: 32, scope: !15021)
!15023 = !DILocation(line: 151, column: 34, scope: !15021)
!15024 = !DILocation(line: 152, column: 29, scope: !15021)
!15025 = !DILocation(line: 153, column: 28, scope: !15021)
!15026 = !DILocation(line: 154, column: 31, scope: !15021)
!15027 = !DILocation(line: 155, column: 26, scope: !15021)
!15028 = !DILocation(line: 156, column: 26, scope: !15021)
!15029 = !DILocation(line: 157, column: 28, scope: !15021)
!15030 = !DILocation(line: 158, column: 24, scope: !15021)
!15031 = !DILocation(line: 159, column: 26, scope: !15021)
!15032 = !DILocation(line: 160, column: 36, scope: !15021)
!15033 = !DILocation(line: 161, column: 30, scope: !15021)
!15034 = !DILocation(line: 162, column: 31, scope: !15021)
!15035 = !DILocation(line: 163, column: 32, scope: !15021)
!15036 = !DILocation(line: 164, column: 28, scope: !15021)
!15037 = !DILocation(line: 166, column: 5, scope: !15015)
!15038 = !DILocation(line: 167, column: 1, scope: !15015)
!15039 = distinct !DISubprogram(name: "lwan_tpl_apply_with_buffer", scope: !2858, file: !2858, line: 1288, type: !15040, scopeLine: 1289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!15040 = !DISubroutineType(types: !15041)
!15041 = !{!2984, !3098, !2984, !111}
!15042 = !DILocalVariable(name: "tpl", arg: 1, scope: !15039, file: !2858, line: 1288, type: !3098)
!15043 = !DILocation(line: 1288, column: 40, scope: !15039)
!15044 = !DILocalVariable(name: "buf", arg: 2, scope: !15039, file: !2858, line: 1288, type: !2984)
!15045 = !DILocation(line: 1288, column: 55, scope: !15039)
!15046 = !DILocalVariable(name: "variables", arg: 3, scope: !15039, file: !2858, line: 1288, type: !111)
!15047 = !DILocation(line: 1288, column: 66, scope: !15039)
!15048 = !DILocation(line: 1290, column: 9, scope: !15049)
!15049 = distinct !DILexicalBlock(scope: !15039, file: !2858, line: 1290, column: 9)
!15050 = !DILocation(line: 1290, column: 9, scope: !15039)
!15051 = !DILocation(line: 1291, column: 9, scope: !15049)
!15052 = !DILocation(line: 1293, column: 9, scope: !15053)
!15053 = distinct !DILexicalBlock(scope: !15039, file: !2858, line: 1293, column: 9)
!15054 = !DILocation(line: 1293, column: 9, scope: !15039)
!15055 = !DILocation(line: 1294, column: 9, scope: !15053)
!15056 = !DILocation(line: 1296, column: 17, scope: !15039)
!15057 = !DILocation(line: 1296, column: 22, scope: !15039)
!15058 = !DILocation(line: 1296, column: 27, scope: !15039)
!15059 = !DILocation(line: 1296, column: 35, scope: !15039)
!15060 = !DILocation(line: 1296, column: 40, scope: !15039)
!15061 = !DILocation(line: 1296, column: 5, scope: !15039)
!15062 = !DILocation(line: 1298, column: 12, scope: !15039)
!15063 = !DILocation(line: 1298, column: 5, scope: !15039)
!15064 = !DILocation(line: 1299, column: 1, scope: !15039)
!15065 = distinct !DISubprogram(name: "strbuf_grow_to", scope: !3350, file: !3350, line: 285, type: !15066, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3344, retainedNodes: !286)
!15066 = !DISubroutineType(types: !15067)
!15067 = !{!137, !12352, !55}
!15068 = !DILocalVariable(name: "s", arg: 1, scope: !15065, file: !3350, line: 285, type: !12352)
!15069 = !DILocation(line: 285, column: 26, scope: !15065)
!15070 = !DILocalVariable(name: "new_size", arg: 2, scope: !15065, file: !3350, line: 285, type: !55)
!15071 = !DILocation(line: 285, column: 36, scope: !15065)
!15072 = !DILocation(line: 287, column: 34, scope: !15065)
!15073 = !DILocation(line: 287, column: 37, scope: !15065)
!15074 = !DILocation(line: 287, column: 46, scope: !15065)
!15075 = !DILocation(line: 287, column: 12, scope: !15065)
!15076 = !DILocation(line: 287, column: 5, scope: !15065)
!15077 = !DILocalVariable(name: "tpl", arg: 1, scope: !3095, file: !2858, line: 1156, type: !3098)
!15078 = !DILocation(line: 1156, column: 25, scope: !3095)
!15079 = !DILocalVariable(name: "chunks", arg: 2, scope: !3095, file: !2858, line: 1156, type: !2999)
!15080 = !DILocation(line: 1156, column: 44, scope: !3095)
!15081 = !DILocalVariable(name: "buf", arg: 3, scope: !3095, file: !2858, line: 1156, type: !2984)
!15082 = !DILocation(line: 1156, column: 62, scope: !3095)
!15083 = !DILocalVariable(name: "variables", arg: 4, scope: !3095, file: !2858, line: 1156, type: !111)
!15084 = !DILocation(line: 1156, column: 73, scope: !3095)
!15085 = !DILocalVariable(name: "until_data", arg: 5, scope: !3095, file: !2858, line: 1157, type: !111)
!15086 = !DILocation(line: 1157, column: 19, scope: !3095)
!15087 = !DILocalVariable(name: "switcher", scope: !3095, file: !2858, line: 1172, type: !15088)
!15088 = !DIDerivedType(tag: DW_TAG_typedef, name: "coro_switcher_t", file: !78, line: 35, baseType: !15089)
!15089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "coro_switcher_t_", file: !78, line: 39, size: 1280, elements: !15090)
!15090 = !{!15091, !15092}
!15091 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !15089, file: !78, line: 40, baseType: !6940, size: 640)
!15092 = !DIDerivedType(tag: DW_TAG_member, name: "callee", scope: !15089, file: !78, line: 41, baseType: !6940, size: 640, offset: 640)
!15093 = !DILocation(line: 1172, column: 21, scope: !3095)
!15094 = !DILocalVariable(name: "coro", scope: !3095, file: !2858, line: 1173, type: !76)
!15095 = !DILocation(line: 1173, column: 13, scope: !3095)
!15096 = !DILocalVariable(name: "chunk", scope: !3095, file: !2858, line: 1174, type: !2999)
!15097 = !DILocation(line: 1174, column: 19, scope: !3095)
!15098 = !DILocation(line: 1174, column: 27, scope: !3095)
!15099 = !DILocation(line: 1176, column: 9, scope: !15100)
!15100 = distinct !DILexicalBlock(scope: !3095, file: !2858, line: 1176, column: 9)
!15101 = !DILocation(line: 1176, column: 9, scope: !3095)
!15102 = !DILocation(line: 1177, column: 9, scope: !15100)
!15103 = !DILocation(line: 1182, column: 5, scope: !3095)
!15104 = !DILocation(line: 1182, column: 5, scope: !15105)
!15105 = distinct !DILexicalBlock(scope: !3095, file: !2858, line: 1182, column: 5)
!15106 = !DILabel(scope: !3095, name: "action_append", file: !2858, line: 1184)
!15107 = !DILocation(line: 1184, column: 1, scope: !3095)
!15108 = !DILocation(line: 1185, column: 23, scope: !3095)
!15109 = !DILocation(line: 1185, column: 28, scope: !3095)
!15110 = !DILocation(line: 1186, column: 17, scope: !3095)
!15111 = !DILocation(line: 1185, column: 5, scope: !3095)
!15112 = !DILocation(line: 1187, column: 5, scope: !3095)
!15113 = !DILocation(line: 1187, column: 5, scope: !15114)
!15114 = distinct !DILexicalBlock(scope: !3095, file: !2858, line: 1187, column: 5)
!15115 = !DILocation(line: 1187, column: 5, scope: !15116)
!15116 = distinct !DILexicalBlock(scope: !15114, file: !2858, line: 1187, column: 5)
!15117 = !DILabel(scope: !3095, name: "action_append_char", file: !2858, line: 1189)
!15118 = !DILocation(line: 1189, column: 1, scope: !3095)
!15119 = !DILocation(line: 1190, column: 24, scope: !3095)
!15120 = !DILocation(line: 1190, column: 46, scope: !3095)
!15121 = !DILocation(line: 1190, column: 53, scope: !3095)
!15122 = !DILocation(line: 1190, column: 35, scope: !3095)
!15123 = !DILocation(line: 1190, column: 29, scope: !3095)
!15124 = !DILocation(line: 1190, column: 5, scope: !3095)
!15125 = !DILocation(line: 1191, column: 5, scope: !3095)
!15126 = !DILocation(line: 1191, column: 5, scope: !15127)
!15127 = distinct !DILexicalBlock(scope: !3095, file: !2858, line: 1191, column: 5)
!15128 = !DILocation(line: 1191, column: 5, scope: !15129)
!15129 = distinct !DILexicalBlock(scope: !15127, file: !2858, line: 1191, column: 5)
!15130 = !DILabel(scope: !3095, name: "action_variable", file: !2858, line: 1193)
!15131 = !DILocation(line: 1193, column: 1, scope: !3095)
!15132 = !DILocalVariable(name: "descriptor", scope: !15133, file: !2858, line: 1194, type: !15134)
!15133 = distinct !DILexicalBlock(scope: !3095, file: !2858, line: 1193, column: 18)
!15134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15135, size: 64)
!15135 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_var_descriptor_t", file: !2102, line: 26, baseType: !15136)
!15136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_var_descriptor_t_", file: !2102, line: 30, size: 384, elements: !15137)
!15137 = !{!15138, !15139, !15140, !15144, !15145, !15146}
!15138 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !15136, file: !2102, line: 31, baseType: !205, size: 64)
!15139 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !15136, file: !2102, line: 32, baseType: !2515, size: 64, offset: 64)
!15140 = !DIDerivedType(tag: DW_TAG_member, name: "append_to_strbuf", scope: !15136, file: !2102, line: 34, baseType: !15141, size: 64, offset: 128)
!15141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15142, size: 64)
!15142 = !DISubroutineType(types: !15143)
!15143 = !{null, !2984, !111}
!15144 = !DIDerivedType(tag: DW_TAG_member, name: "get_is_empty", scope: !15136, file: !2102, line: 35, baseType: !2139, size: 64, offset: 192)
!15145 = !DIDerivedType(tag: DW_TAG_member, name: "generator", scope: !15136, file: !2102, line: 37, baseType: !2143, size: 64, offset: 256)
!15146 = !DIDerivedType(tag: DW_TAG_member, name: "list_desc", scope: !15136, file: !2102, line: 38, baseType: !15147, size: 64, offset: 320)
!15147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15148, size: 64)
!15148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15135)
!15149 = !DILocation(line: 1194, column: 32, scope: !15133)
!15150 = !DILocation(line: 1194, column: 45, scope: !15133)
!15151 = !DILocation(line: 1194, column: 52, scope: !15133)
!15152 = !DILocation(line: 1195, column: 9, scope: !15133)
!15153 = !DILocation(line: 1195, column: 21, scope: !15133)
!15154 = !DILocation(line: 1195, column: 38, scope: !15133)
!15155 = !DILocation(line: 1195, column: 51, scope: !15133)
!15156 = !DILocation(line: 1195, column: 63, scope: !15133)
!15157 = !DILocation(line: 1195, column: 75, scope: !15133)
!15158 = !DILocation(line: 1195, column: 61, scope: !15133)
!15159 = !DILocation(line: 1196, column: 9, scope: !15133)
!15160 = !DILocation(line: 1196, column: 9, scope: !15161)
!15161 = distinct !DILexicalBlock(scope: !15133, file: !2858, line: 1196, column: 9)
!15162 = !DILocation(line: 1196, column: 9, scope: !15163)
!15163 = distinct !DILexicalBlock(scope: !15161, file: !2858, line: 1196, column: 9)
!15164 = !DILocation(line: 1197, column: 5, scope: !15133)
!15165 = !DILabel(scope: !3095, name: "action_variable_str", file: !2858, line: 1199)
!15166 = !DILocation(line: 1199, column: 1, scope: !3095)
!15167 = !DILocation(line: 1200, column: 31, scope: !3095)
!15168 = !DILocation(line: 1200, column: 44, scope: !3095)
!15169 = !DILocation(line: 1200, column: 67, scope: !3095)
!15170 = !DILocation(line: 1200, column: 74, scope: !3095)
!15171 = !DILocation(line: 1200, column: 56, scope: !3095)
!15172 = !DILocation(line: 1200, column: 54, scope: !3095)
!15173 = !DILocation(line: 1200, column: 5, scope: !3095)
!15174 = !DILocation(line: 1201, column: 5, scope: !3095)
!15175 = !DILocation(line: 1201, column: 5, scope: !15176)
!15176 = distinct !DILexicalBlock(scope: !3095, file: !2858, line: 1201, column: 5)
!15177 = !DILocation(line: 1201, column: 5, scope: !15178)
!15178 = distinct !DILexicalBlock(scope: !15176, file: !2858, line: 1201, column: 5)
!15179 = !DILabel(scope: !3095, name: "action_variable_str_escape", file: !2858, line: 1203)
!15180 = !DILocation(line: 1203, column: 1, scope: !3095)
!15181 = !DILocation(line: 1204, column: 39, scope: !3095)
!15182 = !DILocation(line: 1204, column: 52, scope: !3095)
!15183 = !DILocation(line: 1204, column: 75, scope: !3095)
!15184 = !DILocation(line: 1204, column: 82, scope: !3095)
!15185 = !DILocation(line: 1204, column: 64, scope: !3095)
!15186 = !DILocation(line: 1204, column: 62, scope: !3095)
!15187 = !DILocation(line: 1204, column: 5, scope: !3095)
!15188 = !DILocation(line: 1205, column: 5, scope: !3095)
!15189 = !DILocation(line: 1205, column: 5, scope: !15190)
!15190 = distinct !DILexicalBlock(scope: !3095, file: !2858, line: 1205, column: 5)
!15191 = !DILocation(line: 1205, column: 5, scope: !15192)
!15192 = distinct !DILexicalBlock(scope: !15190, file: !2858, line: 1205, column: 5)
!15193 = !DILabel(scope: !3095, name: "action_if_variable_not_empty", file: !2858, line: 1207)
!15194 = !DILocation(line: 1207, column: 1, scope: !3095)
!15195 = !DILocalVariable(name: "cd", scope: !15196, file: !2858, line: 1208, type: !15197)
!15196 = distinct !DILexicalBlock(scope: !3095, file: !2858, line: 1207, column: 31)
!15197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15198, size: 64)
!15198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "chunk_descriptor", file: !2858, line: 155, size: 128, elements: !15199)
!15199 = !{!15200, !15201}
!15200 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !15198, file: !2858, line: 156, baseType: !2999, size: 64)
!15201 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor", scope: !15198, file: !2858, line: 157, baseType: !15134, size: 64, offset: 64)
!15202 = !DILocation(line: 1208, column: 34, scope: !15196)
!15203 = !DILocation(line: 1208, column: 39, scope: !15196)
!15204 = !DILocation(line: 1208, column: 46, scope: !15196)
!15205 = !DILocalVariable(name: "empty", scope: !15196, file: !2858, line: 1209, type: !137)
!15206 = !DILocation(line: 1209, column: 14, scope: !15196)
!15207 = !DILocation(line: 1209, column: 22, scope: !15196)
!15208 = !DILocation(line: 1209, column: 26, scope: !15196)
!15209 = !DILocation(line: 1209, column: 38, scope: !15196)
!15210 = !DILocation(line: 1209, column: 59, scope: !15196)
!15211 = !DILocation(line: 1209, column: 71, scope: !15196)
!15212 = !DILocation(line: 1209, column: 75, scope: !15196)
!15213 = !DILocation(line: 1209, column: 87, scope: !15196)
!15214 = !DILocation(line: 1209, column: 69, scope: !15196)
!15215 = !DILocation(line: 1210, column: 13, scope: !15216)
!15216 = distinct !DILexicalBlock(scope: !15196, file: !2858, line: 1210, column: 13)
!15217 = !DILocation(line: 1210, column: 20, scope: !15216)
!15218 = !DILocation(line: 1210, column: 26, scope: !15216)
!15219 = !DILocation(line: 1210, column: 13, scope: !15196)
!15220 = !DILocation(line: 1211, column: 22, scope: !15216)
!15221 = !DILocation(line: 1211, column: 21, scope: !15216)
!15222 = !DILocation(line: 1211, column: 19, scope: !15216)
!15223 = !DILocation(line: 1211, column: 13, scope: !15216)
!15224 = !DILocation(line: 1212, column: 13, scope: !15225)
!15225 = distinct !DILexicalBlock(scope: !15196, file: !2858, line: 1212, column: 13)
!15226 = !DILocation(line: 1212, column: 13, scope: !15196)
!15227 = !DILocation(line: 1213, column: 21, scope: !15228)
!15228 = distinct !DILexicalBlock(scope: !15225, file: !2858, line: 1212, column: 20)
!15229 = !DILocation(line: 1213, column: 25, scope: !15228)
!15230 = !DILocation(line: 1213, column: 19, scope: !15228)
!15231 = !DILocation(line: 1214, column: 9, scope: !15228)
!15232 = !DILocation(line: 1215, column: 33, scope: !15233)
!15233 = distinct !DILexicalBlock(scope: !15225, file: !2858, line: 1214, column: 16)
!15234 = !DILocation(line: 1215, column: 38, scope: !15233)
!15235 = !DILocation(line: 1215, column: 44, scope: !15233)
!15236 = !DILocation(line: 1215, column: 49, scope: !15233)
!15237 = !DILocation(line: 1215, column: 54, scope: !15233)
!15238 = !DILocation(line: 1215, column: 65, scope: !15233)
!15239 = !DILocation(line: 1215, column: 69, scope: !15233)
!15240 = !DILocation(line: 1215, column: 21, scope: !15233)
!15241 = !DILocation(line: 1215, column: 19, scope: !15233)
!15242 = !DILocation(line: 1217, column: 9, scope: !15196)
!15243 = !DILocation(line: 1217, column: 9, scope: !15244)
!15244 = distinct !DILexicalBlock(scope: !15196, file: !2858, line: 1217, column: 9)
!15245 = !DILocation(line: 1217, column: 9, scope: !15246)
!15246 = distinct !DILexicalBlock(scope: !15244, file: !2858, line: 1217, column: 9)
!15247 = !DILocation(line: 1218, column: 5, scope: !15196)
!15248 = !DILabel(scope: !3095, name: "action_end_if_variable_not_empty", file: !2858, line: 1220)
!15249 = !DILocation(line: 1220, column: 1, scope: !3095)
!15250 = !DILocation(line: 1221, column: 9, scope: !15251)
!15251 = distinct !DILexicalBlock(scope: !3095, file: !2858, line: 1221, column: 9)
!15252 = !DILocation(line: 1221, column: 9, scope: !3095)
!15253 = !DILocation(line: 1222, column: 9, scope: !15251)
!15254 = !DILocation(line: 1223, column: 5, scope: !3095)
!15255 = !DILocation(line: 1223, column: 5, scope: !15256)
!15256 = distinct !DILexicalBlock(scope: !3095, file: !2858, line: 1223, column: 5)
!15257 = !DILocation(line: 1223, column: 5, scope: !15258)
!15258 = distinct !DILexicalBlock(scope: !15256, file: !2858, line: 1223, column: 5)
!15259 = !DILabel(scope: !3095, name: "action_apply_tpl", file: !2858, line: 1225)
!15260 = !DILocation(line: 1225, column: 1, scope: !3095)
!15261 = !DILocalVariable(name: "tmp", scope: !15262, file: !2858, line: 1226, type: !2984)
!15262 = distinct !DILexicalBlock(scope: !3095, file: !2858, line: 1225, column: 19)
!15263 = !DILocation(line: 1226, column: 19, scope: !15262)
!15264 = !DILocation(line: 1226, column: 40, scope: !15262)
!15265 = !DILocation(line: 1226, column: 47, scope: !15262)
!15266 = !DILocation(line: 1226, column: 53, scope: !15262)
!15267 = !DILocation(line: 1226, column: 25, scope: !15262)
!15268 = !DILocation(line: 1227, column: 27, scope: !15262)
!15269 = !DILocation(line: 1227, column: 32, scope: !15262)
!15270 = !DILocation(line: 1227, column: 56, scope: !15262)
!15271 = !DILocation(line: 1227, column: 9, scope: !15262)
!15272 = !DILocation(line: 1228, column: 21, scope: !15262)
!15273 = !DILocation(line: 1228, column: 9, scope: !15262)
!15274 = !DILocation(line: 1229, column: 9, scope: !15262)
!15275 = !DILocation(line: 1229, column: 9, scope: !15276)
!15276 = distinct !DILexicalBlock(scope: !15262, file: !2858, line: 1229, column: 9)
!15277 = !DILocation(line: 1229, column: 9, scope: !15278)
!15278 = distinct !DILexicalBlock(scope: !15276, file: !2858, line: 1229, column: 9)
!15279 = !DILocation(line: 1230, column: 5, scope: !15262)
!15280 = !DILabel(scope: !3095, name: "action_start_iter", file: !2858, line: 1232)
!15281 = !DILocation(line: 1232, column: 1, scope: !3095)
!15282 = !DILocation(line: 1233, column: 9, scope: !15283)
!15283 = distinct !DILexicalBlock(scope: !3095, file: !2858, line: 1233, column: 9)
!15284 = !DILocation(line: 1233, column: 9, scope: !3095)
!15285 = !DILocation(line: 1234, column: 9, scope: !15286)
!15286 = distinct !DILexicalBlock(scope: !15283, file: !2858, line: 1233, column: 33)
!15287 = !DILocation(line: 1235, column: 9, scope: !15286)
!15288 = !DILocation(line: 1235, column: 9, scope: !15289)
!15289 = distinct !DILexicalBlock(scope: !15286, file: !2858, line: 1235, column: 9)
!15290 = !DILocation(line: 1235, column: 9, scope: !15291)
!15291 = distinct !DILexicalBlock(scope: !15289, file: !2858, line: 1235, column: 9)
!15292 = !DILocation(line: 1236, column: 5, scope: !15286)
!15293 = !DILocalVariable(name: "cd", scope: !3095, file: !2858, line: 1238, type: !15197)
!15294 = !DILocation(line: 1238, column: 30, scope: !3095)
!15295 = !DILocation(line: 1238, column: 35, scope: !3095)
!15296 = !DILocation(line: 1238, column: 42, scope: !3095)
!15297 = !DILocation(line: 1239, column: 32, scope: !3095)
!15298 = !DILocation(line: 1239, column: 36, scope: !3095)
!15299 = !DILocation(line: 1239, column: 48, scope: !3095)
!15300 = !DILocation(line: 1239, column: 59, scope: !3095)
!15301 = !DILocation(line: 1239, column: 12, scope: !3095)
!15302 = !DILocation(line: 1239, column: 10, scope: !3095)
!15303 = !DILocalVariable(name: "resumed", scope: !3095, file: !2858, line: 1241, type: !137)
!15304 = !DILocation(line: 1241, column: 10, scope: !3095)
!15305 = !DILocation(line: 1241, column: 38, scope: !3095)
!15306 = !DILocation(line: 1241, column: 20, scope: !3095)
!15307 = !DILocalVariable(name: "negate", scope: !3095, file: !2858, line: 1242, type: !2921)
!15308 = !DILocation(line: 1242, column: 16, scope: !3095)
!15309 = !DILocation(line: 1242, column: 25, scope: !3095)
!15310 = !DILocation(line: 1242, column: 32, scope: !3095)
!15311 = !DILocation(line: 1242, column: 38, scope: !3095)
!15312 = !DILocation(line: 1243, column: 9, scope: !15313)
!15313 = distinct !DILexicalBlock(scope: !3095, file: !2858, line: 1243, column: 9)
!15314 = !DILocation(line: 1243, column: 9, scope: !3095)
!15315 = !DILocation(line: 1244, column: 20, scope: !15313)
!15316 = !DILocation(line: 1244, column: 19, scope: !15313)
!15317 = !DILocation(line: 1244, column: 17, scope: !15313)
!15318 = !DILocation(line: 1244, column: 9, scope: !15313)
!15319 = !DILocation(line: 1245, column: 10, scope: !15320)
!15320 = distinct !DILexicalBlock(scope: !3095, file: !2858, line: 1245, column: 9)
!15321 = !DILocation(line: 1245, column: 9, scope: !3095)
!15322 = !DILocation(line: 1246, column: 17, scope: !15323)
!15323 = distinct !DILexicalBlock(scope: !15320, file: !2858, line: 1245, column: 19)
!15324 = !DILocation(line: 1246, column: 21, scope: !15323)
!15325 = !DILocation(line: 1246, column: 15, scope: !15323)
!15326 = !DILocation(line: 1248, column: 13, scope: !15327)
!15327 = distinct !DILexicalBlock(scope: !15323, file: !2858, line: 1248, column: 13)
!15328 = !DILocation(line: 1248, column: 13, scope: !15323)
!15329 = !DILocation(line: 1249, column: 31, scope: !15327)
!15330 = !DILocation(line: 1249, column: 13, scope: !15327)
!15331 = !DILocation(line: 1251, column: 19, scope: !15323)
!15332 = !DILocation(line: 1251, column: 9, scope: !15323)
!15333 = !DILocation(line: 1252, column: 14, scope: !15323)
!15334 = !DILocation(line: 1254, column: 13, scope: !15335)
!15335 = distinct !DILexicalBlock(scope: !15323, file: !2858, line: 1254, column: 13)
!15336 = !DILocation(line: 1254, column: 13, scope: !15323)
!15337 = !DILocation(line: 1255, column: 13, scope: !15335)
!15338 = !DILocation(line: 1255, column: 13, scope: !15339)
!15339 = distinct !DILexicalBlock(scope: !15335, file: !2858, line: 1255, column: 13)
!15340 = !DILocation(line: 1256, column: 9, scope: !15323)
!15341 = !DILocation(line: 1256, column: 9, scope: !15342)
!15342 = distinct !DILexicalBlock(scope: !15323, file: !2858, line: 1256, column: 9)
!15343 = !DILocation(line: 1256, column: 9, scope: !15344)
!15344 = distinct !DILexicalBlock(scope: !15342, file: !2858, line: 1256, column: 9)
!15345 = !DILocation(line: 1257, column: 5, scope: !15323)
!15346 = !DILocation(line: 1259, column: 25, scope: !3095)
!15347 = !DILocation(line: 1259, column: 30, scope: !3095)
!15348 = !DILocation(line: 1259, column: 36, scope: !3095)
!15349 = !DILocation(line: 1259, column: 41, scope: !3095)
!15350 = !DILocation(line: 1259, column: 46, scope: !3095)
!15351 = !DILocation(line: 1259, column: 57, scope: !3095)
!15352 = !DILocation(line: 1259, column: 13, scope: !3095)
!15353 = !DILocation(line: 1259, column: 11, scope: !3095)
!15354 = !DILocation(line: 1260, column: 5, scope: !3095)
!15355 = !DILocation(line: 1260, column: 5, scope: !15356)
!15356 = distinct !DILexicalBlock(scope: !3095, file: !2858, line: 1260, column: 5)
!15357 = !DILabel(scope: !3095, name: "action_end_iter", file: !2858, line: 1262)
!15358 = !DILocation(line: 1262, column: 1, scope: !3095)
!15359 = !DILocation(line: 1263, column: 9, scope: !15360)
!15360 = distinct !DILexicalBlock(scope: !3095, file: !2858, line: 1263, column: 9)
!15361 = !DILocation(line: 1263, column: 23, scope: !15360)
!15362 = !DILocation(line: 1263, column: 30, scope: !15360)
!15363 = !DILocation(line: 1263, column: 20, scope: !15360)
!15364 = !DILocation(line: 1263, column: 9, scope: !3095)
!15365 = !DILocation(line: 1264, column: 9, scope: !15360)
!15366 = !DILocation(line: 1266, column: 9, scope: !15367)
!15367 = distinct !DILexicalBlock(scope: !3095, file: !2858, line: 1266, column: 9)
!15368 = !DILocation(line: 1266, column: 9, scope: !3095)
!15369 = !DILocation(line: 1267, column: 14, scope: !15370)
!15370 = distinct !DILexicalBlock(scope: !15371, file: !2858, line: 1267, column: 13)
!15371 = distinct !DILexicalBlock(scope: !15367, file: !2858, line: 1266, column: 26)
!15372 = !DILocation(line: 1267, column: 21, scope: !15370)
!15373 = !DILocation(line: 1267, column: 13, scope: !15371)
!15374 = !DILocation(line: 1268, column: 13, scope: !15370)
!15375 = !DILocation(line: 1269, column: 9, scope: !15371)
!15376 = !DILocation(line: 1269, column: 9, scope: !15377)
!15377 = distinct !DILexicalBlock(scope: !15371, file: !2858, line: 1269, column: 9)
!15378 = !DILocation(line: 1269, column: 9, scope: !15379)
!15379 = distinct !DILexicalBlock(scope: !15377, file: !2858, line: 1269, column: 9)
!15380 = !DILocation(line: 1270, column: 5, scope: !15371)
!15381 = !DILocation(line: 1272, column: 28, scope: !15382)
!15382 = distinct !DILexicalBlock(scope: !3095, file: !2858, line: 1272, column: 9)
!15383 = !DILocation(line: 1272, column: 10, scope: !15382)
!15384 = !DILocation(line: 1272, column: 9, scope: !3095)
!15385 = !DILocation(line: 1273, column: 19, scope: !15386)
!15386 = distinct !DILexicalBlock(scope: !15382, file: !2858, line: 1272, column: 38)
!15387 = !DILocation(line: 1273, column: 9, scope: !15386)
!15388 = !DILocation(line: 1274, column: 14, scope: !15386)
!15389 = !DILocation(line: 1275, column: 9, scope: !15386)
!15390 = !DILocation(line: 1275, column: 9, scope: !15391)
!15391 = distinct !DILexicalBlock(scope: !15386, file: !2858, line: 1275, column: 9)
!15392 = !DILocation(line: 1275, column: 9, scope: !15393)
!15393 = distinct !DILexicalBlock(scope: !15391, file: !2858, line: 1275, column: 9)
!15394 = !DILocation(line: 1276, column: 5, scope: !15386)
!15395 = !DILocation(line: 1278, column: 25, scope: !3095)
!15396 = !DILocation(line: 1278, column: 47, scope: !3095)
!15397 = !DILocation(line: 1278, column: 54, scope: !3095)
!15398 = !DILocation(line: 1278, column: 60, scope: !3095)
!15399 = !DILocation(line: 1278, column: 65, scope: !3095)
!15400 = !DILocation(line: 1278, column: 70, scope: !3095)
!15401 = !DILocation(line: 1278, column: 81, scope: !3095)
!15402 = !DILocation(line: 1278, column: 88, scope: !3095)
!15403 = !DILocation(line: 1278, column: 13, scope: !3095)
!15404 = !DILocation(line: 1278, column: 11, scope: !3095)
!15405 = !DILocation(line: 1279, column: 5, scope: !3095)
!15406 = !DILocation(line: 1279, column: 5, scope: !15407)
!15407 = distinct !DILexicalBlock(scope: !3095, file: !2858, line: 1279, column: 5)
!15408 = !DILabel(scope: !3095, name: "finalize", file: !2858, line: 1281)
!15409 = !DILocation(line: 1281, column: 1, scope: !3095)
!15410 = !DILocation(line: 1282, column: 12, scope: !3095)
!15411 = !DILocation(line: 1282, column: 5, scope: !3095)
!15412 = !DILocation(line: 1285, column: 1, scope: !3095)
!15413 = distinct !DISubprogram(name: "strbuf_append_str", scope: !3350, file: !3350, line: 148, type: !15414, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3344, retainedNodes: !286)
!15414 = !DISubroutineType(types: !15415)
!15415 = !{!137, !12352, !205, !55}
!15416 = !DILocalVariable(name: "s1", arg: 1, scope: !15413, file: !3350, line: 148, type: !12352)
!15417 = !DILocation(line: 148, column: 29, scope: !15413)
!15418 = !DILocalVariable(name: "s2", arg: 2, scope: !15413, file: !3350, line: 148, type: !205)
!15419 = !DILocation(line: 148, column: 45, scope: !15413)
!15420 = !DILocalVariable(name: "sz", arg: 3, scope: !15413, file: !3350, line: 148, type: !55)
!15421 = !DILocation(line: 148, column: 56, scope: !15413)
!15422 = !DILocation(line: 150, column: 10, scope: !15423)
!15423 = distinct !DILexicalBlock(scope: !15413, file: !3350, line: 150, column: 9)
!15424 = !DILocation(line: 150, column: 9, scope: !15413)
!15425 = !DILocation(line: 151, column: 21, scope: !15423)
!15426 = !DILocation(line: 151, column: 14, scope: !15423)
!15427 = !DILocation(line: 151, column: 12, scope: !15423)
!15428 = !DILocation(line: 151, column: 9, scope: !15423)
!15429 = !DILocation(line: 153, column: 9, scope: !15430)
!15430 = distinct !DILexicalBlock(scope: !15413, file: !3350, line: 153, column: 9)
!15431 = !DILocation(line: 153, column: 9, scope: !15413)
!15432 = !DILocation(line: 154, column: 9, scope: !15430)
!15433 = !DILocation(line: 156, column: 12, scope: !15413)
!15434 = !DILocation(line: 156, column: 16, scope: !15413)
!15435 = !DILocation(line: 156, column: 22, scope: !15413)
!15436 = !DILocation(line: 156, column: 31, scope: !15413)
!15437 = !DILocation(line: 156, column: 35, scope: !15413)
!15438 = !DILocation(line: 156, column: 39, scope: !15413)
!15439 = !DILocation(line: 156, column: 29, scope: !15413)
!15440 = !DILocation(line: 156, column: 47, scope: !15413)
!15441 = !DILocation(line: 156, column: 51, scope: !15413)
!15442 = !DILocation(line: 156, column: 5, scope: !15413)
!15443 = !DILocation(line: 157, column: 23, scope: !15413)
!15444 = !DILocation(line: 157, column: 5, scope: !15413)
!15445 = !DILocation(line: 157, column: 9, scope: !15413)
!15446 = !DILocation(line: 157, column: 13, scope: !15413)
!15447 = !DILocation(line: 157, column: 20, scope: !15413)
!15448 = !DILocation(line: 158, column: 5, scope: !15413)
!15449 = !DILocation(line: 158, column: 9, scope: !15413)
!15450 = !DILocation(line: 158, column: 15, scope: !15413)
!15451 = !DILocation(line: 158, column: 22, scope: !15413)
!15452 = !DILocation(line: 158, column: 26, scope: !15413)
!15453 = !DILocation(line: 158, column: 30, scope: !15413)
!15454 = !DILocation(line: 158, column: 37, scope: !15413)
!15455 = !DILocation(line: 158, column: 42, scope: !15413)
!15456 = !DILocation(line: 160, column: 5, scope: !15413)
!15457 = !DILocation(line: 161, column: 1, scope: !15413)
!15458 = distinct !DISubprogram(name: "strbuf_append_char", scope: !3350, file: !3350, line: 136, type: !15459, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3344, retainedNodes: !286)
!15459 = !DISubroutineType(types: !15460)
!15460 = !{!137, !12352, !206}
!15461 = !DILocalVariable(name: "s", arg: 1, scope: !15458, file: !3350, line: 136, type: !12352)
!15462 = !DILocation(line: 136, column: 30, scope: !15458)
!15463 = !DILocalVariable(name: "c", arg: 2, scope: !15458, file: !3350, line: 136, type: !206)
!15464 = !DILocation(line: 136, column: 44, scope: !15458)
!15465 = !DILocation(line: 138, column: 9, scope: !15466)
!15466 = distinct !DILexicalBlock(scope: !15458, file: !3350, line: 138, column: 9)
!15467 = !DILocation(line: 138, column: 9, scope: !15458)
!15468 = !DILocation(line: 139, column: 9, scope: !15466)
!15469 = !DILocation(line: 141, column: 44, scope: !15458)
!15470 = !DILocation(line: 141, column: 7, scope: !15458)
!15471 = !DILocation(line: 141, column: 10, scope: !15458)
!15472 = !DILocation(line: 141, column: 16, scope: !15458)
!15473 = !DILocation(line: 141, column: 25, scope: !15458)
!15474 = !DILocation(line: 141, column: 28, scope: !15458)
!15475 = !DILocation(line: 141, column: 32, scope: !15458)
!15476 = !DILocation(line: 141, column: 38, scope: !15458)
!15477 = !DILocation(line: 141, column: 23, scope: !15458)
!15478 = !DILocation(line: 141, column: 42, scope: !15458)
!15479 = !DILocation(line: 142, column: 7, scope: !15458)
!15480 = !DILocation(line: 142, column: 10, scope: !15458)
!15481 = !DILocation(line: 142, column: 16, scope: !15458)
!15482 = !DILocation(line: 142, column: 25, scope: !15458)
!15483 = !DILocation(line: 142, column: 28, scope: !15458)
!15484 = !DILocation(line: 142, column: 32, scope: !15458)
!15485 = !DILocation(line: 142, column: 23, scope: !15458)
!15486 = !DILocation(line: 142, column: 40, scope: !15458)
!15487 = !DILocation(line: 144, column: 5, scope: !15458)
!15488 = !DILocation(line: 145, column: 1, scope: !15458)
!15489 = distinct !DISubprogram(name: "lwan_append_str_to_strbuf", scope: !2858, file: !2858, line: 828, type: !15142, scopeLine: 829, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!15490 = !DILocalVariable(name: "buf", arg: 1, scope: !15489, file: !2858, line: 828, type: !2984)
!15491 = !DILocation(line: 828, column: 37, scope: !15489)
!15492 = !DILocalVariable(name: "ptr", arg: 2, scope: !15489, file: !2858, line: 828, type: !111)
!15493 = !DILocation(line: 828, column: 48, scope: !15489)
!15494 = !DILocalVariable(name: "str", scope: !15489, file: !2858, line: 830, type: !205)
!15495 = !DILocation(line: 830, column: 17, scope: !15489)
!15496 = !DILocation(line: 830, column: 33, scope: !15489)
!15497 = !DILocation(line: 830, column: 23, scope: !15489)
!15498 = !DILocation(line: 832, column: 9, scope: !15499)
!15499 = distinct !DILexicalBlock(scope: !15489, file: !2858, line: 832, column: 9)
!15500 = !DILocation(line: 832, column: 9, scope: !15489)
!15501 = !DILocation(line: 833, column: 27, scope: !15499)
!15502 = !DILocation(line: 833, column: 32, scope: !15499)
!15503 = !DILocation(line: 833, column: 9, scope: !15499)
!15504 = !DILocation(line: 834, column: 1, scope: !15489)
!15505 = distinct !DISubprogram(name: "lwan_append_str_escaped_to_strbuf", scope: !2858, file: !2858, line: 837, type: !15142, scopeLine: 838, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!15506 = !DILocalVariable(name: "buf", arg: 1, scope: !15505, file: !2858, line: 837, type: !2984)
!15507 = !DILocation(line: 837, column: 45, scope: !15505)
!15508 = !DILocalVariable(name: "ptr", arg: 2, scope: !15505, file: !2858, line: 837, type: !111)
!15509 = !DILocation(line: 837, column: 56, scope: !15505)
!15510 = !DILocation(line: 839, column: 9, scope: !15511)
!15511 = distinct !DILexicalBlock(scope: !15505, file: !2858, line: 839, column: 9)
!15512 = !DILocation(line: 839, column: 9, scope: !15505)
!15513 = !DILocation(line: 840, column: 9, scope: !15511)
!15514 = !DILocalVariable(name: "str", scope: !15505, file: !2858, line: 842, type: !205)
!15515 = !DILocation(line: 842, column: 17, scope: !15505)
!15516 = !DILocation(line: 842, column: 33, scope: !15505)
!15517 = !DILocation(line: 842, column: 23, scope: !15505)
!15518 = !DILocation(line: 843, column: 9, scope: !15519)
!15519 = distinct !DILexicalBlock(scope: !15505, file: !2858, line: 843, column: 9)
!15520 = !DILocation(line: 843, column: 9, scope: !15505)
!15521 = !DILocation(line: 844, column: 9, scope: !15519)
!15522 = !DILocalVariable(name: "p", scope: !15523, file: !2858, line: 846, type: !205)
!15523 = distinct !DILexicalBlock(scope: !15505, file: !2858, line: 846, column: 5)
!15524 = !DILocation(line: 846, column: 22, scope: !15523)
!15525 = !DILocation(line: 846, column: 26, scope: !15523)
!15526 = !DILocation(line: 846, column: 10, scope: !15523)
!15527 = !DILocation(line: 846, column: 32, scope: !15528)
!15528 = distinct !DILexicalBlock(scope: !15523, file: !2858, line: 846, column: 5)
!15529 = !DILocation(line: 846, column: 31, scope: !15528)
!15530 = !DILocation(line: 846, column: 5, scope: !15523)
!15531 = !DILocation(line: 847, column: 14, scope: !15532)
!15532 = distinct !DILexicalBlock(scope: !15533, file: !2858, line: 847, column: 13)
!15533 = distinct !DILexicalBlock(scope: !15528, file: !2858, line: 846, column: 40)
!15534 = !DILocation(line: 847, column: 13, scope: !15532)
!15535 = !DILocation(line: 847, column: 16, scope: !15532)
!15536 = !DILocation(line: 847, column: 13, scope: !15533)
!15537 = !DILocation(line: 848, column: 31, scope: !15532)
!15538 = !DILocation(line: 848, column: 13, scope: !15532)
!15539 = !DILocation(line: 849, column: 19, scope: !15540)
!15540 = distinct !DILexicalBlock(scope: !15532, file: !2858, line: 849, column: 18)
!15541 = !DILocation(line: 849, column: 18, scope: !15540)
!15542 = !DILocation(line: 849, column: 21, scope: !15540)
!15543 = !DILocation(line: 849, column: 18, scope: !15532)
!15544 = !DILocation(line: 850, column: 31, scope: !15540)
!15545 = !DILocation(line: 850, column: 13, scope: !15540)
!15546 = !DILocation(line: 851, column: 19, scope: !15547)
!15547 = distinct !DILexicalBlock(scope: !15540, file: !2858, line: 851, column: 18)
!15548 = !DILocation(line: 851, column: 18, scope: !15547)
!15549 = !DILocation(line: 851, column: 21, scope: !15547)
!15550 = !DILocation(line: 851, column: 18, scope: !15540)
!15551 = !DILocation(line: 852, column: 31, scope: !15547)
!15552 = !DILocation(line: 852, column: 13, scope: !15547)
!15553 = !DILocation(line: 853, column: 19, scope: !15554)
!15554 = distinct !DILexicalBlock(scope: !15547, file: !2858, line: 853, column: 18)
!15555 = !DILocation(line: 853, column: 18, scope: !15554)
!15556 = !DILocation(line: 853, column: 21, scope: !15554)
!15557 = !DILocation(line: 853, column: 18, scope: !15547)
!15558 = !DILocation(line: 854, column: 31, scope: !15554)
!15559 = !DILocation(line: 854, column: 13, scope: !15554)
!15560 = !DILocation(line: 855, column: 19, scope: !15561)
!15561 = distinct !DILexicalBlock(scope: !15554, file: !2858, line: 855, column: 18)
!15562 = !DILocation(line: 855, column: 18, scope: !15561)
!15563 = !DILocation(line: 855, column: 21, scope: !15561)
!15564 = !DILocation(line: 855, column: 18, scope: !15554)
!15565 = !DILocation(line: 856, column: 31, scope: !15561)
!15566 = !DILocation(line: 856, column: 13, scope: !15561)
!15567 = !DILocation(line: 857, column: 19, scope: !15568)
!15568 = distinct !DILexicalBlock(scope: !15561, file: !2858, line: 857, column: 18)
!15569 = !DILocation(line: 857, column: 18, scope: !15568)
!15570 = !DILocation(line: 857, column: 21, scope: !15568)
!15571 = !DILocation(line: 857, column: 18, scope: !15561)
!15572 = !DILocation(line: 858, column: 31, scope: !15568)
!15573 = !DILocation(line: 858, column: 13, scope: !15568)
!15574 = !DILocation(line: 860, column: 32, scope: !15568)
!15575 = !DILocation(line: 860, column: 38, scope: !15568)
!15576 = !DILocation(line: 860, column: 37, scope: !15568)
!15577 = !DILocation(line: 860, column: 13, scope: !15568)
!15578 = !DILocation(line: 861, column: 5, scope: !15533)
!15579 = !DILocation(line: 846, column: 36, scope: !15528)
!15580 = !DILocation(line: 846, column: 5, scope: !15528)
!15581 = distinct !{!15581, !15530, !15582, !3413}
!15582 = !DILocation(line: 861, column: 5, scope: !15523)
!15583 = !DILocation(line: 862, column: 1, scope: !15505)
!15584 = distinct !DISubprogram(name: "lwan_tpl_apply", scope: !2858, file: !2858, line: 1302, type: !15585, scopeLine: 1303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!15585 = !DISubroutineType(types: !15586)
!15586 = !{!2984, !3098, !111}
!15587 = !DILocalVariable(name: "tpl", arg: 1, scope: !15584, file: !2858, line: 1302, type: !3098)
!15588 = !DILocation(line: 1302, column: 28, scope: !15584)
!15589 = !DILocalVariable(name: "variables", arg: 2, scope: !15584, file: !2858, line: 1302, type: !111)
!15590 = !DILocation(line: 1302, column: 39, scope: !15584)
!15591 = !DILocalVariable(name: "buf", scope: !15584, file: !2858, line: 1304, type: !2984)
!15592 = !DILocation(line: 1304, column: 15, scope: !15584)
!15593 = !DILocation(line: 1304, column: 42, scope: !15584)
!15594 = !DILocation(line: 1304, column: 47, scope: !15584)
!15595 = !DILocation(line: 1304, column: 21, scope: !15584)
!15596 = !DILocation(line: 1305, column: 39, scope: !15584)
!15597 = !DILocation(line: 1305, column: 44, scope: !15584)
!15598 = !DILocation(line: 1305, column: 49, scope: !15584)
!15599 = !DILocation(line: 1305, column: 12, scope: !15584)
!15600 = !DILocation(line: 1305, column: 5, scope: !15584)
!15601 = distinct !DISubprogram(name: "strbuf_new_with_size", scope: !3350, file: !3350, line: 106, type: !15602, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3344, retainedNodes: !286)
!15602 = !DISubroutineType(types: !15603)
!15603 = !{!12352, !55}
!15604 = !DILocalVariable(name: "size", arg: 1, scope: !15601, file: !3350, line: 106, type: !55)
!15605 = !DILocation(line: 106, column: 29, scope: !15601)
!15606 = !DILocalVariable(name: "s", scope: !15601, file: !3350, line: 108, type: !12352)
!15607 = !DILocation(line: 108, column: 15, scope: !15601)
!15608 = !DILocation(line: 108, column: 19, scope: !15601)
!15609 = !DILocation(line: 109, column: 9, scope: !15610)
!15610 = distinct !DILexicalBlock(scope: !15601, file: !3350, line: 109, column: 9)
!15611 = !DILocation(line: 109, column: 9, scope: !15601)
!15612 = !DILocation(line: 110, column: 14, scope: !15613)
!15613 = distinct !DILexicalBlock(scope: !15610, file: !3350, line: 109, column: 52)
!15614 = !DILocation(line: 110, column: 9, scope: !15613)
!15615 = !DILocation(line: 111, column: 11, scope: !15613)
!15616 = !DILocation(line: 112, column: 5, scope: !15613)
!15617 = !DILocation(line: 113, column: 9, scope: !15618)
!15618 = distinct !DILexicalBlock(scope: !15610, file: !3350, line: 112, column: 12)
!15619 = !DILocation(line: 113, column: 12, scope: !15618)
!15620 = !DILocation(line: 113, column: 18, scope: !15618)
!15621 = !DILocation(line: 115, column: 12, scope: !15601)
!15622 = !DILocation(line: 115, column: 5, scope: !15601)
!15623 = distinct !DISubprogram(name: "strbuf_init_with_size", scope: !3350, file: !3350, line: 83, type: !15066, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3344, retainedNodes: !286)
!15624 = !DILocalVariable(name: "s", arg: 1, scope: !15623, file: !3350, line: 83, type: !12352)
!15625 = !DILocation(line: 83, column: 33, scope: !15623)
!15626 = !DILocalVariable(name: "size", arg: 2, scope: !15623, file: !3350, line: 83, type: !55)
!15627 = !DILocation(line: 83, column: 43, scope: !15623)
!15628 = !DILocation(line: 85, column: 9, scope: !15629)
!15629 = distinct !DILexicalBlock(scope: !15623, file: !3350, line: 85, column: 9)
!15630 = !DILocation(line: 85, column: 9, scope: !15623)
!15631 = !DILocation(line: 86, column: 9, scope: !15629)
!15632 = !DILocation(line: 88, column: 12, scope: !15623)
!15633 = !DILocation(line: 88, column: 5, scope: !15623)
!15634 = !DILocation(line: 90, column: 9, scope: !15635)
!15635 = distinct !DILexicalBlock(scope: !15623, file: !3350, line: 90, column: 9)
!15636 = !DILocation(line: 90, column: 9, scope: !15623)
!15637 = !DILocation(line: 91, column: 9, scope: !15635)
!15638 = !DILocation(line: 93, column: 5, scope: !15623)
!15639 = !DILocation(line: 93, column: 8, scope: !15623)
!15640 = !DILocation(line: 93, column: 12, scope: !15623)
!15641 = !DILocation(line: 93, column: 19, scope: !15623)
!15642 = !DILocation(line: 94, column: 5, scope: !15623)
!15643 = !DILocation(line: 94, column: 8, scope: !15623)
!15644 = !DILocation(line: 94, column: 14, scope: !15623)
!15645 = !DILocation(line: 94, column: 24, scope: !15623)
!15646 = !DILocation(line: 96, column: 5, scope: !15623)
!15647 = !DILocation(line: 97, column: 1, scope: !15623)
!15648 = distinct !DISubprogram(name: "grow_buffer_if_needed", scope: !3350, file: !3350, line: 51, type: !15066, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3344, retainedNodes: !286)
!15649 = !DILocalVariable(name: "s", arg: 1, scope: !15648, file: !3350, line: 51, type: !12352)
!15650 = !DILocation(line: 51, column: 33, scope: !15648)
!15651 = !DILocalVariable(name: "size", arg: 2, scope: !15648, file: !3350, line: 51, type: !55)
!15652 = !DILocation(line: 51, column: 43, scope: !15648)
!15653 = !DILocation(line: 53, column: 9, scope: !15654)
!15654 = distinct !DILexicalBlock(scope: !15648, file: !3350, line: 53, column: 9)
!15655 = !DILocation(line: 53, column: 12, scope: !15654)
!15656 = !DILocation(line: 53, column: 18, scope: !15654)
!15657 = !DILocation(line: 53, column: 9, scope: !15648)
!15658 = !DILocalVariable(name: "next_power", scope: !15659, file: !3350, line: 54, type: !490)
!15659 = distinct !DILexicalBlock(scope: !15654, file: !3350, line: 53, column: 28)
!15660 = !DILocation(line: 54, column: 22, scope: !15659)
!15661 = !DILocation(line: 54, column: 62, scope: !15659)
!15662 = !DILocation(line: 54, column: 67, scope: !15659)
!15663 = !DILocation(line: 55, column: 21, scope: !15659)
!15664 = !DILocation(line: 55, column: 24, scope: !15659)
!15665 = !DILocation(line: 55, column: 28, scope: !15659)
!15666 = !DILocalVariable(name: "one", arg: 1, scope: !15667, file: !3350, line: 45, type: !55)
!15667 = distinct !DISubprogram(name: "max", scope: !3350, file: !3350, line: 45, type: !15668, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3344, retainedNodes: !286)
!15668 = !DISubroutineType(types: !15669)
!15669 = !{!55, !55, !55}
!15670 = !DILocation(line: 45, column: 12, scope: !15667, inlinedAt: !15671)
!15671 = distinct !DILocation(line: 54, column: 58, scope: !15659)
!15672 = !DILocalVariable(name: "another", arg: 2, scope: !15667, file: !3350, line: 45, type: !55)
!15673 = !DILocation(line: 45, column: 24, scope: !15667, inlinedAt: !15671)
!15674 = !DILocation(line: 47, column: 13, scope: !15667, inlinedAt: !15671)
!15675 = !DILocation(line: 47, column: 19, scope: !15667, inlinedAt: !15671)
!15676 = !DILocation(line: 47, column: 17, scope: !15667, inlinedAt: !15671)
!15677 = !DILocation(line: 47, column: 12, scope: !15667, inlinedAt: !15671)
!15678 = !DILocation(line: 47, column: 30, scope: !15667, inlinedAt: !15671)
!15679 = !DILocation(line: 47, column: 36, scope: !15667, inlinedAt: !15671)
!15680 = !DILocation(line: 54, column: 35, scope: !15659)
!15681 = !DILocalVariable(name: "buffer", scope: !15659, file: !3350, line: 56, type: !52)
!15682 = !DILocation(line: 56, column: 15, scope: !15659)
!15683 = !DILocation(line: 56, column: 31, scope: !15659)
!15684 = !DILocation(line: 56, column: 24, scope: !15659)
!15685 = !DILocation(line: 57, column: 14, scope: !15686)
!15686 = distinct !DILexicalBlock(scope: !15659, file: !3350, line: 57, column: 13)
!15687 = !DILocation(line: 57, column: 13, scope: !15659)
!15688 = !DILocation(line: 58, column: 13, scope: !15686)
!15689 = !DILocation(line: 60, column: 16, scope: !15659)
!15690 = !DILocation(line: 60, column: 24, scope: !15659)
!15691 = !DILocation(line: 60, column: 27, scope: !15659)
!15692 = !DILocation(line: 60, column: 33, scope: !15659)
!15693 = !DILocation(line: 60, column: 48, scope: !15659)
!15694 = !DILocation(line: 60, column: 51, scope: !15659)
!15695 = !DILocation(line: 60, column: 55, scope: !15659)
!15696 = !DILocation(line: 60, column: 9, scope: !15659)
!15697 = !DILocation(line: 61, column: 9, scope: !15659)
!15698 = !DILocation(line: 61, column: 16, scope: !15659)
!15699 = !DILocation(line: 61, column: 19, scope: !15659)
!15700 = !DILocation(line: 61, column: 23, scope: !15659)
!15701 = !DILocation(line: 61, column: 30, scope: !15659)
!15702 = !DILocation(line: 61, column: 35, scope: !15659)
!15703 = !DILocation(line: 63, column: 9, scope: !15659)
!15704 = !DILocation(line: 63, column: 12, scope: !15659)
!15705 = !DILocation(line: 63, column: 18, scope: !15659)
!15706 = !DILocation(line: 64, column: 28, scope: !15659)
!15707 = !DILocation(line: 64, column: 9, scope: !15659)
!15708 = !DILocation(line: 64, column: 12, scope: !15659)
!15709 = !DILocation(line: 64, column: 16, scope: !15659)
!15710 = !DILocation(line: 64, column: 26, scope: !15659)
!15711 = !DILocation(line: 65, column: 27, scope: !15659)
!15712 = !DILocation(line: 65, column: 9, scope: !15659)
!15713 = !DILocation(line: 65, column: 12, scope: !15659)
!15714 = !DILocation(line: 65, column: 25, scope: !15659)
!15715 = !DILocation(line: 67, column: 9, scope: !15659)
!15716 = !DILocation(line: 70, column: 9, scope: !15717)
!15717 = distinct !DILexicalBlock(scope: !15648, file: !3350, line: 70, column: 9)
!15718 = !DILocation(line: 70, column: 9, scope: !15648)
!15719 = !DILocalVariable(name: "next_power", scope: !15720, file: !3350, line: 71, type: !490)
!15720 = distinct !DILexicalBlock(scope: !15717, file: !3350, line: 70, column: 44)
!15721 = !DILocation(line: 71, column: 22, scope: !15720)
!15722 = !DILocation(line: 71, column: 58, scope: !15720)
!15723 = !DILocation(line: 71, column: 35, scope: !15720)
!15724 = !DILocalVariable(name: "buffer", scope: !15720, file: !3350, line: 72, type: !52)
!15725 = !DILocation(line: 72, column: 15, scope: !15720)
!15726 = !DILocation(line: 72, column: 32, scope: !15720)
!15727 = !DILocation(line: 72, column: 35, scope: !15720)
!15728 = !DILocation(line: 72, column: 41, scope: !15720)
!15729 = !DILocation(line: 72, column: 49, scope: !15720)
!15730 = !DILocation(line: 72, column: 60, scope: !15720)
!15731 = !DILocation(line: 72, column: 24, scope: !15720)
!15732 = !DILocation(line: 73, column: 13, scope: !15733)
!15733 = distinct !DILexicalBlock(scope: !15720, file: !3350, line: 73, column: 13)
!15734 = !DILocation(line: 73, column: 13, scope: !15720)
!15735 = !DILocation(line: 74, column: 13, scope: !15733)
!15736 = !DILocation(line: 75, column: 28, scope: !15720)
!15737 = !DILocation(line: 75, column: 9, scope: !15720)
!15738 = !DILocation(line: 75, column: 12, scope: !15720)
!15739 = !DILocation(line: 75, column: 16, scope: !15720)
!15740 = !DILocation(line: 75, column: 26, scope: !15720)
!15741 = !DILocation(line: 76, column: 27, scope: !15720)
!15742 = !DILocation(line: 76, column: 9, scope: !15720)
!15743 = !DILocation(line: 76, column: 12, scope: !15720)
!15744 = !DILocation(line: 76, column: 25, scope: !15720)
!15745 = !DILocation(line: 77, column: 5, scope: !15720)
!15746 = !DILocation(line: 79, column: 5, scope: !15648)
!15747 = !DILocation(line: 80, column: 1, scope: !15648)
!15748 = distinct !DISubprogram(name: "find_next_power_of_two", scope: !3350, file: !3350, line: 33, type: !15749, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3344, retainedNodes: !286)
!15749 = !DISubroutineType(types: !15750)
!15750 = !{!55, !55}
!15751 = !DILocalVariable(name: "number", arg: 1, scope: !15748, file: !3350, line: 33, type: !55)
!15752 = !DILocation(line: 33, column: 31, scope: !15748)
!15753 = !DILocation(line: 35, column: 11, scope: !15748)
!15754 = !DILocation(line: 36, column: 15, scope: !15748)
!15755 = !DILocation(line: 36, column: 22, scope: !15748)
!15756 = !DILocation(line: 36, column: 12, scope: !15748)
!15757 = !DILocation(line: 37, column: 15, scope: !15748)
!15758 = !DILocation(line: 37, column: 22, scope: !15748)
!15759 = !DILocation(line: 37, column: 12, scope: !15748)
!15760 = !DILocation(line: 38, column: 15, scope: !15748)
!15761 = !DILocation(line: 38, column: 22, scope: !15748)
!15762 = !DILocation(line: 38, column: 12, scope: !15748)
!15763 = !DILocation(line: 39, column: 15, scope: !15748)
!15764 = !DILocation(line: 39, column: 22, scope: !15748)
!15765 = !DILocation(line: 39, column: 12, scope: !15748)
!15766 = !DILocation(line: 40, column: 15, scope: !15748)
!15767 = !DILocation(line: 40, column: 22, scope: !15748)
!15768 = !DILocation(line: 40, column: 12, scope: !15748)
!15769 = !DILocation(line: 41, column: 12, scope: !15748)
!15770 = !DILocation(line: 41, column: 19, scope: !15748)
!15771 = !DILocation(line: 41, column: 5, scope: !15748)
!15772 = distinct !DISubprogram(name: "lwan_format_rfc_time", scope: !3115, file: !3115, line: 236, type: !15773, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3168, retainedNodes: !286)
!15773 = !DISubroutineType(types: !15774)
!15774 = !{null, !151, !52}
!15775 = !DILocalVariable(name: "t", arg: 1, scope: !15772, file: !3115, line: 236, type: !151)
!15776 = !DILocation(line: 236, column: 29, scope: !15772)
!15777 = !DILocalVariable(name: "buffer", arg: 2, scope: !15772, file: !3115, line: 236, type: !52)
!15778 = !DILocation(line: 236, column: 37, scope: !15772)
!15779 = !DILocalVariable(name: "tm", scope: !15772, file: !3115, line: 238, type: !15780)
!15780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !14015, line: 7, size: 448, elements: !15781)
!15781 = !{!15782, !15783, !15784, !15785, !15786, !15787, !15788, !15789, !15790, !15791, !15792}
!15782 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !15780, file: !14015, line: 9, baseType: !34, size: 32)
!15783 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !15780, file: !14015, line: 10, baseType: !34, size: 32, offset: 32)
!15784 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !15780, file: !14015, line: 11, baseType: !34, size: 32, offset: 64)
!15785 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !15780, file: !14015, line: 12, baseType: !34, size: 32, offset: 96)
!15786 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !15780, file: !14015, line: 13, baseType: !34, size: 32, offset: 128)
!15787 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !15780, file: !14015, line: 14, baseType: !34, size: 32, offset: 160)
!15788 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !15780, file: !14015, line: 15, baseType: !34, size: 32, offset: 192)
!15789 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !15780, file: !14015, line: 16, baseType: !34, size: 32, offset: 224)
!15790 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !15780, file: !14015, line: 17, baseType: !34, size: 32, offset: 256)
!15791 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !15780, file: !14015, line: 20, baseType: !155, size: 64, offset: 320)
!15792 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !15780, file: !14015, line: 21, baseType: !205, size: 64, offset: 384)
!15793 = !DILocation(line: 238, column: 15, scope: !15772)
!15794 = !DILocation(line: 240, column: 9, scope: !15795)
!15795 = distinct !DILexicalBlock(scope: !15772, file: !3115, line: 240, column: 9)
!15796 = !DILocation(line: 240, column: 9, scope: !15772)
!15797 = !DILocation(line: 241, column: 9, scope: !15798)
!15798 = distinct !DILexicalBlock(scope: !15795, file: !3115, line: 240, column: 39)
!15799 = !DILocation(line: 242, column: 9, scope: !15798)
!15800 = !DILocation(line: 245, column: 9, scope: !15801)
!15801 = distinct !DILexicalBlock(scope: !15772, file: !3115, line: 245, column: 9)
!15802 = !DILocation(line: 245, column: 9, scope: !15772)
!15803 = !DILocation(line: 246, column: 9, scope: !15801)
!15804 = !DILocation(line: 247, column: 1, scope: !15772)
!15805 = distinct !DISubprogram(name: "parse_listener", scope: !950, file: !950, line: 271, type: !15806, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !963, retainedNodes: !286)
!15806 = !DISubroutineType(types: !15807)
!15807 = !{null, !15808, !15809, !9135}
!15808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10090, size: 64)
!15809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10132, size: 64)
!15810 = !DILocalVariable(name: "c", arg: 1, scope: !15805, file: !950, line: 271, type: !15808)
!15811 = !DILocation(line: 271, column: 38, scope: !15805)
!15812 = !DILocalVariable(name: "l", arg: 2, scope: !15805, file: !950, line: 271, type: !15809)
!15813 = !DILocation(line: 271, column: 56, scope: !15805)
!15814 = !DILocalVariable(name: "lwan", arg: 3, scope: !15805, file: !950, line: 271, type: !9135)
!15815 = !DILocation(line: 271, column: 67, scope: !15805)
!15816 = !DILocation(line: 273, column: 36, scope: !15805)
!15817 = !DILocation(line: 273, column: 39, scope: !15805)
!15818 = !DILocation(line: 273, column: 47, scope: !15805)
!15819 = !DILocation(line: 273, column: 29, scope: !15805)
!15820 = !DILocation(line: 273, column: 5, scope: !15805)
!15821 = !DILocation(line: 273, column: 11, scope: !15805)
!15822 = !DILocation(line: 273, column: 18, scope: !15805)
!15823 = !DILocation(line: 273, column: 27, scope: !15805)
!15824 = !DILocation(line: 275, column: 5, scope: !15805)
!15825 = !DILocation(line: 275, column: 29, scope: !15805)
!15826 = !DILocation(line: 275, column: 32, scope: !15805)
!15827 = !DILocation(line: 275, column: 12, scope: !15805)
!15828 = !DILocation(line: 276, column: 17, scope: !15829)
!15829 = distinct !DILexicalBlock(scope: !15805, file: !950, line: 275, column: 36)
!15830 = !DILocation(line: 276, column: 20, scope: !15829)
!15831 = !DILocation(line: 276, column: 9, scope: !15829)
!15832 = !DILocation(line: 278, column: 26, scope: !15833)
!15833 = distinct !DILexicalBlock(scope: !15829, file: !950, line: 276, column: 26)
!15834 = !DILocation(line: 278, column: 13, scope: !15833)
!15835 = !DILocation(line: 279, column: 13, scope: !15833)
!15836 = !DILocation(line: 281, column: 25, scope: !15837)
!15837 = distinct !DILexicalBlock(scope: !15833, file: !950, line: 281, column: 17)
!15838 = !DILocation(line: 281, column: 28, scope: !15837)
!15839 = !DILocation(line: 281, column: 36, scope: !15837)
!15840 = !DILocation(line: 281, column: 18, scope: !15837)
!15841 = !DILocation(line: 281, column: 17, scope: !15833)
!15842 = !DILocation(line: 282, column: 39, scope: !15843)
!15843 = distinct !DILexicalBlock(scope: !15837, file: !950, line: 281, column: 53)
!15844 = !DILocation(line: 282, column: 42, scope: !15843)
!15845 = !DILocation(line: 282, column: 45, scope: !15843)
!15846 = !DILocation(line: 282, column: 17, scope: !15843)
!15847 = !DILocation(line: 283, column: 13, scope: !15843)
!15848 = !DILocalVariable(name: "module", scope: !15849, file: !950, line: 284, type: !9277)
!15849 = distinct !DILexicalBlock(scope: !15837, file: !950, line: 283, column: 20)
!15850 = !DILocation(line: 284, column: 38, scope: !15849)
!15851 = !DILocation(line: 284, column: 64, scope: !15849)
!15852 = !DILocation(line: 284, column: 70, scope: !15849)
!15853 = !DILocation(line: 284, column: 73, scope: !15849)
!15854 = !DILocation(line: 284, column: 81, scope: !15849)
!15855 = !DILocation(line: 284, column: 47, scope: !15849)
!15856 = !DILocation(line: 285, column: 22, scope: !15857)
!15857 = distinct !DILexicalBlock(scope: !15849, file: !950, line: 285, column: 21)
!15858 = !DILocation(line: 285, column: 21, scope: !15849)
!15859 = !DILocation(line: 286, column: 34, scope: !15860)
!15860 = distinct !DILexicalBlock(scope: !15857, file: !950, line: 285, column: 30)
!15861 = !DILocation(line: 287, column: 25, scope: !15860)
!15862 = !DILocation(line: 287, column: 28, scope: !15860)
!15863 = !DILocation(line: 287, column: 36, scope: !15860)
!15864 = !DILocation(line: 286, column: 21, scope: !15860)
!15865 = !DILocation(line: 288, column: 17, scope: !15860)
!15866 = !DILocation(line: 289, column: 43, scope: !15867)
!15867 = distinct !DILexicalBlock(scope: !15857, file: !950, line: 288, column: 24)
!15868 = !DILocation(line: 289, column: 46, scope: !15867)
!15869 = !DILocation(line: 289, column: 49, scope: !15867)
!15870 = !DILocation(line: 289, column: 55, scope: !15867)
!15871 = !DILocation(line: 289, column: 21, scope: !15867)
!15872 = !DILocation(line: 292, column: 13, scope: !15833)
!15873 = !DILocation(line: 294, column: 13, scope: !15833)
!15874 = distinct !{!15874, !15824, !15875, !3413}
!15875 = !DILocation(line: 296, column: 5, scope: !15805)
!15876 = !DILocation(line: 298, column: 18, scope: !15805)
!15877 = !DILocation(line: 298, column: 5, scope: !15805)
!15878 = !DILocation(line: 299, column: 1, scope: !15805)
!15879 = distinct !DISubprogram(name: "parse_listener_prefix", scope: !950, file: !950, line: 167, type: !15880, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !963, retainedNodes: !286)
!15880 = !DISubroutineType(types: !15881)
!15881 = !{null, !15808, !15809, !9135, !9277}
!15882 = !DILocalVariable(name: "c", arg: 1, scope: !15879, file: !950, line: 167, type: !15808)
!15883 = !DILocation(line: 167, column: 45, scope: !15879)
!15884 = !DILocalVariable(name: "l", arg: 2, scope: !15879, file: !950, line: 167, type: !15809)
!15885 = !DILocation(line: 167, column: 63, scope: !15879)
!15886 = !DILocalVariable(name: "lwan", arg: 3, scope: !15879, file: !950, line: 167, type: !9135)
!15887 = !DILocation(line: 167, column: 74, scope: !15879)
!15888 = !DILocalVariable(name: "module", arg: 4, scope: !15879, file: !950, line: 168, type: !9277)
!15889 = !DILocation(line: 168, column: 26, scope: !15879)
!15890 = !DILocalVariable(name: "url_map", scope: !15879, file: !950, line: 170, type: !9196)
!15891 = !DILocation(line: 170, column: 20, scope: !15879)
!15892 = !DILocalVariable(name: "hash", scope: !15879, file: !950, line: 171, type: !127)
!15893 = !DILocation(line: 171, column: 18, scope: !15879)
!15894 = !DILocation(line: 171, column: 25, scope: !15879)
!15895 = !DILocalVariable(name: "handler", scope: !15879, file: !950, line: 172, type: !111)
!15896 = !DILocation(line: 172, column: 11, scope: !15879)
!15897 = !DILocalVariable(name: "prefix", scope: !15879, file: !950, line: 173, type: !52)
!15898 = !DILocation(line: 173, column: 11, scope: !15879)
!15899 = !DILocalVariable(name: "__old", scope: !15900, file: !950, line: 173, type: !205)
!15900 = distinct !DILexicalBlock(scope: !15879, file: !950, line: 173, column: 20)
!15901 = !DILocation(line: 173, column: 20, scope: !15900)
!15902 = !DILocalVariable(name: "__len", scope: !15900, file: !950, line: 173, type: !55)
!15903 = !DILocalVariable(name: "__new", scope: !15900, file: !950, line: 173, type: !52)
!15904 = !DILocation(line: 175, column: 5, scope: !15879)
!15905 = !DILocation(line: 175, column: 29, scope: !15879)
!15906 = !DILocation(line: 175, column: 32, scope: !15879)
!15907 = !DILocation(line: 175, column: 12, scope: !15879)
!15908 = !DILocation(line: 176, column: 15, scope: !15909)
!15909 = distinct !DILexicalBlock(scope: !15879, file: !950, line: 175, column: 36)
!15910 = !DILocation(line: 176, column: 18, scope: !15909)
!15911 = !DILocation(line: 176, column: 7, scope: !15909)
!15912 = !DILocation(line: 178, column: 23, scope: !15913)
!15913 = distinct !DILexicalBlock(scope: !15914, file: !950, line: 178, column: 15)
!15914 = distinct !DILexicalBlock(scope: !15909, file: !950, line: 176, column: 24)
!15915 = !DILocation(line: 178, column: 26, scope: !15913)
!15916 = !DILocation(line: 178, column: 31, scope: !15913)
!15917 = !DILocation(line: 178, column: 16, scope: !15913)
!15918 = !DILocation(line: 178, column: 15, scope: !15914)
!15919 = !DILocation(line: 179, column: 19, scope: !15920)
!15920 = distinct !DILexicalBlock(scope: !15921, file: !950, line: 179, column: 19)
!15921 = distinct !DILexicalBlock(scope: !15913, file: !950, line: 178, column: 47)
!15922 = !DILocation(line: 179, column: 19, scope: !15921)
!15923 = !DILocation(line: 180, column: 32, scope: !15924)
!15924 = distinct !DILexicalBlock(scope: !15920, file: !950, line: 179, column: 27)
!15925 = !DILocation(line: 180, column: 19, scope: !15924)
!15926 = !DILocation(line: 181, column: 19, scope: !15924)
!15927 = !DILocation(line: 183, column: 41, scope: !15921)
!15928 = !DILocation(line: 183, column: 47, scope: !15921)
!15929 = !DILocation(line: 183, column: 50, scope: !15921)
!15930 = !DILocation(line: 183, column: 55, scope: !15921)
!15931 = !DILocation(line: 183, column: 24, scope: !15921)
!15932 = !DILocation(line: 183, column: 22, scope: !15921)
!15933 = !DILocation(line: 184, column: 20, scope: !15934)
!15934 = distinct !DILexicalBlock(scope: !15921, file: !950, line: 184, column: 19)
!15935 = !DILocation(line: 184, column: 19, scope: !15921)
!15936 = !DILocation(line: 185, column: 32, scope: !15937)
!15937 = distinct !DILexicalBlock(scope: !15934, file: !950, line: 184, column: 28)
!15938 = !DILocation(line: 185, column: 67, scope: !15937)
!15939 = !DILocation(line: 185, column: 70, scope: !15937)
!15940 = !DILocation(line: 185, column: 75, scope: !15937)
!15941 = !DILocation(line: 185, column: 19, scope: !15937)
!15942 = !DILocation(line: 186, column: 19, scope: !15937)
!15943 = !DILocation(line: 188, column: 11, scope: !15921)
!15944 = !DILocation(line: 188, column: 30, scope: !15945)
!15945 = distinct !DILexicalBlock(scope: !15913, file: !950, line: 188, column: 22)
!15946 = !DILocation(line: 188, column: 33, scope: !15945)
!15947 = !DILocation(line: 188, column: 38, scope: !15945)
!15948 = !DILocation(line: 188, column: 23, scope: !15945)
!15949 = !DILocation(line: 188, column: 22, scope: !15913)
!15950 = !DILocation(line: 189, column: 45, scope: !15951)
!15951 = distinct !DILexicalBlock(scope: !15945, file: !950, line: 188, column: 55)
!15952 = !DILocation(line: 189, column: 48, scope: !15951)
!15953 = !DILocation(line: 189, column: 53, scope: !15951)
!15954 = !DILocation(line: 189, column: 25, scope: !15951)
!15955 = !DILocation(line: 189, column: 23, scope: !15951)
!15956 = !DILocation(line: 190, column: 20, scope: !15957)
!15957 = distinct !DILexicalBlock(scope: !15951, file: !950, line: 190, column: 19)
!15958 = !DILocation(line: 190, column: 19, scope: !15951)
!15959 = !DILocation(line: 191, column: 32, scope: !15960)
!15960 = distinct !DILexicalBlock(scope: !15957, file: !950, line: 190, column: 29)
!15961 = !DILocation(line: 191, column: 68, scope: !15960)
!15962 = !DILocation(line: 191, column: 71, scope: !15960)
!15963 = !DILocation(line: 191, column: 76, scope: !15960)
!15964 = !DILocation(line: 191, column: 19, scope: !15960)
!15965 = !DILocation(line: 192, column: 19, scope: !15960)
!15966 = !DILocation(line: 194, column: 11, scope: !15951)
!15967 = !DILocation(line: 195, column: 24, scope: !15968)
!15968 = distinct !DILexicalBlock(scope: !15945, file: !950, line: 194, column: 18)
!15969 = !DILocation(line: 195, column: 37, scope: !15968)
!15970 = !DILocation(line: 195, column: 40, scope: !15968)
!15971 = !DILocation(line: 195, column: 45, scope: !15968)
!15972 = !DILocation(line: 195, column: 30, scope: !15968)
!15973 = !DILocation(line: 195, column: 58, scope: !15968)
!15974 = !DILocation(line: 195, column: 61, scope: !15968)
!15975 = !DILocation(line: 195, column: 66, scope: !15968)
!15976 = !DILocation(line: 195, column: 51, scope: !15968)
!15977 = !DILocation(line: 195, column: 15, scope: !15968)
!15978 = !DILocation(line: 198, column: 11, scope: !15914)
!15979 = !DILocation(line: 200, column: 23, scope: !15980)
!15980 = distinct !DILexicalBlock(scope: !15914, file: !950, line: 200, column: 15)
!15981 = !DILocation(line: 200, column: 26, scope: !15980)
!15982 = !DILocation(line: 200, column: 34, scope: !15980)
!15983 = !DILocation(line: 200, column: 16, scope: !15980)
!15984 = !DILocation(line: 200, column: 15, scope: !15914)
!15985 = !DILocation(line: 201, column: 51, scope: !15986)
!15986 = distinct !DILexicalBlock(scope: !15980, file: !950, line: 200, column: 58)
!15987 = !DILocation(line: 201, column: 54, scope: !15986)
!15988 = !DILocation(line: 201, column: 15, scope: !15986)
!15989 = !DILocation(line: 202, column: 11, scope: !15986)
!15990 = !DILocation(line: 203, column: 28, scope: !15991)
!15991 = distinct !DILexicalBlock(scope: !15980, file: !950, line: 202, column: 18)
!15992 = !DILocation(line: 203, column: 63, scope: !15991)
!15993 = !DILocation(line: 203, column: 66, scope: !15991)
!15994 = !DILocation(line: 203, column: 74, scope: !15991)
!15995 = !DILocation(line: 203, column: 15, scope: !15991)
!15996 = !DILocation(line: 204, column: 15, scope: !15991)
!15997 = !DILocation(line: 207, column: 11, scope: !15914)
!15998 = !DILocation(line: 209, column: 11, scope: !15914)
!15999 = distinct !{!15999, !15904, !16000, !3413}
!16000 = !DILocation(line: 211, column: 5, scope: !15879)
!16001 = !DILocation(line: 213, column: 18, scope: !15879)
!16002 = !DILocation(line: 213, column: 5, scope: !15879)
!16003 = !DILocation(line: 214, column: 5, scope: !15879)
!16004 = !DILabel(scope: !15879, name: "add_map", file: !950, line: 216)
!16005 = !DILocation(line: 216, column: 1, scope: !15879)
!16006 = !DILocation(line: 217, column: 9, scope: !16007)
!16007 = distinct !DILexicalBlock(scope: !15879, file: !950, line: 217, column: 9)
!16008 = !DILocation(line: 217, column: 19, scope: !16007)
!16009 = !DILocation(line: 217, column: 16, scope: !16007)
!16010 = !DILocation(line: 217, column: 27, scope: !16007)
!16011 = !DILocation(line: 217, column: 31, scope: !16007)
!16012 = !DILocation(line: 217, column: 9, scope: !15879)
!16013 = !DILocation(line: 218, column: 22, scope: !16014)
!16014 = distinct !DILexicalBlock(scope: !16007, file: !950, line: 217, column: 40)
!16015 = !DILocation(line: 218, column: 9, scope: !16014)
!16016 = !DILocation(line: 219, column: 9, scope: !16014)
!16017 = !DILocation(line: 221, column: 9, scope: !16018)
!16018 = distinct !DILexicalBlock(scope: !15879, file: !950, line: 221, column: 9)
!16019 = !DILocation(line: 221, column: 16, scope: !16018)
!16020 = !DILocation(line: 221, column: 19, scope: !16018)
!16021 = !DILocation(line: 221, column: 9, scope: !15879)
!16022 = !DILocation(line: 222, column: 22, scope: !16023)
!16023 = distinct !DILexicalBlock(scope: !16018, file: !950, line: 221, column: 28)
!16024 = !DILocation(line: 222, column: 9, scope: !16023)
!16025 = !DILocation(line: 223, column: 9, scope: !16023)
!16026 = !DILocation(line: 226, column: 9, scope: !16027)
!16027 = distinct !DILexicalBlock(scope: !15879, file: !950, line: 226, column: 9)
!16028 = !DILocation(line: 226, column: 9, scope: !15879)
!16029 = !DILocation(line: 227, column: 27, scope: !16030)
!16030 = distinct !DILexicalBlock(scope: !16027, file: !950, line: 226, column: 18)
!16031 = !DILocation(line: 227, column: 17, scope: !16030)
!16032 = !DILocation(line: 227, column: 25, scope: !16030)
!16033 = !DILocation(line: 228, column: 17, scope: !16030)
!16034 = !DILocation(line: 228, column: 23, scope: !16030)
!16035 = !DILocation(line: 229, column: 24, scope: !16030)
!16036 = !DILocation(line: 229, column: 17, scope: !16030)
!16037 = !DILocation(line: 229, column: 22, scope: !16030)
!16038 = !DILocation(line: 230, column: 17, scope: !16030)
!16039 = !DILocation(line: 230, column: 24, scope: !16030)
!16040 = !DILocation(line: 232, column: 14, scope: !16030)
!16041 = !DILocation(line: 233, column: 5, scope: !16030)
!16042 = !DILocation(line: 233, column: 16, scope: !16043)
!16043 = distinct !DILexicalBlock(scope: !16027, file: !950, line: 233, column: 16)
!16044 = !DILocation(line: 233, column: 23, scope: !16043)
!16045 = !DILocation(line: 233, column: 26, scope: !16043)
!16046 = !DILocation(line: 233, column: 34, scope: !16043)
!16047 = !DILocation(line: 233, column: 49, scope: !16043)
!16048 = !DILocation(line: 233, column: 52, scope: !16043)
!16049 = !DILocation(line: 233, column: 60, scope: !16043)
!16050 = !DILocation(line: 233, column: 16, scope: !16027)
!16051 = !DILocation(line: 234, column: 24, scope: !16052)
!16052 = distinct !DILexicalBlock(scope: !16043, file: !950, line: 233, column: 68)
!16053 = !DILocation(line: 234, column: 32, scope: !16052)
!16054 = !DILocation(line: 234, column: 47, scope: !16052)
!16055 = !DILocation(line: 234, column: 17, scope: !16052)
!16056 = !DILocation(line: 234, column: 22, scope: !16052)
!16057 = !DILocation(line: 235, column: 27, scope: !16052)
!16058 = !DILocation(line: 235, column: 35, scope: !16052)
!16059 = !DILocation(line: 235, column: 17, scope: !16052)
!16060 = !DILocation(line: 235, column: 25, scope: !16052)
!16061 = !DILocation(line: 236, column: 26, scope: !16052)
!16062 = !DILocation(line: 236, column: 34, scope: !16052)
!16063 = !DILocation(line: 236, column: 17, scope: !16052)
!16064 = !DILocation(line: 236, column: 23, scope: !16052)
!16065 = !DILocation(line: 237, column: 26, scope: !16052)
!16066 = !DILocation(line: 237, column: 17, scope: !16052)
!16067 = !DILocation(line: 237, column: 24, scope: !16052)
!16068 = !DILocation(line: 238, column: 5, scope: !16052)
!16069 = !DILocation(line: 239, column: 22, scope: !16070)
!16070 = distinct !DILexicalBlock(scope: !16043, file: !950, line: 238, column: 12)
!16071 = !DILocation(line: 239, column: 9, scope: !16070)
!16072 = !DILocation(line: 240, column: 9, scope: !16070)
!16073 = !DILocation(line: 243, column: 18, scope: !15879)
!16074 = !DILocation(line: 243, column: 24, scope: !15879)
!16075 = !DILocation(line: 243, column: 38, scope: !15879)
!16076 = !DILocation(line: 243, column: 5, scope: !15879)
!16077 = !DILabel(scope: !15879, name: "out", file: !950, line: 245)
!16078 = !DILocation(line: 245, column: 1, scope: !15879)
!16079 = !DILocation(line: 246, column: 15, scope: !15879)
!16080 = !DILocation(line: 246, column: 5, scope: !15879)
!16081 = !DILocation(line: 247, column: 1, scope: !15879)
!16082 = distinct !DISubprogram(name: "lwan_module_find", scope: !950, file: !950, line: 75, type: !16083, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !963, retainedNodes: !286)
!16083 = !DISubroutineType(types: !16084)
!16084 = !{!9277, !9135, !205}
!16085 = !DILocalVariable(name: "l", arg: 1, scope: !16082, file: !950, line: 75, type: !9135)
!16086 = !DILocation(line: 75, column: 54, scope: !16082)
!16087 = !DILocalVariable(name: "name", arg: 2, scope: !16082, file: !950, line: 75, type: !205)
!16088 = !DILocation(line: 75, column: 69, scope: !16082)
!16089 = !DILocation(line: 77, column: 22, scope: !16082)
!16090 = !DILocation(line: 77, column: 25, scope: !16082)
!16091 = !DILocation(line: 77, column: 42, scope: !16082)
!16092 = !DILocation(line: 77, column: 12, scope: !16082)
!16093 = !DILocation(line: 77, column: 5, scope: !16082)
!16094 = distinct !DISubprogram(name: "find_handler_symbol", scope: !950, file: !950, line: 80, type: !16095, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !963, retainedNodes: !286)
!16095 = !DISubroutineType(types: !16096)
!16096 = !{!111, !205}
!16097 = !DILocalVariable(name: "name", arg: 1, scope: !16094, file: !950, line: 80, type: !205)
!16098 = !DILocation(line: 80, column: 46, scope: !16094)
!16099 = !DILocalVariable(name: "symbol", scope: !16094, file: !950, line: 82, type: !111)
!16100 = !DILocation(line: 82, column: 11, scope: !16094)
!16101 = !DILocation(line: 82, column: 37, scope: !16094)
!16102 = !DILocation(line: 82, column: 20, scope: !16094)
!16103 = !DILocation(line: 83, column: 10, scope: !16104)
!16104 = distinct !DILexicalBlock(scope: !16094, file: !950, line: 83, column: 9)
!16105 = !DILocation(line: 83, column: 9, scope: !16094)
!16106 = !DILocation(line: 84, column: 38, scope: !16104)
!16107 = !DILocation(line: 84, column: 18, scope: !16104)
!16108 = !DILocation(line: 84, column: 16, scope: !16104)
!16109 = !DILocation(line: 84, column: 9, scope: !16104)
!16110 = !DILocation(line: 85, column: 12, scope: !16094)
!16111 = !DILocation(line: 85, column: 5, scope: !16094)
!16112 = distinct !DISubprogram(name: "parse_listener_prefix_authorization", scope: !950, file: !950, line: 122, type: !16113, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !963, retainedNodes: !286)
!16113 = !DISubroutineType(types: !16114)
!16114 = !{null, !15808, !15809, !9313}
!16115 = !DILocalVariable(name: "c", arg: 1, scope: !16112, file: !950, line: 122, type: !15808)
!16116 = !DILocation(line: 122, column: 59, scope: !16112)
!16117 = !DILocalVariable(name: "l", arg: 2, scope: !16112, file: !950, line: 123, type: !15809)
!16118 = !DILocation(line: 123, column: 36, scope: !16112)
!16119 = !DILocalVariable(name: "url_map", arg: 3, scope: !16112, file: !950, line: 123, type: !9313)
!16120 = !DILocation(line: 123, column: 55, scope: !16112)
!16121 = !DILocation(line: 125, column: 16, scope: !16122)
!16122 = distinct !DILexicalBlock(scope: !16112, file: !950, line: 125, column: 9)
!16123 = !DILocation(line: 125, column: 19, scope: !16122)
!16124 = !DILocation(line: 125, column: 27, scope: !16122)
!16125 = !DILocation(line: 125, column: 9, scope: !16122)
!16126 = !DILocation(line: 125, column: 9, scope: !16112)
!16127 = !DILocation(line: 126, column: 22, scope: !16128)
!16128 = distinct !DILexicalBlock(scope: !16122, file: !950, line: 125, column: 44)
!16129 = !DILocation(line: 126, column: 9, scope: !16128)
!16130 = !DILocation(line: 127, column: 9, scope: !16128)
!16131 = !DILocation(line: 130, column: 13, scope: !16112)
!16132 = !DILocation(line: 130, column: 22, scope: !16112)
!16133 = !DILocation(line: 130, column: 5, scope: !16112)
!16134 = !DILocation(line: 132, column: 5, scope: !16112)
!16135 = !DILocation(line: 132, column: 29, scope: !16112)
!16136 = !DILocation(line: 132, column: 32, scope: !16112)
!16137 = !DILocation(line: 132, column: 12, scope: !16112)
!16138 = !DILocation(line: 133, column: 17, scope: !16139)
!16139 = distinct !DILexicalBlock(scope: !16112, file: !950, line: 132, column: 36)
!16140 = !DILocation(line: 133, column: 20, scope: !16139)
!16141 = !DILocation(line: 133, column: 9, scope: !16139)
!16142 = !DILocation(line: 135, column: 25, scope: !16143)
!16143 = distinct !DILexicalBlock(scope: !16144, file: !950, line: 135, column: 17)
!16144 = distinct !DILexicalBlock(scope: !16139, file: !950, line: 133, column: 26)
!16145 = !DILocation(line: 135, column: 28, scope: !16143)
!16146 = !DILocation(line: 135, column: 33, scope: !16143)
!16147 = !DILocation(line: 135, column: 18, scope: !16143)
!16148 = !DILocation(line: 135, column: 17, scope: !16144)
!16149 = !DILocation(line: 136, column: 22, scope: !16150)
!16150 = distinct !DILexicalBlock(scope: !16143, file: !950, line: 135, column: 48)
!16151 = !DILocation(line: 136, column: 31, scope: !16150)
!16152 = !DILocation(line: 136, column: 45, scope: !16150)
!16153 = !DILocation(line: 136, column: 17, scope: !16150)
!16154 = !DILocation(line: 137, column: 55, scope: !16150)
!16155 = !DILocation(line: 137, column: 58, scope: !16150)
!16156 = !DILocation(line: 137, column: 63, scope: !16150)
!16157 = !DILocation(line: 137, column: 48, scope: !16150)
!16158 = !DILocation(line: 137, column: 17, scope: !16150)
!16159 = !DILocation(line: 137, column: 26, scope: !16150)
!16160 = !DILocation(line: 137, column: 40, scope: !16150)
!16161 = !DILocation(line: 137, column: 46, scope: !16150)
!16162 = !DILocation(line: 138, column: 13, scope: !16150)
!16163 = !DILocation(line: 138, column: 32, scope: !16164)
!16164 = distinct !DILexicalBlock(scope: !16143, file: !950, line: 138, column: 24)
!16165 = !DILocation(line: 138, column: 35, scope: !16164)
!16166 = !DILocation(line: 138, column: 40, scope: !16164)
!16167 = !DILocation(line: 138, column: 25, scope: !16164)
!16168 = !DILocation(line: 138, column: 24, scope: !16143)
!16169 = !DILocation(line: 139, column: 22, scope: !16170)
!16170 = distinct !DILexicalBlock(scope: !16164, file: !950, line: 138, column: 63)
!16171 = !DILocation(line: 139, column: 31, scope: !16170)
!16172 = !DILocation(line: 139, column: 45, scope: !16170)
!16173 = !DILocation(line: 139, column: 17, scope: !16170)
!16174 = !DILocation(line: 140, column: 63, scope: !16170)
!16175 = !DILocation(line: 140, column: 66, scope: !16170)
!16176 = !DILocation(line: 140, column: 71, scope: !16170)
!16177 = !DILocation(line: 140, column: 56, scope: !16170)
!16178 = !DILocation(line: 140, column: 17, scope: !16170)
!16179 = !DILocation(line: 140, column: 26, scope: !16170)
!16180 = !DILocation(line: 140, column: 40, scope: !16170)
!16181 = !DILocation(line: 140, column: 54, scope: !16170)
!16182 = !DILocation(line: 141, column: 13, scope: !16170)
!16183 = !DILocation(line: 142, column: 13, scope: !16144)
!16184 = !DILocation(line: 145, column: 26, scope: !16144)
!16185 = !DILocation(line: 145, column: 55, scope: !16144)
!16186 = !DILocation(line: 145, column: 58, scope: !16144)
!16187 = !DILocation(line: 145, column: 66, scope: !16144)
!16188 = !DILocation(line: 145, column: 13, scope: !16144)
!16189 = !DILocation(line: 146, column: 13, scope: !16144)
!16190 = !DILocation(line: 149, column: 18, scope: !16191)
!16191 = distinct !DILexicalBlock(scope: !16144, file: !950, line: 149, column: 17)
!16192 = !DILocation(line: 149, column: 27, scope: !16191)
!16193 = !DILocation(line: 149, column: 41, scope: !16191)
!16194 = !DILocation(line: 149, column: 17, scope: !16144)
!16195 = !DILocation(line: 150, column: 48, scope: !16191)
!16196 = !DILocation(line: 150, column: 17, scope: !16191)
!16197 = !DILocation(line: 150, column: 26, scope: !16191)
!16198 = !DILocation(line: 150, column: 40, scope: !16191)
!16199 = !DILocation(line: 150, column: 46, scope: !16191)
!16200 = !DILocation(line: 151, column: 18, scope: !16201)
!16201 = distinct !DILexicalBlock(scope: !16144, file: !950, line: 151, column: 17)
!16202 = !DILocation(line: 151, column: 27, scope: !16201)
!16203 = !DILocation(line: 151, column: 41, scope: !16201)
!16204 = !DILocation(line: 151, column: 17, scope: !16144)
!16205 = !DILocation(line: 152, column: 56, scope: !16201)
!16206 = !DILocation(line: 152, column: 17, scope: !16201)
!16207 = !DILocation(line: 152, column: 26, scope: !16201)
!16208 = !DILocation(line: 152, column: 40, scope: !16201)
!16209 = !DILocation(line: 152, column: 54, scope: !16201)
!16210 = !DILocation(line: 154, column: 13, scope: !16144)
!16211 = !DILocation(line: 154, column: 22, scope: !16144)
!16212 = !DILocation(line: 154, column: 28, scope: !16144)
!16213 = !DILocation(line: 155, column: 13, scope: !16144)
!16214 = distinct !{!16214, !16134, !16215, !3413}
!16215 = !DILocation(line: 157, column: 5, scope: !16112)
!16216 = !DILabel(scope: !16112, name: "out", file: !950, line: 159)
!16217 = !DILocation(line: 159, column: 1, scope: !16112)
!16218 = !DILocation(line: 160, column: 5, scope: !16112)
!16219 = !DILabel(scope: !16112, name: "error", file: !950, line: 162)
!16220 = !DILocation(line: 162, column: 1, scope: !16112)
!16221 = !DILocation(line: 163, column: 10, scope: !16112)
!16222 = !DILocation(line: 163, column: 19, scope: !16112)
!16223 = !DILocation(line: 163, column: 33, scope: !16112)
!16224 = !DILocation(line: 163, column: 5, scope: !16112)
!16225 = !DILocation(line: 164, column: 10, scope: !16112)
!16226 = !DILocation(line: 164, column: 19, scope: !16112)
!16227 = !DILocation(line: 164, column: 33, scope: !16112)
!16228 = !DILocation(line: 164, column: 5, scope: !16112)
!16229 = !DILocation(line: 165, column: 1, scope: !16112)
!16230 = distinct !DISubprogram(name: "redirect_init", scope: !1398, file: !1398, line: 48, type: !1409, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1560, retainedNodes: !286)
!16231 = !DILocalVariable(name: "data", arg: 1, scope: !16230, file: !1398, line: 48, type: !111)
!16232 = !DILocation(line: 48, column: 34, scope: !16230)
!16233 = !DILocalVariable(name: "settings", scope: !16230, file: !1398, line: 50, type: !16234)
!16234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16235, size: 64)
!16235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_redirect_settings_t", file: !16236, line: 24, size: 64, elements: !16237)
!16236 = !DIFile(filename: "common/lwan-redirect.h", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "25abbb1e5767b611112408eeb90b4027")
!16237 = !{!16238}
!16238 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !16235, file: !16236, line: 25, baseType: !52, size: 64)
!16239 = !DILocation(line: 50, column: 38, scope: !16230)
!16240 = !DILocation(line: 50, column: 49, scope: !16230)
!16241 = !DILocation(line: 51, column: 13, scope: !16230)
!16242 = !DILocation(line: 51, column: 23, scope: !16230)
!16243 = !DILocation(line: 51, column: 12, scope: !16230)
!16244 = !DILocation(line: 51, column: 36, scope: !16230)
!16245 = !DILocation(line: 51, column: 46, scope: !16230)
!16246 = !DILocation(line: 51, column: 29, scope: !16230)
!16247 = !DILocation(line: 51, column: 5, scope: !16230)
!16248 = distinct !DISubprogram(name: "redirect_init_from_hash", scope: !1398, file: !1398, line: 54, type: !1413, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1560, retainedNodes: !286)
!16249 = !DILocalVariable(name: "hash", arg: 1, scope: !16248, file: !1398, line: 54, type: !1415)
!16250 = !DILocation(line: 54, column: 57, scope: !16248)
!16251 = !DILocalVariable(name: "settings", scope: !16248, file: !1398, line: 56, type: !16235)
!16252 = !DILocation(line: 56, column: 37, scope: !16248)
!16253 = !DILocation(line: 56, column: 48, scope: !16248)
!16254 = !DILocation(line: 57, column: 25, scope: !16248)
!16255 = !DILocation(line: 57, column: 15, scope: !16248)
!16256 = !DILocation(line: 59, column: 12, scope: !16248)
!16257 = !DILocation(line: 59, column: 5, scope: !16248)
!16258 = distinct !DISubprogram(name: "redirect_handle_cb", scope: !1398, file: !1398, line: 27, type: !1420, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1560, retainedNodes: !286)
!16259 = !DILocalVariable(name: "request", arg: 1, scope: !16258, file: !1398, line: 27, type: !1422)
!16260 = !DILocation(line: 27, column: 36, scope: !16258)
!16261 = !DILocalVariable(name: "response", arg: 2, scope: !16258, file: !1398, line: 28, type: !1557)
!16262 = !DILocation(line: 28, column: 37, scope: !16258)
!16263 = !DILocalVariable(name: "data", arg: 3, scope: !16258, file: !1398, line: 29, type: !111)
!16264 = !DILocation(line: 29, column: 26, scope: !16258)
!16265 = !DILocation(line: 31, column: 9, scope: !16266)
!16266 = distinct !DILexicalBlock(scope: !16258, file: !1398, line: 31, column: 9)
!16267 = !DILocation(line: 31, column: 9, scope: !16258)
!16268 = !DILocation(line: 32, column: 9, scope: !16266)
!16269 = !DILocalVariable(name: "headers", scope: !16258, file: !1398, line: 34, type: !1508)
!16270 = !DILocation(line: 34, column: 23, scope: !16258)
!16271 = !DILocation(line: 34, column: 45, scope: !16258)
!16272 = !DILocation(line: 34, column: 54, scope: !16258)
!16273 = !DILocation(line: 34, column: 60, scope: !16258)
!16274 = !DILocation(line: 34, column: 33, scope: !16258)
!16275 = !DILocation(line: 35, column: 9, scope: !16276)
!16276 = distinct !DILexicalBlock(scope: !16258, file: !1398, line: 35, column: 9)
!16277 = !DILocation(line: 35, column: 9, scope: !16258)
!16278 = !DILocation(line: 36, column: 9, scope: !16276)
!16279 = !DILocation(line: 38, column: 5, scope: !16258)
!16280 = !DILocation(line: 38, column: 16, scope: !16258)
!16281 = !DILocation(line: 38, column: 20, scope: !16258)
!16282 = !DILocation(line: 39, column: 24, scope: !16258)
!16283 = !DILocation(line: 39, column: 5, scope: !16258)
!16284 = !DILocation(line: 39, column: 16, scope: !16258)
!16285 = !DILocation(line: 39, column: 22, scope: !16258)
!16286 = !DILocation(line: 40, column: 5, scope: !16258)
!16287 = !DILocation(line: 40, column: 16, scope: !16258)
!16288 = !DILocation(line: 40, column: 20, scope: !16258)
!16289 = !DILocation(line: 41, column: 5, scope: !16258)
!16290 = !DILocation(line: 41, column: 16, scope: !16258)
!16291 = !DILocation(line: 41, column: 22, scope: !16258)
!16292 = !DILocation(line: 43, column: 25, scope: !16258)
!16293 = !DILocation(line: 43, column: 5, scope: !16258)
!16294 = !DILocation(line: 43, column: 15, scope: !16258)
!16295 = !DILocation(line: 43, column: 23, scope: !16258)
!16296 = !DILocation(line: 45, column: 5, scope: !16258)
!16297 = !DILocation(line: 46, column: 1, scope: !16258)
!16298 = distinct !DISubprogram(name: "serve_files_init", scope: !2153, file: !2153, line: 637, type: !1409, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !286)
!16299 = !DILocalVariable(name: "args", arg: 1, scope: !16298, file: !2153, line: 637, type: !111)
!16300 = !DILocation(line: 637, column: 24, scope: !16298)
!16301 = !DILocalVariable(name: "settings", scope: !16298, file: !2153, line: 639, type: !16302)
!16302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16303, size: 64)
!16303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_serve_files_settings_t", file: !16304, line: 28, size: 192, elements: !16305)
!16304 = !DIFile(filename: "common/lwan-serve-files.h", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "605079e730f5b74778523d0897dc40c2")
!16305 = !{!16306, !16307, !16308}
!16306 = !DIDerivedType(tag: DW_TAG_member, name: "root_path", scope: !16303, file: !16304, line: 29, baseType: !205, size: 64)
!16307 = !DIDerivedType(tag: DW_TAG_member, name: "index_html", scope: !16303, file: !16304, line: 30, baseType: !205, size: 64, offset: 64)
!16308 = !DIDerivedType(tag: DW_TAG_member, name: "serve_precompressed_files", scope: !16303, file: !16304, line: 31, baseType: !137, size: 8, offset: 128)
!16309 = !DILocation(line: 639, column: 41, scope: !16298)
!16310 = !DILocation(line: 639, column: 52, scope: !16298)
!16311 = !DILocalVariable(name: "canonical_root", scope: !16298, file: !2153, line: 640, type: !52)
!16312 = !DILocation(line: 640, column: 11, scope: !16298)
!16313 = !DILocalVariable(name: "root_fd", scope: !16298, file: !2153, line: 641, type: !34)
!16314 = !DILocation(line: 641, column: 9, scope: !16298)
!16315 = !DILocalVariable(name: "priv", scope: !16298, file: !2153, line: 642, type: !2377)
!16316 = !DILocation(line: 642, column: 25, scope: !16298)
!16317 = !DILocalVariable(name: "open_mode", scope: !16298, file: !2153, line: 643, type: !34)
!16318 = !DILocation(line: 643, column: 9, scope: !16298)
!16319 = !DILocation(line: 645, column: 10, scope: !16320)
!16320 = distinct !DILexicalBlock(scope: !16298, file: !2153, line: 645, column: 9)
!16321 = !DILocation(line: 645, column: 20, scope: !16320)
!16322 = !DILocation(line: 645, column: 9, scope: !16298)
!16323 = !DILocation(line: 646, column: 9, scope: !16324)
!16324 = distinct !DILexicalBlock(scope: !16320, file: !2153, line: 645, column: 31)
!16325 = !DILocation(line: 647, column: 9, scope: !16324)
!16326 = !DILocation(line: 650, column: 31, scope: !16298)
!16327 = !DILocation(line: 650, column: 41, scope: !16298)
!16328 = !DILocation(line: 650, column: 22, scope: !16298)
!16329 = !DILocation(line: 650, column: 20, scope: !16298)
!16330 = !DILocation(line: 651, column: 10, scope: !16331)
!16331 = distinct !DILexicalBlock(scope: !16298, file: !2153, line: 651, column: 9)
!16332 = !DILocation(line: 651, column: 9, scope: !16298)
!16333 = !DILocation(line: 652, column: 9, scope: !16334)
!16334 = distinct !DILexicalBlock(scope: !16331, file: !2153, line: 651, column: 26)
!16335 = !DILocation(line: 654, column: 9, scope: !16334)
!16336 = !DILocation(line: 657, column: 34, scope: !16298)
!16337 = !DILocation(line: 657, column: 15, scope: !16298)
!16338 = !DILocation(line: 657, column: 13, scope: !16298)
!16339 = !DILocation(line: 658, column: 9, scope: !16340)
!16340 = distinct !DILexicalBlock(scope: !16298, file: !2153, line: 658, column: 9)
!16341 = !DILocation(line: 658, column: 17, scope: !16340)
!16342 = !DILocation(line: 658, column: 9, scope: !16298)
!16343 = !DILocation(line: 659, column: 9, scope: !16344)
!16344 = distinct !DILexicalBlock(scope: !16340, file: !2153, line: 658, column: 22)
!16345 = !DILocation(line: 661, column: 9, scope: !16344)
!16346 = !DILocation(line: 664, column: 12, scope: !16298)
!16347 = !DILocation(line: 664, column: 10, scope: !16298)
!16348 = !DILocation(line: 665, column: 10, scope: !16349)
!16349 = distinct !DILexicalBlock(scope: !16298, file: !2153, line: 665, column: 9)
!16350 = !DILocation(line: 665, column: 9, scope: !16298)
!16351 = !DILocation(line: 666, column: 9, scope: !16352)
!16352 = distinct !DILexicalBlock(scope: !16349, file: !2153, line: 665, column: 16)
!16353 = !DILocation(line: 667, column: 9, scope: !16352)
!16354 = !DILocation(line: 671, column: 17, scope: !16298)
!16355 = !DILocation(line: 670, column: 19, scope: !16298)
!16356 = !DILocation(line: 670, column: 5, scope: !16298)
!16357 = !DILocation(line: 670, column: 11, scope: !16298)
!16358 = !DILocation(line: 670, column: 17, scope: !16298)
!16359 = !DILocation(line: 672, column: 10, scope: !16360)
!16360 = distinct !DILexicalBlock(scope: !16298, file: !2153, line: 672, column: 9)
!16361 = !DILocation(line: 672, column: 16, scope: !16360)
!16362 = !DILocation(line: 672, column: 9, scope: !16298)
!16363 = !DILocation(line: 673, column: 9, scope: !16364)
!16364 = distinct !DILexicalBlock(scope: !16360, file: !2153, line: 672, column: 23)
!16365 = !DILocation(line: 674, column: 9, scope: !16364)
!16366 = !DILocation(line: 678, column: 17, scope: !16298)
!16367 = !DILocation(line: 677, column: 32, scope: !16298)
!16368 = !DILocation(line: 677, column: 5, scope: !16298)
!16369 = !DILocation(line: 677, column: 11, scope: !16298)
!16370 = !DILocation(line: 677, column: 30, scope: !16298)
!16371 = !DILocation(line: 679, column: 10, scope: !16372)
!16372 = distinct !DILexicalBlock(scope: !16298, file: !2153, line: 679, column: 9)
!16373 = !DILocation(line: 679, column: 16, scope: !16372)
!16374 = !DILocation(line: 679, column: 9, scope: !16298)
!16375 = !DILocation(line: 680, column: 9, scope: !16376)
!16376 = distinct !DILexicalBlock(scope: !16372, file: !2153, line: 679, column: 36)
!16377 = !DILocation(line: 681, column: 9, scope: !16376)
!16378 = !DILocation(line: 684, column: 23, scope: !16298)
!16379 = !DILocation(line: 684, column: 5, scope: !16298)
!16380 = !DILocation(line: 684, column: 11, scope: !16298)
!16381 = !DILocation(line: 684, column: 16, scope: !16298)
!16382 = !DILocation(line: 684, column: 21, scope: !16298)
!16383 = !DILocation(line: 685, column: 34, scope: !16298)
!16384 = !DILocation(line: 685, column: 27, scope: !16298)
!16385 = !DILocation(line: 685, column: 5, scope: !16298)
!16386 = !DILocation(line: 685, column: 11, scope: !16298)
!16387 = !DILocation(line: 685, column: 16, scope: !16298)
!16388 = !DILocation(line: 685, column: 25, scope: !16298)
!16389 = !DILocation(line: 686, column: 21, scope: !16298)
!16390 = !DILocation(line: 686, column: 5, scope: !16298)
!16391 = !DILocation(line: 686, column: 11, scope: !16298)
!16392 = !DILocation(line: 686, column: 16, scope: !16298)
!16393 = !DILocation(line: 686, column: 19, scope: !16298)
!16394 = !DILocation(line: 687, column: 23, scope: !16298)
!16395 = !DILocation(line: 687, column: 5, scope: !16298)
!16396 = !DILocation(line: 687, column: 11, scope: !16298)
!16397 = !DILocation(line: 687, column: 21, scope: !16298)
!16398 = !DILocation(line: 688, column: 24, scope: !16298)
!16399 = !DILocation(line: 688, column: 34, scope: !16298)
!16400 = !DILocation(line: 688, column: 47, scope: !16298)
!16401 = !DILocation(line: 688, column: 57, scope: !16298)
!16402 = !DILocation(line: 688, column: 5, scope: !16298)
!16403 = !DILocation(line: 688, column: 11, scope: !16298)
!16404 = !DILocation(line: 688, column: 22, scope: !16298)
!16405 = !DILocation(line: 689, column: 39, scope: !16298)
!16406 = !DILocation(line: 689, column: 49, scope: !16298)
!16407 = !DILocation(line: 689, column: 5, scope: !16298)
!16408 = !DILocation(line: 689, column: 11, scope: !16298)
!16409 = !DILocation(line: 689, column: 37, scope: !16298)
!16410 = !DILocation(line: 691, column: 12, scope: !16298)
!16411 = !DILocation(line: 691, column: 5, scope: !16298)
!16412 = !DILabel(scope: !16298, name: "out_tpl_compile", file: !2153, line: 693)
!16413 = !DILocation(line: 693, column: 1, scope: !16298)
!16414 = !DILocation(line: 694, column: 19, scope: !16298)
!16415 = !DILocation(line: 694, column: 25, scope: !16298)
!16416 = !DILocation(line: 694, column: 5, scope: !16298)
!16417 = !DILabel(scope: !16298, name: "out_cache_create", file: !2153, line: 695)
!16418 = !DILocation(line: 695, column: 1, scope: !16298)
!16419 = !DILocation(line: 696, column: 10, scope: !16298)
!16420 = !DILocation(line: 696, column: 5, scope: !16298)
!16421 = !DILabel(scope: !16298, name: "out_malloc", file: !2153, line: 697)
!16422 = !DILocation(line: 697, column: 1, scope: !16298)
!16423 = !DILocation(line: 698, column: 11, scope: !16298)
!16424 = !DILocation(line: 698, column: 5, scope: !16298)
!16425 = !DILabel(scope: !16298, name: "out_open", file: !2153, line: 699)
!16426 = !DILocation(line: 699, column: 1, scope: !16298)
!16427 = !DILocation(line: 700, column: 10, scope: !16298)
!16428 = !DILocation(line: 700, column: 5, scope: !16298)
!16429 = !DILabel(scope: !16298, name: "out_realpath", file: !2153, line: 701)
!16430 = !DILocation(line: 701, column: 1, scope: !16298)
!16431 = !DILocation(line: 702, column: 5, scope: !16298)
!16432 = !DILocation(line: 703, column: 1, scope: !16298)
!16433 = distinct !DISubprogram(name: "serve_files_init_from_hash", scope: !2153, file: !2153, line: 706, type: !1413, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !286)
!16434 = !DILocalVariable(name: "hash", arg: 1, scope: !16433, file: !2153, line: 706, type: !1415)
!16435 = !DILocation(line: 706, column: 47, scope: !16433)
!16436 = !DILocalVariable(name: "settings", scope: !16433, file: !2153, line: 708, type: !16303)
!16437 = !DILocation(line: 708, column: 40, scope: !16433)
!16438 = !DILocation(line: 708, column: 51, scope: !16433)
!16439 = !DILocation(line: 709, column: 32, scope: !16433)
!16440 = !DILocation(line: 709, column: 22, scope: !16433)
!16441 = !DILocation(line: 710, column: 33, scope: !16433)
!16442 = !DILocation(line: 710, column: 23, scope: !16433)
!16443 = !DILocation(line: 712, column: 34, scope: !16433)
!16444 = !DILocation(line: 712, column: 24, scope: !16433)
!16445 = !DILocation(line: 712, column: 13, scope: !16433)
!16446 = !DILocation(line: 714, column: 12, scope: !16433)
!16447 = !DILocation(line: 714, column: 5, scope: !16433)
!16448 = distinct !DISubprogram(name: "serve_files_shutdown", scope: !2153, file: !2153, line: 718, type: !116, scopeLine: 719, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !286)
!16449 = !DILocalVariable(name: "data", arg: 1, scope: !16448, file: !2153, line: 718, type: !111)
!16450 = !DILocation(line: 718, column: 28, scope: !16448)
!16451 = !DILocalVariable(name: "priv", scope: !16448, file: !2153, line: 720, type: !2377)
!16452 = !DILocation(line: 720, column: 25, scope: !16448)
!16453 = !DILocation(line: 720, column: 32, scope: !16448)
!16454 = !DILocation(line: 722, column: 10, scope: !16455)
!16455 = distinct !DILexicalBlock(scope: !16448, file: !2153, line: 722, column: 9)
!16456 = !DILocation(line: 722, column: 9, scope: !16448)
!16457 = !DILocation(line: 723, column: 9, scope: !16458)
!16458 = distinct !DILexicalBlock(scope: !16455, file: !2153, line: 722, column: 16)
!16459 = !DILocation(line: 724, column: 9, scope: !16458)
!16460 = !DILocation(line: 727, column: 19, scope: !16448)
!16461 = !DILocation(line: 727, column: 25, scope: !16448)
!16462 = !DILocation(line: 727, column: 5, scope: !16448)
!16463 = !DILocation(line: 728, column: 19, scope: !16448)
!16464 = !DILocation(line: 728, column: 25, scope: !16448)
!16465 = !DILocation(line: 728, column: 5, scope: !16448)
!16466 = !DILocation(line: 729, column: 11, scope: !16448)
!16467 = !DILocation(line: 729, column: 17, scope: !16448)
!16468 = !DILocation(line: 729, column: 22, scope: !16448)
!16469 = !DILocation(line: 729, column: 5, scope: !16448)
!16470 = !DILocation(line: 730, column: 10, scope: !16448)
!16471 = !DILocation(line: 730, column: 16, scope: !16448)
!16472 = !DILocation(line: 730, column: 21, scope: !16448)
!16473 = !DILocation(line: 730, column: 5, scope: !16448)
!16474 = !DILocation(line: 731, column: 10, scope: !16448)
!16475 = !DILocation(line: 731, column: 5, scope: !16448)
!16476 = !DILocation(line: 732, column: 1, scope: !16448)
!16477 = distinct !DISubprogram(name: "serve_files_handle_cb", scope: !2153, file: !2153, line: 981, type: !2167, scopeLine: 982, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !286)
!16478 = !DILocalVariable(name: "request", arg: 1, scope: !16477, file: !2153, line: 981, type: !2169)
!16479 = !DILocation(line: 981, column: 39, scope: !16477)
!16480 = !DILocalVariable(name: "response", arg: 2, scope: !16477, file: !2153, line: 981, type: !2306)
!16481 = !DILocation(line: 981, column: 65, scope: !16477)
!16482 = !DILocalVariable(name: "data", arg: 3, scope: !16477, file: !2153, line: 981, type: !111)
!16483 = !DILocation(line: 981, column: 81, scope: !16477)
!16484 = !DILocalVariable(name: "return_status", scope: !16477, file: !2153, line: 983, type: !6)
!16485 = !DILocation(line: 983, column: 24, scope: !16477)
!16486 = !DILocalVariable(name: "priv", scope: !16477, file: !2153, line: 984, type: !2377)
!16487 = !DILocation(line: 984, column: 25, scope: !16477)
!16488 = !DILocation(line: 984, column: 32, scope: !16477)
!16489 = !DILocalVariable(name: "ce", scope: !16477, file: !2153, line: 985, type: !2312)
!16490 = !DILocation(line: 985, column: 27, scope: !16477)
!16491 = !DILocation(line: 987, column: 9, scope: !16492)
!16492 = distinct !DILexicalBlock(scope: !16477, file: !2153, line: 987, column: 9)
!16493 = !DILocation(line: 987, column: 9, scope: !16477)
!16494 = !DILocation(line: 988, column: 23, scope: !16495)
!16495 = distinct !DILexicalBlock(scope: !16492, file: !2153, line: 987, column: 26)
!16496 = !DILocation(line: 989, column: 9, scope: !16495)
!16497 = !DILocation(line: 992, column: 39, scope: !16477)
!16498 = !DILocation(line: 992, column: 45, scope: !16477)
!16499 = !DILocation(line: 992, column: 52, scope: !16477)
!16500 = !DILocation(line: 992, column: 61, scope: !16477)
!16501 = !DILocation(line: 992, column: 67, scope: !16477)
!16502 = !DILocation(line: 993, column: 17, scope: !16477)
!16503 = !DILocation(line: 993, column: 26, scope: !16477)
!16504 = !DILocation(line: 993, column: 30, scope: !16477)
!16505 = !DILocation(line: 992, column: 10, scope: !16477)
!16506 = !DILocation(line: 992, column: 8, scope: !16477)
!16507 = !DILocation(line: 994, column: 9, scope: !16508)
!16508 = distinct !DILexicalBlock(scope: !16477, file: !2153, line: 994, column: 9)
!16509 = !DILocation(line: 994, column: 9, scope: !16477)
!16510 = !DILocalVariable(name: "fce", scope: !16511, file: !2153, line: 995, type: !2355)
!16511 = distinct !DILexicalBlock(scope: !16508, file: !2153, line: 994, column: 21)
!16512 = !DILocation(line: 995, column: 29, scope: !16511)
!16513 = !DILocation(line: 995, column: 57, scope: !16511)
!16514 = !DILocation(line: 996, column: 31, scope: !16511)
!16515 = !DILocation(line: 996, column: 36, scope: !16511)
!16516 = !DILocation(line: 996, column: 9, scope: !16511)
!16517 = !DILocation(line: 996, column: 19, scope: !16511)
!16518 = !DILocation(line: 996, column: 29, scope: !16511)
!16519 = !DILocation(line: 997, column: 37, scope: !16511)
!16520 = !DILocation(line: 997, column: 42, scope: !16511)
!16521 = !DILocation(line: 997, column: 49, scope: !16511)
!16522 = !DILocation(line: 997, column: 9, scope: !16511)
!16523 = !DILocation(line: 997, column: 19, scope: !16511)
!16524 = !DILocation(line: 997, column: 26, scope: !16511)
!16525 = !DILocation(line: 997, column: 35, scope: !16511)
!16526 = !DILocation(line: 998, column: 33, scope: !16511)
!16527 = !DILocation(line: 998, column: 9, scope: !16511)
!16528 = !DILocation(line: 998, column: 19, scope: !16511)
!16529 = !DILocation(line: 998, column: 26, scope: !16511)
!16530 = !DILocation(line: 998, column: 31, scope: !16511)
!16531 = !DILocation(line: 999, column: 33, scope: !16511)
!16532 = !DILocation(line: 999, column: 9, scope: !16511)
!16533 = !DILocation(line: 999, column: 19, scope: !16511)
!16534 = !DILocation(line: 999, column: 26, scope: !16511)
!16535 = !DILocation(line: 999, column: 31, scope: !16511)
!16536 = !DILocation(line: 1001, column: 9, scope: !16511)
!16537 = !DILabel(scope: !16477, name: "fail", file: !2153, line: 1004)
!16538 = !DILocation(line: 1004, column: 1, scope: !16477)
!16539 = !DILocation(line: 1005, column: 5, scope: !16477)
!16540 = !DILocation(line: 1005, column: 15, scope: !16477)
!16541 = !DILocation(line: 1005, column: 22, scope: !16477)
!16542 = !DILocation(line: 1005, column: 31, scope: !16477)
!16543 = !DILocation(line: 1006, column: 12, scope: !16477)
!16544 = !DILocation(line: 1006, column: 5, scope: !16477)
!16545 = !DILocation(line: 1007, column: 1, scope: !16477)
!16546 = distinct !DISubprogram(name: "lwan_tpl_free", scope: !2858, file: !2858, line: 906, type: !16547, scopeLine: 907, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!16547 = !DISubroutineType(types: !16548)
!16548 = !{null, !3098}
!16549 = !DILocalVariable(name: "tpl", arg: 1, scope: !16546, file: !2858, line: 906, type: !3098)
!16550 = !DILocation(line: 906, column: 27, scope: !16546)
!16551 = !DILocalVariable(name: "iter", scope: !16546, file: !2858, line: 908, type: !2999)
!16552 = !DILocation(line: 908, column: 19, scope: !16546)
!16553 = !DILocation(line: 910, column: 10, scope: !16554)
!16554 = distinct !DILexicalBlock(scope: !16546, file: !2858, line: 910, column: 9)
!16555 = !DILocation(line: 910, column: 9, scope: !16546)
!16556 = !DILocation(line: 911, column: 9, scope: !16554)
!16557 = !DILocation(line: 913, column: 9, scope: !16558)
!16558 = distinct !DILexicalBlock(scope: !16546, file: !2858, line: 913, column: 9)
!16559 = !DILocation(line: 913, column: 14, scope: !16558)
!16560 = !DILocation(line: 913, column: 9, scope: !16546)
!16561 = !DILocation(line: 914, column: 21, scope: !16562)
!16562 = distinct !DILexicalBlock(scope: !16563, file: !2858, line: 914, column: 9)
!16563 = distinct !DILexicalBlock(scope: !16558, file: !2858, line: 913, column: 22)
!16564 = !DILocation(line: 914, column: 26, scope: !16562)
!16565 = !DILocation(line: 914, column: 19, scope: !16562)
!16566 = !DILocation(line: 914, column: 14, scope: !16562)
!16567 = !DILocation(line: 914, column: 34, scope: !16568)
!16568 = distinct !DILexicalBlock(scope: !16562, file: !2858, line: 914, column: 9)
!16569 = !DILocation(line: 914, column: 40, scope: !16568)
!16570 = !DILocation(line: 914, column: 47, scope: !16568)
!16571 = !DILocation(line: 914, column: 9, scope: !16562)
!16572 = !DILocation(line: 915, column: 24, scope: !16568)
!16573 = !DILocation(line: 915, column: 13, scope: !16568)
!16574 = !DILocation(line: 914, column: 67, scope: !16568)
!16575 = !DILocation(line: 914, column: 9, scope: !16568)
!16576 = distinct !{!16576, !16571, !16577, !3413}
!16577 = !DILocation(line: 915, column: 28, scope: !16562)
!16578 = !DILocation(line: 916, column: 14, scope: !16563)
!16579 = !DILocation(line: 916, column: 19, scope: !16563)
!16580 = !DILocation(line: 916, column: 9, scope: !16563)
!16581 = !DILocation(line: 917, column: 5, scope: !16563)
!16582 = !DILocation(line: 919, column: 10, scope: !16546)
!16583 = !DILocation(line: 919, column: 5, scope: !16546)
!16584 = !DILocation(line: 920, column: 1, scope: !16546)
!16585 = distinct !DISubprogram(name: "free_chunk", scope: !2858, file: !2858, line: 875, type: !16586, scopeLine: 876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!16586 = !DISubroutineType(types: !16587)
!16587 = !{null, !2999}
!16588 = !DILocalVariable(name: "chunk", arg: 1, scope: !16585, file: !2858, line: 875, type: !2999)
!16589 = !DILocation(line: 875, column: 26, scope: !16585)
!16590 = !DILocation(line: 877, column: 10, scope: !16591)
!16591 = distinct !DILexicalBlock(scope: !16585, file: !2858, line: 877, column: 9)
!16592 = !DILocation(line: 877, column: 9, scope: !16585)
!16593 = !DILocation(line: 878, column: 9, scope: !16591)
!16594 = !DILocation(line: 879, column: 9, scope: !16595)
!16595 = distinct !DILexicalBlock(scope: !16585, file: !2858, line: 879, column: 9)
!16596 = !DILocation(line: 879, column: 16, scope: !16595)
!16597 = !DILocation(line: 879, column: 22, scope: !16595)
!16598 = !DILocation(line: 879, column: 9, scope: !16585)
!16599 = !DILocation(line: 880, column: 9, scope: !16595)
!16600 = !DILocation(line: 882, column: 13, scope: !16585)
!16601 = !DILocation(line: 882, column: 20, scope: !16585)
!16602 = !DILocation(line: 882, column: 5, scope: !16585)
!16603 = !DILocation(line: 891, column: 9, scope: !16604)
!16604 = distinct !DILexicalBlock(scope: !16585, file: !2858, line: 882, column: 28)
!16605 = !DILocation(line: 894, column: 14, scope: !16604)
!16606 = !DILocation(line: 894, column: 21, scope: !16604)
!16607 = !DILocation(line: 894, column: 9, scope: !16604)
!16608 = !DILocation(line: 895, column: 9, scope: !16604)
!16609 = !DILocation(line: 897, column: 21, scope: !16604)
!16610 = !DILocation(line: 897, column: 28, scope: !16604)
!16611 = !DILocation(line: 897, column: 9, scope: !16604)
!16612 = !DILocation(line: 898, column: 9, scope: !16604)
!16613 = !DILocation(line: 900, column: 23, scope: !16604)
!16614 = !DILocation(line: 900, column: 30, scope: !16604)
!16615 = !DILocation(line: 900, column: 9, scope: !16604)
!16616 = !DILocation(line: 901, column: 9, scope: !16604)
!16617 = !DILocation(line: 903, column: 1, scope: !16585)
!16618 = distinct !DISubprogram(name: "try_open_directory", scope: !2153, file: !2153, line: 605, type: !16619, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !286)
!16619 = !DISubroutineType(types: !16620)
!16620 = !{!34, !205, !363}
!16621 = !DILocalVariable(name: "path", arg: 1, scope: !16618, file: !2153, line: 605, type: !205)
!16622 = !DILocation(line: 605, column: 32, scope: !16618)
!16623 = !DILocalVariable(name: "open_mode", arg: 2, scope: !16618, file: !2153, line: 605, type: !363)
!16624 = !DILocation(line: 605, column: 43, scope: !16618)
!16625 = !DILocalVariable(name: "fd", scope: !16618, file: !2153, line: 607, type: !34)
!16626 = !DILocation(line: 607, column: 9, scope: !16618)
!16627 = !DILocation(line: 609, column: 6, scope: !16618)
!16628 = !DILocation(line: 609, column: 16, scope: !16618)
!16629 = !DILocation(line: 611, column: 15, scope: !16618)
!16630 = !DILocation(line: 611, column: 22, scope: !16618)
!16631 = !DILocation(line: 611, column: 21, scope: !16618)
!16632 = !DILocation(line: 611, column: 32, scope: !16618)
!16633 = !DILocation(line: 611, column: 10, scope: !16618)
!16634 = !DILocation(line: 611, column: 8, scope: !16618)
!16635 = !DILocation(line: 612, column: 9, scope: !16636)
!16636 = distinct !DILexicalBlock(scope: !16618, file: !2153, line: 612, column: 9)
!16637 = !DILocation(line: 612, column: 12, scope: !16636)
!16638 = !DILocation(line: 612, column: 9, scope: !16618)
!16639 = !DILocation(line: 614, column: 10, scope: !16640)
!16640 = distinct !DILexicalBlock(scope: !16636, file: !2153, line: 612, column: 17)
!16641 = !DILocation(line: 614, column: 20, scope: !16640)
!16642 = !DILocation(line: 616, column: 19, scope: !16640)
!16643 = !DILocation(line: 616, column: 26, scope: !16640)
!16644 = !DILocation(line: 616, column: 25, scope: !16640)
!16645 = !DILocation(line: 616, column: 36, scope: !16640)
!16646 = !DILocation(line: 616, column: 14, scope: !16640)
!16647 = !DILocation(line: 616, column: 12, scope: !16640)
!16648 = !DILocation(line: 617, column: 13, scope: !16649)
!16649 = distinct !DILexicalBlock(scope: !16640, file: !2153, line: 617, column: 13)
!16650 = !DILocation(line: 617, column: 16, scope: !16649)
!16651 = !DILocation(line: 617, column: 13, scope: !16640)
!16652 = !DILocation(line: 619, column: 14, scope: !16653)
!16653 = distinct !DILexicalBlock(scope: !16649, file: !2153, line: 617, column: 21)
!16654 = !DILocation(line: 619, column: 24, scope: !16653)
!16655 = !DILocation(line: 621, column: 23, scope: !16653)
!16656 = !DILocation(line: 621, column: 30, scope: !16653)
!16657 = !DILocation(line: 621, column: 29, scope: !16653)
!16658 = !DILocation(line: 621, column: 40, scope: !16653)
!16659 = !DILocation(line: 621, column: 18, scope: !16653)
!16660 = !DILocation(line: 621, column: 16, scope: !16653)
!16661 = !DILocation(line: 622, column: 9, scope: !16653)
!16662 = !DILocation(line: 623, column: 5, scope: !16640)
!16663 = !DILocation(line: 625, column: 9, scope: !16664)
!16664 = distinct !DILexicalBlock(scope: !16618, file: !2153, line: 625, column: 9)
!16665 = !DILocation(line: 625, column: 12, scope: !16664)
!16666 = !DILocation(line: 625, column: 9, scope: !16618)
!16667 = !DILocation(line: 626, column: 9, scope: !16664)
!16668 = !DILocation(line: 632, column: 11, scope: !16618)
!16669 = !DILocation(line: 632, column: 5, scope: !16618)
!16670 = !DILocation(line: 633, column: 17, scope: !16618)
!16671 = !DILocation(line: 633, column: 24, scope: !16618)
!16672 = !DILocation(line: 633, column: 23, scope: !16618)
!16673 = !DILocation(line: 633, column: 34, scope: !16618)
!16674 = !DILocation(line: 633, column: 48, scope: !16618)
!16675 = !DILocation(line: 633, column: 12, scope: !16618)
!16676 = !DILocation(line: 633, column: 5, scope: !16618)
!16677 = !DILocation(line: 634, column: 1, scope: !16618)
!16678 = distinct !DISubprogram(name: "create_cache_entry", scope: !2153, file: !2153, line: 532, type: !16679, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !286)
!16679 = !DISubroutineType(types: !16680)
!16680 = !{!2312, !205, !111}
!16681 = !DILocalVariable(name: "key", arg: 1, scope: !16678, file: !2153, line: 532, type: !205)
!16682 = !DILocation(line: 532, column: 32, scope: !16678)
!16683 = !DILocalVariable(name: "context", arg: 2, scope: !16678, file: !2153, line: 532, type: !111)
!16684 = !DILocation(line: 532, column: 43, scope: !16678)
!16685 = !DILocalVariable(name: "priv", scope: !16678, file: !2153, line: 534, type: !2377)
!16686 = !DILocation(line: 534, column: 25, scope: !16678)
!16687 = !DILocation(line: 534, column: 32, scope: !16678)
!16688 = !DILocalVariable(name: "fce", scope: !16678, file: !2153, line: 535, type: !2355)
!16689 = !DILocation(line: 535, column: 25, scope: !16678)
!16690 = !DILocalVariable(name: "st", scope: !16678, file: !2153, line: 536, type: !2393)
!16691 = !DILocation(line: 536, column: 17, scope: !16678)
!16692 = !DILocalVariable(name: "funcs", scope: !16678, file: !2153, line: 537, type: !2367)
!16693 = !DILocation(line: 537, column: 26, scope: !16678)
!16694 = !DILocalVariable(name: "full_path", scope: !16678, file: !2153, line: 538, type: !10154)
!16695 = !DILocation(line: 538, column: 10, scope: !16678)
!16696 = !DILocation(line: 540, column: 9, scope: !16697)
!16697 = distinct !DILexicalBlock(scope: !16678, file: !2153, line: 540, column: 9)
!16698 = !DILocation(line: 540, column: 9, scope: !16678)
!16699 = !DILocation(line: 542, column: 9, scope: !16697)
!16700 = !DILocation(line: 544, column: 9, scope: !16701)
!16701 = distinct !DILexicalBlock(scope: !16678, file: !2153, line: 544, column: 9)
!16702 = !DILocation(line: 544, column: 9, scope: !16678)
!16703 = !DILocation(line: 545, column: 9, scope: !16701)
!16704 = !DILocation(line: 547, column: 23, scope: !16678)
!16705 = !DILocation(line: 547, column: 29, scope: !16678)
!16706 = !DILocation(line: 547, column: 34, scope: !16678)
!16707 = !DILocation(line: 547, column: 13, scope: !16678)
!16708 = !DILocation(line: 547, column: 11, scope: !16678)
!16709 = !DILocation(line: 548, column: 9, scope: !16710)
!16710 = distinct !DILexicalBlock(scope: !16678, file: !2153, line: 548, column: 9)
!16711 = !DILocation(line: 548, column: 9, scope: !16678)
!16712 = !DILocation(line: 549, column: 9, scope: !16710)
!16713 = !DILocation(line: 551, column: 41, scope: !16678)
!16714 = !DILocation(line: 551, column: 47, scope: !16678)
!16715 = !DILocation(line: 551, column: 63, scope: !16678)
!16716 = !DILocation(line: 551, column: 11, scope: !16678)
!16717 = !DILocation(line: 551, column: 9, scope: !16678)
!16718 = !DILocation(line: 552, column: 9, scope: !16719)
!16719 = distinct !DILexicalBlock(scope: !16678, file: !2153, line: 552, column: 9)
!16720 = !DILocation(line: 552, column: 9, scope: !16678)
!16721 = !DILocation(line: 553, column: 9, scope: !16719)
!16722 = !DILocation(line: 555, column: 29, scope: !16678)
!16723 = !DILocation(line: 555, column: 39, scope: !16678)
!16724 = !DILocation(line: 555, column: 44, scope: !16678)
!16725 = !DILocation(line: 555, column: 58, scope: !16678)
!16726 = !DILocation(line: 555, column: 5, scope: !16678)
!16727 = !DILocation(line: 556, column: 37, scope: !16678)
!16728 = !DILocation(line: 556, column: 5, scope: !16678)
!16729 = !DILocation(line: 556, column: 10, scope: !16678)
!16730 = !DILocation(line: 556, column: 24, scope: !16678)
!16731 = !DILocation(line: 556, column: 32, scope: !16678)
!16732 = !DILocation(line: 558, column: 36, scope: !16678)
!16733 = !DILocation(line: 558, column: 5, scope: !16678)
!16734 = !DILocation(line: 559, column: 1, scope: !16678)
!16735 = distinct !DISubprogram(name: "destroy_cache_entry", scope: !2153, file: !2153, line: 596, type: !16736, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !286)
!16736 = !DISubroutineType(types: !16737)
!16737 = !{null, !2312, !111}
!16738 = !DILocalVariable(name: "entry", arg: 1, scope: !16735, file: !2153, line: 596, type: !2312)
!16739 = !DILocation(line: 596, column: 43, scope: !16735)
!16740 = !DILocalVariable(name: "context", arg: 2, scope: !16735, file: !2153, line: 596, type: !111)
!16741 = !DILocation(line: 596, column: 56, scope: !16735)
!16742 = !DILocalVariable(name: "fce", scope: !16735, file: !2153, line: 598, type: !2355)
!16743 = !DILocation(line: 598, column: 25, scope: !16735)
!16744 = !DILocation(line: 598, column: 53, scope: !16735)
!16745 = !DILocation(line: 600, column: 5, scope: !16735)
!16746 = !DILocation(line: 600, column: 10, scope: !16735)
!16747 = !DILocation(line: 600, column: 17, scope: !16735)
!16748 = !DILocation(line: 600, column: 22, scope: !16735)
!16749 = !DILocation(line: 600, column: 26, scope: !16735)
!16750 = !DILocation(line: 601, column: 10, scope: !16735)
!16751 = !DILocation(line: 601, column: 5, scope: !16735)
!16752 = !DILocation(line: 602, column: 1, scope: !16735)
!16753 = distinct !DISubprogram(name: "lwan_tpl_compile_string", scope: !2858, file: !2858, line: 1111, type: !16754, scopeLine: 1112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!16754 = !DISubroutineType(types: !16755)
!16755 = !{!3098, !205, !15147}
!16756 = !DILocalVariable(name: "string", arg: 1, scope: !16753, file: !2858, line: 1111, type: !205)
!16757 = !DILocation(line: 1111, column: 37, scope: !16753)
!16758 = !DILocalVariable(name: "descriptor", arg: 2, scope: !16753, file: !2858, line: 1111, type: !15147)
!16759 = !DILocation(line: 1111, column: 74, scope: !16753)
!16760 = !DILocalVariable(name: "tpl", scope: !16753, file: !2858, line: 1113, type: !3098)
!16761 = !DILocation(line: 1113, column: 17, scope: !16753)
!16762 = !DILocation(line: 1115, column: 11, scope: !16753)
!16763 = !DILocation(line: 1115, column: 9, scope: !16753)
!16764 = !DILocation(line: 1116, column: 9, scope: !16765)
!16765 = distinct !DILexicalBlock(scope: !16753, file: !2858, line: 1116, column: 9)
!16766 = !DILocation(line: 1116, column: 9, scope: !16753)
!16767 = !DILocation(line: 1117, column: 26, scope: !16768)
!16768 = distinct !DILexicalBlock(scope: !16769, file: !2858, line: 1117, column: 13)
!16769 = distinct !DILexicalBlock(scope: !16765, file: !2858, line: 1116, column: 14)
!16770 = !DILocation(line: 1117, column: 31, scope: !16768)
!16771 = !DILocation(line: 1117, column: 39, scope: !16768)
!16772 = !DILocation(line: 1117, column: 13, scope: !16768)
!16773 = !DILocation(line: 1117, column: 13, scope: !16769)
!16774 = !DILocation(line: 1118, column: 20, scope: !16768)
!16775 = !DILocation(line: 1118, column: 13, scope: !16768)
!16776 = !DILocation(line: 1119, column: 5, scope: !16769)
!16777 = !DILocation(line: 1121, column: 19, scope: !16753)
!16778 = !DILocation(line: 1121, column: 5, scope: !16753)
!16779 = !DILocation(line: 1122, column: 5, scope: !16753)
!16780 = !DILocation(line: 1123, column: 1, scope: !16753)
!16781 = distinct !DISubprogram(name: "parse_string", scope: !2858, file: !2858, line: 1090, type: !16782, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!16782 = !DISubroutineType(types: !16783)
!16783 = !{!137, !3098, !205, !15147}
!16784 = !DILocalVariable(name: "tpl", arg: 1, scope: !16781, file: !2858, line: 1090, type: !3098)
!16785 = !DILocation(line: 1090, column: 38, scope: !16781)
!16786 = !DILocalVariable(name: "string", arg: 2, scope: !16781, file: !2858, line: 1090, type: !205)
!16787 = !DILocation(line: 1090, column: 55, scope: !16781)
!16788 = !DILocalVariable(name: "descriptor", arg: 3, scope: !16781, file: !2858, line: 1090, type: !15147)
!16789 = !DILocation(line: 1090, column: 92, scope: !16781)
!16790 = !DILocalVariable(name: "parser", scope: !16781, file: !2858, line: 1092, type: !16791)
!16791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "parser", file: !2858, line: 137, size: 1792, elements: !16792)
!16792 = !{!16793, !16794, !16795, !16801, !16820, !16821, !16825}
!16793 = !DIDerivedType(tag: DW_TAG_member, name: "tpl", scope: !16791, file: !2858, line: 138, baseType: !3098, size: 64)
!16794 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor", scope: !16791, file: !2858, line: 139, baseType: !15147, size: 64, offset: 64)
!16795 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !16791, file: !2858, line: 140, baseType: !16796, size: 64, offset: 128)
!16796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16797, size: 64)
!16797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "symtab", file: !2858, line: 112, size: 128, elements: !16798)
!16798 = !{!16799, !16800}
!16799 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !16797, file: !2858, line: 113, baseType: !127, size: 64)
!16800 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !16797, file: !2858, line: 114, baseType: !16796, size: 64, offset: 64)
!16801 = !DIDerivedType(tag: DW_TAG_member, name: "lexer", scope: !16791, file: !2858, line: 141, baseType: !16802, size: 1216, offset: 192)
!16802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lexer", file: !2858, line: 125, size: 1216, elements: !16803)
!16803 = !{!16804, !16809, !16810, !16811, !16812}
!16804 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !16802, file: !2858, line: 126, baseType: !16805, size: 64)
!16805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16806, size: 64)
!16806 = !DISubroutineType(types: !16807)
!16807 = !{!111, !16808}
!16808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16802, size: 64)
!16809 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !16802, file: !2858, line: 127, baseType: !205, size: 64, offset: 64)
!16810 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !16802, file: !2858, line: 127, baseType: !205, size: 64, offset: 128)
!16811 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !16802, file: !2858, line: 127, baseType: !205, size: 64, offset: 192)
!16812 = !DIDerivedType(tag: DW_TAG_member, name: "ring_buffer", scope: !16802, file: !2858, line: 134, baseType: !16813, size: 960, offset: 256)
!16813 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !16802, file: !2858, line: 129, size: 960, elements: !16814)
!16814 = !{!16815, !16817, !16818, !16819}
!16815 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !16813, file: !2858, line: 130, baseType: !16816, size: 768)
!16816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2976, size: 768, elements: !365)
!16817 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !16813, file: !2858, line: 131, baseType: !55, size: 64, offset: 768)
!16818 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !16813, file: !2858, line: 132, baseType: !55, size: 64, offset: 832)
!16819 = !DIDerivedType(tag: DW_TAG_member, name: "population", scope: !16813, file: !2858, line: 133, baseType: !55, size: 64, offset: 896)
!16820 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !16791, file: !2858, line: 142, baseType: !2921, size: 32, offset: 1408)
!16821 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16791, file: !2858, line: 143, baseType: !16822, size: 128, offset: 1472)
!16822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !659, line: 208, size: 128, elements: !16823)
!16823 = !{!16824}
!16824 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !16822, file: !659, line: 210, baseType: !2970, size: 128)
!16825 = !DIDerivedType(tag: DW_TAG_member, name: "chunks", scope: !16791, file: !2858, line: 147, baseType: !16826, size: 192, offset: 1600)
!16826 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !16791, file: !2858, line: 144, size: 192, elements: !16827)
!16827 = !{!16828, !16829, !16830}
!16828 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !16826, file: !2858, line: 145, baseType: !2999, size: 64)
!16829 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !16826, file: !2858, line: 146, baseType: !55, size: 64, offset: 64)
!16830 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !16826, file: !2858, line: 146, baseType: !55, size: 64, offset: 128)
!16831 = !DILocation(line: 1092, column: 19, scope: !16781)
!16832 = !DILocation(line: 1092, column: 28, scope: !16781)
!16833 = !DILocation(line: 1093, column: 16, scope: !16781)
!16834 = !DILocation(line: 1096, column: 23, scope: !16781)
!16835 = !DILocation(line: 1095, column: 19, scope: !16781)
!16836 = !DILocalVariable(name: "state", scope: !16781, file: !2858, line: 1098, type: !16837)
!16837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16838, size: 64)
!16838 = !DISubroutineType(types: !16839)
!16839 = !{!111, !16840, !16841}
!16840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16791, size: 64)
!16841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2976, size: 64)
!16842 = !DILocation(line: 1098, column: 13, scope: !16781)
!16843 = !DILocalVariable(name: "item", scope: !16781, file: !2858, line: 1099, type: !16841)
!16844 = !DILocation(line: 1099, column: 18, scope: !16781)
!16845 = !DILocation(line: 1101, column: 31, scope: !16846)
!16846 = distinct !DILexicalBlock(scope: !16781, file: !2858, line: 1101, column: 9)
!16847 = !DILocation(line: 1101, column: 43, scope: !16846)
!16848 = !DILocation(line: 1101, column: 10, scope: !16846)
!16849 = !DILocation(line: 1101, column: 9, scope: !16781)
!16850 = !DILocation(line: 1102, column: 9, scope: !16846)
!16851 = !DILocation(line: 1104, column: 5, scope: !16781)
!16852 = !DILocation(line: 1104, column: 12, scope: !16781)
!16853 = !DILocation(line: 1104, column: 18, scope: !16781)
!16854 = !DILocation(line: 1104, column: 38, scope: !16781)
!16855 = !DILocation(line: 1104, column: 21, scope: !16781)
!16856 = !DILocation(line: 1104, column: 52, scope: !16781)
!16857 = !DILocation(line: 1104, column: 55, scope: !16781)
!16858 = !DILocation(line: 1104, column: 61, scope: !16781)
!16859 = !DILocation(line: 1104, column: 66, scope: !16781)
!16860 = !DILocation(line: 0, scope: !16781)
!16861 = !DILocation(line: 1105, column: 17, scope: !16781)
!16862 = !DILocation(line: 1105, column: 32, scope: !16781)
!16863 = !DILocation(line: 1105, column: 15, scope: !16781)
!16864 = distinct !{!16864, !16851, !16865, !3413}
!16865 = !DILocation(line: 1105, column: 36, scope: !16781)
!16866 = !DILocation(line: 1107, column: 37, scope: !16781)
!16867 = !DILocation(line: 1107, column: 12, scope: !16781)
!16868 = !DILocation(line: 1107, column: 5, scope: !16781)
!16869 = !DILocation(line: 1108, column: 1, scope: !16781)
!16870 = distinct !DISubprogram(name: "parser_text", scope: !2858, file: !2858, line: 773, type: !16838, scopeLine: 774, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!16871 = !DILocalVariable(name: "parser", arg: 1, scope: !16870, file: !2858, line: 773, type: !16840)
!16872 = !DILocation(line: 773, column: 41, scope: !16870)
!16873 = !DILocalVariable(name: "item", arg: 2, scope: !16870, file: !2858, line: 773, type: !16841)
!16874 = !DILocation(line: 773, column: 62, scope: !16870)
!16875 = !DILocation(line: 775, column: 9, scope: !16876)
!16876 = distinct !DILexicalBlock(scope: !16870, file: !2858, line: 775, column: 9)
!16877 = !DILocation(line: 775, column: 15, scope: !16876)
!16878 = !DILocation(line: 775, column: 20, scope: !16876)
!16879 = !DILocation(line: 775, column: 9, scope: !16870)
!16880 = !DILocation(line: 776, column: 9, scope: !16876)
!16881 = !DILocation(line: 777, column: 9, scope: !16882)
!16882 = distinct !DILexicalBlock(scope: !16870, file: !2858, line: 777, column: 9)
!16883 = !DILocation(line: 777, column: 15, scope: !16882)
!16884 = !DILocation(line: 777, column: 20, scope: !16882)
!16885 = !DILocation(line: 777, column: 9, scope: !16870)
!16886 = !DILocation(line: 778, column: 13, scope: !16887)
!16887 = distinct !DILexicalBlock(scope: !16888, file: !2858, line: 778, column: 13)
!16888 = distinct !DILexicalBlock(scope: !16882, file: !2858, line: 777, column: 34)
!16889 = !DILocation(line: 778, column: 19, scope: !16887)
!16890 = !DILocation(line: 778, column: 25, scope: !16887)
!16891 = !DILocation(line: 778, column: 29, scope: !16887)
!16892 = !DILocation(line: 778, column: 13, scope: !16888)
!16893 = !DILocation(line: 779, column: 24, scope: !16894)
!16894 = distinct !DILexicalBlock(scope: !16887, file: !2858, line: 778, column: 35)
!16895 = !DILocation(line: 779, column: 75, scope: !16894)
!16896 = !DILocation(line: 779, column: 81, scope: !16894)
!16897 = !DILocation(line: 779, column: 87, scope: !16894)
!16898 = !DILocation(line: 779, column: 74, scope: !16894)
!16899 = !DILocation(line: 779, column: 63, scope: !16894)
!16900 = !DILocation(line: 779, column: 55, scope: !16894)
!16901 = !DILocation(line: 779, column: 13, scope: !16894)
!16902 = !DILocation(line: 780, column: 9, scope: !16894)
!16903 = !DILocalVariable(name: "buf", scope: !16904, file: !2858, line: 781, type: !2984)
!16904 = distinct !DILexicalBlock(scope: !16887, file: !2858, line: 780, column: 16)
!16905 = !DILocation(line: 781, column: 23, scope: !16904)
!16906 = !DILocation(line: 781, column: 50, scope: !16904)
!16907 = !DILocation(line: 781, column: 56, scope: !16904)
!16908 = !DILocation(line: 781, column: 62, scope: !16904)
!16909 = !DILocation(line: 781, column: 29, scope: !16904)
!16910 = !DILocation(line: 782, column: 18, scope: !16911)
!16911 = distinct !DILexicalBlock(scope: !16904, file: !2858, line: 782, column: 17)
!16912 = !DILocation(line: 782, column: 17, scope: !16904)
!16913 = !DILocation(line: 783, column: 35, scope: !16911)
!16914 = !DILocation(line: 783, column: 24, scope: !16911)
!16915 = !DILocation(line: 783, column: 17, scope: !16911)
!16916 = !DILocation(line: 784, column: 24, scope: !16904)
!16917 = !DILocation(line: 784, column: 29, scope: !16904)
!16918 = !DILocation(line: 784, column: 35, scope: !16904)
!16919 = !DILocation(line: 784, column: 41, scope: !16904)
!16920 = !DILocation(line: 784, column: 48, scope: !16904)
!16921 = !DILocation(line: 784, column: 54, scope: !16904)
!16922 = !DILocation(line: 784, column: 60, scope: !16904)
!16923 = !DILocation(line: 784, column: 13, scope: !16904)
!16924 = !DILocation(line: 785, column: 24, scope: !16904)
!16925 = !DILocation(line: 785, column: 50, scope: !16904)
!16926 = !DILocation(line: 785, column: 13, scope: !16904)
!16927 = !DILocation(line: 787, column: 38, scope: !16888)
!16928 = !DILocation(line: 787, column: 44, scope: !16888)
!16929 = !DILocation(line: 787, column: 50, scope: !16888)
!16930 = !DILocation(line: 787, column: 9, scope: !16888)
!16931 = !DILocation(line: 787, column: 17, scope: !16888)
!16932 = !DILocation(line: 787, column: 22, scope: !16888)
!16933 = !DILocation(line: 787, column: 35, scope: !16888)
!16934 = !DILocation(line: 788, column: 9, scope: !16888)
!16935 = !DILocation(line: 790, column: 9, scope: !16936)
!16936 = distinct !DILexicalBlock(scope: !16870, file: !2858, line: 790, column: 9)
!16937 = !DILocation(line: 790, column: 15, scope: !16936)
!16938 = !DILocation(line: 790, column: 20, scope: !16936)
!16939 = !DILocation(line: 790, column: 9, scope: !16870)
!16940 = !DILocation(line: 791, column: 20, scope: !16941)
!16941 = distinct !DILexicalBlock(scope: !16936, file: !2858, line: 790, column: 33)
!16942 = !DILocation(line: 791, column: 9, scope: !16941)
!16943 = !DILocation(line: 792, column: 9, scope: !16941)
!16944 = !DILocation(line: 795, column: 30, scope: !16870)
!16945 = !DILocation(line: 795, column: 12, scope: !16870)
!16946 = !DILocation(line: 795, column: 5, scope: !16870)
!16947 = !DILocation(line: 796, column: 1, scope: !16870)
!16948 = distinct !DISubprogram(name: "parser_init", scope: !2858, file: !2858, line: 1015, type: !16949, scopeLine: 1017, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!16949 = !DISubroutineType(types: !16950)
!16950 = !{!137, !16840, !15147, !205}
!16951 = !DILocalVariable(name: "parser", arg: 1, scope: !16948, file: !2858, line: 1015, type: !16840)
!16952 = !DILocation(line: 1015, column: 40, scope: !16948)
!16953 = !DILocalVariable(name: "descriptor", arg: 2, scope: !16948, file: !2858, line: 1015, type: !15147)
!16954 = !DILocation(line: 1015, column: 77, scope: !16948)
!16955 = !DILocalVariable(name: "string", arg: 3, scope: !16948, file: !2858, line: 1016, type: !205)
!16956 = !DILocation(line: 1016, column: 17, scope: !16948)
!16957 = !DILocalVariable(name: "chunks", scope: !16948, file: !2858, line: 1018, type: !2999)
!16958 = !DILocation(line: 1018, column: 19, scope: !16948)
!16959 = !DILocation(line: 1020, column: 21, scope: !16960)
!16960 = distinct !DILexicalBlock(scope: !16948, file: !2858, line: 1020, column: 9)
!16961 = !DILocation(line: 1020, column: 29, scope: !16960)
!16962 = !DILocation(line: 1020, column: 9, scope: !16960)
!16963 = !DILocation(line: 1020, column: 41, scope: !16960)
!16964 = !DILocation(line: 1020, column: 9, scope: !16948)
!16965 = !DILocation(line: 1021, column: 9, scope: !16960)
!16966 = !DILocation(line: 1023, column: 33, scope: !16948)
!16967 = !DILocation(line: 1023, column: 41, scope: !16948)
!16968 = !DILocation(line: 1023, column: 48, scope: !16948)
!16969 = !DILocation(line: 1023, column: 14, scope: !16948)
!16970 = !DILocation(line: 1023, column: 12, scope: !16948)
!16971 = !DILocation(line: 1024, column: 49, scope: !16948)
!16972 = !DILocation(line: 1024, column: 27, scope: !16948)
!16973 = !DILocation(line: 1024, column: 35, scope: !16948)
!16974 = !DILocation(line: 1024, column: 42, scope: !16948)
!16975 = !DILocation(line: 1024, column: 47, scope: !16948)
!16976 = !DILocation(line: 1024, column: 5, scope: !16948)
!16977 = !DILocation(line: 1024, column: 13, scope: !16948)
!16978 = !DILocation(line: 1024, column: 18, scope: !16948)
!16979 = !DILocation(line: 1024, column: 25, scope: !16948)
!16980 = !DILocation(line: 1025, column: 10, scope: !16981)
!16981 = distinct !DILexicalBlock(scope: !16948, file: !2858, line: 1025, column: 9)
!16982 = !DILocation(line: 1025, column: 9, scope: !16948)
!16983 = !DILocation(line: 1026, column: 20, scope: !16984)
!16984 = distinct !DILexicalBlock(scope: !16981, file: !2858, line: 1025, column: 18)
!16985 = !DILocation(line: 1026, column: 9, scope: !16984)
!16986 = !DILocation(line: 1027, column: 9, scope: !16984)
!16987 = !DILocation(line: 1030, column: 15, scope: !16948)
!16988 = !DILocation(line: 1030, column: 23, scope: !16948)
!16989 = !DILocation(line: 1030, column: 30, scope: !16948)
!16990 = !DILocation(line: 1030, column: 5, scope: !16948)
!16991 = !DILocation(line: 1031, column: 21, scope: !16948)
!16992 = !DILocation(line: 1031, column: 29, scope: !16948)
!16993 = !DILocation(line: 1031, column: 5, scope: !16948)
!16994 = !DILocation(line: 1033, column: 5, scope: !16948)
!16995 = !DILocation(line: 1034, column: 1, scope: !16948)
!16996 = distinct !DISubprogram(name: "lex_next", scope: !2858, file: !2858, line: 460, type: !16997, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!16997 = !DISubroutineType(types: !16998)
!16998 = !{!137, !16808, !16999}
!16999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16841, size: 64)
!17000 = !DILocalVariable(name: "lexer", arg: 1, scope: !16996, file: !2858, line: 460, type: !16808)
!17001 = !DILocation(line: 460, column: 36, scope: !16996)
!17002 = !DILocalVariable(name: "item", arg: 2, scope: !16996, file: !2858, line: 460, type: !16999)
!17003 = !DILocation(line: 460, column: 57, scope: !16996)
!17004 = !DILocation(line: 462, column: 5, scope: !16996)
!17005 = !DILocation(line: 462, column: 12, scope: !16996)
!17006 = !DILocation(line: 462, column: 19, scope: !16996)
!17007 = !DILocation(line: 463, column: 26, scope: !17008)
!17008 = distinct !DILexicalBlock(scope: !17009, file: !2858, line: 463, column: 13)
!17009 = distinct !DILexicalBlock(scope: !16996, file: !2858, line: 462, column: 26)
!17010 = !DILocation(line: 463, column: 33, scope: !17008)
!17011 = !DILocation(line: 463, column: 13, scope: !17008)
!17012 = !DILocation(line: 463, column: 13, scope: !17009)
!17013 = !DILocation(line: 464, column: 13, scope: !17008)
!17014 = !DILocation(line: 465, column: 24, scope: !17009)
!17015 = !DILocation(line: 465, column: 31, scope: !17009)
!17016 = !DILocation(line: 465, column: 37, scope: !17009)
!17017 = !DILocation(line: 465, column: 9, scope: !17009)
!17018 = !DILocation(line: 465, column: 16, scope: !17009)
!17019 = !DILocation(line: 465, column: 22, scope: !17009)
!17020 = distinct !{!17020, !17004, !17021, !3413}
!17021 = !DILocation(line: 466, column: 5, scope: !16996)
!17022 = !DILocation(line: 468, column: 25, scope: !16996)
!17023 = !DILocation(line: 468, column: 32, scope: !16996)
!17024 = !DILocation(line: 468, column: 12, scope: !16996)
!17025 = !DILocation(line: 468, column: 5, scope: !16996)
!17026 = !DILocation(line: 469, column: 1, scope: !16996)
!17027 = distinct !DISubprogram(name: "parser_shutdown", scope: !2858, file: !2858, line: 1036, type: !17028, scopeLine: 1037, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!17028 = !DISubroutineType(types: !17029)
!17029 = !{!137, !16840, !16841}
!17030 = !DILocalVariable(name: "parser", arg: 1, scope: !17027, file: !2858, line: 1036, type: !16840)
!17031 = !DILocation(line: 1036, column: 44, scope: !17027)
!17032 = !DILocalVariable(name: "item", arg: 2, scope: !17027, file: !2858, line: 1036, type: !16841)
!17033 = !DILocation(line: 1036, column: 65, scope: !17027)
!17034 = !DILocalVariable(name: "success", scope: !17027, file: !2858, line: 1038, type: !137)
!17035 = !DILocation(line: 1038, column: 10, scope: !17027)
!17036 = !DILocation(line: 1040, column: 9, scope: !17037)
!17037 = distinct !DILexicalBlock(scope: !17027, file: !2858, line: 1040, column: 9)
!17038 = !DILocation(line: 1040, column: 15, scope: !17037)
!17039 = !DILocation(line: 1040, column: 20, scope: !17037)
!17040 = !DILocation(line: 1040, column: 34, scope: !17037)
!17041 = !DILocation(line: 1040, column: 37, scope: !17037)
!17042 = !DILocation(line: 1040, column: 43, scope: !17037)
!17043 = !DILocation(line: 1040, column: 49, scope: !17037)
!17044 = !DILocation(line: 1040, column: 9, scope: !17027)
!17045 = !DILocation(line: 1041, column: 9, scope: !17046)
!17046 = distinct !DILexicalBlock(scope: !17037, file: !2858, line: 1040, column: 56)
!17047 = !DILocation(line: 1042, column: 22, scope: !17046)
!17048 = !DILocation(line: 1042, column: 28, scope: !17046)
!17049 = !DILocation(line: 1042, column: 34, scope: !17046)
!17050 = !DILocation(line: 1042, column: 9, scope: !17046)
!17051 = !DILocation(line: 1044, column: 17, scope: !17046)
!17052 = !DILocation(line: 1045, column: 5, scope: !17046)
!17053 = !DILocation(line: 1047, column: 22, scope: !17054)
!17054 = distinct !DILexicalBlock(scope: !17027, file: !2858, line: 1047, column: 9)
!17055 = !DILocation(line: 1047, column: 30, scope: !17054)
!17056 = !DILocation(line: 1047, column: 10, scope: !17054)
!17057 = !DILocation(line: 1047, column: 9, scope: !17027)
!17058 = !DILocalVariable(name: "stacked", scope: !17059, file: !2858, line: 1048, type: !2966)
!17059 = distinct !DILexicalBlock(scope: !17054, file: !2858, line: 1047, column: 38)
!17060 = !DILocation(line: 1048, column: 30, scope: !17059)
!17061 = !DILocalVariable(name: "stacked_next", scope: !17059, file: !2858, line: 1048, type: !2966)
!17062 = !DILocation(line: 1048, column: 40, scope: !17059)
!17063 = !DILocation(line: 1050, column: 9, scope: !17064)
!17064 = distinct !DILexicalBlock(scope: !17059, file: !2858, line: 1050, column: 9)
!17065 = !DILocation(line: 1050, column: 9, scope: !17066)
!17066 = distinct !DILexicalBlock(scope: !17064, file: !2858, line: 1050, column: 9)
!17067 = !DILocation(line: 1051, column: 13, scope: !17068)
!17068 = distinct !DILexicalBlock(scope: !17066, file: !2858, line: 1050, column: 74)
!17069 = !DILocation(line: 1053, column: 23, scope: !17068)
!17070 = !DILocation(line: 1053, column: 32, scope: !17068)
!17071 = !DILocation(line: 1053, column: 13, scope: !17068)
!17072 = !DILocation(line: 1054, column: 18, scope: !17068)
!17073 = !DILocation(line: 1054, column: 13, scope: !17068)
!17074 = !DILocation(line: 1055, column: 9, scope: !17068)
!17075 = distinct !{!17075, !17063, !17076, !3413}
!17076 = !DILocation(line: 1055, column: 9, scope: !17064)
!17077 = !DILocation(line: 1057, column: 17, scope: !17059)
!17078 = !DILocation(line: 1058, column: 5, scope: !17059)
!17079 = !DILocation(line: 1060, column: 16, scope: !17027)
!17080 = !DILocation(line: 1060, column: 5, scope: !17027)
!17081 = !DILocation(line: 1061, column: 9, scope: !17082)
!17082 = distinct !DILexicalBlock(scope: !17027, file: !2858, line: 1061, column: 9)
!17083 = !DILocation(line: 1061, column: 17, scope: !17082)
!17084 = !DILocation(line: 1061, column: 9, scope: !17027)
!17085 = !DILocation(line: 1062, column: 9, scope: !17086)
!17086 = distinct !DILexicalBlock(scope: !17082, file: !2858, line: 1061, column: 25)
!17087 = !DILocation(line: 1064, column: 9, scope: !17086)
!17088 = !DILocation(line: 1064, column: 16, scope: !17086)
!17089 = !DILocation(line: 1064, column: 24, scope: !17086)
!17090 = !DILocation(line: 1065, column: 24, scope: !17086)
!17091 = !DILocation(line: 1065, column: 13, scope: !17086)
!17092 = distinct !{!17092, !17087, !17093, !3413}
!17093 = !DILocation(line: 1065, column: 30, scope: !17086)
!17094 = !DILocation(line: 1067, column: 17, scope: !17086)
!17095 = !DILocation(line: 1068, column: 5, scope: !17086)
!17096 = !DILocation(line: 1070, column: 9, scope: !17097)
!17097 = distinct !DILexicalBlock(scope: !17027, file: !2858, line: 1070, column: 9)
!17098 = !DILocation(line: 1070, column: 17, scope: !17097)
!17099 = !DILocation(line: 1070, column: 23, scope: !17097)
!17100 = !DILocation(line: 1070, column: 9, scope: !17027)
!17101 = !DILocation(line: 1071, column: 9, scope: !17102)
!17102 = distinct !DILexicalBlock(scope: !17097, file: !2858, line: 1070, column: 39)
!17103 = !DILocation(line: 1072, column: 17, scope: !17102)
!17104 = !DILocation(line: 1073, column: 5, scope: !17102)
!17105 = !DILocation(line: 1074, column: 9, scope: !17106)
!17106 = distinct !DILexicalBlock(scope: !17027, file: !2858, line: 1074, column: 9)
!17107 = !DILocation(line: 1074, column: 17, scope: !17106)
!17108 = !DILocation(line: 1074, column: 23, scope: !17106)
!17109 = !DILocation(line: 1074, column: 9, scope: !17027)
!17110 = !DILocation(line: 1075, column: 9, scope: !17111)
!17111 = distinct !DILexicalBlock(scope: !17106, file: !2858, line: 1074, column: 38)
!17112 = !DILocation(line: 1076, column: 17, scope: !17111)
!17113 = !DILocation(line: 1077, column: 5, scope: !17111)
!17114 = !DILocation(line: 1079, column: 9, scope: !17115)
!17115 = distinct !DILexicalBlock(scope: !17027, file: !2858, line: 1079, column: 9)
!17116 = !DILocation(line: 1079, column: 9, scope: !17027)
!17117 = !DILocation(line: 1080, column: 41, scope: !17115)
!17118 = !DILocation(line: 1080, column: 19, scope: !17115)
!17119 = !DILocation(line: 1080, column: 17, scope: !17115)
!17120 = !DILocation(line: 1080, column: 9, scope: !17115)
!17121 = !DILocation(line: 1082, column: 10, scope: !17122)
!17122 = distinct !DILexicalBlock(scope: !17027, file: !2858, line: 1082, column: 9)
!17123 = !DILocation(line: 1082, column: 9, scope: !17027)
!17124 = !DILocation(line: 1084, column: 20, scope: !17125)
!17125 = distinct !DILexicalBlock(scope: !17122, file: !2858, line: 1082, column: 19)
!17126 = !DILocation(line: 1084, column: 9, scope: !17125)
!17127 = !DILocation(line: 1085, column: 5, scope: !17125)
!17128 = !DILocation(line: 1087, column: 12, scope: !17027)
!17129 = !DILocation(line: 1087, column: 5, scope: !17027)
!17130 = distinct !DISubprogram(name: "list_empty", scope: !659, file: !659, line: 364, type: !17131, scopeLine: 365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!17131 = !DISubroutineType(types: !17132)
!17132 = !{!137, !17133}
!17133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17134, size: 64)
!17134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16822)
!17135 = !DILocalVariable(name: "h", arg: 1, scope: !17130, file: !659, line: 364, type: !17133)
!17136 = !DILocation(line: 364, column: 55, scope: !17130)
!17137 = !DILocation(line: 366, column: 8, scope: !17130)
!17138 = !DILocation(line: 367, column: 9, scope: !17130)
!17139 = !DILocation(line: 367, column: 12, scope: !17130)
!17140 = !DILocation(line: 367, column: 14, scope: !17130)
!17141 = !DILocation(line: 367, column: 23, scope: !17130)
!17142 = !DILocation(line: 367, column: 26, scope: !17130)
!17143 = !DILocation(line: 367, column: 19, scope: !17130)
!17144 = !DILocation(line: 367, column: 2, scope: !17130)
!17145 = distinct !DISubprogram(name: "list_node_to_off_", scope: !659, file: !659, line: 716, type: !17146, scopeLine: 717, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!17146 = !DISubroutineType(types: !17147)
!17147 = !{!111, !2973, !55}
!17148 = !DILocalVariable(name: "node", arg: 1, scope: !17145, file: !659, line: 716, type: !2973)
!17149 = !DILocation(line: 716, column: 57, scope: !17145)
!17150 = !DILocalVariable(name: "off", arg: 2, scope: !17145, file: !659, line: 716, type: !55)
!17151 = !DILocation(line: 716, column: 70, scope: !17145)
!17152 = !DILocation(line: 718, column: 26, scope: !17145)
!17153 = !DILocation(line: 718, column: 33, scope: !17145)
!17154 = !DILocation(line: 718, column: 31, scope: !17145)
!17155 = !DILocation(line: 718, column: 2, scope: !17145)
!17156 = distinct !DISubprogram(name: "list_node_from_off_", scope: !659, file: !659, line: 720, type: !17157, scopeLine: 721, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!17157 = !DISubroutineType(types: !17158)
!17158 = !{!2973, !111, !55}
!17159 = !DILocalVariable(name: "ptr", arg: 1, scope: !17156, file: !659, line: 720, type: !111)
!17160 = !DILocation(line: 720, column: 59, scope: !17156)
!17161 = !DILocalVariable(name: "off", arg: 2, scope: !17156, file: !659, line: 720, type: !55)
!17162 = !DILocation(line: 720, column: 71, scope: !17156)
!17163 = !DILocation(line: 722, column: 38, scope: !17156)
!17164 = !DILocation(line: 722, column: 44, scope: !17156)
!17165 = !DILocation(line: 722, column: 42, scope: !17156)
!17166 = !DILocation(line: 722, column: 2, scope: !17156)
!17167 = distinct !DISubprogram(name: "list_del", scope: !659, file: !659, line: 384, type: !17168, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!17168 = !DISubroutineType(types: !17169)
!17169 = !{null, !2973}
!17170 = !DILocalVariable(name: "n", arg: 1, scope: !17167, file: !659, line: 384, type: !2973)
!17171 = !DILocation(line: 384, column: 47, scope: !17167)
!17172 = !DILocation(line: 386, column: 8, scope: !17167)
!17173 = !DILocation(line: 387, column: 18, scope: !17167)
!17174 = !DILocation(line: 387, column: 21, scope: !17167)
!17175 = !DILocation(line: 387, column: 2, scope: !17167)
!17176 = !DILocation(line: 387, column: 5, scope: !17167)
!17177 = !DILocation(line: 387, column: 11, scope: !17167)
!17178 = !DILocation(line: 387, column: 16, scope: !17167)
!17179 = !DILocation(line: 388, column: 18, scope: !17167)
!17180 = !DILocation(line: 388, column: 21, scope: !17167)
!17181 = !DILocation(line: 388, column: 2, scope: !17167)
!17182 = !DILocation(line: 388, column: 5, scope: !17167)
!17183 = !DILocation(line: 388, column: 11, scope: !17167)
!17184 = !DILocation(line: 388, column: 16, scope: !17167)
!17185 = !DILocation(line: 393, column: 1, scope: !17167)
!17186 = distinct !DISubprogram(name: "symtab_pop", scope: !2858, file: !2858, line: 232, type: !17187, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!17187 = !DISubroutineType(types: !17188)
!17188 = !{null, !16840}
!17189 = !DILocalVariable(name: "parser", arg: 1, scope: !17186, file: !2858, line: 232, type: !16840)
!17190 = !DILocation(line: 232, column: 27, scope: !17186)
!17191 = !DILocalVariable(name: "tab", scope: !17186, file: !2858, line: 234, type: !16796)
!17192 = !DILocation(line: 234, column: 20, scope: !17186)
!17193 = !DILocation(line: 234, column: 26, scope: !17186)
!17194 = !DILocation(line: 234, column: 34, scope: !17186)
!17195 = !DILocation(line: 236, column: 5, scope: !17196)
!17196 = distinct !DILexicalBlock(scope: !17197, file: !2858, line: 236, column: 5)
!17197 = distinct !DILexicalBlock(scope: !17186, file: !2858, line: 236, column: 5)
!17198 = !DILocation(line: 236, column: 5, scope: !17197)
!17199 = !DILocation(line: 238, column: 15, scope: !17186)
!17200 = !DILocation(line: 238, column: 20, scope: !17186)
!17201 = !DILocation(line: 238, column: 5, scope: !17186)
!17202 = !DILocation(line: 239, column: 22, scope: !17186)
!17203 = !DILocation(line: 239, column: 27, scope: !17186)
!17204 = !DILocation(line: 239, column: 5, scope: !17186)
!17205 = !DILocation(line: 239, column: 13, scope: !17186)
!17206 = !DILocation(line: 239, column: 20, scope: !17186)
!17207 = !DILocation(line: 240, column: 10, scope: !17186)
!17208 = !DILocation(line: 240, column: 5, scope: !17186)
!17209 = !DILocation(line: 241, column: 1, scope: !17186)
!17210 = distinct !DISubprogram(name: "post_process_template", scope: !2858, file: !2858, line: 923, type: !17211, scopeLine: 924, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!17211 = !DISubroutineType(types: !17212)
!17212 = !{!137, !16840}
!17213 = !DILocalVariable(name: "parser", arg: 1, scope: !17210, file: !2858, line: 923, type: !16840)
!17214 = !DILocation(line: 923, column: 38, scope: !17210)
!17215 = !DILocalVariable(name: "idx", scope: !17210, file: !2858, line: 925, type: !55)
!17216 = !DILocation(line: 925, column: 12, scope: !17210)
!17217 = !DILocalVariable(name: "prev_chunk", scope: !17210, file: !2858, line: 926, type: !2999)
!17218 = !DILocation(line: 926, column: 19, scope: !17210)
!17219 = !DILocalVariable(name: "resized", scope: !17210, file: !2858, line: 926, type: !2999)
!17220 = !DILocation(line: 926, column: 32, scope: !17210)
!17221 = !DILocation(line: 930, column: 14, scope: !17222)
!17222 = distinct !DILexicalBlock(scope: !17210, file: !2858, line: 930, column: 5)
!17223 = !DILocation(line: 930, column: 10, scope: !17222)
!17224 = !DILocation(line: 930, column: 19, scope: !17225)
!17225 = distinct !DILexicalBlock(scope: !17222, file: !2858, line: 930, column: 5)
!17226 = !DILocation(line: 930, column: 25, scope: !17225)
!17227 = !DILocation(line: 930, column: 33, scope: !17225)
!17228 = !DILocation(line: 930, column: 40, scope: !17225)
!17229 = !DILocation(line: 930, column: 23, scope: !17225)
!17230 = !DILocation(line: 930, column: 5, scope: !17222)
!17231 = !DILocalVariable(name: "chunk", scope: !17232, file: !2858, line: 931, type: !2999)
!17232 = distinct !DILexicalBlock(scope: !17225, file: !2858, line: 930, column: 53)
!17233 = !DILocation(line: 931, column: 23, scope: !17232)
!17234 = !DILocation(line: 931, column: 32, scope: !17232)
!17235 = !DILocation(line: 931, column: 40, scope: !17232)
!17236 = !DILocation(line: 931, column: 47, scope: !17232)
!17237 = !DILocation(line: 931, column: 52, scope: !17232)
!17238 = !DILocation(line: 933, column: 13, scope: !17239)
!17239 = distinct !DILexicalBlock(scope: !17232, file: !2858, line: 933, column: 13)
!17240 = !DILocation(line: 933, column: 20, scope: !17239)
!17241 = !DILocation(line: 933, column: 27, scope: !17239)
!17242 = !DILocation(line: 933, column: 13, scope: !17232)
!17243 = !DILocation(line: 934, column: 31, scope: !17244)
!17244 = distinct !DILexicalBlock(scope: !17245, file: !2858, line: 934, column: 13)
!17245 = distinct !DILexicalBlock(scope: !17239, file: !2858, line: 933, column: 60)
!17246 = !DILocation(line: 934, column: 29, scope: !17244)
!17247 = !DILocation(line: 934, column: 18, scope: !17244)
!17248 = !DILocation(line: 935, column: 21, scope: !17249)
!17249 = distinct !DILexicalBlock(scope: !17250, file: !2858, line: 935, column: 21)
!17250 = distinct !DILexicalBlock(scope: !17251, file: !2858, line: 934, column: 49)
!17251 = distinct !DILexicalBlock(scope: !17244, file: !2858, line: 934, column: 13)
!17252 = !DILocation(line: 935, column: 28, scope: !17249)
!17253 = !DILocation(line: 935, column: 35, scope: !17249)
!17254 = !DILocation(line: 935, column: 21, scope: !17250)
!17255 = !DILocation(line: 936, column: 21, scope: !17249)
!17256 = !DILocation(line: 937, column: 21, scope: !17257)
!17257 = distinct !DILexicalBlock(scope: !17250, file: !2858, line: 937, column: 21)
!17258 = !DILocation(line: 937, column: 28, scope: !17257)
!17259 = !DILocation(line: 937, column: 35, scope: !17257)
!17260 = !DILocation(line: 938, column: 29, scope: !17257)
!17261 = !DILocation(line: 938, column: 32, scope: !17257)
!17262 = !DILocation(line: 938, column: 39, scope: !17257)
!17263 = !DILocation(line: 938, column: 47, scope: !17257)
!17264 = !DILocation(line: 938, column: 59, scope: !17257)
!17265 = !DILocation(line: 938, column: 44, scope: !17257)
!17266 = !DILocation(line: 937, column: 21, scope: !17250)
!17267 = !DILocation(line: 939, column: 21, scope: !17257)
!17268 = !DILocation(line: 940, column: 13, scope: !17250)
!17269 = !DILocation(line: 934, column: 45, scope: !17251)
!17270 = !DILocation(line: 934, column: 13, scope: !17251)
!17271 = distinct !{!17271, !17272, !17273}
!17272 = !DILocation(line: 934, column: 13, scope: !17244)
!17273 = !DILocation(line: 940, column: 13, scope: !17244)
!17274 = !DILocalVariable(name: "cd", scope: !17245, file: !2858, line: 942, type: !15197)
!17275 = !DILocation(line: 942, column: 38, scope: !17245)
!17276 = !DILocation(line: 942, column: 43, scope: !17245)
!17277 = !DILocation(line: 943, column: 18, scope: !17278)
!17278 = distinct !DILexicalBlock(scope: !17245, file: !2858, line: 943, column: 17)
!17279 = !DILocation(line: 943, column: 17, scope: !17245)
!17280 = !DILocation(line: 944, column: 17, scope: !17278)
!17281 = !DILocation(line: 946, column: 30, scope: !17245)
!17282 = !DILocation(line: 946, column: 42, scope: !17245)
!17283 = !DILocation(line: 946, column: 13, scope: !17245)
!17284 = !DILocation(line: 946, column: 17, scope: !17245)
!17285 = !DILocation(line: 946, column: 28, scope: !17245)
!17286 = !DILocation(line: 947, column: 25, scope: !17245)
!17287 = !DILocation(line: 947, column: 13, scope: !17245)
!17288 = !DILocation(line: 947, column: 17, scope: !17245)
!17289 = !DILocation(line: 947, column: 23, scope: !17245)
!17290 = !DILocation(line: 948, column: 32, scope: !17245)
!17291 = !DILocation(line: 948, column: 13, scope: !17245)
!17292 = !DILocation(line: 948, column: 25, scope: !17245)
!17293 = !DILocation(line: 948, column: 30, scope: !17245)
!17294 = !DILocation(line: 949, column: 13, scope: !17245)
!17295 = !DILocation(line: 949, column: 25, scope: !17245)
!17296 = !DILocation(line: 949, column: 31, scope: !17245)
!17297 = !DILocation(line: 951, column: 19, scope: !17245)
!17298 = !DILocation(line: 951, column: 41, scope: !17245)
!17299 = !DILocation(line: 951, column: 17, scope: !17245)
!17300 = !DILocation(line: 952, column: 9, scope: !17245)
!17301 = !DILocation(line: 952, column: 20, scope: !17302)
!17302 = distinct !DILexicalBlock(scope: !17239, file: !2858, line: 952, column: 20)
!17303 = !DILocation(line: 952, column: 27, scope: !17302)
!17304 = !DILocation(line: 952, column: 34, scope: !17302)
!17305 = !DILocation(line: 952, column: 20, scope: !17239)
!17306 = !DILocalVariable(name: "flags", scope: !17307, file: !2858, line: 953, type: !2921)
!17307 = distinct !DILexicalBlock(scope: !17302, file: !2858, line: 952, column: 56)
!17308 = !DILocation(line: 953, column: 24, scope: !17307)
!17309 = !DILocation(line: 953, column: 32, scope: !17307)
!17310 = !DILocation(line: 953, column: 39, scope: !17307)
!17311 = !DILocation(line: 955, column: 31, scope: !17312)
!17312 = distinct !DILexicalBlock(scope: !17307, file: !2858, line: 955, column: 13)
!17313 = !DILocation(line: 955, column: 29, scope: !17312)
!17314 = !DILocation(line: 955, column: 18, scope: !17312)
!17315 = !DILocation(line: 956, column: 21, scope: !17316)
!17316 = distinct !DILexicalBlock(scope: !17317, file: !2858, line: 956, column: 21)
!17317 = distinct !DILexicalBlock(scope: !17318, file: !2858, line: 955, column: 49)
!17318 = distinct !DILexicalBlock(scope: !17312, file: !2858, line: 955, column: 13)
!17319 = !DILocation(line: 956, column: 28, scope: !17316)
!17320 = !DILocation(line: 956, column: 35, scope: !17316)
!17321 = !DILocation(line: 956, column: 21, scope: !17317)
!17322 = !DILocation(line: 957, column: 21, scope: !17316)
!17323 = !DILocation(line: 958, column: 21, scope: !17324)
!17324 = distinct !DILexicalBlock(scope: !17317, file: !2858, line: 958, column: 21)
!17325 = !DILocation(line: 958, column: 28, scope: !17324)
!17326 = !DILocation(line: 958, column: 35, scope: !17324)
!17327 = !DILocation(line: 958, column: 54, scope: !17324)
!17328 = !DILocation(line: 958, column: 57, scope: !17324)
!17329 = !DILocation(line: 958, column: 64, scope: !17324)
!17330 = !DILocation(line: 958, column: 72, scope: !17324)
!17331 = !DILocation(line: 958, column: 69, scope: !17324)
!17332 = !DILocation(line: 958, column: 21, scope: !17317)
!17333 = !DILocation(line: 959, column: 37, scope: !17334)
!17334 = distinct !DILexicalBlock(scope: !17324, file: !2858, line: 958, column: 84)
!17335 = !DILocation(line: 959, column: 21, scope: !17334)
!17336 = !DILocation(line: 959, column: 28, scope: !17334)
!17337 = !DILocation(line: 959, column: 34, scope: !17334)
!17338 = !DILocation(line: 960, column: 21, scope: !17334)
!17339 = !DILocation(line: 962, column: 13, scope: !17317)
!17340 = !DILocation(line: 955, column: 45, scope: !17318)
!17341 = !DILocation(line: 955, column: 13, scope: !17318)
!17342 = distinct !{!17342, !17343, !17344}
!17343 = !DILocation(line: 955, column: 13, scope: !17312)
!17344 = !DILocation(line: 962, column: 13, scope: !17312)
!17345 = !DILocalVariable(name: "cd", scope: !17307, file: !2858, line: 964, type: !15197)
!17346 = !DILocation(line: 964, column: 38, scope: !17307)
!17347 = !DILocation(line: 964, column: 43, scope: !17307)
!17348 = !DILocation(line: 965, column: 18, scope: !17349)
!17349 = distinct !DILexicalBlock(scope: !17307, file: !2858, line: 965, column: 17)
!17350 = !DILocation(line: 965, column: 17, scope: !17307)
!17351 = !DILocation(line: 966, column: 17, scope: !17349)
!17352 = !DILocation(line: 968, column: 30, scope: !17307)
!17353 = !DILocation(line: 968, column: 42, scope: !17307)
!17354 = !DILocation(line: 968, column: 13, scope: !17307)
!17355 = !DILocation(line: 968, column: 17, scope: !17307)
!17356 = !DILocation(line: 968, column: 28, scope: !17307)
!17357 = !DILocation(line: 969, column: 32, scope: !17307)
!17358 = !DILocation(line: 969, column: 13, scope: !17307)
!17359 = !DILocation(line: 969, column: 25, scope: !17307)
!17360 = !DILocation(line: 969, column: 30, scope: !17307)
!17361 = !DILocation(line: 970, column: 13, scope: !17307)
!17362 = !DILocation(line: 970, column: 25, scope: !17307)
!17363 = !DILocation(line: 970, column: 31, scope: !17307)
!17364 = !DILocation(line: 972, column: 17, scope: !17365)
!17365 = distinct !DILexicalBlock(scope: !17307, file: !2858, line: 972, column: 17)
!17366 = !DILocation(line: 972, column: 24, scope: !17365)
!17367 = !DILocation(line: 972, column: 31, scope: !17365)
!17368 = !DILocation(line: 972, column: 17, scope: !17307)
!17369 = !DILocation(line: 973, column: 29, scope: !17365)
!17370 = !DILocation(line: 973, column: 17, scope: !17365)
!17371 = !DILocation(line: 973, column: 21, scope: !17365)
!17372 = !DILocation(line: 973, column: 27, scope: !17365)
!17373 = !DILocation(line: 975, column: 29, scope: !17365)
!17374 = !DILocation(line: 975, column: 35, scope: !17365)
!17375 = !DILocation(line: 975, column: 17, scope: !17365)
!17376 = !DILocation(line: 975, column: 21, scope: !17365)
!17377 = !DILocation(line: 975, column: 27, scope: !17365)
!17378 = !DILocation(line: 977, column: 19, scope: !17307)
!17379 = !DILocation(line: 977, column: 41, scope: !17307)
!17380 = !DILocation(line: 977, column: 17, scope: !17307)
!17381 = !DILocation(line: 978, column: 9, scope: !17307)
!17382 = !DILocation(line: 978, column: 20, scope: !17383)
!17383 = distinct !DILexicalBlock(scope: !17302, file: !2858, line: 978, column: 20)
!17384 = !DILocation(line: 978, column: 27, scope: !17383)
!17385 = !DILocation(line: 978, column: 34, scope: !17383)
!17386 = !DILocation(line: 978, column: 20, scope: !17302)
!17387 = !DILocalVariable(name: "descriptor", scope: !17388, file: !2858, line: 979, type: !15134)
!17388 = distinct !DILexicalBlock(scope: !17383, file: !2858, line: 978, column: 54)
!17389 = !DILocation(line: 979, column: 36, scope: !17388)
!17390 = !DILocation(line: 979, column: 49, scope: !17388)
!17391 = !DILocation(line: 979, column: 56, scope: !17388)
!17392 = !DILocalVariable(name: "escape", scope: !17388, file: !2858, line: 980, type: !137)
!17393 = !DILocation(line: 980, column: 18, scope: !17388)
!17394 = !DILocation(line: 980, column: 27, scope: !17388)
!17395 = !DILocation(line: 980, column: 34, scope: !17388)
!17396 = !DILocation(line: 980, column: 40, scope: !17388)
!17397 = !DILocation(line: 982, column: 17, scope: !17398)
!17398 = distinct !DILexicalBlock(scope: !17388, file: !2858, line: 982, column: 17)
!17399 = !DILocation(line: 982, column: 29, scope: !17398)
!17400 = !DILocation(line: 982, column: 46, scope: !17398)
!17401 = !DILocation(line: 982, column: 17, scope: !17388)
!17402 = !DILocation(line: 983, column: 21, scope: !17403)
!17403 = distinct !DILexicalBlock(scope: !17404, file: !2858, line: 983, column: 21)
!17404 = distinct !DILexicalBlock(scope: !17398, file: !2858, line: 982, column: 76)
!17405 = !DILocation(line: 983, column: 21, scope: !17404)
!17406 = !DILocation(line: 984, column: 21, scope: !17403)
!17407 = !DILocation(line: 984, column: 28, scope: !17403)
!17408 = !DILocation(line: 984, column: 35, scope: !17403)
!17409 = !DILocation(line: 986, column: 21, scope: !17403)
!17410 = !DILocation(line: 986, column: 28, scope: !17403)
!17411 = !DILocation(line: 986, column: 35, scope: !17403)
!17412 = !DILocation(line: 987, column: 50, scope: !17404)
!17413 = !DILocation(line: 987, column: 62, scope: !17404)
!17414 = !DILocation(line: 987, column: 31, scope: !17404)
!17415 = !DILocation(line: 987, column: 17, scope: !17404)
!17416 = !DILocation(line: 987, column: 24, scope: !17404)
!17417 = !DILocation(line: 987, column: 29, scope: !17404)
!17418 = !DILocation(line: 988, column: 13, scope: !17404)
!17419 = !DILocation(line: 988, column: 24, scope: !17420)
!17420 = distinct !DILexicalBlock(scope: !17398, file: !2858, line: 988, column: 24)
!17421 = !DILocation(line: 988, column: 24, scope: !17398)
!17422 = !DILocation(line: 989, column: 17, scope: !17423)
!17423 = distinct !DILexicalBlock(scope: !17420, file: !2858, line: 988, column: 32)
!17424 = !DILocation(line: 990, column: 17, scope: !17423)
!17425 = !DILocation(line: 991, column: 25, scope: !17426)
!17426 = distinct !DILexicalBlock(scope: !17420, file: !2858, line: 991, column: 24)
!17427 = !DILocation(line: 991, column: 37, scope: !17426)
!17428 = !DILocation(line: 991, column: 24, scope: !17420)
!17429 = !DILocation(line: 992, column: 17, scope: !17430)
!17430 = distinct !DILexicalBlock(scope: !17426, file: !2858, line: 991, column: 55)
!17431 = !DILocation(line: 993, column: 17, scope: !17430)
!17432 = !DILocation(line: 995, column: 9, scope: !17388)
!17433 = !DILocation(line: 995, column: 20, scope: !17434)
!17434 = distinct !DILexicalBlock(scope: !17383, file: !2858, line: 995, column: 20)
!17435 = !DILocation(line: 995, column: 27, scope: !17434)
!17436 = !DILocation(line: 995, column: 34, scope: !17434)
!17437 = !DILocation(line: 995, column: 20, scope: !17383)
!17438 = !DILocation(line: 996, column: 13, scope: !17439)
!17439 = distinct !DILexicalBlock(scope: !17434, file: !2858, line: 995, column: 50)
!17440 = !DILocation(line: 998, column: 5, scope: !17232)
!17441 = !DILocation(line: 930, column: 49, scope: !17225)
!17442 = !DILocation(line: 930, column: 5, scope: !17225)
!17443 = distinct !{!17443, !17230, !17444, !3413}
!17444 = !DILocation(line: 998, column: 5, scope: !17222)
!17445 = !DILocation(line: 1000, column: 9, scope: !17446)
!17446 = distinct !DILexicalBlock(scope: !17210, file: !2858, line: 1000, column: 9)
!17447 = !DILocation(line: 1000, column: 17, scope: !17446)
!17448 = !DILocation(line: 1000, column: 24, scope: !17446)
!17449 = !DILocation(line: 1000, column: 36, scope: !17446)
!17450 = !DILocation(line: 1000, column: 44, scope: !17446)
!17451 = !DILocation(line: 1000, column: 51, scope: !17446)
!17452 = !DILocation(line: 1000, column: 33, scope: !17446)
!17453 = !DILocation(line: 1000, column: 9, scope: !17210)
!17454 = !DILocation(line: 1001, column: 9, scope: !17455)
!17455 = distinct !DILexicalBlock(scope: !17446, file: !2858, line: 1000, column: 57)
!17456 = !DILocation(line: 1003, column: 32, scope: !17455)
!17457 = !DILocation(line: 1003, column: 40, scope: !17455)
!17458 = !DILocation(line: 1003, column: 47, scope: !17455)
!17459 = !DILocation(line: 1003, column: 53, scope: !17455)
!17460 = !DILocation(line: 1003, column: 61, scope: !17455)
!17461 = !DILocation(line: 1003, column: 68, scope: !17455)
!17462 = !DILocation(line: 1003, column: 19, scope: !17455)
!17463 = !DILocation(line: 1003, column: 17, scope: !17455)
!17464 = !DILocation(line: 1004, column: 13, scope: !17465)
!17465 = distinct !DILexicalBlock(scope: !17455, file: !2858, line: 1004, column: 13)
!17466 = !DILocation(line: 1004, column: 13, scope: !17455)
!17467 = !DILocation(line: 1005, column: 35, scope: !17465)
!17468 = !DILocation(line: 1005, column: 13, scope: !17465)
!17469 = !DILocation(line: 1005, column: 21, scope: !17465)
!17470 = !DILocation(line: 1005, column: 28, scope: !17465)
!17471 = !DILocation(line: 1005, column: 33, scope: !17465)
!17472 = !DILocation(line: 1006, column: 5, scope: !17455)
!17473 = !DILocation(line: 1008, column: 27, scope: !17210)
!17474 = !DILocation(line: 1008, column: 35, scope: !17210)
!17475 = !DILocation(line: 1008, column: 42, scope: !17210)
!17476 = !DILocation(line: 1008, column: 5, scope: !17210)
!17477 = !DILocation(line: 1008, column: 13, scope: !17210)
!17478 = !DILocation(line: 1008, column: 18, scope: !17210)
!17479 = !DILocation(line: 1008, column: 25, scope: !17210)
!17480 = !DILocation(line: 1010, column: 5, scope: !17210)
!17481 = !DILocation(line: 1013, column: 1, scope: !17210)
!17482 = distinct !DISubprogram(name: "emit_chunk", scope: !2858, file: !2858, line: 510, type: !17483, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!17483 = !DISubroutineType(types: !17484)
!17484 = !{null, !16840, !2908, !2921, !111}
!17485 = !DILocalVariable(name: "parser", arg: 1, scope: !17482, file: !2858, line: 510, type: !16840)
!17486 = !DILocation(line: 510, column: 39, scope: !17482)
!17487 = !DILocalVariable(name: "action", arg: 2, scope: !17482, file: !2858, line: 510, type: !2908)
!17488 = !DILocation(line: 510, column: 59, scope: !17482)
!17489 = !DILocalVariable(name: "flags", arg: 3, scope: !17482, file: !2858, line: 511, type: !2921)
!17490 = !DILocation(line: 511, column: 20, scope: !17482)
!17491 = !DILocalVariable(name: "data", arg: 4, scope: !17482, file: !2858, line: 511, type: !111)
!17492 = !DILocation(line: 511, column: 33, scope: !17482)
!17493 = !DILocalVariable(name: "chunk", scope: !17482, file: !2858, line: 513, type: !2999)
!17494 = !DILocation(line: 513, column: 19, scope: !17482)
!17495 = !DILocation(line: 515, column: 9, scope: !17496)
!17496 = distinct !DILexicalBlock(scope: !17482, file: !2858, line: 515, column: 9)
!17497 = !DILocation(line: 515, column: 17, scope: !17496)
!17498 = !DILocation(line: 515, column: 24, scope: !17496)
!17499 = !DILocation(line: 515, column: 32, scope: !17496)
!17500 = !DILocation(line: 515, column: 40, scope: !17496)
!17501 = !DILocation(line: 515, column: 47, scope: !17496)
!17502 = !DILocation(line: 515, column: 29, scope: !17496)
!17503 = !DILocation(line: 515, column: 9, scope: !17482)
!17504 = !DILocation(line: 516, column: 9, scope: !17505)
!17505 = distinct !DILexicalBlock(scope: !17496, file: !2858, line: 515, column: 57)
!17506 = !DILocation(line: 516, column: 17, scope: !17505)
!17507 = !DILocation(line: 516, column: 24, scope: !17505)
!17508 = !DILocation(line: 516, column: 33, scope: !17505)
!17509 = !DILocation(line: 518, column: 30, scope: !17505)
!17510 = !DILocation(line: 518, column: 38, scope: !17505)
!17511 = !DILocation(line: 518, column: 45, scope: !17505)
!17512 = !DILocation(line: 519, column: 13, scope: !17505)
!17513 = !DILocation(line: 519, column: 21, scope: !17505)
!17514 = !DILocation(line: 519, column: 28, scope: !17505)
!17515 = !DILocation(line: 518, column: 17, scope: !17505)
!17516 = !DILocation(line: 518, column: 15, scope: !17505)
!17517 = !DILocation(line: 520, column: 14, scope: !17518)
!17518 = distinct !DILexicalBlock(scope: !17505, file: !2858, line: 520, column: 13)
!17519 = !DILocation(line: 520, column: 13, scope: !17505)
!17520 = !DILocation(line: 521, column: 13, scope: !17518)
!17521 = !DILocation(line: 523, column: 53, scope: !17505)
!17522 = !DILocation(line: 523, column: 31, scope: !17505)
!17523 = !DILocation(line: 523, column: 39, scope: !17505)
!17524 = !DILocation(line: 523, column: 46, scope: !17505)
!17525 = !DILocation(line: 523, column: 51, scope: !17505)
!17526 = !DILocation(line: 523, column: 9, scope: !17505)
!17527 = !DILocation(line: 523, column: 17, scope: !17505)
!17528 = !DILocation(line: 523, column: 22, scope: !17505)
!17529 = !DILocation(line: 523, column: 29, scope: !17505)
!17530 = !DILocation(line: 524, column: 5, scope: !17505)
!17531 = !DILocation(line: 526, column: 14, scope: !17482)
!17532 = !DILocation(line: 526, column: 22, scope: !17482)
!17533 = !DILocation(line: 526, column: 29, scope: !17482)
!17534 = !DILocation(line: 526, column: 34, scope: !17482)
!17535 = !DILocation(line: 526, column: 42, scope: !17482)
!17536 = !DILocation(line: 526, column: 49, scope: !17482)
!17537 = !DILocation(line: 526, column: 53, scope: !17482)
!17538 = !DILocation(line: 526, column: 11, scope: !17482)
!17539 = !DILocation(line: 527, column: 21, scope: !17482)
!17540 = !DILocation(line: 527, column: 5, scope: !17482)
!17541 = !DILocation(line: 527, column: 12, scope: !17482)
!17542 = !DILocation(line: 527, column: 19, scope: !17482)
!17543 = !DILocation(line: 528, column: 20, scope: !17482)
!17544 = !DILocation(line: 528, column: 5, scope: !17482)
!17545 = !DILocation(line: 528, column: 12, scope: !17482)
!17546 = !DILocation(line: 528, column: 18, scope: !17482)
!17547 = !DILocation(line: 529, column: 19, scope: !17482)
!17548 = !DILocation(line: 529, column: 5, scope: !17482)
!17549 = !DILocation(line: 529, column: 12, scope: !17482)
!17550 = !DILocation(line: 529, column: 17, scope: !17482)
!17551 = !DILocation(line: 530, column: 1, scope: !17482)
!17552 = distinct !DISubprogram(name: "consume_item", scope: !2858, file: !2858, line: 252, type: !16997, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!17553 = !DILocalVariable(name: "lexer", arg: 1, scope: !17552, file: !2858, line: 252, type: !16808)
!17554 = !DILocation(line: 252, column: 40, scope: !17552)
!17555 = !DILocalVariable(name: "item", arg: 2, scope: !17552, file: !2858, line: 252, type: !16999)
!17556 = !DILocation(line: 252, column: 61, scope: !17552)
!17557 = !DILocation(line: 254, column: 10, scope: !17558)
!17558 = distinct !DILexicalBlock(scope: !17552, file: !2858, line: 254, column: 9)
!17559 = !DILocation(line: 254, column: 17, scope: !17558)
!17560 = !DILocation(line: 254, column: 29, scope: !17558)
!17561 = !DILocation(line: 254, column: 9, scope: !17552)
!17562 = !DILocation(line: 255, column: 9, scope: !17558)
!17563 = !DILocation(line: 257, column: 14, scope: !17552)
!17564 = !DILocation(line: 257, column: 21, scope: !17552)
!17565 = !DILocation(line: 257, column: 33, scope: !17552)
!17566 = !DILocation(line: 257, column: 39, scope: !17552)
!17567 = !DILocation(line: 257, column: 46, scope: !17552)
!17568 = !DILocation(line: 257, column: 58, scope: !17552)
!17569 = !DILocation(line: 257, column: 6, scope: !17552)
!17570 = !DILocation(line: 257, column: 11, scope: !17552)
!17571 = !DILocation(line: 258, column: 33, scope: !17552)
!17572 = !DILocation(line: 258, column: 40, scope: !17552)
!17573 = !DILocation(line: 258, column: 52, scope: !17552)
!17574 = !DILocation(line: 258, column: 58, scope: !17552)
!17575 = !DILocation(line: 258, column: 63, scope: !17552)
!17576 = !DILocation(line: 258, column: 5, scope: !17552)
!17577 = !DILocation(line: 258, column: 12, scope: !17552)
!17578 = !DILocation(line: 258, column: 24, scope: !17552)
!17579 = !DILocation(line: 258, column: 30, scope: !17552)
!17580 = !DILocation(line: 259, column: 5, scope: !17552)
!17581 = !DILocation(line: 259, column: 12, scope: !17552)
!17582 = !DILocation(line: 259, column: 24, scope: !17552)
!17583 = !DILocation(line: 259, column: 34, scope: !17552)
!17584 = !DILocation(line: 261, column: 5, scope: !17552)
!17585 = !DILocation(line: 262, column: 1, scope: !17552)
!17586 = distinct !DISubprogram(name: "symtab_push", scope: !2858, file: !2858, line: 205, type: !17587, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!17587 = !DISubroutineType(types: !17588)
!17588 = !{!34, !16840, !15147}
!17589 = !DILocalVariable(name: "parser", arg: 1, scope: !17586, file: !2858, line: 205, type: !16840)
!17590 = !DILocation(line: 205, column: 28, scope: !17586)
!17591 = !DILocalVariable(name: "descriptor", arg: 2, scope: !17586, file: !2858, line: 205, type: !15147)
!17592 = !DILocation(line: 205, column: 65, scope: !17586)
!17593 = !DILocalVariable(name: "tab", scope: !17586, file: !2858, line: 207, type: !16796)
!17594 = !DILocation(line: 207, column: 20, scope: !17586)
!17595 = !DILocation(line: 209, column: 10, scope: !17596)
!17596 = distinct !DILexicalBlock(scope: !17586, file: !2858, line: 209, column: 9)
!17597 = !DILocation(line: 209, column: 9, scope: !17586)
!17598 = !DILocation(line: 210, column: 9, scope: !17596)
!17599 = !DILocation(line: 212, column: 11, scope: !17586)
!17600 = !DILocation(line: 212, column: 9, scope: !17586)
!17601 = !DILocation(line: 213, column: 10, scope: !17602)
!17602 = distinct !DILexicalBlock(scope: !17586, file: !2858, line: 213, column: 9)
!17603 = !DILocation(line: 213, column: 9, scope: !17586)
!17604 = !DILocation(line: 214, column: 17, scope: !17602)
!17605 = !DILocation(line: 214, column: 16, scope: !17602)
!17606 = !DILocation(line: 214, column: 9, scope: !17602)
!17607 = !DILocation(line: 216, column: 17, scope: !17586)
!17608 = !DILocation(line: 216, column: 5, scope: !17586)
!17609 = !DILocation(line: 216, column: 10, scope: !17586)
!17610 = !DILocation(line: 216, column: 15, scope: !17586)
!17611 = !DILocation(line: 217, column: 10, scope: !17612)
!17612 = distinct !DILexicalBlock(scope: !17586, file: !2858, line: 217, column: 9)
!17613 = !DILocation(line: 217, column: 15, scope: !17612)
!17614 = !DILocation(line: 217, column: 9, scope: !17586)
!17615 = !DILocation(line: 218, column: 14, scope: !17616)
!17616 = distinct !DILexicalBlock(scope: !17612, file: !2858, line: 217, column: 21)
!17617 = !DILocation(line: 218, column: 9, scope: !17616)
!17618 = !DILocation(line: 219, column: 9, scope: !17616)
!17619 = !DILocation(line: 222, column: 17, scope: !17586)
!17620 = !DILocation(line: 222, column: 25, scope: !17586)
!17621 = !DILocation(line: 222, column: 5, scope: !17586)
!17622 = !DILocation(line: 222, column: 10, scope: !17586)
!17623 = !DILocation(line: 222, column: 15, scope: !17586)
!17624 = !DILocation(line: 223, column: 22, scope: !17586)
!17625 = !DILocation(line: 223, column: 5, scope: !17586)
!17626 = !DILocation(line: 223, column: 13, scope: !17586)
!17627 = !DILocation(line: 223, column: 20, scope: !17586)
!17628 = !DILocation(line: 225, column: 5, scope: !17586)
!17629 = !DILocation(line: 225, column: 12, scope: !17630)
!17630 = distinct !DILexicalBlock(scope: !17631, file: !2858, line: 225, column: 5)
!17631 = distinct !DILexicalBlock(scope: !17586, file: !2858, line: 225, column: 5)
!17632 = !DILocation(line: 225, column: 24, scope: !17630)
!17633 = !DILocation(line: 225, column: 5, scope: !17631)
!17634 = !DILocation(line: 226, column: 18, scope: !17630)
!17635 = !DILocation(line: 226, column: 26, scope: !17630)
!17636 = !DILocation(line: 226, column: 34, scope: !17630)
!17637 = !DILocation(line: 226, column: 40, scope: !17630)
!17638 = !DILocation(line: 226, column: 52, scope: !17630)
!17639 = !DILocation(line: 226, column: 58, scope: !17630)
!17640 = !DILocation(line: 226, column: 9, scope: !17630)
!17641 = !DILocation(line: 225, column: 40, scope: !17630)
!17642 = !DILocation(line: 225, column: 5, scope: !17630)
!17643 = distinct !{!17643, !17633, !17644, !3413}
!17644 = !DILocation(line: 226, column: 68, scope: !17631)
!17645 = !DILocation(line: 228, column: 5, scope: !17586)
!17646 = !DILocation(line: 229, column: 1, scope: !17586)
!17647 = distinct !DISubprogram(name: "lex_init", scope: !2858, file: !2858, line: 471, type: !17648, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!17648 = !DISubroutineType(types: !17649)
!17649 = !{null, !16808, !205}
!17650 = !DILocalVariable(name: "lexer", arg: 1, scope: !17647, file: !2858, line: 471, type: !16808)
!17651 = !DILocation(line: 471, column: 36, scope: !17647)
!17652 = !DILocalVariable(name: "input", arg: 2, scope: !17647, file: !2858, line: 471, type: !205)
!17653 = !DILocation(line: 471, column: 55, scope: !17647)
!17654 = !DILocation(line: 473, column: 5, scope: !17647)
!17655 = !DILocation(line: 473, column: 12, scope: !17647)
!17656 = !DILocation(line: 473, column: 18, scope: !17647)
!17657 = !DILocation(line: 474, column: 33, scope: !17647)
!17658 = !DILocation(line: 474, column: 18, scope: !17647)
!17659 = !DILocation(line: 474, column: 25, scope: !17647)
!17660 = !DILocation(line: 474, column: 31, scope: !17647)
!17661 = !DILocation(line: 474, column: 5, scope: !17647)
!17662 = !DILocation(line: 474, column: 12, scope: !17647)
!17663 = !DILocation(line: 474, column: 16, scope: !17647)
!17664 = !DILocation(line: 475, column: 28, scope: !17647)
!17665 = !DILocation(line: 475, column: 18, scope: !17647)
!17666 = !DILocation(line: 475, column: 5, scope: !17647)
!17667 = !DILocation(line: 475, column: 12, scope: !17647)
!17668 = !DILocation(line: 475, column: 16, scope: !17647)
!17669 = !DILocation(line: 476, column: 1, scope: !17647)
!17670 = distinct !DISubprogram(name: "list_head_init", scope: !659, file: !659, line: 309, type: !17671, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!17671 = !DISubroutineType(types: !17672)
!17672 = !{null, !17673}
!17673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16822, size: 64)
!17674 = !DILocalVariable(name: "h", arg: 1, scope: !17670, file: !659, line: 309, type: !17673)
!17675 = !DILocation(line: 309, column: 53, scope: !17670)
!17676 = !DILocation(line: 311, column: 27, scope: !17670)
!17677 = !DILocation(line: 311, column: 30, scope: !17670)
!17678 = !DILocation(line: 311, column: 14, scope: !17670)
!17679 = !DILocation(line: 311, column: 17, scope: !17670)
!17680 = !DILocation(line: 311, column: 19, scope: !17670)
!17681 = !DILocation(line: 311, column: 24, scope: !17670)
!17682 = !DILocation(line: 311, column: 2, scope: !17670)
!17683 = !DILocation(line: 311, column: 5, scope: !17670)
!17684 = !DILocation(line: 311, column: 7, scope: !17670)
!17685 = !DILocation(line: 311, column: 12, scope: !17670)
!17686 = !DILocation(line: 312, column: 1, scope: !17670)
!17687 = distinct !DISubprogram(name: "lex_text", scope: !2858, file: !2858, line: 443, type: !16806, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!17688 = !DILocalVariable(name: "lexer", arg: 1, scope: !17687, file: !2858, line: 443, type: !16808)
!17689 = !DILocation(line: 443, column: 37, scope: !17687)
!17690 = !DILocation(line: 445, column: 5, scope: !17687)
!17691 = !DILocation(line: 446, column: 22, scope: !17692)
!17692 = distinct !DILexicalBlock(scope: !17693, file: !2858, line: 446, column: 13)
!17693 = distinct !DILexicalBlock(scope: !17687, file: !2858, line: 445, column: 8)
!17694 = !DILocation(line: 446, column: 29, scope: !17692)
!17695 = !DILocation(line: 446, column: 45, scope: !17692)
!17696 = !DILocation(line: 446, column: 14, scope: !17692)
!17697 = !DILocation(line: 446, column: 13, scope: !17693)
!17698 = !DILocation(line: 447, column: 17, scope: !17699)
!17699 = distinct !DILexicalBlock(scope: !17700, file: !2858, line: 447, column: 17)
!17700 = distinct !DILexicalBlock(scope: !17692, file: !2858, line: 446, column: 65)
!17701 = !DILocation(line: 447, column: 24, scope: !17699)
!17702 = !DILocation(line: 447, column: 30, scope: !17699)
!17703 = !DILocation(line: 447, column: 37, scope: !17699)
!17704 = !DILocation(line: 447, column: 28, scope: !17699)
!17705 = !DILocation(line: 447, column: 17, scope: !17700)
!17706 = !DILocation(line: 448, column: 22, scope: !17699)
!17707 = !DILocation(line: 448, column: 17, scope: !17699)
!17708 = !DILocation(line: 449, column: 13, scope: !17700)
!17709 = !DILocation(line: 451, column: 22, scope: !17710)
!17710 = distinct !DILexicalBlock(scope: !17693, file: !2858, line: 451, column: 13)
!17711 = !DILocation(line: 451, column: 29, scope: !17710)
!17712 = !DILocation(line: 451, column: 46, scope: !17710)
!17713 = !DILocation(line: 451, column: 14, scope: !17710)
!17714 = !DILocation(line: 451, column: 13, scope: !17693)
!17715 = !DILocation(line: 452, column: 30, scope: !17710)
!17716 = !DILocation(line: 452, column: 20, scope: !17710)
!17717 = !DILocation(line: 452, column: 13, scope: !17710)
!17718 = !DILocation(line: 453, column: 5, scope: !17693)
!17719 = !DILocation(line: 453, column: 19, scope: !17687)
!17720 = !DILocation(line: 453, column: 14, scope: !17687)
!17721 = !DILocation(line: 453, column: 26, scope: !17687)
!17722 = distinct !{!17722, !17690, !17723, !3413}
!17723 = !DILocation(line: 453, column: 32, scope: !17687)
!17724 = !DILocation(line: 454, column: 9, scope: !17725)
!17725 = distinct !DILexicalBlock(scope: !17687, file: !2858, line: 454, column: 9)
!17726 = !DILocation(line: 454, column: 16, scope: !17725)
!17727 = !DILocation(line: 454, column: 22, scope: !17725)
!17728 = !DILocation(line: 454, column: 29, scope: !17725)
!17729 = !DILocation(line: 454, column: 20, scope: !17725)
!17730 = !DILocation(line: 454, column: 9, scope: !17687)
!17731 = !DILocation(line: 455, column: 14, scope: !17725)
!17732 = !DILocation(line: 455, column: 9, scope: !17725)
!17733 = !DILocation(line: 456, column: 10, scope: !17687)
!17734 = !DILocation(line: 456, column: 5, scope: !17687)
!17735 = !DILocation(line: 457, column: 5, scope: !17687)
!17736 = !DILocation(line: 458, column: 1, scope: !17687)
!17737 = distinct !DISubprogram(name: "emit", scope: !2858, file: !2858, line: 264, type: !17738, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!17738 = !DISubroutineType(types: !17739)
!17739 = !{null, !16808, !2927}
!17740 = !DILocalVariable(name: "lexer", arg: 1, scope: !17737, file: !2858, line: 264, type: !16808)
!17741 = !DILocation(line: 264, column: 32, scope: !17737)
!17742 = !DILocalVariable(name: "item_type", arg: 2, scope: !17737, file: !2858, line: 264, type: !2927)
!17743 = !DILocation(line: 264, column: 54, scope: !17737)
!17744 = !DILocalVariable(name: "item", scope: !17737, file: !2858, line: 266, type: !2976)
!17745 = !DILocation(line: 266, column: 17, scope: !17737)
!17746 = !DILocation(line: 266, column: 24, scope: !17737)
!17747 = !DILocation(line: 267, column: 17, scope: !17737)
!17748 = !DILocation(line: 268, column: 18, scope: !17737)
!17749 = !DILocation(line: 269, column: 22, scope: !17737)
!17750 = !DILocation(line: 269, column: 29, scope: !17737)
!17751 = !DILocation(line: 270, column: 29, scope: !17737)
!17752 = !DILocation(line: 270, column: 36, scope: !17737)
!17753 = !DILocation(line: 270, column: 42, scope: !17737)
!17754 = !DILocation(line: 270, column: 49, scope: !17737)
!17755 = !DILocation(line: 270, column: 40, scope: !17737)
!17756 = !DILocation(line: 273, column: 15, scope: !17737)
!17757 = !DILocation(line: 273, column: 5, scope: !17737)
!17758 = !DILocation(line: 274, column: 1, scope: !17737)
!17759 = distinct !DISubprogram(name: "lex_left_meta", scope: !2858, file: !2858, line: 424, type: !16806, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!17760 = !DILocalVariable(name: "lexer", arg: 1, scope: !17759, file: !2858, line: 424, type: !16808)
!17761 = !DILocation(line: 424, column: 42, scope: !17759)
!17762 = !DILocation(line: 426, column: 19, scope: !17759)
!17763 = !DILocation(line: 426, column: 5, scope: !17759)
!17764 = !DILocation(line: 426, column: 12, scope: !17759)
!17765 = !DILocation(line: 426, column: 16, scope: !17759)
!17766 = !DILocalVariable(name: "r", scope: !17759, file: !2858, line: 427, type: !34)
!17767 = !DILocation(line: 427, column: 9, scope: !17759)
!17768 = !DILocation(line: 427, column: 18, scope: !17759)
!17769 = !DILocation(line: 427, column: 13, scope: !17759)
!17770 = !DILocation(line: 428, column: 9, scope: !17771)
!17771 = distinct !DILexicalBlock(scope: !17759, file: !2858, line: 428, column: 9)
!17772 = !DILocation(line: 428, column: 11, scope: !17771)
!17773 = !DILocation(line: 428, column: 9, scope: !17759)
!17774 = !DILocation(line: 429, column: 9, scope: !17771)
!17775 = !DILocation(line: 430, column: 12, scope: !17759)
!17776 = !DILocation(line: 430, column: 5, scope: !17759)
!17777 = !DILocation(line: 432, column: 10, scope: !17759)
!17778 = !DILocation(line: 432, column: 5, scope: !17759)
!17779 = !DILocation(line: 433, column: 5, scope: !17759)
!17780 = !DILocation(line: 434, column: 1, scope: !17759)
!17781 = distinct !DISubprogram(name: "lex_error", scope: !2858, file: !2858, line: 327, type: !17782, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!17782 = !DISubroutineType(types: !17783)
!17783 = !{!111, !16808, !205, null}
!17784 = !DILocalVariable(name: "lexer", arg: 1, scope: !17781, file: !2858, line: 327, type: !16808)
!17785 = !DILocation(line: 327, column: 38, scope: !17781)
!17786 = !DILocalVariable(name: "msg", arg: 2, scope: !17781, file: !2858, line: 327, type: !205)
!17787 = !DILocation(line: 327, column: 57, scope: !17781)
!17788 = !DILocalVariable(name: "item", scope: !17781, file: !2858, line: 329, type: !2976)
!17789 = !DILocation(line: 329, column: 17, scope: !17781)
!17790 = !DILocalVariable(name: "ap", scope: !17781, file: !2858, line: 330, type: !17791)
!17791 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2964, line: 52, baseType: !17792)
!17792 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !6113, line: 14, baseType: !17793)
!17793 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !17794, baseType: !17795)
!17794 = !DIFile(filename: "common/lwan-template.c", directory: "/home/raj/lwan")
!17795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17796, size: 192, elements: !1833)
!17796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", size: 192, elements: !17797)
!17797 = !{!17798, !17799, !17800, !17801}
!17798 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !17796, file: !17794, line: 318, baseType: !9, size: 32)
!17799 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !17796, file: !17794, line: 318, baseType: !9, size: 32, offset: 32)
!17800 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !17796, file: !17794, line: 318, baseType: !111, size: 64, offset: 64)
!17801 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !17796, file: !17794, line: 318, baseType: !111, size: 64, offset: 128)
!17802 = !DILocation(line: 330, column: 13, scope: !17781)
!17803 = !DILocation(line: 332, column: 5, scope: !17781)
!17804 = !DILocation(line: 333, column: 24, scope: !17781)
!17805 = !DILocation(line: 333, column: 29, scope: !17781)
!17806 = !DILocation(line: 333, column: 5, scope: !17781)
!17807 = !DILocation(line: 334, column: 5, scope: !17781)
!17808 = !DILocation(line: 336, column: 15, scope: !17781)
!17809 = !DILocation(line: 336, column: 5, scope: !17781)
!17810 = !DILocation(line: 337, column: 5, scope: !17781)
!17811 = distinct !DISubprogram(name: "next", scope: !2858, file: !2858, line: 276, type: !17812, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!17812 = !DISubroutineType(types: !17813)
!17813 = !{!34, !16808}
!17814 = !DILocalVariable(name: "lexer", arg: 1, scope: !17811, file: !2858, line: 276, type: !16808)
!17815 = !DILocation(line: 276, column: 31, scope: !17811)
!17816 = !DILocation(line: 278, column: 9, scope: !17817)
!17817 = distinct !DILexicalBlock(scope: !17811, file: !2858, line: 278, column: 9)
!17818 = !DILocation(line: 278, column: 16, scope: !17817)
!17819 = !DILocation(line: 278, column: 23, scope: !17817)
!17820 = !DILocation(line: 278, column: 30, scope: !17817)
!17821 = !DILocation(line: 278, column: 20, scope: !17817)
!17822 = !DILocation(line: 278, column: 9, scope: !17811)
!17823 = !DILocation(line: 279, column: 9, scope: !17817)
!17824 = !DILocalVariable(name: "r", scope: !17811, file: !2858, line: 280, type: !34)
!17825 = !DILocation(line: 280, column: 9, scope: !17811)
!17826 = !DILocation(line: 280, column: 14, scope: !17811)
!17827 = !DILocation(line: 280, column: 21, scope: !17811)
!17828 = !DILocation(line: 280, column: 13, scope: !17811)
!17829 = !DILocation(line: 281, column: 5, scope: !17811)
!17830 = !DILocation(line: 281, column: 12, scope: !17811)
!17831 = !DILocation(line: 281, column: 15, scope: !17811)
!17832 = !DILocation(line: 282, column: 12, scope: !17811)
!17833 = !DILocation(line: 282, column: 5, scope: !17811)
!17834 = !DILocation(line: 283, column: 1, scope: !17811)
!17835 = distinct !DISubprogram(name: "error_vitem", scope: !2858, file: !2858, line: 295, type: !17836, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!17836 = !DISubroutineType(types: !17837)
!17837 = !{!111, !16841, !205, !17838}
!17838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17796, size: 64)
!17839 = !DILocalVariable(name: "item", arg: 1, scope: !17835, file: !2858, line: 295, type: !16841)
!17840 = !DILocation(line: 295, column: 39, scope: !17835)
!17841 = !DILocalVariable(name: "msg", arg: 2, scope: !17835, file: !2858, line: 295, type: !205)
!17842 = !DILocation(line: 295, column: 57, scope: !17835)
!17843 = !DILocalVariable(name: "ap", arg: 3, scope: !17835, file: !2858, line: 295, type: !17838)
!17844 = !DILocation(line: 295, column: 70, scope: !17835)
!17845 = !DILocalVariable(name: "r", scope: !17835, file: !2858, line: 297, type: !34)
!17846 = !DILocation(line: 297, column: 9, scope: !17835)
!17847 = !DILocation(line: 299, column: 5, scope: !17835)
!17848 = !DILocation(line: 299, column: 11, scope: !17835)
!17849 = !DILocation(line: 299, column: 16, scope: !17835)
!17850 = !DILocation(line: 301, column: 29, scope: !17835)
!17851 = !DILocation(line: 301, column: 35, scope: !17835)
!17852 = !DILocation(line: 301, column: 41, scope: !17835)
!17853 = !DILocation(line: 301, column: 48, scope: !17835)
!17854 = !DILocation(line: 301, column: 53, scope: !17835)
!17855 = !DILocation(line: 301, column: 9, scope: !17835)
!17856 = !DILocation(line: 301, column: 7, scope: !17835)
!17857 = !DILocation(line: 302, column: 9, scope: !17858)
!17858 = distinct !DILexicalBlock(scope: !17835, file: !2858, line: 302, column: 9)
!17859 = !DILocation(line: 302, column: 11, scope: !17858)
!17860 = !DILocation(line: 302, column: 9, scope: !17835)
!17861 = !DILocation(line: 303, column: 45, scope: !17862)
!17862 = distinct !DILexicalBlock(scope: !17858, file: !2858, line: 302, column: 16)
!17863 = !DILocation(line: 303, column: 36, scope: !17862)
!17864 = !DILocation(line: 303, column: 29, scope: !17862)
!17865 = !DILocation(line: 303, column: 9, scope: !17862)
!17866 = !DILocation(line: 303, column: 15, scope: !17862)
!17867 = !DILocation(line: 303, column: 21, scope: !17862)
!17868 = !DILocation(line: 303, column: 27, scope: !17862)
!17869 = !DILocation(line: 304, column: 14, scope: !17870)
!17870 = distinct !DILexicalBlock(scope: !17862, file: !2858, line: 304, column: 13)
!17871 = !DILocation(line: 304, column: 20, scope: !17870)
!17872 = !DILocation(line: 304, column: 26, scope: !17870)
!17873 = !DILocation(line: 304, column: 13, scope: !17862)
!17874 = !DILocation(line: 305, column: 13, scope: !17870)
!17875 = !DILocation(line: 307, column: 34, scope: !17862)
!17876 = !DILocation(line: 307, column: 40, scope: !17862)
!17877 = !DILocation(line: 307, column: 46, scope: !17862)
!17878 = !DILocation(line: 307, column: 27, scope: !17862)
!17879 = !DILocation(line: 307, column: 9, scope: !17862)
!17880 = !DILocation(line: 307, column: 15, scope: !17862)
!17881 = !DILocation(line: 307, column: 21, scope: !17862)
!17882 = !DILocation(line: 307, column: 25, scope: !17862)
!17883 = !DILocation(line: 308, column: 5, scope: !17862)
!17884 = !DILocation(line: 309, column: 35, scope: !17885)
!17885 = distinct !DILexicalBlock(scope: !17858, file: !2858, line: 308, column: 12)
!17886 = !DILocation(line: 309, column: 27, scope: !17885)
!17887 = !DILocation(line: 309, column: 9, scope: !17885)
!17888 = !DILocation(line: 309, column: 15, scope: !17885)
!17889 = !DILocation(line: 309, column: 21, scope: !17885)
!17890 = !DILocation(line: 309, column: 25, scope: !17885)
!17891 = !DILocation(line: 312, column: 5, scope: !17835)
!17892 = !DILocation(line: 313, column: 1, scope: !17835)
!17893 = distinct !DISubprogram(name: "emit_item", scope: !2858, file: !2858, line: 243, type: !17894, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!17894 = !DISubroutineType(types: !17895)
!17895 = !{null, !16808, !16841}
!17896 = !DILocalVariable(name: "lexer", arg: 1, scope: !17893, file: !2858, line: 243, type: !16808)
!17897 = !DILocation(line: 243, column: 37, scope: !17893)
!17898 = !DILocalVariable(name: "item", arg: 2, scope: !17893, file: !2858, line: 243, type: !16841)
!17899 = !DILocation(line: 243, column: 57, scope: !17893)
!17900 = !DILocation(line: 245, column: 5, scope: !17893)
!17901 = !DILocation(line: 245, column: 12, scope: !17893)
!17902 = !DILocation(line: 245, column: 24, scope: !17893)
!17903 = !DILocation(line: 245, column: 30, scope: !17893)
!17904 = !DILocation(line: 245, column: 37, scope: !17893)
!17905 = !DILocation(line: 245, column: 49, scope: !17893)
!17906 = !DILocation(line: 245, column: 58, scope: !17893)
!17907 = !DILocation(line: 245, column: 57, scope: !17893)
!17908 = !DILocation(line: 246, column: 32, scope: !17893)
!17909 = !DILocation(line: 246, column: 39, scope: !17893)
!17910 = !DILocation(line: 246, column: 51, scope: !17893)
!17911 = !DILocation(line: 246, column: 56, scope: !17893)
!17912 = !DILocation(line: 246, column: 61, scope: !17893)
!17913 = !DILocation(line: 246, column: 5, scope: !17893)
!17914 = !DILocation(line: 246, column: 12, scope: !17893)
!17915 = !DILocation(line: 246, column: 24, scope: !17893)
!17916 = !DILocation(line: 246, column: 29, scope: !17893)
!17917 = !DILocation(line: 247, column: 5, scope: !17893)
!17918 = !DILocation(line: 247, column: 12, scope: !17893)
!17919 = !DILocation(line: 247, column: 24, scope: !17893)
!17920 = !DILocation(line: 247, column: 34, scope: !17893)
!17921 = !DILocation(line: 249, column: 20, scope: !17893)
!17922 = !DILocation(line: 249, column: 27, scope: !17893)
!17923 = !DILocation(line: 249, column: 5, scope: !17893)
!17924 = !DILocation(line: 249, column: 12, scope: !17893)
!17925 = !DILocation(line: 249, column: 18, scope: !17893)
!17926 = !DILocation(line: 250, column: 1, scope: !17893)
!17927 = distinct !DISubprogram(name: "lex_comment", scope: !2858, file: !2858, line: 369, type: !16806, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!17928 = !DILocalVariable(name: "lexer", arg: 1, scope: !17927, file: !2858, line: 369, type: !16808)
!17929 = !DILocation(line: 369, column: 40, scope: !17927)
!17930 = !DILocalVariable(name: "brackets", scope: !17927, file: !2858, line: 371, type: !55)
!17931 = !DILocation(line: 371, column: 12, scope: !17927)
!17932 = !DILocation(line: 371, column: 23, scope: !17927)
!17933 = !DILocation(line: 373, column: 5, scope: !17927)
!17934 = !DILocalVariable(name: "r", scope: !17935, file: !2858, line: 374, type: !34)
!17935 = distinct !DILexicalBlock(scope: !17927, file: !2858, line: 373, column: 8)
!17936 = !DILocation(line: 374, column: 13, scope: !17935)
!17937 = !DILocation(line: 374, column: 22, scope: !17935)
!17938 = !DILocation(line: 374, column: 17, scope: !17935)
!17939 = !DILocation(line: 375, column: 13, scope: !17940)
!17940 = distinct !DILexicalBlock(scope: !17935, file: !2858, line: 375, column: 13)
!17941 = !DILocation(line: 375, column: 15, scope: !17940)
!17942 = !DILocation(line: 375, column: 13, scope: !17935)
!17943 = !DILocation(line: 376, column: 21, scope: !17940)
!17944 = !DILocation(line: 376, column: 13, scope: !17940)
!17945 = !DILocation(line: 377, column: 18, scope: !17946)
!17946 = distinct !DILexicalBlock(scope: !17940, file: !2858, line: 377, column: 18)
!17947 = !DILocation(line: 377, column: 20, scope: !17946)
!17948 = !DILocation(line: 377, column: 18, scope: !17940)
!17949 = !DILocation(line: 378, column: 21, scope: !17946)
!17950 = !DILocation(line: 378, column: 13, scope: !17946)
!17951 = !DILocation(line: 379, column: 18, scope: !17952)
!17952 = distinct !DILexicalBlock(scope: !17946, file: !2858, line: 379, column: 18)
!17953 = !DILocation(line: 379, column: 20, scope: !17952)
!17954 = !DILocation(line: 379, column: 18, scope: !17946)
!17955 = !DILocation(line: 380, column: 30, scope: !17952)
!17956 = !DILocation(line: 380, column: 20, scope: !17952)
!17957 = !DILocation(line: 380, column: 13, scope: !17952)
!17958 = !DILocation(line: 381, column: 5, scope: !17935)
!17959 = !DILocation(line: 381, column: 14, scope: !17927)
!17960 = distinct !{!17960, !17933, !17961, !3413}
!17961 = !DILocation(line: 381, column: 22, scope: !17927)
!17962 = !DILocation(line: 383, column: 12, scope: !17927)
!17963 = !DILocation(line: 383, column: 5, scope: !17927)
!17964 = !DILocation(line: 384, column: 5, scope: !17927)
!17965 = !DILocation(line: 385, column: 1, scope: !17927)
!17966 = distinct !DISubprogram(name: "backup", scope: !2858, file: !2858, line: 290, type: !17967, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!17967 = !DISubroutineType(types: !17968)
!17968 = !{null, !16808}
!17969 = !DILocalVariable(name: "lexer", arg: 1, scope: !17966, file: !2858, line: 290, type: !16808)
!17970 = !DILocation(line: 290, column: 34, scope: !17966)
!17971 = !DILocation(line: 292, column: 5, scope: !17966)
!17972 = !DILocation(line: 292, column: 12, scope: !17966)
!17973 = !DILocation(line: 292, column: 15, scope: !17966)
!17974 = !DILocation(line: 293, column: 1, scope: !17966)
!17975 = distinct !DISubprogram(name: "lex_inside_action", scope: !2858, file: !2858, line: 387, type: !16806, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!17976 = !DILocalVariable(name: "lexer", arg: 1, scope: !17975, file: !2858, line: 387, type: !16808)
!17977 = !DILocation(line: 387, column: 46, scope: !17975)
!17978 = !DILocation(line: 389, column: 5, scope: !17975)
!17979 = !DILocalVariable(name: "r", scope: !17980, file: !2858, line: 390, type: !34)
!17980 = distinct !DILexicalBlock(scope: !17975, file: !2858, line: 389, column: 18)
!17981 = !DILocation(line: 390, column: 13, scope: !17980)
!17982 = !DILocation(line: 392, column: 22, scope: !17983)
!17983 = distinct !DILexicalBlock(scope: !17980, file: !2858, line: 392, column: 13)
!17984 = !DILocation(line: 392, column: 29, scope: !17983)
!17985 = !DILocation(line: 392, column: 46, scope: !17983)
!17986 = !DILocation(line: 392, column: 14, scope: !17983)
!17987 = !DILocation(line: 392, column: 13, scope: !17980)
!17988 = !DILocation(line: 393, column: 13, scope: !17983)
!17989 = !DILocation(line: 395, column: 18, scope: !17980)
!17990 = !DILocation(line: 395, column: 13, scope: !17980)
!17991 = !DILocation(line: 395, column: 11, scope: !17980)
!17992 = !DILocation(line: 396, column: 13, scope: !17993)
!17993 = distinct !DILexicalBlock(scope: !17980, file: !2858, line: 396, column: 13)
!17994 = !DILocation(line: 396, column: 15, scope: !17993)
!17995 = !DILocation(line: 396, column: 13, scope: !17980)
!17996 = !DILocation(line: 397, column: 30, scope: !17993)
!17997 = !DILocation(line: 397, column: 20, scope: !17993)
!17998 = !DILocation(line: 397, column: 13, scope: !17993)
!17999 = !DILocation(line: 398, column: 13, scope: !18000)
!18000 = distinct !DILexicalBlock(scope: !17980, file: !2858, line: 398, column: 13)
!18001 = !DILocation(line: 398, column: 15, scope: !18000)
!18002 = !DILocation(line: 398, column: 13, scope: !17980)
!18003 = !DILocation(line: 399, column: 30, scope: !18000)
!18004 = !DILocation(line: 399, column: 20, scope: !18000)
!18005 = !DILocation(line: 399, column: 13, scope: !18000)
!18006 = !DILocation(line: 401, column: 13, scope: !18007)
!18007 = distinct !DILexicalBlock(scope: !17980, file: !2858, line: 401, column: 13)
!18008 = !DILocation(line: 401, column: 13, scope: !17980)
!18009 = !DILocation(line: 402, column: 20, scope: !18010)
!18010 = distinct !DILexicalBlock(scope: !18007, file: !2858, line: 401, column: 25)
!18011 = !DILocation(line: 402, column: 13, scope: !18010)
!18012 = !DILocation(line: 403, column: 9, scope: !18010)
!18013 = !DILocation(line: 403, column: 20, scope: !18014)
!18014 = distinct !DILexicalBlock(scope: !18007, file: !2858, line: 403, column: 20)
!18015 = !DILocation(line: 403, column: 22, scope: !18014)
!18016 = !DILocation(line: 403, column: 20, scope: !18007)
!18017 = !DILocation(line: 404, column: 18, scope: !18018)
!18018 = distinct !DILexicalBlock(scope: !18014, file: !2858, line: 403, column: 30)
!18019 = !DILocation(line: 404, column: 13, scope: !18018)
!18020 = !DILocation(line: 405, column: 9, scope: !18018)
!18021 = !DILocation(line: 405, column: 20, scope: !18022)
!18022 = distinct !DILexicalBlock(scope: !18014, file: !2858, line: 405, column: 20)
!18023 = !DILocation(line: 405, column: 22, scope: !18022)
!18024 = !DILocation(line: 405, column: 20, scope: !18014)
!18025 = !DILocation(line: 406, column: 18, scope: !18026)
!18026 = distinct !DILexicalBlock(scope: !18022, file: !2858, line: 405, column: 30)
!18027 = !DILocation(line: 406, column: 13, scope: !18026)
!18028 = !DILocation(line: 407, column: 9, scope: !18026)
!18029 = !DILocation(line: 407, column: 20, scope: !18030)
!18030 = distinct !DILexicalBlock(scope: !18022, file: !2858, line: 407, column: 20)
!18031 = !DILocation(line: 407, column: 22, scope: !18030)
!18032 = !DILocation(line: 407, column: 20, scope: !18022)
!18033 = !DILocation(line: 408, column: 18, scope: !18034)
!18034 = distinct !DILexicalBlock(scope: !18030, file: !2858, line: 407, column: 30)
!18035 = !DILocation(line: 408, column: 13, scope: !18034)
!18036 = !DILocation(line: 409, column: 9, scope: !18034)
!18037 = !DILocation(line: 409, column: 20, scope: !18038)
!18038 = distinct !DILexicalBlock(scope: !18030, file: !2858, line: 409, column: 20)
!18039 = !DILocation(line: 409, column: 22, scope: !18038)
!18040 = !DILocation(line: 409, column: 20, scope: !18030)
!18041 = !DILocation(line: 410, column: 18, scope: !18042)
!18042 = distinct !DILexicalBlock(scope: !18038, file: !2858, line: 409, column: 30)
!18043 = !DILocation(line: 410, column: 13, scope: !18042)
!18044 = !DILocation(line: 411, column: 9, scope: !18042)
!18045 = !DILocation(line: 411, column: 20, scope: !18046)
!18046 = distinct !DILexicalBlock(scope: !18038, file: !2858, line: 411, column: 20)
!18047 = !DILocation(line: 411, column: 22, scope: !18046)
!18048 = !DILocation(line: 411, column: 20, scope: !18038)
!18049 = !DILocation(line: 412, column: 18, scope: !18050)
!18050 = distinct !DILexicalBlock(scope: !18046, file: !2858, line: 411, column: 30)
!18051 = !DILocation(line: 412, column: 13, scope: !18050)
!18052 = !DILocation(line: 413, column: 9, scope: !18050)
!18053 = !DILocation(line: 413, column: 20, scope: !18054)
!18054 = distinct !DILexicalBlock(scope: !18046, file: !2858, line: 413, column: 20)
!18055 = !DILocation(line: 413, column: 22, scope: !18054)
!18056 = !DILocation(line: 413, column: 20, scope: !18046)
!18057 = !DILocation(line: 414, column: 13, scope: !18058)
!18058 = distinct !DILexicalBlock(scope: !18054, file: !2858, line: 413, column: 30)
!18059 = !DILocation(line: 415, column: 20, scope: !18060)
!18060 = distinct !DILexicalBlock(scope: !18054, file: !2858, line: 415, column: 20)
!18061 = !DILocation(line: 415, column: 31, scope: !18060)
!18062 = !DILocation(line: 415, column: 34, scope: !18060)
!18063 = !DILocation(line: 415, column: 36, scope: !18060)
!18064 = !DILocation(line: 415, column: 20, scope: !18054)
!18065 = !DILocation(line: 416, column: 20, scope: !18066)
!18066 = distinct !DILexicalBlock(scope: !18060, file: !2858, line: 415, column: 44)
!18067 = !DILocation(line: 416, column: 13, scope: !18066)
!18068 = !DILocation(line: 417, column: 13, scope: !18066)
!18069 = !DILocation(line: 419, column: 30, scope: !18070)
!18070 = distinct !DILexicalBlock(scope: !18060, file: !2858, line: 418, column: 16)
!18071 = !DILocation(line: 419, column: 65, scope: !18070)
!18072 = !DILocation(line: 419, column: 20, scope: !18070)
!18073 = !DILocation(line: 419, column: 13, scope: !18070)
!18074 = distinct !{!18074, !17978, !18075}
!18075 = !DILocation(line: 421, column: 5, scope: !17975)
!18076 = !DILocation(line: 422, column: 1, scope: !17975)
!18077 = distinct !DISubprogram(name: "lex_right_meta", scope: !2858, file: !2858, line: 436, type: !16806, scopeLine: 437, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!18078 = !DILocalVariable(name: "lexer", arg: 1, scope: !18077, file: !2858, line: 436, type: !16808)
!18079 = !DILocation(line: 436, column: 43, scope: !18077)
!18080 = !DILocation(line: 438, column: 19, scope: !18077)
!18081 = !DILocation(line: 438, column: 5, scope: !18077)
!18082 = !DILocation(line: 438, column: 12, scope: !18077)
!18083 = !DILocation(line: 438, column: 16, scope: !18077)
!18084 = !DILocation(line: 439, column: 10, scope: !18077)
!18085 = !DILocation(line: 439, column: 5, scope: !18077)
!18086 = !DILocation(line: 440, column: 5, scope: !18077)
!18087 = distinct !DISubprogram(name: "ignore", scope: !2858, file: !2858, line: 285, type: !17967, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!18088 = !DILocalVariable(name: "lexer", arg: 1, scope: !18087, file: !2858, line: 285, type: !16808)
!18089 = !DILocation(line: 285, column: 34, scope: !18087)
!18090 = !DILocation(line: 287, column: 20, scope: !18087)
!18091 = !DILocation(line: 287, column: 27, scope: !18087)
!18092 = !DILocation(line: 287, column: 5, scope: !18087)
!18093 = !DILocation(line: 287, column: 12, scope: !18087)
!18094 = !DILocation(line: 287, column: 18, scope: !18087)
!18095 = !DILocation(line: 288, column: 1, scope: !18087)
!18096 = distinct !DISubprogram(name: "lex_quoted_identifier", scope: !2858, file: !2858, line: 354, type: !16806, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!18097 = !DILocalVariable(name: "lexer", arg: 1, scope: !18096, file: !2858, line: 354, type: !16808)
!18098 = !DILocation(line: 354, column: 50, scope: !18096)
!18099 = !DILocalVariable(name: "r", scope: !18096, file: !2858, line: 356, type: !34)
!18100 = !DILocation(line: 356, column: 9, scope: !18096)
!18101 = !DILocation(line: 358, column: 10, scope: !18096)
!18102 = !DILocation(line: 358, column: 5, scope: !18096)
!18103 = !DILocation(line: 359, column: 20, scope: !18096)
!18104 = !DILocation(line: 359, column: 5, scope: !18096)
!18105 = !DILocation(line: 361, column: 14, scope: !18096)
!18106 = !DILocation(line: 361, column: 9, scope: !18096)
!18107 = !DILocation(line: 361, column: 7, scope: !18096)
!18108 = !DILocation(line: 362, column: 9, scope: !18109)
!18109 = distinct !DILexicalBlock(scope: !18096, file: !2858, line: 362, column: 9)
!18110 = !DILocation(line: 362, column: 11, scope: !18109)
!18111 = !DILocation(line: 362, column: 9, scope: !18096)
!18112 = !DILocation(line: 363, column: 26, scope: !18109)
!18113 = !DILocation(line: 363, column: 62, scope: !18109)
!18114 = !DILocation(line: 363, column: 16, scope: !18109)
!18115 = !DILocation(line: 363, column: 9, scope: !18109)
!18116 = !DILocation(line: 365, column: 10, scope: !18096)
!18117 = !DILocation(line: 365, column: 5, scope: !18096)
!18118 = !DILocation(line: 366, column: 5, scope: !18096)
!18119 = !DILocation(line: 367, column: 1, scope: !18096)
!18120 = distinct !DISubprogram(name: "lex_identifier", scope: !2858, file: !2858, line: 345, type: !16806, scopeLine: 346, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!18121 = !DILocalVariable(name: "lexer", arg: 1, scope: !18120, file: !2858, line: 345, type: !16808)
!18122 = !DILocation(line: 345, column: 43, scope: !18120)
!18123 = !DILocation(line: 347, column: 5, scope: !18120)
!18124 = !DILocation(line: 347, column: 25, scope: !18120)
!18125 = !DILocation(line: 347, column: 20, scope: !18120)
!18126 = !DILocation(line: 347, column: 12, scope: !18120)
!18127 = distinct !{!18127, !18123, !18128, !3413}
!18128 = !DILocation(line: 348, column: 9, scope: !18120)
!18129 = !DILocation(line: 349, column: 12, scope: !18120)
!18130 = !DILocation(line: 349, column: 5, scope: !18120)
!18131 = !DILocation(line: 350, column: 10, scope: !18120)
!18132 = !DILocation(line: 350, column: 5, scope: !18120)
!18133 = !DILocation(line: 351, column: 5, scope: !18120)
!18134 = distinct !DISubprogram(name: "isident", scope: !2858, file: !2858, line: 340, type: !18135, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!18135 = !DISubroutineType(types: !18136)
!18136 = !{!137, !34}
!18137 = !DILocalVariable(name: "ch", arg: 1, scope: !18134, file: !2858, line: 340, type: !34)
!18138 = !DILocation(line: 340, column: 25, scope: !18134)
!18139 = !DILocation(line: 342, column: 12, scope: !18134)
!18140 = !DILocation(line: 342, column: 24, scope: !18134)
!18141 = !DILocation(line: 342, column: 27, scope: !18134)
!18142 = !DILocation(line: 342, column: 30, scope: !18134)
!18143 = !DILocation(line: 342, column: 37, scope: !18134)
!18144 = !DILocation(line: 342, column: 40, scope: !18134)
!18145 = !DILocation(line: 342, column: 43, scope: !18134)
!18146 = !DILocation(line: 342, column: 5, scope: !18134)
!18147 = distinct !DISubprogram(name: "parser_meta", scope: !2858, file: !2858, line: 748, type: !16838, scopeLine: 749, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!18148 = !DILocalVariable(name: "parser", arg: 1, scope: !18147, file: !2858, line: 748, type: !16840)
!18149 = !DILocation(line: 748, column: 41, scope: !18147)
!18150 = !DILocalVariable(name: "item", arg: 2, scope: !18147, file: !2858, line: 748, type: !16841)
!18151 = !DILocation(line: 748, column: 62, scope: !18147)
!18152 = !DILocation(line: 750, column: 9, scope: !18153)
!18153 = distinct !DILexicalBlock(scope: !18147, file: !2858, line: 750, column: 9)
!18154 = !DILocation(line: 750, column: 15, scope: !18153)
!18155 = !DILocation(line: 750, column: 20, scope: !18153)
!18156 = !DILocation(line: 750, column: 9, scope: !18147)
!18157 = !DILocation(line: 751, column: 9, scope: !18158)
!18158 = distinct !DILexicalBlock(scope: !18153, file: !2858, line: 750, column: 46)
!18159 = !DILocation(line: 751, column: 17, scope: !18158)
!18160 = !DILocation(line: 751, column: 23, scope: !18158)
!18161 = !DILocation(line: 752, column: 9, scope: !18158)
!18162 = !DILocation(line: 755, column: 9, scope: !18163)
!18163 = distinct !DILexicalBlock(scope: !18147, file: !2858, line: 755, column: 9)
!18164 = !DILocation(line: 755, column: 15, scope: !18163)
!18165 = !DILocation(line: 755, column: 20, scope: !18163)
!18166 = !DILocation(line: 755, column: 9, scope: !18147)
!18167 = !DILocation(line: 756, column: 34, scope: !18163)
!18168 = !DILocation(line: 756, column: 42, scope: !18163)
!18169 = !DILocation(line: 756, column: 16, scope: !18163)
!18170 = !DILocation(line: 756, column: 9, scope: !18163)
!18171 = !DILocation(line: 758, column: 9, scope: !18172)
!18172 = distinct !DILexicalBlock(scope: !18147, file: !2858, line: 758, column: 9)
!18173 = !DILocation(line: 758, column: 15, scope: !18172)
!18174 = !DILocation(line: 758, column: 20, scope: !18172)
!18175 = !DILocation(line: 758, column: 9, scope: !18147)
!18176 = !DILocation(line: 759, column: 9, scope: !18172)
!18177 = !DILocation(line: 761, column: 9, scope: !18178)
!18178 = distinct !DILexicalBlock(scope: !18147, file: !2858, line: 761, column: 9)
!18179 = !DILocation(line: 761, column: 15, scope: !18178)
!18180 = !DILocation(line: 761, column: 20, scope: !18178)
!18181 = !DILocation(line: 761, column: 9, scope: !18147)
!18182 = !DILocation(line: 762, column: 9, scope: !18178)
!18183 = !DILocation(line: 764, column: 9, scope: !18184)
!18184 = distinct !DILexicalBlock(scope: !18147, file: !2858, line: 764, column: 9)
!18185 = !DILocation(line: 764, column: 15, scope: !18184)
!18186 = !DILocation(line: 764, column: 20, scope: !18184)
!18187 = !DILocation(line: 764, column: 9, scope: !18147)
!18188 = !DILocation(line: 765, column: 9, scope: !18184)
!18189 = !DILocation(line: 767, column: 9, scope: !18190)
!18190 = distinct !DILexicalBlock(scope: !18147, file: !2858, line: 767, column: 9)
!18191 = !DILocation(line: 767, column: 15, scope: !18190)
!18192 = !DILocation(line: 767, column: 20, scope: !18190)
!18193 = !DILocation(line: 767, column: 9, scope: !18147)
!18194 = !DILocation(line: 768, column: 9, scope: !18190)
!18195 = !DILocation(line: 770, column: 30, scope: !18147)
!18196 = !DILocation(line: 770, column: 12, scope: !18147)
!18197 = !DILocation(line: 770, column: 5, scope: !18147)
!18198 = !DILocation(line: 771, column: 1, scope: !18147)
!18199 = distinct !DISubprogram(name: "error_item", scope: !2858, file: !2858, line: 315, type: !18200, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!18200 = !DISubroutineType(types: !18201)
!18201 = !{!111, !16841, !205, null}
!18202 = !DILocalVariable(name: "item", arg: 1, scope: !18199, file: !2858, line: 315, type: !16841)
!18203 = !DILocation(line: 315, column: 38, scope: !18199)
!18204 = !DILocalVariable(name: "msg", arg: 2, scope: !18199, file: !2858, line: 315, type: !205)
!18205 = !DILocation(line: 315, column: 56, scope: !18199)
!18206 = !DILocalVariable(name: "ret", scope: !18199, file: !2858, line: 317, type: !111)
!18207 = !DILocation(line: 317, column: 11, scope: !18199)
!18208 = !DILocalVariable(name: "ap", scope: !18199, file: !2858, line: 318, type: !17791)
!18209 = !DILocation(line: 318, column: 13, scope: !18199)
!18210 = !DILocation(line: 320, column: 5, scope: !18199)
!18211 = !DILocation(line: 321, column: 23, scope: !18199)
!18212 = !DILocation(line: 321, column: 29, scope: !18199)
!18213 = !DILocation(line: 321, column: 34, scope: !18199)
!18214 = !DILocation(line: 321, column: 11, scope: !18199)
!18215 = !DILocation(line: 321, column: 9, scope: !18199)
!18216 = !DILocation(line: 322, column: 5, scope: !18199)
!18217 = !DILocation(line: 324, column: 12, scope: !18199)
!18218 = !DILocation(line: 324, column: 5, scope: !18199)
!18219 = distinct !DISubprogram(name: "strbuf_set", scope: !3350, file: !3350, line: 179, type: !15414, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3344, retainedNodes: !286)
!18220 = !DILocalVariable(name: "s1", arg: 1, scope: !18219, file: !3350, line: 179, type: !12352)
!18221 = !DILocation(line: 179, column: 22, scope: !18219)
!18222 = !DILocalVariable(name: "s2", arg: 2, scope: !18219, file: !3350, line: 179, type: !205)
!18223 = !DILocation(line: 179, column: 38, scope: !18219)
!18224 = !DILocalVariable(name: "sz", arg: 3, scope: !18219, file: !3350, line: 179, type: !55)
!18225 = !DILocation(line: 179, column: 49, scope: !18219)
!18226 = !DILocation(line: 181, column: 10, scope: !18227)
!18227 = distinct !DILexicalBlock(scope: !18219, file: !3350, line: 181, column: 9)
!18228 = !DILocation(line: 181, column: 9, scope: !18219)
!18229 = !DILocation(line: 182, column: 21, scope: !18227)
!18230 = !DILocation(line: 182, column: 14, scope: !18227)
!18231 = !DILocation(line: 182, column: 12, scope: !18227)
!18232 = !DILocation(line: 182, column: 9, scope: !18227)
!18233 = !DILocation(line: 184, column: 9, scope: !18234)
!18234 = distinct !DILexicalBlock(scope: !18219, file: !3350, line: 184, column: 9)
!18235 = !DILocation(line: 184, column: 9, scope: !18219)
!18236 = !DILocation(line: 185, column: 9, scope: !18234)
!18237 = !DILocation(line: 187, column: 12, scope: !18219)
!18238 = !DILocation(line: 187, column: 16, scope: !18219)
!18239 = !DILocation(line: 187, column: 22, scope: !18219)
!18240 = !DILocation(line: 187, column: 30, scope: !18219)
!18241 = !DILocation(line: 187, column: 34, scope: !18219)
!18242 = !DILocation(line: 187, column: 5, scope: !18219)
!18243 = !DILocation(line: 188, column: 22, scope: !18219)
!18244 = !DILocation(line: 188, column: 5, scope: !18219)
!18245 = !DILocation(line: 188, column: 9, scope: !18219)
!18246 = !DILocation(line: 188, column: 13, scope: !18219)
!18247 = !DILocation(line: 188, column: 20, scope: !18219)
!18248 = !DILocation(line: 189, column: 5, scope: !18219)
!18249 = !DILocation(line: 189, column: 9, scope: !18219)
!18250 = !DILocation(line: 189, column: 15, scope: !18219)
!18251 = !DILocation(line: 189, column: 22, scope: !18219)
!18252 = !DILocation(line: 189, column: 25, scope: !18219)
!18253 = !DILocation(line: 189, column: 30, scope: !18219)
!18254 = !DILocation(line: 191, column: 5, scope: !18219)
!18255 = !DILocation(line: 192, column: 1, scope: !18219)
!18256 = distinct !DISubprogram(name: "unexpected_lexeme", scope: !2858, file: !2858, line: 478, type: !18257, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!18257 = !DISubroutineType(types: !18258)
!18258 = !{!111, !16841}
!18259 = !DILocalVariable(name: "item", arg: 1, scope: !18256, file: !2858, line: 478, type: !16841)
!18260 = !DILocation(line: 478, column: 45, scope: !18256)
!18261 = !DILocation(line: 480, column: 23, scope: !18256)
!18262 = !DILocation(line: 481, column: 23, scope: !18256)
!18263 = !DILocation(line: 481, column: 29, scope: !18256)
!18264 = !DILocation(line: 481, column: 9, scope: !18256)
!18265 = !DILocation(line: 481, column: 41, scope: !18256)
!18266 = !DILocation(line: 481, column: 47, scope: !18256)
!18267 = !DILocation(line: 481, column: 53, scope: !18256)
!18268 = !DILocation(line: 481, column: 36, scope: !18256)
!18269 = !DILocation(line: 481, column: 58, scope: !18256)
!18270 = !DILocation(line: 481, column: 64, scope: !18256)
!18271 = !DILocation(line: 481, column: 70, scope: !18256)
!18272 = !DILocation(line: 480, column: 12, scope: !18256)
!18273 = !DILocation(line: 480, column: 5, scope: !18256)
!18274 = distinct !DISubprogram(name: "parser_identifier", scope: !2858, file: !2858, line: 678, type: !16838, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!18275 = !DILocalVariable(name: "parser", arg: 1, scope: !18274, file: !2858, line: 678, type: !16840)
!18276 = !DILocation(line: 678, column: 47, scope: !18274)
!18277 = !DILocalVariable(name: "item", arg: 2, scope: !18274, file: !2858, line: 678, type: !16841)
!18278 = !DILocation(line: 678, column: 68, scope: !18274)
!18279 = !DILocalVariable(name: "next", scope: !18274, file: !2858, line: 680, type: !16841)
!18280 = !DILocation(line: 680, column: 18, scope: !18274)
!18281 = !DILocation(line: 682, column: 20, scope: !18282)
!18282 = distinct !DILexicalBlock(scope: !18274, file: !2858, line: 682, column: 9)
!18283 = !DILocation(line: 682, column: 28, scope: !18282)
!18284 = !DILocation(line: 682, column: 10, scope: !18282)
!18285 = !DILocation(line: 682, column: 9, scope: !18274)
!18286 = !DILocation(line: 683, column: 13, scope: !18287)
!18287 = distinct !DILexicalBlock(scope: !18288, file: !2858, line: 683, column: 13)
!18288 = distinct !DILexicalBlock(scope: !18282, file: !2858, line: 682, column: 43)
!18289 = !DILocation(line: 683, column: 13, scope: !18288)
!18290 = !DILocation(line: 684, column: 14, scope: !18287)
!18291 = !DILocation(line: 684, column: 22, scope: !18287)
!18292 = !DILocation(line: 684, column: 21, scope: !18287)
!18293 = !DILocation(line: 684, column: 13, scope: !18287)
!18294 = !DILocation(line: 685, column: 9, scope: !18288)
!18295 = !DILocation(line: 688, column: 9, scope: !18296)
!18296 = distinct !DILexicalBlock(scope: !18274, file: !2858, line: 688, column: 9)
!18297 = !DILocation(line: 688, column: 17, scope: !18296)
!18298 = !DILocation(line: 688, column: 23, scope: !18296)
!18299 = !DILocation(line: 688, column: 9, scope: !18274)
!18300 = !DILocation(line: 689, column: 13, scope: !18301)
!18301 = distinct !DILexicalBlock(scope: !18302, file: !2858, line: 689, column: 13)
!18302 = distinct !DILexicalBlock(scope: !18296, file: !2858, line: 688, column: 38)
!18303 = !DILocation(line: 689, column: 19, scope: !18301)
!18304 = !DILocation(line: 689, column: 24, scope: !18301)
!18305 = !DILocation(line: 689, column: 13, scope: !18302)
!18306 = !DILocation(line: 690, column: 31, scope: !18301)
!18307 = !DILocation(line: 690, column: 20, scope: !18301)
!18308 = !DILocation(line: 690, column: 13, scope: !18301)
!18309 = !DILocation(line: 691, column: 24, scope: !18310)
!18310 = distinct !DILexicalBlock(scope: !18302, file: !2858, line: 691, column: 13)
!18311 = !DILocation(line: 691, column: 32, scope: !18310)
!18312 = !DILocation(line: 691, column: 14, scope: !18310)
!18313 = !DILocation(line: 691, column: 13, scope: !18302)
!18314 = !DILocation(line: 692, column: 51, scope: !18310)
!18315 = !DILocation(line: 692, column: 57, scope: !18310)
!18316 = !DILocation(line: 692, column: 20, scope: !18310)
!18317 = !DILocation(line: 692, column: 13, scope: !18310)
!18318 = !DILocation(line: 693, column: 5, scope: !18302)
!18319 = !DILocation(line: 695, column: 9, scope: !18320)
!18320 = distinct !DILexicalBlock(scope: !18274, file: !2858, line: 695, column: 9)
!18321 = !DILocation(line: 695, column: 15, scope: !18320)
!18322 = !DILocation(line: 695, column: 20, scope: !18320)
!18323 = !DILocation(line: 695, column: 9, scope: !18274)
!18324 = !DILocalVariable(name: "symbol", scope: !18325, file: !2858, line: 696, type: !15134)
!18325 = distinct !DILexicalBlock(scope: !18320, file: !2858, line: 695, column: 40)
!18326 = !DILocation(line: 696, column: 32, scope: !18325)
!18327 = !DILocation(line: 696, column: 55, scope: !18325)
!18328 = !DILocalVariable(name: "__old", scope: !18329, file: !2858, line: 696, type: !205)
!18329 = distinct !DILexicalBlock(scope: !18325, file: !2858, line: 696, column: 63)
!18330 = !DILocation(line: 696, column: 63, scope: !18329)
!18331 = !DILocalVariable(name: "__len", scope: !18329, file: !2858, line: 696, type: !55)
!18332 = !DILocalVariable(name: "__new", scope: !18329, file: !2858, line: 696, type: !52)
!18333 = !DILocation(line: 696, column: 41, scope: !18325)
!18334 = !DILocation(line: 697, column: 14, scope: !18335)
!18335 = distinct !DILexicalBlock(scope: !18325, file: !2858, line: 697, column: 13)
!18336 = !DILocation(line: 697, column: 13, scope: !18325)
!18337 = !DILocation(line: 698, column: 31, scope: !18338)
!18338 = distinct !DILexicalBlock(scope: !18335, file: !2858, line: 697, column: 22)
!18339 = !DILocation(line: 698, column: 68, scope: !18338)
!18340 = !DILocation(line: 698, column: 74, scope: !18338)
!18341 = !DILocation(line: 698, column: 80, scope: !18338)
!18342 = !DILocation(line: 698, column: 63, scope: !18338)
!18343 = !DILocation(line: 699, column: 17, scope: !18338)
!18344 = !DILocation(line: 699, column: 23, scope: !18338)
!18345 = !DILocation(line: 699, column: 29, scope: !18338)
!18346 = !DILocation(line: 698, column: 20, scope: !18338)
!18347 = !DILocation(line: 698, column: 13, scope: !18338)
!18348 = !DILocation(line: 702, column: 20, scope: !18325)
!18349 = !DILocation(line: 702, column: 45, scope: !18325)
!18350 = !DILocation(line: 702, column: 53, scope: !18325)
!18351 = !DILocation(line: 702, column: 60, scope: !18325)
!18352 = !DILocation(line: 702, column: 9, scope: !18325)
!18353 = !DILocation(line: 704, column: 9, scope: !18325)
!18354 = !DILocation(line: 704, column: 17, scope: !18325)
!18355 = !DILocation(line: 704, column: 23, scope: !18325)
!18356 = !DILocation(line: 705, column: 38, scope: !18325)
!18357 = !DILocation(line: 705, column: 44, scope: !18325)
!18358 = !DILocation(line: 705, column: 50, scope: !18325)
!18359 = !DILocation(line: 705, column: 54, scope: !18325)
!18360 = !DILocation(line: 705, column: 9, scope: !18325)
!18361 = !DILocation(line: 705, column: 17, scope: !18325)
!18362 = !DILocation(line: 705, column: 22, scope: !18325)
!18363 = !DILocation(line: 705, column: 35, scope: !18325)
!18364 = !DILocation(line: 706, column: 9, scope: !18325)
!18365 = !DILocation(line: 709, column: 9, scope: !18366)
!18366 = distinct !DILexicalBlock(scope: !18274, file: !2858, line: 709, column: 9)
!18367 = !DILocation(line: 709, column: 15, scope: !18366)
!18368 = !DILocation(line: 709, column: 20, scope: !18366)
!18369 = !DILocation(line: 709, column: 9, scope: !18274)
!18370 = !DILocalVariable(name: "symbol", scope: !18371, file: !2858, line: 710, type: !15134)
!18371 = distinct !DILexicalBlock(scope: !18366, file: !2858, line: 709, column: 43)
!18372 = !DILocation(line: 710, column: 32, scope: !18371)
!18373 = !DILocation(line: 710, column: 55, scope: !18371)
!18374 = !DILocalVariable(name: "__old", scope: !18375, file: !2858, line: 710, type: !205)
!18375 = distinct !DILexicalBlock(scope: !18371, file: !2858, line: 710, column: 63)
!18376 = !DILocation(line: 710, column: 63, scope: !18375)
!18377 = !DILocalVariable(name: "__len", scope: !18375, file: !2858, line: 710, type: !55)
!18378 = !DILocalVariable(name: "__new", scope: !18375, file: !2858, line: 710, type: !52)
!18379 = !DILocation(line: 710, column: 41, scope: !18371)
!18380 = !DILocation(line: 711, column: 14, scope: !18381)
!18381 = distinct !DILexicalBlock(scope: !18371, file: !2858, line: 711, column: 13)
!18382 = !DILocation(line: 711, column: 13, scope: !18371)
!18383 = !DILocation(line: 712, column: 31, scope: !18384)
!18384 = distinct !DILexicalBlock(scope: !18381, file: !2858, line: 711, column: 22)
!18385 = !DILocation(line: 712, column: 68, scope: !18384)
!18386 = !DILocation(line: 712, column: 74, scope: !18384)
!18387 = !DILocation(line: 712, column: 80, scope: !18384)
!18388 = !DILocation(line: 712, column: 63, scope: !18384)
!18389 = !DILocation(line: 713, column: 17, scope: !18384)
!18390 = !DILocation(line: 713, column: 23, scope: !18384)
!18391 = !DILocation(line: 713, column: 29, scope: !18384)
!18392 = !DILocation(line: 712, column: 20, scope: !18384)
!18393 = !DILocation(line: 712, column: 13, scope: !18384)
!18394 = !DILocation(line: 716, column: 29, scope: !18395)
!18395 = distinct !DILexicalBlock(scope: !18371, file: !2858, line: 716, column: 13)
!18396 = !DILocation(line: 716, column: 14, scope: !18395)
!18397 = !DILocation(line: 716, column: 13, scope: !18371)
!18398 = !DILocation(line: 717, column: 51, scope: !18395)
!18399 = !DILocation(line: 717, column: 57, scope: !18395)
!18400 = !DILocation(line: 717, column: 20, scope: !18395)
!18401 = !DILocation(line: 717, column: 13, scope: !18395)
!18402 = !DILocation(line: 719, column: 20, scope: !18371)
!18403 = !DILocation(line: 719, column: 73, scope: !18371)
!18404 = !DILocation(line: 719, column: 9, scope: !18371)
!18405 = !DILocation(line: 720, column: 26, scope: !18371)
!18406 = !DILocation(line: 720, column: 34, scope: !18371)
!18407 = !DILocation(line: 720, column: 9, scope: !18371)
!18408 = !DILocation(line: 722, column: 9, scope: !18371)
!18409 = !DILocation(line: 725, column: 43, scope: !18274)
!18410 = !DILocation(line: 725, column: 49, scope: !18274)
!18411 = !DILocation(line: 725, column: 12, scope: !18274)
!18412 = !DILocation(line: 725, column: 5, scope: !18274)
!18413 = !DILocation(line: 726, column: 1, scope: !18274)
!18414 = distinct !DISubprogram(name: "parser_partial", scope: !2858, file: !2858, line: 728, type: !16838, scopeLine: 729, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!18415 = !DILocalVariable(name: "parser", arg: 1, scope: !18414, file: !2858, line: 728, type: !16840)
!18416 = !DILocation(line: 728, column: 44, scope: !18414)
!18417 = !DILocalVariable(name: "item", arg: 2, scope: !18414, file: !2858, line: 728, type: !16841)
!18418 = !DILocation(line: 728, column: 65, scope: !18414)
!18419 = !DILocalVariable(name: "tpl", scope: !18414, file: !2858, line: 730, type: !3098)
!18420 = !DILocation(line: 730, column: 17, scope: !18414)
!18421 = !DILocalVariable(name: "filename", scope: !18414, file: !2858, line: 731, type: !52)
!18422 = !DILocation(line: 731, column: 11, scope: !18414)
!18423 = !DILocalVariable(name: "__old", scope: !18424, file: !2858, line: 731, type: !205)
!18424 = distinct !DILexicalBlock(scope: !18414, file: !2858, line: 731, column: 22)
!18425 = !DILocation(line: 731, column: 22, scope: !18424)
!18426 = !DILocalVariable(name: "__len", scope: !18424, file: !2858, line: 731, type: !55)
!18427 = !DILocalVariable(name: "__new", scope: !18424, file: !2858, line: 731, type: !52)
!18428 = !DILocation(line: 733, column: 9, scope: !18429)
!18429 = distinct !DILexicalBlock(scope: !18414, file: !2858, line: 733, column: 9)
!18430 = !DILocation(line: 733, column: 15, scope: !18429)
!18431 = !DILocation(line: 733, column: 20, scope: !18429)
!18432 = !DILocation(line: 733, column: 9, scope: !18414)
!18433 = !DILocation(line: 734, column: 34, scope: !18429)
!18434 = !DILocation(line: 734, column: 16, scope: !18429)
!18435 = !DILocation(line: 734, column: 9, scope: !18429)
!18436 = !DILocation(line: 736, column: 25, scope: !18437)
!18437 = distinct !DILexicalBlock(scope: !18414, file: !2858, line: 736, column: 9)
!18438 = !DILocation(line: 736, column: 10, scope: !18437)
!18439 = !DILocation(line: 736, column: 9, scope: !18414)
!18440 = !DILocation(line: 737, column: 34, scope: !18437)
!18441 = !DILocation(line: 737, column: 16, scope: !18437)
!18442 = !DILocation(line: 737, column: 9, scope: !18437)
!18443 = !DILocation(line: 739, column: 33, scope: !18414)
!18444 = !DILocation(line: 739, column: 43, scope: !18414)
!18445 = !DILocation(line: 739, column: 51, scope: !18414)
!18446 = !DILocation(line: 739, column: 11, scope: !18414)
!18447 = !DILocation(line: 739, column: 9, scope: !18414)
!18448 = !DILocation(line: 740, column: 9, scope: !18449)
!18449 = distinct !DILexicalBlock(scope: !18414, file: !2858, line: 740, column: 9)
!18450 = !DILocation(line: 740, column: 9, scope: !18414)
!18451 = !DILocation(line: 741, column: 20, scope: !18452)
!18452 = distinct !DILexicalBlock(scope: !18449, file: !2858, line: 740, column: 14)
!18453 = !DILocation(line: 741, column: 49, scope: !18452)
!18454 = !DILocation(line: 741, column: 9, scope: !18452)
!18455 = !DILocation(line: 742, column: 9, scope: !18452)
!18456 = !DILocation(line: 745, column: 23, scope: !18414)
!18457 = !DILocation(line: 745, column: 66, scope: !18414)
!18458 = !DILocation(line: 745, column: 12, scope: !18414)
!18459 = !DILocation(line: 745, column: 5, scope: !18414)
!18460 = !DILocation(line: 746, column: 1, scope: !18414)
!18461 = distinct !DISubprogram(name: "parser_iter", scope: !2858, file: !2858, line: 638, type: !16838, scopeLine: 639, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!18462 = !DILocalVariable(name: "parser", arg: 1, scope: !18461, file: !2858, line: 638, type: !16840)
!18463 = !DILocation(line: 638, column: 41, scope: !18461)
!18464 = !DILocalVariable(name: "item", arg: 2, scope: !18461, file: !2858, line: 638, type: !16841)
!18465 = !DILocation(line: 638, column: 62, scope: !18461)
!18466 = !DILocation(line: 640, column: 9, scope: !18467)
!18467 = distinct !DILexicalBlock(scope: !18461, file: !2858, line: 640, column: 9)
!18468 = !DILocation(line: 640, column: 15, scope: !18467)
!18469 = !DILocation(line: 640, column: 20, scope: !18467)
!18470 = !DILocation(line: 640, column: 9, scope: !18461)
!18471 = !DILocalVariable(name: "negate", scope: !18472, file: !2858, line: 641, type: !2921)
!18472 = distinct !DILexicalBlock(scope: !18467, file: !2858, line: 640, column: 40)
!18473 = !DILocation(line: 641, column: 20, scope: !18472)
!18474 = !DILocation(line: 641, column: 29, scope: !18472)
!18475 = !DILocation(line: 641, column: 37, scope: !18472)
!18476 = !DILocation(line: 641, column: 43, scope: !18472)
!18477 = !DILocalVariable(name: "symname", scope: !18472, file: !2858, line: 642, type: !205)
!18478 = !DILocation(line: 642, column: 21, scope: !18472)
!18479 = !DILocalVariable(name: "__old", scope: !18480, file: !2858, line: 642, type: !205)
!18480 = distinct !DILexicalBlock(scope: !18472, file: !2858, line: 642, column: 31)
!18481 = !DILocation(line: 642, column: 31, scope: !18480)
!18482 = !DILocalVariable(name: "__len", scope: !18480, file: !2858, line: 642, type: !55)
!18483 = !DILocalVariable(name: "__new", scope: !18480, file: !2858, line: 642, type: !52)
!18484 = !DILocalVariable(name: "symbol", scope: !18472, file: !2858, line: 643, type: !15134)
!18485 = !DILocation(line: 643, column: 32, scope: !18472)
!18486 = !DILocation(line: 643, column: 55, scope: !18472)
!18487 = !DILocation(line: 643, column: 63, scope: !18472)
!18488 = !DILocation(line: 643, column: 41, scope: !18472)
!18489 = !DILocation(line: 644, column: 14, scope: !18490)
!18490 = distinct !DILexicalBlock(scope: !18472, file: !2858, line: 644, column: 13)
!18491 = !DILocation(line: 644, column: 13, scope: !18472)
!18492 = !DILocation(line: 645, column: 31, scope: !18493)
!18493 = distinct !DILexicalBlock(scope: !18490, file: !2858, line: 644, column: 22)
!18494 = !DILocation(line: 645, column: 68, scope: !18493)
!18495 = !DILocation(line: 645, column: 74, scope: !18493)
!18496 = !DILocation(line: 645, column: 80, scope: !18493)
!18497 = !DILocation(line: 645, column: 63, scope: !18493)
!18498 = !DILocation(line: 646, column: 17, scope: !18493)
!18499 = !DILocation(line: 646, column: 23, scope: !18493)
!18500 = !DILocation(line: 646, column: 29, scope: !18493)
!18501 = !DILocation(line: 645, column: 20, scope: !18493)
!18502 = !DILocation(line: 645, column: 13, scope: !18493)
!18503 = !DILocation(line: 649, column: 29, scope: !18504)
!18504 = distinct !DILexicalBlock(scope: !18472, file: !2858, line: 649, column: 13)
!18505 = !DILocation(line: 649, column: 14, scope: !18504)
!18506 = !DILocation(line: 649, column: 13, scope: !18472)
!18507 = !DILocation(line: 650, column: 31, scope: !18504)
!18508 = !DILocation(line: 650, column: 20, scope: !18504)
!18509 = !DILocation(line: 650, column: 13, scope: !18504)
!18510 = !DILocalVariable(name: "r", scope: !18472, file: !2858, line: 652, type: !34)
!18511 = !DILocation(line: 652, column: 13, scope: !18472)
!18512 = !DILocation(line: 652, column: 29, scope: !18472)
!18513 = !DILocation(line: 652, column: 37, scope: !18472)
!18514 = !DILocation(line: 652, column: 45, scope: !18472)
!18515 = !DILocation(line: 652, column: 17, scope: !18472)
!18516 = !DILocation(line: 653, column: 13, scope: !18517)
!18517 = distinct !DILexicalBlock(scope: !18472, file: !2858, line: 653, column: 13)
!18518 = !DILocation(line: 653, column: 15, scope: !18517)
!18519 = !DILocation(line: 653, column: 13, scope: !18472)
!18520 = !DILocation(line: 654, column: 17, scope: !18521)
!18521 = distinct !DILexicalBlock(scope: !18522, file: !2858, line: 654, column: 17)
!18522 = distinct !DILexicalBlock(scope: !18517, file: !2858, line: 653, column: 20)
!18523 = !DILocation(line: 654, column: 19, scope: !18521)
!18524 = !DILocation(line: 654, column: 17, scope: !18522)
!18525 = !DILocation(line: 655, column: 35, scope: !18521)
!18526 = !DILocation(line: 655, column: 87, scope: !18521)
!18527 = !DILocation(line: 655, column: 24, scope: !18521)
!18528 = !DILocation(line: 655, column: 17, scope: !18521)
!18529 = !DILocation(line: 656, column: 31, scope: !18522)
!18530 = !DILocation(line: 656, column: 20, scope: !18522)
!18531 = !DILocation(line: 656, column: 13, scope: !18522)
!18532 = !DILocation(line: 659, column: 20, scope: !18472)
!18533 = !DILocation(line: 659, column: 47, scope: !18472)
!18534 = !DILocation(line: 659, column: 54, scope: !18472)
!18535 = !DILocation(line: 659, column: 71, scope: !18472)
!18536 = !DILocation(line: 659, column: 9, scope: !18472)
!18537 = !DILocation(line: 661, column: 26, scope: !18472)
!18538 = !DILocation(line: 661, column: 34, scope: !18472)
!18539 = !DILocation(line: 661, column: 9, scope: !18472)
!18540 = !DILocation(line: 662, column: 9, scope: !18472)
!18541 = !DILocation(line: 662, column: 17, scope: !18472)
!18542 = !DILocation(line: 662, column: 23, scope: !18472)
!18543 = !DILocation(line: 663, column: 9, scope: !18472)
!18544 = !DILocation(line: 666, column: 30, scope: !18461)
!18545 = !DILocation(line: 666, column: 12, scope: !18461)
!18546 = !DILocation(line: 666, column: 5, scope: !18461)
!18547 = !DILocation(line: 667, column: 1, scope: !18461)
!18548 = distinct !DISubprogram(name: "parser_negate_iter", scope: !2858, file: !2858, line: 669, type: !16838, scopeLine: 670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!18549 = !DILocalVariable(name: "parser", arg: 1, scope: !18548, file: !2858, line: 669, type: !16840)
!18550 = !DILocation(line: 669, column: 48, scope: !18548)
!18551 = !DILocalVariable(name: "item", arg: 2, scope: !18548, file: !2858, line: 669, type: !16841)
!18552 = !DILocation(line: 669, column: 69, scope: !18548)
!18553 = !DILocation(line: 671, column: 9, scope: !18554)
!18554 = distinct !DILexicalBlock(scope: !18548, file: !2858, line: 671, column: 9)
!18555 = !DILocation(line: 671, column: 15, scope: !18554)
!18556 = !DILocation(line: 671, column: 20, scope: !18554)
!18557 = !DILocation(line: 671, column: 9, scope: !18548)
!18558 = !DILocation(line: 672, column: 34, scope: !18554)
!18559 = !DILocation(line: 672, column: 16, scope: !18554)
!18560 = !DILocation(line: 672, column: 9, scope: !18554)
!18561 = !DILocation(line: 674, column: 5, scope: !18548)
!18562 = !DILocation(line: 674, column: 13, scope: !18548)
!18563 = !DILocation(line: 674, column: 19, scope: !18548)
!18564 = !DILocation(line: 675, column: 5, scope: !18548)
!18565 = !DILocation(line: 676, column: 1, scope: !18548)
!18566 = distinct !DISubprogram(name: "parser_slash", scope: !2858, file: !2858, line: 618, type: !16838, scopeLine: 619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!18567 = !DILocalVariable(name: "parser", arg: 1, scope: !18566, file: !2858, line: 618, type: !16840)
!18568 = !DILocation(line: 618, column: 42, scope: !18566)
!18569 = !DILocalVariable(name: "item", arg: 2, scope: !18566, file: !2858, line: 618, type: !16841)
!18570 = !DILocation(line: 618, column: 63, scope: !18566)
!18571 = !DILocation(line: 620, column: 9, scope: !18572)
!18572 = distinct !DILexicalBlock(scope: !18566, file: !2858, line: 620, column: 9)
!18573 = !DILocation(line: 620, column: 15, scope: !18572)
!18574 = !DILocation(line: 620, column: 20, scope: !18572)
!18575 = !DILocation(line: 620, column: 9, scope: !18566)
!18576 = !DILocalVariable(name: "next", scope: !18577, file: !2858, line: 621, type: !16841)
!18577 = distinct !DILexicalBlock(scope: !18572, file: !2858, line: 620, column: 40)
!18578 = !DILocation(line: 621, column: 22, scope: !18577)
!18579 = !DILocation(line: 623, column: 24, scope: !18580)
!18580 = distinct !DILexicalBlock(scope: !18577, file: !2858, line: 623, column: 13)
!18581 = !DILocation(line: 623, column: 32, scope: !18580)
!18582 = !DILocation(line: 623, column: 14, scope: !18580)
!18583 = !DILocation(line: 623, column: 13, scope: !18577)
!18584 = !DILocation(line: 624, column: 51, scope: !18580)
!18585 = !DILocation(line: 624, column: 57, scope: !18580)
!18586 = !DILocation(line: 624, column: 20, scope: !18580)
!18587 = !DILocation(line: 624, column: 13, scope: !18580)
!18588 = !DILocation(line: 626, column: 13, scope: !18589)
!18589 = distinct !DILexicalBlock(scope: !18577, file: !2858, line: 626, column: 13)
!18590 = !DILocation(line: 626, column: 19, scope: !18589)
!18591 = !DILocation(line: 626, column: 24, scope: !18589)
!18592 = !DILocation(line: 626, column: 13, scope: !18577)
!18593 = !DILocation(line: 627, column: 36, scope: !18589)
!18594 = !DILocation(line: 627, column: 44, scope: !18589)
!18595 = !DILocation(line: 627, column: 20, scope: !18589)
!18596 = !DILocation(line: 627, column: 13, scope: !18589)
!18597 = !DILocation(line: 629, column: 13, scope: !18598)
!18598 = distinct !DILexicalBlock(scope: !18577, file: !2858, line: 629, column: 13)
!18599 = !DILocation(line: 629, column: 19, scope: !18598)
!18600 = !DILocation(line: 629, column: 24, scope: !18598)
!18601 = !DILocation(line: 629, column: 13, scope: !18577)
!18602 = !DILocation(line: 630, column: 45, scope: !18598)
!18603 = !DILocation(line: 630, column: 53, scope: !18598)
!18604 = !DILocation(line: 630, column: 20, scope: !18598)
!18605 = !DILocation(line: 630, column: 13, scope: !18598)
!18606 = !DILocation(line: 632, column: 47, scope: !18577)
!18607 = !DILocation(line: 632, column: 53, scope: !18577)
!18608 = !DILocation(line: 632, column: 16, scope: !18577)
!18609 = !DILocation(line: 632, column: 9, scope: !18577)
!18610 = !DILocation(line: 635, column: 30, scope: !18566)
!18611 = !DILocation(line: 635, column: 12, scope: !18566)
!18612 = !DILocation(line: 635, column: 5, scope: !18566)
!18613 = !DILocation(line: 636, column: 1, scope: !18566)
!18614 = distinct !DISubprogram(name: "unexpected_lexeme_or_lex_error", scope: !2858, file: !2858, line: 484, type: !18615, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!18615 = !DISubroutineType(types: !18616)
!18616 = !{!111, !16841, !16841}
!18617 = !DILocalVariable(name: "item", arg: 1, scope: !18614, file: !2858, line: 484, type: !16841)
!18618 = !DILocation(line: 484, column: 58, scope: !18614)
!18619 = !DILocalVariable(name: "lex_error", arg: 2, scope: !18614, file: !2858, line: 484, type: !16841)
!18620 = !DILocation(line: 484, column: 77, scope: !18614)
!18621 = !DILocation(line: 486, column: 9, scope: !18622)
!18622 = distinct !DILexicalBlock(scope: !18614, file: !2858, line: 486, column: 9)
!18623 = !DILocation(line: 486, column: 19, scope: !18622)
!18624 = !DILocation(line: 486, column: 23, scope: !18622)
!18625 = !DILocation(line: 486, column: 34, scope: !18622)
!18626 = !DILocation(line: 486, column: 39, scope: !18622)
!18627 = !DILocation(line: 486, column: 53, scope: !18622)
!18628 = !DILocation(line: 486, column: 56, scope: !18622)
!18629 = !DILocation(line: 486, column: 67, scope: !18622)
!18630 = !DILocation(line: 486, column: 72, scope: !18622)
!18631 = !DILocation(line: 486, column: 9, scope: !18614)
!18632 = !DILocation(line: 487, column: 10, scope: !18633)
!18633 = distinct !DILexicalBlock(scope: !18622, file: !2858, line: 486, column: 86)
!18634 = !DILocation(line: 487, column: 18, scope: !18633)
!18635 = !DILocation(line: 487, column: 17, scope: !18633)
!18636 = !DILocation(line: 488, column: 9, scope: !18633)
!18637 = !DILocation(line: 491, column: 30, scope: !18614)
!18638 = !DILocation(line: 491, column: 12, scope: !18614)
!18639 = !DILocation(line: 491, column: 5, scope: !18614)
!18640 = !DILocation(line: 492, column: 1, scope: !18614)
!18641 = distinct !DISubprogram(name: "parser_end_iter", scope: !2858, file: !2858, line: 556, type: !16838, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!18642 = !DILocalVariable(name: "parser", arg: 1, scope: !18641, file: !2858, line: 556, type: !16840)
!18643 = !DILocation(line: 556, column: 45, scope: !18641)
!18644 = !DILocalVariable(name: "item", arg: 2, scope: !18641, file: !2858, line: 556, type: !16841)
!18645 = !DILocation(line: 556, column: 66, scope: !18641)
!18646 = !DILocalVariable(name: "iter", scope: !18641, file: !2858, line: 558, type: !2999)
!18647 = !DILocation(line: 558, column: 19, scope: !18641)
!18648 = !DILocalVariable(name: "symbol", scope: !18641, file: !2858, line: 559, type: !15134)
!18649 = !DILocation(line: 559, column: 28, scope: !18641)
!18650 = !DILocalVariable(name: "idx", scope: !18641, file: !2858, line: 560, type: !2963)
!18651 = !DILocation(line: 560, column: 13, scope: !18641)
!18652 = !DILocation(line: 562, column: 35, scope: !18653)
!18653 = distinct !DILexicalBlock(scope: !18641, file: !2858, line: 562, column: 9)
!18654 = !DILocation(line: 562, column: 43, scope: !18653)
!18655 = !DILocation(line: 562, column: 10, scope: !18653)
!18656 = !DILocation(line: 562, column: 9, scope: !18641)
!18657 = !DILocation(line: 563, column: 9, scope: !18653)
!18658 = !DILocation(line: 565, column: 28, scope: !18641)
!18659 = !DILocalVariable(name: "__old", scope: !18660, file: !2858, line: 565, type: !205)
!18660 = distinct !DILexicalBlock(scope: !18641, file: !2858, line: 565, column: 36)
!18661 = !DILocation(line: 565, column: 36, scope: !18660)
!18662 = !DILocalVariable(name: "__len", scope: !18660, file: !2858, line: 565, type: !55)
!18663 = !DILocalVariable(name: "__new", scope: !18660, file: !2858, line: 565, type: !52)
!18664 = !DILocation(line: 565, column: 14, scope: !18641)
!18665 = !DILocation(line: 565, column: 12, scope: !18641)
!18666 = !DILocation(line: 566, column: 10, scope: !18667)
!18667 = distinct !DILexicalBlock(scope: !18641, file: !2858, line: 566, column: 9)
!18668 = !DILocation(line: 566, column: 9, scope: !18641)
!18669 = !DILocation(line: 567, column: 27, scope: !18670)
!18670 = distinct !DILexicalBlock(scope: !18667, file: !2858, line: 566, column: 18)
!18671 = !DILocation(line: 567, column: 64, scope: !18670)
!18672 = !DILocation(line: 567, column: 70, scope: !18670)
!18673 = !DILocation(line: 567, column: 76, scope: !18670)
!18674 = !DILocation(line: 567, column: 59, scope: !18670)
!18675 = !DILocation(line: 568, column: 13, scope: !18670)
!18676 = !DILocation(line: 568, column: 19, scope: !18670)
!18677 = !DILocation(line: 568, column: 25, scope: !18670)
!18678 = !DILocation(line: 567, column: 16, scope: !18670)
!18679 = !DILocation(line: 567, column: 9, scope: !18670)
!18680 = !DILocation(line: 571, column: 10, scope: !18681)
!18681 = distinct !DILexicalBlock(scope: !18641, file: !2858, line: 571, column: 9)
!18682 = !DILocation(line: 571, column: 18, scope: !18681)
!18683 = !DILocation(line: 571, column: 25, scope: !18681)
!18684 = !DILocation(line: 571, column: 9, scope: !18641)
!18685 = !DILocation(line: 572, column: 27, scope: !18681)
!18686 = !DILocation(line: 572, column: 16, scope: !18681)
!18687 = !DILocation(line: 572, column: 9, scope: !18681)
!18688 = !DILocation(line: 573, column: 25, scope: !18689)
!18689 = distinct !DILexicalBlock(scope: !18641, file: !2858, line: 573, column: 5)
!18690 = !DILocation(line: 573, column: 33, scope: !18689)
!18691 = !DILocation(line: 573, column: 40, scope: !18689)
!18692 = !DILocation(line: 573, column: 45, scope: !18689)
!18693 = !DILocation(line: 573, column: 14, scope: !18689)
!18694 = !DILocation(line: 573, column: 10, scope: !18689)
!18695 = !DILocation(line: 573, column: 50, scope: !18696)
!18696 = distinct !DILexicalBlock(scope: !18689, file: !2858, line: 573, column: 5)
!18697 = !DILocation(line: 573, column: 54, scope: !18696)
!18698 = !DILocation(line: 573, column: 5, scope: !18689)
!18699 = !DILocation(line: 574, column: 17, scope: !18700)
!18700 = distinct !DILexicalBlock(scope: !18696, file: !2858, line: 573, column: 67)
!18701 = !DILocation(line: 574, column: 25, scope: !18700)
!18702 = !DILocation(line: 574, column: 32, scope: !18700)
!18703 = !DILocation(line: 574, column: 37, scope: !18700)
!18704 = !DILocation(line: 574, column: 14, scope: !18700)
!18705 = !DILocation(line: 576, column: 13, scope: !18706)
!18706 = distinct !DILexicalBlock(scope: !18700, file: !2858, line: 576, column: 13)
!18707 = !DILocation(line: 576, column: 19, scope: !18706)
!18708 = !DILocation(line: 576, column: 26, scope: !18706)
!18709 = !DILocation(line: 576, column: 13, scope: !18700)
!18710 = !DILocation(line: 577, column: 13, scope: !18706)
!18711 = !DILocation(line: 578, column: 13, scope: !18712)
!18712 = distinct !DILexicalBlock(scope: !18700, file: !2858, line: 578, column: 13)
!18713 = !DILocation(line: 578, column: 19, scope: !18712)
!18714 = !DILocation(line: 578, column: 27, scope: !18712)
!18715 = !DILocation(line: 578, column: 24, scope: !18712)
!18716 = !DILocation(line: 578, column: 13, scope: !18700)
!18717 = !DILocation(line: 579, column: 24, scope: !18718)
!18718 = distinct !DILexicalBlock(scope: !18712, file: !2858, line: 578, column: 35)
!18719 = !DILocation(line: 579, column: 52, scope: !18718)
!18720 = !DILocation(line: 579, column: 13, scope: !18718)
!18721 = !DILocation(line: 580, column: 24, scope: !18718)
!18722 = !DILocation(line: 580, column: 13, scope: !18718)
!18723 = !DILocation(line: 581, column: 13, scope: !18718)
!18724 = !DILocation(line: 583, column: 5, scope: !18700)
!18725 = !DILocation(line: 573, column: 63, scope: !18696)
!18726 = !DILocation(line: 573, column: 5, scope: !18696)
!18727 = distinct !{!18727, !18698, !18728, !3413}
!18728 = !DILocation(line: 583, column: 5, scope: !18689)
!18729 = !DILocation(line: 585, column: 23, scope: !18641)
!18730 = !DILocation(line: 585, column: 62, scope: !18641)
!18731 = !DILocation(line: 585, column: 68, scope: !18641)
!18732 = !DILocation(line: 585, column: 74, scope: !18641)
!18733 = !DILocation(line: 585, column: 57, scope: !18641)
!18734 = !DILocation(line: 585, column: 79, scope: !18641)
!18735 = !DILocation(line: 585, column: 85, scope: !18641)
!18736 = !DILocation(line: 585, column: 91, scope: !18641)
!18737 = !DILocation(line: 585, column: 12, scope: !18641)
!18738 = !DILocation(line: 585, column: 5, scope: !18641)
!18739 = !DILocation(line: 586, column: 1, scope: !18641)
!18740 = distinct !DISubprogram(name: "parser_end_var_not_empty", scope: !2858, file: !2858, line: 588, type: !16838, scopeLine: 589, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!18741 = !DILocalVariable(name: "parser", arg: 1, scope: !18740, file: !2858, line: 588, type: !16840)
!18742 = !DILocation(line: 588, column: 54, scope: !18740)
!18743 = !DILocalVariable(name: "item", arg: 2, scope: !18740, file: !2858, line: 588, type: !16841)
!18744 = !DILocation(line: 588, column: 75, scope: !18740)
!18745 = !DILocalVariable(name: "iter", scope: !18740, file: !2858, line: 590, type: !2999)
!18746 = !DILocation(line: 590, column: 19, scope: !18740)
!18747 = !DILocalVariable(name: "symbol", scope: !18740, file: !2858, line: 591, type: !15134)
!18748 = !DILocation(line: 591, column: 28, scope: !18740)
!18749 = !DILocalVariable(name: "idx", scope: !18740, file: !2858, line: 592, type: !2963)
!18750 = !DILocation(line: 592, column: 13, scope: !18740)
!18751 = !DILocation(line: 594, column: 25, scope: !18752)
!18752 = distinct !DILexicalBlock(scope: !18740, file: !2858, line: 594, column: 9)
!18753 = !DILocation(line: 594, column: 10, scope: !18752)
!18754 = !DILocation(line: 594, column: 9, scope: !18740)
!18755 = !DILocation(line: 595, column: 34, scope: !18752)
!18756 = !DILocation(line: 595, column: 16, scope: !18752)
!18757 = !DILocation(line: 595, column: 9, scope: !18752)
!18758 = !DILocation(line: 596, column: 35, scope: !18759)
!18759 = distinct !DILexicalBlock(scope: !18740, file: !2858, line: 596, column: 9)
!18760 = !DILocation(line: 596, column: 43, scope: !18759)
!18761 = !DILocation(line: 596, column: 10, scope: !18759)
!18762 = !DILocation(line: 596, column: 9, scope: !18740)
!18763 = !DILocation(line: 597, column: 9, scope: !18759)
!18764 = !DILocation(line: 599, column: 28, scope: !18740)
!18765 = !DILocalVariable(name: "__old", scope: !18766, file: !2858, line: 599, type: !205)
!18766 = distinct !DILexicalBlock(scope: !18740, file: !2858, line: 599, column: 36)
!18767 = !DILocation(line: 599, column: 36, scope: !18766)
!18768 = !DILocalVariable(name: "__len", scope: !18766, file: !2858, line: 599, type: !55)
!18769 = !DILocalVariable(name: "__new", scope: !18766, file: !2858, line: 599, type: !52)
!18770 = !DILocation(line: 599, column: 14, scope: !18740)
!18771 = !DILocation(line: 599, column: 12, scope: !18740)
!18772 = !DILocation(line: 600, column: 10, scope: !18773)
!18773 = distinct !DILexicalBlock(scope: !18740, file: !2858, line: 600, column: 9)
!18774 = !DILocation(line: 600, column: 9, scope: !18740)
!18775 = !DILocation(line: 601, column: 27, scope: !18776)
!18776 = distinct !DILexicalBlock(scope: !18773, file: !2858, line: 600, column: 18)
!18777 = !DILocation(line: 601, column: 64, scope: !18776)
!18778 = !DILocation(line: 601, column: 70, scope: !18776)
!18779 = !DILocation(line: 601, column: 76, scope: !18776)
!18780 = !DILocation(line: 601, column: 59, scope: !18776)
!18781 = !DILocation(line: 602, column: 13, scope: !18776)
!18782 = !DILocation(line: 602, column: 19, scope: !18776)
!18783 = !DILocation(line: 602, column: 25, scope: !18776)
!18784 = !DILocation(line: 601, column: 16, scope: !18776)
!18785 = !DILocation(line: 601, column: 9, scope: !18776)
!18786 = !DILocation(line: 605, column: 25, scope: !18787)
!18787 = distinct !DILexicalBlock(scope: !18740, file: !2858, line: 605, column: 5)
!18788 = !DILocation(line: 605, column: 33, scope: !18787)
!18789 = !DILocation(line: 605, column: 40, scope: !18787)
!18790 = !DILocation(line: 605, column: 45, scope: !18787)
!18791 = !DILocation(line: 605, column: 14, scope: !18787)
!18792 = !DILocation(line: 605, column: 10, scope: !18787)
!18793 = !DILocation(line: 605, column: 50, scope: !18794)
!18794 = distinct !DILexicalBlock(scope: !18787, file: !2858, line: 605, column: 5)
!18795 = !DILocation(line: 605, column: 54, scope: !18794)
!18796 = !DILocation(line: 605, column: 5, scope: !18787)
!18797 = !DILocation(line: 606, column: 17, scope: !18798)
!18798 = distinct !DILexicalBlock(scope: !18794, file: !2858, line: 605, column: 67)
!18799 = !DILocation(line: 606, column: 25, scope: !18798)
!18800 = !DILocation(line: 606, column: 32, scope: !18798)
!18801 = !DILocation(line: 606, column: 37, scope: !18798)
!18802 = !DILocation(line: 606, column: 14, scope: !18798)
!18803 = !DILocation(line: 607, column: 13, scope: !18804)
!18804 = distinct !DILexicalBlock(scope: !18798, file: !2858, line: 607, column: 13)
!18805 = !DILocation(line: 607, column: 19, scope: !18804)
!18806 = !DILocation(line: 607, column: 26, scope: !18804)
!18807 = !DILocation(line: 607, column: 13, scope: !18798)
!18808 = !DILocation(line: 608, column: 13, scope: !18804)
!18809 = !DILocation(line: 609, column: 13, scope: !18810)
!18810 = distinct !DILexicalBlock(scope: !18798, file: !2858, line: 609, column: 13)
!18811 = !DILocation(line: 609, column: 19, scope: !18810)
!18812 = !DILocation(line: 609, column: 27, scope: !18810)
!18813 = !DILocation(line: 609, column: 24, scope: !18810)
!18814 = !DILocation(line: 609, column: 13, scope: !18798)
!18815 = !DILocation(line: 610, column: 24, scope: !18816)
!18816 = distinct !DILexicalBlock(scope: !18810, file: !2858, line: 609, column: 35)
!18817 = !DILocation(line: 610, column: 69, scope: !18816)
!18818 = !DILocation(line: 610, column: 13, scope: !18816)
!18819 = !DILocation(line: 611, column: 13, scope: !18816)
!18820 = !DILocation(line: 613, column: 5, scope: !18798)
!18821 = !DILocation(line: 605, column: 63, scope: !18794)
!18822 = !DILocation(line: 605, column: 5, scope: !18794)
!18823 = distinct !{!18823, !18796, !18824, !3413}
!18824 = !DILocation(line: 613, column: 5, scope: !18787)
!18825 = !DILocation(line: 615, column: 23, scope: !18740)
!18826 = !DILocation(line: 615, column: 62, scope: !18740)
!18827 = !DILocation(line: 615, column: 68, scope: !18740)
!18828 = !DILocation(line: 615, column: 74, scope: !18740)
!18829 = !DILocation(line: 615, column: 57, scope: !18740)
!18830 = !DILocation(line: 615, column: 79, scope: !18740)
!18831 = !DILocation(line: 615, column: 85, scope: !18740)
!18832 = !DILocation(line: 615, column: 91, scope: !18740)
!18833 = !DILocation(line: 615, column: 12, scope: !18740)
!18834 = !DILocation(line: 615, column: 5, scope: !18740)
!18835 = !DILocation(line: 616, column: 1, scope: !18740)
!18836 = distinct !DISubprogram(name: "parser_next_is", scope: !2858, file: !2858, line: 494, type: !18837, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!18837 = !DISubroutineType(types: !18838)
!18838 = !{!137, !16840, !2927}
!18839 = !DILocalVariable(name: "parser", arg: 1, scope: !18836, file: !2858, line: 494, type: !16840)
!18840 = !DILocation(line: 494, column: 43, scope: !18836)
!18841 = !DILocalVariable(name: "type", arg: 2, scope: !18836, file: !2858, line: 494, type: !2927)
!18842 = !DILocation(line: 494, column: 66, scope: !18836)
!18843 = !DILocalVariable(name: "item", scope: !18836, file: !2858, line: 496, type: !16841)
!18844 = !DILocation(line: 496, column: 18, scope: !18836)
!18845 = !DILocation(line: 497, column: 22, scope: !18836)
!18846 = !DILocation(line: 497, column: 30, scope: !18836)
!18847 = !DILocation(line: 497, column: 12, scope: !18836)
!18848 = !DILocation(line: 497, column: 46, scope: !18836)
!18849 = !DILocation(line: 497, column: 52, scope: !18836)
!18850 = !DILocation(line: 497, column: 60, scope: !18836)
!18851 = !DILocation(line: 497, column: 57, scope: !18836)
!18852 = !DILocation(line: 497, column: 5, scope: !18836)
!18853 = distinct !DISubprogram(name: "parser_stack_top_matches", scope: !2858, file: !2858, line: 532, type: !18854, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!18854 = !DISubroutineType(types: !18855)
!18855 = !{!137, !16840, !16841, !2927}
!18856 = !DILocalVariable(name: "parser", arg: 1, scope: !18853, file: !2858, line: 532, type: !16840)
!18857 = !DILocation(line: 532, column: 53, scope: !18853)
!18858 = !DILocalVariable(name: "item", arg: 2, scope: !18853, file: !2858, line: 532, type: !16841)
!18859 = !DILocation(line: 532, column: 74, scope: !18853)
!18860 = !DILocalVariable(name: "type", arg: 3, scope: !18853, file: !2858, line: 532, type: !2927)
!18861 = !DILocation(line: 532, column: 95, scope: !18853)
!18862 = !DILocation(line: 534, column: 21, scope: !18863)
!18863 = distinct !DILexicalBlock(scope: !18853, file: !2858, line: 534, column: 9)
!18864 = !DILocation(line: 534, column: 29, scope: !18863)
!18865 = !DILocation(line: 534, column: 9, scope: !18863)
!18866 = !DILocation(line: 534, column: 9, scope: !18853)
!18867 = !DILocation(line: 535, column: 20, scope: !18868)
!18868 = distinct !DILexicalBlock(scope: !18863, file: !2858, line: 534, column: 37)
!18869 = !DILocation(line: 535, column: 55, scope: !18868)
!18870 = !DILocation(line: 535, column: 61, scope: !18868)
!18871 = !DILocation(line: 535, column: 67, scope: !18868)
!18872 = !DILocation(line: 535, column: 50, scope: !18868)
!18873 = !DILocation(line: 535, column: 72, scope: !18868)
!18874 = !DILocation(line: 535, column: 78, scope: !18868)
!18875 = !DILocation(line: 535, column: 84, scope: !18868)
!18876 = !DILocation(line: 535, column: 9, scope: !18868)
!18877 = !DILocation(line: 536, column: 9, scope: !18868)
!18878 = !DILocalVariable(name: "stacked_item", scope: !18853, file: !2858, line: 539, type: !2966)
!18879 = !DILocation(line: 539, column: 26, scope: !18853)
!18880 = !DILocation(line: 539, column: 64, scope: !18853)
!18881 = !DILocation(line: 539, column: 72, scope: !18853)
!18882 = !DILocation(line: 539, column: 78, scope: !18853)
!18883 = !DILocation(line: 539, column: 80, scope: !18853)
!18884 = !DILocalVariable(name: "matches", scope: !18853, file: !2858, line: 540, type: !137)
!18885 = !DILocation(line: 540, column: 10, scope: !18853)
!18886 = !DILocation(line: 540, column: 21, scope: !18853)
!18887 = !DILocation(line: 540, column: 35, scope: !18853)
!18888 = !DILocation(line: 540, column: 40, scope: !18853)
!18889 = !DILocation(line: 540, column: 48, scope: !18853)
!18890 = !DILocation(line: 540, column: 45, scope: !18853)
!18891 = !DILocation(line: 541, column: 13, scope: !18853)
!18892 = !DILocation(line: 541, column: 16, scope: !18853)
!18893 = !DILocation(line: 541, column: 22, scope: !18853)
!18894 = !DILocation(line: 541, column: 28, scope: !18853)
!18895 = !DILocation(line: 541, column: 35, scope: !18853)
!18896 = !DILocation(line: 541, column: 49, scope: !18853)
!18897 = !DILocation(line: 541, column: 54, scope: !18853)
!18898 = !DILocation(line: 541, column: 60, scope: !18853)
!18899 = !DILocation(line: 541, column: 32, scope: !18853)
!18900 = !DILocation(line: 542, column: 13, scope: !18853)
!18901 = !DILocation(line: 542, column: 24, scope: !18853)
!18902 = !DILocation(line: 542, column: 38, scope: !18853)
!18903 = !DILocation(line: 542, column: 43, scope: !18853)
!18904 = !DILocation(line: 542, column: 49, scope: !18853)
!18905 = !DILocation(line: 542, column: 56, scope: !18853)
!18906 = !DILocation(line: 542, column: 62, scope: !18853)
!18907 = !DILocation(line: 542, column: 68, scope: !18853)
!18908 = !DILocation(line: 542, column: 75, scope: !18853)
!18909 = !DILocation(line: 542, column: 81, scope: !18853)
!18910 = !DILocation(line: 542, column: 87, scope: !18853)
!18911 = !DILocation(line: 542, column: 17, scope: !18853)
!18912 = !DILocation(line: 542, column: 16, scope: !18853)
!18913 = !DILocation(line: 0, scope: !18853)
!18914 = !DILocation(line: 543, column: 9, scope: !18915)
!18915 = distinct !DILexicalBlock(scope: !18853, file: !2858, line: 543, column: 9)
!18916 = !DILocation(line: 543, column: 9, scope: !18853)
!18917 = !DILocation(line: 544, column: 19, scope: !18918)
!18918 = distinct !DILexicalBlock(scope: !18915, file: !2858, line: 543, column: 18)
!18919 = !DILocation(line: 544, column: 33, scope: !18918)
!18920 = !DILocation(line: 544, column: 9, scope: !18918)
!18921 = !DILocation(line: 545, column: 14, scope: !18918)
!18922 = !DILocation(line: 545, column: 9, scope: !18918)
!18923 = !DILocation(line: 546, column: 9, scope: !18918)
!18924 = !DILocation(line: 549, column: 16, scope: !18853)
!18925 = !DILocation(line: 550, column: 23, scope: !18853)
!18926 = !DILocation(line: 550, column: 37, scope: !18853)
!18927 = !DILocation(line: 550, column: 42, scope: !18853)
!18928 = !DILocation(line: 550, column: 9, scope: !18853)
!18929 = !DILocation(line: 551, column: 14, scope: !18853)
!18930 = !DILocation(line: 551, column: 28, scope: !18853)
!18931 = !DILocation(line: 551, column: 33, scope: !18853)
!18932 = !DILocation(line: 551, column: 39, scope: !18853)
!18933 = !DILocation(line: 551, column: 9, scope: !18853)
!18934 = !DILocation(line: 551, column: 44, scope: !18853)
!18935 = !DILocation(line: 551, column: 58, scope: !18853)
!18936 = !DILocation(line: 551, column: 63, scope: !18853)
!18937 = !DILocation(line: 551, column: 69, scope: !18853)
!18938 = !DILocation(line: 552, column: 14, scope: !18853)
!18939 = !DILocation(line: 552, column: 20, scope: !18853)
!18940 = !DILocation(line: 552, column: 26, scope: !18853)
!18941 = !DILocation(line: 552, column: 9, scope: !18853)
!18942 = !DILocation(line: 552, column: 31, scope: !18853)
!18943 = !DILocation(line: 552, column: 37, scope: !18853)
!18944 = !DILocation(line: 552, column: 43, scope: !18853)
!18945 = !DILocation(line: 549, column: 5, scope: !18853)
!18946 = !DILocation(line: 553, column: 5, scope: !18853)
!18947 = !DILocation(line: 554, column: 1, scope: !18853)
!18948 = distinct !DISubprogram(name: "symtab_lookup", scope: !2858, file: !2858, line: 193, type: !18949, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!18949 = !DISubroutineType(types: !18950)
!18950 = !{!15134, !16840, !205}
!18951 = !DILocalVariable(name: "parser", arg: 1, scope: !18948, file: !2858, line: 193, type: !16840)
!18952 = !DILocation(line: 193, column: 30, scope: !18948)
!18953 = !DILocalVariable(name: "var_name", arg: 2, scope: !18948, file: !2858, line: 193, type: !205)
!18954 = !DILocation(line: 193, column: 50, scope: !18948)
!18955 = !DILocalVariable(name: "tab", scope: !18956, file: !2858, line: 195, type: !16796)
!18956 = distinct !DILexicalBlock(scope: !18948, file: !2858, line: 195, column: 5)
!18957 = !DILocation(line: 195, column: 25, scope: !18956)
!18958 = !DILocation(line: 195, column: 31, scope: !18956)
!18959 = !DILocation(line: 195, column: 39, scope: !18956)
!18960 = !DILocation(line: 195, column: 10, scope: !18956)
!18961 = !DILocation(line: 195, column: 47, scope: !18962)
!18962 = distinct !DILexicalBlock(scope: !18956, file: !2858, line: 195, column: 5)
!18963 = !DILocation(line: 195, column: 5, scope: !18956)
!18964 = !DILocalVariable(name: "var", scope: !18965, file: !2858, line: 196, type: !15134)
!18965 = distinct !DILexicalBlock(scope: !18962, file: !2858, line: 195, column: 69)
!18966 = !DILocation(line: 196, column: 32, scope: !18965)
!18967 = !DILocation(line: 196, column: 48, scope: !18965)
!18968 = !DILocation(line: 196, column: 53, scope: !18965)
!18969 = !DILocation(line: 196, column: 59, scope: !18965)
!18970 = !DILocation(line: 196, column: 38, scope: !18965)
!18971 = !DILocation(line: 197, column: 13, scope: !18972)
!18972 = distinct !DILexicalBlock(scope: !18965, file: !2858, line: 197, column: 13)
!18973 = !DILocation(line: 197, column: 13, scope: !18965)
!18974 = !DILocation(line: 198, column: 20, scope: !18972)
!18975 = !DILocation(line: 198, column: 13, scope: !18972)
!18976 = !DILocation(line: 199, column: 5, scope: !18965)
!18977 = !DILocation(line: 195, column: 58, scope: !18962)
!18978 = !DILocation(line: 195, column: 63, scope: !18962)
!18979 = !DILocation(line: 195, column: 56, scope: !18962)
!18980 = !DILocation(line: 195, column: 5, scope: !18962)
!18981 = distinct !{!18981, !18963, !18982, !3413}
!18982 = !DILocation(line: 199, column: 5, scope: !18956)
!18983 = !DILocation(line: 201, column: 5, scope: !18948)
!18984 = !DILocation(line: 202, column: 1, scope: !18948)
!18985 = distinct !DISubprogram(name: "parser_push_item", scope: !2858, file: !2858, line: 500, type: !18986, scopeLine: 501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!18986 = !DISubroutineType(types: !18987)
!18987 = !{null, !16840, !16841}
!18988 = !DILocalVariable(name: "parser", arg: 1, scope: !18985, file: !2858, line: 500, type: !16840)
!18989 = !DILocation(line: 500, column: 45, scope: !18985)
!18990 = !DILocalVariable(name: "item", arg: 2, scope: !18985, file: !2858, line: 500, type: !16841)
!18991 = !DILocation(line: 500, column: 66, scope: !18985)
!18992 = !DILocalVariable(name: "stacked_item", scope: !18985, file: !2858, line: 502, type: !2966)
!18993 = !DILocation(line: 502, column: 26, scope: !18985)
!18994 = !DILocation(line: 502, column: 41, scope: !18985)
!18995 = !DILocation(line: 503, column: 10, scope: !18996)
!18996 = distinct !DILexicalBlock(scope: !18985, file: !2858, line: 503, column: 9)
!18997 = !DILocation(line: 503, column: 9, scope: !18985)
!18998 = !DILocation(line: 504, column: 9, scope: !18996)
!18999 = !DILocation(line: 506, column: 5, scope: !18985)
!19000 = !DILocation(line: 506, column: 19, scope: !18985)
!19001 = !DILocation(line: 506, column: 27, scope: !18985)
!19002 = !DILocation(line: 506, column: 26, scope: !18985)
!19003 = !DILocation(line: 507, column: 15, scope: !18985)
!19004 = !DILocation(line: 507, column: 23, scope: !18985)
!19005 = !DILocation(line: 507, column: 31, scope: !18985)
!19006 = !DILocation(line: 507, column: 45, scope: !18985)
!19007 = !DILocation(line: 507, column: 5, scope: !18985)
!19008 = !DILocation(line: 508, column: 1, scope: !18985)
!19009 = distinct !DISubprogram(name: "list_add", scope: !659, file: !659, line: 327, type: !19010, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!19010 = !DISubroutineType(types: !19011)
!19011 = !{null, !17673, !2973}
!19012 = !DILocalVariable(name: "h", arg: 1, scope: !19009, file: !659, line: 327, type: !17673)
!19013 = !DILocation(line: 327, column: 47, scope: !19009)
!19014 = !DILocalVariable(name: "n", arg: 2, scope: !19009, file: !659, line: 327, type: !2973)
!19015 = !DILocation(line: 327, column: 68, scope: !19009)
!19016 = !DILocation(line: 329, column: 12, scope: !19009)
!19017 = !DILocation(line: 329, column: 15, scope: !19009)
!19018 = !DILocation(line: 329, column: 17, scope: !19009)
!19019 = !DILocation(line: 329, column: 2, scope: !19009)
!19020 = !DILocation(line: 329, column: 5, scope: !19009)
!19021 = !DILocation(line: 329, column: 10, scope: !19009)
!19022 = !DILocation(line: 330, column: 13, scope: !19009)
!19023 = !DILocation(line: 330, column: 16, scope: !19009)
!19024 = !DILocation(line: 330, column: 2, scope: !19009)
!19025 = !DILocation(line: 330, column: 5, scope: !19009)
!19026 = !DILocation(line: 330, column: 10, scope: !19009)
!19027 = !DILocation(line: 331, column: 20, scope: !19009)
!19028 = !DILocation(line: 331, column: 2, scope: !19009)
!19029 = !DILocation(line: 331, column: 5, scope: !19009)
!19030 = !DILocation(line: 331, column: 7, scope: !19009)
!19031 = !DILocation(line: 331, column: 13, scope: !19009)
!19032 = !DILocation(line: 331, column: 18, scope: !19009)
!19033 = !DILocation(line: 332, column: 14, scope: !19009)
!19034 = !DILocation(line: 332, column: 2, scope: !19009)
!19035 = !DILocation(line: 332, column: 5, scope: !19009)
!19036 = !DILocation(line: 332, column: 7, scope: !19009)
!19037 = !DILocation(line: 332, column: 12, scope: !19009)
!19038 = !DILocation(line: 333, column: 8, scope: !19009)
!19039 = !DILocation(line: 334, column: 1, scope: !19009)
!19040 = distinct !DISubprogram(name: "lwan_tpl_compile_file", scope: !2858, file: !2858, line: 1126, type: !16754, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!19041 = !DILocalVariable(name: "filename", arg: 1, scope: !19040, file: !2858, line: 1126, type: !205)
!19042 = !DILocation(line: 1126, column: 35, scope: !19040)
!19043 = !DILocalVariable(name: "descriptor", arg: 2, scope: !19040, file: !2858, line: 1126, type: !15147)
!19044 = !DILocation(line: 1126, column: 74, scope: !19040)
!19045 = !DILocalVariable(name: "fd", scope: !19040, file: !2858, line: 1128, type: !34)
!19046 = !DILocation(line: 1128, column: 9, scope: !19040)
!19047 = !DILocalVariable(name: "st", scope: !19040, file: !2858, line: 1129, type: !19048)
!19048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2394, line: 26, size: 1152, elements: !19049)
!19049 = !{!19050, !19051, !19052, !19053, !19054, !19055, !19056, !19057, !19058, !19059, !19060, !19061, !19066, !19067, !19068}
!19050 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !19048, file: !2394, line: 31, baseType: !2397, size: 64)
!19051 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !19048, file: !2394, line: 36, baseType: !2399, size: 64, offset: 64)
!19052 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !19048, file: !2394, line: 44, baseType: !2401, size: 64, offset: 128)
!19053 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !19048, file: !2394, line: 45, baseType: !2403, size: 32, offset: 192)
!19054 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !19048, file: !2394, line: 47, baseType: !2405, size: 32, offset: 224)
!19055 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !19048, file: !2394, line: 48, baseType: !2407, size: 32, offset: 256)
!19056 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !19048, file: !2394, line: 50, baseType: !34, size: 32, offset: 288)
!19057 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !19048, file: !2394, line: 52, baseType: !2397, size: 64, offset: 320)
!19058 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !19048, file: !2394, line: 57, baseType: !188, size: 64, offset: 384)
!19059 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !19048, file: !2394, line: 61, baseType: !2412, size: 64, offset: 448)
!19060 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !19048, file: !2394, line: 63, baseType: !2414, size: 64, offset: 512)
!19061 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !19048, file: !2394, line: 74, baseType: !19062, size: 128, offset: 576)
!19062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2417, line: 11, size: 128, elements: !19063)
!19063 = !{!19064, !19065}
!19064 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !19062, file: !2417, line: 16, baseType: !153, size: 64)
!19065 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !19062, file: !2417, line: 21, baseType: !2421, size: 64, offset: 64)
!19066 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !19048, file: !2394, line: 75, baseType: !19062, size: 128, offset: 704)
!19067 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !19048, file: !2394, line: 76, baseType: !19062, size: 128, offset: 832)
!19068 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !19048, file: !2394, line: 89, baseType: !2425, size: 192, offset: 960)
!19069 = !DILocation(line: 1129, column: 17, scope: !19040)
!19070 = !DILocalVariable(name: "mapped", scope: !19040, file: !2858, line: 1130, type: !52)
!19071 = !DILocation(line: 1130, column: 11, scope: !19040)
!19072 = !DILocalVariable(name: "tpl", scope: !19040, file: !2858, line: 1131, type: !3098)
!19073 = !DILocation(line: 1131, column: 17, scope: !19040)
!19074 = !DILocation(line: 1133, column: 15, scope: !19040)
!19075 = !DILocation(line: 1133, column: 10, scope: !19040)
!19076 = !DILocation(line: 1133, column: 8, scope: !19040)
!19077 = !DILocation(line: 1134, column: 9, scope: !19078)
!19078 = distinct !DILexicalBlock(scope: !19040, file: !2858, line: 1134, column: 9)
!19079 = !DILocation(line: 1134, column: 12, scope: !19078)
!19080 = !DILocation(line: 1134, column: 9, scope: !19040)
!19081 = !DILocation(line: 1135, column: 9, scope: !19078)
!19082 = !DILocation(line: 1137, column: 15, scope: !19083)
!19083 = distinct !DILexicalBlock(scope: !19040, file: !2858, line: 1137, column: 9)
!19084 = !DILocation(line: 1137, column: 9, scope: !19083)
!19085 = !DILocation(line: 1137, column: 24, scope: !19083)
!19086 = !DILocation(line: 1137, column: 9, scope: !19040)
!19087 = !DILocation(line: 1138, column: 9, scope: !19083)
!19088 = !DILocation(line: 1140, column: 36, scope: !19040)
!19089 = !DILocation(line: 1140, column: 68, scope: !19040)
!19090 = !DILocation(line: 1140, column: 14, scope: !19040)
!19091 = !DILocation(line: 1140, column: 12, scope: !19040)
!19092 = !DILocation(line: 1141, column: 9, scope: !19093)
!19093 = distinct !DILexicalBlock(scope: !19040, file: !2858, line: 1141, column: 9)
!19094 = !DILocation(line: 1141, column: 16, scope: !19093)
!19095 = !DILocation(line: 1141, column: 9, scope: !19040)
!19096 = !DILocation(line: 1142, column: 9, scope: !19093)
!19097 = !DILocation(line: 1144, column: 35, scope: !19040)
!19098 = !DILocation(line: 1144, column: 43, scope: !19040)
!19099 = !DILocation(line: 1144, column: 11, scope: !19040)
!19100 = !DILocation(line: 1144, column: 9, scope: !19040)
!19101 = !DILocation(line: 1146, column: 16, scope: !19102)
!19102 = distinct !DILexicalBlock(scope: !19040, file: !2858, line: 1146, column: 9)
!19103 = !DILocation(line: 1146, column: 35, scope: !19102)
!19104 = !DILocation(line: 1146, column: 9, scope: !19102)
!19105 = !DILocation(line: 1146, column: 44, scope: !19102)
!19106 = !DILocation(line: 1146, column: 9, scope: !19040)
!19107 = !DILocation(line: 1147, column: 9, scope: !19102)
!19108 = !DILocation(line: 1146, column: 46, scope: !19102)
!19109 = !DILabel(scope: !19040, name: "close_file", file: !2858, line: 1149)
!19110 = !DILocation(line: 1149, column: 1, scope: !19040)
!19111 = !DILocation(line: 1150, column: 11, scope: !19040)
!19112 = !DILocation(line: 1150, column: 5, scope: !19040)
!19113 = !DILabel(scope: !19040, name: "end", file: !2858, line: 1151)
!19114 = !DILocation(line: 1151, column: 1, scope: !19040)
!19115 = !DILocation(line: 1152, column: 12, scope: !19040)
!19116 = !DILocation(line: 1152, column: 5, scope: !19040)
!19117 = distinct !DISubprogram(name: "lwan_tpl_str_is_empty", scope: !2858, file: !2858, line: 865, type: !2140, scopeLine: 866, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!19118 = !DILocalVariable(name: "ptr", arg: 1, scope: !19117, file: !2858, line: 865, type: !111)
!19119 = !DILocation(line: 865, column: 29, scope: !19117)
!19120 = !DILocation(line: 867, column: 9, scope: !19121)
!19121 = distinct !DILexicalBlock(scope: !19117, file: !2858, line: 867, column: 9)
!19122 = !DILocation(line: 867, column: 9, scope: !19117)
!19123 = !DILocation(line: 868, column: 9, scope: !19121)
!19124 = !DILocalVariable(name: "str", scope: !19117, file: !2858, line: 870, type: !205)
!19125 = !DILocation(line: 870, column: 17, scope: !19117)
!19126 = !DILocation(line: 870, column: 39, scope: !19117)
!19127 = !DILocation(line: 870, column: 23, scope: !19117)
!19128 = !DILocation(line: 871, column: 12, scope: !19117)
!19129 = !DILocation(line: 871, column: 24, scope: !19117)
!19130 = !DILocation(line: 871, column: 28, scope: !19117)
!19131 = !DILocation(line: 871, column: 27, scope: !19117)
!19132 = !DILocation(line: 0, scope: !19117)
!19133 = !DILocation(line: 871, column: 5, scope: !19117)
!19134 = !DILocation(line: 872, column: 1, scope: !19117)
!19135 = distinct !DISubprogram(name: "directory_list_generator", scope: !2153, file: !2153, line: 243, type: !2145, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !286)
!19136 = !DILocalVariable(name: "coro", arg: 1, scope: !19135, file: !2153, line: 243, type: !76)
!19137 = !DILocation(line: 243, column: 34, scope: !19135)
!19138 = !DILocalVariable(name: "dir", scope: !19135, file: !2153, line: 245, type: !19139)
!19139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19140, size: 64)
!19140 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !19141, line: 127, baseType: !19142)
!19141 = !DIFile(filename: "/usr/include/dirent.h", directory: "", checksumkind: CSK_MD5, checksum: "6eb1a2faa0cf53b967234cc6c0fe978e")
!19142 = !DICompositeType(tag: DW_TAG_structure_type, name: "__dirstream", file: !19141, line: 127, flags: DIFlagFwdDecl)
!19143 = !DILocation(line: 245, column: 10, scope: !19135)
!19144 = !DILocalVariable(name: "entry", scope: !19135, file: !2153, line: 246, type: !19145)
!19145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !19146, line: 22, size: 2240, elements: !19147)
!19146 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/dirent.h", directory: "", checksumkind: CSK_MD5, checksum: "bc8b10a1ddd2747862e3ae7b91dbf464")
!19147 = !{!19148, !19149, !19150, !19151, !19152}
!19148 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !19145, file: !19146, line: 25, baseType: !2399, size: 64)
!19149 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !19145, file: !19146, line: 26, baseType: !188, size: 64, offset: 64)
!19150 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !19145, file: !19146, line: 31, baseType: !125, size: 16, offset: 128)
!19151 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !19145, file: !19146, line: 32, baseType: !432, size: 8, offset: 144)
!19152 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !19145, file: !19146, line: 33, baseType: !19153, size: 2048, offset: 152)
!19153 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 2048, elements: !445)
!19154 = !DILocation(line: 246, column: 19, scope: !19135)
!19155 = !DILocalVariable(name: "buffer", scope: !19135, file: !2153, line: 246, type: !19156)
!19156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19145, size: 64)
!19157 = !DILocation(line: 246, column: 27, scope: !19135)
!19158 = !DILocalVariable(name: "fl", scope: !19135, file: !2153, line: 247, type: !19159)
!19159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19160, size: 64)
!19160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_list_t", file: !2153, line: 126, size: 576, elements: !19161)
!19161 = !{!19162, !19163, !19164}
!19162 = !DIDerivedType(tag: DW_TAG_member, name: "full_path", scope: !19160, file: !2153, line: 127, baseType: !205, size: 64)
!19163 = !DIDerivedType(tag: DW_TAG_member, name: "rel_path", scope: !19160, file: !2153, line: 128, baseType: !205, size: 64, offset: 64)
!19164 = !DIDerivedType(tag: DW_TAG_member, name: "file_list", scope: !19160, file: !2153, line: 139, baseType: !19165, size: 448, offset: 128)
!19165 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !19160, file: !2153, line: 129, size: 448, elements: !19166)
!19166 = !{!19167, !19168, !19169, !19170, !19171, !19172, !19173}
!19167 = !DIDerivedType(tag: DW_TAG_member, name: "generator", scope: !19165, file: !2153, line: 130, baseType: !2143, size: 64)
!19168 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !19165, file: !2153, line: 132, baseType: !205, size: 64, offset: 64)
!19169 = !DIDerivedType(tag: DW_TAG_member, name: "icon_alt", scope: !19165, file: !2153, line: 133, baseType: !205, size: 64, offset: 128)
!19170 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !19165, file: !2153, line: 134, baseType: !205, size: 64, offset: 192)
!19171 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !19165, file: !2153, line: 135, baseType: !205, size: 64, offset: 256)
!19172 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !19165, file: !2153, line: 137, baseType: !34, size: 32, offset: 320)
!19173 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !19165, file: !2153, line: 138, baseType: !205, size: 64, offset: 384)
!19174 = !DILocation(line: 247, column: 25, scope: !19135)
!19175 = !DILocation(line: 247, column: 44, scope: !19135)
!19176 = !DILocation(line: 247, column: 30, scope: !19135)
!19177 = !DILocalVariable(name: "fd", scope: !19135, file: !2153, line: 248, type: !34)
!19178 = !DILocation(line: 248, column: 9, scope: !19135)
!19179 = !DILocation(line: 250, column: 19, scope: !19135)
!19180 = !DILocation(line: 250, column: 23, scope: !19135)
!19181 = !DILocation(line: 250, column: 11, scope: !19135)
!19182 = !DILocation(line: 250, column: 9, scope: !19135)
!19183 = !DILocation(line: 251, column: 10, scope: !19184)
!19184 = distinct !DILexicalBlock(scope: !19135, file: !2153, line: 251, column: 9)
!19185 = !DILocation(line: 251, column: 9, scope: !19135)
!19186 = !DILocation(line: 252, column: 9, scope: !19184)
!19187 = !DILocation(line: 254, column: 16, scope: !19135)
!19188 = !DILocation(line: 254, column: 10, scope: !19135)
!19189 = !DILocation(line: 254, column: 8, scope: !19135)
!19190 = !DILocation(line: 255, column: 9, scope: !19191)
!19191 = distinct !DILexicalBlock(scope: !19135, file: !2153, line: 255, column: 9)
!19192 = !DILocation(line: 255, column: 12, scope: !19191)
!19193 = !DILocation(line: 255, column: 9, scope: !19135)
!19194 = !DILocation(line: 256, column: 9, scope: !19191)
!19195 = !DILocation(line: 258, column: 5, scope: !19135)
!19196 = !DILocation(line: 258, column: 23, scope: !19135)
!19197 = !DILocation(line: 258, column: 13, scope: !19135)
!19198 = !DILocation(line: 258, column: 12, scope: !19135)
!19199 = !DILocalVariable(name: "st", scope: !19200, file: !2153, line: 259, type: !2393)
!19200 = distinct !DILexicalBlock(scope: !19135, file: !2153, line: 258, column: 46)
!19201 = !DILocation(line: 259, column: 21, scope: !19200)
!19202 = !DILocation(line: 261, column: 14, scope: !19203)
!19203 = distinct !DILexicalBlock(scope: !19200, file: !2153, line: 261, column: 13)
!19204 = !DILocation(line: 261, column: 13, scope: !19200)
!19205 = !DILocation(line: 262, column: 13, scope: !19203)
!19206 = !DILocation(line: 264, column: 19, scope: !19207)
!19207 = distinct !DILexicalBlock(scope: !19200, file: !2153, line: 264, column: 13)
!19208 = !DILocation(line: 264, column: 13, scope: !19207)
!19209 = !DILocation(line: 264, column: 29, scope: !19207)
!19210 = !DILocation(line: 264, column: 13, scope: !19200)
!19211 = !DILocation(line: 265, column: 13, scope: !19207)
!19212 = distinct !{!19212, !19195, !19213, !3413}
!19213 = !DILocation(line: 300, column: 5, scope: !19135)
!19214 = !DILocation(line: 267, column: 21, scope: !19215)
!19215 = distinct !DILexicalBlock(scope: !19200, file: !2153, line: 267, column: 13)
!19216 = !DILocation(line: 267, column: 31, scope: !19215)
!19217 = !DILocation(line: 267, column: 25, scope: !19215)
!19218 = !DILocation(line: 267, column: 13, scope: !19215)
!19219 = !DILocation(line: 267, column: 47, scope: !19215)
!19220 = !DILocation(line: 267, column: 13, scope: !19200)
!19221 = !DILocation(line: 268, column: 13, scope: !19215)
!19222 = !DILocation(line: 270, column: 13, scope: !19223)
!19223 = distinct !DILexicalBlock(scope: !19200, file: !2153, line: 270, column: 13)
!19224 = !DILocation(line: 270, column: 13, scope: !19200)
!19225 = !DILocation(line: 271, column: 13, scope: !19226)
!19226 = distinct !DILexicalBlock(scope: !19223, file: !2153, line: 270, column: 34)
!19227 = !DILocation(line: 271, column: 17, scope: !19226)
!19228 = !DILocation(line: 271, column: 27, scope: !19226)
!19229 = !DILocation(line: 271, column: 32, scope: !19226)
!19230 = !DILocation(line: 272, column: 13, scope: !19226)
!19231 = !DILocation(line: 272, column: 17, scope: !19226)
!19232 = !DILocation(line: 272, column: 27, scope: !19226)
!19233 = !DILocation(line: 272, column: 36, scope: !19226)
!19234 = !DILocation(line: 273, column: 13, scope: !19226)
!19235 = !DILocation(line: 273, column: 17, scope: !19226)
!19236 = !DILocation(line: 273, column: 27, scope: !19226)
!19237 = !DILocation(line: 273, column: 32, scope: !19226)
!19238 = !DILocation(line: 274, column: 9, scope: !19226)
!19239 = !DILocation(line: 274, column: 20, scope: !19240)
!19240 = distinct !DILexicalBlock(scope: !19223, file: !2153, line: 274, column: 20)
!19241 = !DILocation(line: 274, column: 20, scope: !19223)
!19242 = !DILocation(line: 275, column: 13, scope: !19243)
!19243 = distinct !DILexicalBlock(scope: !19240, file: !2153, line: 274, column: 41)
!19244 = !DILocation(line: 275, column: 17, scope: !19243)
!19245 = !DILocation(line: 275, column: 27, scope: !19243)
!19246 = !DILocation(line: 275, column: 32, scope: !19243)
!19247 = !DILocation(line: 276, column: 13, scope: !19243)
!19248 = !DILocation(line: 276, column: 17, scope: !19243)
!19249 = !DILocation(line: 276, column: 27, scope: !19243)
!19250 = !DILocation(line: 276, column: 36, scope: !19243)
!19251 = !DILocation(line: 277, column: 79, scope: !19243)
!19252 = !DILocation(line: 277, column: 73, scope: !19243)
!19253 = !DILocation(line: 277, column: 34, scope: !19243)
!19254 = !DILocation(line: 277, column: 13, scope: !19243)
!19255 = !DILocation(line: 277, column: 17, scope: !19243)
!19256 = !DILocation(line: 277, column: 27, scope: !19243)
!19257 = !DILocation(line: 277, column: 32, scope: !19243)
!19258 = !DILocation(line: 278, column: 9, scope: !19243)
!19259 = !DILocation(line: 279, column: 13, scope: !19260)
!19260 = distinct !DILexicalBlock(scope: !19240, file: !2153, line: 278, column: 16)
!19261 = !DILocation(line: 282, column: 16, scope: !19262)
!19262 = distinct !DILexicalBlock(scope: !19200, file: !2153, line: 282, column: 13)
!19263 = !DILocation(line: 282, column: 24, scope: !19262)
!19264 = !DILocation(line: 282, column: 13, scope: !19200)
!19265 = !DILocation(line: 283, column: 42, scope: !19266)
!19266 = distinct !DILexicalBlock(scope: !19262, file: !2153, line: 282, column: 32)
!19267 = !DILocation(line: 283, column: 34, scope: !19266)
!19268 = !DILocation(line: 283, column: 13, scope: !19266)
!19269 = !DILocation(line: 283, column: 17, scope: !19266)
!19270 = !DILocation(line: 283, column: 27, scope: !19266)
!19271 = !DILocation(line: 283, column: 32, scope: !19266)
!19272 = !DILocation(line: 284, column: 13, scope: !19266)
!19273 = !DILocation(line: 284, column: 17, scope: !19266)
!19274 = !DILocation(line: 284, column: 27, scope: !19266)
!19275 = !DILocation(line: 284, column: 32, scope: !19266)
!19276 = !DILocation(line: 285, column: 9, scope: !19266)
!19277 = !DILocation(line: 285, column: 23, scope: !19278)
!19278 = distinct !DILexicalBlock(scope: !19262, file: !2153, line: 285, column: 20)
!19279 = !DILocation(line: 285, column: 31, scope: !19278)
!19280 = !DILocation(line: 285, column: 20, scope: !19262)
!19281 = !DILocation(line: 286, column: 43, scope: !19282)
!19282 = distinct !DILexicalBlock(scope: !19278, file: !2153, line: 285, column: 46)
!19283 = !DILocation(line: 286, column: 51, scope: !19282)
!19284 = !DILocation(line: 286, column: 34, scope: !19282)
!19285 = !DILocation(line: 286, column: 13, scope: !19282)
!19286 = !DILocation(line: 286, column: 17, scope: !19282)
!19287 = !DILocation(line: 286, column: 27, scope: !19282)
!19288 = !DILocation(line: 286, column: 32, scope: !19282)
!19289 = !DILocation(line: 287, column: 13, scope: !19282)
!19290 = !DILocation(line: 287, column: 17, scope: !19282)
!19291 = !DILocation(line: 287, column: 27, scope: !19282)
!19292 = !DILocation(line: 287, column: 32, scope: !19282)
!19293 = !DILocation(line: 288, column: 9, scope: !19282)
!19294 = !DILocation(line: 288, column: 23, scope: !19295)
!19295 = distinct !DILexicalBlock(scope: !19278, file: !2153, line: 288, column: 20)
!19296 = !DILocation(line: 288, column: 31, scope: !19295)
!19297 = !DILocation(line: 288, column: 20, scope: !19278)
!19298 = !DILocation(line: 289, column: 43, scope: !19299)
!19299 = distinct !DILexicalBlock(scope: !19295, file: !2153, line: 288, column: 53)
!19300 = !DILocation(line: 289, column: 51, scope: !19299)
!19301 = !DILocation(line: 289, column: 34, scope: !19299)
!19302 = !DILocation(line: 289, column: 13, scope: !19299)
!19303 = !DILocation(line: 289, column: 17, scope: !19299)
!19304 = !DILocation(line: 289, column: 27, scope: !19299)
!19305 = !DILocation(line: 289, column: 32, scope: !19299)
!19306 = !DILocation(line: 290, column: 13, scope: !19299)
!19307 = !DILocation(line: 290, column: 17, scope: !19299)
!19308 = !DILocation(line: 290, column: 27, scope: !19299)
!19309 = !DILocation(line: 290, column: 32, scope: !19299)
!19310 = !DILocation(line: 291, column: 9, scope: !19299)
!19311 = !DILocation(line: 292, column: 43, scope: !19312)
!19312 = distinct !DILexicalBlock(scope: !19295, file: !2153, line: 291, column: 16)
!19313 = !DILocation(line: 292, column: 51, scope: !19312)
!19314 = !DILocation(line: 292, column: 34, scope: !19312)
!19315 = !DILocation(line: 292, column: 13, scope: !19312)
!19316 = !DILocation(line: 292, column: 17, scope: !19312)
!19317 = !DILocation(line: 292, column: 27, scope: !19312)
!19318 = !DILocation(line: 292, column: 32, scope: !19312)
!19319 = !DILocation(line: 293, column: 13, scope: !19312)
!19320 = !DILocation(line: 293, column: 17, scope: !19312)
!19321 = !DILocation(line: 293, column: 27, scope: !19312)
!19322 = !DILocation(line: 293, column: 32, scope: !19312)
!19323 = !DILocation(line: 296, column: 36, scope: !19200)
!19324 = !DILocation(line: 296, column: 30, scope: !19200)
!19325 = !DILocation(line: 296, column: 9, scope: !19200)
!19326 = !DILocation(line: 296, column: 13, scope: !19200)
!19327 = !DILocation(line: 296, column: 23, scope: !19200)
!19328 = !DILocation(line: 296, column: 28, scope: !19200)
!19329 = !DILocation(line: 298, column: 24, scope: !19330)
!19330 = distinct !DILexicalBlock(scope: !19200, file: !2153, line: 298, column: 13)
!19331 = !DILocation(line: 298, column: 13, scope: !19330)
!19332 = !DILocation(line: 298, column: 13, scope: !19200)
!19333 = !DILocation(line: 299, column: 13, scope: !19330)
!19334 = !DILabel(scope: !19135, name: "out", file: !2153, line: 302)
!19335 = !DILocation(line: 302, column: 1, scope: !19135)
!19336 = !DILocation(line: 303, column: 14, scope: !19135)
!19337 = !DILocation(line: 303, column: 5, scope: !19135)
!19338 = !DILocation(line: 304, column: 5, scope: !19135)
!19339 = !DILocation(line: 305, column: 1, scope: !19135)
!19340 = distinct !DISubprogram(name: "lwan_append_int_to_strbuf", scope: !2858, file: !2858, line: 799, type: !15142, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!19341 = !DILocalVariable(name: "buf", arg: 1, scope: !19340, file: !2858, line: 799, type: !2984)
!19342 = !DILocation(line: 799, column: 37, scope: !19340)
!19343 = !DILocalVariable(name: "ptr", arg: 2, scope: !19340, file: !2858, line: 799, type: !111)
!19344 = !DILocation(line: 799, column: 48, scope: !19340)
!19345 = !DILocalVariable(name: "convertbuf", scope: !19340, file: !2858, line: 801, type: !309)
!19346 = !DILocation(line: 801, column: 10, scope: !19340)
!19347 = !DILocalVariable(name: "len", scope: !19340, file: !2858, line: 802, type: !55)
!19348 = !DILocation(line: 802, column: 12, scope: !19340)
!19349 = !DILocalVariable(name: "converted", scope: !19340, file: !2858, line: 803, type: !52)
!19350 = !DILocation(line: 803, column: 11, scope: !19340)
!19351 = !DILocation(line: 805, column: 39, scope: !19340)
!19352 = !DILocation(line: 805, column: 31, scope: !19340)
!19353 = !DILocation(line: 805, column: 44, scope: !19340)
!19354 = !DILocation(line: 805, column: 17, scope: !19340)
!19355 = !DILocation(line: 805, column: 15, scope: !19340)
!19356 = !DILocation(line: 806, column: 23, scope: !19340)
!19357 = !DILocation(line: 806, column: 28, scope: !19340)
!19358 = !DILocation(line: 806, column: 39, scope: !19340)
!19359 = !DILocation(line: 806, column: 5, scope: !19340)
!19360 = !DILocation(line: 807, column: 1, scope: !19340)
!19361 = distinct !DISubprogram(name: "lwan_tpl_int_is_empty", scope: !2858, file: !2858, line: 810, type: !2140, scopeLine: 811, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!19362 = !DILocalVariable(name: "ptr", arg: 1, scope: !19361, file: !2858, line: 810, type: !111)
!19363 = !DILocation(line: 810, column: 29, scope: !19361)
!19364 = !DILocation(line: 812, column: 21, scope: !19361)
!19365 = !DILocation(line: 812, column: 13, scope: !19361)
!19366 = !DILocation(line: 812, column: 26, scope: !19361)
!19367 = !DILocation(line: 812, column: 5, scope: !19361)
!19368 = !DILocalVariable(name: "file_name", arg: 1, scope: !2710, file: !2709, line: 78, type: !205)
!19369 = !DILocation(line: 78, column: 52, scope: !2710)
!19370 = !DILocalVariable(name: "last_dot", scope: !2710, file: !2709, line: 80, type: !52)
!19371 = !DILocation(line: 80, column: 11, scope: !2710)
!19372 = !DILocation(line: 80, column: 30, scope: !2710)
!19373 = !DILocation(line: 80, column: 22, scope: !2710)
!19374 = !DILocation(line: 81, column: 9, scope: !19375)
!19375 = distinct !DILexicalBlock(scope: !2710, file: !2709, line: 81, column: 9)
!19376 = !DILocation(line: 81, column: 9, scope: !2710)
!19377 = !DILocation(line: 82, column: 9, scope: !19375)
!19378 = !DILocation(line: 93, column: 5, scope: !2710)
!19379 = !DILocalVariable(name: "s", arg: 1, scope: !19380, file: !7, line: 68, type: !205)
!19380 = distinct !DISubprogram(name: "string_as_int32", scope: !7, file: !7, line: 68, type: !12614, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2705, retainedNodes: !286)
!19381 = !DILocation(line: 68, column: 58, scope: !19380, inlinedAt: !19382)
!19382 = distinct !DILocation(line: 93, column: 5, scope: !2710)
!19383 = !DILocalVariable(name: "i", scope: !19380, file: !7, line: 70, type: !9675)
!19384 = !DILocation(line: 70, column: 13, scope: !19380, inlinedAt: !19382)
!19385 = !DILocation(line: 71, column: 16, scope: !19380, inlinedAt: !19382)
!19386 = !DILocation(line: 71, column: 5, scope: !19380, inlinedAt: !19382)
!19387 = !DILocation(line: 72, column: 12, scope: !19380, inlinedAt: !19382)
!19388 = !DILocation(line: 94, column: 19, scope: !19389)
!19389 = distinct !DILexicalBlock(scope: !2710, file: !2709, line: 93, column: 31)
!19390 = !DILocation(line: 95, column: 19, scope: !19389)
!19391 = !DILocation(line: 96, column: 19, scope: !19389)
!19392 = !DILocation(line: 97, column: 19, scope: !19389)
!19393 = !DILocation(line: 98, column: 19, scope: !19389)
!19394 = !DILocation(line: 99, column: 19, scope: !19389)
!19395 = !DILocation(line: 102, column: 9, scope: !19396)
!19396 = distinct !DILexicalBlock(scope: !2710, file: !2709, line: 102, column: 9)
!19397 = !DILocation(line: 102, column: 9, scope: !2710)
!19398 = !DILocalVariable(name: "entry", scope: !19399, file: !2709, line: 103, type: !19400)
!19399 = distinct !DILexicalBlock(scope: !19396, file: !2709, line: 102, column: 28)
!19400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2844, size: 64)
!19401 = !DILocation(line: 103, column: 28, scope: !19399)
!19402 = !DILocalVariable(name: "key", scope: !19399, file: !2709, line: 103, type: !2844)
!19403 = !DILocation(line: 103, column: 35, scope: !19399)
!19404 = !DILocation(line: 103, column: 41, scope: !19399)
!19405 = !DILocation(line: 103, column: 56, scope: !19399)
!19406 = !DILocation(line: 103, column: 65, scope: !19399)
!19407 = !DILocation(line: 105, column: 17, scope: !19399)
!19408 = !DILocation(line: 105, column: 15, scope: !19399)
!19409 = !DILocation(line: 107, column: 13, scope: !19410)
!19410 = distinct !DILexicalBlock(scope: !19399, file: !2709, line: 107, column: 13)
!19411 = !DILocation(line: 107, column: 13, scope: !19399)
!19412 = !DILocation(line: 108, column: 20, scope: !19410)
!19413 = !DILocation(line: 108, column: 27, scope: !19410)
!19414 = !DILocation(line: 108, column: 13, scope: !19410)
!19415 = !DILocation(line: 109, column: 5, scope: !19399)
!19416 = !DILabel(scope: !2710, name: "fallback", file: !2709, line: 111)
!19417 = !DILocation(line: 111, column: 1, scope: !2710)
!19418 = !DILocation(line: 112, column: 5, scope: !2710)
!19419 = !DILocation(line: 113, column: 1, scope: !2710)
!19420 = distinct !DISubprogram(name: "compare_mime_entry", scope: !2709, file: !2709, line: 70, type: !463, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2705, retainedNodes: !286)
!19421 = !DILocalVariable(name: "a", arg: 1, scope: !19420, file: !2709, line: 70, type: !465)
!19422 = !DILocation(line: 70, column: 32, scope: !19420)
!19423 = !DILocalVariable(name: "b", arg: 2, scope: !19420, file: !2709, line: 70, type: !465)
!19424 = !DILocation(line: 70, column: 47, scope: !19420)
!19425 = !DILocalVariable(name: "me1", scope: !19420, file: !2709, line: 72, type: !19426)
!19426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19427, size: 64)
!19427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2844)
!19428 = !DILocation(line: 72, column: 30, scope: !19420)
!19429 = !DILocation(line: 72, column: 36, scope: !19420)
!19430 = !DILocalVariable(name: "me2", scope: !19420, file: !2709, line: 73, type: !19426)
!19431 = !DILocation(line: 73, column: 30, scope: !19420)
!19432 = !DILocation(line: 73, column: 36, scope: !19420)
!19433 = !DILocation(line: 74, column: 19, scope: !19420)
!19434 = !DILocation(line: 74, column: 24, scope: !19420)
!19435 = !DILocation(line: 74, column: 35, scope: !19420)
!19436 = !DILocation(line: 74, column: 40, scope: !19420)
!19437 = !DILocation(line: 74, column: 12, scope: !19420)
!19438 = !DILocation(line: 74, column: 5, scope: !19420)
!19439 = distinct !DISubprogram(name: "realpathat2", scope: !3245, file: !3245, line: 38, type: !19440, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3331, retainedNodes: !286)
!19440 = !DISubroutineType(types: !19441)
!19441 = !{!52, !34, !52, !205, !52, !19442}
!19442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19443, size: 64)
!19443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2394, line: 26, size: 1152, elements: !19444)
!19444 = !{!19445, !19446, !19447, !19448, !19449, !19450, !19451, !19452, !19453, !19454, !19455, !19456, !19461, !19462, !19463}
!19445 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !19443, file: !2394, line: 31, baseType: !2397, size: 64)
!19446 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !19443, file: !2394, line: 36, baseType: !2399, size: 64, offset: 64)
!19447 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !19443, file: !2394, line: 44, baseType: !2401, size: 64, offset: 128)
!19448 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !19443, file: !2394, line: 45, baseType: !2403, size: 32, offset: 192)
!19449 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !19443, file: !2394, line: 47, baseType: !2405, size: 32, offset: 224)
!19450 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !19443, file: !2394, line: 48, baseType: !2407, size: 32, offset: 256)
!19451 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !19443, file: !2394, line: 50, baseType: !34, size: 32, offset: 288)
!19452 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !19443, file: !2394, line: 52, baseType: !2397, size: 64, offset: 320)
!19453 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !19443, file: !2394, line: 57, baseType: !188, size: 64, offset: 384)
!19454 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !19443, file: !2394, line: 61, baseType: !2412, size: 64, offset: 448)
!19455 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !19443, file: !2394, line: 63, baseType: !2414, size: 64, offset: 512)
!19456 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !19443, file: !2394, line: 74, baseType: !19457, size: 128, offset: 576)
!19457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2417, line: 11, size: 128, elements: !19458)
!19458 = !{!19459, !19460}
!19459 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !19457, file: !2417, line: 16, baseType: !153, size: 64)
!19460 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !19457, file: !2417, line: 21, baseType: !2421, size: 64, offset: 64)
!19461 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !19443, file: !2394, line: 75, baseType: !19457, size: 128, offset: 704)
!19462 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !19443, file: !2394, line: 76, baseType: !19457, size: 128, offset: 832)
!19463 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !19443, file: !2394, line: 89, baseType: !2425, size: 192, offset: 960)
!19464 = !DILocalVariable(name: "dirfd", arg: 1, scope: !19439, file: !3245, line: 38, type: !34)
!19465 = !DILocation(line: 38, column: 17, scope: !19439)
!19466 = !DILocalVariable(name: "dirfdpath", arg: 2, scope: !19439, file: !3245, line: 38, type: !52)
!19467 = !DILocation(line: 38, column: 30, scope: !19439)
!19468 = !DILocalVariable(name: "name", arg: 3, scope: !19439, file: !3245, line: 38, type: !205)
!19469 = !DILocation(line: 38, column: 53, scope: !19439)
!19470 = !DILocalVariable(name: "resolved", arg: 4, scope: !19439, file: !3245, line: 38, type: !52)
!19471 = !DILocation(line: 38, column: 65, scope: !19439)
!19472 = !DILocalVariable(name: "st", arg: 5, scope: !19439, file: !3245, line: 39, type: !19442)
!19473 = !DILocation(line: 39, column: 22, scope: !19439)
!19474 = !DILocalVariable(name: "rpath", scope: !19439, file: !3245, line: 41, type: !52)
!19475 = !DILocation(line: 41, column: 11, scope: !19439)
!19476 = !DILocalVariable(name: "dest", scope: !19439, file: !3245, line: 41, type: !52)
!19477 = !DILocation(line: 41, column: 19, scope: !19439)
!19478 = !DILocalVariable(name: "extra_buf", scope: !19439, file: !3245, line: 41, type: !10154)
!19479 = !DILocation(line: 41, column: 25, scope: !19439)
!19480 = !DILocalVariable(name: "start", scope: !19439, file: !3245, line: 42, type: !205)
!19481 = !DILocation(line: 42, column: 17, scope: !19439)
!19482 = !DILocalVariable(name: "end", scope: !19439, file: !3245, line: 42, type: !205)
!19483 = !DILocation(line: 42, column: 25, scope: !19439)
!19484 = !DILocalVariable(name: "rpath_limit", scope: !19439, file: !3245, line: 42, type: !205)
!19485 = !DILocation(line: 42, column: 31, scope: !19439)
!19486 = !DILocalVariable(name: "num_links", scope: !19439, file: !3245, line: 43, type: !34)
!19487 = !DILocation(line: 43, column: 9, scope: !19439)
!19488 = !DILocalVariable(name: "dirfdlen", scope: !19439, file: !3245, line: 44, type: !1778)
!19489 = !DILocation(line: 44, column: 15, scope: !19439)
!19490 = !DILocalVariable(name: "pathat", scope: !19439, file: !3245, line: 45, type: !52)
!19491 = !DILocation(line: 45, column: 11, scope: !19439)
!19492 = !DILocation(line: 50, column: 9, scope: !19493)
!19493 = distinct !DILexicalBlock(scope: !19439, file: !3245, line: 50, column: 9)
!19494 = !DILocation(line: 50, column: 9, scope: !19439)
!19495 = !DILocation(line: 51, column: 25, scope: !19493)
!19496 = !DILocation(line: 51, column: 31, scope: !19493)
!19497 = !DILocation(line: 51, column: 16, scope: !19493)
!19498 = !DILocation(line: 51, column: 9, scope: !19493)
!19499 = !DILocation(line: 53, column: 9, scope: !19500)
!19500 = distinct !DILexicalBlock(scope: !19439, file: !3245, line: 53, column: 9)
!19501 = !DILocation(line: 53, column: 9, scope: !19439)
!19502 = !DILocation(line: 58, column: 9, scope: !19503)
!19503 = distinct !DILexicalBlock(scope: !19500, file: !3245, line: 53, column: 33)
!19504 = !DILocation(line: 58, column: 15, scope: !19503)
!19505 = !DILocation(line: 59, column: 9, scope: !19503)
!19506 = !DILocation(line: 62, column: 9, scope: !19507)
!19507 = distinct !DILexicalBlock(scope: !19439, file: !3245, line: 62, column: 9)
!19508 = !DILocation(line: 62, column: 17, scope: !19507)
!19509 = !DILocation(line: 62, column: 9, scope: !19439)
!19510 = !DILocation(line: 63, column: 13, scope: !19511)
!19511 = distinct !DILexicalBlock(scope: !19512, file: !3245, line: 63, column: 13)
!19512 = distinct !DILexicalBlock(scope: !19507, file: !3245, line: 62, column: 26)
!19513 = !DILocation(line: 63, column: 13, scope: !19512)
!19514 = !DILocation(line: 64, column: 13, scope: !19511)
!19515 = !DILocation(line: 65, column: 13, scope: !19516)
!19516 = distinct !DILexicalBlock(scope: !19512, file: !3245, line: 65, column: 13)
!19517 = !DILocation(line: 65, column: 13, scope: !19512)
!19518 = !DILocation(line: 66, column: 27, scope: !19516)
!19519 = !DILocation(line: 66, column: 20, scope: !19516)
!19520 = !DILocation(line: 66, column: 13, scope: !19516)
!19521 = !DILocation(line: 67, column: 23, scope: !19512)
!19522 = !DILocation(line: 67, column: 33, scope: !19512)
!19523 = !DILocation(line: 67, column: 16, scope: !19512)
!19524 = !DILocation(line: 67, column: 9, scope: !19512)
!19525 = !DILocation(line: 70, column: 9, scope: !19526)
!19526 = distinct !DILexicalBlock(scope: !19439, file: !3245, line: 70, column: 9)
!19527 = !DILocation(line: 70, column: 9, scope: !19439)
!19528 = !DILocation(line: 71, column: 17, scope: !19529)
!19529 = distinct !DILexicalBlock(scope: !19526, file: !3245, line: 70, column: 28)
!19530 = !DILocation(line: 71, column: 15, scope: !19529)
!19531 = !DILocation(line: 72, column: 13, scope: !19532)
!19532 = distinct !DILexicalBlock(scope: !19529, file: !3245, line: 72, column: 13)
!19533 = !DILocation(line: 72, column: 13, scope: !19529)
!19534 = !DILocation(line: 73, column: 13, scope: !19532)
!19535 = !DILocation(line: 74, column: 5, scope: !19529)
!19536 = !DILocation(line: 75, column: 17, scope: !19526)
!19537 = !DILocation(line: 75, column: 15, scope: !19526)
!19538 = !DILocation(line: 76, column: 19, scope: !19439)
!19539 = !DILocation(line: 76, column: 25, scope: !19439)
!19540 = !DILocation(line: 76, column: 17, scope: !19439)
!19541 = !DILocation(line: 78, column: 12, scope: !19439)
!19542 = !DILocation(line: 78, column: 19, scope: !19439)
!19543 = !DILocation(line: 78, column: 5, scope: !19439)
!19544 = !DILocation(line: 79, column: 22, scope: !19439)
!19545 = !DILocation(line: 79, column: 12, scope: !19439)
!19546 = !DILocation(line: 79, column: 10, scope: !19439)
!19547 = !DILocation(line: 80, column: 16, scope: !19439)
!19548 = !DILocation(line: 80, column: 23, scope: !19439)
!19549 = !DILocation(line: 80, column: 21, scope: !19439)
!19550 = !DILocation(line: 80, column: 14, scope: !19439)
!19551 = !DILocation(line: 82, column: 24, scope: !19552)
!19552 = distinct !DILexicalBlock(scope: !19439, file: !3245, line: 82, column: 5)
!19553 = !DILocation(line: 82, column: 22, scope: !19552)
!19554 = !DILocation(line: 82, column: 16, scope: !19552)
!19555 = !DILocation(line: 82, column: 10, scope: !19552)
!19556 = !DILocation(line: 82, column: 31, scope: !19557)
!19557 = distinct !DILexicalBlock(scope: !19552, file: !3245, line: 82, column: 5)
!19558 = !DILocation(line: 82, column: 30, scope: !19557)
!19559 = !DILocation(line: 82, column: 5, scope: !19552)
!19560 = !DILocalVariable(name: "n", scope: !19561, file: !3245, line: 83, type: !34)
!19561 = distinct !DILexicalBlock(scope: !19557, file: !3245, line: 82, column: 51)
!19562 = !DILocation(line: 83, column: 13, scope: !19561)
!19563 = !DILocation(line: 86, column: 9, scope: !19561)
!19564 = !DILocation(line: 86, column: 17, scope: !19561)
!19565 = !DILocation(line: 86, column: 16, scope: !19561)
!19566 = !DILocation(line: 86, column: 23, scope: !19561)
!19567 = !DILocation(line: 87, column: 13, scope: !19561)
!19568 = distinct !{!19568, !19563, !19569, !3413}
!19569 = !DILocation(line: 87, column: 15, scope: !19561)
!19570 = !DILocation(line: 90, column: 20, scope: !19571)
!19571 = distinct !DILexicalBlock(scope: !19561, file: !3245, line: 90, column: 9)
!19572 = !DILocation(line: 90, column: 18, scope: !19571)
!19573 = !DILocation(line: 90, column: 14, scope: !19571)
!19574 = !DILocation(line: 90, column: 28, scope: !19575)
!19575 = distinct !DILexicalBlock(scope: !19571, file: !3245, line: 90, column: 9)
!19576 = !DILocation(line: 90, column: 27, scope: !19575)
!19577 = !DILocation(line: 90, column: 32, scope: !19575)
!19578 = !DILocation(line: 90, column: 36, scope: !19575)
!19579 = !DILocation(line: 90, column: 35, scope: !19575)
!19580 = !DILocation(line: 90, column: 40, scope: !19575)
!19581 = !DILocation(line: 0, scope: !19575)
!19582 = !DILocation(line: 90, column: 9, scope: !19571)
!19583 = !DILocation(line: 90, column: 48, scope: !19575)
!19584 = !DILocation(line: 90, column: 9, scope: !19575)
!19585 = distinct !{!19585, !19582, !19586, !3413}
!19586 = !DILocation(line: 91, column: 29, scope: !19571)
!19587 = !DILocation(line: 93, column: 13, scope: !19588)
!19588 = distinct !DILexicalBlock(scope: !19561, file: !3245, line: 93, column: 13)
!19589 = !DILocation(line: 93, column: 19, scope: !19588)
!19590 = !DILocation(line: 93, column: 17, scope: !19588)
!19591 = !DILocation(line: 93, column: 25, scope: !19588)
!19592 = !DILocation(line: 93, column: 13, scope: !19561)
!19593 = !DILocation(line: 94, column: 13, scope: !19588)
!19594 = !DILocation(line: 95, column: 18, scope: !19595)
!19595 = distinct !DILexicalBlock(scope: !19588, file: !3245, line: 95, column: 18)
!19596 = !DILocation(line: 95, column: 24, scope: !19595)
!19597 = !DILocation(line: 95, column: 22, scope: !19595)
!19598 = !DILocation(line: 95, column: 30, scope: !19595)
!19599 = !DILocation(line: 95, column: 35, scope: !19595)
!19600 = !DILocation(line: 95, column: 38, scope: !19595)
!19601 = !DILocation(line: 95, column: 47, scope: !19595)
!19602 = !DILocation(line: 95, column: 18, scope: !19588)
!19603 = !DILocation(line: 97, column: 18, scope: !19604)
!19604 = distinct !DILexicalBlock(scope: !19595, file: !3245, line: 97, column: 18)
!19605 = !DILocation(line: 97, column: 24, scope: !19604)
!19606 = !DILocation(line: 97, column: 22, scope: !19604)
!19607 = !DILocation(line: 97, column: 30, scope: !19604)
!19608 = !DILocation(line: 97, column: 35, scope: !19604)
!19609 = !DILocation(line: 97, column: 38, scope: !19604)
!19610 = !DILocation(line: 97, column: 47, scope: !19604)
!19611 = !DILocation(line: 97, column: 54, scope: !19604)
!19612 = !DILocation(line: 97, column: 57, scope: !19604)
!19613 = !DILocation(line: 97, column: 66, scope: !19604)
!19614 = !DILocation(line: 97, column: 18, scope: !19595)
!19615 = !DILocation(line: 99, column: 17, scope: !19616)
!19616 = distinct !DILexicalBlock(scope: !19617, file: !3245, line: 99, column: 17)
!19617 = distinct !DILexicalBlock(scope: !19604, file: !3245, line: 97, column: 74)
!19618 = !DILocation(line: 99, column: 24, scope: !19616)
!19619 = !DILocation(line: 99, column: 30, scope: !19616)
!19620 = !DILocation(line: 99, column: 22, scope: !19616)
!19621 = !DILocation(line: 99, column: 17, scope: !19617)
!19622 = !DILocation(line: 100, column: 17, scope: !19616)
!19623 = !DILocation(line: 100, column: 25, scope: !19616)
!19624 = !DILocation(line: 100, column: 24, scope: !19616)
!19625 = !DILocation(line: 100, column: 37, scope: !19616)
!19626 = distinct !{!19626, !19622, !19627, !3413}
!19627 = !DILocation(line: 100, column: 44, scope: !19616)
!19628 = !DILocation(line: 101, column: 9, scope: !19617)
!19629 = !DILocalVariable(name: "new_size", scope: !19630, file: !3245, line: 102, type: !55)
!19630 = distinct !DILexicalBlock(scope: !19604, file: !3245, line: 101, column: 16)
!19631 = !DILocation(line: 102, column: 20, scope: !19630)
!19632 = !DILocation(line: 104, column: 17, scope: !19633)
!19633 = distinct !DILexicalBlock(scope: !19630, file: !3245, line: 104, column: 17)
!19634 = !DILocation(line: 104, column: 26, scope: !19633)
!19635 = !DILocation(line: 104, column: 17, scope: !19630)
!19636 = !DILocation(line: 105, column: 22, scope: !19633)
!19637 = !DILocation(line: 105, column: 25, scope: !19633)
!19638 = !DILocation(line: 105, column: 17, scope: !19633)
!19639 = !DILocation(line: 107, column: 17, scope: !19640)
!19640 = distinct !DILexicalBlock(scope: !19630, file: !3245, line: 107, column: 17)
!19641 = !DILocation(line: 107, column: 25, scope: !19640)
!19642 = !DILocation(line: 107, column: 31, scope: !19640)
!19643 = !DILocation(line: 107, column: 29, scope: !19640)
!19644 = !DILocation(line: 107, column: 22, scope: !19640)
!19645 = !DILocation(line: 107, column: 41, scope: !19640)
!19646 = !DILocation(line: 107, column: 38, scope: !19640)
!19647 = !DILocation(line: 107, column: 17, scope: !19630)
!19648 = !DILocalVariable(name: "dest_offset", scope: !19649, file: !3245, line: 108, type: !1778)
!19649 = distinct !DILexicalBlock(scope: !19640, file: !3245, line: 107, column: 54)
!19650 = !DILocation(line: 108, column: 27, scope: !19649)
!19651 = !DILocation(line: 108, column: 41, scope: !19649)
!19652 = !DILocation(line: 108, column: 48, scope: !19649)
!19653 = !DILocation(line: 108, column: 46, scope: !19649)
!19654 = !DILocalVariable(name: "new_rpath", scope: !19649, file: !3245, line: 109, type: !52)
!19655 = !DILocation(line: 109, column: 23, scope: !19649)
!19656 = !DILocation(line: 111, column: 21, scope: !19657)
!19657 = distinct !DILexicalBlock(scope: !19649, file: !3245, line: 111, column: 21)
!19658 = !DILocation(line: 111, column: 21, scope: !19649)
!19659 = !DILocation(line: 112, column: 21, scope: !19660)
!19660 = distinct !DILexicalBlock(scope: !19657, file: !3245, line: 111, column: 49)
!19661 = !DILocation(line: 112, column: 27, scope: !19660)
!19662 = !DILocation(line: 113, column: 25, scope: !19663)
!19663 = distinct !DILexicalBlock(scope: !19660, file: !3245, line: 113, column: 25)
!19664 = !DILocation(line: 113, column: 32, scope: !19663)
!19665 = !DILocation(line: 113, column: 38, scope: !19663)
!19666 = !DILocation(line: 113, column: 30, scope: !19663)
!19667 = !DILocation(line: 113, column: 25, scope: !19660)
!19668 = !DILocation(line: 114, column: 29, scope: !19663)
!19669 = !DILocation(line: 114, column: 25, scope: !19663)
!19670 = !DILocation(line: 115, column: 22, scope: !19660)
!19671 = !DILocation(line: 115, column: 27, scope: !19660)
!19672 = !DILocation(line: 116, column: 21, scope: !19660)
!19673 = !DILocation(line: 119, column: 37, scope: !19649)
!19674 = !DILocation(line: 119, column: 51, scope: !19649)
!19675 = !DILocation(line: 119, column: 49, scope: !19649)
!19676 = !DILocation(line: 119, column: 26, scope: !19649)
!19677 = !DILocation(line: 120, column: 21, scope: !19678)
!19678 = distinct !DILexicalBlock(scope: !19649, file: !3245, line: 120, column: 21)
!19679 = !DILocation(line: 120, column: 27, scope: !19678)
!19680 = !DILocation(line: 120, column: 25, scope: !19678)
!19681 = !DILocation(line: 120, column: 33, scope: !19678)
!19682 = !DILocation(line: 120, column: 37, scope: !19678)
!19683 = !DILocation(line: 120, column: 21, scope: !19649)
!19684 = !DILocation(line: 121, column: 42, scope: !19678)
!19685 = !DILocation(line: 121, column: 48, scope: !19678)
!19686 = !DILocation(line: 121, column: 46, scope: !19678)
!19687 = !DILocation(line: 121, column: 54, scope: !19678)
!19688 = !DILocation(line: 121, column: 30, scope: !19678)
!19689 = !DILocation(line: 121, column: 21, scope: !19678)
!19690 = !DILocation(line: 123, column: 30, scope: !19678)
!19691 = !DILocation(line: 124, column: 46, scope: !19649)
!19692 = !DILocation(line: 124, column: 53, scope: !19649)
!19693 = !DILocation(line: 124, column: 38, scope: !19649)
!19694 = !DILocation(line: 124, column: 27, scope: !19649)
!19695 = !DILocation(line: 125, column: 21, scope: !19696)
!19696 = distinct !DILexicalBlock(scope: !19649, file: !3245, line: 125, column: 21)
!19697 = !DILocation(line: 125, column: 21, scope: !19649)
!19698 = !DILocation(line: 126, column: 21, scope: !19696)
!19699 = !DILocation(line: 127, column: 25, scope: !19649)
!19700 = !DILocation(line: 127, column: 23, scope: !19649)
!19701 = !DILocation(line: 128, column: 31, scope: !19649)
!19702 = !DILocation(line: 128, column: 39, scope: !19649)
!19703 = !DILocation(line: 128, column: 37, scope: !19649)
!19704 = !DILocation(line: 128, column: 29, scope: !19649)
!19705 = !DILocation(line: 130, column: 24, scope: !19649)
!19706 = !DILocation(line: 130, column: 32, scope: !19649)
!19707 = !DILocation(line: 130, column: 30, scope: !19649)
!19708 = !DILocation(line: 130, column: 22, scope: !19649)
!19709 = !DILocation(line: 131, column: 13, scope: !19649)
!19710 = !DILocation(line: 133, column: 28, scope: !19630)
!19711 = !DILocation(line: 133, column: 34, scope: !19630)
!19712 = !DILocation(line: 133, column: 50, scope: !19630)
!19713 = !DILocation(line: 133, column: 56, scope: !19630)
!19714 = !DILocation(line: 133, column: 54, scope: !19630)
!19715 = !DILocation(line: 133, column: 20, scope: !19630)
!19716 = !DILocation(line: 133, column: 18, scope: !19630)
!19717 = !DILocation(line: 134, column: 14, scope: !19630)
!19718 = !DILocation(line: 134, column: 19, scope: !19630)
!19719 = !DILocation(line: 136, column: 17, scope: !19720)
!19720 = distinct !DILexicalBlock(scope: !19630, file: !3245, line: 136, column: 17)
!19721 = !DILocation(line: 136, column: 17, scope: !19630)
!19722 = !DILocation(line: 137, column: 26, scope: !19723)
!19723 = distinct !DILexicalBlock(scope: !19720, file: !3245, line: 136, column: 71)
!19724 = !DILocation(line: 137, column: 34, scope: !19723)
!19725 = !DILocation(line: 137, column: 32, scope: !19723)
!19726 = !DILocation(line: 137, column: 43, scope: !19723)
!19727 = !DILocation(line: 137, column: 24, scope: !19723)
!19728 = !DILocation(line: 138, column: 22, scope: !19729)
!19729 = distinct !DILexicalBlock(scope: !19723, file: !3245, line: 138, column: 21)
!19730 = !DILocation(line: 138, column: 21, scope: !19729)
!19731 = !DILocation(line: 138, column: 29, scope: !19729)
!19732 = !DILocation(line: 138, column: 21, scope: !19723)
!19733 = !DILocation(line: 139, column: 30, scope: !19729)
!19734 = !DILocation(line: 139, column: 28, scope: !19729)
!19735 = !DILocation(line: 139, column: 21, scope: !19729)
!19736 = !DILocation(line: 140, column: 13, scope: !19723)
!19737 = !DILocation(line: 141, column: 26, scope: !19738)
!19738 = distinct !DILexicalBlock(scope: !19720, file: !3245, line: 140, column: 20)
!19739 = !DILocation(line: 141, column: 24, scope: !19738)
!19740 = !DILocation(line: 144, column: 17, scope: !19741)
!19741 = distinct !DILexicalBlock(scope: !19630, file: !3245, line: 144, column: 17)
!19742 = !DILocation(line: 144, column: 17, scope: !19630)
!19743 = !DILocation(line: 145, column: 17, scope: !19741)
!19744 = !DILocation(line: 147, column: 17, scope: !19745)
!19745 = distinct !DILexicalBlock(scope: !19630, file: !3245, line: 147, column: 17)
!19746 = !DILocation(line: 147, column: 17, scope: !19630)
!19747 = !DILocalVariable(name: "buf", scope: !19748, file: !3245, line: 148, type: !10154)
!19748 = distinct !DILexicalBlock(scope: !19745, file: !3245, line: 147, column: 49)
!19749 = !DILocation(line: 148, column: 22, scope: !19748)
!19750 = !DILocalVariable(name: "len", scope: !19748, file: !3245, line: 149, type: !55)
!19751 = !DILocation(line: 149, column: 24, scope: !19748)
!19752 = !DILocation(line: 151, column: 21, scope: !19753)
!19753 = distinct !DILexicalBlock(scope: !19748, file: !3245, line: 151, column: 21)
!19754 = !DILocation(line: 151, column: 21, scope: !19748)
!19755 = !DILocation(line: 152, column: 21, scope: !19756)
!19756 = distinct !DILexicalBlock(scope: !19753, file: !3245, line: 151, column: 58)
!19757 = !DILocation(line: 152, column: 27, scope: !19756)
!19758 = !DILocation(line: 153, column: 21, scope: !19756)
!19759 = !DILocation(line: 156, column: 37, scope: !19748)
!19760 = !DILocation(line: 156, column: 44, scope: !19748)
!19761 = !DILocation(line: 156, column: 52, scope: !19748)
!19762 = !DILocation(line: 156, column: 26, scope: !19748)
!19763 = !DILocation(line: 156, column: 21, scope: !19748)
!19764 = !DILocation(line: 156, column: 19, scope: !19748)
!19765 = !DILocation(line: 157, column: 21, scope: !19766)
!19766 = distinct !DILexicalBlock(scope: !19748, file: !3245, line: 157, column: 21)
!19767 = !DILocation(line: 157, column: 21, scope: !19748)
!19768 = !DILocation(line: 158, column: 21, scope: !19766)
!19769 = !DILocation(line: 159, column: 21, scope: !19748)
!19770 = !DILocation(line: 159, column: 17, scope: !19748)
!19771 = !DILocation(line: 159, column: 24, scope: !19748)
!19772 = !DILocation(line: 161, column: 30, scope: !19748)
!19773 = !DILocation(line: 161, column: 23, scope: !19748)
!19774 = !DILocation(line: 161, column: 21, scope: !19748)
!19775 = !DILocation(line: 162, column: 21, scope: !19776)
!19776 = distinct !DILexicalBlock(scope: !19748, file: !3245, line: 162, column: 21)
!19777 = !DILocation(line: 162, column: 21, scope: !19748)
!19778 = !DILocation(line: 163, column: 21, scope: !19779)
!19779 = distinct !DILexicalBlock(scope: !19776, file: !3245, line: 162, column: 75)
!19780 = !DILocation(line: 163, column: 27, scope: !19779)
!19781 = !DILocation(line: 164, column: 21, scope: !19779)
!19782 = !DILocation(line: 168, column: 36, scope: !19748)
!19783 = !DILocation(line: 168, column: 26, scope: !19748)
!19784 = !DILocation(line: 168, column: 40, scope: !19748)
!19785 = !DILocation(line: 168, column: 45, scope: !19748)
!19786 = !DILocation(line: 168, column: 49, scope: !19748)
!19787 = !DILocation(line: 168, column: 17, scope: !19748)
!19788 = !DILocation(line: 169, column: 23, scope: !19748)
!19789 = !DILocation(line: 169, column: 54, scope: !19748)
!19790 = !DILocation(line: 169, column: 46, scope: !19748)
!19791 = !DILocation(line: 169, column: 21, scope: !19748)
!19792 = !DILocation(line: 171, column: 21, scope: !19793)
!19793 = distinct !DILexicalBlock(scope: !19748, file: !3245, line: 171, column: 21)
!19794 = !DILocation(line: 171, column: 28, scope: !19793)
!19795 = !DILocation(line: 171, column: 21, scope: !19748)
!19796 = !DILocation(line: 172, column: 28, scope: !19793)
!19797 = !DILocation(line: 172, column: 34, scope: !19793)
!19798 = !DILocation(line: 172, column: 26, scope: !19793)
!19799 = !DILocation(line: 172, column: 21, scope: !19793)
!19800 = !DILocation(line: 175, column: 25, scope: !19801)
!19801 = distinct !DILexicalBlock(scope: !19793, file: !3245, line: 175, column: 25)
!19802 = !DILocation(line: 175, column: 32, scope: !19801)
!19803 = !DILocation(line: 175, column: 38, scope: !19801)
!19804 = !DILocation(line: 175, column: 30, scope: !19801)
!19805 = !DILocation(line: 175, column: 25, scope: !19793)
!19806 = !DILocation(line: 176, column: 25, scope: !19801)
!19807 = !DILocation(line: 176, column: 33, scope: !19801)
!19808 = !DILocation(line: 176, column: 32, scope: !19801)
!19809 = !DILocation(line: 176, column: 45, scope: !19801)
!19810 = distinct !{!19810, !19806, !19811, !3413}
!19811 = !DILocation(line: 176, column: 52, scope: !19801)
!19812 = !DILocation(line: 177, column: 13, scope: !19748)
!19813 = !DILocation(line: 177, column: 24, scope: !19814)
!19814 = distinct !DILexicalBlock(scope: !19745, file: !3245, line: 177, column: 24)
!19815 = !DILocation(line: 0, scope: !19814)
!19816 = !DILocation(line: 177, column: 24, scope: !19745)
!19817 = !DILocation(line: 178, column: 17, scope: !19818)
!19818 = distinct !DILexicalBlock(scope: !19814, file: !3245, line: 177, column: 73)
!19819 = !DILocation(line: 178, column: 23, scope: !19818)
!19820 = !DILocation(line: 179, column: 17, scope: !19818)
!19821 = !DILocation(line: 182, column: 5, scope: !19561)
!19822 = !DILocation(line: 82, column: 46, scope: !19557)
!19823 = !DILocation(line: 82, column: 44, scope: !19557)
!19824 = !DILocation(line: 82, column: 5, scope: !19557)
!19825 = distinct !{!19825, !19559, !19826, !3413}
!19826 = !DILocation(line: 182, column: 5, scope: !19552)
!19827 = !DILocation(line: 184, column: 9, scope: !19828)
!19828 = distinct !DILexicalBlock(scope: !19439, file: !3245, line: 184, column: 9)
!19829 = !DILocation(line: 184, column: 16, scope: !19828)
!19830 = !DILocation(line: 184, column: 22, scope: !19828)
!19831 = !DILocation(line: 184, column: 14, scope: !19828)
!19832 = !DILocation(line: 184, column: 26, scope: !19828)
!19833 = !DILocation(line: 184, column: 29, scope: !19828)
!19834 = !DILocation(line: 184, column: 38, scope: !19828)
!19835 = !DILocation(line: 184, column: 9, scope: !19439)
!19836 = !DILocation(line: 185, column: 9, scope: !19828)
!19837 = !DILocation(line: 186, column: 6, scope: !19439)
!19838 = !DILocation(line: 186, column: 11, scope: !19439)
!19839 = !DILocation(line: 188, column: 5, scope: !19840)
!19840 = distinct !DILexicalBlock(scope: !19841, file: !3245, line: 188, column: 5)
!19841 = distinct !DILexicalBlock(scope: !19439, file: !3245, line: 188, column: 5)
!19842 = !DILocation(line: 188, column: 5, scope: !19841)
!19843 = !DILocation(line: 189, column: 12, scope: !19439)
!19844 = !DILocation(line: 189, column: 5, scope: !19439)
!19845 = !DILabel(scope: !19439, name: "error", file: !3245, line: 191)
!19846 = !DILocation(line: 191, column: 3, scope: !19439)
!19847 = !DILocation(line: 192, column: 5, scope: !19848)
!19848 = distinct !DILexicalBlock(scope: !19849, file: !3245, line: 192, column: 5)
!19849 = distinct !DILexicalBlock(scope: !19439, file: !3245, line: 192, column: 5)
!19850 = !DILocation(line: 192, column: 5, scope: !19849)
!19851 = !DILocation(line: 193, column: 9, scope: !19852)
!19852 = distinct !DILexicalBlock(scope: !19439, file: !3245, line: 193, column: 9)
!19853 = !DILocation(line: 193, column: 18, scope: !19852)
!19854 = !DILocation(line: 193, column: 9, scope: !19439)
!19855 = !DILocation(line: 194, column: 14, scope: !19852)
!19856 = !DILocation(line: 194, column: 9, scope: !19852)
!19857 = !DILocation(line: 195, column: 5, scope: !19439)
!19858 = !DILocation(line: 196, column: 1, scope: !19439)
!19859 = distinct !DISubprogram(name: "get_funcs", scope: !2153, file: !2153, line: 454, type: !19860, scopeLine: 456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !286)
!19860 = !DISubroutineType(types: !19861)
!19861 = !{!2367, !2377, !205, !52, !2392}
!19862 = !DILocalVariable(name: "priv", arg: 1, scope: !19859, file: !2153, line: 454, type: !2377)
!19863 = !DILocation(line: 454, column: 31, scope: !19859)
!19864 = !DILocalVariable(name: "key", arg: 2, scope: !19859, file: !2153, line: 454, type: !205)
!19865 = !DILocation(line: 454, column: 49, scope: !19859)
!19866 = !DILocalVariable(name: "full_path", arg: 3, scope: !19859, file: !2153, line: 454, type: !52)
!19867 = !DILocation(line: 454, column: 60, scope: !19859)
!19868 = !DILocalVariable(name: "st", arg: 4, scope: !19859, file: !2153, line: 455, type: !2392)
!19869 = !DILocation(line: 455, column: 18, scope: !19859)
!19870 = !DILocalVariable(name: "index_html_path_buf", scope: !19859, file: !2153, line: 457, type: !10154)
!19871 = !DILocation(line: 457, column: 10, scope: !19859)
!19872 = !DILocalVariable(name: "index_html_path", scope: !19859, file: !2153, line: 458, type: !52)
!19873 = !DILocation(line: 458, column: 11, scope: !19859)
!19874 = !DILocation(line: 458, column: 29, scope: !19859)
!19875 = !DILocation(line: 460, column: 9, scope: !19876)
!19876 = distinct !DILexicalBlock(scope: !19859, file: !2153, line: 460, column: 9)
!19877 = !DILocation(line: 460, column: 9, scope: !19859)
!19878 = !DILocation(line: 464, column: 14, scope: !19879)
!19879 = distinct !DILexicalBlock(scope: !19880, file: !2153, line: 464, column: 13)
!19880 = distinct !DILexicalBlock(scope: !19876, file: !2153, line: 460, column: 31)
!19881 = !DILocation(line: 464, column: 13, scope: !19879)
!19882 = !DILocation(line: 464, column: 18, scope: !19879)
!19883 = !DILocation(line: 464, column: 13, scope: !19880)
!19884 = !DILocation(line: 465, column: 39, scope: !19885)
!19885 = distinct !DILexicalBlock(scope: !19879, file: !2153, line: 464, column: 27)
!19886 = !DILocation(line: 465, column: 45, scope: !19885)
!19887 = !DILocation(line: 465, column: 29, scope: !19885)
!19888 = !DILocation(line: 466, column: 9, scope: !19885)
!19889 = !DILocalVariable(name: "key_end", scope: !19890, file: !2153, line: 470, type: !205)
!19890 = distinct !DILexicalBlock(scope: !19879, file: !2153, line: 466, column: 16)
!19891 = !DILocation(line: 470, column: 25, scope: !19890)
!19892 = !DILocation(line: 470, column: 45, scope: !19890)
!19893 = !DILocation(line: 470, column: 35, scope: !19890)
!19894 = !DILocation(line: 471, column: 19, scope: !19895)
!19895 = distinct !DILexicalBlock(scope: !19890, file: !2153, line: 471, column: 17)
!19896 = !DILocation(line: 471, column: 27, scope: !19895)
!19897 = !DILocation(line: 471, column: 17, scope: !19895)
!19898 = !DILocation(line: 471, column: 32, scope: !19895)
!19899 = !DILocation(line: 471, column: 17, scope: !19890)
!19900 = !DILocation(line: 472, column: 17, scope: !19895)
!19901 = !DILocalVariable(name: "ret", scope: !19890, file: !2153, line: 474, type: !34)
!19902 = !DILocation(line: 474, column: 17, scope: !19890)
!19903 = !DILocation(line: 474, column: 32, scope: !19890)
!19904 = !DILocation(line: 474, column: 67, scope: !19890)
!19905 = !DILocation(line: 474, column: 72, scope: !19890)
!19906 = !DILocation(line: 474, column: 78, scope: !19890)
!19907 = !DILocation(line: 474, column: 23, scope: !19890)
!19908 = !DILocation(line: 475, column: 17, scope: !19909)
!19909 = distinct !DILexicalBlock(scope: !19890, file: !2153, line: 475, column: 17)
!19910 = !DILocation(line: 475, column: 17, scope: !19890)
!19911 = !DILocation(line: 476, column: 17, scope: !19909)
!19912 = !DILocation(line: 480, column: 21, scope: !19913)
!19913 = distinct !DILexicalBlock(scope: !19880, file: !2153, line: 480, column: 13)
!19914 = !DILocation(line: 480, column: 27, scope: !19913)
!19915 = !DILocation(line: 480, column: 32, scope: !19913)
!19916 = !DILocation(line: 480, column: 36, scope: !19913)
!19917 = !DILocation(line: 480, column: 53, scope: !19913)
!19918 = !DILocation(line: 480, column: 13, scope: !19913)
!19919 = !DILocation(line: 480, column: 60, scope: !19913)
!19920 = !DILocation(line: 480, column: 13, scope: !19880)
!19921 = !DILocation(line: 481, column: 17, scope: !19922)
!19922 = distinct !DILexicalBlock(scope: !19923, file: !2153, line: 481, column: 17)
!19923 = distinct !DILexicalBlock(scope: !19913, file: !2153, line: 480, column: 65)
!19924 = !DILocation(line: 481, column: 17, scope: !19923)
!19925 = !DILocation(line: 482, column: 17, scope: !19922)
!19926 = !DILocation(line: 485, column: 13, scope: !19923)
!19927 = !DILocation(line: 491, column: 13, scope: !19928)
!19928 = distinct !DILexicalBlock(scope: !19880, file: !2153, line: 491, column: 13)
!19929 = !DILocation(line: 491, column: 13, scope: !19880)
!19930 = !DILocation(line: 493, column: 13, scope: !19928)
!19931 = !DILocation(line: 495, column: 9, scope: !19880)
!19932 = !DILocation(line: 495, column: 19, scope: !19880)
!19933 = !DILocation(line: 495, column: 25, scope: !19880)
!19934 = !DILocation(line: 495, column: 30, scope: !19880)
!19935 = !DILocation(line: 495, column: 40, scope: !19880)
!19936 = !DILocation(line: 496, column: 17, scope: !19880)
!19937 = !DILocation(line: 496, column: 29, scope: !19880)
!19938 = !DILocation(line: 496, column: 35, scope: !19880)
!19939 = !DILocation(line: 496, column: 40, scope: !19880)
!19940 = !DILocation(line: 496, column: 27, scope: !19880)
!19941 = !DILocation(line: 496, column: 49, scope: !19880)
!19942 = !DILocation(line: 496, column: 54, scope: !19880)
!19943 = !DILocation(line: 497, column: 32, scope: !19880)
!19944 = !DILocation(line: 497, column: 38, scope: !19880)
!19945 = !DILocation(line: 497, column: 43, scope: !19880)
!19946 = !DILocation(line: 497, column: 30, scope: !19880)
!19947 = !DILocation(line: 497, column: 52, scope: !19880)
!19948 = !DILocation(line: 496, column: 9, scope: !19880)
!19949 = !DILocation(line: 498, column: 5, scope: !19880)
!19950 = !DILocation(line: 502, column: 9, scope: !19951)
!19951 = distinct !DILexicalBlock(scope: !19859, file: !2153, line: 502, column: 9)
!19952 = !DILocation(line: 502, column: 13, scope: !19951)
!19953 = !DILocation(line: 502, column: 21, scope: !19951)
!19954 = !DILocation(line: 502, column: 9, scope: !19859)
!19955 = !DILocation(line: 503, column: 9, scope: !19951)
!19956 = !DILocation(line: 505, column: 5, scope: !19859)
!19957 = !DILocation(line: 506, column: 1, scope: !19859)
!19958 = distinct !DISubprogram(name: "create_cache_entry_from_funcs", scope: !2153, file: !2153, line: 509, type: !19959, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !286)
!19959 = !DISubroutineType(types: !19960)
!19960 = !{!2355, !2377, !205, !2392, !2367}
!19961 = !DILocalVariable(name: "priv", arg: 1, scope: !19958, file: !2153, line: 509, type: !2377)
!19962 = !DILocation(line: 509, column: 51, scope: !19958)
!19963 = !DILocalVariable(name: "full_path", arg: 2, scope: !19958, file: !2153, line: 509, type: !205)
!19964 = !DILocation(line: 509, column: 69, scope: !19958)
!19965 = !DILocalVariable(name: "st", arg: 3, scope: !19958, file: !2153, line: 510, type: !2392)
!19966 = !DILocation(line: 510, column: 18, scope: !19958)
!19967 = !DILocalVariable(name: "funcs", arg: 4, scope: !19958, file: !2153, line: 510, type: !2367)
!19968 = !DILocation(line: 510, column: 43, scope: !19958)
!19969 = !DILocalVariable(name: "fce", scope: !19958, file: !2153, line: 512, type: !2355)
!19970 = !DILocation(line: 512, column: 25, scope: !19958)
!19971 = !DILocation(line: 514, column: 33, scope: !19958)
!19972 = !DILocation(line: 514, column: 40, scope: !19958)
!19973 = !DILocation(line: 514, column: 31, scope: !19958)
!19974 = !DILocation(line: 514, column: 11, scope: !19958)
!19975 = !DILocation(line: 514, column: 9, scope: !19958)
!19976 = !DILocation(line: 515, column: 9, scope: !19977)
!19977 = distinct !DILexicalBlock(scope: !19958, file: !2153, line: 515, column: 9)
!19978 = !DILocation(line: 515, column: 9, scope: !19958)
!19979 = !DILocation(line: 516, column: 9, scope: !19977)
!19980 = !DILocation(line: 518, column: 9, scope: !19981)
!19981 = distinct !DILexicalBlock(scope: !19958, file: !2153, line: 518, column: 9)
!19982 = !DILocation(line: 518, column: 9, scope: !19958)
!19983 = !DILocation(line: 519, column: 22, scope: !19984)
!19984 = distinct !DILexicalBlock(scope: !19981, file: !2153, line: 518, column: 56)
!19985 = !DILocation(line: 519, column: 9, scope: !19984)
!19986 = !DILocation(line: 519, column: 14, scope: !19984)
!19987 = !DILocation(line: 519, column: 20, scope: !19984)
!19988 = !DILocation(line: 520, column: 16, scope: !19984)
!19989 = !DILocation(line: 520, column: 9, scope: !19984)
!19990 = !DILocation(line: 523, column: 10, scope: !19958)
!19991 = !DILocation(line: 523, column: 5, scope: !19958)
!19992 = !DILocation(line: 525, column: 9, scope: !19993)
!19993 = distinct !DILexicalBlock(scope: !19958, file: !2153, line: 525, column: 9)
!19994 = !DILocation(line: 525, column: 15, scope: !19993)
!19995 = !DILocation(line: 525, column: 9, scope: !19958)
!19996 = !DILocation(line: 526, column: 9, scope: !19993)
!19997 = !DILocation(line: 528, column: 42, scope: !19958)
!19998 = !DILocation(line: 528, column: 48, scope: !19958)
!19999 = !DILocation(line: 528, column: 59, scope: !19958)
!20000 = !DILocation(line: 528, column: 12, scope: !19958)
!20001 = !DILocation(line: 528, column: 5, scope: !19958)
!20002 = !DILocation(line: 529, column: 1, scope: !19958)
!20003 = distinct !DISubprogram(name: "sendfile_serve", scope: !2153, file: !2153, line: 818, type: !2302, scopeLine: 819, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !286)
!20004 = !DILocalVariable(name: "request", arg: 1, scope: !20003, file: !2153, line: 818, type: !2169)
!20005 = !DILocation(line: 818, column: 32, scope: !20003)
!20006 = !DILocalVariable(name: "data", arg: 2, scope: !20003, file: !2153, line: 818, type: !111)
!20007 = !DILocation(line: 818, column: 47, scope: !20003)
!20008 = !DILocalVariable(name: "fce", scope: !20003, file: !2153, line: 820, type: !2355)
!20009 = !DILocation(line: 820, column: 25, scope: !20003)
!20010 = !DILocation(line: 820, column: 31, scope: !20003)
!20011 = !DILocalVariable(name: "sd", scope: !20003, file: !2153, line: 821, type: !2345)
!20012 = !DILocation(line: 821, column: 28, scope: !20003)
!20013 = !DILocation(line: 821, column: 59, scope: !20003)
!20014 = !DILocation(line: 821, column: 63, scope: !20003)
!20015 = !DILocalVariable(name: "headers", scope: !20003, file: !2153, line: 822, type: !10154)
!20016 = !DILocation(line: 822, column: 10, scope: !20003)
!20017 = !DILocalVariable(name: "header_len", scope: !20003, file: !2153, line: 823, type: !55)
!20018 = !DILocation(line: 823, column: 12, scope: !20003)
!20019 = !DILocalVariable(name: "return_status", scope: !20003, file: !2153, line: 824, type: !6)
!20020 = !DILocation(line: 824, column: 24, scope: !20003)
!20021 = !DILocalVariable(name: "from", scope: !20003, file: !2153, line: 825, type: !2271)
!20022 = !DILocation(line: 825, column: 11, scope: !20003)
!20023 = !DILocalVariable(name: "to", scope: !20003, file: !2153, line: 825, type: !2271)
!20024 = !DILocation(line: 825, column: 17, scope: !20003)
!20025 = !DILocalVariable(name: "compressed", scope: !20003, file: !2153, line: 826, type: !205)
!20026 = !DILocation(line: 826, column: 17, scope: !20003)
!20027 = !DILocalVariable(name: "filename", scope: !20003, file: !2153, line: 827, type: !52)
!20028 = !DILocation(line: 827, column: 11, scope: !20003)
!20029 = !DILocalVariable(name: "size", scope: !20003, file: !2153, line: 828, type: !55)
!20030 = !DILocation(line: 828, column: 12, scope: !20003)
!20031 = !DILocation(line: 830, column: 9, scope: !20032)
!20032 = distinct !DILexicalBlock(scope: !20003, file: !2153, line: 830, column: 9)
!20033 = !DILocation(line: 830, column: 13, scope: !20032)
!20034 = !DILocation(line: 830, column: 24, scope: !20032)
!20035 = !DILocation(line: 830, column: 29, scope: !20032)
!20036 = !DILocation(line: 830, column: 33, scope: !20032)
!20037 = !DILocation(line: 830, column: 42, scope: !20032)
!20038 = !DILocation(line: 830, column: 48, scope: !20032)
!20039 = !DILocation(line: 830, column: 9, scope: !20003)
!20040 = !DILocation(line: 831, column: 14, scope: !20041)
!20041 = distinct !DILexicalBlock(scope: !20032, file: !2153, line: 830, column: 72)
!20042 = !DILocation(line: 832, column: 21, scope: !20041)
!20043 = !DILocation(line: 832, column: 25, scope: !20041)
!20044 = !DILocation(line: 832, column: 36, scope: !20041)
!20045 = !DILocation(line: 832, column: 12, scope: !20041)
!20046 = !DILocation(line: 834, column: 22, scope: !20041)
!20047 = !DILocation(line: 834, column: 20, scope: !20041)
!20048 = !DILocation(line: 835, column: 20, scope: !20041)
!20049 = !DILocation(line: 835, column: 24, scope: !20041)
!20050 = !DILocation(line: 835, column: 35, scope: !20041)
!20051 = !DILocation(line: 835, column: 18, scope: !20041)
!20052 = !DILocation(line: 836, column: 16, scope: !20041)
!20053 = !DILocation(line: 836, column: 20, scope: !20041)
!20054 = !DILocation(line: 836, column: 31, scope: !20041)
!20055 = !DILocation(line: 836, column: 14, scope: !20041)
!20056 = !DILocation(line: 838, column: 23, scope: !20041)
!20057 = !DILocation(line: 839, column: 5, scope: !20041)
!20058 = !DILocation(line: 840, column: 39, scope: !20059)
!20059 = distinct !DILexicalBlock(scope: !20032, file: !2153, line: 839, column: 12)
!20060 = !DILocation(line: 840, column: 67, scope: !20059)
!20061 = !DILocation(line: 840, column: 71, scope: !20059)
!20062 = !DILocation(line: 840, column: 84, scope: !20059)
!20063 = !DILocalVariable(name: "request", arg: 1, scope: !20064, file: !2153, line: 768, type: !2169)
!20064 = distinct !DISubprogram(name: "compute_range", scope: !2153, file: !2153, line: 768, type: !20065, scopeLine: 769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !286)
!20065 = !DISubroutineType(types: !20066)
!20066 = !{!6, !2169, !20067, !20067, !2271}
!20067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 64)
!20068 = !DILocation(line: 768, column: 31, scope: !20064, inlinedAt: !20069)
!20069 = distinct !DILocation(line: 840, column: 25, scope: !20059)
!20070 = !DILocalVariable(name: "from", arg: 2, scope: !20064, file: !2153, line: 768, type: !20067)
!20071 = !DILocation(line: 768, column: 47, scope: !20064, inlinedAt: !20069)
!20072 = !DILocalVariable(name: "to", arg: 3, scope: !20064, file: !2153, line: 768, type: !20067)
!20073 = !DILocation(line: 768, column: 60, scope: !20064, inlinedAt: !20069)
!20074 = !DILocalVariable(name: "size", arg: 4, scope: !20064, file: !2153, line: 768, type: !2271)
!20075 = !DILocation(line: 768, column: 70, scope: !20064, inlinedAt: !20069)
!20076 = !DILocalVariable(name: "f", scope: !20064, file: !2153, line: 770, type: !2271)
!20077 = !DILocation(line: 770, column: 11, scope: !20064, inlinedAt: !20069)
!20078 = !DILocalVariable(name: "t", scope: !20064, file: !2153, line: 770, type: !2271)
!20079 = !DILocation(line: 770, column: 14, scope: !20064, inlinedAt: !20069)
!20080 = !DILocation(line: 772, column: 9, scope: !20064, inlinedAt: !20069)
!20081 = !DILocation(line: 772, column: 18, scope: !20064, inlinedAt: !20069)
!20082 = !DILocation(line: 772, column: 25, scope: !20064, inlinedAt: !20069)
!20083 = !DILocation(line: 772, column: 31, scope: !20064, inlinedAt: !20069)
!20084 = !DILocation(line: 772, column: 7, scope: !20064, inlinedAt: !20069)
!20085 = !DILocation(line: 773, column: 9, scope: !20064, inlinedAt: !20069)
!20086 = !DILocation(line: 773, column: 18, scope: !20064, inlinedAt: !20069)
!20087 = !DILocation(line: 773, column: 25, scope: !20064, inlinedAt: !20069)
!20088 = !DILocation(line: 773, column: 31, scope: !20064, inlinedAt: !20069)
!20089 = !DILocation(line: 773, column: 7, scope: !20064, inlinedAt: !20069)
!20090 = !DILocation(line: 778, column: 9, scope: !20091, inlinedAt: !20069)
!20091 = distinct !DILexicalBlock(scope: !20064, file: !2153, line: 778, column: 9)
!20092 = !DILocation(line: 0, scope: !20091, inlinedAt: !20069)
!20093 = !DILocation(line: 778, column: 9, scope: !20064, inlinedAt: !20069)
!20094 = !DILocation(line: 779, column: 10, scope: !20095, inlinedAt: !20069)
!20095 = distinct !DILexicalBlock(scope: !20091, file: !2153, line: 778, column: 35)
!20096 = !DILocation(line: 779, column: 15, scope: !20095, inlinedAt: !20069)
!20097 = !DILocation(line: 780, column: 15, scope: !20095, inlinedAt: !20069)
!20098 = !DILocation(line: 780, column: 10, scope: !20095, inlinedAt: !20069)
!20099 = !DILocation(line: 780, column: 13, scope: !20095, inlinedAt: !20069)
!20100 = !DILocation(line: 781, column: 9, scope: !20095, inlinedAt: !20069)
!20101 = !DILocation(line: 787, column: 9, scope: !20102, inlinedAt: !20069)
!20102 = distinct !DILexicalBlock(scope: !20064, file: !2153, line: 787, column: 9)
!20103 = !DILocation(line: 787, column: 9, scope: !20064, inlinedAt: !20069)
!20104 = !DILocation(line: 788, column: 9, scope: !20102, inlinedAt: !20069)
!20105 = !DILocation(line: 793, column: 9, scope: !20106, inlinedAt: !20069)
!20106 = distinct !DILexicalBlock(scope: !20064, file: !2153, line: 793, column: 9)
!20107 = !DILocation(line: 793, column: 9, scope: !20064, inlinedAt: !20069)
!20108 = !DILocation(line: 794, column: 9, scope: !20106, inlinedAt: !20069)
!20109 = !DILocation(line: 799, column: 9, scope: !20110, inlinedAt: !20069)
!20110 = distinct !DILexicalBlock(scope: !20064, file: !2153, line: 799, column: 9)
!20111 = !DILocation(line: 799, column: 11, scope: !20110, inlinedAt: !20069)
!20112 = !DILocation(line: 799, column: 9, scope: !20064, inlinedAt: !20069)
!20113 = !DILocation(line: 800, column: 13, scope: !20110, inlinedAt: !20069)
!20114 = !DILocation(line: 800, column: 20, scope: !20110, inlinedAt: !20069)
!20115 = !DILocation(line: 800, column: 18, scope: !20110, inlinedAt: !20069)
!20116 = !DILocation(line: 800, column: 11, scope: !20110, inlinedAt: !20069)
!20117 = !DILocation(line: 800, column: 9, scope: !20110, inlinedAt: !20069)
!20118 = !DILocation(line: 802, column: 14, scope: !20110, inlinedAt: !20069)
!20119 = !DILocation(line: 802, column: 11, scope: !20110, inlinedAt: !20069)
!20120 = !DILocation(line: 808, column: 9, scope: !20121, inlinedAt: !20069)
!20121 = distinct !DILexicalBlock(scope: !20064, file: !2153, line: 808, column: 9)
!20122 = !DILocation(line: 808, column: 9, scope: !20064, inlinedAt: !20069)
!20123 = !DILocation(line: 809, column: 9, scope: !20121, inlinedAt: !20069)
!20124 = !DILocation(line: 811, column: 13, scope: !20064, inlinedAt: !20069)
!20125 = !DILocation(line: 811, column: 6, scope: !20064, inlinedAt: !20069)
!20126 = !DILocation(line: 811, column: 11, scope: !20064, inlinedAt: !20069)
!20127 = !DILocation(line: 812, column: 11, scope: !20064, inlinedAt: !20069)
!20128 = !DILocation(line: 812, column: 6, scope: !20064, inlinedAt: !20069)
!20129 = !DILocation(line: 812, column: 9, scope: !20064, inlinedAt: !20069)
!20130 = !DILocation(line: 814, column: 5, scope: !20064, inlinedAt: !20069)
!20131 = !DILocation(line: 815, column: 1, scope: !20064, inlinedAt: !20069)
!20132 = !DILocation(line: 840, column: 23, scope: !20059)
!20133 = !DILocation(line: 841, column: 13, scope: !20134)
!20134 = distinct !DILexicalBlock(scope: !20059, file: !2153, line: 841, column: 13)
!20135 = !DILocation(line: 841, column: 13, scope: !20059)
!20136 = !DILocation(line: 842, column: 13, scope: !20134)
!20137 = !DILocation(line: 844, column: 22, scope: !20059)
!20138 = !DILocation(line: 844, column: 20, scope: !20059)
!20139 = !DILocation(line: 845, column: 20, scope: !20059)
!20140 = !DILocation(line: 845, column: 24, scope: !20059)
!20141 = !DILocation(line: 845, column: 37, scope: !20059)
!20142 = !DILocation(line: 845, column: 18, scope: !20059)
!20143 = !DILocation(line: 846, column: 16, scope: !20059)
!20144 = !DILocation(line: 846, column: 20, scope: !20059)
!20145 = !DILocation(line: 846, column: 33, scope: !20059)
!20146 = !DILocation(line: 846, column: 14, scope: !20059)
!20147 = !DILocation(line: 849, column: 34, scope: !20148)
!20148 = distinct !DILexicalBlock(scope: !20003, file: !2153, line: 849, column: 9)
!20149 = !DILocation(line: 849, column: 43, scope: !20148)
!20150 = !DILocation(line: 849, column: 48, scope: !20148)
!20151 = !DILocation(line: 849, column: 62, scope: !20148)
!20152 = !DILocalVariable(name: "request", arg: 1, scope: !20153, file: !2153, line: 735, type: !2169)
!20153 = distinct !DISubprogram(name: "client_has_fresh_content", scope: !2153, file: !2153, line: 735, type: !20154, scopeLine: 736, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !286)
!20154 = !DISubroutineType(types: !20155)
!20155 = !{!137, !2169, !151}
!20156 = !DILocation(line: 735, column: 42, scope: !20153, inlinedAt: !20157)
!20157 = distinct !DILocation(line: 849, column: 9, scope: !20148)
!20158 = !DILocalVariable(name: "mtime", arg: 2, scope: !20153, file: !2153, line: 735, type: !151)
!20159 = !DILocation(line: 735, column: 58, scope: !20153, inlinedAt: !20157)
!20160 = !DILocation(line: 737, column: 12, scope: !20153, inlinedAt: !20157)
!20161 = !DILocation(line: 737, column: 21, scope: !20153, inlinedAt: !20157)
!20162 = !DILocation(line: 737, column: 28, scope: !20153, inlinedAt: !20157)
!20163 = !DILocation(line: 737, column: 46, scope: !20153, inlinedAt: !20157)
!20164 = !DILocation(line: 737, column: 49, scope: !20153, inlinedAt: !20157)
!20165 = !DILocation(line: 737, column: 58, scope: !20153, inlinedAt: !20157)
!20166 = !DILocation(line: 737, column: 67, scope: !20153, inlinedAt: !20157)
!20167 = !DILocation(line: 737, column: 74, scope: !20153, inlinedAt: !20157)
!20168 = !DILocation(line: 737, column: 55, scope: !20153, inlinedAt: !20157)
!20169 = !DILocation(line: 0, scope: !20153, inlinedAt: !20157)
!20170 = !DILocation(line: 849, column: 9, scope: !20003)
!20171 = !DILocation(line: 850, column: 23, scope: !20148)
!20172 = !DILocation(line: 850, column: 9, scope: !20148)
!20173 = !DILocation(line: 852, column: 34, scope: !20003)
!20174 = !DILocation(line: 852, column: 43, scope: !20003)
!20175 = !DILocation(line: 852, column: 58, scope: !20003)
!20176 = !DILocation(line: 852, column: 63, scope: !20003)
!20177 = !DILocation(line: 853, column: 17, scope: !20003)
!20178 = !DILocation(line: 853, column: 29, scope: !20003)
!20179 = !DILocation(line: 852, column: 18, scope: !20003)
!20180 = !DILocation(line: 852, column: 16, scope: !20003)
!20181 = !DILocation(line: 854, column: 9, scope: !20182)
!20182 = distinct !DILexicalBlock(scope: !20003, file: !2153, line: 854, column: 9)
!20183 = !DILocation(line: 854, column: 9, scope: !20003)
!20184 = !DILocation(line: 855, column: 9, scope: !20182)
!20185 = !DILocation(line: 857, column: 9, scope: !20186)
!20186 = distinct !DILexicalBlock(scope: !20003, file: !2153, line: 857, column: 9)
!20187 = !DILocation(line: 857, column: 18, scope: !20186)
!20188 = !DILocation(line: 857, column: 24, scope: !20186)
!20189 = !DILocation(line: 857, column: 46, scope: !20186)
!20190 = !DILocation(line: 857, column: 49, scope: !20186)
!20191 = !DILocation(line: 857, column: 63, scope: !20186)
!20192 = !DILocation(line: 857, column: 9, scope: !20003)
!20193 = !DILocation(line: 858, column: 20, scope: !20194)
!20194 = distinct !DILexicalBlock(scope: !20186, file: !2153, line: 857, column: 85)
!20195 = !DILocation(line: 858, column: 29, scope: !20194)
!20196 = !DILocation(line: 858, column: 38, scope: !20194)
!20197 = !DILocation(line: 858, column: 9, scope: !20194)
!20198 = !DILocation(line: 859, column: 5, scope: !20194)
!20199 = !DILocalVariable(name: "priv", scope: !20200, file: !2153, line: 860, type: !2377)
!20200 = distinct !DILexicalBlock(scope: !20186, file: !2153, line: 859, column: 12)
!20201 = !DILocation(line: 860, column: 29, scope: !20200)
!20202 = !DILocation(line: 860, column: 36, scope: !20200)
!20203 = !DILocation(line: 860, column: 45, scope: !20200)
!20204 = !DILocation(line: 860, column: 54, scope: !20200)
!20205 = !DILocation(line: 860, column: 61, scope: !20200)
!20206 = !DILocalVariable(name: "file_fd", scope: !20200, file: !2153, line: 868, type: !34)
!20207 = !DILocation(line: 868, column: 13, scope: !20200)
!20208 = !DILocation(line: 868, column: 35, scope: !20200)
!20209 = !DILocation(line: 868, column: 44, scope: !20200)
!20210 = !DILocation(line: 868, column: 50, scope: !20200)
!20211 = !DILocation(line: 868, column: 55, scope: !20200)
!20212 = !DILocation(line: 868, column: 59, scope: !20200)
!20213 = !DILocation(line: 868, column: 69, scope: !20200)
!20214 = !DILocation(line: 868, column: 75, scope: !20200)
!20215 = !DILocation(line: 868, column: 23, scope: !20200)
!20216 = !DILocation(line: 869, column: 13, scope: !20217)
!20217 = distinct !DILexicalBlock(scope: !20200, file: !2153, line: 869, column: 13)
!20218 = !DILocation(line: 869, column: 13, scope: !20200)
!20219 = !DILocation(line: 870, column: 21, scope: !20220)
!20220 = distinct !DILexicalBlock(scope: !20217, file: !2153, line: 869, column: 36)
!20221 = !DILocation(line: 870, column: 13, scope: !20220)
!20222 = !DILocation(line: 872, column: 17, scope: !20223)
!20223 = distinct !DILexicalBlock(scope: !20220, file: !2153, line: 870, column: 30)
!20224 = !DILocation(line: 874, column: 17, scope: !20223)
!20225 = !DILocation(line: 876, column: 17, scope: !20223)
!20226 = !DILocation(line: 880, column: 19, scope: !20200)
!20227 = !DILocation(line: 880, column: 28, scope: !20200)
!20228 = !DILocation(line: 880, column: 37, scope: !20200)
!20229 = !DILocation(line: 880, column: 9, scope: !20200)
!20230 = !DILocation(line: 881, column: 23, scope: !20200)
!20231 = !DILocation(line: 881, column: 32, scope: !20200)
!20232 = !DILocation(line: 881, column: 41, scope: !20200)
!20233 = !DILocation(line: 881, column: 55, scope: !20200)
!20234 = !DILocation(line: 881, column: 9, scope: !20200)
!20235 = !DILocation(line: 884, column: 12, scope: !20003)
!20236 = !DILocation(line: 884, column: 5, scope: !20003)
!20237 = !DILocation(line: 885, column: 1, scope: !20003)
!20238 = distinct !DISubprogram(name: "sendfile_init", scope: !2153, file: !2153, line: 378, type: !2375, scopeLine: 382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !286)
!20239 = !DILocalVariable(name: "ce", arg: 1, scope: !20238, file: !2153, line: 378, type: !2355)
!20240 = !DILocation(line: 378, column: 35, scope: !20238)
!20241 = !DILocalVariable(name: "priv", arg: 2, scope: !20238, file: !2153, line: 379, type: !2377)
!20242 = !DILocation(line: 379, column: 36, scope: !20238)
!20243 = !DILocalVariable(name: "full_path", arg: 3, scope: !20238, file: !2153, line: 380, type: !205)
!20244 = !DILocation(line: 380, column: 28, scope: !20238)
!20245 = !DILocalVariable(name: "st", arg: 4, scope: !20238, file: !2153, line: 381, type: !2392)
!20246 = !DILocation(line: 381, column: 29, scope: !20238)
!20247 = !DILocalVariable(name: "sd", scope: !20238, file: !2153, line: 383, type: !2345)
!20248 = !DILocation(line: 383, column: 28, scope: !20238)
!20249 = !DILocation(line: 383, column: 59, scope: !20238)
!20250 = !DILocation(line: 383, column: 62, scope: !20238)
!20251 = !DILocalVariable(name: "compressed_st", scope: !20238, file: !2153, line: 384, type: !2393)
!20252 = !DILocation(line: 384, column: 17, scope: !20238)
!20253 = !DILocation(line: 387, column: 17, scope: !20238)
!20254 = !DILocation(line: 387, column: 29, scope: !20238)
!20255 = !DILocation(line: 387, column: 35, scope: !20238)
!20256 = !DILocation(line: 387, column: 40, scope: !20238)
!20257 = !DILocation(line: 387, column: 27, scope: !20238)
!20258 = !DILocation(line: 386, column: 21, scope: !20238)
!20259 = !DILocation(line: 386, column: 5, scope: !20238)
!20260 = !DILocation(line: 386, column: 9, scope: !20238)
!20261 = !DILocation(line: 386, column: 19, scope: !20238)
!20262 = !DILocation(line: 389, column: 9, scope: !20263)
!20263 = distinct !DILexicalBlock(scope: !20238, file: !2153, line: 389, column: 9)
!20264 = !DILocation(line: 389, column: 9, scope: !20238)
!20265 = !DILocation(line: 390, column: 9, scope: !20263)
!20266 = !DILocalVariable(name: "len", scope: !20238, file: !2153, line: 393, type: !34)
!20267 = !DILocation(line: 393, column: 9, scope: !20238)
!20268 = !DILocation(line: 393, column: 25, scope: !20238)
!20269 = !DILocation(line: 393, column: 29, scope: !20238)
!20270 = !DILocation(line: 393, column: 40, scope: !20238)
!20271 = !DILocation(line: 393, column: 59, scope: !20238)
!20272 = !DILocation(line: 393, column: 71, scope: !20238)
!20273 = !DILocation(line: 393, column: 77, scope: !20238)
!20274 = !DILocation(line: 393, column: 82, scope: !20238)
!20275 = !DILocation(line: 393, column: 69, scope: !20238)
!20276 = !DILocation(line: 393, column: 91, scope: !20238)
!20277 = !DILocation(line: 393, column: 15, scope: !20238)
!20278 = !DILocation(line: 394, column: 9, scope: !20279)
!20279 = distinct !DILexicalBlock(scope: !20238, file: !2153, line: 394, column: 9)
!20280 = !DILocation(line: 394, column: 9, scope: !20238)
!20281 = !DILocation(line: 395, column: 9, scope: !20279)
!20282 = !DILocalVariable(name: "ret", scope: !20238, file: !2153, line: 397, type: !34)
!20283 = !DILocation(line: 397, column: 9, scope: !20238)
!20284 = !DILocation(line: 397, column: 23, scope: !20238)
!20285 = !DILocation(line: 397, column: 29, scope: !20238)
!20286 = !DILocation(line: 397, column: 34, scope: !20238)
!20287 = !DILocation(line: 397, column: 38, scope: !20238)
!20288 = !DILocation(line: 397, column: 42, scope: !20238)
!20289 = !DILocation(line: 397, column: 53, scope: !20238)
!20290 = !DILocation(line: 397, column: 15, scope: !20238)
!20291 = !DILocation(line: 398, column: 9, scope: !20292)
!20292 = distinct !DILexicalBlock(scope: !20238, file: !2153, line: 398, column: 9)
!20293 = !DILocalVariable(name: "compressed_sz", arg: 1, scope: !2482, file: !2153, line: 308, type: !490)
!20294 = !DILocation(line: 308, column: 36, scope: !2482, inlinedAt: !20295)
!20295 = distinct !DILocation(line: 398, column: 9, scope: !20292)
!20296 = !DILocalVariable(name: "uncompressed_sz", arg: 2, scope: !2482, file: !2153, line: 308, type: !490)
!20297 = !DILocation(line: 308, column: 64, scope: !2482, inlinedAt: !20295)
!20298 = !DILocation(line: 312, column: 14, scope: !2482, inlinedAt: !20295)
!20299 = !DILocation(line: 312, column: 28, scope: !2482, inlinedAt: !20295)
!20300 = !DILocation(line: 312, column: 54, scope: !2482, inlinedAt: !20295)
!20301 = !DILocation(line: 312, column: 52, scope: !2482, inlinedAt: !20295)
!20302 = !DILocation(line: 0, scope: !20292)
!20303 = !DILocation(line: 398, column: 9, scope: !20238)
!20304 = !DILocation(line: 400, column: 53, scope: !20305)
!20305 = distinct !DILexicalBlock(scope: !20292, file: !2153, line: 399, column: 89)
!20306 = !DILocation(line: 400, column: 9, scope: !20305)
!20307 = !DILocation(line: 400, column: 13, scope: !20305)
!20308 = !DILocation(line: 400, column: 24, scope: !20305)
!20309 = !DILocation(line: 400, column: 29, scope: !20305)
!20310 = !DILocation(line: 401, column: 5, scope: !20305)
!20311 = !DILocation(line: 402, column: 14, scope: !20312)
!20312 = distinct !DILexicalBlock(scope: !20292, file: !2153, line: 401, column: 12)
!20313 = !DILocation(line: 402, column: 18, scope: !20312)
!20314 = !DILocation(line: 402, column: 29, scope: !20312)
!20315 = !DILocation(line: 402, column: 9, scope: !20312)
!20316 = !DILabel(scope: !20312, name: "only_uncompressed", file: !2153, line: 404)
!20317 = !DILocation(line: 404, column: 1, scope: !20312)
!20318 = !DILocation(line: 405, column: 9, scope: !20312)
!20319 = !DILocation(line: 405, column: 13, scope: !20312)
!20320 = !DILocation(line: 405, column: 24, scope: !20312)
!20321 = !DILocation(line: 405, column: 33, scope: !20312)
!20322 = !DILocation(line: 406, column: 9, scope: !20312)
!20323 = !DILocation(line: 406, column: 13, scope: !20312)
!20324 = !DILocation(line: 406, column: 24, scope: !20312)
!20325 = !DILocation(line: 406, column: 29, scope: !20312)
!20326 = !DILocation(line: 410, column: 37, scope: !20238)
!20327 = !DILocation(line: 410, column: 41, scope: !20238)
!20328 = !DILocation(line: 410, column: 5, scope: !20238)
!20329 = !DILocation(line: 410, column: 9, scope: !20238)
!20330 = !DILocation(line: 410, column: 22, scope: !20238)
!20331 = !DILocation(line: 410, column: 27, scope: !20238)
!20332 = !DILocation(line: 411, column: 40, scope: !20238)
!20333 = !DILocation(line: 411, column: 52, scope: !20238)
!20334 = !DILocation(line: 411, column: 58, scope: !20238)
!20335 = !DILocation(line: 411, column: 63, scope: !20238)
!20336 = !DILocation(line: 411, column: 50, scope: !20238)
!20337 = !DILocation(line: 411, column: 72, scope: !20238)
!20338 = !DILocation(line: 411, column: 33, scope: !20238)
!20339 = !DILocation(line: 411, column: 5, scope: !20238)
!20340 = !DILocation(line: 411, column: 9, scope: !20238)
!20341 = !DILocation(line: 411, column: 22, scope: !20238)
!20342 = !DILocation(line: 411, column: 31, scope: !20238)
!20343 = !DILocation(line: 412, column: 9, scope: !20344)
!20344 = distinct !DILexicalBlock(scope: !20238, file: !2153, line: 412, column: 9)
!20345 = !DILocation(line: 412, column: 9, scope: !20238)
!20346 = !DILocation(line: 413, column: 14, scope: !20347)
!20347 = distinct !DILexicalBlock(scope: !20344, file: !2153, line: 412, column: 47)
!20348 = !DILocation(line: 413, column: 18, scope: !20347)
!20349 = !DILocation(line: 413, column: 29, scope: !20347)
!20350 = !DILocation(line: 413, column: 9, scope: !20347)
!20351 = !DILocation(line: 414, column: 9, scope: !20347)
!20352 = !DILocation(line: 417, column: 5, scope: !20238)
!20353 = !DILocation(line: 418, column: 1, scope: !20238)
!20354 = distinct !DISubprogram(name: "sendfile_free", scope: !2153, file: !2153, line: 571, type: !116, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !286)
!20355 = !DILocalVariable(name: "data", arg: 1, scope: !20354, file: !2153, line: 571, type: !111)
!20356 = !DILocation(line: 571, column: 21, scope: !20354)
!20357 = !DILocalVariable(name: "sd", scope: !20354, file: !2153, line: 573, type: !2345)
!20358 = !DILocation(line: 573, column: 28, scope: !20354)
!20359 = !DILocation(line: 573, column: 33, scope: !20354)
!20360 = !DILocation(line: 575, column: 10, scope: !20354)
!20361 = !DILocation(line: 575, column: 14, scope: !20354)
!20362 = !DILocation(line: 575, column: 25, scope: !20354)
!20363 = !DILocation(line: 575, column: 5, scope: !20354)
!20364 = !DILocation(line: 576, column: 10, scope: !20354)
!20365 = !DILocation(line: 576, column: 14, scope: !20354)
!20366 = !DILocation(line: 576, column: 27, scope: !20354)
!20367 = !DILocation(line: 576, column: 5, scope: !20354)
!20368 = !DILocation(line: 577, column: 1, scope: !20354)
!20369 = distinct !DISubprogram(name: "prepare_headers", scope: !2153, file: !2153, line: 741, type: !20370, scopeLine: 748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !286)
!20370 = !DISubroutineType(types: !20371)
!20371 = !{!55, !2169, !6, !2355, !55, !205, !52, !55}
!20372 = !DILocalVariable(name: "request", arg: 1, scope: !20369, file: !2153, line: 741, type: !2169)
!20373 = !DILocation(line: 741, column: 33, scope: !20369)
!20374 = !DILocalVariable(name: "return_status", arg: 2, scope: !20369, file: !2153, line: 742, type: !6)
!20375 = !DILocation(line: 742, column: 37, scope: !20369)
!20376 = !DILocalVariable(name: "fce", arg: 3, scope: !20369, file: !2153, line: 743, type: !2355)
!20377 = !DILocation(line: 743, column: 38, scope: !20369)
!20378 = !DILocalVariable(name: "size", arg: 4, scope: !20369, file: !2153, line: 744, type: !55)
!20379 = !DILocation(line: 744, column: 25, scope: !20369)
!20380 = !DILocalVariable(name: "compression_type", arg: 5, scope: !20369, file: !2153, line: 745, type: !205)
!20381 = !DILocation(line: 745, column: 30, scope: !20369)
!20382 = !DILocalVariable(name: "header_buf", arg: 6, scope: !20369, file: !2153, line: 746, type: !52)
!20383 = !DILocation(line: 746, column: 24, scope: !20369)
!20384 = !DILocalVariable(name: "header_buf_size", arg: 7, scope: !20369, file: !2153, line: 747, type: !55)
!20385 = !DILocation(line: 747, column: 25, scope: !20369)
!20386 = !DILocalVariable(name: "headers", scope: !20369, file: !2153, line: 749, type: !20387)
!20387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2256, size: 384, elements: !281)
!20388 = !DILocation(line: 749, column: 22, scope: !20369)
!20389 = !DILocation(line: 751, column: 33, scope: !20369)
!20390 = !DILocation(line: 751, column: 5, scope: !20369)
!20391 = !DILocation(line: 751, column: 14, scope: !20369)
!20392 = !DILocation(line: 751, column: 23, scope: !20369)
!20393 = !DILocation(line: 751, column: 31, scope: !20369)
!20394 = !DILocation(line: 752, column: 40, scope: !20369)
!20395 = !DILocation(line: 752, column: 5, scope: !20369)
!20396 = !DILocation(line: 752, column: 14, scope: !20369)
!20397 = !DILocation(line: 752, column: 23, scope: !20369)
!20398 = !DILocation(line: 752, column: 38, scope: !20369)
!20399 = !DILocation(line: 754, column: 5, scope: !20369)
!20400 = !DILocation(line: 754, column: 5, scope: !20401)
!20401 = distinct !DILexicalBlock(scope: !20369, file: !2153, line: 754, column: 5)
!20402 = !DILocation(line: 756, column: 9, scope: !20403)
!20403 = distinct !DILexicalBlock(scope: !20369, file: !2153, line: 756, column: 9)
!20404 = !DILocation(line: 756, column: 9, scope: !20369)
!20405 = !DILocation(line: 757, column: 9, scope: !20406)
!20406 = distinct !DILexicalBlock(scope: !20403, file: !2153, line: 756, column: 27)
!20407 = !DILocation(line: 757, column: 9, scope: !20408)
!20408 = distinct !DILexicalBlock(scope: !20406, file: !2153, line: 757, column: 9)
!20409 = !DILocation(line: 758, column: 9, scope: !20406)
!20410 = !DILocation(line: 758, column: 9, scope: !20411)
!20411 = distinct !DILexicalBlock(scope: !20406, file: !2153, line: 758, column: 9)
!20412 = !DILocation(line: 759, column: 5, scope: !20406)
!20413 = !DILocation(line: 760, column: 9, scope: !20414)
!20414 = distinct !DILexicalBlock(scope: !20403, file: !2153, line: 759, column: 12)
!20415 = !DILocation(line: 760, column: 9, scope: !20416)
!20416 = distinct !DILexicalBlock(scope: !20414, file: !2153, line: 760, column: 9)
!20417 = !DILocation(line: 763, column: 41, scope: !20369)
!20418 = !DILocation(line: 763, column: 50, scope: !20369)
!20419 = !DILocation(line: 764, column: 37, scope: !20369)
!20420 = !DILocation(line: 764, column: 49, scope: !20369)
!20421 = !DILocation(line: 763, column: 12, scope: !20369)
!20422 = !DILocation(line: 763, column: 5, scope: !20369)
!20423 = !DILocation(line: 231, column: 46, scope: !13330)
!20424 = !DILocation(line: 231, column: 74, scope: !13330)
!20425 = !DILocation(line: 231, column: 87, scope: !13330)
!20426 = !DILocation(line: 231, column: 105, scope: !13330)
!20427 = !DILocation(line: 233, column: 11, scope: !13330)
!20428 = !DILocation(line: 234, column: 11, scope: !13330)
!20429 = !DILocation(line: 234, column: 27, scope: !13330)
!20430 = !DILocation(line: 234, column: 37, scope: !13330)
!20431 = !DILocation(line: 234, column: 35, scope: !13330)
!20432 = !DILocation(line: 235, column: 10, scope: !13330)
!20433 = !DILocation(line: 236, column: 10, scope: !13330)
!20434 = !DILocation(line: 237, column: 10, scope: !13330)
!20435 = !DILocation(line: 239, column: 17, scope: !13330)
!20436 = !DILocation(line: 239, column: 15, scope: !13330)
!20437 = !DILocation(line: 241, column: 9, scope: !13357)
!20438 = !DILocation(line: 241, column: 18, scope: !13357)
!20439 = !DILocation(line: 241, column: 24, scope: !13357)
!20440 = !DILocation(line: 241, column: 9, scope: !13330)
!20441 = !DILocation(line: 242, column: 9, scope: !13357)
!20442 = !DILocation(line: 242, column: 9, scope: !13362)
!20443 = !DILocation(line: 242, column: 9, scope: !13363)
!20444 = !DILocation(line: 244, column: 9, scope: !13357)
!20445 = !DILocation(line: 244, column: 9, scope: !13366)
!20446 = !DILocation(line: 244, column: 9, scope: !13367)
!20447 = !DILocation(line: 245, column: 5, scope: !13330)
!20448 = !DILocation(line: 245, column: 5, scope: !13370)
!20449 = !DILocation(line: 245, column: 5, scope: !13373)
!20450 = !DILocation(line: 245, column: 5, scope: !13374)
!20451 = !DILocation(line: 247, column: 9, scope: !13377)
!20452 = !DILocation(line: 247, column: 18, scope: !13377)
!20453 = !DILocation(line: 247, column: 24, scope: !13377)
!20454 = !DILocation(line: 247, column: 9, scope: !13330)
!20455 = !DILocation(line: 248, column: 9, scope: !13384)
!20456 = !DILocation(line: 248, column: 9, scope: !13382)
!20457 = !DILocation(line: 248, column: 9, scope: !13383)
!20458 = !DILocation(line: 249, column: 5, scope: !13384)
!20459 = !DILocation(line: 249, column: 16, scope: !13388)
!20460 = !DILocation(line: 249, column: 25, scope: !13388)
!20461 = !DILocation(line: 249, column: 31, scope: !13388)
!20462 = !DILocation(line: 249, column: 16, scope: !13377)
!20463 = !DILocation(line: 251, column: 5, scope: !13393)
!20464 = !DILocation(line: 252, column: 9, scope: !13397)
!20465 = !DILocation(line: 252, column: 9, scope: !13395)
!20466 = !DILocation(line: 252, column: 9, scope: !13396)
!20467 = !DILocation(line: 253, column: 13, scope: !13400)
!20468 = !DILocation(line: 253, column: 22, scope: !13400)
!20469 = !DILocation(line: 253, column: 31, scope: !13400)
!20470 = !DILocation(line: 253, column: 38, scope: !13400)
!20471 = !DILocation(line: 253, column: 13, scope: !13397)
!20472 = !DILocation(line: 254, column: 13, scope: !13400)
!20473 = !DILocation(line: 254, column: 13, scope: !13406)
!20474 = !DILocation(line: 254, column: 13, scope: !13410)
!20475 = !DILocation(line: 254, column: 13, scope: !13412)
!20476 = !DILocation(line: 254, column: 13, scope: !13413)
!20477 = !DILocation(line: 256, column: 13, scope: !13400)
!20478 = !DILocation(line: 256, column: 13, scope: !13416)
!20479 = !DILocation(line: 256, column: 13, scope: !13420)
!20480 = !DILocation(line: 256, column: 13, scope: !13422)
!20481 = !DILocation(line: 256, column: 13, scope: !13423)
!20482 = !DILocation(line: 259, column: 5, scope: !13330)
!20483 = !DILocation(line: 259, column: 5, scope: !13426)
!20484 = !DILocation(line: 259, column: 5, scope: !13427)
!20485 = !DILocation(line: 260, column: 5, scope: !13330)
!20486 = !DILocation(line: 260, column: 5, scope: !13430)
!20487 = !DILocation(line: 260, column: 5, scope: !13433)
!20488 = !DILocation(line: 260, column: 5, scope: !13434)
!20489 = !DILocation(line: 262, column: 9, scope: !13437)
!20490 = !DILocation(line: 262, column: 18, scope: !13437)
!20491 = !DILocation(line: 262, column: 24, scope: !13437)
!20492 = !DILocation(line: 262, column: 30, scope: !13437)
!20493 = !DILocation(line: 262, column: 9, scope: !13330)
!20494 = !DILocation(line: 263, column: 9, scope: !13437)
!20495 = !DILocation(line: 263, column: 9, scope: !13443)
!20496 = !DILocation(line: 263, column: 9, scope: !13444)
!20497 = !DILocation(line: 265, column: 9, scope: !13437)
!20498 = !DILocation(line: 265, column: 9, scope: !13447)
!20499 = !DILocation(line: 265, column: 9, scope: !13448)
!20500 = !DILocation(line: 267, column: 10, scope: !13451)
!20501 = !DILocation(line: 267, column: 17, scope: !13451)
!20502 = !DILocation(line: 267, column: 36, scope: !13451)
!20503 = !DILocation(line: 267, column: 39, scope: !13451)
!20504 = !DILocation(line: 267, column: 48, scope: !13451)
!20505 = !DILocation(line: 267, column: 57, scope: !13451)
!20506 = !DILocation(line: 267, column: 9, scope: !13330)
!20507 = !DILocation(line: 268, column: 27, scope: !13459)
!20508 = !DILocation(line: 270, column: 23, scope: !13462)
!20509 = !DILocation(line: 270, column: 32, scope: !13462)
!20510 = !DILocation(line: 270, column: 41, scope: !13462)
!20511 = !DILocation(line: 270, column: 21, scope: !13462)
!20512 = !DILocation(line: 270, column: 14, scope: !13462)
!20513 = !DILocation(line: 270, column: 50, scope: !13468)
!20514 = !DILocation(line: 270, column: 58, scope: !13468)
!20515 = !DILocation(line: 270, column: 9, scope: !13462)
!20516 = !DILocation(line: 271, column: 17, scope: !13472)
!20517 = !DILocation(line: 271, column: 17, scope: !13473)
!20518 = !DILocation(line: 272, column: 17, scope: !13472)
!20519 = !DILocation(line: 273, column: 17, scope: !13477)
!20520 = !DILocation(line: 273, column: 17, scope: !13473)
!20521 = !DILocation(line: 274, column: 33, scope: !13477)
!20522 = !DILocation(line: 274, column: 17, scope: !13477)
!20523 = !DILocation(line: 275, column: 17, scope: !13482)
!20524 = !DILocation(line: 275, column: 17, scope: !13473)
!20525 = !DILocation(line: 276, column: 36, scope: !13482)
!20526 = !DILocation(line: 276, column: 17, scope: !13482)
!20527 = !DILocation(line: 278, column: 13, scope: !13487)
!20528 = !DILocation(line: 278, column: 13, scope: !13473)
!20529 = !DILocation(line: 279, column: 13, scope: !13473)
!20530 = !DILocation(line: 280, column: 13, scope: !13473)
!20531 = !DILocation(line: 281, column: 13, scope: !13473)
!20532 = !DILocation(line: 281, column: 13, scope: !13492)
!20533 = !DILocation(line: 281, column: 13, scope: !13495)
!20534 = !DILocation(line: 281, column: 13, scope: !13496)
!20535 = !DILocation(line: 282, column: 13, scope: !13473)
!20536 = !DILocation(line: 283, column: 13, scope: !13473)
!20537 = !DILocation(line: 284, column: 13, scope: !13473)
!20538 = !DILocation(line: 284, column: 13, scope: !13501)
!20539 = !DILocation(line: 284, column: 13, scope: !13504)
!20540 = !DILocation(line: 284, column: 13, scope: !13505)
!20541 = !DILocation(line: 285, column: 9, scope: !13473)
!20542 = !DILocation(line: 270, column: 69, scope: !13468)
!20543 = !DILocation(line: 270, column: 9, scope: !13468)
!20544 = distinct !{!20544, !20515, !20545, !3413}
!20545 = !DILocation(line: 285, column: 9, scope: !13462)
!20546 = !DILocation(line: 286, column: 5, scope: !13459)
!20547 = !DILocation(line: 286, column: 16, scope: !13514)
!20548 = !DILocation(line: 286, column: 23, scope: !13514)
!20549 = !DILocation(line: 286, column: 16, scope: !13451)
!20550 = !DILocation(line: 287, column: 27, scope: !13518)
!20551 = !DILocation(line: 289, column: 23, scope: !13521)
!20552 = !DILocation(line: 289, column: 32, scope: !13521)
!20553 = !DILocation(line: 289, column: 41, scope: !13521)
!20554 = !DILocation(line: 289, column: 21, scope: !13521)
!20555 = !DILocation(line: 289, column: 14, scope: !13521)
!20556 = !DILocation(line: 289, column: 50, scope: !13527)
!20557 = !DILocation(line: 289, column: 58, scope: !13527)
!20558 = !DILocation(line: 289, column: 9, scope: !13521)
!20559 = !DILocation(line: 290, column: 25, scope: !13531)
!20560 = !DILocation(line: 290, column: 33, scope: !13531)
!20561 = !DILocation(line: 290, column: 18, scope: !13531)
!20562 = !DILocation(line: 290, column: 17, scope: !13532)
!20563 = !DILocation(line: 291, column: 17, scope: !13539)
!20564 = !DILocation(line: 291, column: 17, scope: !13537)
!20565 = !DILocation(line: 291, column: 17, scope: !13538)
!20566 = !DILocation(line: 292, column: 17, scope: !13539)
!20567 = !DILocation(line: 292, column: 17, scope: !13542)
!20568 = !DILocation(line: 292, column: 17, scope: !13545)
!20569 = !DILocation(line: 292, column: 17, scope: !13546)
!20570 = !DILocation(line: 293, column: 17, scope: !13539)
!20571 = !DILocation(line: 295, column: 9, scope: !13532)
!20572 = !DILocation(line: 289, column: 69, scope: !13527)
!20573 = !DILocation(line: 289, column: 9, scope: !13527)
!20574 = distinct !{!20574, !20558, !20575, !3413}
!20575 = !DILocation(line: 295, column: 9, scope: !13521)
!20576 = !DILocation(line: 296, column: 5, scope: !13518)
!20577 = !DILocation(line: 298, column: 9, scope: !13555)
!20578 = !DILocation(line: 298, column: 9, scope: !13330)
!20579 = !DILocation(line: 299, column: 9, scope: !13560)
!20580 = !DILocation(line: 299, column: 9, scope: !13558)
!20581 = !DILocation(line: 299, column: 9, scope: !13559)
!20582 = !DILocation(line: 300, column: 9, scope: !13560)
!20583 = !DILocation(line: 300, column: 9, scope: !13563)
!20584 = !DILocation(line: 300, column: 9, scope: !13564)
!20585 = !DILocation(line: 301, column: 5, scope: !13560)
!20586 = !DILocation(line: 303, column: 9, scope: !13568)
!20587 = !DILocation(line: 303, column: 9, scope: !13330)
!20588 = !DILocation(line: 304, column: 9, scope: !13573)
!20589 = !DILocation(line: 304, column: 9, scope: !13571)
!20590 = !DILocation(line: 304, column: 9, scope: !13572)
!20591 = !DILocation(line: 305, column: 9, scope: !13573)
!20592 = !DILocation(line: 305, column: 9, scope: !13576)
!20593 = !DILocation(line: 305, column: 9, scope: !13577)
!20594 = !DILocation(line: 306, column: 5, scope: !13573)
!20595 = !DILocation(line: 308, column: 5, scope: !13330)
!20596 = !DILocation(line: 308, column: 5, scope: !13581)
!20597 = !DILocation(line: 308, column: 5, scope: !13582)
!20598 = !DILocation(line: 310, column: 21, scope: !13330)
!20599 = !DILocation(line: 310, column: 33, scope: !13330)
!20600 = !DILocation(line: 310, column: 31, scope: !13330)
!20601 = !DILocation(line: 310, column: 41, scope: !13330)
!20602 = !DILocation(line: 310, column: 5, scope: !13330)
!20603 = !DILocation(line: 311, column: 1, scope: !13330)
!20604 = distinct !DISubprogram(name: "mmap_serve", scope: !2153, file: !2153, line: 919, type: !2302, scopeLine: 920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !286)
!20605 = !DILocalVariable(name: "request", arg: 1, scope: !20604, file: !2153, line: 919, type: !2169)
!20606 = !DILocation(line: 919, column: 28, scope: !20604)
!20607 = !DILocalVariable(name: "data", arg: 2, scope: !20604, file: !2153, line: 919, type: !111)
!20608 = !DILocation(line: 919, column: 43, scope: !20604)
!20609 = !DILocalVariable(name: "fce", scope: !20604, file: !2153, line: 921, type: !2355)
!20610 = !DILocation(line: 921, column: 25, scope: !20604)
!20611 = !DILocation(line: 921, column: 31, scope: !20604)
!20612 = !DILocalVariable(name: "md", scope: !20604, file: !2153, line: 922, type: !2335)
!20613 = !DILocation(line: 922, column: 24, scope: !20604)
!20614 = !DILocation(line: 922, column: 51, scope: !20604)
!20615 = !DILocation(line: 922, column: 55, scope: !20604)
!20616 = !DILocalVariable(name: "contents", scope: !20604, file: !2153, line: 923, type: !111)
!20617 = !DILocation(line: 923, column: 11, scope: !20604)
!20618 = !DILocalVariable(name: "size", scope: !20604, file: !2153, line: 924, type: !55)
!20619 = !DILocation(line: 924, column: 12, scope: !20604)
!20620 = !DILocalVariable(name: "compressed", scope: !20604, file: !2153, line: 925, type: !205)
!20621 = !DILocation(line: 925, column: 17, scope: !20604)
!20622 = !DILocation(line: 927, column: 9, scope: !20623)
!20623 = distinct !DILexicalBlock(scope: !20604, file: !2153, line: 927, column: 9)
!20624 = !DILocation(line: 927, column: 13, scope: !20623)
!20625 = !DILocation(line: 927, column: 24, scope: !20623)
!20626 = !DILocation(line: 927, column: 29, scope: !20623)
!20627 = !DILocation(line: 927, column: 33, scope: !20623)
!20628 = !DILocation(line: 927, column: 42, scope: !20623)
!20629 = !DILocation(line: 927, column: 48, scope: !20623)
!20630 = !DILocation(line: 927, column: 9, scope: !20604)
!20631 = !DILocation(line: 928, column: 20, scope: !20632)
!20632 = distinct !DILexicalBlock(scope: !20623, file: !2153, line: 927, column: 75)
!20633 = !DILocation(line: 928, column: 24, scope: !20632)
!20634 = !DILocation(line: 928, column: 35, scope: !20632)
!20635 = !DILocation(line: 928, column: 18, scope: !20632)
!20636 = !DILocation(line: 929, column: 16, scope: !20632)
!20637 = !DILocation(line: 929, column: 20, scope: !20632)
!20638 = !DILocation(line: 929, column: 31, scope: !20632)
!20639 = !DILocation(line: 929, column: 14, scope: !20632)
!20640 = !DILocation(line: 930, column: 22, scope: !20632)
!20641 = !DILocation(line: 930, column: 20, scope: !20632)
!20642 = !DILocation(line: 931, column: 5, scope: !20632)
!20643 = !DILocation(line: 932, column: 20, scope: !20644)
!20644 = distinct !DILexicalBlock(scope: !20623, file: !2153, line: 931, column: 12)
!20645 = !DILocation(line: 932, column: 24, scope: !20644)
!20646 = !DILocation(line: 932, column: 37, scope: !20644)
!20647 = !DILocation(line: 932, column: 18, scope: !20644)
!20648 = !DILocation(line: 933, column: 16, scope: !20644)
!20649 = !DILocation(line: 933, column: 20, scope: !20644)
!20650 = !DILocation(line: 933, column: 33, scope: !20644)
!20651 = !DILocation(line: 933, column: 14, scope: !20644)
!20652 = !DILocation(line: 934, column: 22, scope: !20644)
!20653 = !DILocation(line: 934, column: 20, scope: !20644)
!20654 = !DILocation(line: 937, column: 36, scope: !20604)
!20655 = !DILocation(line: 937, column: 45, scope: !20604)
!20656 = !DILocation(line: 937, column: 50, scope: !20604)
!20657 = !DILocation(line: 937, column: 62, scope: !20604)
!20658 = !DILocation(line: 937, column: 72, scope: !20604)
!20659 = !DILocation(line: 937, column: 12, scope: !20604)
!20660 = !DILocation(line: 937, column: 5, scope: !20604)
!20661 = distinct !DISubprogram(name: "mmap_init", scope: !2153, file: !2153, line: 338, type: !2375, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !286)
!20662 = !DILocalVariable(name: "ce", arg: 1, scope: !20661, file: !2153, line: 338, type: !2355)
!20663 = !DILocation(line: 338, column: 31, scope: !20661)
!20664 = !DILocalVariable(name: "priv", arg: 2, scope: !20661, file: !2153, line: 339, type: !2377)
!20665 = !DILocation(line: 339, column: 32, scope: !20661)
!20666 = !DILocalVariable(name: "full_path", arg: 3, scope: !20661, file: !2153, line: 340, type: !205)
!20667 = !DILocation(line: 340, column: 24, scope: !20661)
!20668 = !DILocalVariable(name: "st", arg: 4, scope: !20661, file: !2153, line: 341, type: !2392)
!20669 = !DILocation(line: 341, column: 25, scope: !20661)
!20670 = !DILocalVariable(name: "md", scope: !20661, file: !2153, line: 343, type: !2335)
!20671 = !DILocation(line: 343, column: 24, scope: !20661)
!20672 = !DILocation(line: 343, column: 51, scope: !20661)
!20673 = !DILocation(line: 343, column: 54, scope: !20661)
!20674 = !DILocalVariable(name: "file_fd", scope: !20661, file: !2153, line: 344, type: !34)
!20675 = !DILocation(line: 344, column: 9, scope: !20661)
!20676 = !DILocalVariable(name: "success", scope: !20661, file: !2153, line: 345, type: !137)
!20677 = !DILocation(line: 345, column: 10, scope: !20661)
!20678 = !DILocation(line: 347, column: 22, scope: !20661)
!20679 = !DILocation(line: 347, column: 28, scope: !20661)
!20680 = !DILocation(line: 347, column: 33, scope: !20661)
!20681 = !DILocation(line: 347, column: 37, scope: !20661)
!20682 = !DILocation(line: 347, column: 49, scope: !20661)
!20683 = !DILocation(line: 347, column: 55, scope: !20661)
!20684 = !DILocation(line: 347, column: 60, scope: !20661)
!20685 = !DILocation(line: 347, column: 47, scope: !20661)
!20686 = !DILocation(line: 347, column: 69, scope: !20661)
!20687 = !DILocation(line: 348, column: 17, scope: !20661)
!20688 = !DILocation(line: 348, column: 23, scope: !20661)
!20689 = !DILocation(line: 347, column: 15, scope: !20661)
!20690 = !DILocation(line: 347, column: 13, scope: !20661)
!20691 = !DILocation(line: 349, column: 9, scope: !20692)
!20692 = distinct !DILexicalBlock(scope: !20661, file: !2153, line: 349, column: 9)
!20693 = !DILocation(line: 349, column: 9, scope: !20661)
!20694 = !DILocation(line: 350, column: 9, scope: !20692)
!20695 = !DILocation(line: 352, column: 52, scope: !20661)
!20696 = !DILocation(line: 352, column: 56, scope: !20661)
!20697 = !DILocation(line: 353, column: 50, scope: !20661)
!20698 = !DILocation(line: 352, column: 33, scope: !20661)
!20699 = !DILocation(line: 352, column: 5, scope: !20661)
!20700 = !DILocation(line: 352, column: 9, scope: !20661)
!20701 = !DILocation(line: 352, column: 22, scope: !20661)
!20702 = !DILocation(line: 352, column: 31, scope: !20661)
!20703 = !DILocation(line: 354, column: 9, scope: !20704)
!20704 = distinct !DILexicalBlock(scope: !20661, file: !2153, line: 354, column: 9)
!20705 = !DILocation(line: 354, column: 9, scope: !20661)
!20706 = !DILocation(line: 355, column: 17, scope: !20707)
!20707 = distinct !DILexicalBlock(scope: !20704, file: !2153, line: 354, column: 60)
!20708 = !DILocation(line: 356, column: 9, scope: !20707)
!20709 = !DILocation(line: 359, column: 9, scope: !20710)
!20710 = distinct !DILexicalBlock(scope: !20661, file: !2153, line: 359, column: 9)
!20711 = !DILocation(line: 359, column: 9, scope: !20661)
!20712 = !DILocation(line: 361, column: 9, scope: !20710)
!20713 = !DILocation(line: 363, column: 37, scope: !20661)
!20714 = !DILocation(line: 363, column: 41, scope: !20661)
!20715 = !DILocation(line: 363, column: 5, scope: !20661)
!20716 = !DILocation(line: 363, column: 9, scope: !20661)
!20717 = !DILocation(line: 363, column: 22, scope: !20661)
!20718 = !DILocation(line: 363, column: 27, scope: !20661)
!20719 = !DILocation(line: 364, column: 27, scope: !20661)
!20720 = !DILocation(line: 364, column: 5, scope: !20661)
!20721 = !DILocation(line: 367, column: 17, scope: !20661)
!20722 = !DILocation(line: 367, column: 29, scope: !20661)
!20723 = !DILocation(line: 367, column: 35, scope: !20661)
!20724 = !DILocation(line: 367, column: 40, scope: !20661)
!20725 = !DILocation(line: 367, column: 27, scope: !20661)
!20726 = !DILocation(line: 366, column: 21, scope: !20661)
!20727 = !DILocation(line: 366, column: 5, scope: !20661)
!20728 = !DILocation(line: 366, column: 9, scope: !20661)
!20729 = !DILocation(line: 366, column: 19, scope: !20661)
!20730 = !DILocation(line: 369, column: 13, scope: !20661)
!20731 = !DILocation(line: 369, column: 5, scope: !20661)
!20732 = !DILabel(scope: !20661, name: "close_file", file: !2153, line: 371)
!20733 = !DILocation(line: 371, column: 1, scope: !20661)
!20734 = !DILocation(line: 372, column: 11, scope: !20661)
!20735 = !DILocation(line: 372, column: 5, scope: !20661)
!20736 = !DILocation(line: 374, column: 12, scope: !20661)
!20737 = !DILocation(line: 374, column: 5, scope: !20661)
!20738 = !DILocation(line: 375, column: 1, scope: !20661)
!20739 = distinct !DISubprogram(name: "mmap_free", scope: !2153, file: !2153, line: 562, type: !116, scopeLine: 563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !286)
!20740 = !DILocalVariable(name: "data", arg: 1, scope: !20739, file: !2153, line: 562, type: !111)
!20741 = !DILocation(line: 562, column: 17, scope: !20739)
!20742 = !DILocalVariable(name: "md", scope: !20739, file: !2153, line: 564, type: !2335)
!20743 = !DILocation(line: 564, column: 24, scope: !20739)
!20744 = !DILocation(line: 564, column: 29, scope: !20739)
!20745 = !DILocation(line: 566, column: 12, scope: !20739)
!20746 = !DILocation(line: 566, column: 16, scope: !20739)
!20747 = !DILocation(line: 566, column: 29, scope: !20739)
!20748 = !DILocation(line: 566, column: 39, scope: !20739)
!20749 = !DILocation(line: 566, column: 43, scope: !20739)
!20750 = !DILocation(line: 566, column: 56, scope: !20739)
!20751 = !DILocation(line: 566, column: 5, scope: !20739)
!20752 = !DILocation(line: 567, column: 10, scope: !20739)
!20753 = !DILocation(line: 567, column: 14, scope: !20739)
!20754 = !DILocation(line: 567, column: 25, scope: !20739)
!20755 = !DILocation(line: 567, column: 5, scope: !20739)
!20756 = !DILocation(line: 568, column: 1, scope: !20739)
!20757 = distinct !DISubprogram(name: "compress_cached_entry", scope: !2153, file: !2153, line: 316, type: !20758, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !286)
!20758 = !DISubroutineType(types: !20759)
!20759 = !{null, !2335}
!20760 = !DILocalVariable(name: "md", arg: 1, scope: !20757, file: !2153, line: 316, type: !2335)
!20761 = !DILocation(line: 316, column: 42, scope: !20757)
!20762 = !DILocation(line: 318, column: 41, scope: !20757)
!20763 = !DILocation(line: 318, column: 45, scope: !20757)
!20764 = !DILocation(line: 318, column: 58, scope: !20757)
!20765 = !DILocation(line: 318, column: 27, scope: !20757)
!20766 = !DILocation(line: 318, column: 5, scope: !20757)
!20767 = !DILocation(line: 318, column: 9, scope: !20757)
!20768 = !DILocation(line: 318, column: 20, scope: !20757)
!20769 = !DILocation(line: 318, column: 25, scope: !20757)
!20770 = !DILocation(line: 320, column: 9, scope: !20771)
!20771 = distinct !DILexicalBlock(scope: !20757, file: !2153, line: 320, column: 9)
!20772 = !DILocation(line: 320, column: 9, scope: !20757)
!20773 = !DILocation(line: 321, column: 9, scope: !20771)
!20774 = !DILocation(line: 323, column: 9, scope: !20775)
!20775 = distinct !DILexicalBlock(scope: !20757, file: !2153, line: 323, column: 9)
!20776 = !DILocation(line: 323, column: 9, scope: !20757)
!20777 = !DILocation(line: 325, column: 9, scope: !20775)
!20778 = !DILocation(line: 327, column: 31, scope: !20779)
!20779 = distinct !DILexicalBlock(scope: !20757, file: !2153, line: 327, column: 9)
!20780 = !DILocation(line: 327, column: 35, scope: !20779)
!20781 = !DILocation(line: 327, column: 46, scope: !20779)
!20782 = !DILocation(line: 327, column: 52, scope: !20779)
!20783 = !DILocation(line: 327, column: 56, scope: !20779)
!20784 = !DILocation(line: 327, column: 69, scope: !20779)
!20785 = !DILocation(line: 308, column: 36, scope: !2482, inlinedAt: !20786)
!20786 = distinct !DILocation(line: 327, column: 9, scope: !20779)
!20787 = !DILocation(line: 308, column: 64, scope: !2482, inlinedAt: !20786)
!20788 = !DILocation(line: 312, column: 14, scope: !2482, inlinedAt: !20786)
!20789 = !DILocation(line: 312, column: 28, scope: !2482, inlinedAt: !20786)
!20790 = !DILocation(line: 312, column: 54, scope: !2482, inlinedAt: !20786)
!20791 = !DILocation(line: 312, column: 52, scope: !2482, inlinedAt: !20786)
!20792 = !DILocation(line: 327, column: 9, scope: !20757)
!20793 = !DILocation(line: 328, column: 9, scope: !20779)
!20794 = !DILocation(line: 327, column: 73, scope: !20779)
!20795 = !DILabel(scope: !20757, name: "error_free_compressed", file: !2153, line: 330)
!20796 = !DILocation(line: 330, column: 1, scope: !20757)
!20797 = !DILocation(line: 331, column: 10, scope: !20757)
!20798 = !DILocation(line: 331, column: 14, scope: !20757)
!20799 = !DILocation(line: 331, column: 25, scope: !20757)
!20800 = !DILocation(line: 331, column: 5, scope: !20757)
!20801 = !DILocation(line: 332, column: 5, scope: !20757)
!20802 = !DILocation(line: 332, column: 9, scope: !20757)
!20803 = !DILocation(line: 332, column: 20, scope: !20757)
!20804 = !DILocation(line: 332, column: 29, scope: !20757)
!20805 = !DILabel(scope: !20757, name: "error_zero_out", file: !2153, line: 333)
!20806 = !DILocation(line: 333, column: 1, scope: !20757)
!20807 = !DILocation(line: 334, column: 5, scope: !20757)
!20808 = !DILocation(line: 334, column: 9, scope: !20757)
!20809 = !DILocation(line: 334, column: 20, scope: !20757)
!20810 = !DILocation(line: 334, column: 25, scope: !20757)
!20811 = !DILocation(line: 335, column: 1, scope: !20757)
!20812 = distinct !DISubprogram(name: "serve_contents_and_size", scope: !2153, file: !2153, line: 888, type: !20813, scopeLine: 890, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !286)
!20813 = !DISubroutineType(types: !20814)
!20814 = !{!6, !2169, !2355, !205, !111, !55}
!20815 = !DILocalVariable(name: "request", arg: 1, scope: !20812, file: !2153, line: 888, type: !2169)
!20816 = !DILocation(line: 888, column: 41, scope: !20812)
!20817 = !DILocalVariable(name: "fce", arg: 2, scope: !20812, file: !2153, line: 888, type: !2355)
!20818 = !DILocation(line: 888, column: 70, scope: !20812)
!20819 = !DILocalVariable(name: "compression_type", arg: 3, scope: !20812, file: !2153, line: 889, type: !205)
!20820 = !DILocation(line: 889, column: 25, scope: !20812)
!20821 = !DILocalVariable(name: "contents", arg: 4, scope: !20812, file: !2153, line: 889, type: !111)
!20822 = !DILocation(line: 889, column: 49, scope: !20812)
!20823 = !DILocalVariable(name: "size", arg: 5, scope: !20812, file: !2153, line: 889, type: !55)
!20824 = !DILocation(line: 889, column: 66, scope: !20812)
!20825 = !DILocalVariable(name: "headers", scope: !20812, file: !2153, line: 891, type: !10154)
!20826 = !DILocation(line: 891, column: 10, scope: !20812)
!20827 = !DILocalVariable(name: "header_len", scope: !20812, file: !2153, line: 892, type: !55)
!20828 = !DILocation(line: 892, column: 12, scope: !20812)
!20829 = !DILocalVariable(name: "return_status", scope: !20812, file: !2153, line: 893, type: !6)
!20830 = !DILocation(line: 893, column: 24, scope: !20812)
!20831 = !DILocation(line: 895, column: 34, scope: !20832)
!20832 = distinct !DILexicalBlock(scope: !20812, file: !2153, line: 895, column: 9)
!20833 = !DILocation(line: 895, column: 43, scope: !20832)
!20834 = !DILocation(line: 895, column: 48, scope: !20832)
!20835 = !DILocation(line: 895, column: 62, scope: !20832)
!20836 = !DILocation(line: 735, column: 42, scope: !20153, inlinedAt: !20837)
!20837 = distinct !DILocation(line: 895, column: 9, scope: !20832)
!20838 = !DILocation(line: 735, column: 58, scope: !20153, inlinedAt: !20837)
!20839 = !DILocation(line: 737, column: 12, scope: !20153, inlinedAt: !20837)
!20840 = !DILocation(line: 737, column: 21, scope: !20153, inlinedAt: !20837)
!20841 = !DILocation(line: 737, column: 28, scope: !20153, inlinedAt: !20837)
!20842 = !DILocation(line: 737, column: 46, scope: !20153, inlinedAt: !20837)
!20843 = !DILocation(line: 737, column: 49, scope: !20153, inlinedAt: !20837)
!20844 = !DILocation(line: 737, column: 58, scope: !20153, inlinedAt: !20837)
!20845 = !DILocation(line: 737, column: 67, scope: !20153, inlinedAt: !20837)
!20846 = !DILocation(line: 737, column: 74, scope: !20153, inlinedAt: !20837)
!20847 = !DILocation(line: 737, column: 55, scope: !20153, inlinedAt: !20837)
!20848 = !DILocation(line: 0, scope: !20153, inlinedAt: !20837)
!20849 = !DILocation(line: 895, column: 9, scope: !20812)
!20850 = !DILocation(line: 896, column: 23, scope: !20832)
!20851 = !DILocation(line: 896, column: 9, scope: !20832)
!20852 = !DILocation(line: 898, column: 34, scope: !20812)
!20853 = !DILocation(line: 898, column: 43, scope: !20812)
!20854 = !DILocation(line: 899, column: 35, scope: !20812)
!20855 = !DILocation(line: 899, column: 40, scope: !20812)
!20856 = !DILocation(line: 899, column: 46, scope: !20812)
!20857 = !DILocation(line: 900, column: 35, scope: !20812)
!20858 = !DILocation(line: 898, column: 18, scope: !20812)
!20859 = !DILocation(line: 898, column: 16, scope: !20812)
!20860 = !DILocation(line: 901, column: 9, scope: !20861)
!20861 = distinct !DILexicalBlock(scope: !20812, file: !2153, line: 901, column: 9)
!20862 = !DILocation(line: 901, column: 9, scope: !20812)
!20863 = !DILocation(line: 902, column: 9, scope: !20861)
!20864 = !DILocation(line: 904, column: 9, scope: !20865)
!20865 = distinct !DILexicalBlock(scope: !20812, file: !2153, line: 904, column: 9)
!20866 = !DILocation(line: 904, column: 18, scope: !20865)
!20867 = !DILocation(line: 904, column: 24, scope: !20865)
!20868 = !DILocation(line: 904, column: 46, scope: !20865)
!20869 = !DILocation(line: 904, column: 49, scope: !20865)
!20870 = !DILocation(line: 904, column: 63, scope: !20865)
!20871 = !DILocation(line: 904, column: 9, scope: !20812)
!20872 = !DILocation(line: 905, column: 20, scope: !20873)
!20873 = distinct !DILexicalBlock(scope: !20865, file: !2153, line: 904, column: 85)
!20874 = !DILocation(line: 905, column: 29, scope: !20873)
!20875 = !DILocation(line: 905, column: 38, scope: !20873)
!20876 = !DILocation(line: 905, column: 9, scope: !20873)
!20877 = !DILocation(line: 906, column: 5, scope: !20873)
!20878 = !DILocalVariable(name: "response_vec", scope: !20879, file: !2153, line: 907, type: !20880)
!20879 = distinct !DILexicalBlock(scope: !20865, file: !2153, line: 906, column: 12)
!20880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20881, size: 256, elements: !159)
!20881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !8576, line: 26, size: 128, elements: !20882)
!20882 = !{!20883, !20884}
!20883 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !20881, file: !8576, line: 28, baseType: !111, size: 64)
!20884 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !20881, file: !8576, line: 29, baseType: !55, size: 64, offset: 64)
!20885 = !DILocation(line: 907, column: 22, scope: !20879)
!20886 = !DILocation(line: 907, column: 39, scope: !20879)
!20887 = !DILocation(line: 908, column: 13, scope: !20879)
!20888 = !DILocation(line: 908, column: 27, scope: !20879)
!20889 = !DILocation(line: 908, column: 47, scope: !20879)
!20890 = !DILocation(line: 909, column: 13, scope: !20879)
!20891 = !DILocation(line: 909, column: 27, scope: !20879)
!20892 = !DILocation(line: 909, column: 48, scope: !20879)
!20893 = !DILocation(line: 912, column: 21, scope: !20879)
!20894 = !DILocation(line: 912, column: 30, scope: !20879)
!20895 = !DILocation(line: 912, column: 9, scope: !20879)
!20896 = !DILocation(line: 915, column: 12, scope: !20812)
!20897 = !DILocation(line: 915, column: 5, scope: !20812)
!20898 = !DILocation(line: 916, column: 1, scope: !20812)
!20899 = distinct !DISubprogram(name: "dirlist_serve", scope: !2153, file: !2153, line: 941, type: !2302, scopeLine: 942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !286)
!20900 = !DILocalVariable(name: "request", arg: 1, scope: !20899, file: !2153, line: 941, type: !2169)
!20901 = !DILocation(line: 941, column: 31, scope: !20899)
!20902 = !DILocalVariable(name: "data", arg: 2, scope: !20899, file: !2153, line: 941, type: !111)
!20903 = !DILocation(line: 941, column: 46, scope: !20899)
!20904 = !DILocalVariable(name: "fce", scope: !20899, file: !2153, line: 943, type: !2355)
!20905 = !DILocation(line: 943, column: 25, scope: !20899)
!20906 = !DILocation(line: 943, column: 31, scope: !20899)
!20907 = !DILocalVariable(name: "dd", scope: !20899, file: !2153, line: 944, type: !2330)
!20908 = !DILocation(line: 944, column: 28, scope: !20899)
!20909 = !DILocation(line: 944, column: 59, scope: !20899)
!20910 = !DILocation(line: 944, column: 63, scope: !20899)
!20911 = !DILocation(line: 946, column: 36, scope: !20899)
!20912 = !DILocation(line: 946, column: 45, scope: !20899)
!20913 = !DILocation(line: 946, column: 50, scope: !20899)
!20914 = !DILocation(line: 947, column: 13, scope: !20899)
!20915 = !DILocation(line: 947, column: 46, scope: !20899)
!20916 = !DILocation(line: 946, column: 12, scope: !20899)
!20917 = !DILocation(line: 946, column: 5, scope: !20899)
!20918 = distinct !DISubprogram(name: "dirlist_init", scope: !2153, file: !2153, line: 421, type: !2375, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !286)
!20919 = !DILocalVariable(name: "ce", arg: 1, scope: !20918, file: !2153, line: 421, type: !2355)
!20920 = !DILocation(line: 421, column: 34, scope: !20918)
!20921 = !DILocalVariable(name: "priv", arg: 2, scope: !20918, file: !2153, line: 422, type: !2377)
!20922 = !DILocation(line: 422, column: 36, scope: !20918)
!20923 = !DILocalVariable(name: "full_path", arg: 3, scope: !20918, file: !2153, line: 423, type: !205)
!20924 = !DILocation(line: 423, column: 28, scope: !20918)
!20925 = !DILocalVariable(name: "st", arg: 4, scope: !20918, file: !2153, line: 424, type: !2392)
!20926 = !DILocation(line: 424, column: 29, scope: !20918)
!20927 = !DILocalVariable(name: "dd", scope: !20918, file: !2153, line: 426, type: !2330)
!20928 = !DILocation(line: 426, column: 28, scope: !20918)
!20929 = !DILocation(line: 426, column: 59, scope: !20918)
!20930 = !DILocation(line: 426, column: 62, scope: !20918)
!20931 = !DILocalVariable(name: "vars", scope: !20918, file: !2153, line: 427, type: !19160)
!20932 = !DILocation(line: 427, column: 24, scope: !20918)
!20933 = !DILocation(line: 427, column: 31, scope: !20918)
!20934 = !DILocation(line: 428, column: 22, scope: !20918)
!20935 = !DILocation(line: 429, column: 21, scope: !20918)
!20936 = !DILocation(line: 429, column: 33, scope: !20918)
!20937 = !DILocation(line: 429, column: 39, scope: !20918)
!20938 = !DILocation(line: 429, column: 44, scope: !20918)
!20939 = !DILocation(line: 429, column: 31, scope: !20918)
!20940 = !DILocation(line: 432, column: 35, scope: !20918)
!20941 = !DILocation(line: 432, column: 41, scope: !20918)
!20942 = !DILocation(line: 432, column: 20, scope: !20918)
!20943 = !DILocation(line: 432, column: 5, scope: !20918)
!20944 = !DILocation(line: 432, column: 9, scope: !20918)
!20945 = !DILocation(line: 432, column: 18, scope: !20918)
!20946 = !DILocation(line: 433, column: 5, scope: !20918)
!20947 = !DILocation(line: 433, column: 9, scope: !20918)
!20948 = !DILocation(line: 433, column: 19, scope: !20918)
!20949 = !DILocation(line: 435, column: 14, scope: !20918)
!20950 = !DILocation(line: 435, column: 18, scope: !20918)
!20951 = !DILocation(line: 435, column: 13, scope: !20918)
!20952 = !DILocation(line: 435, column: 12, scope: !20918)
!20953 = !DILocation(line: 435, column: 5, scope: !20918)
!20954 = distinct !DISubprogram(name: "dirlist_free", scope: !2153, file: !2153, line: 580, type: !116, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !286)
!20955 = !DILocalVariable(name: "data", arg: 1, scope: !20954, file: !2153, line: 580, type: !111)
!20956 = !DILocation(line: 580, column: 20, scope: !20954)
!20957 = !DILocalVariable(name: "dd", scope: !20954, file: !2153, line: 582, type: !2330)
!20958 = !DILocation(line: 582, column: 28, scope: !20954)
!20959 = !DILocation(line: 582, column: 33, scope: !20954)
!20960 = !DILocation(line: 584, column: 17, scope: !20954)
!20961 = !DILocation(line: 584, column: 21, scope: !20954)
!20962 = !DILocation(line: 584, column: 5, scope: !20954)
!20963 = !DILocation(line: 585, column: 1, scope: !20954)
!20964 = distinct !DISubprogram(name: "redir_serve", scope: !2153, file: !2153, line: 951, type: !2302, scopeLine: 952, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !286)
!20965 = !DILocalVariable(name: "request", arg: 1, scope: !20964, file: !2153, line: 951, type: !2169)
!20966 = !DILocation(line: 951, column: 29, scope: !20964)
!20967 = !DILocalVariable(name: "data", arg: 2, scope: !20964, file: !2153, line: 951, type: !111)
!20968 = !DILocation(line: 951, column: 44, scope: !20964)
!20969 = !DILocalVariable(name: "fce", scope: !20964, file: !2153, line: 953, type: !2355)
!20970 = !DILocation(line: 953, column: 25, scope: !20964)
!20971 = !DILocation(line: 953, column: 31, scope: !20964)
!20972 = !DILocalVariable(name: "rd", scope: !20964, file: !2153, line: 954, type: !2325)
!20973 = !DILocation(line: 954, column: 25, scope: !20964)
!20974 = !DILocation(line: 954, column: 53, scope: !20964)
!20975 = !DILocation(line: 954, column: 57, scope: !20964)
!20976 = !DILocalVariable(name: "header_buf", scope: !20964, file: !2153, line: 955, type: !10154)
!20977 = !DILocation(line: 955, column: 10, scope: !20964)
!20978 = !DILocalVariable(name: "header_buf_size", scope: !20964, file: !2153, line: 956, type: !55)
!20979 = !DILocation(line: 956, column: 12, scope: !20964)
!20980 = !DILocalVariable(name: "headers", scope: !20964, file: !2153, line: 957, type: !20981)
!20981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2256, size: 256, elements: !159)
!20982 = !DILocation(line: 957, column: 22, scope: !20964)
!20983 = !DILocation(line: 959, column: 33, scope: !20964)
!20984 = !DILocation(line: 959, column: 5, scope: !20964)
!20985 = !DILocation(line: 959, column: 14, scope: !20964)
!20986 = !DILocation(line: 959, column: 23, scope: !20964)
!20987 = !DILocation(line: 959, column: 31, scope: !20964)
!20988 = !DILocation(line: 960, column: 47, scope: !20964)
!20989 = !DILocation(line: 960, column: 51, scope: !20964)
!20990 = !DILocation(line: 960, column: 40, scope: !20964)
!20991 = !DILocation(line: 960, column: 5, scope: !20964)
!20992 = !DILocation(line: 960, column: 14, scope: !20964)
!20993 = !DILocation(line: 960, column: 23, scope: !20964)
!20994 = !DILocation(line: 960, column: 38, scope: !20964)
!20995 = !DILocation(line: 962, column: 5, scope: !20964)
!20996 = !DILocation(line: 962, column: 5, scope: !20997)
!20997 = distinct !DILexicalBlock(scope: !20964, file: !2153, line: 962, column: 5)
!20998 = !DILocation(line: 963, column: 5, scope: !20964)
!20999 = !DILocation(line: 963, column: 5, scope: !21000)
!21000 = distinct !DILexicalBlock(scope: !20964, file: !2153, line: 963, column: 5)
!21001 = !DILocation(line: 965, column: 52, scope: !20964)
!21002 = !DILocation(line: 966, column: 41, scope: !20964)
!21003 = !DILocation(line: 965, column: 23, scope: !20964)
!21004 = !DILocation(line: 965, column: 21, scope: !20964)
!21005 = !DILocation(line: 967, column: 9, scope: !21006)
!21006 = distinct !DILexicalBlock(scope: !20964, file: !2153, line: 967, column: 9)
!21007 = !DILocation(line: 967, column: 9, scope: !20964)
!21008 = !DILocation(line: 968, column: 9, scope: !21006)
!21009 = !DILocalVariable(name: "response_vec", scope: !20964, file: !2153, line: 970, type: !20880)
!21010 = !DILocation(line: 970, column: 18, scope: !20964)
!21011 = !DILocation(line: 970, column: 35, scope: !20964)
!21012 = !DILocation(line: 971, column: 9, scope: !20964)
!21013 = !DILocation(line: 971, column: 23, scope: !20964)
!21014 = !DILocation(line: 971, column: 46, scope: !20964)
!21015 = !DILocation(line: 972, column: 9, scope: !20964)
!21016 = !DILocation(line: 972, column: 23, scope: !20964)
!21017 = !DILocation(line: 972, column: 27, scope: !20964)
!21018 = !DILocation(line: 972, column: 48, scope: !20964)
!21019 = !DILocation(line: 972, column: 57, scope: !20964)
!21020 = !DILocation(line: 972, column: 66, scope: !20964)
!21021 = !DILocation(line: 975, column: 17, scope: !20964)
!21022 = !DILocation(line: 975, column: 26, scope: !20964)
!21023 = !DILocation(line: 975, column: 5, scope: !20964)
!21024 = !DILocation(line: 977, column: 5, scope: !20964)
!21025 = !DILocation(line: 978, column: 1, scope: !20964)
!21026 = distinct !DISubprogram(name: "redir_init", scope: !2153, file: !2153, line: 439, type: !2375, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !286)
!21027 = !DILocalVariable(name: "ce", arg: 1, scope: !21026, file: !2153, line: 439, type: !2355)
!21028 = !DILocation(line: 439, column: 32, scope: !21026)
!21029 = !DILocalVariable(name: "priv", arg: 2, scope: !21026, file: !2153, line: 440, type: !2377)
!21030 = !DILocation(line: 440, column: 33, scope: !21026)
!21031 = !DILocalVariable(name: "full_path", arg: 3, scope: !21026, file: !2153, line: 441, type: !205)
!21032 = !DILocation(line: 441, column: 25, scope: !21026)
!21033 = !DILocalVariable(name: "st", arg: 4, scope: !21026, file: !2153, line: 442, type: !2392)
!21034 = !DILocation(line: 442, column: 26, scope: !21026)
!21035 = !DILocalVariable(name: "rd", scope: !21026, file: !2153, line: 444, type: !2325)
!21036 = !DILocation(line: 444, column: 25, scope: !21026)
!21037 = !DILocation(line: 444, column: 53, scope: !21026)
!21038 = !DILocation(line: 444, column: 56, scope: !21026)
!21039 = !DILocation(line: 446, column: 19, scope: !21040)
!21040 = distinct !DILexicalBlock(scope: !21026, file: !2153, line: 446, column: 9)
!21041 = !DILocation(line: 446, column: 23, scope: !21040)
!21042 = !DILocation(line: 446, column: 40, scope: !21040)
!21043 = !DILocation(line: 446, column: 52, scope: !21040)
!21044 = !DILocation(line: 446, column: 58, scope: !21040)
!21045 = !DILocation(line: 446, column: 63, scope: !21040)
!21046 = !DILocation(line: 446, column: 50, scope: !21040)
!21047 = !DILocation(line: 446, column: 9, scope: !21040)
!21048 = !DILocation(line: 446, column: 73, scope: !21040)
!21049 = !DILocation(line: 446, column: 9, scope: !21026)
!21050 = !DILocation(line: 447, column: 9, scope: !21040)
!21051 = !DILocation(line: 449, column: 5, scope: !21026)
!21052 = !DILocation(line: 449, column: 9, scope: !21026)
!21053 = !DILocation(line: 449, column: 19, scope: !21026)
!21054 = !DILocation(line: 450, column: 5, scope: !21026)
!21055 = !DILocation(line: 451, column: 1, scope: !21026)
!21056 = distinct !DISubprogram(name: "redir_free", scope: !2153, file: !2153, line: 588, type: !116, scopeLine: 589, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !286)
!21057 = !DILocalVariable(name: "data", arg: 1, scope: !21056, file: !2153, line: 588, type: !111)
!21058 = !DILocation(line: 588, column: 18, scope: !21056)
!21059 = !DILocalVariable(name: "rd", scope: !21056, file: !2153, line: 590, type: !2325)
!21060 = !DILocation(line: 590, column: 25, scope: !21056)
!21061 = !DILocation(line: 590, column: 30, scope: !21056)
!21062 = !DILocation(line: 592, column: 10, scope: !21056)
!21063 = !DILocation(line: 592, column: 14, scope: !21056)
!21064 = !DILocation(line: 592, column: 5, scope: !21056)
!21065 = !DILocation(line: 593, column: 1, scope: !21056)
!21066 = distinct !DISubprogram(name: "lwan_get_default_config", scope: !950, file: !950, line: 440, type: !21067, scopeLine: 441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !963, retainedNodes: !286)
!21067 = !DISubroutineType(types: !21068)
!21068 = !{!9804}
!21069 = !DILocation(line: 442, column: 5, scope: !21066)
!21070 = distinct !DISubprogram(name: "lwan_shutdown", scope: !950, file: !950, line: 503, type: !9794, scopeLine: 504, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !963, retainedNodes: !286)
!21071 = !DILocalVariable(name: "l", arg: 1, scope: !21070, file: !950, line: 503, type: !9135)
!21072 = !DILocation(line: 503, column: 23, scope: !21070)
!21073 = !DILocation(line: 505, column: 5, scope: !21070)
!21074 = !DILocation(line: 507, column: 9, scope: !21075)
!21075 = distinct !DILexicalBlock(scope: !21070, file: !950, line: 507, column: 9)
!21076 = !DILocation(line: 507, column: 12, scope: !21075)
!21077 = !DILocation(line: 507, column: 19, scope: !21075)
!21078 = !DILocation(line: 507, column: 46, scope: !21075)
!21079 = !DILocation(line: 507, column: 28, scope: !21075)
!21080 = !DILocation(line: 507, column: 9, scope: !21070)
!21081 = !DILocation(line: 508, column: 14, scope: !21075)
!21082 = !DILocation(line: 508, column: 17, scope: !21075)
!21083 = !DILocation(line: 508, column: 24, scope: !21075)
!21084 = !DILocation(line: 508, column: 9, scope: !21075)
!21085 = !DILocation(line: 510, column: 5, scope: !21070)
!21086 = !DILocation(line: 511, column: 26, scope: !21070)
!21087 = !DILocation(line: 511, column: 5, scope: !21070)
!21088 = !DILocation(line: 513, column: 5, scope: !21070)
!21089 = !DILocation(line: 514, column: 24, scope: !21070)
!21090 = !DILocation(line: 514, column: 27, scope: !21070)
!21091 = !DILocation(line: 514, column: 5, scope: !21070)
!21092 = !DILocation(line: 516, column: 10, scope: !21070)
!21093 = !DILocation(line: 516, column: 13, scope: !21070)
!21094 = !DILocation(line: 516, column: 5, scope: !21070)
!21095 = !DILocation(line: 518, column: 5, scope: !21070)
!21096 = !DILocation(line: 519, column: 5, scope: !21070)
!21097 = !DILocation(line: 520, column: 26, scope: !21070)
!21098 = !DILocation(line: 520, column: 5, scope: !21070)
!21099 = !DILocation(line: 521, column: 5, scope: !21070)
!21100 = !DILocation(line: 522, column: 26, scope: !21070)
!21101 = !DILocation(line: 522, column: 5, scope: !21070)
!21102 = !DILocation(line: 523, column: 1, scope: !21070)
!21103 = distinct !DISubprogram(name: "lwan_thread_shutdown", scope: !3115, file: !3115, line: 425, type: !10388, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3168, retainedNodes: !286)
!21104 = !DILocalVariable(name: "l", arg: 1, scope: !21103, file: !3115, line: 425, type: !10390)
!21105 = !DILocation(line: 425, column: 30, scope: !21103)
!21106 = !DILocation(line: 427, column: 5, scope: !21103)
!21107 = !DILocalVariable(name: "i", scope: !21108, file: !3115, line: 429, type: !34)
!21108 = distinct !DILexicalBlock(scope: !21103, file: !3115, line: 429, column: 5)
!21109 = !DILocation(line: 429, column: 14, scope: !21108)
!21110 = !DILocation(line: 429, column: 18, scope: !21108)
!21111 = !DILocation(line: 429, column: 21, scope: !21108)
!21112 = !DILocation(line: 429, column: 28, scope: !21108)
!21113 = !DILocation(line: 429, column: 34, scope: !21108)
!21114 = !DILocation(line: 429, column: 10, scope: !21108)
!21115 = !DILocation(line: 429, column: 39, scope: !21116)
!21116 = distinct !DILexicalBlock(scope: !21108, file: !3115, line: 429, column: 5)
!21117 = !DILocation(line: 429, column: 41, scope: !21116)
!21118 = !DILocation(line: 429, column: 5, scope: !21108)
!21119 = !DILocalVariable(name: "t", scope: !21120, file: !3115, line: 430, type: !10424)
!21120 = distinct !DILexicalBlock(scope: !21116, file: !3115, line: 429, column: 52)
!21121 = !DILocation(line: 430, column: 24, scope: !21120)
!21122 = !DILocation(line: 430, column: 29, scope: !21120)
!21123 = !DILocation(line: 430, column: 32, scope: !21120)
!21124 = !DILocation(line: 430, column: 39, scope: !21120)
!21125 = !DILocation(line: 430, column: 47, scope: !21120)
!21126 = !DILocation(line: 433, column: 15, scope: !21120)
!21127 = !DILocation(line: 433, column: 18, scope: !21120)
!21128 = !DILocation(line: 433, column: 9, scope: !21120)
!21129 = !DILocation(line: 435, column: 15, scope: !21120)
!21130 = !DILocation(line: 435, column: 18, scope: !21120)
!21131 = !DILocation(line: 435, column: 9, scope: !21120)
!21132 = !DILocation(line: 436, column: 15, scope: !21120)
!21133 = !DILocation(line: 436, column: 18, scope: !21120)
!21134 = !DILocation(line: 436, column: 9, scope: !21120)
!21135 = !DILocation(line: 438, column: 28, scope: !21120)
!21136 = !DILocation(line: 438, column: 31, scope: !21120)
!21137 = !DILocation(line: 438, column: 38, scope: !21120)
!21138 = !DILocation(line: 438, column: 46, scope: !21120)
!21139 = !DILocation(line: 438, column: 49, scope: !21120)
!21140 = !DILocation(line: 438, column: 9, scope: !21120)
!21141 = !DILocation(line: 439, column: 5, scope: !21120)
!21142 = !DILocation(line: 429, column: 48, scope: !21116)
!21143 = !DILocation(line: 429, column: 5, scope: !21116)
!21144 = distinct !{!21144, !21118, !21145, !3413}
!21145 = !DILocation(line: 439, column: 5, scope: !21108)
!21146 = !DILocation(line: 441, column: 10, scope: !21103)
!21147 = !DILocation(line: 441, column: 13, scope: !21103)
!21148 = !DILocation(line: 441, column: 20, scope: !21103)
!21149 = !DILocation(line: 441, column: 5, scope: !21103)
!21150 = !DILocation(line: 442, column: 1, scope: !21103)
!21151 = distinct !DISubprogram(name: "lwan_response_shutdown", scope: !1852, file: !1852, line: 83, type: !1853, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1855, retainedNodes: !286)
!21152 = !DILocation(line: 85, column: 5, scope: !21151)
!21153 = !DILocation(line: 86, column: 5, scope: !21154)
!21154 = distinct !DILexicalBlock(scope: !21155, file: !1852, line: 86, column: 5)
!21155 = distinct !DILexicalBlock(scope: !21151, file: !1852, line: 86, column: 5)
!21156 = !DILocation(line: 86, column: 5, scope: !21155)
!21157 = !DILocation(line: 87, column: 19, scope: !21151)
!21158 = !DILocation(line: 87, column: 5, scope: !21151)
!21159 = !DILocation(line: 88, column: 1, scope: !21151)
!21160 = distinct !DISubprogram(name: "lwan_tables_shutdown", scope: !2709, file: !2709, line: 65, type: !1853, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2705, retainedNodes: !286)
!21161 = !DILocation(line: 67, column: 1, scope: !21160)
!21162 = distinct !DISubprogram(name: "lwan_status_shutdown", scope: !2636, file: !2636, line: 59, type: !9898, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2632, retainedNodes: !286)
!21163 = !DILocalVariable(name: "l", arg: 1, scope: !21162, file: !2636, line: 59, type: !9900)
!21164 = !DILocation(line: 59, column: 30, scope: !21162)
!21165 = !DILocation(line: 61, column: 1, scope: !21162)
!21166 = distinct !DISubprogram(name: "lwan_module_shutdown", scope: !950, file: !950, line: 61, type: !9794, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !963, retainedNodes: !286)
!21167 = !DILocalVariable(name: "l", arg: 1, scope: !21166, file: !950, line: 61, type: !9135)
!21168 = !DILocation(line: 61, column: 42, scope: !21166)
!21169 = !DILocation(line: 63, column: 15, scope: !21166)
!21170 = !DILocation(line: 63, column: 18, scope: !21166)
!21171 = !DILocation(line: 63, column: 5, scope: !21166)
!21172 = !DILocation(line: 64, column: 1, scope: !21166)
!21173 = distinct !DISubprogram(name: "lwan_main_loop", scope: !950, file: !950, line: 559, type: !9794, scopeLine: 560, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !963, retainedNodes: !286)
!21174 = !DILocalVariable(name: "l", arg: 1, scope: !21173, file: !950, line: 559, type: !9135)
!21175 = !DILocation(line: 559, column: 24, scope: !21173)
!21176 = !DILocation(line: 561, column: 5, scope: !21177)
!21177 = distinct !DILexicalBlock(scope: !21178, file: !950, line: 561, column: 5)
!21178 = distinct !DILexicalBlock(scope: !21173, file: !950, line: 561, column: 5)
!21179 = !DILocation(line: 561, column: 5, scope: !21178)
!21180 = !DILocation(line: 562, column: 19, scope: !21173)
!21181 = !DILocation(line: 562, column: 22, scope: !21173)
!21182 = !DILocation(line: 562, column: 17, scope: !21173)
!21183 = !DILocation(line: 563, column: 9, scope: !21184)
!21184 = distinct !DILexicalBlock(scope: !21173, file: !950, line: 563, column: 9)
!21185 = !DILocation(line: 563, column: 40, scope: !21184)
!21186 = !DILocation(line: 563, column: 9, scope: !21173)
!21187 = !DILocation(line: 564, column: 9, scope: !21184)
!21188 = !DILocation(line: 566, column: 5, scope: !21173)
!21189 = !DILocation(line: 568, column: 5, scope: !21173)
!21190 = !DILocalVariable(name: "client_fd", scope: !21191, file: !950, line: 569, type: !34)
!21191 = distinct !DILexicalBlock(scope: !21192, file: !950, line: 568, column: 14)
!21192 = distinct !DILexicalBlock(scope: !21193, file: !950, line: 568, column: 5)
!21193 = distinct !DILexicalBlock(scope: !21173, file: !950, line: 568, column: 5)
!21194 = !DILocation(line: 569, column: 13, scope: !21191)
!21195 = !DILocation(line: 569, column: 33, scope: !21191)
!21196 = !DILocation(line: 569, column: 46, scope: !21191)
!21197 = !DILocation(line: 569, column: 25, scope: !21191)
!21198 = !DILocation(line: 570, column: 13, scope: !21199)
!21199 = distinct !DILexicalBlock(scope: !21191, file: !950, line: 570, column: 13)
!21200 = !DILocation(line: 570, column: 13, scope: !21191)
!21201 = !DILocation(line: 571, column: 17, scope: !21202)
!21202 = distinct !DILexicalBlock(scope: !21203, file: !950, line: 571, column: 17)
!21203 = distinct !DILexicalBlock(scope: !21199, file: !950, line: 570, column: 38)
!21204 = !DILocation(line: 571, column: 23, scope: !21202)
!21205 = !DILocation(line: 571, column: 17, scope: !21203)
!21206 = !DILocation(line: 572, column: 17, scope: !21207)
!21207 = distinct !DILexicalBlock(scope: !21202, file: !950, line: 571, column: 33)
!21208 = !DILocation(line: 573, column: 17, scope: !21207)
!21209 = distinct !{!21209, !21210, !21211}
!21210 = !DILocation(line: 568, column: 5, scope: !21193)
!21211 = !DILocation(line: 586, column: 5, scope: !21193)
!21212 = !DILocation(line: 576, column: 17, scope: !21213)
!21213 = distinct !DILexicalBlock(scope: !21203, file: !950, line: 576, column: 17)
!21214 = !DILocation(line: 576, column: 29, scope: !21213)
!21215 = !DILocation(line: 576, column: 17, scope: !21203)
!21216 = !DILocation(line: 577, column: 17, scope: !21217)
!21217 = distinct !DILexicalBlock(scope: !21213, file: !950, line: 576, column: 34)
!21218 = !DILocation(line: 578, column: 13, scope: !21217)
!21219 = !DILocation(line: 579, column: 17, scope: !21220)
!21220 = distinct !DILexicalBlock(scope: !21213, file: !950, line: 578, column: 20)
!21221 = !DILocation(line: 582, column: 13, scope: !21203)
!21222 = !DILocation(line: 585, column: 25, scope: !21191)
!21223 = !DILocation(line: 585, column: 28, scope: !21191)
!21224 = !DILocalVariable(name: "l", arg: 1, scope: !21225, file: !950, line: 526, type: !9135)
!21225 = distinct !DISubprogram(name: "schedule_client", scope: !950, file: !950, line: 526, type: !21226, scopeLine: 527, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !963, retainedNodes: !286)
!21226 = !DISubroutineType(types: !21227)
!21227 = !{null, !9135, !34}
!21228 = !DILocation(line: 526, column: 25, scope: !21225, inlinedAt: !21229)
!21229 = distinct !DILocation(line: 585, column: 9, scope: !21191)
!21230 = !DILocalVariable(name: "fd", arg: 2, scope: !21225, file: !950, line: 526, type: !34)
!21231 = !DILocation(line: 526, column: 32, scope: !21225, inlinedAt: !21229)
!21232 = !DILocalVariable(name: "thread", scope: !21225, file: !950, line: 528, type: !34)
!21233 = !DILocation(line: 528, column: 9, scope: !21225, inlinedAt: !21229)
!21234 = !DILocation(line: 538, column: 16, scope: !21225, inlinedAt: !21229)
!21235 = !DILocation(line: 538, column: 19, scope: !21225, inlinedAt: !21229)
!21236 = !DILocation(line: 538, column: 24, scope: !21225, inlinedAt: !21229)
!21237 = !DILocation(line: 538, column: 31, scope: !21225, inlinedAt: !21229)
!21238 = !DILocation(line: 538, column: 34, scope: !21225, inlinedAt: !21229)
!21239 = !DILocation(line: 538, column: 41, scope: !21225, inlinedAt: !21229)
!21240 = !DILocation(line: 538, column: 29, scope: !21225, inlinedAt: !21229)
!21241 = !DILocation(line: 538, column: 12, scope: !21225, inlinedAt: !21229)
!21242 = !DILocalVariable(name: "t", scope: !21225, file: !950, line: 543, type: !9169)
!21243 = !DILocation(line: 543, column: 20, scope: !21225, inlinedAt: !21229)
!21244 = !DILocation(line: 543, column: 25, scope: !21225, inlinedAt: !21229)
!21245 = !DILocation(line: 543, column: 28, scope: !21225, inlinedAt: !21229)
!21246 = !DILocation(line: 543, column: 35, scope: !21225, inlinedAt: !21229)
!21247 = !DILocation(line: 543, column: 43, scope: !21225, inlinedAt: !21229)
!21248 = !DILocation(line: 544, column: 28, scope: !21225, inlinedAt: !21229)
!21249 = !DILocation(line: 544, column: 31, scope: !21225, inlinedAt: !21229)
!21250 = !DILocation(line: 544, column: 5, scope: !21225, inlinedAt: !21229)
!21251 = !DILocation(line: 568, column: 5, scope: !21192)
!21252 = !DILocation(line: 587, column: 1, scope: !21173)
!21253 = distinct !DISubprogram(name: "sigint_handler", scope: !950, file: !950, line: 550, type: !1224, scopeLine: 551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !963, retainedNodes: !286)
!21254 = !DILocalVariable(name: "signal_number", arg: 1, scope: !21253, file: !950, line: 550, type: !34)
!21255 = !DILocation(line: 550, column: 20, scope: !21253)
!21256 = !DILocation(line: 552, column: 9, scope: !21257)
!21257 = distinct !DILexicalBlock(scope: !21253, file: !950, line: 552, column: 9)
!21258 = !DILocation(line: 552, column: 21, scope: !21257)
!21259 = !DILocation(line: 552, column: 9, scope: !21253)
!21260 = !DILocation(line: 553, column: 9, scope: !21257)
!21261 = !DILocation(line: 554, column: 11, scope: !21253)
!21262 = !DILocation(line: 554, column: 5, scope: !21253)
!21263 = !DILocation(line: 555, column: 17, scope: !21253)
!21264 = !DILocation(line: 556, column: 1, scope: !21253)
!21265 = distinct !DISubprogram(name: "lwan_thread_add_client", scope: !3115, file: !3115, line: 402, type: !21266, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3168, retainedNodes: !286)
!21266 = !DISubroutineType(types: !21267)
!21267 = !{null, !10424, !34}
!21268 = !DILocalVariable(name: "t", arg: 1, scope: !21265, file: !3115, line: 402, type: !10424)
!21269 = !DILocation(line: 402, column: 39, scope: !21265)
!21270 = !DILocalVariable(name: "fd", arg: 2, scope: !21265, file: !3115, line: 402, type: !34)
!21271 = !DILocation(line: 402, column: 46, scope: !21265)
!21272 = !DILocation(line: 404, column: 5, scope: !21265)
!21273 = !DILocation(line: 404, column: 8, scope: !21265)
!21274 = !DILocation(line: 404, column: 14, scope: !21265)
!21275 = !DILocation(line: 404, column: 20, scope: !21265)
!21276 = !DILocation(line: 404, column: 24, scope: !21265)
!21277 = !DILocation(line: 404, column: 30, scope: !21265)
!21278 = !DILocation(line: 405, column: 33, scope: !21265)
!21279 = !DILocation(line: 405, column: 5, scope: !21265)
!21280 = !DILocation(line: 405, column: 8, scope: !21265)
!21281 = !DILocation(line: 405, column: 14, scope: !21265)
!21282 = !DILocation(line: 405, column: 20, scope: !21265)
!21283 = !DILocation(line: 405, column: 24, scope: !21265)
!21284 = !DILocation(line: 405, column: 31, scope: !21265)
!21285 = !DILocation(line: 407, column: 9, scope: !21286)
!21286 = distinct !DILexicalBlock(scope: !21265, file: !3115, line: 407, column: 9)
!21287 = !DILocation(line: 407, column: 9, scope: !21265)
!21288 = !DILocation(line: 408, column: 9, scope: !21286)
!21289 = !DILocation(line: 409, column: 1, scope: !21265)
!21290 = distinct !DISubprogram(name: "lwan_request_get_query_param", scope: !1572, file: !1572, line: 787, type: !21291, scopeLine: 788, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!21291 = !DISubroutineType(types: !21292)
!21292 = !{!205, !1580, !205}
!21293 = !DILocalVariable(name: "request", arg: 1, scope: !21290, file: !1572, line: 787, type: !1580)
!21294 = !DILocation(line: 787, column: 46, scope: !21290)
!21295 = !DILocalVariable(name: "key", arg: 2, scope: !21290, file: !1572, line: 787, type: !205)
!21296 = !DILocation(line: 787, column: 67, scope: !21290)
!21297 = !DILocation(line: 789, column: 32, scope: !21290)
!21298 = !DILocation(line: 789, column: 41, scope: !21290)
!21299 = !DILocation(line: 789, column: 54, scope: !21290)
!21300 = !DILocation(line: 790, column: 45, scope: !21290)
!21301 = !DILocation(line: 790, column: 54, scope: !21290)
!21302 = !DILocation(line: 790, column: 67, scope: !21290)
!21303 = !DILocation(line: 790, column: 72, scope: !21290)
!21304 = !DILocation(line: 789, column: 12, scope: !21290)
!21305 = !DILocation(line: 789, column: 5, scope: !21290)
!21306 = distinct !DISubprogram(name: "value_array_bsearch", scope: !1572, file: !1572, line: 761, type: !21307, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!21307 = !DISubroutineType(types: !21308)
!21308 = !{!205, !1666, !490, !205}
!21309 = !DILocalVariable(name: "base", arg: 1, scope: !21306, file: !1572, line: 761, type: !1666)
!21310 = !DILocation(line: 761, column: 39, scope: !21306)
!21311 = !DILocalVariable(name: "len", arg: 2, scope: !21306, file: !1572, line: 761, type: !490)
!21312 = !DILocation(line: 761, column: 58, scope: !21306)
!21313 = !DILocalVariable(name: "key", arg: 3, scope: !21306, file: !1572, line: 761, type: !205)
!21314 = !DILocation(line: 761, column: 75, scope: !21306)
!21315 = !DILocation(line: 763, column: 9, scope: !21316)
!21316 = distinct !DILexicalBlock(scope: !21306, file: !1572, line: 763, column: 9)
!21317 = !DILocation(line: 763, column: 9, scope: !21306)
!21318 = !DILocation(line: 764, column: 9, scope: !21316)
!21319 = !DILocalVariable(name: "lower_bound", scope: !21306, file: !1572, line: 766, type: !55)
!21320 = !DILocation(line: 766, column: 12, scope: !21306)
!21321 = !DILocalVariable(name: "upper_bound", scope: !21306, file: !1572, line: 767, type: !55)
!21322 = !DILocation(line: 767, column: 12, scope: !21306)
!21323 = !DILocation(line: 767, column: 26, scope: !21306)
!21324 = !DILocalVariable(name: "key_len", scope: !21306, file: !1572, line: 768, type: !55)
!21325 = !DILocation(line: 768, column: 12, scope: !21306)
!21326 = !DILocation(line: 768, column: 29, scope: !21306)
!21327 = !DILocation(line: 768, column: 22, scope: !21306)
!21328 = !DILocation(line: 770, column: 5, scope: !21306)
!21329 = !DILocation(line: 770, column: 12, scope: !21306)
!21330 = !DILocation(line: 770, column: 26, scope: !21306)
!21331 = !DILocation(line: 770, column: 24, scope: !21306)
!21332 = !DILocalVariable(name: "idx", scope: !21333, file: !1572, line: 772, type: !55)
!21333 = distinct !DILexicalBlock(scope: !21306, file: !1572, line: 770, column: 39)
!21334 = !DILocation(line: 772, column: 16, scope: !21333)
!21335 = !DILocation(line: 772, column: 23, scope: !21333)
!21336 = !DILocation(line: 772, column: 37, scope: !21333)
!21337 = !DILocation(line: 772, column: 35, scope: !21333)
!21338 = !DILocation(line: 772, column: 50, scope: !21333)
!21339 = !DILocalVariable(name: "ptr", scope: !21333, file: !1572, line: 773, type: !1666)
!21340 = !DILocation(line: 773, column: 27, scope: !21333)
!21341 = !DILocation(line: 773, column: 33, scope: !21333)
!21342 = !DILocation(line: 773, column: 40, scope: !21333)
!21343 = !DILocation(line: 773, column: 38, scope: !21333)
!21344 = !DILocalVariable(name: "cmp", scope: !21333, file: !1572, line: 774, type: !34)
!21345 = !DILocation(line: 774, column: 13, scope: !21333)
!21346 = !DILocation(line: 774, column: 27, scope: !21333)
!21347 = !DILocation(line: 774, column: 32, scope: !21333)
!21348 = !DILocation(line: 774, column: 37, scope: !21333)
!21349 = !DILocation(line: 774, column: 42, scope: !21333)
!21350 = !DILocation(line: 774, column: 19, scope: !21333)
!21351 = !DILocation(line: 775, column: 13, scope: !21352)
!21352 = distinct !DILexicalBlock(scope: !21333, file: !1572, line: 775, column: 13)
!21353 = !DILocation(line: 775, column: 13, scope: !21333)
!21354 = !DILocation(line: 776, column: 20, scope: !21352)
!21355 = !DILocation(line: 776, column: 25, scope: !21352)
!21356 = !DILocation(line: 776, column: 13, scope: !21352)
!21357 = !DILocation(line: 777, column: 13, scope: !21358)
!21358 = distinct !DILexicalBlock(scope: !21333, file: !1572, line: 777, column: 13)
!21359 = !DILocation(line: 777, column: 17, scope: !21358)
!21360 = !DILocation(line: 777, column: 13, scope: !21333)
!21361 = !DILocation(line: 778, column: 27, scope: !21358)
!21362 = !DILocation(line: 778, column: 31, scope: !21358)
!21363 = !DILocation(line: 778, column: 25, scope: !21358)
!21364 = !DILocation(line: 778, column: 13, scope: !21358)
!21365 = !DILocation(line: 780, column: 27, scope: !21358)
!21366 = !DILocation(line: 780, column: 25, scope: !21358)
!21367 = distinct !{!21367, !21328, !21368, !3413}
!21368 = !DILocation(line: 781, column: 5, scope: !21306)
!21369 = !DILocation(line: 783, column: 5, scope: !21306)
!21370 = !DILocation(line: 784, column: 1, scope: !21306)
!21371 = distinct !DISubprogram(name: "lwan_request_get_post_param", scope: !1572, file: !1572, line: 794, type: !21291, scopeLine: 795, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1715, retainedNodes: !286)
!21372 = !DILocalVariable(name: "request", arg: 1, scope: !21371, file: !1572, line: 794, type: !1580)
!21373 = !DILocation(line: 794, column: 45, scope: !21371)
!21374 = !DILocalVariable(name: "key", arg: 2, scope: !21371, file: !1572, line: 794, type: !205)
!21375 = !DILocation(line: 794, column: 66, scope: !21371)
!21376 = !DILocation(line: 796, column: 32, scope: !21371)
!21377 = !DILocation(line: 796, column: 41, scope: !21371)
!21378 = !DILocation(line: 796, column: 51, scope: !21371)
!21379 = !DILocation(line: 797, column: 45, scope: !21371)
!21380 = !DILocation(line: 797, column: 54, scope: !21371)
!21381 = !DILocation(line: 797, column: 64, scope: !21371)
!21382 = !DILocation(line: 797, column: 69, scope: !21371)
!21383 = !DILocation(line: 796, column: 12, scope: !21371)
!21384 = !DILocation(line: 796, column: 5, scope: !21371)
!21385 = distinct !DISubprogram(name: "lwan_response_set_event_stream", scope: !1852, file: !1852, line: 382, type: !13791, scopeLine: 384, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1855, retainedNodes: !286)
!21386 = !DILocalVariable(name: "request", arg: 1, scope: !21385, file: !1852, line: 382, type: !1965)
!21387 = !DILocation(line: 382, column: 48, scope: !21385)
!21388 = !DILocalVariable(name: "status", arg: 2, scope: !21385, file: !1852, line: 383, type: !6)
!21389 = !DILocation(line: 383, column: 51, scope: !21385)
!21390 = !DILocalVariable(name: "buffer", scope: !21385, file: !1852, line: 385, type: !10154)
!21391 = !DILocation(line: 385, column: 10, scope: !21385)
!21392 = !DILocalVariable(name: "buffer_len", scope: !21385, file: !1852, line: 386, type: !55)
!21393 = !DILocation(line: 386, column: 12, scope: !21385)
!21394 = !DILocation(line: 388, column: 9, scope: !21395)
!21395 = distinct !DILexicalBlock(scope: !21385, file: !1852, line: 388, column: 9)
!21396 = !DILocation(line: 388, column: 18, scope: !21395)
!21397 = !DILocation(line: 388, column: 24, scope: !21395)
!21398 = !DILocation(line: 388, column: 9, scope: !21385)
!21399 = !DILocation(line: 389, column: 9, scope: !21395)
!21400 = !DILocation(line: 391, column: 5, scope: !21385)
!21401 = !DILocation(line: 391, column: 14, scope: !21385)
!21402 = !DILocation(line: 391, column: 23, scope: !21385)
!21403 = !DILocation(line: 391, column: 33, scope: !21385)
!21404 = !DILocation(line: 392, column: 5, scope: !21385)
!21405 = !DILocation(line: 392, column: 14, scope: !21385)
!21406 = !DILocation(line: 392, column: 20, scope: !21385)
!21407 = !DILocation(line: 393, column: 47, scope: !21385)
!21408 = !DILocation(line: 393, column: 56, scope: !21385)
!21409 = !DILocation(line: 394, column: 49, scope: !21385)
!21410 = !DILocation(line: 231, column: 46, scope: !13330, inlinedAt: !21411)
!21411 = distinct !DILocation(line: 393, column: 18, scope: !21385)
!21412 = !DILocation(line: 231, column: 74, scope: !13330, inlinedAt: !21411)
!21413 = !DILocation(line: 231, column: 87, scope: !13330, inlinedAt: !21411)
!21414 = !DILocation(line: 231, column: 105, scope: !13330, inlinedAt: !21411)
!21415 = !DILocation(line: 233, column: 11, scope: !13330, inlinedAt: !21411)
!21416 = !DILocation(line: 234, column: 11, scope: !13330, inlinedAt: !21411)
!21417 = !DILocation(line: 234, column: 27, scope: !13330, inlinedAt: !21411)
!21418 = !DILocation(line: 234, column: 37, scope: !13330, inlinedAt: !21411)
!21419 = !DILocation(line: 234, column: 35, scope: !13330, inlinedAt: !21411)
!21420 = !DILocation(line: 235, column: 10, scope: !13330, inlinedAt: !21411)
!21421 = !DILocation(line: 236, column: 10, scope: !13330, inlinedAt: !21411)
!21422 = !DILocation(line: 237, column: 10, scope: !13330, inlinedAt: !21411)
!21423 = !DILocation(line: 239, column: 17, scope: !13330, inlinedAt: !21411)
!21424 = !DILocation(line: 239, column: 15, scope: !13330, inlinedAt: !21411)
!21425 = !DILocation(line: 241, column: 9, scope: !13357, inlinedAt: !21411)
!21426 = !DILocation(line: 241, column: 18, scope: !13357, inlinedAt: !21411)
!21427 = !DILocation(line: 241, column: 24, scope: !13357, inlinedAt: !21411)
!21428 = !DILocation(line: 241, column: 9, scope: !13330, inlinedAt: !21411)
!21429 = !DILocation(line: 242, column: 9, scope: !13362, inlinedAt: !21411)
!21430 = !DILocation(line: 242, column: 9, scope: !13363, inlinedAt: !21411)
!21431 = !DILocation(line: 244, column: 9, scope: !13366, inlinedAt: !21411)
!21432 = !DILocation(line: 244, column: 9, scope: !13367, inlinedAt: !21411)
!21433 = !DILocation(line: 245, column: 5, scope: !13370, inlinedAt: !21411)
!21434 = !DILocation(line: 245, column: 5, scope: !13373, inlinedAt: !21411)
!21435 = !DILocation(line: 245, column: 5, scope: !13374, inlinedAt: !21411)
!21436 = !DILocation(line: 247, column: 9, scope: !13377, inlinedAt: !21411)
!21437 = !DILocation(line: 247, column: 18, scope: !13377, inlinedAt: !21411)
!21438 = !DILocation(line: 247, column: 24, scope: !13377, inlinedAt: !21411)
!21439 = !DILocation(line: 247, column: 9, scope: !13330, inlinedAt: !21411)
!21440 = !DILocation(line: 248, column: 9, scope: !13382, inlinedAt: !21411)
!21441 = !DILocation(line: 248, column: 9, scope: !13383, inlinedAt: !21411)
!21442 = !DILocation(line: 249, column: 5, scope: !13384, inlinedAt: !21411)
!21443 = !DILocation(line: 249, column: 16, scope: !13388, inlinedAt: !21411)
!21444 = !DILocation(line: 249, column: 25, scope: !13388, inlinedAt: !21411)
!21445 = !DILocation(line: 249, column: 31, scope: !13388, inlinedAt: !21411)
!21446 = !DILocation(line: 249, column: 16, scope: !13377, inlinedAt: !21411)
!21447 = !DILocation(line: 251, column: 5, scope: !13393, inlinedAt: !21411)
!21448 = !DILocation(line: 252, column: 9, scope: !13395, inlinedAt: !21411)
!21449 = !DILocation(line: 252, column: 9, scope: !13396, inlinedAt: !21411)
!21450 = !DILocation(line: 253, column: 13, scope: !13400, inlinedAt: !21411)
!21451 = !DILocation(line: 253, column: 22, scope: !13400, inlinedAt: !21411)
!21452 = !DILocation(line: 253, column: 31, scope: !13400, inlinedAt: !21411)
!21453 = !DILocation(line: 253, column: 38, scope: !13400, inlinedAt: !21411)
!21454 = !DILocation(line: 253, column: 13, scope: !13397, inlinedAt: !21411)
!21455 = !DILocation(line: 254, column: 13, scope: !13406, inlinedAt: !21411)
!21456 = !DILocation(line: 254, column: 13, scope: !13410, inlinedAt: !21411)
!21457 = !DILocation(line: 254, column: 13, scope: !13412, inlinedAt: !21411)
!21458 = !DILocation(line: 254, column: 13, scope: !13413, inlinedAt: !21411)
!21459 = !DILocation(line: 256, column: 13, scope: !13416, inlinedAt: !21411)
!21460 = !DILocation(line: 256, column: 13, scope: !13420, inlinedAt: !21411)
!21461 = !DILocation(line: 256, column: 13, scope: !13422, inlinedAt: !21411)
!21462 = !DILocation(line: 256, column: 13, scope: !13423, inlinedAt: !21411)
!21463 = !DILocation(line: 259, column: 5, scope: !13426, inlinedAt: !21411)
!21464 = !DILocation(line: 259, column: 5, scope: !13427, inlinedAt: !21411)
!21465 = !DILocation(line: 260, column: 5, scope: !13430, inlinedAt: !21411)
!21466 = !DILocation(line: 260, column: 5, scope: !13433, inlinedAt: !21411)
!21467 = !DILocation(line: 260, column: 5, scope: !13434, inlinedAt: !21411)
!21468 = !DILocation(line: 262, column: 9, scope: !13437, inlinedAt: !21411)
!21469 = !DILocation(line: 262, column: 18, scope: !13437, inlinedAt: !21411)
!21470 = !DILocation(line: 262, column: 24, scope: !13437, inlinedAt: !21411)
!21471 = !DILocation(line: 262, column: 30, scope: !13437, inlinedAt: !21411)
!21472 = !DILocation(line: 262, column: 9, scope: !13330, inlinedAt: !21411)
!21473 = !DILocation(line: 263, column: 9, scope: !13443, inlinedAt: !21411)
!21474 = !DILocation(line: 263, column: 9, scope: !13444, inlinedAt: !21411)
!21475 = !DILocation(line: 265, column: 9, scope: !13447, inlinedAt: !21411)
!21476 = !DILocation(line: 265, column: 9, scope: !13448, inlinedAt: !21411)
!21477 = !DILocation(line: 267, column: 10, scope: !13451, inlinedAt: !21411)
!21478 = !DILocation(line: 267, column: 17, scope: !13451, inlinedAt: !21411)
!21479 = !DILocation(line: 267, column: 36, scope: !13451, inlinedAt: !21411)
!21480 = !DILocation(line: 267, column: 39, scope: !13451, inlinedAt: !21411)
!21481 = !DILocation(line: 267, column: 48, scope: !13451, inlinedAt: !21411)
!21482 = !DILocation(line: 267, column: 57, scope: !13451, inlinedAt: !21411)
!21483 = !DILocation(line: 267, column: 9, scope: !13330, inlinedAt: !21411)
!21484 = !DILocation(line: 268, column: 27, scope: !13459, inlinedAt: !21411)
!21485 = !DILocation(line: 270, column: 23, scope: !13462, inlinedAt: !21411)
!21486 = !DILocation(line: 270, column: 32, scope: !13462, inlinedAt: !21411)
!21487 = !DILocation(line: 270, column: 41, scope: !13462, inlinedAt: !21411)
!21488 = !DILocation(line: 270, column: 21, scope: !13462, inlinedAt: !21411)
!21489 = !DILocation(line: 270, column: 14, scope: !13462, inlinedAt: !21411)
!21490 = !DILocation(line: 270, column: 50, scope: !13468, inlinedAt: !21411)
!21491 = !DILocation(line: 270, column: 58, scope: !13468, inlinedAt: !21411)
!21492 = !DILocation(line: 270, column: 9, scope: !13462, inlinedAt: !21411)
!21493 = !DILocation(line: 271, column: 17, scope: !13472, inlinedAt: !21411)
!21494 = !DILocation(line: 271, column: 17, scope: !13473, inlinedAt: !21411)
!21495 = !DILocation(line: 272, column: 17, scope: !13472, inlinedAt: !21411)
!21496 = !DILocation(line: 273, column: 17, scope: !13477, inlinedAt: !21411)
!21497 = !DILocation(line: 273, column: 17, scope: !13473, inlinedAt: !21411)
!21498 = !DILocation(line: 274, column: 33, scope: !13477, inlinedAt: !21411)
!21499 = !DILocation(line: 274, column: 17, scope: !13477, inlinedAt: !21411)
!21500 = !DILocation(line: 275, column: 17, scope: !13482, inlinedAt: !21411)
!21501 = !DILocation(line: 275, column: 17, scope: !13473, inlinedAt: !21411)
!21502 = !DILocation(line: 276, column: 36, scope: !13482, inlinedAt: !21411)
!21503 = !DILocation(line: 276, column: 17, scope: !13482, inlinedAt: !21411)
!21504 = !DILocation(line: 278, column: 13, scope: !13487, inlinedAt: !21411)
!21505 = !DILocation(line: 278, column: 13, scope: !13473, inlinedAt: !21411)
!21506 = !DILocation(line: 279, column: 13, scope: !13473, inlinedAt: !21411)
!21507 = !DILocation(line: 280, column: 13, scope: !13473, inlinedAt: !21411)
!21508 = !DILocation(line: 281, column: 13, scope: !13492, inlinedAt: !21411)
!21509 = !DILocation(line: 281, column: 13, scope: !13495, inlinedAt: !21411)
!21510 = !DILocation(line: 281, column: 13, scope: !13496, inlinedAt: !21411)
!21511 = !DILocation(line: 282, column: 13, scope: !13473, inlinedAt: !21411)
!21512 = !DILocation(line: 283, column: 13, scope: !13473, inlinedAt: !21411)
!21513 = !DILocation(line: 284, column: 13, scope: !13501, inlinedAt: !21411)
!21514 = !DILocation(line: 284, column: 13, scope: !13504, inlinedAt: !21411)
!21515 = !DILocation(line: 284, column: 13, scope: !13505, inlinedAt: !21411)
!21516 = !DILocation(line: 285, column: 9, scope: !13473, inlinedAt: !21411)
!21517 = !DILocation(line: 270, column: 69, scope: !13468, inlinedAt: !21411)
!21518 = !DILocation(line: 270, column: 9, scope: !13468, inlinedAt: !21411)
!21519 = distinct !{!21519, !21492, !21520, !3413}
!21520 = !DILocation(line: 285, column: 9, scope: !13462, inlinedAt: !21411)
!21521 = !DILocation(line: 286, column: 5, scope: !13459, inlinedAt: !21411)
!21522 = !DILocation(line: 286, column: 16, scope: !13514, inlinedAt: !21411)
!21523 = !DILocation(line: 286, column: 23, scope: !13514, inlinedAt: !21411)
!21524 = !DILocation(line: 286, column: 16, scope: !13451, inlinedAt: !21411)
!21525 = !DILocation(line: 287, column: 27, scope: !13518, inlinedAt: !21411)
!21526 = !DILocation(line: 289, column: 23, scope: !13521, inlinedAt: !21411)
!21527 = !DILocation(line: 289, column: 32, scope: !13521, inlinedAt: !21411)
!21528 = !DILocation(line: 289, column: 41, scope: !13521, inlinedAt: !21411)
!21529 = !DILocation(line: 289, column: 21, scope: !13521, inlinedAt: !21411)
!21530 = !DILocation(line: 289, column: 14, scope: !13521, inlinedAt: !21411)
!21531 = !DILocation(line: 289, column: 50, scope: !13527, inlinedAt: !21411)
!21532 = !DILocation(line: 289, column: 58, scope: !13527, inlinedAt: !21411)
!21533 = !DILocation(line: 289, column: 9, scope: !13521, inlinedAt: !21411)
!21534 = !DILocation(line: 290, column: 25, scope: !13531, inlinedAt: !21411)
!21535 = !DILocation(line: 290, column: 33, scope: !13531, inlinedAt: !21411)
!21536 = !DILocation(line: 290, column: 18, scope: !13531, inlinedAt: !21411)
!21537 = !DILocation(line: 290, column: 17, scope: !13532, inlinedAt: !21411)
!21538 = !DILocation(line: 291, column: 17, scope: !13537, inlinedAt: !21411)
!21539 = !DILocation(line: 291, column: 17, scope: !13538, inlinedAt: !21411)
!21540 = !DILocation(line: 292, column: 17, scope: !13542, inlinedAt: !21411)
!21541 = !DILocation(line: 292, column: 17, scope: !13545, inlinedAt: !21411)
!21542 = !DILocation(line: 292, column: 17, scope: !13546, inlinedAt: !21411)
!21543 = !DILocation(line: 293, column: 17, scope: !13539, inlinedAt: !21411)
!21544 = !DILocation(line: 289, column: 69, scope: !13527, inlinedAt: !21411)
!21545 = !DILocation(line: 289, column: 9, scope: !13527, inlinedAt: !21411)
!21546 = distinct !{!21546, !21533, !21547, !3413}
!21547 = !DILocation(line: 295, column: 9, scope: !13521, inlinedAt: !21411)
!21548 = !DILocation(line: 296, column: 5, scope: !13518, inlinedAt: !21411)
!21549 = !DILocation(line: 298, column: 9, scope: !13555, inlinedAt: !21411)
!21550 = !DILocation(line: 298, column: 9, scope: !13330, inlinedAt: !21411)
!21551 = !DILocation(line: 299, column: 9, scope: !13558, inlinedAt: !21411)
!21552 = !DILocation(line: 299, column: 9, scope: !13559, inlinedAt: !21411)
!21553 = !DILocation(line: 300, column: 9, scope: !13563, inlinedAt: !21411)
!21554 = !DILocation(line: 300, column: 9, scope: !13564, inlinedAt: !21411)
!21555 = !DILocation(line: 301, column: 5, scope: !13560, inlinedAt: !21411)
!21556 = !DILocation(line: 303, column: 9, scope: !13568, inlinedAt: !21411)
!21557 = !DILocation(line: 303, column: 9, scope: !13330, inlinedAt: !21411)
!21558 = !DILocation(line: 304, column: 9, scope: !13571, inlinedAt: !21411)
!21559 = !DILocation(line: 304, column: 9, scope: !13572, inlinedAt: !21411)
!21560 = !DILocation(line: 305, column: 9, scope: !13576, inlinedAt: !21411)
!21561 = !DILocation(line: 305, column: 9, scope: !13577, inlinedAt: !21411)
!21562 = !DILocation(line: 306, column: 5, scope: !13573, inlinedAt: !21411)
!21563 = !DILocation(line: 308, column: 5, scope: !13581, inlinedAt: !21411)
!21564 = !DILocation(line: 308, column: 5, scope: !13582, inlinedAt: !21411)
!21565 = !DILocation(line: 310, column: 21, scope: !13330, inlinedAt: !21411)
!21566 = !DILocation(line: 310, column: 33, scope: !13330, inlinedAt: !21411)
!21567 = !DILocation(line: 310, column: 31, scope: !13330, inlinedAt: !21411)
!21568 = !DILocation(line: 310, column: 41, scope: !13330, inlinedAt: !21411)
!21569 = !DILocation(line: 310, column: 5, scope: !13330, inlinedAt: !21411)
!21570 = !DILocation(line: 311, column: 1, scope: !13330, inlinedAt: !21411)
!21571 = !DILocation(line: 393, column: 16, scope: !21385)
!21572 = !DILocation(line: 395, column: 9, scope: !21573)
!21573 = distinct !DILexicalBlock(scope: !21385, file: !1852, line: 395, column: 9)
!21574 = !DILocation(line: 395, column: 9, scope: !21385)
!21575 = !DILocation(line: 396, column: 9, scope: !21573)
!21576 = !DILocation(line: 398, column: 5, scope: !21385)
!21577 = !DILocation(line: 398, column: 14, scope: !21385)
!21578 = !DILocation(line: 398, column: 20, scope: !21385)
!21579 = !DILocation(line: 399, column: 15, scope: !21385)
!21580 = !DILocation(line: 399, column: 24, scope: !21385)
!21581 = !DILocation(line: 399, column: 32, scope: !21385)
!21582 = !DILocation(line: 399, column: 5, scope: !21385)
!21583 = !DILocation(line: 401, column: 5, scope: !21385)
!21584 = !DILocation(line: 402, column: 1, scope: !21385)
!21585 = distinct !DISubprogram(name: "lwan_response_send_event", scope: !1852, file: !1852, line: 405, type: !21586, scopeLine: 406, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1855, retainedNodes: !286)
!21586 = !DISubroutineType(types: !21587)
!21587 = !{null, !1965, !205}
!21588 = !DILocalVariable(name: "request", arg: 1, scope: !21585, file: !1852, line: 405, type: !1965)
!21589 = !DILocation(line: 405, column: 42, scope: !21585)
!21590 = !DILocalVariable(name: "event", arg: 2, scope: !21585, file: !1852, line: 405, type: !205)
!21591 = !DILocation(line: 405, column: 63, scope: !21585)
!21592 = !DILocation(line: 407, column: 11, scope: !21593)
!21593 = distinct !DILexicalBlock(scope: !21585, file: !1852, line: 407, column: 9)
!21594 = !DILocation(line: 407, column: 20, scope: !21593)
!21595 = !DILocation(line: 407, column: 26, scope: !21593)
!21596 = !DILocation(line: 407, column: 9, scope: !21585)
!21597 = !DILocation(line: 408, column: 13, scope: !21598)
!21598 = distinct !DILexicalBlock(scope: !21599, file: !1852, line: 408, column: 13)
!21599 = distinct !DILexicalBlock(scope: !21593, file: !1852, line: 407, column: 52)
!21600 = !DILocation(line: 408, column: 13, scope: !21599)
!21601 = !DILocation(line: 409, column: 13, scope: !21598)
!21602 = !DILocation(line: 410, column: 5, scope: !21599)
!21603 = !DILocalVariable(name: "vec", scope: !21585, file: !1852, line: 412, type: !21604)
!21604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13610, size: 768, elements: !370)
!21605 = !DILocation(line: 412, column: 18, scope: !21585)
!21606 = !DILocalVariable(name: "last", scope: !21585, file: !1852, line: 413, type: !34)
!21607 = !DILocation(line: 413, column: 9, scope: !21585)
!21608 = !DILocation(line: 415, column: 9, scope: !21609)
!21609 = distinct !DILexicalBlock(scope: !21585, file: !1852, line: 415, column: 9)
!21610 = !DILocation(line: 415, column: 9, scope: !21585)
!21611 = !DILocation(line: 416, column: 13, scope: !21612)
!21612 = distinct !DILexicalBlock(scope: !21609, file: !1852, line: 415, column: 16)
!21613 = !DILocation(line: 416, column: 9, scope: !21612)
!21614 = !DILocation(line: 416, column: 19, scope: !21612)
!21615 = !DILocation(line: 416, column: 28, scope: !21612)
!21616 = !DILocation(line: 417, column: 13, scope: !21612)
!21617 = !DILocation(line: 417, column: 9, scope: !21612)
!21618 = !DILocation(line: 417, column: 19, scope: !21612)
!21619 = !DILocation(line: 417, column: 27, scope: !21612)
!21620 = !DILocation(line: 418, column: 13, scope: !21612)
!21621 = !DILocation(line: 420, column: 38, scope: !21612)
!21622 = !DILocation(line: 420, column: 13, scope: !21612)
!21623 = !DILocation(line: 420, column: 9, scope: !21612)
!21624 = !DILocation(line: 420, column: 19, scope: !21612)
!21625 = !DILocation(line: 420, column: 28, scope: !21612)
!21626 = !DILocation(line: 421, column: 36, scope: !21612)
!21627 = !DILocation(line: 421, column: 29, scope: !21612)
!21628 = !DILocation(line: 421, column: 13, scope: !21612)
!21629 = !DILocation(line: 421, column: 9, scope: !21612)
!21630 = !DILocation(line: 421, column: 19, scope: !21612)
!21631 = !DILocation(line: 421, column: 27, scope: !21612)
!21632 = !DILocation(line: 422, column: 13, scope: !21612)
!21633 = !DILocation(line: 424, column: 13, scope: !21612)
!21634 = !DILocation(line: 424, column: 9, scope: !21612)
!21635 = !DILocation(line: 424, column: 19, scope: !21612)
!21636 = !DILocation(line: 424, column: 28, scope: !21612)
!21637 = !DILocation(line: 425, column: 13, scope: !21612)
!21638 = !DILocation(line: 425, column: 9, scope: !21612)
!21639 = !DILocation(line: 425, column: 19, scope: !21612)
!21640 = !DILocation(line: 425, column: 27, scope: !21612)
!21641 = !DILocation(line: 426, column: 13, scope: !21612)
!21642 = !DILocation(line: 427, column: 5, scope: !21612)
!21643 = !DILocalVariable(name: "buffer_len", scope: !21585, file: !1852, line: 429, type: !55)
!21644 = !DILocation(line: 429, column: 12, scope: !21585)
!21645 = !DILocation(line: 429, column: 25, scope: !21585)
!21646 = !DILocation(line: 430, column: 9, scope: !21647)
!21647 = distinct !DILexicalBlock(scope: !21585, file: !1852, line: 430, column: 9)
!21648 = !DILocation(line: 430, column: 9, scope: !21585)
!21649 = !DILocation(line: 431, column: 13, scope: !21650)
!21650 = distinct !DILexicalBlock(scope: !21647, file: !1852, line: 430, column: 21)
!21651 = !DILocation(line: 431, column: 9, scope: !21650)
!21652 = !DILocation(line: 431, column: 19, scope: !21650)
!21653 = !DILocation(line: 431, column: 28, scope: !21650)
!21654 = !DILocation(line: 432, column: 13, scope: !21650)
!21655 = !DILocation(line: 432, column: 9, scope: !21650)
!21656 = !DILocation(line: 432, column: 19, scope: !21650)
!21657 = !DILocation(line: 432, column: 27, scope: !21650)
!21658 = !DILocation(line: 433, column: 13, scope: !21650)
!21659 = !DILocation(line: 435, column: 30, scope: !21650)
!21660 = !DILocation(line: 435, column: 13, scope: !21650)
!21661 = !DILocation(line: 435, column: 9, scope: !21650)
!21662 = !DILocation(line: 435, column: 19, scope: !21650)
!21663 = !DILocation(line: 435, column: 28, scope: !21650)
!21664 = !DILocation(line: 436, column: 29, scope: !21650)
!21665 = !DILocation(line: 436, column: 13, scope: !21650)
!21666 = !DILocation(line: 436, column: 9, scope: !21650)
!21667 = !DILocation(line: 436, column: 19, scope: !21650)
!21668 = !DILocation(line: 436, column: 27, scope: !21650)
!21669 = !DILocation(line: 437, column: 13, scope: !21650)
!21670 = !DILocation(line: 439, column: 5, scope: !21650)
!21671 = !DILocation(line: 441, column: 9, scope: !21585)
!21672 = !DILocation(line: 441, column: 5, scope: !21585)
!21673 = !DILocation(line: 441, column: 15, scope: !21585)
!21674 = !DILocation(line: 441, column: 24, scope: !21585)
!21675 = !DILocation(line: 442, column: 9, scope: !21585)
!21676 = !DILocation(line: 442, column: 5, scope: !21585)
!21677 = !DILocation(line: 442, column: 15, scope: !21585)
!21678 = !DILocation(line: 442, column: 23, scope: !21585)
!21679 = !DILocation(line: 443, column: 9, scope: !21585)
!21680 = !DILocation(line: 445, column: 17, scope: !21585)
!21681 = !DILocation(line: 445, column: 26, scope: !21585)
!21682 = !DILocation(line: 445, column: 31, scope: !21585)
!21683 = !DILocation(line: 445, column: 5, scope: !21585)
!21684 = !DILocation(line: 447, column: 9, scope: !21685)
!21685 = distinct !DILexicalBlock(scope: !21585, file: !1852, line: 447, column: 9)
!21686 = !DILocation(line: 447, column: 9, scope: !21585)
!21687 = !DILocation(line: 448, column: 20, scope: !21688)
!21688 = distinct !DILexicalBlock(scope: !21685, file: !1852, line: 447, column: 67)
!21689 = !DILocation(line: 448, column: 29, scope: !21688)
!21690 = !DILocation(line: 448, column: 35, scope: !21688)
!21691 = !DILocation(line: 448, column: 9, scope: !21688)
!21692 = !DILocation(line: 449, column: 9, scope: !21688)
!21693 = !DILocation(line: 452, column: 16, scope: !21585)
!21694 = !DILocation(line: 452, column: 25, scope: !21585)
!21695 = !DILocation(line: 452, column: 31, scope: !21585)
!21696 = !DILocation(line: 452, column: 5, scope: !21585)
!21697 = !DILocation(line: 453, column: 1, scope: !21585)
!21698 = distinct !DISubprogram(name: "lwan_append_double_to_strbuf", scope: !2858, file: !2858, line: 816, type: !15142, scopeLine: 817, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!21699 = !DILocalVariable(name: "buf", arg: 1, scope: !21698, file: !2858, line: 816, type: !2984)
!21700 = !DILocation(line: 816, column: 40, scope: !21698)
!21701 = !DILocalVariable(name: "ptr", arg: 2, scope: !21698, file: !2858, line: 816, type: !111)
!21702 = !DILocation(line: 816, column: 51, scope: !21698)
!21703 = !DILocation(line: 818, column: 26, scope: !21698)
!21704 = !DILocation(line: 818, column: 48, scope: !21698)
!21705 = !DILocation(line: 818, column: 37, scope: !21698)
!21706 = !DILocation(line: 818, column: 5, scope: !21698)
!21707 = !DILocation(line: 819, column: 1, scope: !21698)
!21708 = distinct !DISubprogram(name: "strbuf_append_printf", scope: !3350, file: !3350, line: 234, type: !21709, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3344, retainedNodes: !286)
!21709 = !DISubroutineType(types: !21710)
!21710 = !{!137, !12352, !205, null}
!21711 = !DILocalVariable(name: "s", arg: 1, scope: !21708, file: !3350, line: 234, type: !12352)
!21712 = !DILocation(line: 234, column: 32, scope: !21708)
!21713 = !DILocalVariable(name: "fmt", arg: 2, scope: !21708, file: !3350, line: 234, type: !205)
!21714 = !DILocation(line: 234, column: 47, scope: !21708)
!21715 = !DILocalVariable(name: "could_printf", scope: !21708, file: !3350, line: 236, type: !137)
!21716 = !DILocation(line: 236, column: 10, scope: !21708)
!21717 = !DILocalVariable(name: "values", scope: !21708, file: !3350, line: 237, type: !21718)
!21718 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2964, line: 52, baseType: !21719)
!21719 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !6113, line: 14, baseType: !21720)
!21720 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !21721, baseType: !21722)
!21721 = !DIFile(filename: "common/strbuf.c", directory: "/home/raj/lwan")
!21722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21723, size: 192, elements: !1833)
!21723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", size: 192, elements: !21724)
!21724 = !{!21725, !21726, !21727, !21728}
!21725 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !21723, file: !21721, line: 224, baseType: !9, size: 32)
!21726 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !21723, file: !21721, line: 224, baseType: !9, size: 32, offset: 32)
!21727 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !21723, file: !21721, line: 224, baseType: !111, size: 64, offset: 64)
!21728 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !21723, file: !21721, line: 224, baseType: !111, size: 64, offset: 128)
!21729 = !DILocation(line: 237, column: 13, scope: !21708)
!21730 = !DILocation(line: 239, column: 5, scope: !21708)
!21731 = !DILocation(line: 240, column: 36, scope: !21708)
!21732 = !DILocation(line: 240, column: 58, scope: !21708)
!21733 = !DILocation(line: 240, column: 63, scope: !21708)
!21734 = !DILocalVariable(name: "s1", arg: 1, scope: !21735, file: !3350, line: 206, type: !12352)
!21735 = distinct !DISubprogram(name: "internal_printf", scope: !3350, file: !3350, line: 206, type: !21736, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3344, retainedNodes: !286)
!21736 = !DISubroutineType(types: !21737)
!21737 = !{!137, !12352, !21738, !205, !21739}
!21738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15414, size: 64)
!21739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21723, size: 64)
!21740 = !DILocation(line: 206, column: 27, scope: !21735, inlinedAt: !21741)
!21741 = distinct !DILocation(line: 240, column: 20, scope: !21708)
!21742 = !DILocalVariable(name: "save_str", arg: 2, scope: !21735, file: !3350, line: 206, type: !21738)
!21743 = !DILocation(line: 206, column: 38, scope: !21735, inlinedAt: !21741)
!21744 = !DILocalVariable(name: "fmt", arg: 3, scope: !21735, file: !3350, line: 206, type: !205)
!21745 = !DILocation(line: 206, column: 95, scope: !21735, inlinedAt: !21741)
!21746 = !DILocalVariable(name: "values", arg: 4, scope: !21735, file: !3350, line: 206, type: !21739)
!21747 = !DILocation(line: 206, column: 108, scope: !21735, inlinedAt: !21741)
!21748 = !DILocalVariable(name: "s2", scope: !21735, file: !3350, line: 208, type: !52)
!21749 = !DILocation(line: 208, column: 11, scope: !21735, inlinedAt: !21741)
!21750 = !DILocalVariable(name: "len", scope: !21735, file: !3350, line: 209, type: !34)
!21751 = !DILocation(line: 209, column: 9, scope: !21735, inlinedAt: !21741)
!21752 = !DILocation(line: 211, column: 9, scope: !21753, inlinedAt: !21741)
!21753 = distinct !DILexicalBlock(scope: !21735, file: !3350, line: 211, column: 9)
!21754 = !DILocation(line: 211, column: 9, scope: !21735, inlinedAt: !21741)
!21755 = !DILocation(line: 212, column: 9, scope: !21753, inlinedAt: !21741)
!21756 = !DILocalVariable(name: "success", scope: !21735, file: !3350, line: 214, type: !137)
!21757 = !DILocation(line: 214, column: 10, scope: !21735, inlinedAt: !21741)
!21758 = !DILocation(line: 214, column: 20, scope: !21735, inlinedAt: !21741)
!21759 = !DILocation(line: 214, column: 29, scope: !21735, inlinedAt: !21741)
!21760 = !DILocation(line: 214, column: 33, scope: !21735, inlinedAt: !21741)
!21761 = !DILocation(line: 214, column: 45, scope: !21735, inlinedAt: !21741)
!21762 = !DILocation(line: 214, column: 37, scope: !21735, inlinedAt: !21741)
!21763 = !DILocation(line: 215, column: 10, scope: !21735, inlinedAt: !21741)
!21764 = !DILocation(line: 215, column: 5, scope: !21735, inlinedAt: !21741)
!21765 = !DILocation(line: 217, column: 12, scope: !21735, inlinedAt: !21741)
!21766 = !DILocation(line: 217, column: 5, scope: !21735, inlinedAt: !21741)
!21767 = !DILocation(line: 218, column: 1, scope: !21735, inlinedAt: !21741)
!21768 = !DILocation(line: 240, column: 18, scope: !21708)
!21769 = !DILocation(line: 241, column: 5, scope: !21708)
!21770 = !DILocation(line: 243, column: 12, scope: !21708)
!21771 = !DILocation(line: 243, column: 5, scope: !21708)
!21772 = distinct !DISubprogram(name: "lwan_tpl_double_is_empty", scope: !2858, file: !2858, line: 822, type: !2140, scopeLine: 823, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2905, retainedNodes: !286)
!21773 = !DILocalVariable(name: "ptr", arg: 1, scope: !21772, file: !2858, line: 822, type: !111)
!21774 = !DILocation(line: 822, column: 32, scope: !21772)
!21775 = !DILocation(line: 824, column: 24, scope: !21772)
!21776 = !DILocation(line: 824, column: 13, scope: !21772)
!21777 = !DILocation(line: 824, column: 29, scope: !21772)
!21778 = !DILocation(line: 824, column: 5, scope: !21772)
!21779 = !DILocation(line: 123, column: 36, scope: !13001)
!21780 = !DILocation(line: 123, column: 54, scope: !13001)
!21781 = !DILocation(line: 123, column: 64, scope: !13001)
!21782 = !DILocation(line: 125, column: 9, scope: !13011)
!21783 = !DILocation(line: 125, column: 9, scope: !13001)
!21784 = !DILocation(line: 126, column: 9, scope: !13011)
!21785 = !DILocation(line: 128, column: 12, scope: !13001)
!21786 = !DILocation(line: 129, column: 23, scope: !13001)
!21787 = !DILocation(line: 129, column: 42, scope: !13001)
!21788 = !DILocation(line: 129, column: 48, scope: !13001)
!21789 = !DILocation(line: 129, column: 54, scope: !13001)
!21790 = !DILocation(line: 129, column: 59, scope: !13001)
!21791 = !DILocation(line: 103, column: 31, scope: !13023, inlinedAt: !21792)
!21792 = distinct !DILocation(line: 129, column: 30, scope: !13001)
!21793 = !DILocation(line: 103, column: 49, scope: !13023, inlinedAt: !21792)
!21794 = !DILocation(line: 103, column: 59, scope: !13023, inlinedAt: !21792)
!21795 = !DILocation(line: 103, column: 75, scope: !13023, inlinedAt: !21792)
!21796 = !DILocation(line: 105, column: 23, scope: !13023, inlinedAt: !21792)
!21797 = !DILocation(line: 105, column: 30, scope: !13023, inlinedAt: !21792)
!21798 = !DILocation(line: 106, column: 17, scope: !13023, inlinedAt: !21792)
!21799 = !DILocation(line: 106, column: 28, scope: !13023, inlinedAt: !21792)
!21800 = !DILocation(line: 108, column: 17, scope: !13042, inlinedAt: !21792)
!21801 = !DILocation(line: 108, column: 15, scope: !13042, inlinedAt: !21792)
!21802 = !DILocation(line: 108, column: 10, scope: !13042, inlinedAt: !21792)
!21803 = !DILocation(line: 108, column: 23, scope: !13046, inlinedAt: !21792)
!21804 = !DILocation(line: 108, column: 28, scope: !13046, inlinedAt: !21792)
!21805 = !DILocation(line: 108, column: 32, scope: !13046, inlinedAt: !21792)
!21806 = !DILocation(line: 108, column: 31, scope: !13046, inlinedAt: !21792)
!21807 = !DILocation(line: 0, scope: !13046, inlinedAt: !21792)
!21808 = !DILocation(line: 108, column: 5, scope: !13042, inlinedAt: !21792)
!21809 = !DILocation(line: 109, column: 13, scope: !13053, inlinedAt: !21792)
!21810 = !DILocation(line: 109, column: 19, scope: !13053, inlinedAt: !21792)
!21811 = !DILocation(line: 109, column: 13, scope: !13054, inlinedAt: !21792)
!21812 = !DILocation(line: 110, column: 29, scope: !13053, inlinedAt: !21792)
!21813 = !DILocation(line: 110, column: 27, scope: !13053, inlinedAt: !21792)
!21814 = !DILocation(line: 110, column: 13, scope: !13053, inlinedAt: !21792)
!21815 = !DILocation(line: 108, column: 44, scope: !13046, inlinedAt: !21792)
!21816 = !DILocation(line: 108, column: 65, scope: !13046, inlinedAt: !21792)
!21817 = !DILocation(line: 108, column: 61, scope: !13046, inlinedAt: !21792)
!21818 = !DILocation(line: 108, column: 68, scope: !13046, inlinedAt: !21792)
!21819 = !DILocation(line: 108, column: 42, scope: !13046, inlinedAt: !21792)
!21820 = !DILocation(line: 108, column: 5, scope: !13046, inlinedAt: !21792)
!21821 = distinct !{!21821, !21808, !21822, !3413}
!21822 = !DILocation(line: 111, column: 5, scope: !13042, inlinedAt: !21792)
!21823 = !DILocation(line: 113, column: 28, scope: !13023, inlinedAt: !21792)
!21824 = !DILocation(line: 113, column: 34, scope: !13023, inlinedAt: !21792)
!21825 = !DILocation(line: 113, column: 32, scope: !13023, inlinedAt: !21792)
!21826 = !DILocation(line: 113, column: 6, scope: !13023, inlinedAt: !21792)
!21827 = !DILocation(line: 113, column: 17, scope: !13023, inlinedAt: !21792)
!21828 = !DILocation(line: 114, column: 9, scope: !13074, inlinedAt: !21792)
!21829 = !DILocation(line: 114, column: 14, scope: !13074, inlinedAt: !21792)
!21830 = !DILocation(line: 114, column: 17, scope: !13074, inlinedAt: !21792)
!21831 = !DILocation(line: 114, column: 23, scope: !13074, inlinedAt: !21792)
!21832 = !DILocation(line: 114, column: 9, scope: !13023, inlinedAt: !21792)
!21833 = !DILocation(line: 115, column: 16, scope: !13074, inlinedAt: !21792)
!21834 = !DILocation(line: 115, column: 9, scope: !13074, inlinedAt: !21792)
!21835 = !DILocation(line: 116, column: 9, scope: !13082, inlinedAt: !21792)
!21836 = !DILocation(line: 116, column: 16, scope: !13082, inlinedAt: !21792)
!21837 = !DILocation(line: 116, column: 19, scope: !13082, inlinedAt: !21792)
!21838 = !DILocation(line: 116, column: 9, scope: !13023, inlinedAt: !21792)
!21839 = !DILocation(line: 117, column: 16, scope: !13082, inlinedAt: !21792)
!21840 = !DILocation(line: 117, column: 9, scope: !13082, inlinedAt: !21792)
!21841 = !DILocation(line: 118, column: 5, scope: !13023, inlinedAt: !21792)
!21842 = !DILocation(line: 119, column: 1, scope: !13023, inlinedAt: !21792)
!21843 = !DILocation(line: 130, column: 10, scope: !13091)
!21844 = !DILocation(line: 130, column: 9, scope: !13001)
!21845 = !DILocation(line: 131, column: 9, scope: !13091)
!21846 = !DILocation(line: 132, column: 23, scope: !13001)
!21847 = !DILocation(line: 132, column: 49, scope: !13001)
!21848 = !DILocation(line: 132, column: 55, scope: !13001)
!21849 = !DILocation(line: 132, column: 60, scope: !13001)
!21850 = !DILocation(line: 36, column: 38, scope: !9574, inlinedAt: !21851)
!21851 = distinct !DILocation(line: 132, column: 30, scope: !13001)
!21852 = !DILocation(line: 36, column: 56, scope: !9574, inlinedAt: !21851)
!21853 = !DILocation(line: 36, column: 68, scope: !9574, inlinedAt: !21851)
!21854 = !DILocation(line: 38, column: 23, scope: !9574, inlinedAt: !21851)
!21855 = !DILocation(line: 38, column: 30, scope: !9574, inlinedAt: !21851)
!21856 = !DILocation(line: 38, column: 36, scope: !9574, inlinedAt: !21851)
!21857 = !DILocation(line: 40, column: 10, scope: !9588, inlinedAt: !21851)
!21858 = !DILocation(line: 40, column: 9, scope: !9574, inlinedAt: !21851)
!21859 = !DILocation(line: 41, column: 9, scope: !9588, inlinedAt: !21851)
!21860 = !DILocation(line: 43, column: 10, scope: !9592, inlinedAt: !21851)
!21861 = !DILocation(line: 43, column: 16, scope: !9592, inlinedAt: !21851)
!21862 = !DILocation(line: 43, column: 9, scope: !9574, inlinedAt: !21851)
!21863 = !DILocation(line: 44, column: 16, scope: !9592, inlinedAt: !21851)
!21864 = !DILocation(line: 44, column: 9, scope: !9592, inlinedAt: !21851)
!21865 = !DILocation(line: 46, column: 5, scope: !9574, inlinedAt: !21851)
!21866 = !DILocation(line: 46, column: 12, scope: !9599, inlinedAt: !21851)
!21867 = !DILocation(line: 46, column: 5, scope: !9600, inlinedAt: !21851)
!21868 = !DILocation(line: 47, column: 22, scope: !9603, inlinedAt: !21851)
!21869 = !DILocation(line: 47, column: 28, scope: !9603, inlinedAt: !21851)
!21870 = !DILocation(line: 47, column: 33, scope: !9603, inlinedAt: !21851)
!21871 = !DILocation(line: 47, column: 38, scope: !9603, inlinedAt: !21851)
!21872 = !DILocation(line: 47, column: 42, scope: !9603, inlinedAt: !21851)
!21873 = !DILocation(line: 47, column: 14, scope: !9603, inlinedAt: !21851)
!21874 = !DILocation(line: 47, column: 13, scope: !9604, inlinedAt: !21851)
!21875 = !DILocation(line: 48, column: 20, scope: !9603, inlinedAt: !21851)
!21876 = !DILocation(line: 48, column: 13, scope: !9603, inlinedAt: !21851)
!21877 = !DILocation(line: 46, column: 25, scope: !9599, inlinedAt: !21851)
!21878 = !DILocation(line: 46, column: 31, scope: !9599, inlinedAt: !21851)
!21879 = !DILocation(line: 46, column: 23, scope: !9599, inlinedAt: !21851)
!21880 = !DILocation(line: 46, column: 5, scope: !9599, inlinedAt: !21851)
!21881 = distinct !{!21881, !21867, !21882, !3413}
!21882 = !DILocation(line: 49, column: 5, scope: !9600, inlinedAt: !21851)
!21883 = !DILocation(line: 51, column: 5, scope: !9574, inlinedAt: !21851)
!21884 = !DILocation(line: 52, column: 1, scope: !9574, inlinedAt: !21851)
!21885 = !DILocation(line: 133, column: 12, scope: !13001)
!21886 = !DILocation(line: 133, column: 19, scope: !13001)
!21887 = !DILocation(line: 133, column: 25, scope: !13001)
!21888 = !DILocation(line: 133, column: 5, scope: !13001)
!21889 = !DILocation(line: 134, column: 1, scope: !13001)
!21890 = distinct !DISubprogram(name: "lwan_trie_lookup_exact", scope: !3222, file: !3222, line: 143, type: !12992, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3324, retainedNodes: !286)
!21891 = !DILocalVariable(name: "trie", arg: 1, scope: !21890, file: !3222, line: 143, type: !9366)
!21892 = !DILocation(line: 143, column: 37, scope: !21890)
!21893 = !DILocalVariable(name: "key", arg: 2, scope: !21890, file: !3222, line: 143, type: !205)
!21894 = !DILocation(line: 143, column: 55, scope: !21890)
!21895 = !DILocation(line: 145, column: 34, scope: !21890)
!21896 = !DILocation(line: 145, column: 40, scope: !21890)
!21897 = !DILocation(line: 123, column: 36, scope: !13001, inlinedAt: !21898)
!21898 = distinct !DILocation(line: 145, column: 12, scope: !21890)
!21899 = !DILocation(line: 123, column: 54, scope: !13001, inlinedAt: !21898)
!21900 = !DILocation(line: 123, column: 64, scope: !13001, inlinedAt: !21898)
!21901 = !DILocation(line: 125, column: 9, scope: !13011, inlinedAt: !21898)
!21902 = !DILocation(line: 125, column: 9, scope: !13001, inlinedAt: !21898)
!21903 = !DILocation(line: 126, column: 9, scope: !13011, inlinedAt: !21898)
!21904 = !DILocation(line: 128, column: 12, scope: !13001, inlinedAt: !21898)
!21905 = !DILocation(line: 129, column: 23, scope: !13001, inlinedAt: !21898)
!21906 = !DILocation(line: 129, column: 42, scope: !13001, inlinedAt: !21898)
!21907 = !DILocation(line: 129, column: 48, scope: !13001, inlinedAt: !21898)
!21908 = !DILocation(line: 129, column: 54, scope: !13001, inlinedAt: !21898)
!21909 = !DILocation(line: 129, column: 59, scope: !13001, inlinedAt: !21898)
!21910 = !DILocation(line: 103, column: 31, scope: !13023, inlinedAt: !21911)
!21911 = distinct !DILocation(line: 129, column: 30, scope: !13001, inlinedAt: !21898)
!21912 = !DILocation(line: 103, column: 49, scope: !13023, inlinedAt: !21911)
!21913 = !DILocation(line: 103, column: 59, scope: !13023, inlinedAt: !21911)
!21914 = !DILocation(line: 103, column: 75, scope: !13023, inlinedAt: !21911)
!21915 = !DILocation(line: 105, column: 23, scope: !13023, inlinedAt: !21911)
!21916 = !DILocation(line: 105, column: 30, scope: !13023, inlinedAt: !21911)
!21917 = !DILocation(line: 106, column: 17, scope: !13023, inlinedAt: !21911)
!21918 = !DILocation(line: 106, column: 28, scope: !13023, inlinedAt: !21911)
!21919 = !DILocation(line: 108, column: 17, scope: !13042, inlinedAt: !21911)
!21920 = !DILocation(line: 108, column: 15, scope: !13042, inlinedAt: !21911)
!21921 = !DILocation(line: 108, column: 10, scope: !13042, inlinedAt: !21911)
!21922 = !DILocation(line: 108, column: 23, scope: !13046, inlinedAt: !21911)
!21923 = !DILocation(line: 108, column: 28, scope: !13046, inlinedAt: !21911)
!21924 = !DILocation(line: 108, column: 32, scope: !13046, inlinedAt: !21911)
!21925 = !DILocation(line: 108, column: 31, scope: !13046, inlinedAt: !21911)
!21926 = !DILocation(line: 0, scope: !13046, inlinedAt: !21911)
!21927 = !DILocation(line: 108, column: 5, scope: !13042, inlinedAt: !21911)
!21928 = !DILocation(line: 109, column: 13, scope: !13053, inlinedAt: !21911)
!21929 = !DILocation(line: 109, column: 19, scope: !13053, inlinedAt: !21911)
!21930 = !DILocation(line: 109, column: 13, scope: !13054, inlinedAt: !21911)
!21931 = !DILocation(line: 110, column: 29, scope: !13053, inlinedAt: !21911)
!21932 = !DILocation(line: 110, column: 27, scope: !13053, inlinedAt: !21911)
!21933 = !DILocation(line: 110, column: 13, scope: !13053, inlinedAt: !21911)
!21934 = !DILocation(line: 108, column: 44, scope: !13046, inlinedAt: !21911)
!21935 = !DILocation(line: 108, column: 65, scope: !13046, inlinedAt: !21911)
!21936 = !DILocation(line: 108, column: 61, scope: !13046, inlinedAt: !21911)
!21937 = !DILocation(line: 108, column: 68, scope: !13046, inlinedAt: !21911)
!21938 = !DILocation(line: 108, column: 42, scope: !13046, inlinedAt: !21911)
!21939 = !DILocation(line: 108, column: 5, scope: !13046, inlinedAt: !21911)
!21940 = distinct !{!21940, !21927, !21941, !3413}
!21941 = !DILocation(line: 111, column: 5, scope: !13042, inlinedAt: !21911)
!21942 = !DILocation(line: 113, column: 28, scope: !13023, inlinedAt: !21911)
!21943 = !DILocation(line: 113, column: 34, scope: !13023, inlinedAt: !21911)
!21944 = !DILocation(line: 113, column: 32, scope: !13023, inlinedAt: !21911)
!21945 = !DILocation(line: 113, column: 6, scope: !13023, inlinedAt: !21911)
!21946 = !DILocation(line: 113, column: 17, scope: !13023, inlinedAt: !21911)
!21947 = !DILocation(line: 114, column: 9, scope: !13074, inlinedAt: !21911)
!21948 = !DILocation(line: 114, column: 14, scope: !13074, inlinedAt: !21911)
!21949 = !DILocation(line: 114, column: 17, scope: !13074, inlinedAt: !21911)
!21950 = !DILocation(line: 114, column: 23, scope: !13074, inlinedAt: !21911)
!21951 = !DILocation(line: 114, column: 9, scope: !13023, inlinedAt: !21911)
!21952 = !DILocation(line: 115, column: 16, scope: !13074, inlinedAt: !21911)
!21953 = !DILocation(line: 115, column: 9, scope: !13074, inlinedAt: !21911)
!21954 = !DILocation(line: 116, column: 9, scope: !13082, inlinedAt: !21911)
!21955 = !DILocation(line: 116, column: 16, scope: !13082, inlinedAt: !21911)
!21956 = !DILocation(line: 116, column: 19, scope: !13082, inlinedAt: !21911)
!21957 = !DILocation(line: 116, column: 9, scope: !13023, inlinedAt: !21911)
!21958 = !DILocation(line: 117, column: 16, scope: !13082, inlinedAt: !21911)
!21959 = !DILocation(line: 117, column: 9, scope: !13082, inlinedAt: !21911)
!21960 = !DILocation(line: 118, column: 5, scope: !13023, inlinedAt: !21911)
!21961 = !DILocation(line: 119, column: 1, scope: !13023, inlinedAt: !21911)
!21962 = !DILocation(line: 130, column: 10, scope: !13091, inlinedAt: !21898)
!21963 = !DILocation(line: 130, column: 9, scope: !13001, inlinedAt: !21898)
!21964 = !DILocation(line: 131, column: 9, scope: !13091, inlinedAt: !21898)
!21965 = !DILocation(line: 132, column: 23, scope: !13001, inlinedAt: !21898)
!21966 = !DILocation(line: 132, column: 49, scope: !13001, inlinedAt: !21898)
!21967 = !DILocation(line: 132, column: 55, scope: !13001, inlinedAt: !21898)
!21968 = !DILocation(line: 132, column: 60, scope: !13001, inlinedAt: !21898)
!21969 = !DILocation(line: 36, column: 38, scope: !9574, inlinedAt: !21970)
!21970 = distinct !DILocation(line: 132, column: 30, scope: !13001, inlinedAt: !21898)
!21971 = !DILocation(line: 36, column: 56, scope: !9574, inlinedAt: !21970)
!21972 = !DILocation(line: 36, column: 68, scope: !9574, inlinedAt: !21970)
!21973 = !DILocation(line: 38, column: 23, scope: !9574, inlinedAt: !21970)
!21974 = !DILocation(line: 38, column: 30, scope: !9574, inlinedAt: !21970)
!21975 = !DILocation(line: 38, column: 36, scope: !9574, inlinedAt: !21970)
!21976 = !DILocation(line: 40, column: 10, scope: !9588, inlinedAt: !21970)
!21977 = !DILocation(line: 40, column: 9, scope: !9574, inlinedAt: !21970)
!21978 = !DILocation(line: 41, column: 9, scope: !9588, inlinedAt: !21970)
!21979 = !DILocation(line: 43, column: 10, scope: !9592, inlinedAt: !21970)
!21980 = !DILocation(line: 43, column: 16, scope: !9592, inlinedAt: !21970)
!21981 = !DILocation(line: 43, column: 9, scope: !9574, inlinedAt: !21970)
!21982 = !DILocation(line: 44, column: 16, scope: !9592, inlinedAt: !21970)
!21983 = !DILocation(line: 44, column: 9, scope: !9592, inlinedAt: !21970)
!21984 = !DILocation(line: 46, column: 5, scope: !9574, inlinedAt: !21970)
!21985 = !DILocation(line: 46, column: 12, scope: !9599, inlinedAt: !21970)
!21986 = !DILocation(line: 46, column: 5, scope: !9600, inlinedAt: !21970)
!21987 = !DILocation(line: 47, column: 22, scope: !9603, inlinedAt: !21970)
!21988 = !DILocation(line: 47, column: 28, scope: !9603, inlinedAt: !21970)
!21989 = !DILocation(line: 47, column: 33, scope: !9603, inlinedAt: !21970)
!21990 = !DILocation(line: 47, column: 38, scope: !9603, inlinedAt: !21970)
!21991 = !DILocation(line: 47, column: 42, scope: !9603, inlinedAt: !21970)
!21992 = !DILocation(line: 47, column: 14, scope: !9603, inlinedAt: !21970)
!21993 = !DILocation(line: 47, column: 13, scope: !9604, inlinedAt: !21970)
!21994 = !DILocation(line: 48, column: 20, scope: !9603, inlinedAt: !21970)
!21995 = !DILocation(line: 48, column: 13, scope: !9603, inlinedAt: !21970)
!21996 = !DILocation(line: 46, column: 25, scope: !9599, inlinedAt: !21970)
!21997 = !DILocation(line: 46, column: 31, scope: !9599, inlinedAt: !21970)
!21998 = !DILocation(line: 46, column: 23, scope: !9599, inlinedAt: !21970)
!21999 = !DILocation(line: 46, column: 5, scope: !9599, inlinedAt: !21970)
!22000 = distinct !{!22000, !21986, !22001, !3413}
!22001 = !DILocation(line: 49, column: 5, scope: !9600, inlinedAt: !21970)
!22002 = !DILocation(line: 51, column: 5, scope: !9574, inlinedAt: !21970)
!22003 = !DILocation(line: 52, column: 1, scope: !9574, inlinedAt: !21970)
!22004 = !DILocation(line: 133, column: 12, scope: !13001, inlinedAt: !21898)
!22005 = !DILocation(line: 133, column: 19, scope: !13001, inlinedAt: !21898)
!22006 = !DILocation(line: 133, column: 25, scope: !13001, inlinedAt: !21898)
!22007 = !DILocation(line: 133, column: 5, scope: !13001, inlinedAt: !21898)
!22008 = !DILocation(line: 134, column: 1, scope: !13001, inlinedAt: !21898)
!22009 = !DILocation(line: 145, column: 5, scope: !21890)
!22010 = distinct !DISubprogram(name: "lwan_trie_entry_count", scope: !3222, file: !3222, line: 149, type: !22011, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3324, retainedNodes: !286)
!22011 = !DISubroutineType(types: !22012)
!22012 = !{!9675, !9366}
!22013 = !DILocalVariable(name: "trie", arg: 1, scope: !22010, file: !3222, line: 149, type: !9366)
!22014 = !DILocation(line: 149, column: 36, scope: !22010)
!22015 = !DILocation(line: 151, column: 13, scope: !22010)
!22016 = !DILocation(line: 151, column: 18, scope: !22010)
!22017 = !DILocation(line: 151, column: 21, scope: !22010)
!22018 = !DILocation(line: 151, column: 27, scope: !22010)
!22019 = !DILocation(line: 151, column: 12, scope: !22010)
!22020 = !DILocation(line: 151, column: 35, scope: !22010)
!22021 = !DILocation(line: 151, column: 41, scope: !22010)
!22022 = !DILocation(line: 151, column: 47, scope: !22010)
!22023 = !DILocation(line: 151, column: 5, scope: !22010)
!22024 = distinct !DISubprogram(name: "realpathat", scope: !3245, file: !3245, line: 199, type: !22025, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3331, retainedNodes: !286)
!22025 = !DISubroutineType(types: !22026)
!22026 = !{!52, !34, !52, !205, !52}
!22027 = !DILocalVariable(name: "dirfd", arg: 1, scope: !22024, file: !3245, line: 199, type: !34)
!22028 = !DILocation(line: 199, column: 16, scope: !22024)
!22029 = !DILocalVariable(name: "dirfdpath", arg: 2, scope: !22024, file: !3245, line: 199, type: !52)
!22030 = !DILocation(line: 199, column: 29, scope: !22024)
!22031 = !DILocalVariable(name: "name", arg: 3, scope: !22024, file: !3245, line: 199, type: !205)
!22032 = !DILocation(line: 199, column: 52, scope: !22024)
!22033 = !DILocalVariable(name: "resolved", arg: 4, scope: !22024, file: !3245, line: 199, type: !52)
!22034 = !DILocation(line: 199, column: 64, scope: !22024)
!22035 = !DILocalVariable(name: "st", scope: !22024, file: !3245, line: 201, type: !19443)
!22036 = !DILocation(line: 201, column: 17, scope: !22024)
!22037 = !DILocation(line: 202, column: 24, scope: !22024)
!22038 = !DILocation(line: 202, column: 31, scope: !22024)
!22039 = !DILocation(line: 202, column: 42, scope: !22024)
!22040 = !DILocation(line: 202, column: 48, scope: !22024)
!22041 = !DILocation(line: 202, column: 12, scope: !22024)
!22042 = !DILocation(line: 202, column: 5, scope: !22024)
!22043 = distinct !DISubprogram(name: "sd_is_fifo", scope: !3255, file: !3255, line: 119, type: !22044, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3335, retainedNodes: !286)
!22044 = !DISubroutineType(types: !22045)
!22045 = !{!34, !34, !205}
!22046 = !DILocalVariable(name: "fd", arg: 1, scope: !22043, file: !3255, line: 119, type: !34)
!22047 = !DILocation(line: 119, column: 20, scope: !22043)
!22048 = !DILocalVariable(name: "path", arg: 2, scope: !22043, file: !3255, line: 119, type: !205)
!22049 = !DILocation(line: 119, column: 36, scope: !22043)
!22050 = !DILocalVariable(name: "st_fd", scope: !22043, file: !3255, line: 120, type: !11350)
!22051 = !DILocation(line: 120, column: 21, scope: !22043)
!22052 = !DILocation(line: 122, column: 13, scope: !22053)
!22053 = distinct !DILexicalBlock(scope: !22043, file: !3255, line: 122, column: 13)
!22054 = !DILocation(line: 122, column: 16, scope: !22053)
!22055 = !DILocation(line: 122, column: 13, scope: !22043)
!22056 = !DILocation(line: 123, column: 17, scope: !22053)
!22057 = !DILocation(line: 125, column: 19, scope: !22058)
!22058 = distinct !DILexicalBlock(scope: !22043, file: !3255, line: 125, column: 13)
!22059 = !DILocation(line: 125, column: 13, scope: !22058)
!22060 = !DILocation(line: 125, column: 31, scope: !22058)
!22061 = !DILocation(line: 125, column: 13, scope: !22043)
!22062 = !DILocation(line: 126, column: 25, scope: !22058)
!22063 = !DILocation(line: 126, column: 24, scope: !22058)
!22064 = !DILocation(line: 126, column: 17, scope: !22058)
!22065 = !DILocation(line: 128, column: 14, scope: !22066)
!22066 = distinct !DILexicalBlock(scope: !22043, file: !3255, line: 128, column: 13)
!22067 = !DILocation(line: 128, column: 13, scope: !22043)
!22068 = !DILocation(line: 129, column: 17, scope: !22066)
!22069 = !DILocation(line: 131, column: 13, scope: !22070)
!22070 = distinct !DILexicalBlock(scope: !22043, file: !3255, line: 131, column: 13)
!22071 = !DILocation(line: 131, column: 13, scope: !22043)
!22072 = !DILocalVariable(name: "st_path", scope: !22073, file: !3255, line: 132, type: !11350)
!22073 = distinct !DILexicalBlock(scope: !22070, file: !3255, line: 131, column: 19)
!22074 = !DILocation(line: 132, column: 29, scope: !22073)
!22075 = !DILocation(line: 134, column: 26, scope: !22076)
!22076 = distinct !DILexicalBlock(scope: !22073, file: !3255, line: 134, column: 21)
!22077 = !DILocation(line: 134, column: 21, scope: !22076)
!22078 = !DILocation(line: 134, column: 42, scope: !22076)
!22079 = !DILocation(line: 134, column: 21, scope: !22073)
!22080 = !DILocation(line: 136, column: 29, scope: !22081)
!22081 = distinct !DILexicalBlock(scope: !22082, file: !3255, line: 136, column: 29)
!22082 = distinct !DILexicalBlock(scope: !22076, file: !3255, line: 134, column: 47)
!22083 = !DILocation(line: 136, column: 35, scope: !22081)
!22084 = !DILocation(line: 136, column: 45, scope: !22081)
!22085 = !DILocation(line: 136, column: 48, scope: !22081)
!22086 = !DILocation(line: 136, column: 54, scope: !22081)
!22087 = !DILocation(line: 136, column: 29, scope: !22082)
!22088 = !DILocation(line: 137, column: 33, scope: !22081)
!22089 = !DILocation(line: 139, column: 33, scope: !22082)
!22090 = !DILocation(line: 139, column: 32, scope: !22082)
!22091 = !DILocation(line: 139, column: 25, scope: !22082)
!22092 = !DILocation(line: 143, column: 33, scope: !22073)
!22093 = !DILocation(line: 143, column: 49, scope: !22073)
!22094 = !DILocation(line: 143, column: 40, scope: !22073)
!22095 = !DILocation(line: 143, column: 56, scope: !22073)
!22096 = !DILocation(line: 144, column: 33, scope: !22073)
!22097 = !DILocation(line: 144, column: 49, scope: !22073)
!22098 = !DILocation(line: 144, column: 40, scope: !22073)
!22099 = !DILocation(line: 0, scope: !22073)
!22100 = !DILocation(line: 142, column: 17, scope: !22073)
!22101 = !DILocation(line: 147, column: 9, scope: !22043)
!22102 = !DILocation(line: 148, column: 1, scope: !22043)
!22103 = distinct !DISubprogram(name: "sd_is_special", scope: !3255, file: !3255, line: 150, type: !22044, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3335, retainedNodes: !286)
!22104 = !DILocalVariable(name: "fd", arg: 1, scope: !22103, file: !3255, line: 150, type: !34)
!22105 = !DILocation(line: 150, column: 23, scope: !22103)
!22106 = !DILocalVariable(name: "path", arg: 2, scope: !22103, file: !3255, line: 150, type: !205)
!22107 = !DILocation(line: 150, column: 39, scope: !22103)
!22108 = !DILocalVariable(name: "st_fd", scope: !22103, file: !3255, line: 151, type: !11350)
!22109 = !DILocation(line: 151, column: 21, scope: !22103)
!22110 = !DILocation(line: 153, column: 13, scope: !22111)
!22111 = distinct !DILexicalBlock(scope: !22103, file: !3255, line: 153, column: 13)
!22112 = !DILocation(line: 153, column: 16, scope: !22111)
!22113 = !DILocation(line: 153, column: 13, scope: !22103)
!22114 = !DILocation(line: 154, column: 17, scope: !22111)
!22115 = !DILocation(line: 156, column: 19, scope: !22116)
!22116 = distinct !DILexicalBlock(scope: !22103, file: !3255, line: 156, column: 13)
!22117 = !DILocation(line: 156, column: 13, scope: !22116)
!22118 = !DILocation(line: 156, column: 31, scope: !22116)
!22119 = !DILocation(line: 156, column: 13, scope: !22103)
!22120 = !DILocation(line: 157, column: 25, scope: !22116)
!22121 = !DILocation(line: 157, column: 24, scope: !22116)
!22122 = !DILocation(line: 157, column: 17, scope: !22116)
!22123 = !DILocation(line: 159, column: 14, scope: !22124)
!22124 = distinct !DILexicalBlock(scope: !22103, file: !3255, line: 159, column: 13)
!22125 = !DILocation(line: 159, column: 37, scope: !22124)
!22126 = !DILocation(line: 159, column: 41, scope: !22124)
!22127 = !DILocation(line: 159, column: 13, scope: !22103)
!22128 = !DILocation(line: 160, column: 17, scope: !22124)
!22129 = !DILocation(line: 162, column: 13, scope: !22130)
!22130 = distinct !DILexicalBlock(scope: !22103, file: !3255, line: 162, column: 13)
!22131 = !DILocation(line: 162, column: 13, scope: !22103)
!22132 = !DILocalVariable(name: "st_path", scope: !22133, file: !3255, line: 163, type: !11350)
!22133 = distinct !DILexicalBlock(scope: !22130, file: !3255, line: 162, column: 19)
!22134 = !DILocation(line: 163, column: 29, scope: !22133)
!22135 = !DILocation(line: 165, column: 26, scope: !22136)
!22136 = distinct !DILexicalBlock(scope: !22133, file: !3255, line: 165, column: 21)
!22137 = !DILocation(line: 165, column: 21, scope: !22136)
!22138 = !DILocation(line: 165, column: 42, scope: !22136)
!22139 = !DILocation(line: 165, column: 21, scope: !22133)
!22140 = !DILocation(line: 167, column: 29, scope: !22141)
!22141 = distinct !DILexicalBlock(scope: !22142, file: !3255, line: 167, column: 29)
!22142 = distinct !DILexicalBlock(scope: !22136, file: !3255, line: 165, column: 47)
!22143 = !DILocation(line: 167, column: 35, scope: !22141)
!22144 = !DILocation(line: 167, column: 45, scope: !22141)
!22145 = !DILocation(line: 167, column: 48, scope: !22141)
!22146 = !DILocation(line: 167, column: 54, scope: !22141)
!22147 = !DILocation(line: 167, column: 29, scope: !22142)
!22148 = !DILocation(line: 168, column: 33, scope: !22141)
!22149 = !DILocation(line: 170, column: 33, scope: !22142)
!22150 = !DILocation(line: 170, column: 32, scope: !22142)
!22151 = !DILocation(line: 170, column: 25, scope: !22142)
!22152 = !DILocation(line: 173, column: 21, scope: !22153)
!22153 = distinct !DILexicalBlock(scope: !22133, file: !3255, line: 173, column: 21)
!22154 = !DILocation(line: 173, column: 44, scope: !22153)
!22155 = !DILocation(line: 173, column: 47, scope: !22153)
!22156 = !DILocation(line: 173, column: 21, scope: !22133)
!22157 = !DILocation(line: 175, column: 41, scope: !22153)
!22158 = !DILocation(line: 175, column: 57, scope: !22153)
!22159 = !DILocation(line: 175, column: 48, scope: !22153)
!22160 = !DILocation(line: 175, column: 64, scope: !22153)
!22161 = !DILocation(line: 176, column: 41, scope: !22153)
!22162 = !DILocation(line: 176, column: 57, scope: !22153)
!22163 = !DILocation(line: 176, column: 48, scope: !22153)
!22164 = !DILocation(line: 0, scope: !22153)
!22165 = !DILocation(line: 174, column: 25, scope: !22153)
!22166 = !DILocation(line: 177, column: 26, scope: !22167)
!22167 = distinct !DILexicalBlock(scope: !22153, file: !3255, line: 177, column: 26)
!22168 = !DILocation(line: 177, column: 49, scope: !22167)
!22169 = !DILocation(line: 177, column: 52, scope: !22167)
!22170 = !DILocation(line: 177, column: 26, scope: !22153)
!22171 = !DILocation(line: 178, column: 40, scope: !22167)
!22172 = !DILocation(line: 178, column: 57, scope: !22167)
!22173 = !DILocation(line: 178, column: 48, scope: !22167)
!22174 = !DILocation(line: 178, column: 25, scope: !22167)
!22175 = !DILocation(line: 180, column: 25, scope: !22167)
!22176 = !DILocation(line: 183, column: 9, scope: !22103)
!22177 = !DILocation(line: 184, column: 1, scope: !22103)
!22178 = distinct !DISubprogram(name: "sd_is_socket", scope: !3255, file: !3255, line: 237, type: !22179, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3335, retainedNodes: !286)
!22179 = !DISubroutineType(types: !22180)
!22180 = !{!34, !34, !34, !34, !34}
!22181 = !DILocalVariable(name: "fd", arg: 1, scope: !22178, file: !3255, line: 237, type: !34)
!22182 = !DILocation(line: 237, column: 22, scope: !22178)
!22183 = !DILocalVariable(name: "family", arg: 2, scope: !22178, file: !3255, line: 237, type: !34)
!22184 = !DILocation(line: 237, column: 30, scope: !22178)
!22185 = !DILocalVariable(name: "type", arg: 3, scope: !22178, file: !3255, line: 237, type: !34)
!22186 = !DILocation(line: 237, column: 42, scope: !22178)
!22187 = !DILocalVariable(name: "listening", arg: 4, scope: !22178, file: !3255, line: 237, type: !34)
!22188 = !DILocation(line: 237, column: 52, scope: !22178)
!22189 = !DILocalVariable(name: "r", scope: !22178, file: !3255, line: 238, type: !34)
!22190 = !DILocation(line: 238, column: 13, scope: !22178)
!22191 = !DILocation(line: 240, column: 13, scope: !22192)
!22192 = distinct !DILexicalBlock(scope: !22178, file: !3255, line: 240, column: 13)
!22193 = !DILocation(line: 240, column: 20, scope: !22192)
!22194 = !DILocation(line: 240, column: 13, scope: !22178)
!22195 = !DILocation(line: 241, column: 17, scope: !22192)
!22196 = !DILocation(line: 243, column: 35, scope: !22178)
!22197 = !DILocation(line: 243, column: 39, scope: !22178)
!22198 = !DILocation(line: 243, column: 45, scope: !22178)
!22199 = !DILocation(line: 243, column: 13, scope: !22178)
!22200 = !DILocation(line: 243, column: 11, scope: !22178)
!22201 = !DILocation(line: 244, column: 13, scope: !22202)
!22202 = distinct !DILexicalBlock(scope: !22178, file: !3255, line: 244, column: 13)
!22203 = !DILocation(line: 244, column: 15, scope: !22202)
!22204 = !DILocation(line: 244, column: 13, scope: !22178)
!22205 = !DILocation(line: 245, column: 24, scope: !22202)
!22206 = !DILocation(line: 245, column: 17, scope: !22202)
!22207 = !DILocation(line: 247, column: 13, scope: !22208)
!22208 = distinct !DILexicalBlock(scope: !22178, file: !3255, line: 247, column: 13)
!22209 = !DILocation(line: 247, column: 20, scope: !22208)
!22210 = !DILocation(line: 247, column: 13, scope: !22178)
!22211 = !DILocalVariable(name: "sockaddr", scope: !22212, file: !3255, line: 248, type: !11191)
!22212 = distinct !DILexicalBlock(scope: !22208, file: !3255, line: 247, column: 25)
!22213 = !DILocation(line: 248, column: 38, scope: !22212)
!22214 = !DILocalVariable(name: "l", scope: !22212, file: !3255, line: 249, type: !3341)
!22215 = !DILocation(line: 249, column: 27, scope: !22212)
!22216 = !DILocation(line: 251, column: 33, scope: !22217)
!22217 = distinct !DILexicalBlock(scope: !22212, file: !3255, line: 251, column: 21)
!22218 = !DILocation(line: 251, column: 37, scope: !22217)
!22219 = !DILocation(line: 251, column: 21, scope: !22217)
!22220 = !DILocation(line: 251, column: 55, scope: !22217)
!22221 = !DILocation(line: 251, column: 21, scope: !22212)
!22222 = !DILocation(line: 252, column: 33, scope: !22217)
!22223 = !DILocation(line: 252, column: 32, scope: !22217)
!22224 = !DILocation(line: 252, column: 25, scope: !22217)
!22225 = !DILocation(line: 254, column: 21, scope: !22226)
!22226 = distinct !DILexicalBlock(scope: !22212, file: !3255, line: 254, column: 21)
!22227 = !DILocation(line: 254, column: 23, scope: !22226)
!22228 = !DILocation(line: 254, column: 21, scope: !22212)
!22229 = !DILocation(line: 255, column: 25, scope: !22226)
!22230 = !DILocation(line: 257, column: 36, scope: !22212)
!22231 = !DILocation(line: 257, column: 24, scope: !22212)
!22232 = !DILocation(line: 257, column: 49, scope: !22212)
!22233 = !DILocation(line: 257, column: 46, scope: !22212)
!22234 = !DILocation(line: 257, column: 17, scope: !22212)
!22235 = !DILocation(line: 260, column: 9, scope: !22178)
!22236 = !DILocation(line: 261, column: 1, scope: !22178)
!22237 = distinct !DISubprogram(name: "sd_is_socket_unix", scope: !3255, file: !3255, line: 306, type: !22238, scopeLine: 306, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3335, retainedNodes: !286)
!22238 = !DISubroutineType(types: !22239)
!22239 = !{!34, !34, !34, !34, !205, !55}
!22240 = !DILocalVariable(name: "fd", arg: 1, scope: !22237, file: !3255, line: 306, type: !34)
!22241 = !DILocation(line: 306, column: 27, scope: !22237)
!22242 = !DILocalVariable(name: "type", arg: 2, scope: !22237, file: !3255, line: 306, type: !34)
!22243 = !DILocation(line: 306, column: 35, scope: !22237)
!22244 = !DILocalVariable(name: "listening", arg: 3, scope: !22237, file: !3255, line: 306, type: !34)
!22245 = !DILocation(line: 306, column: 45, scope: !22237)
!22246 = !DILocalVariable(name: "path", arg: 4, scope: !22237, file: !3255, line: 306, type: !205)
!22247 = !DILocation(line: 306, column: 68, scope: !22237)
!22248 = !DILocalVariable(name: "length", arg: 5, scope: !22237, file: !3255, line: 306, type: !55)
!22249 = !DILocation(line: 306, column: 81, scope: !22237)
!22250 = !DILocalVariable(name: "sockaddr", scope: !22237, file: !3255, line: 307, type: !11191)
!22251 = !DILocation(line: 307, column: 30, scope: !22237)
!22252 = !DILocalVariable(name: "l", scope: !22237, file: !3255, line: 308, type: !3341)
!22253 = !DILocation(line: 308, column: 19, scope: !22237)
!22254 = !DILocalVariable(name: "r", scope: !22237, file: !3255, line: 309, type: !34)
!22255 = !DILocation(line: 309, column: 13, scope: !22237)
!22256 = !DILocation(line: 311, column: 35, scope: !22237)
!22257 = !DILocation(line: 311, column: 39, scope: !22237)
!22258 = !DILocation(line: 311, column: 45, scope: !22237)
!22259 = !DILocation(line: 311, column: 13, scope: !22237)
!22260 = !DILocation(line: 311, column: 11, scope: !22237)
!22261 = !DILocation(line: 312, column: 13, scope: !22262)
!22262 = distinct !DILexicalBlock(scope: !22237, file: !3255, line: 312, column: 13)
!22263 = !DILocation(line: 312, column: 15, scope: !22262)
!22264 = !DILocation(line: 312, column: 13, scope: !22237)
!22265 = !DILocation(line: 313, column: 24, scope: !22262)
!22266 = !DILocation(line: 313, column: 17, scope: !22262)
!22267 = !DILocation(line: 315, column: 25, scope: !22268)
!22268 = distinct !DILexicalBlock(scope: !22237, file: !3255, line: 315, column: 13)
!22269 = !DILocation(line: 315, column: 29, scope: !22268)
!22270 = !DILocation(line: 315, column: 13, scope: !22268)
!22271 = !DILocation(line: 315, column: 47, scope: !22268)
!22272 = !DILocation(line: 315, column: 13, scope: !22237)
!22273 = !DILocation(line: 316, column: 25, scope: !22268)
!22274 = !DILocation(line: 316, column: 24, scope: !22268)
!22275 = !DILocation(line: 316, column: 17, scope: !22268)
!22276 = !DILocation(line: 318, column: 13, scope: !22277)
!22277 = distinct !DILexicalBlock(scope: !22237, file: !3255, line: 318, column: 13)
!22278 = !DILocation(line: 318, column: 15, scope: !22277)
!22279 = !DILocation(line: 318, column: 13, scope: !22237)
!22280 = !DILocation(line: 319, column: 17, scope: !22277)
!22281 = !DILocation(line: 321, column: 25, scope: !22282)
!22282 = distinct !DILexicalBlock(scope: !22237, file: !3255, line: 321, column: 13)
!22283 = !DILocation(line: 321, column: 13, scope: !22282)
!22284 = !DILocation(line: 321, column: 35, scope: !22282)
!22285 = !DILocation(line: 321, column: 13, scope: !22237)
!22286 = !DILocation(line: 322, column: 17, scope: !22282)
!22287 = !DILocation(line: 324, column: 13, scope: !22288)
!22288 = distinct !DILexicalBlock(scope: !22237, file: !3255, line: 324, column: 13)
!22289 = !DILocation(line: 324, column: 13, scope: !22237)
!22290 = !DILocation(line: 325, column: 21, scope: !22291)
!22291 = distinct !DILexicalBlock(scope: !22292, file: !3255, line: 325, column: 21)
!22292 = distinct !DILexicalBlock(scope: !22288, file: !3255, line: 324, column: 19)
!22293 = !DILocation(line: 325, column: 28, scope: !22291)
!22294 = !DILocation(line: 325, column: 21, scope: !22292)
!22295 = !DILocation(line: 326, column: 41, scope: !22291)
!22296 = !DILocation(line: 326, column: 34, scope: !22291)
!22297 = !DILocation(line: 326, column: 32, scope: !22291)
!22298 = !DILocation(line: 326, column: 25, scope: !22291)
!22299 = !DILocation(line: 328, column: 21, scope: !22300)
!22300 = distinct !DILexicalBlock(scope: !22292, file: !3255, line: 328, column: 21)
!22301 = !DILocation(line: 328, column: 28, scope: !22300)
!22302 = !DILocation(line: 328, column: 21, scope: !22292)
!22303 = !DILocation(line: 330, column: 32, scope: !22300)
!22304 = !DILocation(line: 330, column: 34, scope: !22300)
!22305 = !DILocation(line: 330, column: 25, scope: !22300)
!22306 = !DILocation(line: 332, column: 21, scope: !22307)
!22307 = distinct !DILexicalBlock(scope: !22292, file: !3255, line: 332, column: 21)
!22308 = !DILocation(line: 332, column: 21, scope: !22292)
!22309 = !DILocation(line: 335, column: 34, scope: !22307)
!22310 = !DILocation(line: 335, column: 80, scope: !22307)
!22311 = !DILocation(line: 335, column: 78, scope: !22307)
!22312 = !DILocation(line: 335, column: 87, scope: !22307)
!22313 = !DILocation(line: 335, column: 36, scope: !22307)
!22314 = !DILocation(line: 335, column: 92, scope: !22307)
!22315 = !DILocation(line: 336, column: 40, scope: !22307)
!22316 = !DILocation(line: 336, column: 58, scope: !22307)
!22317 = !DILocation(line: 336, column: 46, scope: !22307)
!22318 = !DILocation(line: 336, column: 68, scope: !22307)
!22319 = !DILocation(line: 336, column: 74, scope: !22307)
!22320 = !DILocation(line: 336, column: 33, scope: !22307)
!22321 = !DILocation(line: 336, column: 78, scope: !22307)
!22322 = !DILocation(line: 0, scope: !22307)
!22323 = !DILocation(line: 334, column: 25, scope: !22307)
!22324 = !DILocation(line: 340, column: 34, scope: !22307)
!22325 = !DILocation(line: 340, column: 80, scope: !22307)
!22326 = !DILocation(line: 340, column: 78, scope: !22307)
!22327 = !DILocation(line: 340, column: 36, scope: !22307)
!22328 = !DILocation(line: 340, column: 88, scope: !22307)
!22329 = !DILocation(line: 341, column: 40, scope: !22307)
!22330 = !DILocation(line: 341, column: 58, scope: !22307)
!22331 = !DILocation(line: 341, column: 46, scope: !22307)
!22332 = !DILocation(line: 341, column: 68, scope: !22307)
!22333 = !DILocation(line: 341, column: 33, scope: !22307)
!22334 = !DILocation(line: 341, column: 76, scope: !22307)
!22335 = !DILocation(line: 339, column: 25, scope: !22307)
!22336 = !DILocation(line: 344, column: 9, scope: !22237)
!22337 = !DILocation(line: 345, column: 1, scope: !22237)
!22338 = distinct !DISubprogram(name: "sd_notify", scope: !3255, file: !3255, line: 347, type: !22044, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3335, retainedNodes: !286)
!22339 = !DILocalVariable(name: "unset_environment", arg: 1, scope: !22338, file: !3255, line: 347, type: !34)
!22340 = !DILocation(line: 347, column: 19, scope: !22338)
!22341 = !DILocalVariable(name: "state", arg: 2, scope: !22338, file: !3255, line: 347, type: !205)
!22342 = !DILocation(line: 347, column: 50, scope: !22338)
!22343 = !DILocalVariable(name: "fd", scope: !22338, file: !3255, line: 348, type: !34)
!22344 = !DILocation(line: 348, column: 13, scope: !22338)
!22345 = !DILocalVariable(name: "r", scope: !22338, file: !3255, line: 348, type: !34)
!22346 = !DILocation(line: 348, column: 22, scope: !22338)
!22347 = !DILocalVariable(name: "msghdr", scope: !22338, file: !3255, line: 349, type: !22348)
!22348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msghdr", file: !1781, line: 259, size: 448, elements: !22349)
!22349 = !{!22350, !22351, !22352, !22358, !22359, !22360, !22361}
!22350 = !DIDerivedType(tag: DW_TAG_member, name: "msg_name", scope: !22348, file: !1781, line: 261, baseType: !111, size: 64)
!22351 = !DIDerivedType(tag: DW_TAG_member, name: "msg_namelen", scope: !22348, file: !1781, line: 262, baseType: !3341, size: 32, offset: 64)
!22352 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iov", scope: !22348, file: !1781, line: 264, baseType: !22353, size: 64, offset: 128)
!22353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22354, size: 64)
!22354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !8576, line: 26, size: 128, elements: !22355)
!22355 = !{!22356, !22357}
!22356 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !22354, file: !8576, line: 28, baseType: !111, size: 64)
!22357 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !22354, file: !8576, line: 29, baseType: !55, size: 64, offset: 64)
!22358 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iovlen", scope: !22348, file: !1781, line: 265, baseType: !55, size: 64, offset: 192)
!22359 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control", scope: !22348, file: !1781, line: 267, baseType: !111, size: 64, offset: 256)
!22360 = !DIDerivedType(tag: DW_TAG_member, name: "msg_controllen", scope: !22348, file: !1781, line: 268, baseType: !55, size: 64, offset: 320)
!22361 = !DIDerivedType(tag: DW_TAG_member, name: "msg_flags", scope: !22348, file: !1781, line: 273, baseType: !34, size: 32, offset: 384)
!22362 = !DILocation(line: 349, column: 23, scope: !22338)
!22363 = !DILocalVariable(name: "iovec", scope: !22338, file: !3255, line: 350, type: !22354)
!22364 = !DILocation(line: 350, column: 22, scope: !22338)
!22365 = !DILocalVariable(name: "sockaddr", scope: !22338, file: !3255, line: 351, type: !11191)
!22366 = !DILocation(line: 351, column: 30, scope: !22338)
!22367 = !DILocalVariable(name: "e", scope: !22338, file: !3255, line: 352, type: !205)
!22368 = !DILocation(line: 352, column: 21, scope: !22338)
!22369 = !DILocation(line: 354, column: 14, scope: !22370)
!22370 = distinct !DILexicalBlock(scope: !22338, file: !3255, line: 354, column: 13)
!22371 = !DILocation(line: 354, column: 13, scope: !22338)
!22372 = !DILocation(line: 355, column: 19, scope: !22373)
!22373 = distinct !DILexicalBlock(scope: !22370, file: !3255, line: 354, column: 21)
!22374 = !DILocation(line: 356, column: 17, scope: !22373)
!22375 = !DILocation(line: 359, column: 13, scope: !22338)
!22376 = !DILocation(line: 359, column: 11, scope: !22338)
!22377 = !DILocation(line: 360, column: 14, scope: !22378)
!22378 = distinct !DILexicalBlock(scope: !22338, file: !3255, line: 360, column: 13)
!22379 = !DILocation(line: 360, column: 13, scope: !22338)
!22380 = !DILocation(line: 361, column: 17, scope: !22378)
!22381 = !DILocation(line: 364, column: 14, scope: !22382)
!22382 = distinct !DILexicalBlock(scope: !22338, file: !3255, line: 364, column: 13)
!22383 = !DILocation(line: 364, column: 19, scope: !22382)
!22384 = !DILocation(line: 364, column: 26, scope: !22382)
!22385 = !DILocation(line: 364, column: 29, scope: !22382)
!22386 = !DILocation(line: 364, column: 34, scope: !22382)
!22387 = !DILocation(line: 364, column: 42, scope: !22382)
!22388 = !DILocation(line: 364, column: 45, scope: !22382)
!22389 = !DILocation(line: 364, column: 50, scope: !22382)
!22390 = !DILocation(line: 364, column: 13, scope: !22338)
!22391 = !DILocation(line: 365, column: 19, scope: !22392)
!22392 = distinct !DILexicalBlock(scope: !22382, file: !3255, line: 364, column: 56)
!22393 = !DILocation(line: 366, column: 17, scope: !22392)
!22394 = !DILocation(line: 369, column: 14, scope: !22338)
!22395 = !DILocation(line: 369, column: 12, scope: !22338)
!22396 = !DILocation(line: 370, column: 13, scope: !22397)
!22397 = distinct !DILexicalBlock(scope: !22338, file: !3255, line: 370, column: 13)
!22398 = !DILocation(line: 370, column: 16, scope: !22397)
!22399 = !DILocation(line: 370, column: 13, scope: !22338)
!22400 = !DILocation(line: 371, column: 22, scope: !22401)
!22401 = distinct !DILexicalBlock(scope: !22397, file: !3255, line: 370, column: 21)
!22402 = !DILocation(line: 371, column: 21, scope: !22401)
!22403 = !DILocation(line: 371, column: 19, scope: !22401)
!22404 = !DILocation(line: 372, column: 17, scope: !22401)
!22405 = !DILocation(line: 375, column: 9, scope: !22338)
!22406 = !DILocation(line: 376, column: 21, scope: !22338)
!22407 = !DILocation(line: 376, column: 31, scope: !22338)
!22408 = !DILocation(line: 377, column: 29, scope: !22338)
!22409 = !DILocation(line: 377, column: 17, scope: !22338)
!22410 = !DILocation(line: 377, column: 39, scope: !22338)
!22411 = !DILocation(line: 377, column: 9, scope: !22338)
!22412 = !DILocation(line: 379, column: 25, scope: !22413)
!22413 = distinct !DILexicalBlock(scope: !22338, file: !3255, line: 379, column: 13)
!22414 = !DILocation(line: 379, column: 13, scope: !22413)
!22415 = !DILocation(line: 379, column: 37, scope: !22413)
!22416 = !DILocation(line: 379, column: 13, scope: !22338)
!22417 = !DILocation(line: 380, column: 29, scope: !22413)
!22418 = !DILocation(line: 380, column: 17, scope: !22413)
!22419 = !DILocation(line: 380, column: 41, scope: !22413)
!22420 = !DILocation(line: 382, column: 9, scope: !22338)
!22421 = !DILocation(line: 383, column: 34, scope: !22338)
!22422 = !DILocation(line: 383, column: 15, scope: !22338)
!22423 = !DILocation(line: 383, column: 24, scope: !22338)
!22424 = !DILocation(line: 384, column: 32, scope: !22338)
!22425 = !DILocation(line: 384, column: 25, scope: !22338)
!22426 = !DILocation(line: 384, column: 15, scope: !22338)
!22427 = !DILocation(line: 384, column: 23, scope: !22338)
!22428 = !DILocation(line: 386, column: 9, scope: !22338)
!22429 = !DILocation(line: 387, column: 16, scope: !22338)
!22430 = !DILocation(line: 387, column: 25, scope: !22338)
!22431 = !DILocation(line: 388, column: 90, scope: !22338)
!22432 = !DILocation(line: 388, column: 83, scope: !22338)
!22433 = !DILocation(line: 388, column: 81, scope: !22338)
!22434 = !DILocation(line: 388, column: 30, scope: !22338)
!22435 = !DILocation(line: 388, column: 16, scope: !22338)
!22436 = !DILocation(line: 388, column: 28, scope: !22338)
!22437 = !DILocation(line: 390, column: 20, scope: !22438)
!22438 = distinct !DILexicalBlock(scope: !22338, file: !3255, line: 390, column: 13)
!22439 = !DILocation(line: 390, column: 13, scope: !22438)
!22440 = !DILocation(line: 390, column: 32, scope: !22438)
!22441 = !DILocation(line: 390, column: 13, scope: !22338)
!22442 = !DILocation(line: 391, column: 24, scope: !22438)
!22443 = !DILocation(line: 391, column: 36, scope: !22438)
!22444 = !DILocation(line: 391, column: 17, scope: !22438)
!22445 = !DILocation(line: 393, column: 16, scope: !22338)
!22446 = !DILocation(line: 393, column: 24, scope: !22338)
!22447 = !DILocation(line: 394, column: 16, scope: !22338)
!22448 = !DILocation(line: 394, column: 27, scope: !22338)
!22449 = !DILocation(line: 396, column: 21, scope: !22450)
!22450 = distinct !DILexicalBlock(scope: !22338, file: !3255, line: 396, column: 13)
!22451 = !DILocation(line: 396, column: 13, scope: !22450)
!22452 = !DILocation(line: 396, column: 48, scope: !22450)
!22453 = !DILocation(line: 396, column: 13, scope: !22338)
!22454 = !DILocation(line: 397, column: 22, scope: !22455)
!22455 = distinct !DILexicalBlock(scope: !22450, file: !3255, line: 396, column: 53)
!22456 = !DILocation(line: 397, column: 21, scope: !22455)
!22457 = !DILocation(line: 397, column: 19, scope: !22455)
!22458 = !DILocation(line: 398, column: 17, scope: !22455)
!22459 = !DILocation(line: 401, column: 11, scope: !22338)
!22460 = !DILocation(line: 401, column: 9, scope: !22338)
!22461 = !DILabel(scope: !22338, name: "finish", file: !3255, line: 403)
!22462 = !DILocation(line: 403, column: 1, scope: !22338)
!22463 = !DILocation(line: 404, column: 13, scope: !22464)
!22464 = distinct !DILexicalBlock(scope: !22338, file: !3255, line: 404, column: 13)
!22465 = !DILocation(line: 404, column: 13, scope: !22338)
!22466 = !DILocation(line: 405, column: 17, scope: !22464)
!22467 = !DILocation(line: 407, column: 13, scope: !22468)
!22468 = distinct !DILexicalBlock(scope: !22338, file: !3255, line: 407, column: 13)
!22469 = !DILocation(line: 407, column: 16, scope: !22468)
!22470 = !DILocation(line: 407, column: 13, scope: !22338)
!22471 = !DILocation(line: 408, column: 23, scope: !22468)
!22472 = !DILocation(line: 408, column: 17, scope: !22468)
!22473 = !DILocation(line: 410, column: 16, scope: !22338)
!22474 = !DILocation(line: 410, column: 9, scope: !22338)
!22475 = !DILocation(line: 411, column: 1, scope: !22338)
!22476 = distinct !DISubprogram(name: "sd_notifyf", scope: !3255, file: !3255, line: 413, type: !22477, scopeLine: 413, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3335, retainedNodes: !286)
!22477 = !DISubroutineType(types: !22478)
!22478 = !{!34, !34, !205, null}
!22479 = !DILocalVariable(name: "unset_environment", arg: 1, scope: !22476, file: !3255, line: 413, type: !34)
!22480 = !DILocation(line: 413, column: 20, scope: !22476)
!22481 = !DILocalVariable(name: "format", arg: 2, scope: !22476, file: !3255, line: 413, type: !205)
!22482 = !DILocation(line: 413, column: 51, scope: !22476)
!22483 = !DILocalVariable(name: "ap", scope: !22476, file: !3255, line: 414, type: !22484)
!22484 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2964, line: 52, baseType: !22485)
!22485 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !6113, line: 14, baseType: !22486)
!22486 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !22487, baseType: !22488)
!22487 = !DIFile(filename: "common/sd-daemon.c", directory: "/home/raj/lwan")
!22488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22489, size: 192, elements: !1833)
!22489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", size: 192, elements: !22490)
!22490 = !{!22491, !22492, !22493, !22494}
!22491 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !22489, file: !22487, line: 414, baseType: !9, size: 32)
!22492 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !22489, file: !22487, line: 414, baseType: !9, size: 32, offset: 32)
!22493 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !22489, file: !22487, line: 414, baseType: !111, size: 64, offset: 64)
!22494 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !22489, file: !22487, line: 414, baseType: !111, size: 64, offset: 128)
!22495 = !DILocation(line: 414, column: 17, scope: !22476)
!22496 = !DILocalVariable(name: "p", scope: !22476, file: !3255, line: 415, type: !52)
!22497 = !DILocation(line: 415, column: 15, scope: !22476)
!22498 = !DILocalVariable(name: "r", scope: !22476, file: !3255, line: 416, type: !34)
!22499 = !DILocation(line: 416, column: 13, scope: !22476)
!22500 = !DILocation(line: 418, column: 9, scope: !22476)
!22501 = !DILocation(line: 419, column: 27, scope: !22476)
!22502 = !DILocation(line: 419, column: 35, scope: !22476)
!22503 = !DILocation(line: 419, column: 13, scope: !22476)
!22504 = !DILocation(line: 419, column: 11, scope: !22476)
!22505 = !DILocation(line: 420, column: 9, scope: !22476)
!22506 = !DILocation(line: 422, column: 13, scope: !22507)
!22507 = distinct !DILexicalBlock(scope: !22476, file: !3255, line: 422, column: 13)
!22508 = !DILocation(line: 422, column: 15, scope: !22507)
!22509 = !DILocation(line: 422, column: 19, scope: !22507)
!22510 = !DILocation(line: 422, column: 23, scope: !22507)
!22511 = !DILocation(line: 422, column: 13, scope: !22476)
!22512 = !DILocation(line: 423, column: 17, scope: !22507)
!22513 = !DILocation(line: 425, column: 23, scope: !22476)
!22514 = !DILocation(line: 425, column: 42, scope: !22476)
!22515 = !DILocation(line: 425, column: 13, scope: !22476)
!22516 = !DILocation(line: 425, column: 11, scope: !22476)
!22517 = !DILocation(line: 426, column: 14, scope: !22476)
!22518 = !DILocation(line: 426, column: 9, scope: !22476)
!22519 = !DILocation(line: 428, column: 16, scope: !22476)
!22520 = !DILocation(line: 428, column: 9, scope: !22476)
!22521 = !DILocation(line: 429, column: 1, scope: !22476)
!22522 = distinct !DISubprogram(name: "sd_booted", scope: !3255, file: !3255, line: 431, type: !10789, scopeLine: 431, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3335, retainedNodes: !286)
!22523 = !DILocalVariable(name: "st", scope: !22522, file: !3255, line: 432, type: !11350)
!22524 = !DILocation(line: 432, column: 21, scope: !22522)
!22525 = !DILocation(line: 438, column: 13, scope: !22526)
!22526 = distinct !DILexicalBlock(scope: !22522, file: !3255, line: 438, column: 13)
!22527 = !DILocation(line: 438, column: 48, scope: !22526)
!22528 = !DILocation(line: 438, column: 13, scope: !22522)
!22529 = !DILocation(line: 439, column: 17, scope: !22526)
!22530 = !DILocation(line: 441, column: 18, scope: !22522)
!22531 = !DILocation(line: 441, column: 17, scope: !22522)
!22532 = !DILocation(line: 441, column: 16, scope: !22522)
!22533 = !DILocation(line: 441, column: 9, scope: !22522)
!22534 = !DILocation(line: 442, column: 1, scope: !22522)
!22535 = distinct !DISubprogram(name: "sd_watchdog_enabled", scope: !3255, file: !3255, line: 444, type: !22536, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3335, retainedNodes: !286)
!22536 = !DISubroutineType(types: !22537)
!22537 = !{!34, !34, !3240}
!22538 = !DILocalVariable(name: "unset_environment", arg: 1, scope: !22535, file: !3255, line: 444, type: !34)
!22539 = !DILocation(line: 444, column: 29, scope: !22535)
!22540 = !DILocalVariable(name: "usec", arg: 2, scope: !22535, file: !3255, line: 444, type: !3240)
!22541 = !DILocation(line: 444, column: 58, scope: !22535)
!22542 = !DILocalVariable(name: "ll", scope: !22535, file: !3255, line: 445, type: !22543)
!22543 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!22544 = !DILocation(line: 445, column: 28, scope: !22535)
!22545 = !DILocalVariable(name: "l", scope: !22535, file: !3255, line: 446, type: !57)
!22546 = !DILocation(line: 446, column: 23, scope: !22535)
!22547 = !DILocalVariable(name: "e", scope: !22535, file: !3255, line: 447, type: !205)
!22548 = !DILocation(line: 447, column: 21, scope: !22535)
!22549 = !DILocalVariable(name: "p", scope: !22535, file: !3255, line: 448, type: !52)
!22550 = !DILocation(line: 448, column: 15, scope: !22535)
!22551 = !DILocalVariable(name: "r", scope: !22535, file: !3255, line: 449, type: !34)
!22552 = !DILocation(line: 449, column: 13, scope: !22535)
!22553 = !DILocation(line: 451, column: 13, scope: !22535)
!22554 = !DILocation(line: 451, column: 11, scope: !22535)
!22555 = !DILocation(line: 452, column: 14, scope: !22556)
!22556 = distinct !DILexicalBlock(scope: !22535, file: !3255, line: 452, column: 13)
!22557 = !DILocation(line: 452, column: 13, scope: !22535)
!22558 = !DILocation(line: 453, column: 19, scope: !22559)
!22559 = distinct !DILexicalBlock(scope: !22556, file: !3255, line: 452, column: 17)
!22560 = !DILocation(line: 454, column: 17, scope: !22559)
!22561 = !DILocation(line: 457, column: 9, scope: !22535)
!22562 = !DILocation(line: 457, column: 15, scope: !22535)
!22563 = !DILocation(line: 458, column: 21, scope: !22535)
!22564 = !DILocation(line: 458, column: 13, scope: !22535)
!22565 = !DILocation(line: 458, column: 11, scope: !22535)
!22566 = !DILocation(line: 459, column: 13, scope: !22567)
!22567 = distinct !DILexicalBlock(scope: !22535, file: !3255, line: 459, column: 13)
!22568 = !DILocation(line: 459, column: 19, scope: !22567)
!22569 = !DILocation(line: 459, column: 13, scope: !22535)
!22570 = !DILocation(line: 460, column: 22, scope: !22571)
!22571 = distinct !DILexicalBlock(scope: !22567, file: !3255, line: 459, column: 24)
!22572 = !DILocation(line: 460, column: 21, scope: !22571)
!22573 = !DILocation(line: 460, column: 19, scope: !22571)
!22574 = !DILocation(line: 461, column: 17, scope: !22571)
!22575 = !DILocation(line: 463, column: 14, scope: !22576)
!22576 = distinct !DILexicalBlock(scope: !22535, file: !3255, line: 463, column: 13)
!22577 = !DILocation(line: 463, column: 16, scope: !22576)
!22578 = !DILocation(line: 463, column: 19, scope: !22576)
!22579 = !DILocation(line: 463, column: 24, scope: !22576)
!22580 = !DILocation(line: 463, column: 21, scope: !22576)
!22581 = !DILocation(line: 463, column: 26, scope: !22576)
!22582 = !DILocation(line: 463, column: 30, scope: !22576)
!22583 = !DILocation(line: 463, column: 29, scope: !22576)
!22584 = !DILocation(line: 463, column: 32, scope: !22576)
!22585 = !DILocation(line: 463, column: 35, scope: !22576)
!22586 = !DILocation(line: 463, column: 37, scope: !22576)
!22587 = !DILocation(line: 463, column: 13, scope: !22535)
!22588 = !DILocation(line: 464, column: 19, scope: !22589)
!22589 = distinct !DILexicalBlock(scope: !22576, file: !3255, line: 463, column: 43)
!22590 = !DILocation(line: 465, column: 17, scope: !22589)
!22591 = !DILocation(line: 469, column: 13, scope: !22592)
!22592 = distinct !DILexicalBlock(scope: !22535, file: !3255, line: 469, column: 13)
!22593 = !DILocation(line: 469, column: 33, scope: !22592)
!22594 = !DILocation(line: 469, column: 25, scope: !22592)
!22595 = !DILocation(line: 469, column: 22, scope: !22592)
!22596 = !DILocation(line: 469, column: 13, scope: !22535)
!22597 = !DILocation(line: 470, column: 19, scope: !22598)
!22598 = distinct !DILexicalBlock(scope: !22592, file: !3255, line: 469, column: 36)
!22599 = !DILocation(line: 471, column: 17, scope: !22598)
!22600 = !DILocation(line: 474, column: 13, scope: !22535)
!22601 = !DILocation(line: 474, column: 11, scope: !22535)
!22602 = !DILocation(line: 475, column: 14, scope: !22603)
!22603 = distinct !DILexicalBlock(scope: !22535, file: !3255, line: 475, column: 13)
!22604 = !DILocation(line: 475, column: 13, scope: !22535)
!22605 = !DILocation(line: 476, column: 19, scope: !22606)
!22606 = distinct !DILexicalBlock(scope: !22603, file: !3255, line: 475, column: 17)
!22607 = !DILocation(line: 477, column: 17, scope: !22606)
!22608 = !DILocation(line: 480, column: 9, scope: !22535)
!22609 = !DILocation(line: 480, column: 15, scope: !22535)
!22610 = !DILocation(line: 481, column: 23, scope: !22535)
!22611 = !DILocation(line: 481, column: 14, scope: !22535)
!22612 = !DILocation(line: 481, column: 12, scope: !22535)
!22613 = !DILocation(line: 482, column: 13, scope: !22614)
!22614 = distinct !DILexicalBlock(scope: !22535, file: !3255, line: 482, column: 13)
!22615 = !DILocation(line: 482, column: 19, scope: !22614)
!22616 = !DILocation(line: 482, column: 13, scope: !22535)
!22617 = !DILocation(line: 483, column: 22, scope: !22618)
!22618 = distinct !DILexicalBlock(scope: !22614, file: !3255, line: 482, column: 24)
!22619 = !DILocation(line: 483, column: 21, scope: !22618)
!22620 = !DILocation(line: 483, column: 19, scope: !22618)
!22621 = !DILocation(line: 484, column: 17, scope: !22618)
!22622 = !DILocation(line: 486, column: 14, scope: !22623)
!22623 = distinct !DILexicalBlock(scope: !22535, file: !3255, line: 486, column: 13)
!22624 = !DILocation(line: 486, column: 16, scope: !22623)
!22625 = !DILocation(line: 486, column: 19, scope: !22623)
!22626 = !DILocation(line: 486, column: 24, scope: !22623)
!22627 = !DILocation(line: 486, column: 21, scope: !22623)
!22628 = !DILocation(line: 486, column: 26, scope: !22623)
!22629 = !DILocation(line: 486, column: 30, scope: !22623)
!22630 = !DILocation(line: 486, column: 29, scope: !22623)
!22631 = !DILocation(line: 486, column: 32, scope: !22623)
!22632 = !DILocation(line: 486, column: 35, scope: !22623)
!22633 = !DILocation(line: 486, column: 37, scope: !22623)
!22634 = !DILocation(line: 486, column: 13, scope: !22535)
!22635 = !DILocation(line: 487, column: 19, scope: !22636)
!22636 = distinct !DILexicalBlock(scope: !22623, file: !3255, line: 486, column: 43)
!22637 = !DILocation(line: 488, column: 17, scope: !22636)
!22638 = !DILocation(line: 491, column: 13, scope: !22639)
!22639 = distinct !DILexicalBlock(scope: !22535, file: !3255, line: 491, column: 13)
!22640 = !DILocation(line: 491, column: 13, scope: !22535)
!22641 = !DILocation(line: 492, column: 25, scope: !22639)
!22642 = !DILocation(line: 492, column: 18, scope: !22639)
!22643 = !DILocation(line: 492, column: 23, scope: !22639)
!22644 = !DILocation(line: 492, column: 17, scope: !22639)
!22645 = !DILocation(line: 494, column: 11, scope: !22535)
!22646 = !DILocation(line: 494, column: 9, scope: !22535)
!22647 = !DILabel(scope: !22535, name: "finish", file: !3255, line: 496)
!22648 = !DILocation(line: 496, column: 1, scope: !22535)
!22649 = !DILocation(line: 497, column: 13, scope: !22650)
!22650 = distinct !DILexicalBlock(scope: !22535, file: !3255, line: 497, column: 13)
!22651 = !DILocation(line: 497, column: 13, scope: !22535)
!22652 = !DILocation(line: 498, column: 17, scope: !22653)
!22653 = distinct !DILexicalBlock(scope: !22650, file: !3255, line: 497, column: 32)
!22654 = !DILocation(line: 499, column: 17, scope: !22653)
!22655 = !DILocation(line: 500, column: 9, scope: !22653)
!22656 = !DILocation(line: 502, column: 16, scope: !22535)
!22657 = !DILocation(line: 502, column: 9, scope: !22535)
!22658 = distinct !DISubprogram(name: "strbuf_new", scope: !3350, file: !3350, line: 119, type: !22659, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3344, retainedNodes: !286)
!22659 = !DISubroutineType(types: !22660)
!22660 = !{!12352}
!22661 = !DILocation(line: 121, column: 12, scope: !22658)
!22662 = !DILocation(line: 121, column: 5, scope: !22658)
!22663 = distinct !DISubprogram(name: "strbuf_set_static", scope: !3350, file: !3350, line: 164, type: !15414, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3344, retainedNodes: !286)
!22664 = !DILocalVariable(name: "s1", arg: 1, scope: !22663, file: !3350, line: 164, type: !12352)
!22665 = !DILocation(line: 164, column: 29, scope: !22663)
!22666 = !DILocalVariable(name: "s2", arg: 2, scope: !22663, file: !3350, line: 164, type: !205)
!22667 = !DILocation(line: 164, column: 45, scope: !22663)
!22668 = !DILocalVariable(name: "sz", arg: 3, scope: !22663, file: !3350, line: 164, type: !55)
!22669 = !DILocation(line: 164, column: 56, scope: !22663)
!22670 = !DILocation(line: 166, column: 10, scope: !22671)
!22671 = distinct !DILexicalBlock(scope: !22663, file: !3350, line: 166, column: 9)
!22672 = !DILocation(line: 166, column: 9, scope: !22663)
!22673 = !DILocation(line: 167, column: 21, scope: !22671)
!22674 = !DILocation(line: 167, column: 14, scope: !22671)
!22675 = !DILocation(line: 167, column: 12, scope: !22671)
!22676 = !DILocation(line: 167, column: 9, scope: !22671)
!22677 = !DILocation(line: 169, column: 11, scope: !22678)
!22678 = distinct !DILexicalBlock(scope: !22663, file: !3350, line: 169, column: 9)
!22679 = !DILocation(line: 169, column: 15, scope: !22678)
!22680 = !DILocation(line: 169, column: 21, scope: !22678)
!22681 = !DILocation(line: 169, column: 9, scope: !22663)
!22682 = !DILocation(line: 170, column: 14, scope: !22678)
!22683 = !DILocation(line: 170, column: 18, scope: !22678)
!22684 = !DILocation(line: 170, column: 24, scope: !22678)
!22685 = !DILocation(line: 170, column: 9, scope: !22678)
!22686 = !DILocation(line: 171, column: 31, scope: !22663)
!22687 = !DILocation(line: 171, column: 5, scope: !22663)
!22688 = !DILocation(line: 171, column: 9, scope: !22663)
!22689 = !DILocation(line: 171, column: 29, scope: !22663)
!22690 = !DILocation(line: 172, column: 42, scope: !22663)
!22691 = !DILocation(line: 172, column: 25, scope: !22663)
!22692 = !DILocation(line: 172, column: 29, scope: !22663)
!22693 = !DILocation(line: 172, column: 33, scope: !22663)
!22694 = !DILocation(line: 172, column: 40, scope: !22663)
!22695 = !DILocation(line: 172, column: 5, scope: !22663)
!22696 = !DILocation(line: 172, column: 9, scope: !22663)
!22697 = !DILocation(line: 172, column: 13, scope: !22663)
!22698 = !DILocation(line: 172, column: 23, scope: !22663)
!22699 = !DILocation(line: 173, column: 5, scope: !22663)
!22700 = !DILocation(line: 173, column: 9, scope: !22663)
!22701 = !DILocation(line: 173, column: 15, scope: !22663)
!22702 = !DILocation(line: 175, column: 5, scope: !22663)
!22703 = distinct !DISubprogram(name: "strbuf_cmp", scope: !3350, file: !3350, line: 195, type: !22704, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3344, retainedNodes: !286)
!22704 = !DISubroutineType(types: !22705)
!22705 = !{!34, !12352, !12352}
!22706 = !DILocalVariable(name: "s1", arg: 1, scope: !22703, file: !3350, line: 195, type: !12352)
!22707 = !DILocation(line: 195, column: 22, scope: !22703)
!22708 = !DILocalVariable(name: "s2", arg: 2, scope: !22703, file: !3350, line: 195, type: !12352)
!22709 = !DILocation(line: 195, column: 36, scope: !22703)
!22710 = !DILocation(line: 197, column: 9, scope: !22711)
!22711 = distinct !DILexicalBlock(scope: !22703, file: !3350, line: 197, column: 9)
!22712 = !DILocation(line: 197, column: 15, scope: !22711)
!22713 = !DILocation(line: 197, column: 12, scope: !22711)
!22714 = !DILocation(line: 197, column: 9, scope: !22703)
!22715 = !DILocation(line: 198, column: 9, scope: !22711)
!22716 = !DILocalVariable(name: "result", scope: !22703, file: !3350, line: 199, type: !34)
!22717 = !DILocation(line: 199, column: 9, scope: !22703)
!22718 = !DILocation(line: 199, column: 25, scope: !22703)
!22719 = !DILocation(line: 199, column: 29, scope: !22703)
!22720 = !DILocation(line: 199, column: 35, scope: !22703)
!22721 = !DILocation(line: 199, column: 43, scope: !22703)
!22722 = !DILocation(line: 199, column: 47, scope: !22703)
!22723 = !DILocation(line: 199, column: 53, scope: !22703)
!22724 = !DILocation(line: 199, column: 61, scope: !22703)
!22725 = !DILocation(line: 199, column: 65, scope: !22703)
!22726 = !DILocation(line: 199, column: 69, scope: !22703)
!22727 = !DILocation(line: 199, column: 78, scope: !22703)
!22728 = !DILocation(line: 199, column: 82, scope: !22703)
!22729 = !DILocation(line: 199, column: 86, scope: !22703)
!22730 = !DILocation(line: 199, column: 76, scope: !22703)
!22731 = !DILocation(line: 199, column: 95, scope: !22703)
!22732 = !DILocation(line: 199, column: 99, scope: !22703)
!22733 = !DILocation(line: 199, column: 103, scope: !22703)
!22734 = !DILocation(line: 199, column: 112, scope: !22703)
!22735 = !DILocation(line: 199, column: 116, scope: !22703)
!22736 = !DILocation(line: 199, column: 120, scope: !22703)
!22737 = !DILocation(line: 199, column: 18, scope: !22703)
!22738 = !DILocation(line: 200, column: 10, scope: !22739)
!22739 = distinct !DILexicalBlock(scope: !22703, file: !3350, line: 200, column: 9)
!22740 = !DILocation(line: 200, column: 9, scope: !22703)
!22741 = !DILocation(line: 201, column: 22, scope: !22739)
!22742 = !DILocation(line: 201, column: 26, scope: !22739)
!22743 = !DILocation(line: 201, column: 30, scope: !22739)
!22744 = !DILocation(line: 201, column: 39, scope: !22739)
!22745 = !DILocation(line: 201, column: 43, scope: !22739)
!22746 = !DILocation(line: 201, column: 47, scope: !22739)
!22747 = !DILocation(line: 201, column: 37, scope: !22739)
!22748 = !DILocation(line: 201, column: 16, scope: !22739)
!22749 = !DILocation(line: 201, column: 9, scope: !22739)
!22750 = !DILocation(line: 202, column: 12, scope: !22703)
!22751 = !DILocation(line: 202, column: 5, scope: !22703)
!22752 = !DILocation(line: 203, column: 1, scope: !22703)
!22753 = distinct !DISubprogram(name: "strbuf_printf", scope: !3350, file: !3350, line: 221, type: !21709, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3344, retainedNodes: !286)
!22754 = !DILocalVariable(name: "s", arg: 1, scope: !22753, file: !3350, line: 221, type: !12352)
!22755 = !DILocation(line: 221, column: 25, scope: !22753)
!22756 = !DILocalVariable(name: "fmt", arg: 2, scope: !22753, file: !3350, line: 221, type: !205)
!22757 = !DILocation(line: 221, column: 40, scope: !22753)
!22758 = !DILocalVariable(name: "could_printf", scope: !22753, file: !3350, line: 223, type: !137)
!22759 = !DILocation(line: 223, column: 10, scope: !22753)
!22760 = !DILocalVariable(name: "values", scope: !22753, file: !3350, line: 224, type: !21718)
!22761 = !DILocation(line: 224, column: 13, scope: !22753)
!22762 = !DILocation(line: 226, column: 5, scope: !22753)
!22763 = !DILocation(line: 227, column: 36, scope: !22753)
!22764 = !DILocation(line: 227, column: 51, scope: !22753)
!22765 = !DILocation(line: 227, column: 56, scope: !22753)
!22766 = !DILocation(line: 206, column: 27, scope: !21735, inlinedAt: !22767)
!22767 = distinct !DILocation(line: 227, column: 20, scope: !22753)
!22768 = !DILocation(line: 206, column: 38, scope: !21735, inlinedAt: !22767)
!22769 = !DILocation(line: 206, column: 95, scope: !21735, inlinedAt: !22767)
!22770 = !DILocation(line: 206, column: 108, scope: !21735, inlinedAt: !22767)
!22771 = !DILocation(line: 208, column: 11, scope: !21735, inlinedAt: !22767)
!22772 = !DILocation(line: 209, column: 9, scope: !21735, inlinedAt: !22767)
!22773 = !DILocation(line: 211, column: 9, scope: !21753, inlinedAt: !22767)
!22774 = !DILocation(line: 211, column: 9, scope: !21735, inlinedAt: !22767)
!22775 = !DILocation(line: 212, column: 9, scope: !21753, inlinedAt: !22767)
!22776 = !DILocation(line: 214, column: 10, scope: !21735, inlinedAt: !22767)
!22777 = !DILocation(line: 214, column: 20, scope: !21735, inlinedAt: !22767)
!22778 = !DILocation(line: 214, column: 29, scope: !21735, inlinedAt: !22767)
!22779 = !DILocation(line: 214, column: 33, scope: !21735, inlinedAt: !22767)
!22780 = !DILocation(line: 214, column: 45, scope: !21735, inlinedAt: !22767)
!22781 = !DILocation(line: 214, column: 37, scope: !21735, inlinedAt: !22767)
!22782 = !DILocation(line: 215, column: 10, scope: !21735, inlinedAt: !22767)
!22783 = !DILocation(line: 215, column: 5, scope: !21735, inlinedAt: !22767)
!22784 = !DILocation(line: 217, column: 12, scope: !21735, inlinedAt: !22767)
!22785 = !DILocation(line: 217, column: 5, scope: !21735, inlinedAt: !22767)
!22786 = !DILocation(line: 218, column: 1, scope: !21735, inlinedAt: !22767)
!22787 = !DILocation(line: 227, column: 18, scope: !22753)
!22788 = !DILocation(line: 228, column: 5, scope: !22753)
!22789 = !DILocation(line: 230, column: 12, scope: !22753)
!22790 = !DILocation(line: 230, column: 5, scope: !22753)
!22791 = distinct !DISubprogram(name: "strbuf_shrink_to", scope: !3350, file: !3350, line: 247, type: !15066, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3344, retainedNodes: !286)
!22792 = !DILocalVariable(name: "s", arg: 1, scope: !22791, file: !3350, line: 247, type: !12352)
!22793 = !DILocation(line: 247, column: 28, scope: !22791)
!22794 = !DILocalVariable(name: "new_size", arg: 2, scope: !22791, file: !3350, line: 247, type: !55)
!22795 = !DILocation(line: 247, column: 38, scope: !22791)
!22796 = !DILocation(line: 249, column: 9, scope: !22797)
!22797 = distinct !DILexicalBlock(scope: !22791, file: !3350, line: 249, column: 9)
!22798 = !DILocation(line: 249, column: 12, scope: !22797)
!22799 = !DILocation(line: 249, column: 16, scope: !22797)
!22800 = !DILocation(line: 249, column: 29, scope: !22797)
!22801 = !DILocation(line: 249, column: 26, scope: !22797)
!22802 = !DILocation(line: 249, column: 9, scope: !22791)
!22803 = !DILocation(line: 250, column: 9, scope: !22797)
!22804 = !DILocation(line: 252, column: 9, scope: !22805)
!22805 = distinct !DILexicalBlock(scope: !22791, file: !3350, line: 252, column: 9)
!22806 = !DILocation(line: 252, column: 12, scope: !22805)
!22807 = !DILocation(line: 252, column: 18, scope: !22805)
!22808 = !DILocation(line: 252, column: 9, scope: !22791)
!22809 = !DILocation(line: 253, column: 9, scope: !22805)
!22810 = !DILocalVariable(name: "next_power_of_two", scope: !22791, file: !3350, line: 255, type: !55)
!22811 = !DILocation(line: 255, column: 12, scope: !22791)
!22812 = !DILocation(line: 255, column: 55, scope: !22791)
!22813 = !DILocation(line: 255, column: 32, scope: !22791)
!22814 = !DILocalVariable(name: "buffer", scope: !22791, file: !3350, line: 256, type: !52)
!22815 = !DILocation(line: 256, column: 11, scope: !22791)
!22816 = !DILocation(line: 256, column: 28, scope: !22791)
!22817 = !DILocation(line: 256, column: 31, scope: !22791)
!22818 = !DILocation(line: 256, column: 37, scope: !22791)
!22819 = !DILocation(line: 256, column: 45, scope: !22791)
!22820 = !DILocation(line: 256, column: 63, scope: !22791)
!22821 = !DILocation(line: 256, column: 20, scope: !22791)
!22822 = !DILocation(line: 257, column: 9, scope: !22823)
!22823 = distinct !DILexicalBlock(scope: !22791, file: !3350, line: 257, column: 9)
!22824 = !DILocation(line: 257, column: 9, scope: !22791)
!22825 = !DILocation(line: 258, column: 9, scope: !22823)
!22826 = !DILocation(line: 260, column: 23, scope: !22791)
!22827 = !DILocation(line: 260, column: 5, scope: !22791)
!22828 = !DILocation(line: 260, column: 8, scope: !22791)
!22829 = !DILocation(line: 260, column: 21, scope: !22791)
!22830 = !DILocation(line: 261, column: 24, scope: !22791)
!22831 = !DILocation(line: 261, column: 5, scope: !22791)
!22832 = !DILocation(line: 261, column: 8, scope: !22791)
!22833 = !DILocation(line: 261, column: 12, scope: !22791)
!22834 = !DILocation(line: 261, column: 22, scope: !22791)
!22835 = !DILocation(line: 262, column: 9, scope: !22836)
!22836 = distinct !DILexicalBlock(scope: !22791, file: !3350, line: 262, column: 9)
!22837 = !DILocation(line: 262, column: 12, scope: !22836)
!22838 = !DILocation(line: 262, column: 16, scope: !22836)
!22839 = !DILocation(line: 262, column: 25, scope: !22836)
!22840 = !DILocation(line: 262, column: 23, scope: !22836)
!22841 = !DILocation(line: 262, column: 9, scope: !22791)
!22842 = !DILocation(line: 263, column: 25, scope: !22843)
!22843 = distinct !DILexicalBlock(scope: !22836, file: !3350, line: 262, column: 44)
!22844 = !DILocation(line: 263, column: 43, scope: !22843)
!22845 = !DILocation(line: 263, column: 9, scope: !22843)
!22846 = !DILocation(line: 263, column: 12, scope: !22843)
!22847 = !DILocation(line: 263, column: 16, scope: !22843)
!22848 = !DILocation(line: 263, column: 23, scope: !22843)
!22849 = !DILocation(line: 264, column: 9, scope: !22843)
!22850 = !DILocation(line: 264, column: 12, scope: !22843)
!22851 = !DILocation(line: 264, column: 18, scope: !22843)
!22852 = !DILocation(line: 264, column: 25, scope: !22843)
!22853 = !DILocation(line: 264, column: 28, scope: !22843)
!22854 = !DILocation(line: 264, column: 32, scope: !22843)
!22855 = !DILocation(line: 264, column: 39, scope: !22843)
!22856 = !DILocation(line: 264, column: 44, scope: !22843)
!22857 = !DILocation(line: 265, column: 5, scope: !22843)
!22858 = !DILocation(line: 267, column: 5, scope: !22791)
!22859 = !DILocation(line: 268, column: 1, scope: !22791)
!22860 = distinct !DISubprogram(name: "strbuf_shrink_to_default", scope: !3350, file: !3350, line: 271, type: !12391, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3344, retainedNodes: !286)
!22861 = !DILocalVariable(name: "s", arg: 1, scope: !22860, file: !3350, line: 271, type: !12352)
!22862 = !DILocation(line: 271, column: 36, scope: !22860)
!22863 = !DILocation(line: 273, column: 29, scope: !22860)
!22864 = !DILocation(line: 273, column: 12, scope: !22860)
!22865 = !DILocation(line: 273, column: 5, scope: !22860)
!22866 = distinct !DISubprogram(name: "strbuf_reset", scope: !3350, file: !3350, line: 277, type: !12391, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3344, retainedNodes: !286)
!22867 = !DILocalVariable(name: "s", arg: 1, scope: !22866, file: !3350, line: 277, type: !12352)
!22868 = !DILocation(line: 277, column: 24, scope: !22866)
!22869 = !DILocation(line: 279, column: 30, scope: !22866)
!22870 = !DILocation(line: 271, column: 36, scope: !22860, inlinedAt: !22871)
!22871 = distinct !DILocation(line: 279, column: 5, scope: !22866)
!22872 = !DILocation(line: 273, column: 29, scope: !22860, inlinedAt: !22871)
!22873 = !DILocation(line: 273, column: 12, scope: !22860, inlinedAt: !22871)
!22874 = !DILocation(line: 280, column: 5, scope: !22866)
!22875 = !DILocation(line: 280, column: 8, scope: !22866)
!22876 = !DILocation(line: 280, column: 12, scope: !22866)
!22877 = !DILocation(line: 280, column: 19, scope: !22866)
!22878 = !DILocation(line: 281, column: 5, scope: !22866)
