; ModuleID = 'llvm-link'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".text"
module asm "\09.p2align 4"
module asm "\09.globl coro_swapcontext"
module asm "\09coro_swapcontext:"
module asm "\09mov    %rbx,0(%rdi)"
module asm "\09mov    %rbp,8(%rdi)"
module asm "\09mov    %r12,16(%rdi)"
module asm "\09mov    %r13,24(%rdi)"
module asm "\09mov    %r14,32(%rdi)"
module asm "\09mov    %r15,40(%rdi)"
module asm "\09mov    %rdi,48(%rdi)"
module asm "\09mov    %rsi,56(%rdi)"
module asm "\09mov    (%rsp),%rcx"
module asm "\09mov    %rcx,64(%rdi)"
module asm "\09lea    0x8(%rsp),%rcx"
module asm "\09mov    %rcx,72(%rdi)"
module asm "\09mov    72(%rsi),%rsp"
module asm "\09mov    0(%rsi),%rbx"
module asm "\09mov    8(%rsi),%rbp"
module asm "\09mov    16(%rsi),%r12"
module asm "\09mov    24(%rsi),%r13"
module asm "\09mov    32(%rsi),%r14"
module asm "\09mov    40(%rsi),%r15"
module asm "\09mov    48(%rsi),%rdi"
module asm "\09mov    64(%rsi),%rcx"
module asm "\09mov    56(%rsi),%rsi"
module asm "\09jmp    *%rcx"
module asm "\09"

%struct.list_head = type { %struct.list_node }
%struct.list_node = type { ptr, ptr }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.list_node }
%struct.timespec = type { i64, i64 }
%struct.lwan_config_t_ = type { ptr, i16, i8, i8, i32, i16 }
%struct.lwan_module_t_ = type { ptr, ptr, ptr, ptr, ptr, i32 }
%struct.lwan_var_descriptor_t_ = type { ptr, i64, ptr, ptr, ptr, ptr }
%struct.cache_funcs_t_ = type { ptr, ptr, ptr, i64 }
%struct.epoll_event = type <{ i32, %union.__SOCKADDR_ARG }>
%union.__SOCKADDR_ARG = type { ptr }
%struct.hash = type { i32, ptr, ptr, ptr, ptr, [0 x %struct.hash_bucket] }
%struct.hash_bucket = type { ptr, i32, i32 }
%struct.hash_entry = type { ptr, ptr, i32 }
%struct.cache_t = type { %struct.anon, %struct.anon.0, %struct.anon.1, %struct.anon.2, i32, %struct.anon.3 }
%struct.anon = type { ptr, %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%struct.anon.0 = type { %struct.list_head, %union.pthread_rwlock_t }
%struct.anon.1 = type { ptr, ptr, ptr }
%struct.anon.2 = type { i64, i32 }
%struct.anon.3 = type { i32, i32, i32 }
%struct.cache_entry_t = type { %struct.list_node, ptr, i32, i32, i64 }
%struct.__va_list_tag = type { i32, i32, ptr, ptr }
%struct.config_t_ = type { ptr, i32, ptr }
%struct.config_line_t_ = type { %struct.list_head, i32, [1024 x i8] }
%struct.coro_t_ = type { ptr, [10 x i64], i32, ptr, ptr, i8 }
%struct.coro_defer_t_ = type { ptr, ptr, ptr, ptr }
%struct.coro_switcher_t_ = type { [10 x i64], [10 x i64] }
%struct.realm_password_file_t = type { %struct.cache_entry_t, ptr }
%struct.lwan_value_t_ = type { ptr, i64 }
%struct.lwan_request_t_ = type { i32, i32, %struct.lwan_value_t_, %struct.lwan_value_t_, ptr, %struct.lwan_value_t_, %struct.lwan_value_t_, %struct.anon.2.12, %struct.lwan_response_t_ }
%struct.anon.2.12 = type { i64, %struct.timespec }
%struct.lwan_response_t_ = type { ptr, ptr, i64, ptr, %struct.anon.1 }
%struct.lwan_connection_t_ = type { i32, i32, ptr, ptr, i32, i32 }
%struct.sched_param = type { i32 }
%struct.job_t = type { %struct.list_node, ptr, ptr }
%struct.lwan_t_ = type { %struct.list_node, ptr, %struct.anon.0.24, ptr, %struct.lwan_config_t_, i32 }
%struct.anon.0.24 = type { ptr, i32, i16 }
%struct.lwan_url_map_t_ = type { ptr, ptr, ptr, i64, i32, ptr, ptr, %struct.list_node }
%struct.lwan_thread_t_ = type { ptr, %struct.anon.27, i32, [2 x i32], i64 }
%struct.anon.27 = type { [30 x i8], [30 x i8], i64 }
%struct.request_parser_helper = type { ptr, ptr, %struct.lwan_value_t_, %struct.lwan_value_t_, %struct.lwan_value_t_, %struct.lwan_value_t_, %struct.lwan_value_t_, %struct.lwan_value_t_, %struct.lwan_value_t_, %struct.lwan_value_t_, %struct.lwan_value_t_, i8 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, ptr }
%struct.sockaddr_storage = type { i16, [118 x i8], i64 }
%struct.sockaddr_in = type { i16, i16, %struct.sched_param, [8 x i8] }
%struct.sockaddr_in6 = type { i16, i16, i32, %struct.in6_addr, i32 }
%struct.in6_addr = type { %union.anon.7 }
%union.anon.7 = type { [4 x i32] }
%struct.strbuf_t_ = type { %union.__SOCKADDR_ARG, %struct.timespec, i32 }
%struct.lwan_serve_files_settings_t = type { ptr, ptr, i8 }
%struct.serve_files_priv_t_ = type { ptr, %struct.anon.6, i32, ptr, ptr, i8 }
%struct.anon.6 = type { ptr, i64, i32 }
%struct.file_cache_entry_t_ = type { %struct.cache_entry_t, %struct.anon.7, ptr, ptr }
%struct.anon.7 = type { [31 x i8], i64 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.file_list_t = type { ptr, ptr, %struct.anon.8 }
%struct.anon.8 = type { ptr, ptr, ptr, ptr, ptr, i32, ptr }
%struct.sendfile_cache_data_t_ = type { %struct.lwan_value_t_, %struct.lwan_value_t_ }
%struct.linger = type { i32, i32 }
%struct.addrinfo = type { i32, i32, i32, i32, i32, ptr, ptr, ptr }
%struct.chunk = type { i32, ptr, i32 }
%struct.parser = type { ptr, ptr, ptr, %struct.lexer, i32, %struct.list_head, %struct.anon.2.79 }
%struct.lexer = type { ptr, ptr, ptr, ptr, %struct.anon.0.80 }
%struct.anon.0.80 = type { [4 x %struct.item], i64, i64, i64 }
%struct.item = type { i32, %struct.lwan_value_t_ }
%struct.anon.2.79 = type { ptr, i64, i64 }
%struct.stacked_item = type { %struct.list_node, %struct.item }
%union.pthread_attr_t = type { i64, [48 x i8] }
%struct.death_queue_t = type { ptr, %struct.lwan_connection_t_, i32, i16 }
%struct.lwan_trie_node_t_ = type { [8 x ptr], ptr, i32 }
%union.sockaddr_union = type { %struct.sockaddr_storage }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.sockaddr_un = type { i16, [108 x i8] }
%struct.msghdr = type { ptr, i32, ptr, i64, ptr, i64, i32 }

@base64_table = internal constant [65 x i8] c"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\00", align 16, !dbg !0
@base64_decode_table = internal constant [256 x i8] calign 16, !dbg !11
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 65535, ptr @initialize_odd_constant, ptr null }]
@odd_constant = internal global i32 668265261, align 4, !dbg !21
@.str = private unnamed_addr constant [13 x i8] c"/dev/urandom\00", align 1, !dbg !44
@.str.1 = private unnamed_addr constant [12 x i8] c"/dev/random\00", align 1, !dbg !50
@uint_to_string.digits = internal constant [201 x i8] c"00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\00", align 16, !dbg !55
@stderr = external global ptr, align 8
@.str.2 = private unnamed_addr constant [40 x i8] c"%s: prev corrupt in node %p (%u) of %p\0A\00", align 1, !dbg !79
@.str.3 = private unnamed_addr constant [16 x i8] c"create_entry_cb\00", align 1, !dbg !85
@.str.1.4 = private unnamed_addr constant [35 x i8] c"/home/raj/lwan/common/lwan-cache.c\00", align 1, !dbg !91
@__PRETTY_FUNCTION__.cache_create = private unnamed_addr constant [88 x i8] c"struct cache_t *cache_create(CreateEntryCallback, DestroyEntryCallback, void *, time_t)\00", align 1, !dbg !96
@.str.2.5 = private unnamed_addr constant [17 x i8] c"destroy_entry_cb\00", align 1, !dbg !101
@.str.3.6 = private unnamed_addr constant [17 x i8] c"time_to_live > 0\00", align 1, !dbg !106
@.str.4 = private unnamed_addr constant [6 x i8] c"cache\00", align 1, !dbg !108
@__PRETTY_FUNCTION__.cache_destroy = private unnamed_addr constant [37 x i8] c"void cache_destroy(struct cache_t *)\00", align 1, !dbg !113
@__FUNCTION__.cache_destroy = private unnamed_addr constant [14 x i8] c"cache_destroy\00", align 1, !dbg !118
@.str.5 = private unnamed_addr constant [46 x i8] c"Cache stats: %d hits, %d misses, %d evictions\00", align 1, !dbg !123
@__PRETTY_FUNCTION__.cache_get_and_ref_entry = private unnamed_addr constant [85 x i8] c"struct cache_entry_t *cache_get_and_ref_entry(struct cache_t *, const char *, int *)\00", align 1, !dbg !128
@.str.6 = private unnamed_addr constant [6 x i8] c"error\00", align 1, !dbg !133
@.str.7 = private unnamed_addr constant [4 x i8] c"key\00", align 1, !dbg !135
@.str.8 = private unnamed_addr constant [6 x i8] c"entry\00", align 1, !dbg !140
@__PRETTY_FUNCTION__.cache_entry_unref = private unnamed_addr constant [65 x i8] c"void cache_entry_unref(struct cache_t *, struct cache_entry_t *)\00", align 1, !dbg !142
@__FUNCTION__.clock_monotonic_gettime = private unnamed_addr constant [24 x i8] c"clock_monotonic_gettime\00", align 1, !dbg !145
@.str.9 = private unnamed_addr constant [14 x i8] c"clock_gettime\00", align 1, !dbg !150
@__FUNCTION__.cache_pruner_job = private unnamed_addr constant [17 x i8] c"cache_pruner_job\00", align 1, !dbg !153
@.str.10 = private unnamed_addr constant [22 x i8] c"pthread_rwlock_unlock\00", align 1, !dbg !156
@.str.11 = private unnamed_addr constant [22 x i8] c"pthread_rwlock_wrlock\00", align 1, !dbg !161
@.str.12 = private unnamed_addr constant [5 x i8] c"%u%c\00", align 1, !dbg !163
@.str.1.13 = private unnamed_addr constant [36 x i8] c"/home/raj/lwan/common/lwan-config.c\00", align 1, !dbg !169
@__FUNCTION__.parse_time_period = private unnamed_addr constant [18 x i8] c"parse_time_period\00", align 1, !dbg !174
@.str.2.14 = private unnamed_addr constant [32 x i8] c"Ignoring unknown multiplier: %c\00", align 1, !dbg !179
@.str.3.15 = private unnamed_addr constant [5 x i8] c"true\00", align 1, !dbg !184
@.str.4.16 = private unnamed_addr constant [2 x i8] c"1\00", align 1, !dbg !186
@.str.5.17 = private unnamed_addr constant [3 x i8] c"on\00", align 1, !dbg !191
@.str.6.18 = private unnamed_addr constant [4 x i8] c"yes\00", align 1, !dbg !196
@.str.7.19 = private unnamed_addr constant [6 x i8] c"false\00", align 1, !dbg !198
@.str.8.20 = private unnamed_addr constant [2 x i8] c"0\00", align 1, !dbg !200
@.str.9.21 = private unnamed_addr constant [4 x i8] c"off\00", align 1, !dbg !202
@.str.10.22 = private unnamed_addr constant [3 x i8] c"no\00", align 1, !dbg !204
@.str.11.23 = private unnamed_addr constant [26 x i8] c"Malformed section opening\00", align 1, !dbg !206
@.str.12.24 = private unnamed_addr constant [25 x i8] c"Malformed key=value line\00", align 1, !dbg !211
@.str.13 = private unnamed_addr constant [31 x i8] c"Expecting section or key=value\00", align 1, !dbg !216
@.str.14 = private unnamed_addr constant [3 x i8] c"re\00", align 1, !dbg !221
@.str.25 = private unnamed_addr constant [5 x i8] c"coro\00", align 1, !dbg !223
@.str.1.26 = private unnamed_addr constant [34 x i8] c"/home/raj/lwan/common/lwan-coro.c\00", align 1, !dbg !226
@__PRETTY_FUNCTION__.coro_resume = private unnamed_addr constant [26 x i8] c"int coro_resume(coro_t *)\00", align 1, !dbg !231
@.str.2.27 = private unnamed_addr constant [21 x i8] c"coro->ended == false\00", align 1, !dbg !234
@__PRETTY_FUNCTION__.coro_resume_value = private unnamed_addr constant [37 x i8] c"int coro_resume_value(coro_t *, int)\00", align 1, !dbg !239
@__PRETTY_FUNCTION__.coro_yield = private unnamed_addr constant [30 x i8] c"int coro_yield(coro_t *, int)\00", align 1, !dbg !241
@__PRETTY_FUNCTION__.coro_free = private unnamed_addr constant [25 x i8] c"void coro_free(coro_t *)\00", align 1, !dbg !246
@.str.3.30 = private unnamed_addr constant [5 x i8] c"func\00", align 1, !dbg !249
@__PRETTY_FUNCTION__.coro_defer_any = private unnamed_addr constant [58 x i8] c"void coro_defer_any(coro_t *, void (*)(), void *, void *)\00", align 1, !dbg !251
@realm_password_cache = internal global ptr null, align 8, !dbg !256
@lwan_http_authorize.authenticate_tmpl = internal constant [17 x i8] c"Basic realm=\22%s\22\00", align 16, !dbg !336
@.str.37 = private unnamed_addr constant [7 x i8] c"Basic \00", align 1, !dbg !503
@.str.1.38 = private unnamed_addr constant [17 x i8] c"WWW-Authenticate\00", align 1, !dbg !508
@.str.2.33 = private unnamed_addr constant [44 x i8] c"/home/raj/lwan/common/lwan-http-authorize.c\00", align 1, !dbg !510
@__FUNCTION__.create_realm_file = private unnamed_addr constant [18 x i8] c"create_realm_file\00", align 1, !dbg !515
@.str.3.34 = private unnamed_addr constant [46 x i8] c"Username entry already exists, ignoring: \22%s\22\00", align 1, !dbg !517
@.str.4.35 = private unnamed_addr constant [29 x i8] c"Expected username = password\00", align 1, !dbg !519
@.str.5.36 = private unnamed_addr constant [41 x i8] c"Error on password file \22%s\22, line %d: %s\00", align 1, !dbg !524
@.str.39 = private unnamed_addr constant [41 x i8] c"/home/raj/lwan/common/lwan-io-wrappers.c\00", align 1, !dbg !531
@__FUNCTION__.lwan_sendfile = private unnamed_addr constant [14 x i8] c"lwan_sendfile\00", align 1, !dbg !534
@.str.1.40 = private unnamed_addr constant [14 x i8] c"posix_fadvise\00", align 1, !dbg !536
@__FUNCTION__.sendfile_read_write = private unnamed_addr constant [20 x i8] c"sendfile_read_write\00", align 1, !dbg !538
@.str.2.41 = private unnamed_addr constant [6 x i8] c"lseek\00", align 1, !dbg !543
@running = internal global i8 0, align 1, !dbg !545
@.str.42 = private unnamed_addr constant [9 x i8] c"!running\00", align 1, !dbg !556
@.str.1.43 = private unnamed_addr constant [33 x i8] c"/home/raj/lwan/common/lwan-job.c\00", align 1, !dbg !562
@__PRETTY_FUNCTION__.lwan_job_thread_init = private unnamed_addr constant [32 x i8] c"void lwan_job_thread_init(void)\00", align 1, !dbg !567
@__FUNCTION__.lwan_job_thread_init = private unnamed_addr constant [21 x i8] c"lwan_job_thread_init\00", align 1, !dbg !570
@.str.2.44 = private unnamed_addr constant [37 x i8] c"Initializing low priority job thread\00", align 1, !dbg !573
@jobs = internal global %struct.list_head zeroinitializer, align 8, !dbg !608
@self = internal global i64 0, align 8, !dbg !606
@.str.3.46 = private unnamed_addr constant [15 x i8] c"pthread_create\00", align 1, !dbg !576
@.str.4.47 = private unnamed_addr constant [22 x i8] c"pthread_setschedparam\00", align 1, !dbg !581
@__FUNCTION__.lwan_job_thread_shutdown = private unnamed_addr constant [25 x i8] c"lwan_job_thread_shutdown\00", align 1, !dbg !583
@.str.5.50 = private unnamed_addr constant [25 x i8] c"Shutting down job thread\00", align 1, !dbg !585
@queue_mutex = internal global %union.pthread_mutex_t zeroinitializer, align 8, !dbg !613
@.str.6.52 = private unnamed_addr constant [13 x i8] c"pthread_join\00", align 1, !dbg !587
@.str.7.55 = private unnamed_addr constant [3 x i8] c"cb\00", align 1, !dbg !589
@__PRETTY_FUNCTION__.lwan_job_add = private unnamed_addr constant [45 x i8] c"void lwan_job_add(_Bool (*)(void *), void *)\00", align 1, !dbg !591
@__FUNCTION__.lwan_job_add = private unnamed_addr constant [13 x i8] c"lwan_job_add\00", align 1, !dbg !596
@.str.8.56 = private unnamed_addr constant [7 x i8] c"calloc\00", align 1, !dbg !599
@.str.9.57 = private unnamed_addr constant [24 x i8] c"Couldn't lock job mutex\00", align 1, !dbg !601
@__PRETTY_FUNCTION__.lwan_job_del = private unnamed_addr constant [45 x i8] c"void lwan_job_del(_Bool (*)(void *), void *)\00", align 1, !dbg !604
@__const.job_thread.rgtp = private unnamed_addr constant %struct.timespec { i64 1, i64 0 }, align 8
@.str.60 = private unnamed_addr constant [29 x i8] c"/home/raj/lwan/common/lwan.c\00", align 1, !dbg !640
@__FUNCTION__.lwan_set_url_map = private unnamed_addr constant [17 x i8] c"lwan_set_url_map\00", align 1, !dbg !643
@.str.1.61 = private unnamed_addr constant [26 x i8] c"Could not initialize trie\00", align 1, !dbg !645
@.str.2.62 = private unnamed_addr constant [15 x i8] c"/proc/self/exe\00", align 1, !dbg !647
@.str.3.63 = private unnamed_addr constant [8 x i8] c"%s.conf\00", align 1, !dbg !649
@.str.4.64 = private unnamed_addr constant [10 x i8] c"lwan.conf\00", align 1, !dbg !652
@default_config = internal constant %struct.lwan_config_t_ { ptr @.str.17, i16 15, i8 0, i8 0, i32 604800, i16 0 }, align 8, !dbg !657
@__FUNCTION__.lwan_init_with_config = private unnamed_addr constant [22 x i8] c"lwan_init_with_config\00", align 1, !dbg !934
@.str.5.65 = private unnamed_addr constant [43 x i8] c"Could not read config file, using defaults\00", align 1, !dbg !937
@.str.6.66 = private unnamed_addr constant [29 x i8] c"Initializing lwan web server\00", align 1, !dbg !942
@.str.7.67 = private unnamed_addr constant [48 x i8] c"Using %d threads, maximum %d sockets per thread\00", align 1, !dbg !944
@__FUNCTION__.lwan_shutdown = private unnamed_addr constant [14 x i8] c"lwan_shutdown\00", align 1, !dbg !949
@.str.8.72 = private unnamed_addr constant [14 x i8] c"Shutting down\00", align 1, !dbg !951
@.str.9.73 = private unnamed_addr constant [27 x i8] c"Shutting down URL handlers\00", align 1, !dbg !953
@main_socket = internal global i32 -1, align 4, !dbg !1103
@.str.10.74 = private unnamed_addr constant [18 x i8] c"main_socket == -1\00", align 1, !dbg !958
@__PRETTY_FUNCTION__.lwan_main_loop = private unnamed_addr constant [30 x i8] c"void lwan_main_loop(lwan_t *)\00", align 1, !dbg !961
@__FUNCTION__.lwan_main_loop = private unnamed_addr constant [15 x i8] c"lwan_main_loop\00", align 1, !dbg !963
@.str.11.75 = private unnamed_addr constant [29 x i8] c"Could not set signal handler\00", align 1, !dbg !966
@.str.12.76 = private unnamed_addr constant [15 x i8] c"Ready to serve\00", align 1, !dbg !968
@.str.13.77 = private unnamed_addr constant [7 x i8] c"accept\00", align 1, !dbg !970
@.str.14.78 = private unnamed_addr constant [30 x i8] c"Signal 2 (Interrupt) received\00", align 1, !dbg !972
@.str.15 = private unnamed_addr constant [39 x i8] c"Main socket closed for unknown reasons\00", align 1, !dbg !974
@__FUNCTION__.add_url_map = private unnamed_addr constant [12 x i8] c"add_url_map\00", align 1, !dbg !979
@.str.16 = private unnamed_addr constant [23 x i8] c"Could not copy URL map\00", align 1, !dbg !982
@.str.17 = private unnamed_addr constant [15 x i8] c"localhost:8080\00", align 1, !dbg !987
@__FUNCTION__.lwan_module_init = private unnamed_addr constant [17 x i8] c"lwan_module_init\00", align 1, !dbg !989
@.str.18 = private unnamed_addr constant [29 x i8] c"Initializing module registry\00", align 1, !dbg !991
@__FUNCTION__.lwan_module_register = private unnamed_addr constant [21 x i8] c"lwan_module_register\00", align 1, !dbg !993
@.str.19 = private unnamed_addr constant [25 x i8] c"Module at %p has no name\00", align 1, !dbg !995
@.str.20 = private unnamed_addr constant [24 x i8] c"Registering module \22%s\22\00", align 1, !dbg !997
@__FUNCTION__.setup_from_config = private unnamed_addr constant [18 x i8] c"setup_from_config\00", align 1, !dbg !999
@.str.21 = private unnamed_addr constant [31 x i8] c"Loading configuration file: %s\00", align 1, !dbg !1001
@.str.22 = private unnamed_addr constant [19 x i8] c"keep_alive_timeout\00", align 1, !dbg !1003
@.str.23 = private unnamed_addr constant [6 x i8] c"quiet\00", align 1, !dbg !1008
@.str.24 = private unnamed_addr constant [11 x i8] c"reuse_port\00", align 1, !dbg !1010
@.str.25.68 = private unnamed_addr constant [8 x i8] c"expires\00", align 1, !dbg !1015
@.str.26 = private unnamed_addr constant [8 x i8] c"threads\00", align 1, !dbg !1017
@.str.27 = private unnamed_addr constant [30 x i8] c"Invalid number of threads: %d\00", align 1, !dbg !1019
@.str.28 = private unnamed_addr constant [23 x i8] c"Unknown config key: %s\00", align 1, !dbg !1021
@.str.29 = private unnamed_addr constant [9 x i8] c"listener\00", align 1, !dbg !1023
@.str.30 = private unnamed_addr constant [25 x i8] c"Unknown section type: %s\00", align 1, !dbg !1025
@.str.31 = private unnamed_addr constant [28 x i8] c"Only one listener supported\00", align 1, !dbg !1027
@.str.32 = private unnamed_addr constant [23 x i8] c"Unexpected section end\00", align 1, !dbg !1032
@.str.33 = private unnamed_addr constant [39 x i8] c"Error on config file \22%s\22, line %d: %s\00", align 1, !dbg !1034
@.str.34 = private unnamed_addr constant [25 x i8] c"Expecting prefix section\00", align 1, !dbg !1036
@.str.35 = private unnamed_addr constant [7 x i8] c"prefix\00", align 1, !dbg !1038
@.str.36 = private unnamed_addr constant [45 x i8] c"Invalid section name or module not found: %s\00", align 1, !dbg !1040
@.str.37.69 = private unnamed_addr constant [45 x i8] c"Expecting section end while parsing listener\00", align 1, !dbg !1043
@.str.38 = private unnamed_addr constant [7 x i8] c"module\00", align 1, !dbg !1045
@.str.39.70 = private unnamed_addr constant [25 x i8] c"Module already specified\00", align 1, !dbg !1047
@.str.40 = private unnamed_addr constant [27 x i8] c"Could not find module \22%s\22\00", align 1, !dbg !1049
@.str.41 = private unnamed_addr constant [8 x i8] c"handler\00", align 1, !dbg !1051
@.str.42.71 = private unnamed_addr constant [28 x i8] c"Could not find handler \22%s\22\00", align 1, !dbg !1053
@.str.43 = private unnamed_addr constant [14 x i8] c"authorization\00", align 1, !dbg !1055
@.str.44 = private unnamed_addr constant [27 x i8] c"Unknown section type: \22%s\22\00", align 1, !dbg !1057
@.str.45 = private unnamed_addr constant [43 x i8] c"Expecting section end while parsing prefix\00", align 1, !dbg !1059
@.str.46 = private unnamed_addr constant [26 x i8] c"Missing module or handler\00", align 1, !dbg !1061
@.str.47 = private unnamed_addr constant [42 x i8] c"Handler and module are mutually exclusive\00", align 1, !dbg !1063
@.str.48 = private unnamed_addr constant [16 x i8] c"Invalid handler\00", align 1, !dbg !1068
@.str.49 = private unnamed_addr constant [6 x i8] c"basic\00", align 1, !dbg !1070
@.str.50 = private unnamed_addr constant [35 x i8] c"Only basic authorization supported\00", align 1, !dbg !1072
@.str.51 = private unnamed_addr constant [6 x i8] c"realm\00", align 1, !dbg !1074
@.str.52 = private unnamed_addr constant [14 x i8] c"password file\00", align 1, !dbg !1076
@.str.53 = private unnamed_addr constant [23 x i8] c"Unexpected section: %s\00", align 1, !dbg !1078
@.str.54 = private unnamed_addr constant [5 x i8] c"Lwan\00", align 1, !dbg !1080
@.str.55 = private unnamed_addr constant [9 x i8] c"htpasswd\00", align 1, !dbg !1082
@__FUNCTION__.get_number_of_cpus = private unnamed_addr constant [19 x i8] c"get_number_of_cpus\00", align 1, !dbg !1084
@.str.56 = private unnamed_addr constant [52 x i8] c"Could not get number of online CPUs, assuming 1 CPU\00", align 1, !dbg !1087
@__FUNCTION__.setup_open_file_count_limits = private unnamed_addr constant [29 x i8] c"setup_open_file_count_limits\00", align 1, !dbg !1092
@.str.57 = private unnamed_addr constant [10 x i8] c"getrlimit\00", align 1, !dbg !1095
@.str.58 = private unnamed_addr constant [10 x i8] c"setrlimit\00", align 1, !dbg !1097
@__FUNCTION__.allocate_connections = private unnamed_addr constant [21 x i8] c"allocate_connections\00", align 1, !dbg !1099
@.str.59 = private unnamed_addr constant [7 x i8] c"calloc\00", align 1, !dbg !1101
@lwan_module_redirect.redirect_module = internal constant %struct.lwan_module_t_ { ptr @.str.81, ptr @redirect_init, ptr @redirect_init_from_hash, ptr @free, ptr @redirect_handle_cb, i32 0 }, align 8, !dbg !1119
@.str.81 = private unnamed_addr constant [9 x i8] c"redirect\00", align 1, !dbg !1288
@.str.1.83 = private unnamed_addr constant [3 x i8] c"to\00", align 1, !dbg !1290
@.str.2.82 = private unnamed_addr constant [9 x i8] c"Location\00", align 1, !dbg !1292
@.str.90 = private unnamed_addr constant [5 x i8] c"\0D\0A\0D\0A\00", align 1, !dbg !1294
@.str.1.91 = private unnamed_addr constant [4 x i8] c"\0D\0A\0D\00", align 1, !dbg !1297
@identify_http_method.sizes = internal constant [5 x i8] c"\00\04\05\00\05", align 1, !dbg !1299
@.str.2.84 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1, !dbg !1554
@.str.3.89 = private unnamed_addr constant [26 x i8] c"%a, %d %b %Y %H:%M:%S GMT\00", align 1, !dbg !1559
@.str.4.85 = private unnamed_addr constant [7 x i8] c"bytes=\00", align 1, !dbg !1561
@.str.5.86 = private unnamed_addr constant [8 x i8] c"%lu-%lu\00", align 1, !dbg !1563
@.str.6.87 = private unnamed_addr constant [5 x i8] c"-%lu\00", align 1, !dbg !1565
@.str.7.88 = private unnamed_addr constant [5 x i8] c"%lu-\00", align 1, !dbg !1567
@parse_post_data.content_type = internal constant [34 x i8] c"application/x-www-form-urlencoded\00", align 16, !dbg !1569
@lwan_response_init.error_descriptor = internal global [3 x %struct.lwan_var_descriptor_t_] [%struct.lwan_var_descriptor_t_ { ptr @.str.98, i64 0, ptr @lwan_append_str_to_strbuf, ptr @lwan_tpl_str_is_empty, ptr null, ptr null }, %struct.lwan_var_descriptor_t_ { ptr @.str.1.99, i64 8, ptr @lwan_append_str_to_strbuf, ptr @lwan_tpl_str_is_empty, ptr null, ptr null }, %struct.lwan_var_descriptor_t_ zeroinitializer], align 16, !dbg !1574
@.str.98 = private unnamed_addr constant [14 x i8] c"short_message\00", align 1, !dbg !1624
@.str.1.99 = private unnamed_addr constant [13 x i8] c"long_message\00", align 1, !dbg !1626
@error_template = internal global ptr null, align 8, !dbg !1827
@.str.2.94 = private unnamed_addr constant [16 x i8] c"!error_template\00", align 1, !dbg !1628
@.str.3.95 = private unnamed_addr constant [38 x i8] c"/home/raj/lwan/common/lwan-response.c\00", align 1, !dbg !1630
@__PRETTY_FUNCTION__.lwan_response_init = private unnamed_addr constant [30 x i8] c"void lwan_response_init(void)\00", align 1, !dbg !1635
@__FUNCTION__.lwan_response_init = private unnamed_addr constant [19 x i8] c"lwan_response_init\00", align 1, !dbg !1637
@.str.4.96 = private unnamed_addr constant [30 x i8] c"Initializing default response\00", align 1, !dbg !1639
@error_template_str = internal global ptr @.str.31.100, align 8, !dbg !1838
@.str.5.97 = private unnamed_addr constant [24 x i8] c"lwan_tpl_compile_string\00", align 1, !dbg !1641
@__FUNCTION__.lwan_response_shutdown = private unnamed_addr constant [23 x i8] c"lwan_response_shutdown\00", align 1, !dbg !1643
@.str.6.103 = private unnamed_addr constant [23 x i8] c"Shutting down response\00", align 1, !dbg !1646
@.str.7.104 = private unnamed_addr constant [15 x i8] c"error_template\00", align 1, !dbg !1648
@__PRETTY_FUNCTION__.lwan_response_shutdown = private unnamed_addr constant [34 x i8] c"void lwan_response_shutdown(void)\00", align 1, !dbg !1650
@__FUNCTION__.lwan_response = private unnamed_addr constant [14 x i8] c"lwan_response\00", align 1, !dbg !1652
@.str.8.107 = private unnamed_addr constant [36 x i8] c"Headers already sent, ignoring call\00", align 1, !dbg !1654
@.str.9.125 = private unnamed_addr constant [10 x i8] c"text/html\00", align 1, !dbg !1656
@.str.10.110 = private unnamed_addr constant [10 x i8] c"HTTP/1.0 \00", align 1, !dbg !1658
@.str.11.111 = private unnamed_addr constant [10 x i8] c"HTTP/1.1 \00", align 1, !dbg !1660
@.str.12.112 = private unnamed_addr constant [29 x i8] c"\0D\0ATransfer-Encoding: chunked\00", align 1, !dbg !1662
@.str.13.113 = private unnamed_addr constant [19 x i8] c"\0D\0AContent-Length: \00", align 1, !dbg !1664
@.str.14.114 = private unnamed_addr constant [17 x i8] c"\0D\0AContent-Type: \00", align 1, !dbg !1666
@.str.15.115 = private unnamed_addr constant [25 x i8] c"\0D\0AConnection: keep-alive\00", align 1, !dbg !1668
@.str.16.116 = private unnamed_addr constant [20 x i8] c"\0D\0AConnection: close\00", align 1, !dbg !1670
@.str.17.117 = private unnamed_addr constant [7 x i8] c"Server\00", align 1, !dbg !1673
@.str.18.118 = private unnamed_addr constant [5 x i8] c"Date\00", align 1, !dbg !1675
@.str.19.119 = private unnamed_addr constant [8 x i8] c"Expires\00", align 1, !dbg !1677
@.str.20.120 = private unnamed_addr constant [17 x i8] c"WWW-Authenticate\00", align 1, !dbg !1679
@.str.21.121 = private unnamed_addr constant [21 x i8] c"\0D\0AWWW-Authenticate: \00", align 1, !dbg !1681
@.str.22.122 = private unnamed_addr constant [9 x i8] c"\0D\0ADate: \00", align 1, !dbg !1683
@.str.23.123 = private unnamed_addr constant [12 x i8] c"\0D\0AExpires: \00", align 1, !dbg !1685
@.str.24.124 = private unnamed_addr constant [20 x i8] c"\0D\0AServer: lwan\0D\0A\0D\0A\00\00", align 1, !dbg !1687
@lwan_response_send_chunk.last_chunk = internal constant [6 x i8] c"0\0D\0A\0D\0A\00", align 1, !dbg !1689
@.str.25.133 = private unnamed_addr constant [6 x i8] c"%zx\0D\0A\00", align 1, !dbg !1815
@.str.26.134 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1, !dbg !1817
@.str.27.135 = private unnamed_addr constant [18 x i8] c"text/event-stream\00", align 1, !dbg !1819
@.str.28.136 = private unnamed_addr constant [8 x i8] c"event: \00", align 1, !dbg !1821
@.str.29.137 = private unnamed_addr constant [7 x i8] c"data: \00", align 1, !dbg !1823
@.str.30.138 = private unnamed_addr constant [5 x i8] c"\0D\0A\0D\0A\00", align 1, !dbg !1825
@.str.31.100 = private unnamed_addr constant [1111 x i8] c"<html><head><style>body{background:#627d4d;background:-moz-radial-gradient(center,ellipse cover,#627d4d 15%,#1f3b08 100%);background:-webkit-gradient(radial,center center,0px,center center,100%,color-stop(15%,#627d4d),color-stop(100%,#1f3b08));background:-webkit-radial-gradient(center,ellipse cover,#627d4d 15%,#1f3b08 100%);background:-o-radial-gradient(center,ellipse cover,#627d4d 15%,#1f3b08 100%);background:-ms-radial-gradient(center,ellipse cover,#627d4d 15%,#1f3b08 100%);background:radial-gradient(center,ellipse cover,#627d4d 15%,#1f3b08 100%);height:100%;font-family:Arial,'Helvetica Neue',Helvetica,sans-serif;text-align:center;border:0;letter-spacing:-1px;margin:0;padding:0}.sorry{color:#244837;font-size:18px;line-height:24px;text-shadow:01px 1px rgba(255,255,255,0.33)}h1{color:#fff;font-size:30px;font-weight:700;text-shadow:0 1px 4px rgba(0,0,0,0.68);letter-spacing:-1px;margin:0}</style></head><body><table height=\22100%\22 width=\22100%\22><tr><td align=\22center\22 valign=\22middle\22><div><h1>{{short_message}}</h1><div class=\22sorry\22><p>{{long_message}}</p></div></div></td></tr></table></body></html>\00", align 1, !dbg !1833
@__FUNCTION__.log_request = private unnamed_addr constant [12 x i8] c"log_request\00", align 1, !dbg !1840
@.str.32.128 = private unnamed_addr constant [30 x i8] c"%s [%s] \22%s %s HTTP/%s\22 %d %s\00", align 1, !dbg !1842
@.str.33.126 = private unnamed_addr constant [4 x i8] c"1.0\00", align 1, !dbg !1844
@.str.34.127 = private unnamed_addr constant [4 x i8] c"1.1\00", align 1, !dbg !1846
@.str.35.129 = private unnamed_addr constant [4 x i8] c"GET\00", align 1, !dbg !1848
@.str.36.130 = private unnamed_addr constant [5 x i8] c"HEAD\00", align 1, !dbg !1850
@.str.37.131 = private unnamed_addr constant [5 x i8] c"POST\00", align 1, !dbg !1852
@.str.38.132 = private unnamed_addr constant [8 x i8] c"UNKNOWN\00", align 1, !dbg !1854
@lwan_module_serve_files.serve_files = internal constant %struct.lwan_module_t_ { ptr @.str.141, ptr @serve_files_init, ptr @serve_files_init_from_hash, ptr @serve_files_shutdown, ptr @serve_files_handle_cb, i32 78 }, align 8, !dbg !1879
@.str.141 = private unnamed_addr constant [12 x i8] c"serve_files\00", align 1, !dbg !2158
@.str.1.142 = private unnamed_addr constant [41 x i8] c"/home/raj/lwan/common/lwan-serve-files.c\00", align 1, !dbg !2160
@__FUNCTION__.serve_files_init = private unnamed_addr constant [17 x i8] c"serve_files_init\00", align 1, !dbg !2162
@.str.2.147 = private unnamed_addr constant [24 x i8] c"root_path not specified\00", align 1, !dbg !2164
@.str.3.148 = private unnamed_addr constant [35 x i8] c"Could not obtain real path of \22%s\22\00", align 1, !dbg !2166
@.str.4.149 = private unnamed_addr constant [30 x i8] c"Could not open directory \22%s\22\00", align 1, !dbg !2168
@.str.5.150 = private unnamed_addr constant [7 x i8] c"malloc\00", align 1, !dbg !2170
@.str.6.151 = private unnamed_addr constant [22 x i8] c"Couldn't create cache\00", align 1, !dbg !2172
@directory_list_tpl_str = internal global ptr @.str.20.172, align 8, !dbg !2227
@file_list_desc = internal constant [4 x %struct.lwan_var_descriptor_t_] [%struct.lwan_var_descriptor_t_ { ptr @.str.21.154, i64 0, ptr @lwan_append_str_escaped_to_strbuf, ptr @lwan_tpl_str_is_empty, ptr null, ptr null }, %struct.lwan_var_descriptor_t_ { ptr @.str.22.155, i64 8, ptr @lwan_append_str_escaped_to_strbuf, ptr @lwan_tpl_str_is_empty, ptr null, ptr null }, %struct.lwan_var_descriptor_t_ { ptr @.str.23.156, i64 16, ptr null, ptr null, ptr @directory_list_generator, ptr @file_list_item_desc }, %struct.lwan_var_descriptor_t_ zeroinitializer], align 16, !dbg !2235
@.str.7.152 = private unnamed_addr constant [42 x i8] c"Could not compile directory list template\00", align 1, !dbg !2174
@.str.8.153 = private unnamed_addr constant [11 x i8] c"index.html\00", align 1, !dbg !2176
@redir_funcs = internal constant %struct.cache_funcs_t_ { ptr @redir_serve, ptr @redir_init, ptr @redir_free, i64 8 }, align 8, !dbg !2180
@.str.9.179 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1, !dbg !2178
@dirlist_funcs = internal constant %struct.cache_funcs_t_ { ptr @dirlist_serve, ptr @dirlist_init, ptr @dirlist_free, i64 8 }, align 8, !dbg !2188
@mmap_funcs = internal constant %struct.cache_funcs_t_ { ptr @mmap_serve, ptr @mmap_init, ptr @mmap_free, i64 32 }, align 8, !dbg !2198
@sendfile_funcs = internal constant %struct.cache_funcs_t_ { ptr @sendfile_serve, ptr @sendfile_init, ptr @sendfile_free, i64 32 }, align 8, !dbg !2214
@.str.10.183 = private unnamed_addr constant [9 x i8] c"Location\00", align 1, !dbg !2182
@.str.11.181 = private unnamed_addr constant [4 x i8] c"%s/\00", align 1, !dbg !2184
@.str.12.182 = private unnamed_addr constant [11 x i8] c"text/plain\00", align 1, !dbg !2186
@compression_none = internal global ptr null, align 8, !dbg !2194
@.str.13.174 = private unnamed_addr constant [14 x i8] c"Last-Modified\00", align 1, !dbg !2190
@.str.14.175 = private unnamed_addr constant [17 x i8] c"Content-Encoding\00", align 1, !dbg !2192
@.str.15.180 = private unnamed_addr constant [10 x i8] c"text/html\00", align 1, !dbg !2196
@compression_deflate = internal global ptr @.str.16.178, align 8, !dbg !2202
@.str.16.178 = private unnamed_addr constant [8 x i8] c"deflate\00", align 1, !dbg !2200
@__FUNCTION__.mmap_init = private unnamed_addr constant [10 x i8] c"mmap_init\00", align 1, !dbg !2204
@.str.17.177 = private unnamed_addr constant [8 x i8] c"madvise\00", align 1, !dbg !2207
@compression_gzip = internal global ptr @.str.18.176, align 8, !dbg !2218
@.str.18.176 = private unnamed_addr constant [5 x i8] c"gzip\00", align 1, !dbg !2216
@.str.19.173 = private unnamed_addr constant [6 x i8] c"%s.gz\00", align 1, !dbg !2220
@.str.20.172 = private unnamed_addr constant [763 x i8] c"<html>\0A<head>\0A  <title>Index of {{rel_path}}</title>\0A</head>\0A<body>\0A  <h1>Index of {{rel_path}}</h1>\0A  <table>\0A    <tr>\0A      <td>&nbsp;</td>\0A      <td>File name</td>\0A      <td>Type</td>\0A      <td>Size</td>\0A    </tr>\0A    <tr>\0A      <td><img src=\22/icons/back.png\22></td>\0A      <td colspan=\223\22><a href=\22..\22>Parent directory</a></td>\0A    </tr>\0A{{#file_list}}    <tr>\0A      <td><img src=\22/icons/{{file_list.icon}}.png\22 alt=\22{{file_list.icon_alt}}\22></td>\0A      <td><a href=\22{{rel_path}}/{{{file_list.name}}}\22>{{{file_list.name}}}</a></td>\0A      <td>{{file_list.type}}</td>\0A      <td>{{file_list.size}}{{file_list.unit}}</td>\0A    </tr>\0A{{/file_list}}{{^#file_list}}    <tr>\0A      <td colspan=\224\22>Empty directory.</td>\0A    </tr>\0A{{/file_list}}  </table>\0A</body>\0A</html>\0A\00", align 1, !dbg !2222
@.str.21.154 = private unnamed_addr constant [10 x i8] c"full_path\00", align 1, !dbg !2229
@.str.22.155 = private unnamed_addr constant [9 x i8] c"rel_path\00", align 1, !dbg !2231
@.str.23.156 = private unnamed_addr constant [10 x i8] c"file_list\00", align 1, !dbg !2233
@file_list_item_desc = internal constant [7 x %struct.lwan_var_descriptor_t_] [%struct.lwan_var_descriptor_t_ { ptr @.str.33.157, i64 24, ptr @lwan_append_str_to_strbuf, ptr @lwan_tpl_str_is_empty, ptr null, ptr null }, %struct.lwan_var_descriptor_t_ { ptr @.str.34.158, i64 32, ptr @lwan_append_str_to_strbuf, ptr @lwan_tpl_str_is_empty, ptr null, ptr null }, %struct.lwan_var_descriptor_t_ { ptr @.str.35.159, i64 40, ptr @lwan_append_str_to_strbuf, ptr @lwan_tpl_str_is_empty, ptr null, ptr null }, %struct.lwan_var_descriptor_t_ { ptr @.str.36.160, i64 48, ptr @lwan_append_str_to_strbuf, ptr @lwan_tpl_str_is_empty, ptr null, ptr null }, %struct.lwan_var_descriptor_t_ { ptr @.str.37.161, i64 56, ptr @lwan_append_int_to_strbuf, ptr @lwan_tpl_int_is_empty, ptr null, ptr null }, %struct.lwan_var_descriptor_t_ { ptr @.str.38.162, i64 64, ptr @lwan_append_str_to_strbuf, ptr @lwan_tpl_str_is_empty, ptr null, ptr null }, %struct.lwan_var_descriptor_t_ zeroinitializer], align 16, !dbg !2283
@.str.24.163 = private unnamed_addr constant [7 x i8] c"folder\00", align 1, !dbg !2253
@.str.25.164 = private unnamed_addr constant [4 x i8] c"DIR\00", align 1, !dbg !2255
@.str.26.165 = private unnamed_addr constant [10 x i8] c"directory\00", align 1, !dbg !2257
@.str.27.166 = private unnamed_addr constant [5 x i8] c"file\00", align 1, !dbg !2259
@.str.28.167 = private unnamed_addr constant [5 x i8] c"FILE\00", align 1, !dbg !2261
@.str.29.168 = private unnamed_addr constant [2 x i8] c"B\00", align 1, !dbg !2263
@.str.30.169 = private unnamed_addr constant [4 x i8] c"KiB\00", align 1, !dbg !2265
@.str.31.170 = private unnamed_addr constant [4 x i8] c"MiB\00", align 1, !dbg !2267
@.str.32.171 = private unnamed_addr constant [4 x i8] c"GiB\00", align 1, !dbg !2269
@.str.33.157 = private unnamed_addr constant [15 x i8] c"file_list.icon\00", align 1, !dbg !2271
@.str.34.158 = private unnamed_addr constant [19 x i8] c"file_list.icon_alt\00", align 1, !dbg !2273
@.str.35.159 = private unnamed_addr constant [15 x i8] c"file_list.name\00", align 1, !dbg !2275
@.str.36.160 = private unnamed_addr constant [15 x i8] c"file_list.type\00", align 1, !dbg !2277
@.str.37.161 = private unnamed_addr constant [15 x i8] c"file_list.size\00", align 1, !dbg !2279
@.str.38.162 = private unnamed_addr constant [15 x i8] c"file_list.unit\00", align 1, !dbg !2281
@.str.39.144 = private unnamed_addr constant [5 x i8] c"path\00", align 1, !dbg !2286
@.str.40.145 = private unnamed_addr constant [11 x i8] c"index path\00", align 1, !dbg !2288
@.str.41.146 = private unnamed_addr constant [26 x i8] c"serve precompressed files\00", align 1, !dbg !2290
@__FUNCTION__.serve_files_shutdown = private unnamed_addr constant [21 x i8] c"serve_files_shutdown\00", align 1, !dbg !2292
@.str.42.143 = private unnamed_addr constant [20 x i8] c"Nothing to shutdown\00", align 1, !dbg !2294
@.str.186 = private unnamed_addr constant [36 x i8] c"/home/raj/lwan/common/lwan-socket.c\00", align 1, !dbg !2296
@__FUNCTION__.lwan_socket_init = private unnamed_addr constant [17 x i8] c"lwan_socket_init\00", align 1, !dbg !2299
@.str.1.187 = private unnamed_addr constant [21 x i8] c"Initializing sockets\00", align 1, !dbg !2301
@.str.2.188 = private unnamed_addr constant [35 x i8] c"Too many file descriptors received\00", align 1, !dbg !2303
@.str.3.189 = private unnamed_addr constant [11 x i8] c"setsockopt\00", align 1, !dbg !2305
@.str.4.190 = private unnamed_addr constant [31 x i8] c"%s not supported by the kernel\00", align 1, !dbg !2307
@.str.5.191 = private unnamed_addr constant [13 x i8] c"TCP_FASTOPEN\00", align 1, !dbg !2309
@.str.6.192 = private unnamed_addr constant [13 x i8] c"TCP_QUICKACK\00", align 1, !dbg !2311
@__FUNCTION__.setup_socket_from_systemd = private unnamed_addr constant [26 x i8] c"setup_socket_from_systemd\00", align 1, !dbg !2313
@.str.7.208 = private unnamed_addr constant [53 x i8] c"Passed file descriptor is not a listening TCP socket\00", align 1, !dbg !2315
@.str.8.209 = private unnamed_addr constant [30 x i8] c"Could not obtain socket flags\00", align 1, !dbg !2320
@.str.9.210 = private unnamed_addr constant [27 x i8] c"Could not set socket flags\00", align 1, !dbg !2322
@__FUNCTION__.setup_socket_normally = private unnamed_addr constant [22 x i8] c"setup_socket_normally\00", align 1, !dbg !2324
@.str.10.194 = private unnamed_addr constant [29 x i8] c"Could not parse listener: %s\00", align 1, !dbg !2326
@.str.11.195 = private unnamed_addr constant [16 x i8] c"getaddrinfo: %s\00", align 1, !dbg !2328
@.str.12.205 = private unnamed_addr constant [5 x i8] c"8080\00", align 1, !dbg !2330
@.str.13.206 = private unnamed_addr constant [8 x i8] c"0.0.0.0\00", align 1, !dbg !2332
@.str.14.207 = private unnamed_addr constant [2 x i8] c"*\00", align 1, !dbg !2334
@__FUNCTION__.bind_and_listen_addrinfos = private unnamed_addr constant [26 x i8] c"bind_and_listen_addrinfos\00", align 1, !dbg !2336
@.str.15.196 = private unnamed_addr constant [13 x i8] c"SO_REUSEPORT\00", align 1, !dbg !2338
@.str.16.197 = private unnamed_addr constant [22 x i8] c"Could not bind socket\00", align 1, !dbg !2340
@__FUNCTION__.listen_addrinfo = private unnamed_addr constant [16 x i8] c"listen_addrinfo\00", align 1, !dbg !2342
@.str.17.198 = private unnamed_addr constant [7 x i8] c"listen\00", align 1, !dbg !2345
@.str.18.199 = private unnamed_addr constant [16 x i8] c"getnameinfo: %s\00", align 1, !dbg !2347
@.str.19.200 = private unnamed_addr constant [28 x i8] c"Listening on http://[%s]:%s\00", align 1, !dbg !2349
@.str.20.201 = private unnamed_addr constant [26 x i8] c"Listening on http://%s:%s\00", align 1, !dbg !2351
@.str.21.202 = private unnamed_addr constant [29 x i8] c"/proc/sys/net/core/somaxconn\00", align 1, !dbg !2353
@.str.22.203 = private unnamed_addr constant [3 x i8] c"re\00", align 1, !dbg !2355
@.str.23.204 = private unnamed_addr constant [3 x i8] c"%d\00", align 1, !dbg !2357
@quiet = internal global i8 0, align 1, !dbg !2359
@mutex = internal global %union.pthread_mutex_t zeroinitializer, align 8, !dbg !2407
@.str.217 = private unnamed_addr constant [19 x i8] c"pthread_mutex_lock\00", align 1, !dbg !2375
@stdout = external global ptr, align 8
@.str.1.218 = private unnamed_addr constant [15 x i8] c"\1B[32;1m%ld\1B[0m\00", align 1, !dbg !2377
@.str.2.219 = private unnamed_addr constant [15 x i8] c" \1B[3m%s:%d\1B[0m\00", align 1, !dbg !2379
@.str.3.220 = private unnamed_addr constant [15 x i8] c" \1B[33m%s()\1B[0m\00", align 1, !dbg !2381
@.str.4.221 = private unnamed_addr constant [2 x i8] c" \00", align 1, !dbg !2383
@.str.5.222 = private unnamed_addr constant [21 x i8] c"pthread_mutex_unlock\00", align 1, !dbg !2385
@.str.6.224 = private unnamed_addr constant [6 x i8] c"\1B[36m\00", align 1, !dbg !2387
@.str.7.225 = private unnamed_addr constant [6 x i8] c"\1B[33m\00", align 1, !dbg !2389
@.str.8.226 = private unnamed_addr constant [8 x i8] c"\1B[31;1m\00", align 1, !dbg !2391
@.str.9.227 = private unnamed_addr constant [6 x i8] c"\1B[37m\00", align 1, !dbg !2393
@.str.10.228 = private unnamed_addr constant [6 x i8] c"\1B[35m\00", align 1, !dbg !2395
@.str.11.229 = private unnamed_addr constant [6 x i8] c"\1B[32m\00", align 1, !dbg !2397
@get_color_end_for_type.retval = internal global ptr @.str.12.223, align 8, !dbg !2401
@.str.12.223 = private unnamed_addr constant [5 x i8] c"\1B[0m\00", align 1, !dbg !2399
@mime_entries_initialized = internal global i8 0, align 1, !dbg !2432
@.str.244 = private unnamed_addr constant [36 x i8] c"/home/raj/lwan/common/lwan-tables.c\00", align 1, !dbg !2457
@__FUNCTION__.lwan_tables_init = private unnamed_addr constant [17 x i8] c"lwan_tables_init\00", align 1, !dbg !2459
@.str.1.245 = private unnamed_addr constant [30 x i8] c"Uncompressing MIME type table\00", align 1, !dbg !2461
@uncompressed_mime_entries = internal global [28534 x i8] zeroinitializer, align 16, !dbg !2568
@mime_entries_compressed = internal constant [7514 x i8] c"x\DA\AD}\81\96\A4(\CF\B6\F7\B3G\DF\9D\EE\D9\99\DD\AB\F9\0E\22Zt\89\D0\80\96UW\FF?A\ABJ\01\AB{\CF\FE\E7\ECTC\12\11C\08I\08\EC\8F\B7\F7\82\19\D3K\CE\BC\D4\C3\FF\A6\A1\A9z\EDGW\FE(\DF\CA\F7\E2\BDQ}\E1\C5\EC\03F\0E\EFM\15@\EF\8D+\A4b\9D\F8\DF\\R\F9\BD{+&\D9\08\FD\BF\F7\CE\987\D4\CD\A6^\FC\BE\ED\DE2\97\BFo%\D7\CAX\E1\9Ch\0A\C6\EA\08\CFF\7F\D2\F6\C2\AC(k9\80\80\17ll\A4&\14\95\99:~@1\03\02wL\E0DW\B0\FA\12\13\D4\F2\A2-:\C3w\08s\96\C0yoK.\AC\07\96'\0CcJX\D4\87\E6:0%\B9\AB\02\11\17\F1\0B\B8\D8}4\1F\D3\96\F8\C8u\AD{Bz\9EG[|]cVv\A0\C4\C1\0AaRZ\C2w\96\99S\C1\DA\98[\AD\1E|\E9\AFF\FC\002}V\D6\AAR\BA\E1\C4\C8\93`M\DA8A+g\C2G\CA=\BF\B4\F3\8E[i\C0+\D9>GM\B6-\01x\02Ihl\FA\BAF\D7\A2\02\A6\DC`J98\CF\FA^\D8\12\FD8C\16\FF\B8ItX\FA\E4\F9f\AA\AB\00W23x\B2c\D5\829\A7\D8\A1\B1Z6\D5\FA\86\92Y~\92S\18Y\CE\F8I,s#\14!w\83l\85\DB\BD>\E2\BBr\E5\1Ei\0Ff\1F\A0V\A3\D5\02/\8C\C7\CE\0A\11\A0.\12\D4\CE\94Nv\03\F3\A3E\07]\BBN\C0\E5\AD\A82\A7\96\EE\82\D3(2\A73\02\C6\F1\A5\95\93\CA\F4\D7*P\B89i\E7\95dz\BD\975\02\FC1CcP\01\B0\04\89\E2\03\EF&\9E\E0\01[\F1sft\BC\9C\AB\0E\F3/L,=\88\01/\18W\81\AA\99\93ho\92\9B\0F\08\A5\82\ED\E7~(\CF\A4\1A\0Avk\D3\B7H\0B\C1\AAZ\D9\0B'8\98[\05\AA\9B\FB\16%\A8n\97\8C\D4\B1\9B\1E*Qk}.\EA\88-\D4\D1F_\86^c\EA\D5\DCH\1D\A1\17X\DD\B4\B9iM\E0\BAQ\C9+\DDu\E0\AA\AF\1A\F5\C7\A5&\86\D6\22\9D\D7V\B0~\1AxE\B8\FA\F4\96\E0\DB\F1Cz7V\9A\B9\AB3\D6\15A9o\884\F7\C2\97\CE\A3!U\D4}\AC\D6\EB^\DB\BAX~\B3\98\CC\04%X\AD\CC\BA\DCP)0-\E9\9A\85\18(v\16\16\F8TT\A0u').\E8\B6\17\CAUDR\EBxU\AA1zoE\1D\E9\81\FD7y(\B5\A5+\F8\FE*T\EB\\;\80\BEe\9B\E7\F7I\C8\0B\FE\E3\07S\E9d\E2\FD(\BC\1D\9D\AF8\B3\98\02\BA\86@A\C2\87Vv\CB3\B7\7F\F5Li\CEx\EEg\93yH\0F\E7\8A\FF\EC\AC\1E\0D(\DA/)\BA/)\CC\97\14\E3W\14\915@\14P=\00o\97O\CE\9E\0B\07\95\C3b\15=\E5\B9iFe*CH\F0%}\F1h{bX\11k\A6\F5\9DX\FC+\CCd\C2\F2\FAw4\9C\BC\C6s5\CBBm\16\EA\B3\D0[\0E\BA\95\12\1E?\D7H+\B8\D7D\16T\E3\06\19 Aa\F2\A6\E6\CAe\06\0CJ\82q\C8\09!y\A2C\06\E1\09\C8\9B\B3\B8\A6,\11\8DdXu\09P-$\BCQr\CF\03\82`H\0C\0C\AA^\FA\85\82g(\A8\1Fr\C0|\A5j\93\124Z\01\1F\B0:\C5\EA\FA\03<\08\D8\CF\14\FB9\8AQ\009\17X\99\F1z\D6\13+\A9\DA\C4\1C\0B<\01Qc\D9ee\\\FA\E1\\\0E\8D\B0\A2\EFY\01305\10\83m\C8\DB\D8\E8\04d'\B3\9DZu\07\95\F8)\D1\FB\01\C4O*'\8B'\AF\FA\93\E8!\C8'\9B\0A\EB\B9\11\D5\19\8FS7\A0\92\B6_MU\991|\06\07\D3\E9\22\EA\D0y\D9\12N\94\D2\B9\11\BF\83\F4r\B1Q\B8\ECs\BD\C1\8B:\D6[\8Cn\CF2\F3\99]\95\C6r\8A\82\DB\F3\E4\83M\AC\9C\F0\F1\FD9\D5\E10\1B9\F4\00`P\E3\15\A4\AB\D6\0C\169h\CD\17\B4\86\F5\C2{z\E1\D9\7FA\0A\FDoz\B6\D0^\BE\A0%\87\A0f\C3\99h\E7\D7\B4 1\C9*\0E\1C\C6+\A7\E2\B5S\9A\07\EB\15\F8f?`\A1N\82\B8\85\A1\AAR.\\!\92\FAba\92\C2?\81\F6\D7\AATb\18A;?\FC3*s\9DY\EC\A5\AA\08\CE\B5:6?h\05YT\11\98F\B31\B5F\02\88\C3\CB{j,\B3\1F\04\C5x\98\06P;0k\0Bn\9B\94S\18h\B2\9B\80\EC3\D3\0B@n\E3\D92\FF\F5\E7?P4\EB\E4\B3W\E3\F5\A0\BD\C8|hWm\D0\DC\9D\E2/\00\84\BB\88\E3\A1\EE2\82\A7\95\D2\C3\E2\FBpH\F7\E2\01\A0\C0\DD\B1\9Ev\D3\9Dn*\22\BF\8F\8FpH\85BcX\8C\9E\BEv\A8\F1\CB^B\C9\E4 \18\9F\8F_5\CF\CF\81h\98(\E0\C8\89~\ED9\F4W\C3\82\92kX\BA\D8\93\D10\BA\8AP\0D\CB\E8\98\00l\18\9C.\E1R\E3\B7m\DC\80\C5\12j\AEa\93\D2\E3\B0o\E0\0E\\\DE^\EF'\7F\A39\19u\0B\8E\DB\A3okR\16U\0B\ACiRc\15\CBG\05\F8\D2h\D3d\8D\D9YX=W\84mDl\92\02\22\D9pw.A\B0\9B\08\8D0\BD\BE\1E\1B\8A\8D\B0\AF\C4\B5iY\AA\15\1Az\12\08|\EB\B5h\BA\D8\F3\03d\BB\9A4rc$4\F2\98k\D2\1D\0E5P\F8\E7_|\06\B0\B7\17\E8\8Fi\D53\A1\FF\1F\D3X\84\9F\18\D6\F7\C7*\A6Q]\1C)AM\E0\03\DC9\B4\03\8A/l\BBF\B9\17}\1C\D2\15\8A`\10\BA\BD\96r!\FE\03pv\FD%d\05\E4\08\05\EB+\A84\AB\C5\C0\EA^4\D5\8F7z*] \B4\11\03\A4\AF\D5V1\EFJ\DDb\91\15\8F&\A8A\A8C\8E\D1\94CG\AE\D9\8AAc>\DF3\7F\DC\B3\FB\B2\96\E9\99\FF\CF={\AC\99M:\10\DAu\B2\02\BC1\A9\AD\09X\88@\C1\B6Z\8D\F5E\CC\C1|\B7\0A/\A9\B4\1Ef\A0\AB<\EB\00\8E\A2\1A\04\F8\83\E6R\E3\93\F9\E9\9F:\C3G+\8A\EAK\825\DEm\DF\8B\1A\FE\9D\9A=\AC\02\80D\E9\85\04M\F5\1AC\B8G\93\C2R\D5L2\EE\12 \CD\A5\DD\E8\\\AA5\97n;!Pk\E6v\0BA\AD\99S\CE:\A3}\8BY\\\11\B2\99\0F'\B8\E00\0B\7F\FE\FD\E7\9F\9B\EF\1AFaY\F5\C4\84\D2\EF\9F\BF\0Fh\02&\94\FE\F9u\D4N\C0\08\AE\F6\B3\89\00k\BCOd\A2\0E\83\9EX#;U\11R4\F3+\82\B9\10\ADL\97%#\B9\13}!\E4\AF\14\D5A\FC\98\EBe!z~<~B\B5\89\FAQ\C2\B30\8A\02\F2\A3 \E94\1A\B6\E5\7F\BF\BD\01\14\7F$\00A\D0\84\BA\BDh\89\02\B7O\C9\92\9D\C4RY^\E0:8\E0\B2\0E&ElVOF\18w\14H\15f\DC\0B?\01B\B4S\B84~/\DCMv\83~_:\ECX~\C6\BA\B1^\82! Iy\8E\CEPx\0A\18\E1\BFz\83\7F\18\1CNP\A1\10S\EC\14\13DL\D7\18:LXA\C5,\8E\D7\061\EF\A7\18\D5\C5\EC_H\11\BD\7F?F\14\C3\15\17\0A\17\0B\C2\A5\86\82\B8\19\8A\F1\F7\F5\08f\DC\DE\0F\F0w;\A0\BD\7F-\94\A7\B7l(\DA\9F\D3#\C2H\E5\F6\F7\EF\84\E4\9F?\13P\ED6*\A0\85W]\CB\C6\9D\04\FA\D8\F2\C6\1F\C4\C0Ia;\0E\1DmY_\05\BA\96\A7\AB\BBt\8CW\84h\9B6c\A7\B5E+\FE\AFg\E3\C0O\A9\C6\16`\A5\A6\87\05\9C8=\FA\12\CA\F9\\\B4\DD_\AF\83\81\9D\01Ms\A4\A1\DA\D3\C3\1B\A1\F0\F5\09C\02\D8\CF\1C\F0\AF\1C\F0w\0E\C83@\19\9B\123\81\DA~\B3\7F\14*m\FF\8C\0AS\B9\ED\D3`8<\01K;(\ED\\\11\BA\ED7\C3\8Cr\DB_\F2^\B8\9C$Q\CFOC\B5U\12M\88\D9\05^\F4\D7\0D\06\95V\BD\0Af\B6\03\CF\A0u\07\F7\BD\22\1C$\22\11-3oE\0B\B5\D0\DE\CB\B7\B8\CC[\1C\AF.\A2^\05\A5\85\95\B8i\14\B56\B3\0F\D0\F6\E3\EC\A5\12U\F0|[\FF*\EC\D0\8EP\8C%\F5\D8\B5\00mb\0E\ED\E47\EB-\D5\DA\CC\F2\B8\CE\08`\F0\AF\7F\85\CE\84\EA\DB\F1v\BB.\D3\AD{K\07\B2\13\1A\06\CFPt\EF\EBGw\EF-\9BQ\CD\92.\CE`\97\B1\E8;\AB\F5$J\C6yp\88\BAd\DF\D23,\0E]\14/\B4pz\CB\EE\84\05\A0\86O/,(x\ACR;\F2$\9E\CE@\D7\F4\1B\AB\83j\9DHE\9Av(\09\DE\899\F7\1DX\C9\EC\B5\14\E0\A6\B6\10\8A\AE\ABsT\9D\A8a\12\84\15\AF\EB\FC1\85\D7X\0F\BBS{\C4\94\10\CC\EA\1E\E1t*uR\1DQC\1C\06/\FD\B5\\\D7\EA\A2\8B\E2x\DD\1A\F7\ECT\E6\DB\00\EB\861\EC\D3\C6|\BC\83;s\CA\88\F3\B2\85*1tf\DF,\EA\CB\EB>s\1F\C8Z\F1\09\94;D\D9H\12\9C\ED\\\80\9A8\86\B8\00\CB\F0.+\BE3lv:d\E2\F0\B1(\E4\CE\C6aP\EA\C0\F2A.\BB\AD\14\C4q\B5G:\CFbc4\80:\7F8|$\0C\CF\A1\F3\97\AD\B0\A2\D6MO\9D\188>\C9[\D1\CD\FB\9EP\BD\9B\B3\127\D0\BA\7Fz\BA\C3\A7\B7_?V\15\12\8A\F8y\7F\D6\DF\A9\FE\F3Y\FFY\9CX\AA@\00\0B\0C9\D5<Uc\01xJ\A2\E7\049m\FB\11\05\05a\0C\12\E8d\BA\CC\FBL\19\E0'#\9B<\12\F0\93qy\9C+N\9Fs\12u\AB\F1>1\FF\FC\B38\F9s*;g\B8\89J0\80\81_7\87)\CC\\\84\9FMuJ;te\8A\9DXu\9AJ\8AC\9C&\F3\82b\D2\F0.A\E3^\D0\AC\A2%\DFR/R\0E\D0\81\A4\B6d&\F9\020\B8\AAA\1B\D1K\E6\B0\E7%\AC\18x\88}B\EC`\84\9F\81S\AF\1F\D5\0Fk\02\E5\01\80{d\8F\F5bh \DCR\DC5U(\B5u\8C\CF\AC\E3\0EV\09C\FF\C9l\837N\7F(~V\C8N\B8u\06\84\A2\CC\88\03`\B0\801\9Fa\D6fX\E24\1CgB\C9.jj~e\C9\10Zf\9C\AC\A8\A7\81\E5\1C0\CCV\99\89\BE\EC\13\05d\D8\9Eu9\07\87\C0r\D8\06\CE\C8\9C\DC\12\A2\BEj\EEP:\C4\85d\8Fh\BA\AD\D0\F0\D7\8E\9C\A0x\9D\F6\A9\CF\03\FB\DA2\C1J\A7[O;\FDU\A0\92\A6\95{v-\10\99I\05\898tw\07\A4U\D9\FC\19+\BB\93w\94\14\02\AA\10\D5\916\93ic\05\FC<I\01\BF{\8B\CB\E7\BA8\CA\0E\C8?\BF~\FDY.\111\E9\CDw\84\ED\11\B7\91\99\F9)\15\16\BEI\BA\90K\03\BC\9C\C6/h\C6\E2\03>\D9CQ\BBq\A8>\DE`\EC\E1\A9\B2\11\CB\0C\C6\E2\F2\C1R\96\10\EC#Z5\C2^\D0=\A3\86*w\BD\19\10N\8F\16\13\FACfb\F0\01\F8\D1\FB\9C*\FC\E8\AF\BE\F8\18\92\DD\98\D0(\C1\CB0\E3?t\93J\C9\87\C6\22W\11\EA\D9/#\D6i\8FRW\84\9F]=\AE\AAu]\F90\8A\AA\D3\A3\1A\D0;l\BA5\B6j\C1\0F\17\A5\0E\05\00\FDD\13d\01\FD\11\D0gbopr\94l$U\EB\A8\95\87\8B\B2\A0\CE\AD\CE\A3It\C6\9E\15g\99\B2\E8\0C/\D5H\BB\18\EA\E7\CC^j\A7u\D7\8BR0\EBO\D5}\FA\9E3)\0B\11\E1\AD8\0F\99%J\0E\F8\AC\F3`\8E0G\9FH\81\95\11\F8L\8AU\C0\93\E1,H\CB\81\C4\7FM2\A7Z\15\CE\CBY\\\8D\86\AE,\CE\19!\0Dm84\829s\F6\99n\B0\93\D6\1E\9F\ED\EF\EE\1A\95\CE\FEvLyi\F2o\09\E1\E1\F3\C5\BF\C0\F6\CC\E5v\BE\01\A6\7Fa\90HS\CC\D1\ACY`}\9D\BE\B8\EF\B1v/\D61\A7\10n+\CA\9A\C1g\E2\A2\82.8{m\F0\98\F87\8F\89yYq\96\CE\88\8C\A1s\12\15\ED=A\19A\AD]10\FD)\F6\8B\FA\DBi\EB\17Q\F4\E2W\1A8\B4z\F4\E2\D7\AFjA//\A4}\90\CD:E\F5\F7\BF\DF\FE|\95\1DI4_$P\F6\D1r\17\D2\E8\DC\09\AE:\1F}\01\FFb\F7N\A8\9Fx\94\08\B6t\D0\B6\C7!\CE\DEf\B7\06\08\DC\FB\F60\82@\B8~2\9B\B0e?Rx\A9ZL\B6\FEb\0E\12\14\D7-\82\02\EC~=\00\EA\C7{&b\DAHF\E9X\C0\FE|\89\BDkOE\DAS\BD\FD\D8\1B\B8\06\00\F5v\DFZXi\F6\8F\BC\EF\B1\EF\E3#\0ED\00\DA:\04\EC\EF\D4\\\A0\1D\A8\EAA\F2s\DC\C4#\9E\D0g@\88\CAQ\CCX1\7F\12\F8A\1D\A8\C6E\C8f\99s\98\0Bi\BC\91k\F8\09\D5\92\CD\B1\C4g^\84n`a,\22\E4a\CB\B6\A8\DAc)\A1>E\E2\B5\80\96\BE\D4\C7\1FP\9F\8F\F6\10\09\A5\E2\94\BB\00P\FCG.\83\08\163\0FV\B0\E2\A9V!\98\CAl\F3.0\D5\D4\89\B8\C0\14\A5\EDh\85%\EF\19\9F\82\E8c\FE\C9B\89\1Do\84;\AD\B6\F2R\14\9E\ED\E5\8F \A4\13~.\0CYkY\92;\85\8B\B1\EB\C0f\DC\01\C0\0C\10>\0D\F6<r\87U\97\DDa\13\BAR\CCt#\C4\EDay\AA\EE\96Is\D4^\D0\A0\B0\8E\DD$\D6\D3\90Y\F54\0A\C2\CF\AE\9E\04\DF%=\94I\0E\00LI\F03\DA+Q\1F\F7\CC\7F*\A9\0F\B3\AB\9E\DF\9B\E7\1Ca\18\05w\C6\B8\9F\D9s\16>\81.G9e\80}\CA\A2F\F7\F5\B5\22\8CR\99<\C7\934\C3\E8\1D\19>L\9FEIDJe\BC \C5\F0\95\CAn#\9D\8F,\01Ayl\90+\A0\D5\D0=\FB\85\B2\1A\AE\A9\1A\D3\83\B8\164Ib\14@F\F33\A6\E5\92\FF\0B\89\8C\84H\DF\B5\83\BE\7F\FF\E7(\F9\D9\07\FEk\E8\C6\C7\DB]\07\E1\09\10h\C3\9D\AA3Ymi\22ui\DE\F7\D5\9F\0F\ED\F9\93jO\E2P\8D\BA\B9\00\A7\DD#<\A3'\CC\09\9E\C2&\CB\0Cdb\A7\A5\E9gW\8F\AB\FBnu\D17\9C\BB\03\05\FE8\22\B0p\D3\A4S\B2\EEG\81\95\AE\82\BD\EB\A5\A1l5e\86\A3O\D8\E6\EE+c\B2\19\A3V\87\DD<e\FCk\F45o4\C8\01\BD\80\D8|^\0F\F5-P*:\15\A0\E8@\00\80s\02\BDg\83*\B7S\84\8E\C7\CB@\C8\EC\84\AF\07\B7\1F\A6\B3\D5\F7\C7D&M<\A4\FA,(\FC~f>\14@u\B8\ADH\18\15ib'\8F7\01\95\EB\0F\99\E1\A8\8F>\C3\ACq\12\A2\02\06\AE\9E\F2n\13n\0C\B51\13\AC\18\9D\E4\12\8Bi(\E4le\8B\85\D96\14<\B8\93,<\9A\EAW6\CC%\A3K[Z\B7\A3\E8&\D5\D5\FC\9D\B7\82,\EA\DD<-=\99\D3\CF\F2V:\D8\A1x\1AH5\E7\0C\99\A1\ECh=I\F7T\E1\FFU\0B\B2rWE\D9P\F7\19U\0C\EF\8B<\E1\EFpl6\0Cu:I.\BA'\EB\A5Z-\F8\81\E7\13\90\07>\A7\F9\1E\00\86\0F\1D\E0\B9\AE\B1\02*\0E]\C3\FC\EB\FE\07\83c\90\19S8\00\87>\8D}\0Cb\C44\80C2R\03D1d\84B\0C\BD\9C\C4P\0CC\93\E9A\DD\0B|\CFc#\F4\0A2wL\E6\04\A3\84\D0a\B8\1C\D3\\D]\0C\BB\0D>\82\D2&\DF\E0bV>C\A1@\B6\07\96<\E5D\BAb8\E4\CC-\96n\82h\F6\C5\E1\907\90\BC\BF&y\07\89{MR\E8:M\15\ADC.6P\1F\F1^\1Am!\C5a\1D\AA\EB&\DD\C8B\FB\D2\85<\A8G\DA\13\C9H\0D%\08z\FE\1D\FA\C5@\D7\99=\F6\0C\F1=\A6\02r\FF/\E8\CBG\08O7\DDw\9E\BB\BB\D6\05\99\BF\DF\A0_\E2\89:\93\BA\93!\A69\07C\8C\F6$\F1\88\F9\CE#k\10eY4cC\E7\E0\99%h\B2\EC\CE\EA\C6\7F\B7g\85~\18\06\BA\EB\0A\FA\B7\AD\DD\ED\94\A5\B6\D7.\01\A6\E2\8C\C0\00\09\0A\07\B6\\le\D0i3J'\C6_\1F'\8FmPq\93;\D4[\1Eg\22G_\D4\C6\95\DB\F0\B06\F7\FD\99\B9\0Ceml*\B2\86\F5\AA\D0\B6;\98\F8\C0\C0\EB\B8\D1Pf\94\C3\BA3CLvX\80\C4\92*H\A4f\EA\BEI]-\D4K\97\FD\F7\E7\D4F\E8}v3\92\C0\DA\FF\AB\F9\B0m\F3\F4mY'm\AB\FD\F7'\D2\F6-\FFzzl\1F\FE\B7\F3d\FB\EC\B7'\CC\E6\A19\DAW\0C\00\9D\D9l\A5F\96tQ\C8\0F\A5[a\C4ij?\D2\FFaD\C3\C3/\CC\8F?\A3<~\EE\002?\E2Sq\01\F1V\98\DFu\06\F1{{8\C5\81\88'\8D\FE.\83[j~\ABc\94=l\DA\8AO\8C\80\01\8D\CB<\FE<Ok\FEN\D0\7F\17\F8\D4\F8\AB\D9%3\0D/lI\104\990\AA\D1\17a\EBQ\F6X\D3~\81B=\F6!\8D\B6\9E\B2x\CBZz:\D3n\BE<\E2fxv\B6\10\D8\F0\EC\863\81\F1o>B\CE\84\F6\CF.ITL\08\C5d\8F\D2-(\C3\9F\87O\A8l2\CBo\D0M&Z:\A9nZv|X\DD\B4\F5+\A4z\85\DC\CB\C0\82j\08l\DA\F9@$\BB\CC`@\9F\\\C3htCrxK8\A8i\C0M\14\C4\A1\A3\D9\B0\C2\E8\08\0A\\&01bh\BC\B2lCv\E6,\93\F30t\12\08\7F\0D\8B4Y8+sG\98>\E5:]\C6@\F9\B4e}){f\B1\F0\9B\9E\1F\F9V\842}&\1F7\C4.z\C1,\BE\B4\8F\A6M\BF\04.L\EE\90\9D\E7`#\1D\AB1\C3}\D3\8CJf\C8\B0\99\0D\0B\97Q\CF\B9\F7\8AqB\A1\93+\81\C9\E7\D7\86\D9\B5l\D1\98\83\EC\F9'\C9q\0E\BD\F9\F79\F4[\C5\BE\CD\A07\86}\D5\0D\D64rH\FB`2\81\AD\91\0C\03 \8C\C9\F0\D0\C89\F0\D0\B8\AFXc\DCW}r=l'w\D2\97L\BF\DC\7F\E4\CD\A3m\B4\F5\E5(\9A/Gq\DBz\A6\B7\FFu$w\06\AD\F9d\07\AA-\B9\B7!\09\FB\99L6\D7b\99Q>k\D8\12\03M\A4!\C9\92\B1#m\8E\1D\A7\8B\1B\F7z\E6;E\1E\BCq\CD\C6\89\\\B2%\CDI{\8D\91\80\D0\E4\B3\C0z9\8C\900 \8D;'A\12\82-\D3\DFgR\98\CC$+B@\19\8Fi\C4\04\B0^\C2\94\81>\9E^w\7Fb\A0\B9\A4A\BAwU\11\13J\E9W\9F\D6\\\B7\A7NHHzv%\8B\E9\BA\1Cd\AE\88\C0\\\A7mH$G4\15\9F\999\BB\C4\B2B\\\16f4\CC\8C\CFZ\E7R\97\C6\8A\10\9F\ED|\80\04\E233CW~\D0}5\8D\E8=\1CA\08E\F1\E9\93x\F0gfS\F8sd\F6\BC\FC\CEa#\0ET\FE;Ts\FD-\AAo\BD1cT\E4\A8\BE\D3/\FB\DC00CI\B7T\84j\11\B2(\F3\88\D8\E4\03d\BB-i\99\DB\1C\90\1D\81\0EN\AD}d\84%\83e\C6\C1\F4c\D7A\8F<\A9ld\C1\A0\1E&\80mn\99\E3\93\18\C5%\97\A6\22\BC\CD\DC\DAS\8F\8E\CEB\B9\E5L\08>\\\B84\0A\06`\C8\8DY\DE\D4\D5\8F\0F\A1\B2\8D\F6n\AC\E8(%h\A1\95\DB\9D^\AAY\19\B7O\DA\8Dr_Jz\AA\\\EF\CB(\22\83\EF\DE\83\926\C0\97\15\DF\F6\FC\D5\AE\09\A1m\DF\BCh\A5ld\BB2/\9Dlv\19\DC0#\81\DF\EDaYe\B2BP\D2p\C9\01\F8tv}pSQ\BE\8D\C2Z/\9B\1E:\99\A8\AC\CA\A8\9E\ED\AB\CB\A9\86\8CD!K\0B]=\97Cw?\E2\0C\A6ay\98\0B\ABY\BA\D1G\C0\10\82\DFD\E3\AD\F9'w%\06\1B\BC\AE\08g\8Ds\07\D1M\CB\C2\87\D2\A0\91\B4\18\E7\BFAX\D8}\C8\DE\19f?{\BA3\C1^\0B\BB\7F\95\ED]I\DB\02X\10\D7qv\D1 \BAf\85G\0F\BA\95>\F2\E0\A9n\EFG\86\AC\E4\A7\10\B9q\DB\9B\89\DC\FB}VS\C9\B1\C3\E0\04m\D7\95\CB\84wu\9C\CF\\\AF\E1\F9\CC\C9\06\DAiY.\E8\D9\DCB\E1x\1Ajt\B0\E9\1B\AC\B6@\AA\83\B5\1Ak\AE\80m\0FE\E4x\C4V>\99\92O\90\1Ep\16\03\E3\A2\93:O\BC3zp\F4\92t\DF{\81\B9L\AE\9A\F3\CC6r\D5'ty\05\A8\F8k*\DAy\07U\F3\9AJ.J\12\84\E7\0C\A5\EEC\E4\A19/\D7:Q\E1\1BD{MGu\D7\\^w\E3b%id'R]L\E7\E5\99\EC\8B\E3\CD\A9\80qBe\D8F@\FC49Lx\A6\CDaZ`2\D9\8B\00J\D6\CB\9Bh\EE\17\92`~\D1\06\DE\EEs\A1^\00#cr{\CA\05`+\BA\84\92\146%\AB\AEw\9C=\C9\DB\A6<5.c\BE\9E\AE\8D\D5\E1V\96\19\ACo\CB\B0\D7\E1Zw|\A0\94\90\AE\9D\1E\E7\F6Pt\DD=\7F\82J.\93\90\9C\19\9D\B2\EBu\CD0\10\DD\9A=\EE\E8TF\F8\D9T\E3\0C!\00\C8\B0I\A0\00\B9\E8\B8\08\EA\8B\04\C9\E6\B1\CA)\8B\DA\9A\07\EB\A2\03_\FBK\D0\9C\BC\1F\C8D\E9LU\BD\DDtt\99\83\F1\F1>\17h\E6o\10\C5\D718?\C2\89\F0\84\99\F3\A8\B9p\99\E9u\86\D6\07B\1D!\CC\11\C2\1F \FA\E6[\9E]\E2'\E1\C1\FF\1F^\1D\DA\F1\07\96\B3c@e\FCN\18\1C\86\D2aX(-{,.7)\B7\E2H\9B\8E\A0\DA\87JP_\97\00\15]b\B3\C1<\13L\A8\ECT\B8C\F0\B0K\F7\DC\1B74\BB[\E6\DC\90u\97\08\1Cer\EF\82;\CE\F0\AF\83\9E\CE\BC^\00\CD\C9\D2\A6\953qv|;\D2,\00\9C\91\B0S\84d\7F\93g\00\B9(\8F!\ACJ\F8\EF\B9*\99\CF\03\82uY\A3\83Q\8Fm\16\F7\19\F7\82 .\F1\86/L\BA{\8A\B7KnvqcM\D6\A9\B3ctFi\\F\CD\CE9\03\06]\1E\FB\D5\1Cu\AE\89\86\1C\80\15\93\C92\D6\0D;oS\D8\DDa\F2\02a\9C\8B\8D\0Dw76RiwX\A9\E4\D0A\A3/\D7\0F\D1_\D0e\96\EAq\A8\D0FX\A5\9F\F1\22\E7\9BCJZ\F5\B7\94i\9F/\98\DF\00\BB\CC\16\C6\BD\91u\B9\DF\B6\B3Ox;]\8D\B0\D0Z\C1\CC\F2\FD\E1=i\9E>\DF\E6\CE\E8\AF{G\CE_\0E{\B1\AC'\9BN\8C\F5\F6\86\84\A9\A6\03\EB^z\B2\C52\C9\1B\80\95\8F\938\A8\98/(\A6\9F\99\8B\8C\EEP\FA\9B\08\EC\0A\8C\AF\A8|\F4n\B1\91\81\CF\0C\17`n\BA\87<\DD\BA!\86\BF\B7\18taG'\A8\DD\A5M\D6K\CD\CF\176\09:\D1L\13\FC\929lk)Ay\10\FE\A2\ED\D9UD\E2\E6\D7\92\07\82\D7\02\07\82\EE\ABa\BC\9B\05\F3\97b\07\1AuH\B3h\F5\F9+\A9)\FC\D6\9B\F2q\BE\B1\7F\9F\D4j.x\D6\C1\D7K%\F8:\B4\1C\C84~\03X8\0B\05]\0E\C3a\EC\9F7\C0\A6G \09\E2s{4\E1J\E4*\A0<\8F\D5#A\BC\A0\0Bdm.\1D\D1RTz\C1z\B1\E7&\EAAj\F0\97\EE^\8Df\C5\13\1B\1B \04\F1\F1\C5\0A\01,\D7\BC\9A\F0\F7\10\BB\CB\92\87=\B9\7F-\16\A3q\F1\08}\B2\1F\83\E7J\82\FA\8E=\AC9*\FBS\E6\CC\AE\BA\1B\18\94N\04~?\0E\0A{\BA&8\FCl\EB*3x\EB-\98\94\A0\E3a\ECjk\C5\10/5\B5\F4w\84\CF\9C\22\DF\1E_}('\9F\09S{+\F1\03\84\B7;i\B4,C:\0A:s\E9mz\F1\1A\C4Y\C9\01s\C7G~6\C5\FA0\97\95\81\AB\11\0C|\7F\BFS\CC\B3\1A~\08\96@t\AD)'\D6cY.\BC\E7\D9\CD0,\06>\BF\A7\BE\A0V\C3\1D\86\03\A9Z\9F\89-:\A9\BC\E0\A7\12\DDl\14\90$\99\97L^G\8E.\A3Z:1h\15\\\17?\CE0&Atx3\19\A1\FC^\FE\C6\F7\B7\D7W\87\8F_^\EC5\B6i\AF\00\EB\8B\F0\93\C7\F4\F1\A4\EAz\82\8D\EA#}@\B1\0F\EA\07<\B9\EBE\A4\F1\A5\80(F\9D\D91#`\98J\A3\95\CBG\A3\10\A2e\04q\09\A8O@.US\0Bl\CC\1C3\1A\E5g\B5L\B6q\BC\BB\86\E3(\06\0E\97\A9\18\A7\DD\15N\82\8B\E5\8Aq \9A\CC-\22|M\B9\1B\A7\F6%vw3\12\C1\D7|\0D\A0N\DB;\97\08uj\00\95\C7\0F\A8\F8\81e\FE\03cb\8C\A1\A6\\\0Cu\04\F5\F9\FEz\7F\1F\8Bi\9BC9N\D3XQV2\0Aqs\CBe\D3@\1Cr\EE\0B\D6}\C1\BBW\CC;\E0\DE+\F6\BD\E0\DF\01\03\0F8\F8\0D\16\1E\F2\F0\98\89s\BE\D1qpFp8K\22\BC\FA\96\A7\22\AFn\FC^\13/Z\98\E8\96\CA\D5\89\0A\C5)\89\19\F2&\1C\18\99\F8\E3\9A\A0;ew\B4\B6\DC\09\DC\E6\89\D5N\9D2\97\CA\11l\CAD.\16O\98\D9+\B0[.\A2\A6\8BI\D7\DBk\DCCU\DBo\05\E0&=\BF\D6\B0\93U\8F\BBG\A88\B9&\DF9`R\81&\D8\E4\DC\E1\13\FE\10s9\C2\F8q\93\EEM\B5)\C9\E6\A6\D3m\F7\FC\ED\CB\FB\E1\BDE\17\96\A0\B4V\00O\8F\1D\07*_\D8\FC<\D0\E2J\AA^\9EW\96\07?\8C\99*\80.\B5\CB\DD#K\D9\D2=\19\19\0Ed\8B\07\BB\DC\D2\9E8t\A1\A1\80?\BC\A6\F0\EC\8AKS\BFB\9A\FDQ\A9\B0\ED[`q\BA+*\14U\11~\16\A1\B9\D7\EF\CF\85\E2%\95h\A3du\91M\07\1B\FB\12]\0Ds\07\9F\DD\8B\8E\A9\AD\90\A2vQl\C7XT/*\0D\D3\97\04\BC\BC\BA\E4\ED\B2\FD\DF\98\04\1E\12\07U&\F9eEr\C2\BA\E4\99u\87=\94\8E\1E]h\A8\81i\FF9\10\145\EFA\10\94\CC\8Dr%\01/d>f\EC\B4\00\BFd\92A\C2\91La[\8AB_L\D6O'\F0\C5\BC\1A\81\CFL\BB\80A\17$\BD\0C\FA\01\98\DD\E4\BF\C4q\97\CB=\EErqF\03z\8D\B0\0Bp\A1\F0\A9\D0B\D2`\8B\D6\90\CEi\CF:T\E7\AFl\BF\193{\E9\1BJ\E1\15\F8[o@\B5\0C\0A\93\A0\B7,x\DA@\C3\F7\11\EC\96\01\DE\E2\17\B1\F8\88\06[\D5\CD\CC\E2\9B\09\9C\EC'a{\BA0\82\AE>\05E\AA\99\01c\C5\\\B3\F4\8E\E92@\E7\FA\E5\05\B7\9A\8FK\08`M\9E\9F7y\86\F3\9A_8\C7\B7\D9\C0a}n\CA\CE/\FF\97\12\0B\C5\D1\1D]\C0\AC\14\D9\EB=\17\D4\E5;\FD/f\11\1F\18\01`i!\BE\97\9Dyx\1F\DA\B8RX\AB\97\13`s\EEB\BC\B5\8F\84\9As\16\7F\00\CE\A7\C8q<\DD\8D\99P:\C4M\F9\93:\B3\DC^\00:\93\07;g.R\C7\E8\8A\99\8B\9E\90\EA\10{\9006\E7R\FB\9E\0D\C6\CAe\EE\1FC\DD\ABW\0F\BA\97\C8\FA\B8\9B!Q\B9Z&W\A6\B7N}\F5h\E6\99\7F\BBI\B1I\99Vk\B3h\C6\BF\FA$\FF\A2_\87\19\83x\EC\BFu\ED\11l\983\F7\0C>{\F7\C8\7FQEr(\8C\862\8D\8A\E8\DE\F0\D2\8D\1D\94\CC\AC#u\A2\D7yjbm\0F\C8\BA\D7\15_\B57\D3E\C1\EBS\1B\9D\B2\E6\1E\CE\99\EB7$T\16\C0s~\1D\02\F8q\0F\F2l.\F9\CB\A08\CCS\E2\E2@\A3g\E6o\10\B9\0Co\E2\BD)\02,_\E2\8Et\DD\8A\8Evd\08\B0`\C6\DCI\C5\9B\EC{V\01\B7\D0L*\AB\11\8E4\C5\E5\B9\F39\D3]\B2\FA\12.+\9E\AF\B7\EDu\F5T\9DcK\02\80+\1B\F6fZ\00\\\A3\FFm\0F\EA\E1e\B7\1FQ\0B7\C8\F5\89\CE\91'\FF3\9B'\E6\FD\10\F3\F3\10\F3\D7!\E6\D7!\E6\F7!\E6\EFC\0CK\BD\B9\1B\807\F2\E9\96\13\FC\F1~\1F\D5o\99\FF\07\D9m$Z{\CB#\94\CA\\\1F74'\D17e\B8B\86\92LH\A6\C3;\FF\1F\FE\EC\14+", align 16, !dbg !2583
@.str.2.246 = private unnamed_addr constant [47 x i8] c"Error while uncompressing table: zlib error %d\00", align 1, !dbg !2463
@.str.3.247 = private unnamed_addr constant [41 x i8] c"Expected uncompressed length %d, got %ld\00", align 1, !dbg !2468
@mime_entries = internal global [981 x %struct.list_node] zeroinitializer, align 16, !dbg !2573
@.str.4.252 = private unnamed_addr constant [9 x i8] c"text/css\00", align 1, !dbg !2470
@.str.5.253 = private unnamed_addr constant [10 x i8] c"text/html\00", align 1, !dbg !2472
@.str.6.254 = private unnamed_addr constant [11 x i8] c"image/jpeg\00", align 1, !dbg !2474
@.str.7.255 = private unnamed_addr constant [23 x i8] c"application/javascript\00", align 1, !dbg !2476
@.str.8.256 = private unnamed_addr constant [10 x i8] c"image/png\00", align 1, !dbg !2478
@.str.9.257 = private unnamed_addr constant [11 x i8] c"text/plain\00", align 1, !dbg !2480
@.str.10.258 = private unnamed_addr constant [25 x i8] c"application/octet-stream\00", align 1, !dbg !2482
@.str.11.261 = private unnamed_addr constant [7 x i8] c"200 OK\00", align 1, !dbg !2484
@.str.12.262 = private unnamed_addr constant [20 x i8] c"206 Partial content\00", align 1, !dbg !2486
@.str.13.263 = private unnamed_addr constant [22 x i8] c"301 Moved permanently\00", align 1, !dbg !2488
@.str.14.264 = private unnamed_addr constant [17 x i8] c"304 Not modified\00", align 1, !dbg !2490
@.str.15.265 = private unnamed_addr constant [16 x i8] c"400 Bad request\00", align 1, !dbg !2492
@.str.16.266 = private unnamed_addr constant [19 x i8] c"401 Not authorized\00", align 1, !dbg !2494
@.str.17.267 = private unnamed_addr constant [14 x i8] c"403 Forbidden\00", align 1, !dbg !2496
@.str.18.268 = private unnamed_addr constant [14 x i8] c"404 Not found\00", align 1, !dbg !2498
@.str.19.269 = private unnamed_addr constant [16 x i8] c"405 Not allowed\00", align 1, !dbg !2500
@.str.20.270 = private unnamed_addr constant [20 x i8] c"408 Request timeout\00", align 1, !dbg !2502
@.str.21.271 = private unnamed_addr constant [22 x i8] c"413 Request too large\00", align 1, !dbg !2504
@.str.22.272 = private unnamed_addr constant [34 x i8] c"416 Requested range unsatisfiable\00", align 1, !dbg !2506
@.str.23.273 = private unnamed_addr constant [17 x i8] c"418 I'm a teapot\00", align 1, !dbg !2508
@.str.24.274 = private unnamed_addr constant [26 x i8] c"500 Internal server error\00", align 1, !dbg !2510
@.str.25.275 = private unnamed_addr constant [20 x i8] c"501 Not implemented\00", align 1, !dbg !2512
@.str.26.276 = private unnamed_addr constant [24 x i8] c"503 Service unavailable\00", align 1, !dbg !2514
@.str.27.277 = private unnamed_addr constant [12 x i8] c"999 Invalid\00", align 1, !dbg !2516
@.str.28.282 = private unnamed_addr constant [9 x i8] c"Success!\00", align 1, !dbg !2518
@.str.29.283 = private unnamed_addr constant [39 x i8] c"Delivering part of requested resource.\00", align 1, !dbg !2520
@.str.30.284 = private unnamed_addr constant [41 x i8] c"This content has moved to another place.\00", align 1, !dbg !2522
@.str.31.285 = private unnamed_addr constant [52 x i8] c"The content has not changed since previous request.\00", align 1, !dbg !2524
@.str.32.286 = private unnamed_addr constant [37 x i8] c"The client has issued a bad request.\00", align 1, !dbg !2526
@.str.33.287 = private unnamed_addr constant [53 x i8] c"Client has no authorization to access this resource.\00", align 1, !dbg !2528
@.str.34.288 = private unnamed_addr constant [41 x i8] c"Access to this resource has been denied.\00", align 1, !dbg !2530
@.str.35.289 = private unnamed_addr constant [58 x i8] c"The requested resource could not be found on this server.\00", align 1, !dbg !2532
@.str.36.290 = private unnamed_addr constant [52 x i8] c"The requested method is not allowed by this server.\00", align 1, !dbg !2535
@.str.37.291 = private unnamed_addr constant [60 x i8] c"Client did not produce a request within expected timeframe.\00", align 1, !dbg !2537
@.str.38.292 = private unnamed_addr constant [33 x i8] c"The request entity is too large.\00", align 1, !dbg !2542
@.str.39.293 = private unnamed_addr constant [73 x i8] c"The server can't supply the requested portion of the requested resource.\00", align 1, !dbg !2544
@.str.40.294 = private unnamed_addr constant [56 x i8] c"Client requested to brew coffee but device is a teapot.\00", align 1, !dbg !2549
@.str.41.295 = private unnamed_addr constant [74 x i8] c"The server encountered an internal error that couldn't be recovered from.\00", align 1, !dbg !2554
@.str.42.296 = private unnamed_addr constant [48 x i8] c"Server lacks the ability to fulfil the request.\00", align 1, !dbg !2559
@.str.43.297 = private unnamed_addr constant [57 x i8] c"The server is either overloaded or down for maintenance.\00", align 1, !dbg !2561
@.str.44.298 = private unnamed_addr constant [8 x i8] c"Invalid\00", align 1, !dbg !2566
@.str.303 = private unnamed_addr constant [3 x i8] c"%f\00", align 1, !dbg !2588
@.str.1.308 = private unnamed_addr constant [5 x i8] c"&lt;\00", align 1, !dbg !2591
@.str.2.309 = private unnamed_addr constant [5 x i8] c"&gt;\00", align 1, !dbg !2593
@.str.3.310 = private unnamed_addr constant [6 x i8] c"&amp;\00", align 1, !dbg !2595
@.str.4.311 = private unnamed_addr constant [7 x i8] c"&quot;\00", align 1, !dbg !2597
@.str.5.312 = private unnamed_addr constant [7 x i8] c"&#x27;\00", align 1, !dbg !2599
@.str.6.313 = private unnamed_addr constant [7 x i8] c"&#x2f;\00", align 1, !dbg !2601
@.str.7.320 = private unnamed_addr constant [38 x i8] c"/home/raj/lwan/common/lwan-template.c\00", align 1, !dbg !2603
@__FUNCTION__.lwan_tpl_compile_file = private unnamed_addr constant [22 x i8] c"lwan_tpl_compile_file\00", align 1, !dbg !2605
@.str.8.370 = private unnamed_addr constant [7 x i8] c"munmap\00", align 1, !dbg !2607
@.str.9.343 = private unnamed_addr constant [14 x i8] c"Out of memory\00", align 1, !dbg !2609
@.str.10.371 = private unnamed_addr constant [24 x i8] c"Expecting closing brace\00", align 1, !dbg !2611
@.str.11.358 = private unnamed_addr constant [23 x i8] c"Unknown variable: %.*s\00", align 1, !dbg !2613
@__FUNCTION__.parser_push_item = private unnamed_addr constant [17 x i8] c"parser_push_item\00", align 1, !dbg !2615
@.str.12.367 = private unnamed_addr constant [27 x i8] c"Could not push parser item\00", align 1, !dbg !2617
@.str.13.369 = private unnamed_addr constant [34 x i8] c"Could not compile template ``%s''\00", align 1, !dbg !2619
@.str.14.364 = private unnamed_addr constant [15 x i8] c"expecting `}}'\00", align 1, !dbg !2621
@.str.15.365 = private unnamed_addr constant [43 x i8] c"Couldn't find descriptor for variable `%s'\00", align 1, !dbg !2623
@.str.16.366 = private unnamed_addr constant [44 x i8] c"Could not push symbol table (out of memory)\00", align 1, !dbg !2625
@.str.17.362 = private unnamed_addr constant [44 x i8] c"No chunks were emitted but parsing end iter\00", align 1, !dbg !2627
@.str.18.363 = private unnamed_addr constant [25 x i8] c"Could not find {{#%.*s}}\00", align 1, !dbg !2629
@.str.19.360 = private unnamed_addr constant [21 x i8] c"unexpected {{/%.*s}}\00", align 1, !dbg !2631
@.str.20.361 = private unnamed_addr constant [37 x i8] c"expecting %s `%.*s' but found `%.*s'\00", align 1, !dbg !2633
@item_type_str = internal global [13 x ptr] [ptr @.str.21.345, ptr @.str.22.346, ptr @.str.23.347, ptr @.str.24.348, ptr @.str.25.349, ptr @.str.26.350, ptr @.str.27.351, ptr @.str.28.352, ptr @.str.29.353, ptr @.str.30.354, ptr @.str.31.355, ptr @.str.32.356, ptr @.str.33.357], align 16, !dbg !2635
@.str.21.345 = private unnamed_addr constant [6 x i8] c"ERROR\00", align 1, !dbg !2742
@.str.22.346 = private unnamed_addr constant [4 x i8] c"EOF\00", align 1, !dbg !2744
@.str.23.347 = private unnamed_addr constant [11 x i8] c"IDENTIFIER\00", align 1, !dbg !2746
@.str.24.348 = private unnamed_addr constant [10 x i8] c"LEFT_META\00", align 1, !dbg !2748
@.str.25.349 = private unnamed_addr constant [5 x i8] c"HASH\00", align 1, !dbg !2750
@.str.26.350 = private unnamed_addr constant [11 x i8] c"RIGHT_META\00", align 1, !dbg !2752
@.str.27.351 = private unnamed_addr constant [5 x i8] c"TEXT\00", align 1, !dbg !2754
@.str.28.352 = private unnamed_addr constant [6 x i8] c"SLASH\00", align 1, !dbg !2756
@.str.29.353 = private unnamed_addr constant [14 x i8] c"QUESTION_MARK\00", align 1, !dbg !2758
@.str.30.354 = private unnamed_addr constant [4 x i8] c"HAT\00", align 1, !dbg !2760
@.str.31.355 = private unnamed_addr constant [13 x i8] c"GREATER_THAN\00", align 1, !dbg !2762
@.str.32.356 = private unnamed_addr constant [22 x i8] c"ITEM_OPEN_CURLY_BRACE\00", align 1, !dbg !2764
@.str.33.357 = private unnamed_addr constant [23 x i8] c"ITEM_CLOSE_CURLY_BRACE\00", align 1, !dbg !2766
@.str.34.335 = private unnamed_addr constant [4 x i8] c"tab\00", align 1, !dbg !2768
@__PRETTY_FUNCTION__.symtab_pop = private unnamed_addr constant [33 x i8] c"void symtab_pop(struct parser *)\00", align 1, !dbg !2770
@.str.35.359 = private unnamed_addr constant [25 x i8] c"Could not find {{%.*s?}}\00", align 1, !dbg !2773
@__FUNCTION__.emit_chunk = private unnamed_addr constant [11 x i8] c"emit_chunk\00", align 1, !dbg !2775
@.str.36.330 = private unnamed_addr constant [30 x i8] c"Could not emit template chunk\00", align 1, !dbg !2778
@.str.37.344 = private unnamed_addr constant [29 x i8] c"unexpected lexeme: %s [%.*s]\00", align 1, !dbg !2780
@left_meta = internal constant [3 x i8] c"{{\00", align 1, !dbg !2784
@right_meta = internal constant [3 x i8] c"}}\00", align 1, !dbg !2797
@.str.38.337 = private unnamed_addr constant [33 x i8] c"unexpected action close sequence\00", align 1, !dbg !2782
@.str.39.342 = private unnamed_addr constant [42 x i8] c"unexpected EOF while scanning comment end\00", align 1, !dbg !2787
@.str.40.338 = private unnamed_addr constant [37 x i8] c"unexpected EOF while scanning action\00", align 1, !dbg !2789
@.str.41.339 = private unnamed_addr constant [35 x i8] c"actions cannot span multiple lines\00", align 1, !dbg !2791
@.str.42.340 = private unnamed_addr constant [25 x i8] c"unexpected character: %c\00", align 1, !dbg !2793
@.str.43.341 = private unnamed_addr constant [26 x i8] c"expecting `}', found `%c'\00", align 1, !dbg !2795
@__FUNCTION__.parser_shutdown = private unnamed_addr constant [16 x i8] c"parser_shutdown\00", align 1, !dbg !2799
@.str.44.321 = private unnamed_addr constant [19 x i8] c"Parser error: %.*s\00", align 1, !dbg !2801
@.str.45.325 = private unnamed_addr constant [55 x i8] c"Parser error: EOF while looking for matching {{/%.*s}}\00", align 1, !dbg !2803
@.str.46.327 = private unnamed_addr constant [59 x i8] c"Parser error: Symbol table not empty when finishing parser\00", align 1, !dbg !2808
@.str.47.328 = private unnamed_addr constant [33 x i8] c"Parser error: unmatched negation\00", align 1, !dbg !2813
@.str.48.329 = private unnamed_addr constant [30 x i8] c"Parser error: unmatched quote\00", align 1, !dbg !2815
@__FUNCTION__.post_process_template = private unnamed_addr constant [22 x i8] c"post_process_template\00", align 1, !dbg !2817
@.str.49.331 = private unnamed_addr constant [7 x i8] c"malloc\00", align 1, !dbg !2819
@.str.50.332 = private unnamed_addr constant [38 x i8] c"Variable must be string to be escaped\00", align 1, !dbg !2821
@.str.51.333 = private unnamed_addr constant [28 x i8] c"Invalid variable descriptor\00", align 1, !dbg !2823
@.str.52.334 = private unnamed_addr constant [67 x i8] c"Template parsing done, reallocating array from %zu to %zu elements\00", align 1, !dbg !2825
@apply_until.dispatch_table = internal constant [11 x ptr] [ptr blockaddress(@apply_until, %39), ptr blockaddress(@apply_until, %65), ptr blockaddress(@apply_until, %85), ptr blockaddress(@apply_until, %110), ptr blockaddress(@apply_until, %130), ptr blockaddress(@apply_until, %259), ptr blockaddress(@apply_until, %358), ptr blockaddress(@apply_until, %150), ptr blockaddress(@apply_until, %208), ptr blockaddress(@apply_until, %231), ptr blockaddress(@apply_until, %429)], align 16, !dbg !2830
@__FUNCTION__.apply_until = private unnamed_addr constant [12 x i8] c"apply_until\00", align 1, !dbg !2843
@.str.53.376 = private unnamed_addr constant [46 x i8] c"Coroutine is not NULL when starting iteration\00", align 1, !dbg !2845
@.str.54.377 = private unnamed_addr constant [43 x i8] c"Coroutine is NULL when finishing iteration\00", align 1, !dbg !2847
@.str.380 = private unnamed_addr constant [36 x i8] c"/home/raj/lwan/common/lwan-thread.c\00", align 1, !dbg !2850
@__FUNCTION__.lwan_format_rfc_time = private unnamed_addr constant [21 x i8] c"lwan_format_rfc_time\00", align 1, !dbg !2853
@.str.1.381 = private unnamed_addr constant [9 x i8] c"gmtime_r\00", align 1, !dbg !2855
@.str.2.382 = private unnamed_addr constant [26 x i8] c"%a, %d %b %Y %H:%M:%S GMT\00", align 1, !dbg !2857
@.str.3.383 = private unnamed_addr constant [9 x i8] c"strftime\00", align 1, !dbg !2859
@__FUNCTION__.lwan_thread_add_client = private unnamed_addr constant [23 x i8] c"lwan_thread_add_client\00", align 1, !dbg !2861
@.str.4.386 = private unnamed_addr constant [6 x i8] c"write\00", align 1, !dbg !2863
@__FUNCTION__.lwan_thread_init = private unnamed_addr constant [17 x i8] c"lwan_thread_init\00", align 1, !dbg !2865
@.str.5.389 = private unnamed_addr constant [21 x i8] c"Initializing threads\00", align 1, !dbg !2867
@.str.6.390 = private unnamed_addr constant [38 x i8] c"Could not allocate memory for threads\00", align 1, !dbg !2869
@__FUNCTION__.lwan_thread_shutdown = private unnamed_addr constant [21 x i8] c"lwan_thread_shutdown\00", align 1, !dbg !2871
@.str.7.406 = private unnamed_addr constant [22 x i8] c"Shutting down threads\00", align 1, !dbg !2873
@__FUNCTION__.create_thread = private unnamed_addr constant [14 x i8] c"create_thread\00", align 1, !dbg !2875
@.str.8.391 = private unnamed_addr constant [13 x i8] c"epoll_create\00", align 1, !dbg !2877
@.str.9.392 = private unnamed_addr constant [18 x i8] c"pthread_attr_init\00", align 1, !dbg !2879
@.str.10.393 = private unnamed_addr constant [22 x i8] c"pthread_attr_setscope\00", align 1, !dbg !2881
@.str.11.394 = private unnamed_addr constant [28 x i8] c"pthread_attr_setdetachstate\00", align 1, !dbg !2883
@.str.12.395 = private unnamed_addr constant [5 x i8] c"pipe\00", align 1, !dbg !2885
@__const.create_thread.event = private unnamed_addr constant %struct.epoll_event <{ i32 1, %union.__SOCKADDR_ARG zeroinitializer }>, align 1
@.str.13.396 = private unnamed_addr constant [10 x i8] c"epoll_ctl\00", align 1, !dbg !2887
@.str.14.397 = private unnamed_addr constant [15 x i8] c"pthread_create\00", align 1, !dbg !2889
@.str.15.398 = private unnamed_addr constant [21 x i8] c"pthread_attr_destroy\00", align 1, !dbg !2891
@__FUNCTION__.thread_io_loop = private unnamed_addr constant [15 x i8] c"thread_io_loop\00", align 1, !dbg !2893
@.str.16.399 = private unnamed_addr constant [31 x i8] c"Starting IO loop on thread #%d\00", align 1, !dbg !2895
@.str.17.400 = private unnamed_addr constant [37 x i8] c"Could not allocate memory for events\00", align 1, !dbg !2897
@__FUNCTION__.grab_and_watch_client = private unnamed_addr constant [22 x i8] c"grab_and_watch_client\00", align 1, !dbg !2899
@.str.18.403 = private unnamed_addr constant [5 x i8] c"read\00", align 1, !dbg !2901
@events_by_write_flag = internal constant [2 x i32] [i32 8204, i32 -2147475447], align 4, !dbg !2903
@.str.19.402 = private unnamed_addr constant [28 x i8] c"conn->flags & CONN_IS_ALIVE\00", align 1, !dbg !2941
@__PRETTY_FUNCTION__.process_request_coro = private unnamed_addr constant [35 x i8] c"int process_request_coro(coro_t *)\00", align 1, !dbg !2943
@.str.20.401 = private unnamed_addr constant [11 x i8] c"conn->coro\00", align 1, !dbg !2946
@__PRETTY_FUNCTION__.resume_coro_if_needed = private unnamed_addr constant [77 x i8] c"void resume_coro_if_needed(struct death_queue_t *, lwan_connection_t *, int)\00", align 1, !dbg !2948
@__FUNCTION__.resume_coro_if_needed = private unnamed_addr constant [22 x i8] c"resume_coro_if_needed\00", align 1, !dbg !2953
@.str.411 = private unnamed_addr constant [34 x i8] c"/home/raj/lwan/common/lwan-trie.c\00", align 1, !dbg !2957
@__FUNCTION__.lwan_trie_add = private unnamed_addr constant [14 x i8] c"lwan_trie_add\00", align 1, !dbg !2960
@.str.1.412 = private unnamed_addr constant [7 x i8] c"malloc\00", align 1, !dbg !2962
@.str.2.413 = private unnamed_addr constant [7 x i8] c"calloc\00", align 1, !dbg !2964
@seed_value = internal global i32 -559038737, align 4, !dbg !2966
@.str.426 = private unnamed_addr constant [38 x i8] c"resolved == NULL || resolved == rpath\00", align 1, !dbg !2980
@.str.1.427 = private unnamed_addr constant [35 x i8] c"/home/raj/lwan/common/realpathat.c\00", align 1, !dbg !2983
@__PRETTY_FUNCTION__.realpathat2 = private unnamed_addr constant [68 x i8] c"char *realpathat2(int, char *, const char *, char *, struct stat *)\00", align 1, !dbg !2985
@.str.430 = private unnamed_addr constant [11 x i8] c"LISTEN_PID\00", align 1, !dbg !2990
@.str.1.431 = private unnamed_addr constant [11 x i8] c"LISTEN_FDS\00", align 1, !dbg !2993
@.str.2.434 = private unnamed_addr constant [14 x i8] c"NOTIFY_SOCKET\00", align 1, !dbg !2995
@.str.3.435 = private unnamed_addr constant [21 x i8] c"/run/systemd/system/\00", align 1, !dbg !2997
@.str.4.436 = private unnamed_addr constant [13 x i8] c"WATCHDOG_PID\00", align 1, !dbg !2999
@.str.5.437 = private unnamed_addr constant [14 x i8] c"WATCHDOG_USEC\00", align 1, !dbg !3001

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @base64_encode(ptr noundef %0, i64 noundef %1, ptr noundef %2) #0 !dbg !3102 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i64, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !3106, metadata !DIExpression()), !dbg !3107
  store i64 %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !3108, metadata !DIExpression()), !dbg !3109
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !3110, metadata !DIExpression()), !dbg !3111
  call void @llvm.dbg.declare(metadata ptr %8, metadata !3112, metadata !DIExpression()), !dbg !3113
  call void @llvm.dbg.declare(metadata ptr %9, metadata !3114, metadata !DIExpression()), !dbg !3115
  call void @llvm.dbg.declare(metadata ptr %10, metadata !3116, metadata !DIExpression()), !dbg !3117
  call void @llvm.dbg.declare(metadata ptr %11, metadata !3118, metadata !DIExpression()), !dbg !3119
  call void @llvm.dbg.declare(metadata ptr %12, metadata !3120, metadata !DIExpression()), !dbg !3121
  call void @llvm.dbg.declare(metadata ptr %13, metadata !3122, metadata !DIExpression()), !dbg !3123
  %14 = load i64, ptr %6, align 8, !dbg !3124
  %15 = mul i64 %14, 4, !dbg !3125
  %16 = udiv i64 %15, 3, !dbg !3126
  %17 = add i64 %16, 4, !dbg !3127
  store i64 %17, ptr %12, align 8, !dbg !3128
  %18 = load i64, ptr %12, align 8, !dbg !3129
  %19 = udiv i64 %18, 72, !dbg !3130
  %20 = load i64, ptr %12, align 8, !dbg !3131
  %21 = add i64 %20, %19, !dbg !3131
  store i64 %21, ptr %12, align 8, !dbg !3131
  %22 = load i64, ptr %12, align 8, !dbg !3132
  %23 = add i64 %22, 1, !dbg !3132
  store i64 %23, ptr %12, align 8, !dbg !3132
  %24 = load i64, ptr %12, align 8, !dbg !3133
  %25 = load i64, ptr %6, align 8, !dbg !3135
  %26 = icmp ult i64 %24, %25, !dbg !3136
  br i1 %26, label %27, label %28, !dbg !3137

27:                                               ; preds = %3
  store ptr null, ptr %4, align 8, !dbg !3138
  br label %203, !dbg !3138

28:                                               ; preds = %3
  %29 = load i64, ptr %12, align 8, !dbg !3139
  %30 = call noalias ptr @malloc(i64 noundef %29) #17, !dbg !3140
  store ptr %30, ptr %8, align 8, !dbg !3141
  %31 = load ptr, ptr %8, align 8, !dbg !3142
  %32 = icmp eq ptr %31, null, !dbg !3144
  br i1 %32, label %33, label %34, !dbg !3145

33:                                               ; preds = %28
  store ptr null, ptr %4, align 8, !dbg !3146
  br label %203, !dbg !3146

34:                                               ; preds = %28
  %35 = load ptr, ptr %5, align 8, !dbg !3147
  %36 = load i64, ptr %6, align 8, !dbg !3148
  %37 = getelementptr inbounds i8, ptr %35, i64 %36, !dbg !3149
  store ptr %37, ptr %10, align 8, !dbg !3150
  %38 = load ptr, ptr %5, align 8, !dbg !3151
  store ptr %38, ptr %11, align 8, !dbg !3152
  %39 = load ptr, ptr %8, align 8, !dbg !3153
  store ptr %39, ptr %9, align 8, !dbg !3154
  store i32 0, ptr %13, align 4, !dbg !3155
  br label %40, !dbg !3156

40:                                               ; preds = %111, %34
  %41 = load ptr, ptr %10, align 8, !dbg !3157
  %42 = load ptr, ptr %11, align 8, !dbg !3158
  %43 = ptrtoint ptr %41 to i64, !dbg !3159
  %44 = ptrtoint ptr %42 to i64, !dbg !3159
  %45 = sub i64 %43, %44, !dbg !3159
  %46 = icmp sge i64 %45, 3, !dbg !3160
  br i1 %46, label %47, label %112, !dbg !3156

47:                                               ; preds = %40
  %48 = load ptr, ptr %11, align 8, !dbg !3161
  %49 = getelementptr inbounds i8, ptr %48, i64 0, !dbg !3161
  %50 = load i8, ptr %49, align 1, !dbg !3161
  %51 = zext i8 %50 to i32, !dbg !3161
  %52 = ashr i32 %51, 2, !dbg !3163
  %53 = sext i32 %52 to i64, !dbg !3164
  %54 = getelementptr inbounds [65 x i8], ptr @base64_table, i64 0, i64 %53, !dbg !3164
  %55 = load i8, ptr %54, align 1, !dbg !3164
  %56 = load ptr, ptr %9, align 8, !dbg !3165
  %57 = getelementptr inbounds i8, ptr %56, i32 1, !dbg !3165
  store ptr %57, ptr %9, align 8, !dbg !3165
  store i8 %55, ptr %56, align 1, !dbg !3166
  %58 = load ptr, ptr %11, align 8, !dbg !3167
  %59 = getelementptr inbounds i8, ptr %58, i64 0, !dbg !3167
  %60 = load i8, ptr %59, align 1, !dbg !3167
  %61 = zext i8 %60 to i32, !dbg !3167
  %62 = and i32 %61, 3, !dbg !3168
  %63 = shl i32 %62, 4, !dbg !3169
  %64 = load ptr, ptr %11, align 8, !dbg !3170
  %65 = getelementptr inbounds i8, ptr %64, i64 1, !dbg !3170
  %66 = load i8, ptr %65, align 1, !dbg !3170
  %67 = zext i8 %66 to i32, !dbg !3170
  %68 = ashr i32 %67, 4, !dbg !3171
  %69 = or i32 %63, %68, !dbg !3172
  %70 = sext i32 %69 to i64, !dbg !3173
  %71 = getelementptr inbounds [65 x i8], ptr @base64_table, i64 0, i64 %70, !dbg !3173
  %72 = load i8, ptr %71, align 1, !dbg !3173
  %73 = load ptr, ptr %9, align 8, !dbg !3174
  %74 = getelementptr inbounds i8, ptr %73, i32 1, !dbg !3174
  store ptr %74, ptr %9, align 8, !dbg !3174
  store i8 %72, ptr %73, align 1, !dbg !3175
  %75 = load ptr, ptr %11, align 8, !dbg !3176
  %76 = getelementptr inbounds i8, ptr %75, i64 1, !dbg !3176
  %77 = load i8, ptr %76, align 1, !dbg !3176
  %78 = zext i8 %77 to i32, !dbg !3176
  %79 = and i32 %78, 15, !dbg !3177
  %80 = shl i32 %79, 2, !dbg !3178
  %81 = load ptr, ptr %11, align 8, !dbg !3179
  %82 = getelementptr inbounds i8, ptr %81, i64 2, !dbg !3179
  %83 = load i8, ptr %82, align 1, !dbg !3179
  %84 = zext i8 %83 to i32, !dbg !3179
  %85 = ashr i32 %84, 6, !dbg !3180
  %86 = or i32 %80, %85, !dbg !3181
  %87 = sext i32 %86 to i64, !dbg !3182
  %88 = getelementptr inbounds [65 x i8], ptr @base64_table, i64 0, i64 %87, !dbg !3182
  %89 = load i8, ptr %88, align 1, !dbg !3182
  %90 = load ptr, ptr %9, align 8, !dbg !3183
  %91 = getelementptr inbounds i8, ptr %90, i32 1, !dbg !3183
  store ptr %91, ptr %9, align 8, !dbg !3183
  store i8 %89, ptr %90, align 1, !dbg !3184
  %92 = load ptr, ptr %11, align 8, !dbg !3185
  %93 = getelementptr inbounds i8, ptr %92, i64 2, !dbg !3185
  %94 = load i8, ptr %93, align 1, !dbg !3185
  %95 = zext i8 %94 to i32, !dbg !3185
  %96 = and i32 %95, 63, !dbg !3186
  %97 = sext i32 %96 to i64, !dbg !3187
  %98 = getelementptr inbounds [65 x i8], ptr @base64_table, i64 0, i64 %97, !dbg !3187
  %99 = load i8, ptr %98, align 1, !dbg !3187
  %100 = load ptr, ptr %9, align 8, !dbg !3188
  %101 = getelementptr inbounds i8, ptr %100, i32 1, !dbg !3188
  store ptr %101, ptr %9, align 8, !dbg !3188
  store i8 %99, ptr %100, align 1, !dbg !3189
  %102 = load ptr, ptr %11, align 8, !dbg !3190
  %103 = getelementptr inbounds i8, ptr %102, i64 3, !dbg !3190
  store ptr %103, ptr %11, align 8, !dbg !3190
  %104 = load i32, ptr %13, align 4, !dbg !3191
  %105 = add nsw i32 %104, 4, !dbg !3191
  store i32 %105, ptr %13, align 4, !dbg !3191
  %106 = load i32, ptr %13, align 4, !dbg !3192
  %107 = icmp sge i32 %106, 72, !dbg !3194
  br i1 %107, label %108, label %111, !dbg !3195

108:                                              ; preds = %47
  %109 = load ptr, ptr %9, align 8, !dbg !3196
  %110 = getelementptr inbounds i8, ptr %109, i32 1, !dbg !3196
  store ptr %110, ptr %9, align 8, !dbg !3196
  store i8 10, ptr %109, align 1, !dbg !3198
  store i32 0, ptr %13, align 4, !dbg !3199
  br label %111, !dbg !3200

111:                                              ; preds = %108, %47
  br label %40, !dbg !3156, !llvm.loop !3201

112:                                              ; preds = %40
  %113 = load ptr, ptr %10, align 8, !dbg !3204
  %114 = load ptr, ptr %11, align 8, !dbg !3206
  %115 = ptrtoint ptr %113 to i64, !dbg !3207
  %116 = ptrtoint ptr %114 to i64, !dbg !3207
  %117 = sub i64 %115, %116, !dbg !3207
  %118 = icmp ne i64 %117, 0, !dbg !3207
  br i1 %118, label %119, label %184, !dbg !3208

119:                                              ; preds = %112
  %120 = load ptr, ptr %11, align 8, !dbg !3209
  %121 = getelementptr inbounds i8, ptr %120, i64 0, !dbg !3209
  %122 = load i8, ptr %121, align 1, !dbg !3209
  %123 = zext i8 %122 to i32, !dbg !3209
  %124 = ashr i32 %123, 2, !dbg !3211
  %125 = sext i32 %124 to i64, !dbg !3212
  %126 = getelementptr inbounds [65 x i8], ptr @base64_table, i64 0, i64 %125, !dbg !3212
  %127 = load i8, ptr %126, align 1, !dbg !3212
  %128 = load ptr, ptr %9, align 8, !dbg !3213
  %129 = getelementptr inbounds i8, ptr %128, i32 1, !dbg !3213
  store ptr %129, ptr %9, align 8, !dbg !3213
  store i8 %127, ptr %128, align 1, !dbg !3214
  %130 = load ptr, ptr %10, align 8, !dbg !3215
  %131 = load ptr, ptr %11, align 8, !dbg !3217
  %132 = ptrtoint ptr %130 to i64, !dbg !3218
  %133 = ptrtoint ptr %131 to i64, !dbg !3218
  %134 = sub i64 %132, %133, !dbg !3218
  %135 = icmp eq i64 %134, 1, !dbg !3219
  br i1 %135, label %136, label %150, !dbg !3220

136:                                              ; preds = %119
  %137 = load ptr, ptr %11, align 8, !dbg !3221
  %138 = getelementptr inbounds i8, ptr %137, i64 0, !dbg !3221
  %139 = load i8, ptr %138, align 1, !dbg !3221
  %140 = zext i8 %139 to i32, !dbg !3221
  %141 = and i32 %140, 3, !dbg !3223
  %142 = shl i32 %141, 4, !dbg !3224
  %143 = sext i32 %142 to i64, !dbg !3225
  %144 = getelementptr inbounds [65 x i8], ptr @base64_table, i64 0, i64 %143, !dbg !3225
  %145 = load i8, ptr %144, align 1, !dbg !3225
  %146 = load ptr, ptr %9, align 8, !dbg !3226
  %147 = getelementptr inbounds i8, ptr %146, i32 1, !dbg !3226
  store ptr %147, ptr %9, align 8, !dbg !3226
  store i8 %145, ptr %146, align 1, !dbg !3227
  %148 = load ptr, ptr %9, align 8, !dbg !3228
  %149 = getelementptr inbounds i8, ptr %148, i32 1, !dbg !3228
  store ptr %149, ptr %9, align 8, !dbg !3228
  store i8 61, ptr %148, align 1, !dbg !3229
  br label %179, !dbg !3230

150:                                              ; preds = %119
  %151 = load ptr, ptr %11, align 8, !dbg !3231
  %152 = getelementptr inbounds i8, ptr %151, i64 0, !dbg !3231
  %153 = load i8, ptr %152, align 1, !dbg !3231
  %154 = zext i8 %153 to i32, !dbg !3231
  %155 = and i32 %154, 3, !dbg !3233
  %156 = shl i32 %155, 4, !dbg !3234
  %157 = load ptr, ptr %11, align 8, !dbg !3235
  %158 = getelementptr inbounds i8, ptr %157, i64 1, !dbg !3235
  %159 = load i8, ptr %158, align 1, !dbg !3235
  %160 = zext i8 %159 to i32, !dbg !3235
  %161 = ashr i32 %160, 4, !dbg !3236
  %162 = or i32 %156, %161, !dbg !3237
  %163 = sext i32 %162 to i64, !dbg !3238
  %164 = getelementptr inbounds [65 x i8], ptr @base64_table, i64 0, i64 %163, !dbg !3238
  %165 = load i8, ptr %164, align 1, !dbg !3238
  %166 = load ptr, ptr %9, align 8, !dbg !3239
  %167 = getelementptr inbounds i8, ptr %166, i32 1, !dbg !3239
  store ptr %167, ptr %9, align 8, !dbg !3239
  store i8 %165, ptr %166, align 1, !dbg !3240
  %168 = load ptr, ptr %11, align 8, !dbg !3241
  %169 = getelementptr inbounds i8, ptr %168, i64 1, !dbg !3241
  %170 = load i8, ptr %169, align 1, !dbg !3241
  %171 = zext i8 %170 to i32, !dbg !3241
  %172 = and i32 %171, 15, !dbg !3242
  %173 = shl i32 %172, 2, !dbg !3243
  %174 = sext i32 %173 to i64, !dbg !3244
  %175 = getelementptr inbounds [65 x i8], ptr @base64_table, i64 0, i64 %174, !dbg !3244
  %176 = load i8, ptr %175, align 1, !dbg !3244
  %177 = load ptr, ptr %9, align 8, !dbg !3245
  %178 = getelementptr inbounds i8, ptr %177, i32 1, !dbg !3245
  store ptr %178, ptr %9, align 8, !dbg !3245
  store i8 %176, ptr %177, align 1, !dbg !3246
  br label %179

179:                                              ; preds = %150, %136
  %180 = load ptr, ptr %9, align 8, !dbg !3247
  %181 = getelementptr inbounds i8, ptr %180, i32 1, !dbg !3247
  store ptr %181, ptr %9, align 8, !dbg !3247
  store i8 61, ptr %180, align 1, !dbg !3248
  %182 = load i32, ptr %13, align 4, !dbg !3249
  %183 = add nsw i32 %182, 4, !dbg !3249
  store i32 %183, ptr %13, align 4, !dbg !3249
  br label %184, !dbg !3250

184:                                              ; preds = %179, %112
  %185 = load i32, ptr %13, align 4, !dbg !3251
  %186 = icmp ne i32 %185, 0, !dbg !3251
  br i1 %186, label %187, label %190, !dbg !3253

187:                                              ; preds = %184
  %188 = load ptr, ptr %9, align 8, !dbg !3254
  %189 = getelementptr inbounds i8, ptr %188, i32 1, !dbg !3254
  store ptr %189, ptr %9, align 8, !dbg !3254
  store i8 10, ptr %188, align 1, !dbg !3255
  br label %190, !dbg !3256

190:                                              ; preds = %187, %184
  %191 = load ptr, ptr %9, align 8, !dbg !3257
  store i8 0, ptr %191, align 1, !dbg !3258
  %192 = load ptr, ptr %7, align 8, !dbg !3259
  %193 = icmp ne ptr %192, null, !dbg !3259
  br i1 %193, label %194, label %201, !dbg !3261

194:                                              ; preds = %190
  %195 = load ptr, ptr %9, align 8, !dbg !3262
  %196 = load ptr, ptr %8, align 8, !dbg !3263
  %197 = ptrtoint ptr %195 to i64, !dbg !3264
  %198 = ptrtoint ptr %196 to i64, !dbg !3264
  %199 = sub i64 %197, %198, !dbg !3264
  %200 = load ptr, ptr %7, align 8, !dbg !3265
  store i64 %199, ptr %200, align 8, !dbg !3266
  br label %201, !dbg !3267

201:                                              ; preds = %194, %190
  %202 = load ptr, ptr %8, align 8, !dbg !3268
  store ptr %202, ptr %4, align 8, !dbg !3269
  br label %203, !dbg !3269

203:                                              ; preds = %201, %33, %27
  %204 = load ptr, ptr %4, align 8, !dbg !3270
  ret ptr %204, !dbg !3270
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind allocsize(0)
declare noalias ptr @malloc(i64 noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @base64_decode(ptr noundef %0, i64 noundef %1, ptr noundef %2) #0 !dbg !3271 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i64, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca [4 x i8], align 1
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !3272, metadata !DIExpression()), !dbg !3273
  store i64 %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !3274, metadata !DIExpression()), !dbg !3275
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !3276, metadata !DIExpression()), !dbg !3277
  call void @llvm.dbg.declare(metadata ptr %8, metadata !3278, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.declare(metadata ptr %9, metadata !3280, metadata !DIExpression()), !dbg !3281
  call void @llvm.dbg.declare(metadata ptr %10, metadata !3282, metadata !DIExpression()), !dbg !3284
  call void @llvm.dbg.declare(metadata ptr %11, metadata !3285, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.declare(metadata ptr %12, metadata !3287, metadata !DIExpression()), !dbg !3288
  call void @llvm.dbg.declare(metadata ptr %13, metadata !3289, metadata !DIExpression()), !dbg !3290
  call void @llvm.dbg.declare(metadata ptr %14, metadata !3291, metadata !DIExpression()), !dbg !3292
  store i32 0, ptr %14, align 4, !dbg !3292
  store i64 0, ptr %12, align 8, !dbg !3293
  store i64 0, ptr %11, align 8, !dbg !3294
  br label %16, !dbg !3296

16:                                               ; preds = %34, %3
  %17 = load i64, ptr %11, align 8, !dbg !3297
  %18 = load i64, ptr %6, align 8, !dbg !3299
  %19 = icmp ult i64 %17, %18, !dbg !3300
  br i1 %19, label %20, label %37, !dbg !3301

20:                                               ; preds = %16
  %21 = load ptr, ptr %5, align 8, !dbg !3302
  %22 = load i64, ptr %11, align 8, !dbg !3305
  %23 = getelementptr inbounds i8, ptr %21, i64 %22, !dbg !3302
  %24 = load i8, ptr %23, align 1, !dbg !3302
  %25 = zext i8 %24 to i64, !dbg !3306
  %26 = getelementptr inbounds [256 x i8], ptr @base64_decode_table, i64 0, i64 %25, !dbg !3306
  %27 = load i8, ptr %26, align 1, !dbg !3306
  %28 = zext i8 %27 to i32, !dbg !3306
  %29 = icmp ne i32 %28, 128, !dbg !3307
  br i1 %29, label %30, label %33, !dbg !3308

30:                                               ; preds = %20
  %31 = load i64, ptr %12, align 8, !dbg !3309
  %32 = add i64 %31, 1, !dbg !3309
  store i64 %32, ptr %12, align 8, !dbg !3309
  br label %33, !dbg !3310

33:                                               ; preds = %30, %20
  br label %34, !dbg !3311

34:                                               ; preds = %33
  %35 = load i64, ptr %11, align 8, !dbg !3312
  %36 = add i64 %35, 1, !dbg !3312
  store i64 %36, ptr %11, align 8, !dbg !3312
  br label %16, !dbg !3313, !llvm.loop !3314

37:                                               ; preds = %16
  %38 = load i64, ptr %12, align 8, !dbg !3316
  %39 = icmp eq i64 %38, 0, !dbg !3318
  br i1 %39, label %44, label %40, !dbg !3319

40:                                               ; preds = %37
  %41 = load i64, ptr %12, align 8, !dbg !3320
  %42 = urem i64 %41, 4, !dbg !3321
  %43 = icmp ne i64 %42, 0, !dbg !3321
  br i1 %43, label %44, label %45, !dbg !3322

44:                                               ; preds = %40, %37
  store ptr null, ptr %4, align 8, !dbg !3323
  br label %158, !dbg !3323

45:                                               ; preds = %40
  %46 = load i64, ptr %12, align 8, !dbg !3324
  %47 = udiv i64 %46, 4, !dbg !3325
  %48 = mul i64 %47, 3, !dbg !3326
  %49 = add i64 %48, 1, !dbg !3327
  store i64 %49, ptr %13, align 8, !dbg !3328
  %50 = load i64, ptr %13, align 8, !dbg !3329
  %51 = call noalias ptr @malloc(i64 noundef %50) #17, !dbg !3330
  store ptr %51, ptr %8, align 8, !dbg !3331
  store ptr %51, ptr %9, align 8, !dbg !3332
  %52 = load ptr, ptr %8, align 8, !dbg !3333
  %53 = icmp eq ptr %52, null, !dbg !3335
  br i1 %53, label %54, label %55, !dbg !3336

54:                                               ; preds = %45
  store ptr null, ptr %4, align 8, !dbg !3337
  br label %158, !dbg !3337

55:                                               ; preds = %45
  store i64 0, ptr %12, align 8, !dbg !3338
  store i64 0, ptr %11, align 8, !dbg !3339
  br label %56, !dbg !3341

56:                                               ; preds = %146, %55
  %57 = load i64, ptr %11, align 8, !dbg !3342
  %58 = load i64, ptr %6, align 8, !dbg !3344
  %59 = icmp ult i64 %57, %58, !dbg !3345
  br i1 %59, label %60, label %149, !dbg !3346

60:                                               ; preds = %56
  call void @llvm.dbg.declare(metadata ptr %15, metadata !3347, metadata !DIExpression()), !dbg !3349
  %61 = load ptr, ptr %5, align 8, !dbg !3350
  %62 = load i64, ptr %11, align 8, !dbg !3351
  %63 = getelementptr inbounds i8, ptr %61, i64 %62, !dbg !3350
  %64 = load i8, ptr %63, align 1, !dbg !3350
  %65 = zext i8 %64 to i64, !dbg !3352
  %66 = getelementptr inbounds [256 x i8], ptr @base64_decode_table, i64 0, i64 %65, !dbg !3352
  %67 = load i8, ptr %66, align 1, !dbg !3352
  store i8 %67, ptr %15, align 1, !dbg !3349
  %68 = load i8, ptr %15, align 1, !dbg !3353
  %69 = zext i8 %68 to i32, !dbg !3353
  %70 = icmp eq i32 %69, 128, !dbg !3355
  br i1 %70, label %71, label %72, !dbg !3356

71:                                               ; preds = %60
  br label %146, !dbg !3357

72:                                               ; preds = %60
  %73 = load ptr, ptr %5, align 8, !dbg !3358
  %74 = load i64, ptr %11, align 8, !dbg !3360
  %75 = getelementptr inbounds i8, ptr %73, i64 %74, !dbg !3358
  %76 = load i8, ptr %75, align 1, !dbg !3358
  %77 = zext i8 %76 to i32, !dbg !3358
  %78 = icmp eq i32 %77, 61, !dbg !3361
  br i1 %78, label %79, label %82, !dbg !3362

79:                                               ; preds = %72
  %80 = load i32, ptr %14, align 4, !dbg !3363
  %81 = add nsw i32 %80, 1, !dbg !3363
  store i32 %81, ptr %14, align 4, !dbg !3363
  br label %82, !dbg !3364

82:                                               ; preds = %79, %72
  %83 = load i8, ptr %15, align 1, !dbg !3365
  %84 = load i64, ptr %12, align 8, !dbg !3366
  %85 = getelementptr inbounds [4 x i8], ptr %10, i64 0, i64 %84, !dbg !3367
  store i8 %83, ptr %85, align 1, !dbg !3368
  %86 = load i64, ptr %12, align 8, !dbg !3369
  %87 = add i64 %86, 1, !dbg !3369
  store i64 %87, ptr %12, align 8, !dbg !3369
  %88 = load i64, ptr %12, align 8, !dbg !3370
  %89 = icmp eq i64 %88, 4, !dbg !3372
  br i1 %89, label %90, label %145, !dbg !3373

90:                                               ; preds = %82
  %91 = getelementptr inbounds [4 x i8], ptr %10, i64 0, i64 0, !dbg !3374
  %92 = load i8, ptr %91, align 1, !dbg !3374
  %93 = zext i8 %92 to i32, !dbg !3374
  %94 = shl i32 %93, 2, !dbg !3376
  %95 = getelementptr inbounds [4 x i8], ptr %10, i64 0, i64 1, !dbg !3377
  %96 = load i8, ptr %95, align 1, !dbg !3377
  %97 = zext i8 %96 to i32, !dbg !3377
  %98 = ashr i32 %97, 4, !dbg !3378
  %99 = or i32 %94, %98, !dbg !3379
  %100 = trunc i32 %99 to i8, !dbg !3380
  %101 = load ptr, ptr %9, align 8, !dbg !3381
  %102 = getelementptr inbounds i8, ptr %101, i32 1, !dbg !3381
  store ptr %102, ptr %9, align 8, !dbg !3381
  store i8 %100, ptr %101, align 1, !dbg !3382
  %103 = getelementptr inbounds [4 x i8], ptr %10, i64 0, i64 1, !dbg !3383
  %104 = load i8, ptr %103, align 1, !dbg !3383
  %105 = zext i8 %104 to i32, !dbg !3383
  %106 = shl i32 %105, 4, !dbg !3384
  %107 = getelementptr inbounds [4 x i8], ptr %10, i64 0, i64 2, !dbg !3385
  %108 = load i8, ptr %107, align 1, !dbg !3385
  %109 = zext i8 %108 to i32, !dbg !3385
  %110 = ashr i32 %109, 2, !dbg !3386
  %111 = or i32 %106, %110, !dbg !3387
  %112 = trunc i32 %111 to i8, !dbg !3388
  %113 = load ptr, ptr %9, align 8, !dbg !3389
  %114 = getelementptr inbounds i8, ptr %113, i32 1, !dbg !3389
  store ptr %114, ptr %9, align 8, !dbg !3389
  store i8 %112, ptr %113, align 1, !dbg !3390
  %115 = getelementptr inbounds [4 x i8], ptr %10, i64 0, i64 2, !dbg !3391
  %116 = load i8, ptr %115, align 1, !dbg !3391
  %117 = zext i8 %116 to i32, !dbg !3391
  %118 = shl i32 %117, 6, !dbg !3392
  %119 = getelementptr inbounds [4 x i8], ptr %10, i64 0, i64 3, !dbg !3393
  %120 = load i8, ptr %119, align 1, !dbg !3393
  %121 = zext i8 %120 to i32, !dbg !3393
  %122 = or i32 %118, %121, !dbg !3394
  %123 = trunc i32 %122 to i8, !dbg !3395
  %124 = load ptr, ptr %9, align 8, !dbg !3396
  %125 = getelementptr inbounds i8, ptr %124, i32 1, !dbg !3396
  store ptr %125, ptr %9, align 8, !dbg !3396
  store i8 %123, ptr %124, align 1, !dbg !3397
  store i64 0, ptr %12, align 8, !dbg !3398
  %126 = load i32, ptr %14, align 4, !dbg !3399
  %127 = icmp ne i32 %126, 0, !dbg !3399
  br i1 %127, label %128, label %144, !dbg !3401

128:                                              ; preds = %90
  %129 = load i32, ptr %14, align 4, !dbg !3402
  %130 = icmp eq i32 %129, 1, !dbg !3405
  br i1 %130, label %131, label %134, !dbg !3406

131:                                              ; preds = %128
  %132 = load ptr, ptr %9, align 8, !dbg !3407
  %133 = getelementptr inbounds i8, ptr %132, i32 -1, !dbg !3407
  store ptr %133, ptr %9, align 8, !dbg !3407
  br label %143, !dbg !3408

134:                                              ; preds = %128
  %135 = load i32, ptr %14, align 4, !dbg !3409
  %136 = icmp eq i32 %135, 2, !dbg !3411
  br i1 %136, label %137, label %140, !dbg !3412

137:                                              ; preds = %134
  %138 = load ptr, ptr %9, align 8, !dbg !3413
  %139 = getelementptr inbounds i8, ptr %138, i64 -2, !dbg !3413
  store ptr %139, ptr %9, align 8, !dbg !3413
  br label %142, !dbg !3414

140:                                              ; preds = %134
  %141 = load ptr, ptr %8, align 8, !dbg !3415
  call void @free(ptr noundef %141) #18, !dbg !3417
  store ptr null, ptr %4, align 8, !dbg !3418
  br label %158, !dbg !3418

142:                                              ; preds = %137
  br label %143

143:                                              ; preds = %142, %131
  br label %149, !dbg !3419

144:                                              ; preds = %90
  br label %145, !dbg !3420

145:                                              ; preds = %144, %82
  br label %146, !dbg !3421

146:                                              ; preds = %145, %71
  %147 = load i64, ptr %11, align 8, !dbg !3422
  %148 = add i64 %147, 1, !dbg !3422
  store i64 %148, ptr %11, align 8, !dbg !3422
  br label %56, !dbg !3423, !llvm.loop !3424

149:                                              ; preds = %143, %56
  %150 = load ptr, ptr %9, align 8, !dbg !3426
  store i8 0, ptr %150, align 1, !dbg !3427
  %151 = load ptr, ptr %9, align 8, !dbg !3428
  %152 = load ptr, ptr %8, align 8, !dbg !3429
  %153 = ptrtoint ptr %151 to i64, !dbg !3430
  %154 = ptrtoint ptr %152 to i64, !dbg !3430
  %155 = sub i64 %153, %154, !dbg !3430
  %156 = load ptr, ptr %7, align 8, !dbg !3431
  store i64 %155, ptr %156, align 8, !dbg !3432
  %157 = load ptr, ptr %8, align 8, !dbg !3433
  store ptr %157, ptr %4, align 8, !dbg !3434
  br label %158, !dbg !3434

158:                                              ; preds = %149, %140, %54, %44
  %159 = load ptr, ptr %4, align 8, !dbg !3435
  ret ptr %159, !dbg !3435
}

; Function Attrs: nounwind
declare void @free(ptr noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @initialize_odd_constant() #0 !dbg !3436 {
  %1 = alloca i64, align 8
  %2 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata ptr %1, metadata !3437, metadata !DIExpression()), !dbg !3438
  %3 = call i64 (i64, ...) @syscall(i64 noundef 318, ptr noundef @odd_constant, i64 noundef 4, i32 noundef 0) #18, !dbg !3439
  store i64 %3, ptr %1, align 8, !dbg !3438
  %4 = load i64, ptr %1, align 8, !dbg !3440
  %5 = icmp eq i64 %4, 4, !dbg !3442
  br i1 %5, label %6, label %7, !dbg !3443

6:                                                ; preds = %0
  br label %25, !dbg !3444

7:                                                ; preds = %0
  call void @llvm.dbg.declare(metadata ptr %2, metadata !3445, metadata !DIExpression()), !dbg !3446
  %8 = call i32 (ptr, i32, ...) @open(ptr noundef @.str, i32 noundef 524288), !dbg !3447
  store i32 %8, ptr %2, align 4, !dbg !3446
  %9 = load i32, ptr %2, align 4, !dbg !3448
  %10 = icmp slt i32 %9, 0, !dbg !3450
  br i1 %10, label %11, label %17, !dbg !3451

11:                                               ; preds = %7
  %12 = call i32 (ptr, i32, ...) @open(ptr noundef @.str.1, i32 noundef 524288), !dbg !3452
  store i32 %12, ptr %2, align 4, !dbg !3454
  %13 = load i32, ptr %2, align 4, !dbg !3455
  %14 = icmp slt i32 %13, 0, !dbg !3457
  br i1 %14, label %15, label %16, !dbg !3458

15:                                               ; preds = %11
  store i32 668265261, ptr @odd_constant, align 4, !dbg !3459
  br label %29, !dbg !3461

16:                                               ; preds = %11
  br label %17, !dbg !3462

17:                                               ; preds = %16, %7
  %18 = load i32, ptr %2, align 4, !dbg !3463
  %19 = call i64 @read(i32 noundef %18, ptr noundef @odd_constant, i64 noundef 4), !dbg !3465
  %20 = icmp ne i64 %19, 4, !dbg !3466
  br i1 %20, label %21, label %22, !dbg !3467

21:                                               ; preds = %17
  store i32 668265261, ptr @odd_constant, align 4, !dbg !3468
  br label %22, !dbg !3469

22:                                               ; preds = %21, %17
  %23 = load i32, ptr %2, align 4, !dbg !3470
  %24 = call i32 @close(i32 noundef %23), !dbg !3471
  br label %25, !dbg !3471

25:                                               ; preds = %22, %6
  call void @llvm.dbg.label(metadata !3472), !dbg !3473
  %26 = load i32, ptr @odd_constant, align 4, !dbg !3474
  %27 = or i32 %26, 1, !dbg !3474
  store i32 %27, ptr @odd_constant, align 4, !dbg !3474
  %28 = load i32, ptr @odd_constant, align 4, !dbg !3475
  call void @murmur3_set_seed(i32 noundef %28), !dbg !3476
  br label %29, !dbg !3477

29:                                               ; preds = %25, %15
  ret void, !dbg !3477
}

; Function Attrs: nounwind
declare i64 @syscall(i64 noundef, ...) #3

declare i32 @open(ptr noundef, i32 noundef, ...) #4

declare i64 @read(i32 noundef, ptr noundef, i64 noundef) #4

declare i32 @close(i32 noundef) #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @hash_int_new(ptr noundef %0, ptr noundef %1) #0 !dbg !3478 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !3507, metadata !DIExpression()), !dbg !3508
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !3509, metadata !DIExpression()), !dbg !3510
  %5 = load ptr, ptr %3, align 8, !dbg !3511
  %6 = load ptr, ptr %4, align 8, !dbg !3512
  %7 = call ptr @hash_internal_new(ptr noundef @hash_int, ptr noundef @hash_int_key_cmp, ptr noundef %5, ptr noundef %6), !dbg !3513
  ret ptr %7, !dbg !3514
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @hash_int(ptr noundef %0) #0 !dbg !3515 {
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !3516, metadata !DIExpression()), !dbg !3517
  call void @llvm.dbg.declare(metadata ptr %3, metadata !3518, metadata !DIExpression()), !dbg !3519
  %5 = load ptr, ptr %2, align 8, !dbg !3520
  %6 = ptrtoint ptr %5 to i64, !dbg !3521
  %7 = trunc i64 %6 to i32, !dbg !3522
  store i32 %7, ptr %3, align 4, !dbg !3519
  call void @llvm.dbg.declare(metadata ptr %4, metadata !3523, metadata !DIExpression()), !dbg !3524
  %8 = load i32, ptr @odd_constant, align 4, !dbg !3525
  store i32 %8, ptr %4, align 4, !dbg !3524
  %9 = load i32, ptr %3, align 4, !dbg !3526
  %10 = xor i32 %9, 61, !dbg !3527
  %11 = load i32, ptr %3, align 4, !dbg !3528
  %12 = lshr i32 %11, 16, !dbg !3529
  %13 = xor i32 %10, %12, !dbg !3530
  store i32 %13, ptr %3, align 4, !dbg !3531
  %14 = load i32, ptr %3, align 4, !dbg !3532
  %15 = shl i32 %14, 3, !dbg !3533
  %16 = load i32, ptr %3, align 4, !dbg !3534
  %17 = add i32 %16, %15, !dbg !3534
  store i32 %17, ptr %3, align 4, !dbg !3534
  %18 = load i32, ptr %3, align 4, !dbg !3535
  %19 = lshr i32 %18, 4, !dbg !3536
  %20 = load i32, ptr %3, align 4, !dbg !3537
  %21 = xor i32 %20, %19, !dbg !3537
  store i32 %21, ptr %3, align 4, !dbg !3537
  %22 = load i32, ptr %4, align 4, !dbg !3538
  %23 = load i32, ptr %3, align 4, !dbg !3539
  %24 = mul i32 %23, %22, !dbg !3539
  store i32 %24, ptr %3, align 4, !dbg !3539
  %25 = load i32, ptr %3, align 4, !dbg !3540
  %26 = lshr i32 %25, 15, !dbg !3541
  %27 = load i32, ptr %3, align 4, !dbg !3542
  %28 = xor i32 %27, %26, !dbg !3542
  store i32 %28, ptr %3, align 4, !dbg !3542
  %29 = load i32, ptr %3, align 4, !dbg !3543
  ret i32 %29, !dbg !3544
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @hash_int_key_cmp(ptr noundef %0, ptr noundef %1) #0 !dbg !3545 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !3546, metadata !DIExpression()), !dbg !3547
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !3548, metadata !DIExpression()), !dbg !3549
  call void @llvm.dbg.declare(metadata ptr %5, metadata !3550, metadata !DIExpression()), !dbg !3551
  %7 = load ptr, ptr %3, align 8, !dbg !3552
  %8 = ptrtoint ptr %7 to i64, !dbg !3553
  %9 = trunc i64 %8 to i32, !dbg !3554
  store i32 %9, ptr %5, align 4, !dbg !3551
  call void @llvm.dbg.declare(metadata ptr %6, metadata !3555, metadata !DIExpression()), !dbg !3556
  %10 = load ptr, ptr %4, align 8, !dbg !3557
  %11 = ptrtoint ptr %10 to i64, !dbg !3558
  %12 = trunc i64 %11 to i32, !dbg !3559
  store i32 %12, ptr %6, align 4, !dbg !3556
  %13 = load i32, ptr %5, align 4, !dbg !3560
  %14 = load i32, ptr %6, align 4, !dbg !3561
  %15 = icmp sgt i32 %13, %14, !dbg !3562
  %16 = zext i1 %15 to i32, !dbg !3562
  %17 = load i32, ptr %5, align 4, !dbg !3563
  %18 = load i32, ptr %6, align 4, !dbg !3564
  %19 = icmp slt i32 %17, %18, !dbg !3565
  %20 = zext i1 %19 to i32, !dbg !3565
  %21 = sub nsw i32 %16, %20, !dbg !3566
  ret i32 %21, !dbg !3567
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @hash_internal_new(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 !dbg !3568 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  store ptr %0, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !3571, metadata !DIExpression()), !dbg !3572
  store ptr %1, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !3573, metadata !DIExpression()), !dbg !3574
  store ptr %2, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !3575, metadata !DIExpression()), !dbg !3576
  store ptr %3, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !3577, metadata !DIExpression()), !dbg !3578
  call void @llvm.dbg.declare(metadata ptr %10, metadata !3579, metadata !DIExpression()), !dbg !3580
  %11 = call noalias ptr @calloc(i64 noundef 1, i64 noundef 8232) #19, !dbg !3581
  store ptr %11, ptr %10, align 8, !dbg !3580
  %12 = load ptr, ptr %10, align 8, !dbg !3582
  %13 = icmp eq ptr %12, null, !dbg !3584
  br i1 %13, label %14, label %15, !dbg !3585

14:                                               ; preds = %4
  store ptr null, ptr %5, align 8, !dbg !3586
  br label %29, !dbg !3586

15:                                               ; preds = %4
  %16 = load ptr, ptr %6, align 8, !dbg !3587
  %17 = load ptr, ptr %10, align 8, !dbg !3588
  %18 = getelementptr inbounds %struct.hash, ptr %17, i32 0, i32 1, !dbg !3589
  store ptr %16, ptr %18, align 8, !dbg !3590
  %19 = load ptr, ptr %7, align 8, !dbg !3591
  %20 = load ptr, ptr %10, align 8, !dbg !3592
  %21 = getelementptr inbounds %struct.hash, ptr %20, i32 0, i32 2, !dbg !3593
  store ptr %19, ptr %21, align 8, !dbg !3594
  %22 = load ptr, ptr %9, align 8, !dbg !3595
  %23 = load ptr, ptr %10, align 8, !dbg !3596
  %24 = getelementptr inbounds %struct.hash, ptr %23, i32 0, i32 3, !dbg !3597
  store ptr %22, ptr %24, align 8, !dbg !3598
  %25 = load ptr, ptr %8, align 8, !dbg !3599
  %26 = load ptr, ptr %10, align 8, !dbg !3600
  %27 = getelementptr inbounds %struct.hash, ptr %26, i32 0, i32 4, !dbg !3601
  store ptr %25, ptr %27, align 8, !dbg !3602
  %28 = load ptr, ptr %10, align 8, !dbg !3603
  store ptr %28, ptr %5, align 8, !dbg !3604
  br label %29, !dbg !3604

29:                                               ; preds = %15, %14
  %30 = load ptr, ptr %5, align 8, !dbg !3605
  ret ptr %30, !dbg !3605
}

; Function Attrs: nounwind allocsize(0,1)
declare noalias ptr @calloc(i64 noundef, i64 noundef) #5

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @hash_str_new(ptr noundef %0, ptr noundef %1) #0 !dbg !3606 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !3607, metadata !DIExpression()), !dbg !3608
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !3609, metadata !DIExpression()), !dbg !3610
  call void @llvm.dbg.declare(metadata ptr %5, metadata !3611, metadata !DIExpression()), !dbg !3612
  store ptr @murmur3_simple, ptr %5, align 8, !dbg !3613
  %6 = load ptr, ptr %5, align 8, !dbg !3614
  %7 = load ptr, ptr %3, align 8, !dbg !3615
  %8 = load ptr, ptr %4, align 8, !dbg !3616
  %9 = call ptr @hash_internal_new(ptr noundef %6, ptr noundef @strcmp, ptr noundef %7, ptr noundef %8), !dbg !3617
  ret ptr %9, !dbg !3618
}

; Function Attrs: nounwind willreturn memory(read)
declare i32 @strcmp(ptr noundef, ptr noundef) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_free(ptr noundef %0) #0 !dbg !3619 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !3622, metadata !DIExpression()), !dbg !3623
  call void @llvm.dbg.declare(metadata ptr %3, metadata !3624, metadata !DIExpression()), !dbg !3626
  call void @llvm.dbg.declare(metadata ptr %4, metadata !3627, metadata !DIExpression()), !dbg !3628
  %7 = load ptr, ptr %2, align 8, !dbg !3629
  %8 = icmp eq ptr %7, null, !dbg !3631
  br i1 %8, label %9, label %10, !dbg !3632

9:                                                ; preds = %1
  br label %71, !dbg !3633

10:                                               ; preds = %1
  %11 = load ptr, ptr %2, align 8, !dbg !3634
  %12 = getelementptr inbounds %struct.hash, ptr %11, i32 0, i32 5, !dbg !3635
  %13 = getelementptr inbounds [0 x %struct.hash_bucket], ptr %12, i64 0, i64 0, !dbg !3634
  store ptr %13, ptr %3, align 8, !dbg !3636
  %14 = load ptr, ptr %3, align 8, !dbg !3637
  %15 = getelementptr inbounds %struct.hash_bucket, ptr %14, i64 512, !dbg !3638
  store ptr %15, ptr %4, align 8, !dbg !3639
  br label %16, !dbg !3640

16:                                               ; preds = %66, %10
  %17 = load ptr, ptr %3, align 8, !dbg !3641
  %18 = load ptr, ptr %4, align 8, !dbg !3644
  %19 = icmp ult ptr %17, %18, !dbg !3645
  br i1 %19, label %20, label %69, !dbg !3646

20:                                               ; preds = %16
  %21 = load ptr, ptr %2, align 8, !dbg !3647
  %22 = getelementptr inbounds %struct.hash, ptr %21, i32 0, i32 3, !dbg !3650
  %23 = load ptr, ptr %22, align 8, !dbg !3650
  %24 = icmp ne ptr %23, null, !dbg !3647
  br i1 %24, label %25, label %62, !dbg !3651

25:                                               ; preds = %20
  call void @llvm.dbg.declare(metadata ptr %5, metadata !3652, metadata !DIExpression()), !dbg !3654
  call void @llvm.dbg.declare(metadata ptr %6, metadata !3655, metadata !DIExpression()), !dbg !3656
  %26 = load ptr, ptr %3, align 8, !dbg !3657
  %27 = getelementptr inbounds %struct.hash_bucket, ptr %26, i32 0, i32 0, !dbg !3658
  %28 = load ptr, ptr %27, align 8, !dbg !3658
  store ptr %28, ptr %5, align 8, !dbg !3659
  %29 = load ptr, ptr %5, align 8, !dbg !3660
  %30 = load ptr, ptr %3, align 8, !dbg !3661
  %31 = getelementptr inbounds %struct.hash_bucket, ptr %30, i32 0, i32 1, !dbg !3662
  %32 = load i32, ptr %31, align 8, !dbg !3662
  %33 = zext i32 %32 to i64, !dbg !3663
  %34 = getelementptr inbounds %struct.hash_entry, ptr %29, i64 %33, !dbg !3663
  store ptr %34, ptr %6, align 8, !dbg !3664
  br label %35, !dbg !3665

35:                                               ; preds = %58, %25
  %36 = load ptr, ptr %5, align 8, !dbg !3666
  %37 = load ptr, ptr %6, align 8, !dbg !3669
  %38 = icmp ult ptr %36, %37, !dbg !3670
  br i1 %38, label %39, label %61, !dbg !3671

39:                                               ; preds = %35
  %40 = load ptr, ptr %2, align 8, !dbg !3672
  %41 = getelementptr inbounds %struct.hash, ptr %40, i32 0, i32 3, !dbg !3674
  %42 = load ptr, ptr %41, align 8, !dbg !3674
  %43 = load ptr, ptr %5, align 8, !dbg !3675
  %44 = getelementptr inbounds %struct.hash_entry, ptr %43, i32 0, i32 1, !dbg !3676
  %45 = load ptr, ptr %44, align 8, !dbg !3676
  call void %42(ptr noundef %45), !dbg !3672
  %46 = load ptr, ptr %2, align 8, !dbg !3677
  %47 = getelementptr inbounds %struct.hash, ptr %46, i32 0, i32 4, !dbg !3679
  %48 = load ptr, ptr %47, align 8, !dbg !3679
  %49 = icmp ne ptr %48, null, !dbg !3677
  br i1 %49, label %50, label %57, !dbg !3680

50:                                               ; preds = %39
  %51 = load ptr, ptr %2, align 8, !dbg !3681
  %52 = getelementptr inbounds %struct.hash, ptr %51, i32 0, i32 4, !dbg !3682
  %53 = load ptr, ptr %52, align 8, !dbg !3682
  %54 = load ptr, ptr %5, align 8, !dbg !3683
  %55 = getelementptr inbounds %struct.hash_entry, ptr %54, i32 0, i32 0, !dbg !3684
  %56 = load ptr, ptr %55, align 8, !dbg !3684
  call void %53(ptr noundef %56), !dbg !3681
  br label %57, !dbg !3681

57:                                               ; preds = %50, %39
  br label %58, !dbg !3685

58:                                               ; preds = %57
  %59 = load ptr, ptr %5, align 8, !dbg !3686
  %60 = getelementptr inbounds %struct.hash_entry, ptr %59, i32 1, !dbg !3686
  store ptr %60, ptr %5, align 8, !dbg !3686
  br label %35, !dbg !3687, !llvm.loop !3688

61:                                               ; preds = %35
  br label %62, !dbg !3690

62:                                               ; preds = %61, %20
  %63 = load ptr, ptr %3, align 8, !dbg !3691
  %64 = getelementptr inbounds %struct.hash_bucket, ptr %63, i32 0, i32 0, !dbg !3692
  %65 = load ptr, ptr %64, align 8, !dbg !3692
  call void @free(ptr noundef %65) #18, !dbg !3693
  br label %66, !dbg !3694

66:                                               ; preds = %62
  %67 = load ptr, ptr %3, align 8, !dbg !3695
  %68 = getelementptr inbounds %struct.hash_bucket, ptr %67, i32 1, !dbg !3695
  store ptr %68, ptr %3, align 8, !dbg !3695
  br label %16, !dbg !3696, !llvm.loop !3697

69:                                               ; preds = %16
  %70 = load ptr, ptr %2, align 8, !dbg !3699
  call void @free(ptr noundef %70) #18, !dbg !3700
  br label %71, !dbg !3701

71:                                               ; preds = %69, %9
  ret void, !dbg !3701
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @hash_add(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !3702 {
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i32, align 4
  %14 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !3705, metadata !DIExpression()), !dbg !3706
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !3707, metadata !DIExpression()), !dbg !3708
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !3709, metadata !DIExpression()), !dbg !3710
  call void @llvm.dbg.declare(metadata ptr %8, metadata !3711, metadata !DIExpression()), !dbg !3712
  %15 = load ptr, ptr %5, align 8, !dbg !3713
  %16 = getelementptr inbounds %struct.hash, ptr %15, i32 0, i32 1, !dbg !3714
  %17 = load ptr, ptr %16, align 8, !dbg !3714
  %18 = load ptr, ptr %6, align 8, !dbg !3715
  %19 = call i32 %17(ptr noundef %18), !dbg !3713
  store i32 %19, ptr %8, align 4, !dbg !3712
  call void @llvm.dbg.declare(metadata ptr %9, metadata !3716, metadata !DIExpression()), !dbg !3717
  %20 = load i32, ptr %8, align 4, !dbg !3718
  %21 = and i32 %20, 511, !dbg !3719
  store i32 %21, ptr %9, align 4, !dbg !3717
  call void @llvm.dbg.declare(metadata ptr %10, metadata !3720, metadata !DIExpression()), !dbg !3721
  %22 = load ptr, ptr %5, align 8, !dbg !3722
  %23 = getelementptr inbounds %struct.hash, ptr %22, i32 0, i32 5, !dbg !3723
  %24 = getelementptr inbounds [0 x %struct.hash_bucket], ptr %23, i64 0, i64 0, !dbg !3722
  %25 = load i32, ptr %9, align 4, !dbg !3724
  %26 = zext i32 %25 to i64, !dbg !3725
  %27 = getelementptr inbounds %struct.hash_bucket, ptr %24, i64 %26, !dbg !3725
  store ptr %27, ptr %10, align 8, !dbg !3721
  call void @llvm.dbg.declare(metadata ptr %11, metadata !3726, metadata !DIExpression()), !dbg !3727
  call void @llvm.dbg.declare(metadata ptr %12, metadata !3728, metadata !DIExpression()), !dbg !3729
  %28 = load ptr, ptr %10, align 8, !dbg !3730
  %29 = getelementptr inbounds %struct.hash_bucket, ptr %28, i32 0, i32 1, !dbg !3732
  %30 = load i32, ptr %29, align 8, !dbg !3732
  %31 = add i32 %30, 1, !dbg !3733
  %32 = load ptr, ptr %10, align 8, !dbg !3734
  %33 = getelementptr inbounds %struct.hash_bucket, ptr %32, i32 0, i32 2, !dbg !3735
  %34 = load i32, ptr %33, align 4, !dbg !3735
  %35 = icmp uge i32 %31, %34, !dbg !3736
  br i1 %35, label %36, label %60, !dbg !3737

36:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata ptr %13, metadata !3738, metadata !DIExpression()), !dbg !3740
  %37 = load ptr, ptr %10, align 8, !dbg !3741
  %38 = getelementptr inbounds %struct.hash_bucket, ptr %37, i32 0, i32 2, !dbg !3742
  %39 = load i32, ptr %38, align 4, !dbg !3742
  %40 = add i32 %39, 64, !dbg !3743
  store i32 %40, ptr %13, align 4, !dbg !3740
  call void @llvm.dbg.declare(metadata ptr %14, metadata !3744, metadata !DIExpression()), !dbg !3745
  %41 = load ptr, ptr %10, align 8, !dbg !3746
  %42 = getelementptr inbounds %struct.hash_bucket, ptr %41, i32 0, i32 0, !dbg !3747
  %43 = load ptr, ptr %42, align 8, !dbg !3747
  %44 = load i32, ptr %13, align 4, !dbg !3748
  %45 = zext i32 %44 to i64, !dbg !3748
  %46 = call ptr @reallocarray(ptr noundef %43, i64 noundef %45, i64 noundef 24) #18, !dbg !3749
  store ptr %46, ptr %14, align 8, !dbg !3745
  %47 = load ptr, ptr %14, align 8, !dbg !3750
  %48 = icmp eq ptr %47, null, !dbg !3752
  br i1 %48, label %49, label %53, !dbg !3753

49:                                               ; preds = %36
  %50 = call ptr @__errno_location() #20, !dbg !3754
  %51 = load i32, ptr %50, align 4, !dbg !3754
  %52 = sub nsw i32 0, %51, !dbg !3755
  store i32 %52, ptr %4, align 4, !dbg !3756
  br label %144, !dbg !3756

53:                                               ; preds = %36
  %54 = load ptr, ptr %14, align 8, !dbg !3757
  %55 = load ptr, ptr %10, align 8, !dbg !3758
  %56 = getelementptr inbounds %struct.hash_bucket, ptr %55, i32 0, i32 0, !dbg !3759
  store ptr %54, ptr %56, align 8, !dbg !3760
  %57 = load i32, ptr %13, align 4, !dbg !3761
  %58 = load ptr, ptr %10, align 8, !dbg !3762
  %59 = getelementptr inbounds %struct.hash_bucket, ptr %58, i32 0, i32 2, !dbg !3763
  store i32 %57, ptr %59, align 4, !dbg !3764
  br label %60, !dbg !3765

60:                                               ; preds = %53, %3
  %61 = load ptr, ptr %10, align 8, !dbg !3766
  %62 = getelementptr inbounds %struct.hash_bucket, ptr %61, i32 0, i32 0, !dbg !3767
  %63 = load ptr, ptr %62, align 8, !dbg !3767
  store ptr %63, ptr %11, align 8, !dbg !3768
  %64 = load ptr, ptr %11, align 8, !dbg !3769
  %65 = load ptr, ptr %10, align 8, !dbg !3770
  %66 = getelementptr inbounds %struct.hash_bucket, ptr %65, i32 0, i32 1, !dbg !3771
  %67 = load i32, ptr %66, align 8, !dbg !3771
  %68 = zext i32 %67 to i64, !dbg !3772
  %69 = getelementptr inbounds %struct.hash_entry, ptr %64, i64 %68, !dbg !3772
  store ptr %69, ptr %12, align 8, !dbg !3773
  br label %70, !dbg !3774

70:                                               ; preds = %123, %60
  %71 = load ptr, ptr %11, align 8, !dbg !3775
  %72 = load ptr, ptr %12, align 8, !dbg !3778
  %73 = icmp ult ptr %71, %72, !dbg !3779
  br i1 %73, label %74, label %126, !dbg !3780

74:                                               ; preds = %70
  %75 = load i32, ptr %8, align 4, !dbg !3781
  %76 = load ptr, ptr %11, align 8, !dbg !3784
  %77 = getelementptr inbounds %struct.hash_entry, ptr %76, i32 0, i32 2, !dbg !3785
  %78 = load i32, ptr %77, align 8, !dbg !3785
  %79 = icmp ne i32 %75, %78, !dbg !3786
  br i1 %79, label %80, label %81, !dbg !3787

80:                                               ; preds = %74
  br label %123, !dbg !3788

81:                                               ; preds = %74
  %82 = load ptr, ptr %5, align 8, !dbg !3789
  %83 = getelementptr inbounds %struct.hash, ptr %82, i32 0, i32 2, !dbg !3791
  %84 = load ptr, ptr %83, align 8, !dbg !3791
  %85 = load ptr, ptr %6, align 8, !dbg !3792
  %86 = load ptr, ptr %11, align 8, !dbg !3793
  %87 = getelementptr inbounds %struct.hash_entry, ptr %86, i32 0, i32 0, !dbg !3794
  %88 = load ptr, ptr %87, align 8, !dbg !3794
  %89 = call i32 %84(ptr noundef %85, ptr noundef %88), !dbg !3789
  %90 = icmp ne i32 %89, 0, !dbg !3795
  br i1 %90, label %91, label %92, !dbg !3796

91:                                               ; preds = %81
  br label %123, !dbg !3797

92:                                               ; preds = %81
  %93 = load ptr, ptr %5, align 8, !dbg !3798
  %94 = getelementptr inbounds %struct.hash, ptr %93, i32 0, i32 3, !dbg !3800
  %95 = load ptr, ptr %94, align 8, !dbg !3800
  %96 = icmp ne ptr %95, null, !dbg !3798
  br i1 %96, label %97, label %104, !dbg !3801

97:                                               ; preds = %92
  %98 = load ptr, ptr %5, align 8, !dbg !3802
  %99 = getelementptr inbounds %struct.hash, ptr %98, i32 0, i32 3, !dbg !3803
  %100 = load ptr, ptr %99, align 8, !dbg !3803
  %101 = load ptr, ptr %11, align 8, !dbg !3804
  %102 = getelementptr inbounds %struct.hash_entry, ptr %101, i32 0, i32 1, !dbg !3805
  %103 = load ptr, ptr %102, align 8, !dbg !3805
  call void %100(ptr noundef %103), !dbg !3802
  br label %104, !dbg !3802

104:                                              ; preds = %97, %92
  %105 = load ptr, ptr %5, align 8, !dbg !3806
  %106 = getelementptr inbounds %struct.hash, ptr %105, i32 0, i32 4, !dbg !3808
  %107 = load ptr, ptr %106, align 8, !dbg !3808
  %108 = icmp ne ptr %107, null, !dbg !3806
  br i1 %108, label %109, label %116, !dbg !3809

109:                                              ; preds = %104
  %110 = load ptr, ptr %5, align 8, !dbg !3810
  %111 = getelementptr inbounds %struct.hash, ptr %110, i32 0, i32 4, !dbg !3811
  %112 = load ptr, ptr %111, align 8, !dbg !3811
  %113 = load ptr, ptr %11, align 8, !dbg !3812
  %114 = getelementptr inbounds %struct.hash_entry, ptr %113, i32 0, i32 0, !dbg !3813
  %115 = load ptr, ptr %114, align 8, !dbg !3813
  call void %112(ptr noundef %115), !dbg !3810
  br label %116, !dbg !3810

116:                                              ; preds = %109, %104
  %117 = load ptr, ptr %6, align 8, !dbg !3814
  %118 = load ptr, ptr %11, align 8, !dbg !3815
  %119 = getelementptr inbounds %struct.hash_entry, ptr %118, i32 0, i32 0, !dbg !3816
  store ptr %117, ptr %119, align 8, !dbg !3817
  %120 = load ptr, ptr %7, align 8, !dbg !3818
  %121 = load ptr, ptr %11, align 8, !dbg !3819
  %122 = getelementptr inbounds %struct.hash_entry, ptr %121, i32 0, i32 1, !dbg !3820
  store ptr %120, ptr %122, align 8, !dbg !3821
  store i32 0, ptr %4, align 4, !dbg !3822
  br label %144, !dbg !3822

123:                                              ; preds = %91, %80
  %124 = load ptr, ptr %11, align 8, !dbg !3823
  %125 = getelementptr inbounds %struct.hash_entry, ptr %124, i32 1, !dbg !3823
  store ptr %125, ptr %11, align 8, !dbg !3823
  br label %70, !dbg !3824, !llvm.loop !3825

126:                                              ; preds = %70
  %127 = load ptr, ptr %6, align 8, !dbg !3827
  %128 = load ptr, ptr %11, align 8, !dbg !3828
  %129 = getelementptr inbounds %struct.hash_entry, ptr %128, i32 0, i32 0, !dbg !3829
  store ptr %127, ptr %129, align 8, !dbg !3830
  %130 = load ptr, ptr %7, align 8, !dbg !3831
  %131 = load ptr, ptr %11, align 8, !dbg !3832
  %132 = getelementptr inbounds %struct.hash_entry, ptr %131, i32 0, i32 1, !dbg !3833
  store ptr %130, ptr %132, align 8, !dbg !3834
  %133 = load i32, ptr %8, align 4, !dbg !3835
  %134 = load ptr, ptr %11, align 8, !dbg !3836
  %135 = getelementptr inbounds %struct.hash_entry, ptr %134, i32 0, i32 2, !dbg !3837
  store i32 %133, ptr %135, align 8, !dbg !3838
  %136 = load ptr, ptr %10, align 8, !dbg !3839
  %137 = getelementptr inbounds %struct.hash_bucket, ptr %136, i32 0, i32 1, !dbg !3840
  %138 = load i32, ptr %137, align 8, !dbg !3841
  %139 = add i32 %138, 1, !dbg !3841
  store i32 %139, ptr %137, align 8, !dbg !3841
  %140 = load ptr, ptr %5, align 8, !dbg !3842
  %141 = getelementptr inbounds %struct.hash, ptr %140, i32 0, i32 0, !dbg !3843
  %142 = load i32, ptr %141, align 8, !dbg !3844
  %143 = add i32 %142, 1, !dbg !3844
  store i32 %143, ptr %141, align 8, !dbg !3844
  store i32 0, ptr %4, align 4, !dbg !3845
  br label %144, !dbg !3845

144:                                              ; preds = %126, %116, %49
  %145 = load i32, ptr %4, align 4, !dbg !3846
  ret i32 %145, !dbg !3846
}

; Function Attrs: nounwind willreturn memory(none)
declare ptr @__errno_location() #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @hash_add_unique(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !3847 {
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i32, align 4
  %14 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !3848, metadata !DIExpression()), !dbg !3849
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !3850, metadata !DIExpression()), !dbg !3851
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !3852, metadata !DIExpression()), !dbg !3853
  call void @llvm.dbg.declare(metadata ptr %8, metadata !3854, metadata !DIExpression()), !dbg !3855
  %15 = load ptr, ptr %5, align 8, !dbg !3856
  %16 = getelementptr inbounds %struct.hash, ptr %15, i32 0, i32 1, !dbg !3857
  %17 = load ptr, ptr %16, align 8, !dbg !3857
  %18 = load ptr, ptr %6, align 8, !dbg !3858
  %19 = call i32 %17(ptr noundef %18), !dbg !3856
  store i32 %19, ptr %8, align 4, !dbg !3855
  call void @llvm.dbg.declare(metadata ptr %9, metadata !3859, metadata !DIExpression()), !dbg !3860
  %20 = load i32, ptr %8, align 4, !dbg !3861
  %21 = and i32 %20, 511, !dbg !3862
  store i32 %21, ptr %9, align 4, !dbg !3860
  call void @llvm.dbg.declare(metadata ptr %10, metadata !3863, metadata !DIExpression()), !dbg !3864
  %22 = load ptr, ptr %5, align 8, !dbg !3865
  %23 = getelementptr inbounds %struct.hash, ptr %22, i32 0, i32 5, !dbg !3866
  %24 = getelementptr inbounds [0 x %struct.hash_bucket], ptr %23, i64 0, i64 0, !dbg !3865
  %25 = load i32, ptr %9, align 4, !dbg !3867
  %26 = zext i32 %25 to i64, !dbg !3868
  %27 = getelementptr inbounds %struct.hash_bucket, ptr %24, i64 %26, !dbg !3868
  store ptr %27, ptr %10, align 8, !dbg !3864
  call void @llvm.dbg.declare(metadata ptr %11, metadata !3869, metadata !DIExpression()), !dbg !3870
  call void @llvm.dbg.declare(metadata ptr %12, metadata !3871, metadata !DIExpression()), !dbg !3872
  %28 = load ptr, ptr %10, align 8, !dbg !3873
  %29 = getelementptr inbounds %struct.hash_bucket, ptr %28, i32 0, i32 1, !dbg !3875
  %30 = load i32, ptr %29, align 8, !dbg !3875
  %31 = add i32 %30, 1, !dbg !3876
  %32 = load ptr, ptr %10, align 8, !dbg !3877
  %33 = getelementptr inbounds %struct.hash_bucket, ptr %32, i32 0, i32 2, !dbg !3878
  %34 = load i32, ptr %33, align 4, !dbg !3878
  %35 = icmp uge i32 %31, %34, !dbg !3879
  br i1 %35, label %36, label %60, !dbg !3880

36:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata ptr %13, metadata !3881, metadata !DIExpression()), !dbg !3883
  %37 = load ptr, ptr %10, align 8, !dbg !3884
  %38 = getelementptr inbounds %struct.hash_bucket, ptr %37, i32 0, i32 2, !dbg !3885
  %39 = load i32, ptr %38, align 4, !dbg !3885
  %40 = add i32 %39, 64, !dbg !3886
  store i32 %40, ptr %13, align 4, !dbg !3883
  call void @llvm.dbg.declare(metadata ptr %14, metadata !3887, metadata !DIExpression()), !dbg !3888
  %41 = load ptr, ptr %10, align 8, !dbg !3889
  %42 = getelementptr inbounds %struct.hash_bucket, ptr %41, i32 0, i32 0, !dbg !3890
  %43 = load ptr, ptr %42, align 8, !dbg !3890
  %44 = load i32, ptr %13, align 4, !dbg !3891
  %45 = zext i32 %44 to i64, !dbg !3891
  %46 = call ptr @reallocarray(ptr noundef %43, i64 noundef %45, i64 noundef 24) #18, !dbg !3892
  store ptr %46, ptr %14, align 8, !dbg !3888
  %47 = load ptr, ptr %14, align 8, !dbg !3893
  %48 = icmp eq ptr %47, null, !dbg !3895
  br i1 %48, label %49, label %53, !dbg !3896

49:                                               ; preds = %36
  %50 = call ptr @__errno_location() #20, !dbg !3897
  %51 = load i32, ptr %50, align 4, !dbg !3897
  %52 = sub nsw i32 0, %51, !dbg !3898
  store i32 %52, ptr %4, align 4, !dbg !3899
  br label %114, !dbg !3899

53:                                               ; preds = %36
  %54 = load ptr, ptr %14, align 8, !dbg !3900
  %55 = load ptr, ptr %10, align 8, !dbg !3901
  %56 = getelementptr inbounds %struct.hash_bucket, ptr %55, i32 0, i32 0, !dbg !3902
  store ptr %54, ptr %56, align 8, !dbg !3903
  %57 = load i32, ptr %13, align 4, !dbg !3904
  %58 = load ptr, ptr %10, align 8, !dbg !3905
  %59 = getelementptr inbounds %struct.hash_bucket, ptr %58, i32 0, i32 2, !dbg !3906
  store i32 %57, ptr %59, align 4, !dbg !3907
  br label %60, !dbg !3908

60:                                               ; preds = %53, %3
  %61 = load ptr, ptr %10, align 8, !dbg !3909
  %62 = getelementptr inbounds %struct.hash_bucket, ptr %61, i32 0, i32 0, !dbg !3910
  %63 = load ptr, ptr %62, align 8, !dbg !3910
  store ptr %63, ptr %11, align 8, !dbg !3911
  %64 = load ptr, ptr %11, align 8, !dbg !3912
  %65 = load ptr, ptr %10, align 8, !dbg !3913
  %66 = getelementptr inbounds %struct.hash_bucket, ptr %65, i32 0, i32 1, !dbg !3914
  %67 = load i32, ptr %66, align 8, !dbg !3914
  %68 = zext i32 %67 to i64, !dbg !3915
  %69 = getelementptr inbounds %struct.hash_entry, ptr %64, i64 %68, !dbg !3915
  store ptr %69, ptr %12, align 8, !dbg !3916
  br label %70, !dbg !3917

70:                                               ; preds = %93, %60
  %71 = load ptr, ptr %11, align 8, !dbg !3918
  %72 = load ptr, ptr %12, align 8, !dbg !3921
  %73 = icmp ult ptr %71, %72, !dbg !3922
  br i1 %73, label %74, label %96, !dbg !3923

74:                                               ; preds = %70
  %75 = load i32, ptr %8, align 4, !dbg !3924
  %76 = load ptr, ptr %11, align 8, !dbg !3927
  %77 = getelementptr inbounds %struct.hash_entry, ptr %76, i32 0, i32 2, !dbg !3928
  %78 = load i32, ptr %77, align 8, !dbg !3928
  %79 = icmp ne i32 %75, %78, !dbg !3929
  br i1 %79, label %80, label %81, !dbg !3930

80:                                               ; preds = %74
  br label %93, !dbg !3931

81:                                               ; preds = %74
  %82 = load ptr, ptr %5, align 8, !dbg !3932
  %83 = getelementptr inbounds %struct.hash, ptr %82, i32 0, i32 2, !dbg !3934
  %84 = load ptr, ptr %83, align 8, !dbg !3934
  %85 = load ptr, ptr %6, align 8, !dbg !3935
  %86 = load ptr, ptr %11, align 8, !dbg !3936
  %87 = getelementptr inbounds %struct.hash_entry, ptr %86, i32 0, i32 0, !dbg !3937
  %88 = load ptr, ptr %87, align 8, !dbg !3937
  %89 = call i32 %84(ptr noundef %85, ptr noundef %88), !dbg !3932
  %90 = icmp eq i32 %89, 0, !dbg !3938
  br i1 %90, label %91, label %92, !dbg !3939

91:                                               ; preds = %81
  store i32 -17, ptr %4, align 4, !dbg !3940
  br label %114, !dbg !3940

92:                                               ; preds = %81
  br label %93, !dbg !3941

93:                                               ; preds = %92, %80
  %94 = load ptr, ptr %11, align 8, !dbg !3942
  %95 = getelementptr inbounds %struct.hash_entry, ptr %94, i32 1, !dbg !3942
  store ptr %95, ptr %11, align 8, !dbg !3942
  br label %70, !dbg !3943, !llvm.loop !3944

96:                                               ; preds = %70
  %97 = load ptr, ptr %6, align 8, !dbg !3946
  %98 = load ptr, ptr %11, align 8, !dbg !3947
  %99 = getelementptr inbounds %struct.hash_entry, ptr %98, i32 0, i32 0, !dbg !3948
  store ptr %97, ptr %99, align 8, !dbg !3949
  %100 = load ptr, ptr %7, align 8, !dbg !3950
  %101 = load ptr, ptr %11, align 8, !dbg !3951
  %102 = getelementptr inbounds %struct.hash_entry, ptr %101, i32 0, i32 1, !dbg !3952
  store ptr %100, ptr %102, align 8, !dbg !3953
  %103 = load i32, ptr %8, align 4, !dbg !3954
  %104 = load ptr, ptr %11, align 8, !dbg !3955
  %105 = getelementptr inbounds %struct.hash_entry, ptr %104, i32 0, i32 2, !dbg !3956
  store i32 %103, ptr %105, align 8, !dbg !3957
  %106 = load ptr, ptr %10, align 8, !dbg !3958
  %107 = getelementptr inbounds %struct.hash_bucket, ptr %106, i32 0, i32 1, !dbg !3959
  %108 = load i32, ptr %107, align 8, !dbg !3960
  %109 = add i32 %108, 1, !dbg !3960
  store i32 %109, ptr %107, align 8, !dbg !3960
  %110 = load ptr, ptr %5, align 8, !dbg !3961
  %111 = getelementptr inbounds %struct.hash, ptr %110, i32 0, i32 0, !dbg !3962
  %112 = load i32, ptr %111, align 8, !dbg !3963
  %113 = add i32 %112, 1, !dbg !3963
  store i32 %113, ptr %111, align 8, !dbg !3963
  store i32 0, ptr %4, align 4, !dbg !3964
  br label %114, !dbg !3964

114:                                              ; preds = %96, %91, %49
  %115 = load i32, ptr %4, align 4, !dbg !3965
  ret i32 %115, !dbg !3965
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @hash_find(ptr noundef %0, ptr noundef %1) #0 !dbg !3966 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !3971, metadata !DIExpression()), !dbg !3972
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !3973, metadata !DIExpression()), !dbg !3974
  call void @llvm.dbg.declare(metadata ptr %6, metadata !3975, metadata !DIExpression()), !dbg !3978
  %7 = load ptr, ptr %4, align 8, !dbg !3979
  %8 = load ptr, ptr %5, align 8, !dbg !3980
  %9 = load ptr, ptr %4, align 8, !dbg !3981
  %10 = getelementptr inbounds %struct.hash, ptr %9, i32 0, i32 1, !dbg !3982
  %11 = load ptr, ptr %10, align 8, !dbg !3982
  %12 = load ptr, ptr %5, align 8, !dbg !3983
  %13 = call i32 %11(ptr noundef %12), !dbg !3981
  %14 = call ptr @hash_find_entry(ptr noundef %7, ptr noundef %8, i32 noundef %13), !dbg !3984
  store ptr %14, ptr %6, align 8, !dbg !3985
  %15 = load ptr, ptr %6, align 8, !dbg !3986
  %16 = icmp ne ptr %15, null, !dbg !3986
  br i1 %16, label %17, label %21, !dbg !3988

17:                                               ; preds = %2
  %18 = load ptr, ptr %6, align 8, !dbg !3989
  %19 = getelementptr inbounds %struct.hash_entry, ptr %18, i32 0, i32 1, !dbg !3990
  %20 = load ptr, ptr %19, align 8, !dbg !3990
  store ptr %20, ptr %3, align 8, !dbg !3991
  br label %22, !dbg !3991

21:                                               ; preds = %2
  store ptr null, ptr %3, align 8, !dbg !3992
  br label %22, !dbg !3992

22:                                               ; preds = %21, %17
  %23 = load ptr, ptr %3, align 8, !dbg !3993
  ret ptr %23, !dbg !3993
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @hash_find_entry(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 !dbg !3994 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !3997, metadata !DIExpression()), !dbg !3998
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !3999, metadata !DIExpression()), !dbg !4000
  store i32 %2, ptr %7, align 4
  call void @llvm.dbg.declare(metadata ptr %7, metadata !4001, metadata !DIExpression()), !dbg !4002
  call void @llvm.dbg.declare(metadata ptr %8, metadata !4003, metadata !DIExpression()), !dbg !4004
  %12 = load i32, ptr %7, align 4, !dbg !4005
  %13 = and i32 %12, 511, !dbg !4006
  store i32 %13, ptr %8, align 4, !dbg !4004
  call void @llvm.dbg.declare(metadata ptr %9, metadata !4007, metadata !DIExpression()), !dbg !4010
  %14 = load ptr, ptr %5, align 8, !dbg !4011
  %15 = getelementptr inbounds %struct.hash, ptr %14, i32 0, i32 5, !dbg !4012
  %16 = getelementptr inbounds [0 x %struct.hash_bucket], ptr %15, i64 0, i64 0, !dbg !4011
  %17 = load i32, ptr %8, align 4, !dbg !4013
  %18 = zext i32 %17 to i64, !dbg !4014
  %19 = getelementptr inbounds %struct.hash_bucket, ptr %16, i64 %18, !dbg !4014
  store ptr %19, ptr %9, align 8, !dbg !4010
  call void @llvm.dbg.declare(metadata ptr %10, metadata !4015, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.declare(metadata ptr %11, metadata !4017, metadata !DIExpression()), !dbg !4018
  %20 = load ptr, ptr %9, align 8, !dbg !4019
  %21 = getelementptr inbounds %struct.hash_bucket, ptr %20, i32 0, i32 0, !dbg !4020
  %22 = load ptr, ptr %21, align 8, !dbg !4020
  store ptr %22, ptr %10, align 8, !dbg !4021
  %23 = load ptr, ptr %10, align 8, !dbg !4022
  %24 = load ptr, ptr %9, align 8, !dbg !4023
  %25 = getelementptr inbounds %struct.hash_bucket, ptr %24, i32 0, i32 1, !dbg !4024
  %26 = load i32, ptr %25, align 8, !dbg !4024
  %27 = zext i32 %26 to i64, !dbg !4025
  %28 = getelementptr inbounds %struct.hash_entry, ptr %23, i64 %27, !dbg !4025
  store ptr %28, ptr %11, align 8, !dbg !4026
  br label %29, !dbg !4027

29:                                               ; preds = %53, %3
  %30 = load ptr, ptr %10, align 8, !dbg !4028
  %31 = load ptr, ptr %11, align 8, !dbg !4031
  %32 = icmp ult ptr %30, %31, !dbg !4032
  br i1 %32, label %33, label %56, !dbg !4033

33:                                               ; preds = %29
  %34 = load i32, ptr %7, align 4, !dbg !4034
  %35 = load ptr, ptr %10, align 8, !dbg !4037
  %36 = getelementptr inbounds %struct.hash_entry, ptr %35, i32 0, i32 2, !dbg !4038
  %37 = load i32, ptr %36, align 8, !dbg !4038
  %38 = icmp ne i32 %34, %37, !dbg !4039
  br i1 %38, label %39, label %40, !dbg !4040

39:                                               ; preds = %33
  br label %53, !dbg !4041

40:                                               ; preds = %33
  %41 = load ptr, ptr %5, align 8, !dbg !4042
  %42 = getelementptr inbounds %struct.hash, ptr %41, i32 0, i32 2, !dbg !4044
  %43 = load ptr, ptr %42, align 8, !dbg !4044
  %44 = load ptr, ptr %6, align 8, !dbg !4045
  %45 = load ptr, ptr %10, align 8, !dbg !4046
  %46 = getelementptr inbounds %struct.hash_entry, ptr %45, i32 0, i32 0, !dbg !4047
  %47 = load ptr, ptr %46, align 8, !dbg !4047
  %48 = call i32 %43(ptr noundef %44, ptr noundef %47), !dbg !4042
  %49 = icmp eq i32 %48, 0, !dbg !4048
  br i1 %49, label %50, label %52, !dbg !4049

50:                                               ; preds = %40
  %51 = load ptr, ptr %10, align 8, !dbg !4050
  store ptr %51, ptr %4, align 8, !dbg !4051
  br label %57, !dbg !4051

52:                                               ; preds = %40
  br label %53, !dbg !4052

53:                                               ; preds = %52, %39
  %54 = load ptr, ptr %10, align 8, !dbg !4053
  %55 = getelementptr inbounds %struct.hash_entry, ptr %54, i32 1, !dbg !4053
  store ptr %55, ptr %10, align 8, !dbg !4053
  br label %29, !dbg !4054, !llvm.loop !4055

56:                                               ; preds = %29
  store ptr null, ptr %4, align 8, !dbg !4057
  br label %57, !dbg !4057

57:                                               ; preds = %56, %50
  %58 = load ptr, ptr %4, align 8, !dbg !4058
  ret ptr %58, !dbg !4058
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @hash_del(ptr noundef %0, ptr noundef %1) #0 !dbg !4059 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !4062, metadata !DIExpression()), !dbg !4063
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !4064, metadata !DIExpression()), !dbg !4065
  call void @llvm.dbg.declare(metadata ptr %6, metadata !4066, metadata !DIExpression()), !dbg !4067
  %14 = load ptr, ptr %4, align 8, !dbg !4068
  %15 = getelementptr inbounds %struct.hash, ptr %14, i32 0, i32 1, !dbg !4069
  %16 = load ptr, ptr %15, align 8, !dbg !4069
  %17 = load ptr, ptr %5, align 8, !dbg !4070
  %18 = call i32 %16(ptr noundef %17), !dbg !4068
  store i32 %18, ptr %6, align 4, !dbg !4067
  call void @llvm.dbg.declare(metadata ptr %7, metadata !4071, metadata !DIExpression()), !dbg !4072
  %19 = load i32, ptr %6, align 4, !dbg !4073
  %20 = and i32 %19, 511, !dbg !4074
  store i32 %20, ptr %7, align 4, !dbg !4072
  call void @llvm.dbg.declare(metadata ptr %8, metadata !4075, metadata !DIExpression()), !dbg !4076
  call void @llvm.dbg.declare(metadata ptr %9, metadata !4077, metadata !DIExpression()), !dbg !4078
  call void @llvm.dbg.declare(metadata ptr %10, metadata !4079, metadata !DIExpression()), !dbg !4080
  %21 = load ptr, ptr %4, align 8, !dbg !4081
  %22 = getelementptr inbounds %struct.hash, ptr %21, i32 0, i32 5, !dbg !4082
  %23 = getelementptr inbounds [0 x %struct.hash_bucket], ptr %22, i64 0, i64 0, !dbg !4081
  %24 = load i32, ptr %7, align 4, !dbg !4083
  %25 = zext i32 %24 to i64, !dbg !4084
  %26 = getelementptr inbounds %struct.hash_bucket, ptr %23, i64 %25, !dbg !4084
  store ptr %26, ptr %10, align 8, !dbg !4080
  call void @llvm.dbg.declare(metadata ptr %11, metadata !4085, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.declare(metadata ptr %12, metadata !4087, metadata !DIExpression()), !dbg !4088
  %27 = load ptr, ptr %4, align 8, !dbg !4089
  %28 = load ptr, ptr %5, align 8, !dbg !4090
  %29 = load i32, ptr %6, align 4, !dbg !4091
  %30 = call ptr @hash_find_entry(ptr noundef %27, ptr noundef %28, i32 noundef %29), !dbg !4092
  store ptr %30, ptr %11, align 8, !dbg !4093
  %31 = load ptr, ptr %11, align 8, !dbg !4094
  %32 = icmp eq ptr %31, null, !dbg !4096
  br i1 %32, label %33, label %34, !dbg !4097

33:                                               ; preds = %2
  store i32 -2, ptr %3, align 4, !dbg !4098
  br label %118, !dbg !4098

34:                                               ; preds = %2
  %35 = load ptr, ptr %4, align 8, !dbg !4099
  %36 = getelementptr inbounds %struct.hash, ptr %35, i32 0, i32 3, !dbg !4101
  %37 = load ptr, ptr %36, align 8, !dbg !4101
  %38 = icmp ne ptr %37, null, !dbg !4099
  br i1 %38, label %39, label %46, !dbg !4102

39:                                               ; preds = %34
  %40 = load ptr, ptr %4, align 8, !dbg !4103
  %41 = getelementptr inbounds %struct.hash, ptr %40, i32 0, i32 3, !dbg !4104
  %42 = load ptr, ptr %41, align 8, !dbg !4104
  %43 = load ptr, ptr %11, align 8, !dbg !4105
  %44 = getelementptr inbounds %struct.hash_entry, ptr %43, i32 0, i32 1, !dbg !4106
  %45 = load ptr, ptr %44, align 8, !dbg !4106
  call void %42(ptr noundef %45), !dbg !4103
  br label %46, !dbg !4103

46:                                               ; preds = %39, %34
  %47 = load ptr, ptr %4, align 8, !dbg !4107
  %48 = getelementptr inbounds %struct.hash, ptr %47, i32 0, i32 4, !dbg !4109
  %49 = load ptr, ptr %48, align 8, !dbg !4109
  %50 = icmp ne ptr %49, null, !dbg !4107
  br i1 %50, label %51, label %58, !dbg !4110

51:                                               ; preds = %46
  %52 = load ptr, ptr %4, align 8, !dbg !4111
  %53 = getelementptr inbounds %struct.hash, ptr %52, i32 0, i32 4, !dbg !4112
  %54 = load ptr, ptr %53, align 8, !dbg !4112
  %55 = load ptr, ptr %11, align 8, !dbg !4113
  %56 = getelementptr inbounds %struct.hash_entry, ptr %55, i32 0, i32 0, !dbg !4114
  %57 = load ptr, ptr %56, align 8, !dbg !4114
  call void %54(ptr noundef %57), !dbg !4111
  br label %58, !dbg !4111

58:                                               ; preds = %51, %46
  %59 = load ptr, ptr %10, align 8, !dbg !4115
  %60 = getelementptr inbounds %struct.hash_bucket, ptr %59, i32 0, i32 0, !dbg !4116
  %61 = load ptr, ptr %60, align 8, !dbg !4116
  %62 = load ptr, ptr %10, align 8, !dbg !4117
  %63 = getelementptr inbounds %struct.hash_bucket, ptr %62, i32 0, i32 1, !dbg !4118
  %64 = load i32, ptr %63, align 8, !dbg !4118
  %65 = zext i32 %64 to i64, !dbg !4119
  %66 = getelementptr inbounds %struct.hash_entry, ptr %61, i64 %65, !dbg !4119
  store ptr %66, ptr %12, align 8, !dbg !4120
  %67 = load ptr, ptr %11, align 8, !dbg !4121
  %68 = load ptr, ptr %11, align 8, !dbg !4122
  %69 = getelementptr inbounds %struct.hash_entry, ptr %68, i64 1, !dbg !4123
  %70 = load ptr, ptr %12, align 8, !dbg !4124
  %71 = load ptr, ptr %11, align 8, !dbg !4125
  %72 = ptrtoint ptr %70 to i64, !dbg !4126
  %73 = ptrtoint ptr %71 to i64, !dbg !4126
  %74 = sub i64 %72, %73, !dbg !4126
  %75 = sdiv exact i64 %74, 24, !dbg !4126
  %76 = mul i64 %75, 24, !dbg !4127
  call void @llvm.memmove.p0.p0.i64(ptr align 8 %67, ptr align 8 %69, i64 %76, i1 false), !dbg !4128
  %77 = load ptr, ptr %10, align 8, !dbg !4129
  %78 = getelementptr inbounds %struct.hash_bucket, ptr %77, i32 0, i32 1, !dbg !4130
  %79 = load i32, ptr %78, align 8, !dbg !4131
  %80 = add i32 %79, -1, !dbg !4131
  store i32 %80, ptr %78, align 8, !dbg !4131
  %81 = load ptr, ptr %4, align 8, !dbg !4132
  %82 = getelementptr inbounds %struct.hash, ptr %81, i32 0, i32 0, !dbg !4133
  %83 = load i32, ptr %82, align 8, !dbg !4134
  %84 = add i32 %83, -1, !dbg !4134
  store i32 %84, ptr %82, align 8, !dbg !4134
  %85 = load ptr, ptr %10, align 8, !dbg !4135
  %86 = getelementptr inbounds %struct.hash_bucket, ptr %85, i32 0, i32 1, !dbg !4136
  %87 = load i32, ptr %86, align 8, !dbg !4136
  %88 = udiv i32 %87, 64, !dbg !4137
  store i32 %88, ptr %8, align 4, !dbg !4138
  %89 = load ptr, ptr %10, align 8, !dbg !4139
  %90 = getelementptr inbounds %struct.hash_bucket, ptr %89, i32 0, i32 2, !dbg !4140
  %91 = load i32, ptr %90, align 4, !dbg !4140
  %92 = udiv i32 %91, 64, !dbg !4141
  store i32 %92, ptr %9, align 4, !dbg !4142
  %93 = load i32, ptr %8, align 4, !dbg !4143
  %94 = add i32 %93, 1, !dbg !4145
  %95 = load i32, ptr %9, align 4, !dbg !4146
  %96 = icmp ult i32 %94, %95, !dbg !4147
  br i1 %96, label %97, label %117, !dbg !4148

97:                                               ; preds = %58
  call void @llvm.dbg.declare(metadata ptr %13, metadata !4149, metadata !DIExpression()), !dbg !4151
  %98 = load ptr, ptr %10, align 8, !dbg !4152
  %99 = getelementptr inbounds %struct.hash_bucket, ptr %98, i32 0, i32 0, !dbg !4153
  %100 = load ptr, ptr %99, align 8, !dbg !4153
  %101 = load i32, ptr %8, align 4, !dbg !4154
  %102 = add i32 %101, 1, !dbg !4155
  %103 = zext i32 %102 to i64, !dbg !4154
  %104 = call ptr @reallocarray(ptr noundef %100, i64 noundef %103, i64 noundef 1536) #18, !dbg !4156
  store ptr %104, ptr %13, align 8, !dbg !4151
  %105 = load ptr, ptr %13, align 8, !dbg !4157
  %106 = icmp ne ptr %105, null, !dbg !4157
  br i1 %106, label %107, label %116, !dbg !4159

107:                                              ; preds = %97
  %108 = load ptr, ptr %13, align 8, !dbg !4160
  %109 = load ptr, ptr %10, align 8, !dbg !4162
  %110 = getelementptr inbounds %struct.hash_bucket, ptr %109, i32 0, i32 0, !dbg !4163
  store ptr %108, ptr %110, align 8, !dbg !4164
  %111 = load i32, ptr %8, align 4, !dbg !4165
  %112 = add i32 %111, 1, !dbg !4166
  %113 = mul i32 %112, 64, !dbg !4167
  %114 = load ptr, ptr %10, align 8, !dbg !4168
  %115 = getelementptr inbounds %struct.hash_bucket, ptr %114, i32 0, i32 2, !dbg !4169
  store i32 %113, ptr %115, align 4, !dbg !4170
  br label %116, !dbg !4171

116:                                              ; preds = %107, %97
  br label %117, !dbg !4172

117:                                              ; preds = %116, %58
  store i32 0, ptr %3, align 4, !dbg !4173
  br label %118, !dbg !4173

118:                                              ; preds = %117, %33
  %119 = load i32, ptr %3, align 4, !dbg !4174
  ret i32 %119, !dbg !4174
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @hash_get_count(ptr noundef %0) #0 !dbg !4175 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !4178, metadata !DIExpression()), !dbg !4179
  %3 = load ptr, ptr %2, align 8, !dbg !4180
  %4 = getelementptr inbounds %struct.hash, ptr %3, i32 0, i32 0, !dbg !4181
  %5 = load i32, ptr %4, align 8, !dbg !4181
  ret i32 %5, !dbg !4182
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_iter_init(ptr noundef %0, ptr noundef %1) #0 !dbg !4183 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !4192, metadata !DIExpression()), !dbg !4193
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !4194, metadata !DIExpression()), !dbg !4195
  %5 = load ptr, ptr %3, align 8, !dbg !4196
  %6 = load ptr, ptr %4, align 8, !dbg !4197
  %7 = getelementptr inbounds %struct.hash_bucket, ptr %6, i32 0, i32 0, !dbg !4198
  store ptr %5, ptr %7, align 8, !dbg !4199
  %8 = load ptr, ptr %4, align 8, !dbg !4200
  %9 = getelementptr inbounds %struct.hash_bucket, ptr %8, i32 0, i32 1, !dbg !4201
  store i32 0, ptr %9, align 8, !dbg !4202
  %10 = load ptr, ptr %4, align 8, !dbg !4203
  %11 = getelementptr inbounds %struct.hash_bucket, ptr %10, i32 0, i32 2, !dbg !4204
  store i32 -1, ptr %11, align 4, !dbg !4205
  ret void, !dbg !4206
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hash_iter_next(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !4207 {
  %4 = alloca i1, align 1
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !4211, metadata !DIExpression()), !dbg !4212
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !4213, metadata !DIExpression()), !dbg !4214
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !4215, metadata !DIExpression()), !dbg !4216
  call void @llvm.dbg.declare(metadata ptr %8, metadata !4217, metadata !DIExpression()), !dbg !4218
  %10 = load ptr, ptr %5, align 8, !dbg !4219
  %11 = getelementptr inbounds %struct.hash_bucket, ptr %10, i32 0, i32 0, !dbg !4220
  %12 = load ptr, ptr %11, align 8, !dbg !4220
  %13 = getelementptr inbounds %struct.hash, ptr %12, i32 0, i32 5, !dbg !4221
  %14 = getelementptr inbounds [0 x %struct.hash_bucket], ptr %13, i64 0, i64 0, !dbg !4219
  %15 = load ptr, ptr %5, align 8, !dbg !4222
  %16 = getelementptr inbounds %struct.hash_bucket, ptr %15, i32 0, i32 1, !dbg !4223
  %17 = load i32, ptr %16, align 8, !dbg !4223
  %18 = zext i32 %17 to i64, !dbg !4224
  %19 = getelementptr inbounds %struct.hash_bucket, ptr %14, i64 %18, !dbg !4224
  store ptr %19, ptr %8, align 8, !dbg !4218
  call void @llvm.dbg.declare(metadata ptr %9, metadata !4225, metadata !DIExpression()), !dbg !4226
  %20 = load ptr, ptr %5, align 8, !dbg !4227
  %21 = getelementptr inbounds %struct.hash_bucket, ptr %20, i32 0, i32 2, !dbg !4228
  %22 = load i32, ptr %21, align 4, !dbg !4229
  %23 = add nsw i32 %22, 1, !dbg !4229
  store i32 %23, ptr %21, align 4, !dbg !4229
  %24 = load ptr, ptr %5, align 8, !dbg !4230
  %25 = getelementptr inbounds %struct.hash_bucket, ptr %24, i32 0, i32 2, !dbg !4232
  %26 = load i32, ptr %25, align 4, !dbg !4232
  %27 = load ptr, ptr %8, align 8, !dbg !4233
  %28 = getelementptr inbounds %struct.hash_bucket, ptr %27, i32 0, i32 1, !dbg !4234
  %29 = load i32, ptr %28, align 8, !dbg !4234
  %30 = icmp uge i32 %26, %29, !dbg !4235
  br i1 %30, label %31, label %72, !dbg !4236

31:                                               ; preds = %3
  %32 = load ptr, ptr %5, align 8, !dbg !4237
  %33 = getelementptr inbounds %struct.hash_bucket, ptr %32, i32 0, i32 2, !dbg !4239
  store i32 0, ptr %33, align 4, !dbg !4240
  %34 = load ptr, ptr %5, align 8, !dbg !4241
  %35 = getelementptr inbounds %struct.hash_bucket, ptr %34, i32 0, i32 1, !dbg !4243
  %36 = load i32, ptr %35, align 8, !dbg !4244
  %37 = add i32 %36, 1, !dbg !4244
  store i32 %37, ptr %35, align 8, !dbg !4244
  br label %38, !dbg !4241

38:                                               ; preds = %60, %31
  %39 = load ptr, ptr %5, align 8, !dbg !4245
  %40 = getelementptr inbounds %struct.hash_bucket, ptr %39, i32 0, i32 1, !dbg !4247
  %41 = load i32, ptr %40, align 8, !dbg !4247
  %42 = icmp ult i32 %41, 512, !dbg !4248
  br i1 %42, label %43, label %65, !dbg !4249

43:                                               ; preds = %38
  %44 = load ptr, ptr %5, align 8, !dbg !4250
  %45 = getelementptr inbounds %struct.hash_bucket, ptr %44, i32 0, i32 0, !dbg !4252
  %46 = load ptr, ptr %45, align 8, !dbg !4252
  %47 = getelementptr inbounds %struct.hash, ptr %46, i32 0, i32 5, !dbg !4253
  %48 = getelementptr inbounds [0 x %struct.hash_bucket], ptr %47, i64 0, i64 0, !dbg !4250
  %49 = load ptr, ptr %5, align 8, !dbg !4254
  %50 = getelementptr inbounds %struct.hash_bucket, ptr %49, i32 0, i32 1, !dbg !4255
  %51 = load i32, ptr %50, align 8, !dbg !4255
  %52 = zext i32 %51 to i64, !dbg !4256
  %53 = getelementptr inbounds %struct.hash_bucket, ptr %48, i64 %52, !dbg !4256
  store ptr %53, ptr %8, align 8, !dbg !4257
  %54 = load ptr, ptr %8, align 8, !dbg !4258
  %55 = getelementptr inbounds %struct.hash_bucket, ptr %54, i32 0, i32 1, !dbg !4260
  %56 = load i32, ptr %55, align 8, !dbg !4260
  %57 = icmp ugt i32 %56, 0, !dbg !4261
  br i1 %57, label %58, label %59, !dbg !4262

58:                                               ; preds = %43
  br label %65, !dbg !4263

59:                                               ; preds = %43
  br label %60, !dbg !4264

60:                                               ; preds = %59
  %61 = load ptr, ptr %5, align 8, !dbg !4265
  %62 = getelementptr inbounds %struct.hash_bucket, ptr %61, i32 0, i32 1, !dbg !4266
  %63 = load i32, ptr %62, align 8, !dbg !4267
  %64 = add i32 %63, 1, !dbg !4267
  store i32 %64, ptr %62, align 8, !dbg !4267
  br label %38, !dbg !4268, !llvm.loop !4269

65:                                               ; preds = %58, %38
  %66 = load ptr, ptr %5, align 8, !dbg !4271
  %67 = getelementptr inbounds %struct.hash_bucket, ptr %66, i32 0, i32 1, !dbg !4273
  %68 = load i32, ptr %67, align 8, !dbg !4273
  %69 = icmp uge i32 %68, 512, !dbg !4274
  br i1 %69, label %70, label %71, !dbg !4275

70:                                               ; preds = %65
  store i1 false, ptr %4, align 1, !dbg !4276
  br label %97, !dbg !4276

71:                                               ; preds = %65
  br label %72, !dbg !4277

72:                                               ; preds = %71, %3
  %73 = load ptr, ptr %8, align 8, !dbg !4278
  %74 = getelementptr inbounds %struct.hash_bucket, ptr %73, i32 0, i32 0, !dbg !4279
  %75 = load ptr, ptr %74, align 8, !dbg !4279
  %76 = load ptr, ptr %5, align 8, !dbg !4280
  %77 = getelementptr inbounds %struct.hash_bucket, ptr %76, i32 0, i32 2, !dbg !4281
  %78 = load i32, ptr %77, align 4, !dbg !4281
  %79 = sext i32 %78 to i64, !dbg !4282
  %80 = getelementptr inbounds %struct.hash_entry, ptr %75, i64 %79, !dbg !4282
  store ptr %80, ptr %9, align 8, !dbg !4283
  %81 = load ptr, ptr %7, align 8, !dbg !4284
  %82 = icmp ne ptr %81, null, !dbg !4286
  br i1 %82, label %83, label %88, !dbg !4287

83:                                               ; preds = %72
  %84 = load ptr, ptr %9, align 8, !dbg !4288
  %85 = getelementptr inbounds %struct.hash_entry, ptr %84, i32 0, i32 1, !dbg !4289
  %86 = load ptr, ptr %85, align 8, !dbg !4289
  %87 = load ptr, ptr %7, align 8, !dbg !4290
  store ptr %86, ptr %87, align 8, !dbg !4291
  br label %88, !dbg !4292

88:                                               ; preds = %83, %72
  %89 = load ptr, ptr %6, align 8, !dbg !4293
  %90 = icmp ne ptr %89, null, !dbg !4295
  br i1 %90, label %91, label %96, !dbg !4296

91:                                               ; preds = %88
  %92 = load ptr, ptr %9, align 8, !dbg !4297
  %93 = getelementptr inbounds %struct.hash_entry, ptr %92, i32 0, i32 0, !dbg !4298
  %94 = load ptr, ptr %93, align 8, !dbg !4298
  %95 = load ptr, ptr %6, align 8, !dbg !4299
  store ptr %94, ptr %95, align 8, !dbg !4300
  br label %96, !dbg !4301

96:                                               ; preds = %91, %88
  store i1 true, ptr %4, align 1, !dbg !4302
  br label %97, !dbg !4302

97:                                               ; preds = %96, %70
  %98 = load i1, ptr %4, align 1, !dbg !4303
  ret i1 %98, !dbg !4303
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local ptr @uint_to_string(i64 noundef %0, ptr noundef align 1 dereferenceable(25) %1, ptr noundef %2) #9 !dbg !57 {
  %4 = alloca ptr, align 8
  %5 = alloca i64, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i64 %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !4304, metadata !DIExpression()), !dbg !4305
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !4306, metadata !DIExpression()), !dbg !4307
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !4308, metadata !DIExpression()), !dbg !4309
  call void @llvm.dbg.declare(metadata ptr %8, metadata !4310, metadata !DIExpression()), !dbg !4311
  store i64 24, ptr %8, align 8, !dbg !4311
  %11 = load ptr, ptr %6, align 8, !dbg !4312
  %12 = load i64, ptr %8, align 8, !dbg !4313
  %13 = add i64 %12, -1, !dbg !4313
  store i64 %13, ptr %8, align 8, !dbg !4313
  %14 = getelementptr inbounds i8, ptr %11, i64 %12, !dbg !4312
  store i8 0, ptr %14, align 1, !dbg !4314
  br label %15, !dbg !4315

15:                                               ; preds = %18, %3
  %16 = load i64, ptr %5, align 8, !dbg !4316
  %17 = icmp uge i64 %16, 100, !dbg !4317
  br i1 %17, label %18, label %43, !dbg !4315

18:                                               ; preds = %15
  call void @llvm.dbg.declare(metadata ptr %9, metadata !4318, metadata !DIExpression()), !dbg !4320
  %19 = load i64, ptr %5, align 8, !dbg !4321
  %20 = urem i64 %19, 100, !dbg !4322
  %21 = mul i64 %20, 2, !dbg !4323
  %22 = trunc i64 %21 to i32, !dbg !4324
  store i32 %22, ptr %9, align 4, !dbg !4320
  %23 = load i64, ptr %5, align 8, !dbg !4325
  %24 = udiv i64 %23, 100, !dbg !4325
  store i64 %24, ptr %5, align 8, !dbg !4325
  %25 = load i32, ptr %9, align 4, !dbg !4326
  %26 = add i32 %25, 1, !dbg !4327
  %27 = zext i32 %26 to i64, !dbg !4328
  %28 = getelementptr inbounds [201 x i8], ptr @uint_to_string.digits, i64 0, i64 %27, !dbg !4328
  %29 = load i8, ptr %28, align 1, !dbg !4328
  %30 = load ptr, ptr %6, align 8, !dbg !4329
  %31 = load i64, ptr %8, align 8, !dbg !4330
  %32 = getelementptr inbounds i8, ptr %30, i64 %31, !dbg !4329
  store i8 %29, ptr %32, align 1, !dbg !4331
  %33 = load i32, ptr %9, align 4, !dbg !4332
  %34 = zext i32 %33 to i64, !dbg !4333
  %35 = getelementptr inbounds [201 x i8], ptr @uint_to_string.digits, i64 0, i64 %34, !dbg !4333
  %36 = load i8, ptr %35, align 1, !dbg !4333
  %37 = load ptr, ptr %6, align 8, !dbg !4334
  %38 = load i64, ptr %8, align 8, !dbg !4335
  %39 = sub i64 %38, 1, !dbg !4336
  %40 = getelementptr inbounds i8, ptr %37, i64 %39, !dbg !4334
  store i8 %36, ptr %40, align 1, !dbg !4337
  %41 = load i64, ptr %8, align 8, !dbg !4338
  %42 = sub i64 %41, 2, !dbg !4338
  store i64 %42, ptr %8, align 8, !dbg !4338
  br label %15, !dbg !4315, !llvm.loop !4339

43:                                               ; preds = %15
  %44 = load i64, ptr %5, align 8, !dbg !4341
  %45 = icmp ult i64 %44, 10, !dbg !4343
  br i1 %45, label %46, label %61, !dbg !4344

46:                                               ; preds = %43
  %47 = load i64, ptr %5, align 8, !dbg !4345
  %48 = trunc i64 %47 to i32, !dbg !4347
  %49 = add i32 48, %48, !dbg !4348
  %50 = trunc i32 %49 to i8, !dbg !4349
  %51 = load ptr, ptr %6, align 8, !dbg !4350
  %52 = load i64, ptr %8, align 8, !dbg !4351
  %53 = getelementptr inbounds i8, ptr %51, i64 %52, !dbg !4350
  store i8 %50, ptr %53, align 1, !dbg !4352
  %54 = load i64, ptr %8, align 8, !dbg !4353
  %55 = sub i64 25, %54, !dbg !4354
  %56 = sub i64 %55, 1, !dbg !4355
  %57 = load ptr, ptr %7, align 8, !dbg !4356
  store i64 %56, ptr %57, align 8, !dbg !4357
  %58 = load ptr, ptr %6, align 8, !dbg !4358
  %59 = load i64, ptr %8, align 8, !dbg !4359
  %60 = getelementptr inbounds i8, ptr %58, i64 %59, !dbg !4360
  store ptr %60, ptr %4, align 8, !dbg !4361
  br label %88, !dbg !4361

61:                                               ; preds = %43
  call void @llvm.dbg.declare(metadata ptr %10, metadata !4362, metadata !DIExpression()), !dbg !4363
  %62 = load i64, ptr %5, align 8, !dbg !4364
  %63 = trunc i64 %62 to i32, !dbg !4365
  %64 = mul i32 %63, 2, !dbg !4366
  store i32 %64, ptr %10, align 4, !dbg !4363
  %65 = load i32, ptr %10, align 4, !dbg !4367
  %66 = add i32 %65, 1, !dbg !4368
  %67 = zext i32 %66 to i64, !dbg !4369
  %68 = getelementptr inbounds [201 x i8], ptr @uint_to_string.digits, i64 0, i64 %67, !dbg !4369
  %69 = load i8, ptr %68, align 1, !dbg !4369
  %70 = load ptr, ptr %6, align 8, !dbg !4370
  %71 = load i64, ptr %8, align 8, !dbg !4371
  %72 = getelementptr inbounds i8, ptr %70, i64 %71, !dbg !4370
  store i8 %69, ptr %72, align 1, !dbg !4372
  %73 = load i32, ptr %10, align 4, !dbg !4373
  %74 = zext i32 %73 to i64, !dbg !4374
  %75 = getelementptr inbounds [201 x i8], ptr @uint_to_string.digits, i64 0, i64 %74, !dbg !4374
  %76 = load i8, ptr %75, align 1, !dbg !4374
  %77 = load ptr, ptr %6, align 8, !dbg !4375
  %78 = load i64, ptr %8, align 8, !dbg !4376
  %79 = sub i64 %78, 1, !dbg !4377
  %80 = getelementptr inbounds i8, ptr %77, i64 %79, !dbg !4375
  store i8 %76, ptr %80, align 1, !dbg !4378
  %81 = load i64, ptr %8, align 8, !dbg !4379
  %82 = sub i64 25, %81, !dbg !4380
  %83 = load ptr, ptr %7, align 8, !dbg !4381
  store i64 %82, ptr %83, align 8, !dbg !4382
  %84 = load ptr, ptr %6, align 8, !dbg !4383
  %85 = load i64, ptr %8, align 8, !dbg !4384
  %86 = getelementptr inbounds i8, ptr %84, i64 %85, !dbg !4385
  %87 = getelementptr inbounds i8, ptr %86, i64 -1, !dbg !4386
  store ptr %87, ptr %4, align 8, !dbg !4387
  br label %88, !dbg !4387

88:                                               ; preds = %61, %46
  %89 = load ptr, ptr %4, align 8, !dbg !4388
  ret ptr %89, !dbg !4388
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local ptr @int_to_string(i64 noundef %0, ptr noundef align 1 dereferenceable(25) %1, ptr noundef %2) #9 !dbg !4389 {
  %4 = alloca ptr, align 8
  %5 = alloca i64, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca ptr, align 8
  %12 = alloca i64, align 8
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %15 = alloca i64, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca ptr, align 8
  %19 = alloca i64, align 8
  %20 = alloca ptr, align 8
  %21 = alloca ptr, align 8
  %22 = alloca ptr, align 8
  store i64 %0, ptr %19, align 8
  call void @llvm.dbg.declare(metadata ptr %19, metadata !4393, metadata !DIExpression()), !dbg !4394
  store ptr %1, ptr %20, align 8
  call void @llvm.dbg.declare(metadata ptr %20, metadata !4395, metadata !DIExpression()), !dbg !4396
  store ptr %2, ptr %21, align 8
  call void @llvm.dbg.declare(metadata ptr %21, metadata !4397, metadata !DIExpression()), !dbg !4398
  %23 = load i64, ptr %19, align 8, !dbg !4399
  %24 = icmp slt i64 %23, 0, !dbg !4401
  br i1 %24, label %25, label %115, !dbg !4402

25:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata ptr %22, metadata !4403, metadata !DIExpression()), !dbg !4405
  %26 = load i64, ptr %19, align 8, !dbg !4406
  %27 = sub nsw i64 0, %26, !dbg !4407
  %28 = load ptr, ptr %20, align 8, !dbg !4408
  %29 = load ptr, ptr %21, align 8, !dbg !4409
  store i64 %27, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !4304, metadata !DIExpression()), !dbg !4410
  store ptr %28, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !4306, metadata !DIExpression()), !dbg !4412
  store ptr %29, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !4308, metadata !DIExpression()), !dbg !4413
  call void @llvm.dbg.declare(metadata ptr %8, metadata !4310, metadata !DIExpression()), !dbg !4414
  store i64 24, ptr %8, align 8, !dbg !4414
  %30 = load ptr, ptr %6, align 8, !dbg !4415
  %31 = load i64, ptr %8, align 8, !dbg !4416
  %32 = add i64 %31, -1, !dbg !4416
  store i64 %32, ptr %8, align 8, !dbg !4416
  %33 = getelementptr inbounds i8, ptr %30, i64 %31, !dbg !4415
  store i8 0, ptr %33, align 1, !dbg !4417
  br label %34, !dbg !4418

34:                                               ; preds = %37, %25
  %35 = load i64, ptr %5, align 8, !dbg !4419
  %36 = icmp uge i64 %35, 100, !dbg !4420
  br i1 %36, label %37, label %62, !dbg !4418

37:                                               ; preds = %34
  call void @llvm.dbg.declare(metadata ptr %9, metadata !4318, metadata !DIExpression()), !dbg !4421
  %38 = load i64, ptr %5, align 8, !dbg !4422
  %39 = urem i64 %38, 100, !dbg !4423
  %40 = mul i64 %39, 2, !dbg !4424
  %41 = trunc i64 %40 to i32, !dbg !4425
  store i32 %41, ptr %9, align 4, !dbg !4421
  %42 = load i64, ptr %5, align 8, !dbg !4426
  %43 = udiv i64 %42, 100, !dbg !4426
  store i64 %43, ptr %5, align 8, !dbg !4426
  %44 = load i32, ptr %9, align 4, !dbg !4427
  %45 = add i32 %44, 1, !dbg !4428
  %46 = zext i32 %45 to i64, !dbg !4429
  %47 = getelementptr inbounds [201 x i8], ptr @uint_to_string.digits, i64 0, i64 %46, !dbg !4429
  %48 = load i8, ptr %47, align 1, !dbg !4429
  %49 = load ptr, ptr %6, align 8, !dbg !4430
  %50 = load i64, ptr %8, align 8, !dbg !4431
  %51 = getelementptr inbounds i8, ptr %49, i64 %50, !dbg !4430
  store i8 %48, ptr %51, align 1, !dbg !4432
  %52 = load i32, ptr %9, align 4, !dbg !4433
  %53 = zext i32 %52 to i64, !dbg !4434
  %54 = getelementptr inbounds [201 x i8], ptr @uint_to_string.digits, i64 0, i64 %53, !dbg !4434
  %55 = load i8, ptr %54, align 1, !dbg !4434
  %56 = load ptr, ptr %6, align 8, !dbg !4435
  %57 = load i64, ptr %8, align 8, !dbg !4436
  %58 = sub i64 %57, 1, !dbg !4437
  %59 = getelementptr inbounds i8, ptr %56, i64 %58, !dbg !4435
  store i8 %55, ptr %59, align 1, !dbg !4438
  %60 = load i64, ptr %8, align 8, !dbg !4439
  %61 = sub i64 %60, 2, !dbg !4439
  store i64 %61, ptr %8, align 8, !dbg !4439
  br label %34, !dbg !4418, !llvm.loop !4440

62:                                               ; preds = %34
  %63 = load i64, ptr %5, align 8, !dbg !4442
  %64 = icmp ult i64 %63, 10, !dbg !4443
  br i1 %64, label %65, label %80, !dbg !4444

65:                                               ; preds = %62
  %66 = load i64, ptr %5, align 8, !dbg !4445
  %67 = trunc i64 %66 to i32, !dbg !4446
  %68 = add i32 48, %67, !dbg !4447
  %69 = trunc i32 %68 to i8, !dbg !4448
  %70 = load ptr, ptr %6, align 8, !dbg !4449
  %71 = load i64, ptr %8, align 8, !dbg !4450
  %72 = getelementptr inbounds i8, ptr %70, i64 %71, !dbg !4449
  store i8 %69, ptr %72, align 1, !dbg !4451
  %73 = load i64, ptr %8, align 8, !dbg !4452
  %74 = sub i64 25, %73, !dbg !4453
  %75 = sub i64 %74, 1, !dbg !4454
  %76 = load ptr, ptr %7, align 8, !dbg !4455
  store i64 %75, ptr %76, align 8, !dbg !4456
  %77 = load ptr, ptr %6, align 8, !dbg !4457
  %78 = load i64, ptr %8, align 8, !dbg !4458
  %79 = getelementptr inbounds i8, ptr %77, i64 %78, !dbg !4459
  store ptr %79, ptr %4, align 8, !dbg !4460
  br label %107, !dbg !4460

80:                                               ; preds = %62
  call void @llvm.dbg.declare(metadata ptr %10, metadata !4362, metadata !DIExpression()), !dbg !4461
  %81 = load i64, ptr %5, align 8, !dbg !4462
  %82 = trunc i64 %81 to i32, !dbg !4463
  %83 = mul i32 %82, 2, !dbg !4464
  store i32 %83, ptr %10, align 4, !dbg !4461
  %84 = load i32, ptr %10, align 4, !dbg !4465
  %85 = add i32 %84, 1, !dbg !4466
  %86 = zext i32 %85 to i64, !dbg !4467
  %87 = getelementptr inbounds [201 x i8], ptr @uint_to_string.digits, i64 0, i64 %86, !dbg !4467
  %88 = load i8, ptr %87, align 1, !dbg !4467
  %89 = load ptr, ptr %6, align 8, !dbg !4468
  %90 = load i64, ptr %8, align 8, !dbg !4469
  %91 = getelementptr inbounds i8, ptr %89, i64 %90, !dbg !4468
  store i8 %88, ptr %91, align 1, !dbg !4470
  %92 = load i32, ptr %10, align 4, !dbg !4471
  %93 = zext i32 %92 to i64, !dbg !4472
  %94 = getelementptr inbounds [201 x i8], ptr @uint_to_string.digits, i64 0, i64 %93, !dbg !4472
  %95 = load i8, ptr %94, align 1, !dbg !4472
  %96 = load ptr, ptr %6, align 8, !dbg !4473
  %97 = load i64, ptr %8, align 8, !dbg !4474
  %98 = sub i64 %97, 1, !dbg !4475
  %99 = getelementptr inbounds i8, ptr %96, i64 %98, !dbg !4473
  store i8 %95, ptr %99, align 1, !dbg !4476
  %100 = load i64, ptr %8, align 8, !dbg !4477
  %101 = sub i64 25, %100, !dbg !4478
  %102 = load ptr, ptr %7, align 8, !dbg !4479
  store i64 %101, ptr %102, align 8, !dbg !4480
  %103 = load ptr, ptr %6, align 8, !dbg !4481
  %104 = load i64, ptr %8, align 8, !dbg !4482
  %105 = getelementptr inbounds i8, ptr %103, i64 %104, !dbg !4483
  %106 = getelementptr inbounds i8, ptr %105, i64 -1, !dbg !4484
  store ptr %106, ptr %4, align 8, !dbg !4485
  br label %107, !dbg !4485

107:                                              ; preds = %80, %65
  %108 = load ptr, ptr %4, align 8, !dbg !4486
  store ptr %108, ptr %22, align 8, !dbg !4405
  %109 = load ptr, ptr %22, align 8, !dbg !4487
  %110 = getelementptr inbounds i8, ptr %109, i32 -1, !dbg !4487
  store ptr %110, ptr %22, align 8, !dbg !4487
  store i8 45, ptr %110, align 1, !dbg !4488
  %111 = load ptr, ptr %21, align 8, !dbg !4489
  %112 = load i64, ptr %111, align 8, !dbg !4490
  %113 = add i64 %112, 1, !dbg !4490
  store i64 %113, ptr %111, align 8, !dbg !4490
  %114 = load ptr, ptr %22, align 8, !dbg !4491
  store ptr %114, ptr %18, align 8, !dbg !4492
  br label %198, !dbg !4492

115:                                              ; preds = %3
  %116 = load i64, ptr %19, align 8, !dbg !4493
  %117 = load ptr, ptr %20, align 8, !dbg !4494
  %118 = load ptr, ptr %21, align 8, !dbg !4495
  store i64 %116, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %12, metadata !4304, metadata !DIExpression()), !dbg !4496
  store ptr %117, ptr %13, align 8
  call void @llvm.dbg.declare(metadata ptr %13, metadata !4306, metadata !DIExpression()), !dbg !4498
  store ptr %118, ptr %14, align 8
  call void @llvm.dbg.declare(metadata ptr %14, metadata !4308, metadata !DIExpression()), !dbg !4499
  call void @llvm.dbg.declare(metadata ptr %15, metadata !4310, metadata !DIExpression()), !dbg !4500
  store i64 24, ptr %15, align 8, !dbg !4500
  %119 = load ptr, ptr %13, align 8, !dbg !4501
  %120 = load i64, ptr %15, align 8, !dbg !4502
  %121 = add i64 %120, -1, !dbg !4502
  store i64 %121, ptr %15, align 8, !dbg !4502
  %122 = getelementptr inbounds i8, ptr %119, i64 %120, !dbg !4501
  store i8 0, ptr %122, align 1, !dbg !4503
  br label %123, !dbg !4504

123:                                              ; preds = %126, %115
  %124 = load i64, ptr %12, align 8, !dbg !4505
  %125 = icmp uge i64 %124, 100, !dbg !4506
  br i1 %125, label %126, label %151, !dbg !4504

126:                                              ; preds = %123
  call void @llvm.dbg.declare(metadata ptr %16, metadata !4318, metadata !DIExpression()), !dbg !4507
  %127 = load i64, ptr %12, align 8, !dbg !4508
  %128 = urem i64 %127, 100, !dbg !4509
  %129 = mul i64 %128, 2, !dbg !4510
  %130 = trunc i64 %129 to i32, !dbg !4511
  store i32 %130, ptr %16, align 4, !dbg !4507
  %131 = load i64, ptr %12, align 8, !dbg !4512
  %132 = udiv i64 %131, 100, !dbg !4512
  store i64 %132, ptr %12, align 8, !dbg !4512
  %133 = load i32, ptr %16, align 4, !dbg !4513
  %134 = add i32 %133, 1, !dbg !4514
  %135 = zext i32 %134 to i64, !dbg !4515
  %136 = getelementptr inbounds [201 x i8], ptr @uint_to_string.digits, i64 0, i64 %135, !dbg !4515
  %137 = load i8, ptr %136, align 1, !dbg !4515
  %138 = load ptr, ptr %13, align 8, !dbg !4516
  %139 = load i64, ptr %15, align 8, !dbg !4517
  %140 = getelementptr inbounds i8, ptr %138, i64 %139, !dbg !4516
  store i8 %137, ptr %140, align 1, !dbg !4518
  %141 = load i32, ptr %16, align 4, !dbg !4519
  %142 = zext i32 %141 to i64, !dbg !4520
  %143 = getelementptr inbounds [201 x i8], ptr @uint_to_string.digits, i64 0, i64 %142, !dbg !4520
  %144 = load i8, ptr %143, align 1, !dbg !4520
  %145 = load ptr, ptr %13, align 8, !dbg !4521
  %146 = load i64, ptr %15, align 8, !dbg !4522
  %147 = sub i64 %146, 1, !dbg !4523
  %148 = getelementptr inbounds i8, ptr %145, i64 %147, !dbg !4521
  store i8 %144, ptr %148, align 1, !dbg !4524
  %149 = load i64, ptr %15, align 8, !dbg !4525
  %150 = sub i64 %149, 2, !dbg !4525
  store i64 %150, ptr %15, align 8, !dbg !4525
  br label %123, !dbg !4504, !llvm.loop !4526

151:                                              ; preds = %123
  %152 = load i64, ptr %12, align 8, !dbg !4528
  %153 = icmp ult i64 %152, 10, !dbg !4529
  br i1 %153, label %154, label %169, !dbg !4530

154:                                              ; preds = %151
  %155 = load i64, ptr %12, align 8, !dbg !4531
  %156 = trunc i64 %155 to i32, !dbg !4532
  %157 = add i32 48, %156, !dbg !4533
  %158 = trunc i32 %157 to i8, !dbg !4534
  %159 = load ptr, ptr %13, align 8, !dbg !4535
  %160 = load i64, ptr %15, align 8, !dbg !4536
  %161 = getelementptr inbounds i8, ptr %159, i64 %160, !dbg !4535
  store i8 %158, ptr %161, align 1, !dbg !4537
  %162 = load i64, ptr %15, align 8, !dbg !4538
  %163 = sub i64 25, %162, !dbg !4539
  %164 = sub i64 %163, 1, !dbg !4540
  %165 = load ptr, ptr %14, align 8, !dbg !4541
  store i64 %164, ptr %165, align 8, !dbg !4542
  %166 = load ptr, ptr %13, align 8, !dbg !4543
  %167 = load i64, ptr %15, align 8, !dbg !4544
  %168 = getelementptr inbounds i8, ptr %166, i64 %167, !dbg !4545
  store ptr %168, ptr %11, align 8, !dbg !4546
  br label %196, !dbg !4546

169:                                              ; preds = %151
  call void @llvm.dbg.declare(metadata ptr %17, metadata !4362, metadata !DIExpression()), !dbg !4547
  %170 = load i64, ptr %12, align 8, !dbg !4548
  %171 = trunc i64 %170 to i32, !dbg !4549
  %172 = mul i32 %171, 2, !dbg !4550
  store i32 %172, ptr %17, align 4, !dbg !4547
  %173 = load i32, ptr %17, align 4, !dbg !4551
  %174 = add i32 %173, 1, !dbg !4552
  %175 = zext i32 %174 to i64, !dbg !4553
  %176 = getelementptr inbounds [201 x i8], ptr @uint_to_string.digits, i64 0, i64 %175, !dbg !4553
  %177 = load i8, ptr %176, align 1, !dbg !4553
  %178 = load ptr, ptr %13, align 8, !dbg !4554
  %179 = load i64, ptr %15, align 8, !dbg !4555
  %180 = getelementptr inbounds i8, ptr %178, i64 %179, !dbg !4554
  store i8 %177, ptr %180, align 1, !dbg !4556
  %181 = load i32, ptr %17, align 4, !dbg !4557
  %182 = zext i32 %181 to i64, !dbg !4558
  %183 = getelementptr inbounds [201 x i8], ptr @uint_to_string.digits, i64 0, i64 %182, !dbg !4558
  %184 = load i8, ptr %183, align 1, !dbg !4558
  %185 = load ptr, ptr %13, align 8, !dbg !4559
  %186 = load i64, ptr %15, align 8, !dbg !4560
  %187 = sub i64 %186, 1, !dbg !4561
  %188 = getelementptr inbounds i8, ptr %185, i64 %187, !dbg !4559
  store i8 %184, ptr %188, align 1, !dbg !4562
  %189 = load i64, ptr %15, align 8, !dbg !4563
  %190 = sub i64 25, %189, !dbg !4564
  %191 = load ptr, ptr %14, align 8, !dbg !4565
  store i64 %190, ptr %191, align 8, !dbg !4566
  %192 = load ptr, ptr %13, align 8, !dbg !4567
  %193 = load i64, ptr %15, align 8, !dbg !4568
  %194 = getelementptr inbounds i8, ptr %192, i64 %193, !dbg !4569
  %195 = getelementptr inbounds i8, ptr %194, i64 -1, !dbg !4570
  store ptr %195, ptr %11, align 8, !dbg !4571
  br label %196, !dbg !4571

196:                                              ; preds = %169, %154
  %197 = load ptr, ptr %11, align 8, !dbg !4572
  store ptr %197, ptr %18, align 8, !dbg !4573
  br label %198, !dbg !4573

198:                                              ; preds = %196, %107
  %199 = load ptr, ptr %18, align 8, !dbg !4574
  ret ptr %199, !dbg !4574
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @list_check_node(ptr noundef %0, ptr noundef %1) #0 !dbg !4575 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !4580, metadata !DIExpression()), !dbg !4581
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !4582, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.declare(metadata ptr %6, metadata !4584, metadata !DIExpression()), !dbg !4585
  call void @llvm.dbg.declare(metadata ptr %7, metadata !4586, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.declare(metadata ptr %8, metadata !4588, metadata !DIExpression()), !dbg !4589
  store i32 0, ptr %8, align 4, !dbg !4589
  %9 = load ptr, ptr %4, align 8, !dbg !4590
  store ptr %9, ptr %6, align 8, !dbg !4592
  %10 = load ptr, ptr %4, align 8, !dbg !4593
  %11 = getelementptr inbounds %struct.list_node, ptr %10, i32 0, i32 0, !dbg !4594
  %12 = load ptr, ptr %11, align 8, !dbg !4594
  store ptr %12, ptr %7, align 8, !dbg !4595
  br label %13, !dbg !4596

13:                                               ; preds = %32, %2
  %14 = load ptr, ptr %7, align 8, !dbg !4597
  %15 = load ptr, ptr %4, align 8, !dbg !4599
  %16 = icmp ne ptr %14, %15, !dbg !4600
  br i1 %16, label %17, label %37, !dbg !4601

17:                                               ; preds = %13
  %18 = load i32, ptr %8, align 4, !dbg !4602
  %19 = add i32 %18, 1, !dbg !4602
  store i32 %19, ptr %8, align 4, !dbg !4602
  %20 = load ptr, ptr %7, align 8, !dbg !4604
  %21 = getelementptr inbounds %struct.list_node, ptr %20, i32 0, i32 1, !dbg !4606
  %22 = load ptr, ptr %21, align 8, !dbg !4606
  %23 = load ptr, ptr %6, align 8, !dbg !4607
  %24 = icmp ne ptr %22, %23, !dbg !4608
  br i1 %24, label %25, label %31, !dbg !4609

25:                                               ; preds = %17
  %26 = load ptr, ptr %5, align 8, !dbg !4610
  %27 = load ptr, ptr %4, align 8, !dbg !4611
  %28 = load ptr, ptr %7, align 8, !dbg !4612
  %29 = load i32, ptr %8, align 4, !dbg !4613
  %30 = call ptr @corrupt(ptr noundef %26, ptr noundef %27, ptr noundef %28, i32 noundef %29), !dbg !4614
  store ptr %30, ptr %3, align 8, !dbg !4615
  br label %50, !dbg !4615

31:                                               ; preds = %17
  br label %32, !dbg !4616

32:                                               ; preds = %31
  %33 = load ptr, ptr %7, align 8, !dbg !4617
  store ptr %33, ptr %6, align 8, !dbg !4618
  %34 = load ptr, ptr %7, align 8, !dbg !4619
  %35 = getelementptr inbounds %struct.list_node, ptr %34, i32 0, i32 0, !dbg !4620
  %36 = load ptr, ptr %35, align 8, !dbg !4620
  store ptr %36, ptr %7, align 8, !dbg !4621
  br label %13, !dbg !4622, !llvm.loop !4623

37:                                               ; preds = %13
  %38 = load ptr, ptr %4, align 8, !dbg !4625
  %39 = getelementptr inbounds %struct.list_node, ptr %38, i32 0, i32 1, !dbg !4627
  %40 = load ptr, ptr %39, align 8, !dbg !4627
  %41 = load ptr, ptr %6, align 8, !dbg !4628
  %42 = icmp ne ptr %40, %41, !dbg !4629
  br i1 %42, label %43, label %48, !dbg !4630

43:                                               ; preds = %37
  %44 = load ptr, ptr %5, align 8, !dbg !4631
  %45 = load ptr, ptr %4, align 8, !dbg !4632
  %46 = load ptr, ptr %4, align 8, !dbg !4633
  %47 = call ptr @corrupt(ptr noundef %44, ptr noundef %45, ptr noundef %46, i32 noundef 0), !dbg !4634
  store ptr %47, ptr %3, align 8, !dbg !4635
  br label %50, !dbg !4635

48:                                               ; preds = %37
  %49 = load ptr, ptr %4, align 8, !dbg !4636
  store ptr %49, ptr %3, align 8, !dbg !4637
  br label %50, !dbg !4637

50:                                               ; preds = %48, %43, %25
  %51 = load ptr, ptr %3, align 8, !dbg !4638
  ret ptr %51, !dbg !4638
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @corrupt(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) #0 !dbg !4639 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !4642, metadata !DIExpression()), !dbg !4643
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !4644, metadata !DIExpression()), !dbg !4645
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !4646, metadata !DIExpression()), !dbg !4647
  store i32 %3, ptr %8, align 4
  call void @llvm.dbg.declare(metadata ptr %8, metadata !4648, metadata !DIExpression()), !dbg !4649
  %9 = load ptr, ptr %5, align 8, !dbg !4650
  %10 = icmp ne ptr %9, null, !dbg !4650
  br i1 %10, label %11, label %18, !dbg !4652

11:                                               ; preds = %4
  %12 = load ptr, ptr @stderr, align 8, !dbg !4653
  %13 = load ptr, ptr %5, align 8, !dbg !4655
  %14 = load ptr, ptr %7, align 8, !dbg !4656
  %15 = load i32, ptr %8, align 4, !dbg !4657
  %16 = load ptr, ptr %6, align 8, !dbg !4658
  %17 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %12, ptr noundef @.str.2, ptr noundef %13, ptr noundef %14, i32 noundef %15, ptr noundef %16), !dbg !4659
  call void @abort() #21, !dbg !4660
  unreachable, !dbg !4660

18:                                               ; preds = %4
  ret ptr null, !dbg !4661
}

declare i32 @fprintf(ptr noundef, ptr noundef, ...) #4

; Function Attrs: noreturn nounwind
declare void @abort() #10

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @list_check(ptr noundef %0, ptr noundef %1) #0 !dbg !4662 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !4667, metadata !DIExpression()), !dbg !4668
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !4669, metadata !DIExpression()), !dbg !4670
  %6 = load ptr, ptr %4, align 8, !dbg !4671
  %7 = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 0, !dbg !4673
  %8 = load ptr, ptr %5, align 8, !dbg !4674
  %9 = call ptr @list_check_node(ptr noundef %7, ptr noundef %8), !dbg !4675
  %10 = icmp ne ptr %9, null, !dbg !4675
  br i1 %10, label %12, label %11, !dbg !4676

11:                                               ; preds = %2
  store ptr null, ptr %3, align 8, !dbg !4677
  br label %14, !dbg !4677

12:                                               ; preds = %2
  %13 = load ptr, ptr %4, align 8, !dbg !4678
  store ptr %13, ptr %3, align 8, !dbg !4679
  br label %14, !dbg !4679

14:                                               ; preds = %12, %11
  %15 = load ptr, ptr %3, align 8, !dbg !4680
  ret ptr %15, !dbg !4680
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @cache_create(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3) #0 !dbg !4681 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i64, align 8
  %10 = alloca ptr, align 8
  store ptr %0, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !4760, metadata !DIExpression()), !dbg !4761
  store ptr %1, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !4762, metadata !DIExpression()), !dbg !4763
  store ptr %2, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !4764, metadata !DIExpression()), !dbg !4765
  store i64 %3, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !4766, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.declare(metadata ptr %10, metadata !4768, metadata !DIExpression()), !dbg !4769
  %11 = load ptr, ptr %6, align 8, !dbg !4770
  %12 = icmp ne ptr %11, null, !dbg !4770
  br i1 %12, label %13, label %14, !dbg !4773

13:                                               ; preds = %4
  br label %15, !dbg !4773

14:                                               ; preds = %4
  call void @__assert_fail(ptr noundef @.str.3, ptr noundef @.str.1.4, i32 noundef 104, ptr noundef @__PRETTY_FUNCTION__.cache_create) #21, !dbg !4770
  unreachable, !dbg !4770

15:                                               ; preds = %13
  %16 = load ptr, ptr %7, align 8, !dbg !4774
  %17 = icmp ne ptr %16, null, !dbg !4774
  br i1 %17, label %18, label %19, !dbg !4777

18:                                               ; preds = %15
  br label %20, !dbg !4777

19:                                               ; preds = %15
  call void @__assert_fail(ptr noundef @.str.2.5, ptr noundef @.str.1.4, i32 noundef 105, ptr noundef @__PRETTY_FUNCTION__.cache_create) #21, !dbg !4774
  unreachable, !dbg !4774

20:                                               ; preds = %18
  %21 = load i64, ptr %9, align 8, !dbg !4778
  %22 = icmp sgt i64 %21, 0, !dbg !4778
  br i1 %22, label %23, label %24, !dbg !4781

23:                                               ; preds = %20
  br label %25, !dbg !4781

24:                                               ; preds = %20
  call void @__assert_fail(ptr noundef @.str.3.6, ptr noundef @.str.1.4, i32 noundef 106, ptr noundef @__PRETTY_FUNCTION__.cache_create) #21, !dbg !4778
  unreachable, !dbg !4778

25:                                               ; preds = %23
  %26 = call noalias ptr @calloc(i64 noundef 1, i64 noundef 192) #19, !dbg !4782
  store ptr %26, ptr %10, align 8, !dbg !4783
  %27 = load ptr, ptr %10, align 8, !dbg !4784
  %28 = icmp ne ptr %27, null, !dbg !4784
  br i1 %28, label %30, label %29, !dbg !4786

29:                                               ; preds = %25
  store ptr null, ptr %5, align 8, !dbg !4787
  br label %93, !dbg !4787

30:                                               ; preds = %25
  %31 = call ptr @hash_str_new(ptr noundef @free, ptr noundef null), !dbg !4788
  %32 = load ptr, ptr %10, align 8, !dbg !4789
  %33 = getelementptr inbounds %struct.cache_t, ptr %32, i32 0, i32 0, !dbg !4790
  %34 = getelementptr inbounds %struct.anon, ptr %33, i32 0, i32 0, !dbg !4791
  store ptr %31, ptr %34, align 8, !dbg !4792
  %35 = load ptr, ptr %10, align 8, !dbg !4793
  %36 = getelementptr inbounds %struct.cache_t, ptr %35, i32 0, i32 0, !dbg !4795
  %37 = getelementptr inbounds %struct.anon, ptr %36, i32 0, i32 0, !dbg !4796
  %38 = load ptr, ptr %37, align 8, !dbg !4796
  %39 = icmp ne ptr %38, null, !dbg !4793
  br i1 %39, label %41, label %40, !dbg !4797

40:                                               ; preds = %30
  br label %91, !dbg !4798

41:                                               ; preds = %30
  %42 = load ptr, ptr %10, align 8, !dbg !4799
  %43 = getelementptr inbounds %struct.cache_t, ptr %42, i32 0, i32 0, !dbg !4801
  %44 = getelementptr inbounds %struct.anon, ptr %43, i32 0, i32 1, !dbg !4802
  %45 = call i32 @pthread_rwlock_init(ptr noundef %44, ptr noundef null) #18, !dbg !4803
  %46 = icmp ne i32 %45, 0, !dbg !4803
  br i1 %46, label %47, label %48, !dbg !4804

47:                                               ; preds = %41
  br label %86, !dbg !4805

48:                                               ; preds = %41
  %49 = load ptr, ptr %10, align 8, !dbg !4806
  %50 = getelementptr inbounds %struct.cache_t, ptr %49, i32 0, i32 1, !dbg !4808
  %51 = getelementptr inbounds %struct.anon.0, ptr %50, i32 0, i32 1, !dbg !4809
  %52 = call i32 @pthread_rwlock_init(ptr noundef %51, ptr noundef null) #18, !dbg !4810
  %53 = icmp ne i32 %52, 0, !dbg !4810
  br i1 %53, label %54, label %55, !dbg !4811

54:                                               ; preds = %48
  br label %81, !dbg !4812

55:                                               ; preds = %48
  %56 = load ptr, ptr %6, align 8, !dbg !4813
  %57 = load ptr, ptr %10, align 8, !dbg !4814
  %58 = getelementptr inbounds %struct.cache_t, ptr %57, i32 0, i32 2, !dbg !4815
  %59 = getelementptr inbounds %struct.anon.1, ptr %58, i32 0, i32 0, !dbg !4816
  store ptr %56, ptr %59, align 8, !dbg !4817
  %60 = load ptr, ptr %7, align 8, !dbg !4818
  %61 = load ptr, ptr %10, align 8, !dbg !4819
  %62 = getelementptr inbounds %struct.cache_t, ptr %61, i32 0, i32 2, !dbg !4820
  %63 = getelementptr inbounds %struct.anon.1, ptr %62, i32 0, i32 1, !dbg !4821
  store ptr %60, ptr %63, align 8, !dbg !4822
  %64 = load ptr, ptr %8, align 8, !dbg !4823
  %65 = load ptr, ptr %10, align 8, !dbg !4824
  %66 = getelementptr inbounds %struct.cache_t, ptr %65, i32 0, i32 2, !dbg !4825
  %67 = getelementptr inbounds %struct.anon.1, ptr %66, i32 0, i32 2, !dbg !4826
  store ptr %64, ptr %67, align 8, !dbg !4827
  %68 = call i32 @detect_fastest_monotonic_clock(), !dbg !4828
  %69 = load ptr, ptr %10, align 8, !dbg !4829
  %70 = getelementptr inbounds %struct.cache_t, ptr %69, i32 0, i32 3, !dbg !4830
  %71 = getelementptr inbounds %struct.anon.2, ptr %70, i32 0, i32 1, !dbg !4831
  store i32 %68, ptr %71, align 8, !dbg !4832
  %72 = load i64, ptr %9, align 8, !dbg !4833
  %73 = load ptr, ptr %10, align 8, !dbg !4834
  %74 = getelementptr inbounds %struct.cache_t, ptr %73, i32 0, i32 3, !dbg !4835
  %75 = getelementptr inbounds %struct.anon.2, ptr %74, i32 0, i32 0, !dbg !4836
  store i64 %72, ptr %75, align 8, !dbg !4837
  %76 = load ptr, ptr %10, align 8, !dbg !4838
  %77 = getelementptr inbounds %struct.cache_t, ptr %76, i32 0, i32 1, !dbg !4839
  %78 = getelementptr inbounds %struct.anon.0, ptr %77, i32 0, i32 0, !dbg !4840
  call void @list_head_init(ptr noundef %78), !dbg !4841
  %79 = load ptr, ptr %10, align 8, !dbg !4842
  call void @lwan_job_add(ptr noundef @cache_pruner_job, ptr noundef %79), !dbg !4843
  %80 = load ptr, ptr %10, align 8, !dbg !4844
  store ptr %80, ptr %5, align 8, !dbg !4845
  br label %93, !dbg !4845

81:                                               ; preds = %54
  call void @llvm.dbg.label(metadata !4846), !dbg !4847
  %82 = load ptr, ptr %10, align 8, !dbg !4848
  %83 = getelementptr inbounds %struct.cache_t, ptr %82, i32 0, i32 0, !dbg !4849
  %84 = getelementptr inbounds %struct.anon, ptr %83, i32 0, i32 1, !dbg !4850
  %85 = call i32 @pthread_rwlock_destroy(ptr noundef %84) #18, !dbg !4851
  br label %86, !dbg !4851

86:                                               ; preds = %81, %47
  call void @llvm.dbg.label(metadata !4852), !dbg !4853
  %87 = load ptr, ptr %10, align 8, !dbg !4854
  %88 = getelementptr inbounds %struct.cache_t, ptr %87, i32 0, i32 0, !dbg !4855
  %89 = getelementptr inbounds %struct.anon, ptr %88, i32 0, i32 0, !dbg !4856
  %90 = load ptr, ptr %89, align 8, !dbg !4856
  call void @hash_free(ptr noundef %90), !dbg !4857
  br label %91, !dbg !4857

91:                                               ; preds = %86, %40
  call void @llvm.dbg.label(metadata !4858), !dbg !4859
  %92 = load ptr, ptr %10, align 8, !dbg !4860
  call void @free(ptr noundef %92) #18, !dbg !4861
  store ptr null, ptr %5, align 8, !dbg !4862
  br label %93, !dbg !4862

93:                                               ; preds = %91, %55, %29
  %94 = load ptr, ptr %5, align 8, !dbg !4863
  ret ptr %94, !dbg !4863
}

; Function Attrs: noreturn nounwind
declare void @__assert_fail(ptr noundef, ptr noundef, i32 noundef, ptr noundef) #10

; Function Attrs: nounwind
declare i32 @pthread_rwlock_init(ptr noundef, ptr noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @detect_fastest_monotonic_clock() #0 !dbg !4864 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.timespec, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !4867, metadata !DIExpression()), !dbg !4872
  %3 = call i32 @clock_gettime(i32 noundef 6, ptr noundef %2) #18, !dbg !4873
  %4 = icmp ne i32 %3, 0, !dbg !4873
  br i1 %4, label %6, label %5, !dbg !4875

5:                                                ; preds = %0
  store i32 6, ptr %1, align 4, !dbg !4876
  br label %7, !dbg !4876

6:                                                ; preds = %0
  store i32 1, ptr %1, align 4, !dbg !4877
  br label %7, !dbg !4877

7:                                                ; preds = %6, %5
  %8 = load i32, ptr %1, align 4, !dbg !4878
  ret i32 %8, !dbg !4878
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @list_head_init(ptr noundef %0) #0 !dbg !4879 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !4883, metadata !DIExpression()), !dbg !4884
  %3 = load ptr, ptr %2, align 8, !dbg !4885
  %4 = getelementptr inbounds %struct.list_head, ptr %3, i32 0, i32 0, !dbg !4886
  %5 = load ptr, ptr %2, align 8, !dbg !4887
  %6 = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 0, !dbg !4888
  %7 = getelementptr inbounds %struct.list_node, ptr %6, i32 0, i32 1, !dbg !4889
  store ptr %4, ptr %7, align 8, !dbg !4890
  %8 = load ptr, ptr %2, align 8, !dbg !4891
  %9 = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 0, !dbg !4892
  %10 = getelementptr inbounds %struct.list_node, ptr %9, i32 0, i32 0, !dbg !4893
  store ptr %4, ptr %10, align 8, !dbg !4894
  ret void, !dbg !4895
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @cache_pruner_job(ptr noundef %0) #0 !dbg !4896 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca i1, align 1
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca %struct.timespec, align 8
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  %12 = alloca %struct.list_head, align 8
  %13 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !4897, metadata !DIExpression()), !dbg !4898
  call void @llvm.dbg.declare(metadata ptr %6, metadata !4899, metadata !DIExpression()), !dbg !4900
  %14 = load ptr, ptr %5, align 8, !dbg !4901
  store ptr %14, ptr %6, align 8, !dbg !4900
  call void @llvm.dbg.declare(metadata ptr %7, metadata !4902, metadata !DIExpression()), !dbg !4903
  call void @llvm.dbg.declare(metadata ptr %8, metadata !4904, metadata !DIExpression()), !dbg !4905
  call void @llvm.dbg.declare(metadata ptr %9, metadata !4906, metadata !DIExpression()), !dbg !4907
  call void @llvm.dbg.declare(metadata ptr %10, metadata !4908, metadata !DIExpression()), !dbg !4909
  %15 = load ptr, ptr %6, align 8, !dbg !4910
  %16 = getelementptr inbounds %struct.cache_t, ptr %15, i32 0, i32 4, !dbg !4911
  %17 = load i32, ptr %16, align 8, !dbg !4911
  %18 = and i32 %17, 1, !dbg !4912
  %19 = icmp ne i32 %18, 0, !dbg !4910
  %20 = zext i1 %19 to i8, !dbg !4909
  store i8 %20, ptr %10, align 1, !dbg !4909
  call void @llvm.dbg.declare(metadata ptr %11, metadata !4913, metadata !DIExpression()), !dbg !4914
  store i32 0, ptr %11, align 4, !dbg !4914
  call void @llvm.dbg.declare(metadata ptr %12, metadata !4915, metadata !DIExpression()), !dbg !4916
  %21 = load ptr, ptr %6, align 8, !dbg !4917
  %22 = getelementptr inbounds %struct.cache_t, ptr %21, i32 0, i32 1, !dbg !4917
  %23 = getelementptr inbounds %struct.anon.0, ptr %22, i32 0, i32 1, !dbg !4917
  %24 = call i32 @pthread_rwlock_trywrlock(ptr noundef %23) #18, !dbg !4917
  %25 = icmp eq i32 %24, 16, !dbg !4917
  %26 = zext i1 %25 to i32, !dbg !4917
  %27 = sext i32 %26 to i64, !dbg !4917
  %28 = icmp ne i64 %27, 0, !dbg !4917
  br i1 %28, label %29, label %30, !dbg !4919

29:                                               ; preds = %1
  store i1 false, ptr %4, align 1, !dbg !4920
  br label %210, !dbg !4920

30:                                               ; preds = %1
  %31 = load ptr, ptr %6, align 8, !dbg !4921
  %32 = getelementptr inbounds %struct.cache_t, ptr %31, i32 0, i32 1, !dbg !4923
  %33 = getelementptr inbounds %struct.anon.0, ptr %32, i32 0, i32 0, !dbg !4924
  %34 = call zeroext i1 @list_empty(ptr noundef %33), !dbg !4925
  br i1 %34, label %35, label %44, !dbg !4926

35:                                               ; preds = %30
  %36 = load ptr, ptr %6, align 8, !dbg !4927
  %37 = getelementptr inbounds %struct.cache_t, ptr %36, i32 0, i32 1, !dbg !4927
  %38 = getelementptr inbounds %struct.anon.0, ptr %37, i32 0, i32 1, !dbg !4927
  %39 = call i32 @pthread_rwlock_unlock(ptr noundef %38) #18, !dbg !4927
  %40 = sext i32 %39 to i64, !dbg !4927
  %41 = icmp ne i64 %40, 0, !dbg !4927
  br i1 %41, label %42, label %43, !dbg !4930

42:                                               ; preds = %35
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.1.4, i32 noundef 287, ptr noundef @__FUNCTION__.cache_pruner_job, ptr noundef @.str.10), !dbg !4931
  br label %43, !dbg !4931

43:                                               ; preds = %42, %35
  store i1 false, ptr %4, align 1, !dbg !4932
  br label %210, !dbg !4932

44:                                               ; preds = %30
  call void @list_head_init(ptr noundef %12), !dbg !4933
  %45 = load ptr, ptr %6, align 8, !dbg !4934
  %46 = getelementptr inbounds %struct.cache_t, ptr %45, i32 0, i32 1, !dbg !4935
  %47 = getelementptr inbounds %struct.anon.0, ptr %46, i32 0, i32 0, !dbg !4936
  call void @list_append_list(ptr noundef %12, ptr noundef %47), !dbg !4937
  %48 = load ptr, ptr %6, align 8, !dbg !4938
  %49 = getelementptr inbounds %struct.cache_t, ptr %48, i32 0, i32 1, !dbg !4939
  %50 = getelementptr inbounds %struct.anon.0, ptr %49, i32 0, i32 0, !dbg !4940
  call void @list_head_init(ptr noundef %50), !dbg !4941
  %51 = load ptr, ptr %6, align 8, !dbg !4942
  %52 = getelementptr inbounds %struct.cache_t, ptr %51, i32 0, i32 1, !dbg !4942
  %53 = getelementptr inbounds %struct.anon.0, ptr %52, i32 0, i32 1, !dbg !4942
  %54 = call i32 @pthread_rwlock_unlock(ptr noundef %53) #18, !dbg !4942
  %55 = sext i32 %54 to i64, !dbg !4942
  %56 = icmp ne i64 %55, 0, !dbg !4942
  br i1 %56, label %57, label %58, !dbg !4944

57:                                               ; preds = %44
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.1.4, i32 noundef 298, ptr noundef @__FUNCTION__.cache_pruner_job, ptr noundef @.str.10), !dbg !4945
  br label %201, !dbg !4947

58:                                               ; preds = %44
  %59 = load ptr, ptr %6, align 8, !dbg !4948
  store ptr %59, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !4949, metadata !DIExpression()), !dbg !4954
  store ptr %9, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !4956, metadata !DIExpression()), !dbg !4957
  %60 = load ptr, ptr %2, align 8, !dbg !4958
  %61 = getelementptr inbounds %struct.cache_t, ptr %60, i32 0, i32 3, !dbg !4958
  %62 = getelementptr inbounds %struct.anon.2, ptr %61, i32 0, i32 1, !dbg !4958
  %63 = load i32, ptr %62, align 8, !dbg !4958
  %64 = load ptr, ptr %3, align 8, !dbg !4958
  %65 = call i32 @clock_gettime(i32 noundef %63, ptr noundef %64) #18, !dbg !4958
  %66 = icmp slt i32 %65, 0, !dbg !4958
  %67 = zext i1 %66 to i32, !dbg !4958
  %68 = sext i32 %67 to i64, !dbg !4958
  br i1 %66, label %69, label %70, !dbg !4960

69:                                               ; preds = %58
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.1.4, i32 noundef 94, ptr noundef @__FUNCTION__.clock_monotonic_gettime, ptr noundef @.str.9) #18, !dbg !4961
  br label %70, !dbg !4961

70:                                               ; preds = %69, %58
  %71 = getelementptr inbounds %struct.list_head, ptr %12, i32 0, i32 0, !dbg !4962
  %72 = getelementptr inbounds %struct.list_node, ptr %71, i32 0, i32 0, !dbg !4962
  %73 = load ptr, ptr %72, align 8, !dbg !4962
  %74 = call ptr @list_node_to_off_(ptr noundef %73, i64 noundef 0), !dbg !4962
  store ptr %74, ptr %7, align 8, !dbg !4962
  %75 = load ptr, ptr %7, align 8, !dbg !4962
  %76 = call ptr @list_node_from_off_(ptr noundef %75, i64 noundef 0), !dbg !4962
  %77 = getelementptr inbounds %struct.list_node, ptr %76, i32 0, i32 0, !dbg !4962
  %78 = load ptr, ptr %77, align 8, !dbg !4962
  %79 = call ptr @list_node_to_off_(ptr noundef %78, i64 noundef 0), !dbg !4962
  store ptr %79, ptr %8, align 8, !dbg !4962
  br label %80, !dbg !4962

80:                                               ; preds = %169, %70
  %81 = load ptr, ptr %7, align 8, !dbg !4964
  %82 = call ptr @list_node_from_off_(ptr noundef %81, i64 noundef 0), !dbg !4964
  %83 = getelementptr inbounds %struct.list_head, ptr %12, i32 0, i32 0, !dbg !4964
  %84 = icmp ne ptr %82, %83, !dbg !4964
  br i1 %84, label %85, label %176, !dbg !4962

85:                                               ; preds = %80
  call void @llvm.dbg.declare(metadata ptr %13, metadata !4966, metadata !DIExpression()), !dbg !4968
  %86 = load ptr, ptr %7, align 8, !dbg !4969
  %87 = getelementptr inbounds %struct.cache_entry_t, ptr %86, i32 0, i32 1, !dbg !4970
  %88 = load ptr, ptr %87, align 8, !dbg !4970
  store ptr %88, ptr %13, align 8, !dbg !4968
  %89 = getelementptr inbounds %struct.timespec, ptr %9, i32 0, i32 0, !dbg !4971
  %90 = load i64, ptr %89, align 8, !dbg !4971
  %91 = load ptr, ptr %7, align 8, !dbg !4973
  %92 = getelementptr inbounds %struct.cache_entry_t, ptr %91, i32 0, i32 4, !dbg !4974
  %93 = load i64, ptr %92, align 8, !dbg !4974
  %94 = icmp slt i64 %90, %93, !dbg !4975
  br i1 %94, label %95, label %105, !dbg !4976

95:                                               ; preds = %85
  %96 = load i8, ptr %10, align 1, !dbg !4977
  %97 = trunc i8 %96 to i1, !dbg !4977
  %98 = xor i1 %97, true, !dbg !4977
  %99 = xor i1 %98, true, !dbg !4977
  %100 = xor i1 %99, true, !dbg !4977
  %101 = zext i1 %100 to i32, !dbg !4977
  %102 = sext i32 %101 to i64, !dbg !4977
  %103 = icmp ne i64 %102, 0, !dbg !4977
  br i1 %103, label %104, label %105, !dbg !4978

104:                                              ; preds = %95
  br label %176, !dbg !4979

105:                                              ; preds = %95, %85
  %106 = load ptr, ptr %7, align 8, !dbg !4980
  %107 = getelementptr inbounds %struct.cache_entry_t, ptr %106, i32 0, i32 0, !dbg !4981
  call void @list_del(ptr noundef %107), !dbg !4982
  %108 = load ptr, ptr %6, align 8, !dbg !4983
  %109 = getelementptr inbounds %struct.cache_t, ptr %108, i32 0, i32 0, !dbg !4983
  %110 = getelementptr inbounds %struct.anon, ptr %109, i32 0, i32 1, !dbg !4983
  %111 = call i32 @pthread_rwlock_wrlock(ptr noundef %110) #18, !dbg !4983
  %112 = sext i32 %111 to i64, !dbg !4983
  %113 = icmp ne i64 %112, 0, !dbg !4983
  br i1 %113, label %114, label %115, !dbg !4985

114:                                              ; preds = %105
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.1.4, i32 noundef 312, ptr noundef @__FUNCTION__.cache_pruner_job, ptr noundef @.str.11), !dbg !4986
  br label %169, !dbg !4988

115:                                              ; preds = %105
  %116 = load ptr, ptr %6, align 8, !dbg !4989
  %117 = getelementptr inbounds %struct.cache_t, ptr %116, i32 0, i32 0, !dbg !4990
  %118 = getelementptr inbounds %struct.anon, ptr %117, i32 0, i32 0, !dbg !4991
  %119 = load ptr, ptr %118, align 8, !dbg !4991
  %120 = load ptr, ptr %13, align 8, !dbg !4992
  %121 = call i32 @hash_del(ptr noundef %119, ptr noundef %120), !dbg !4993
  %122 = load ptr, ptr %6, align 8, !dbg !4994
  %123 = getelementptr inbounds %struct.cache_t, ptr %122, i32 0, i32 0, !dbg !4994
  %124 = getelementptr inbounds %struct.anon, ptr %123, i32 0, i32 1, !dbg !4994
  %125 = call i32 @pthread_rwlock_unlock(ptr noundef %124) #18, !dbg !4994
  %126 = sext i32 %125 to i64, !dbg !4994
  %127 = icmp ne i64 %126, 0, !dbg !4994
  br i1 %127, label %128, label %129, !dbg !4996

128:                                              ; preds = %115
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.1.4, i32 noundef 319, ptr noundef @__FUNCTION__.cache_pruner_job, ptr noundef @.str.10), !dbg !4997
  br label %129, !dbg !4997

129:                                              ; preds = %128, %115
  %130 = load ptr, ptr %7, align 8, !dbg !4998
  %131 = getelementptr inbounds %struct.cache_entry_t, ptr %130, i32 0, i32 2, !dbg !4998
  %132 = atomicrmw add ptr %131, i32 1 seq_cst, align 4, !dbg !4998
  %133 = add i32 %132, 1, !dbg !4998
  %134 = icmp eq i32 %133, 1, !dbg !5000
  br i1 %134, label %135, label %145, !dbg !5001

135:                                              ; preds = %129
  %136 = load ptr, ptr %6, align 8, !dbg !5002
  %137 = getelementptr inbounds %struct.cache_t, ptr %136, i32 0, i32 2, !dbg !5004
  %138 = getelementptr inbounds %struct.anon.1, ptr %137, i32 0, i32 1, !dbg !5005
  %139 = load ptr, ptr %138, align 8, !dbg !5005
  %140 = load ptr, ptr %7, align 8, !dbg !5006
  %141 = load ptr, ptr %6, align 8, !dbg !5007
  %142 = getelementptr inbounds %struct.cache_t, ptr %141, i32 0, i32 2, !dbg !5008
  %143 = getelementptr inbounds %struct.anon.1, ptr %142, i32 0, i32 2, !dbg !5009
  %144 = load ptr, ptr %143, align 8, !dbg !5009
  call void %139(ptr noundef %140, ptr noundef %144), !dbg !5002
  br label %166, !dbg !5010

145:                                              ; preds = %129
  %146 = load ptr, ptr %7, align 8, !dbg !5011
  %147 = getelementptr inbounds %struct.cache_entry_t, ptr %146, i32 0, i32 3, !dbg !5011
  %148 = atomicrmw or ptr %147, i32 1 seq_cst, align 4, !dbg !5011
  %149 = or i32 %148, 1, !dbg !5011
  %150 = load ptr, ptr %7, align 8, !dbg !5013
  %151 = getelementptr inbounds %struct.cache_entry_t, ptr %150, i32 0, i32 2, !dbg !5013
  %152 = atomicrmw add ptr %151, i32 -1 seq_cst, align 4, !dbg !5013
  %153 = add i32 %152, -1, !dbg !5013
  %154 = icmp ne i32 %153, 0, !dbg !5013
  br i1 %154, label %165, label %155, !dbg !5015

155:                                              ; preds = %145
  %156 = load ptr, ptr %6, align 8, !dbg !5016
  %157 = getelementptr inbounds %struct.cache_t, ptr %156, i32 0, i32 2, !dbg !5017
  %158 = getelementptr inbounds %struct.anon.1, ptr %157, i32 0, i32 1, !dbg !5018
  %159 = load ptr, ptr %158, align 8, !dbg !5018
  %160 = load ptr, ptr %7, align 8, !dbg !5019
  %161 = load ptr, ptr %6, align 8, !dbg !5020
  %162 = getelementptr inbounds %struct.cache_t, ptr %161, i32 0, i32 2, !dbg !5021
  %163 = getelementptr inbounds %struct.anon.1, ptr %162, i32 0, i32 2, !dbg !5022
  %164 = load ptr, ptr %163, align 8, !dbg !5022
  call void %159(ptr noundef %160, ptr noundef %164), !dbg !5016
  br label %165, !dbg !5016

165:                                              ; preds = %155, %145
  br label %166

166:                                              ; preds = %165, %135
  %167 = load i32, ptr %11, align 4, !dbg !5023
  %168 = add i32 %167, 1, !dbg !5023
  store i32 %168, ptr %11, align 4, !dbg !5023
  br label %169, !dbg !5024

169:                                              ; preds = %166, %114
  %170 = load ptr, ptr %8, align 8, !dbg !4964
  store ptr %170, ptr %7, align 8, !dbg !4964
  %171 = load ptr, ptr %7, align 8, !dbg !4964
  %172 = call ptr @list_node_from_off_(ptr noundef %171, i64 noundef 0), !dbg !4964
  %173 = getelementptr inbounds %struct.list_node, ptr %172, i32 0, i32 0, !dbg !4964
  %174 = load ptr, ptr %173, align 8, !dbg !4964
  %175 = call ptr @list_node_to_off_(ptr noundef %174, i64 noundef 0), !dbg !4964
  store ptr %175, ptr %8, align 8, !dbg !4964
  br label %80, !dbg !4964, !llvm.loop !5025

176:                                              ; preds = %104, %80
  %177 = call zeroext i1 @list_empty(ptr noundef %12), !dbg !5027
  br i1 %177, label %178, label %179, !dbg !5029

178:                                              ; preds = %176
  br label %201, !dbg !5030

179:                                              ; preds = %176
  %180 = load ptr, ptr %6, align 8, !dbg !5031
  %181 = getelementptr inbounds %struct.cache_t, ptr %180, i32 0, i32 1, !dbg !5031
  %182 = getelementptr inbounds %struct.anon.0, ptr %181, i32 0, i32 1, !dbg !5031
  %183 = call i32 @pthread_rwlock_wrlock(ptr noundef %182) #18, !dbg !5031
  %184 = icmp ne i32 %183, 0, !dbg !5031
  %185 = xor i1 %184, true, !dbg !5031
  %186 = xor i1 %185, true, !dbg !5031
  %187 = xor i1 %186, true, !dbg !5031
  %188 = zext i1 %187 to i32, !dbg !5031
  %189 = sext i32 %188 to i64, !dbg !5031
  %190 = icmp ne i64 %189, 0, !dbg !5031
  br i1 %190, label %191, label %199, !dbg !5033

191:                                              ; preds = %179
  %192 = load ptr, ptr %6, align 8, !dbg !5034
  %193 = getelementptr inbounds %struct.cache_t, ptr %192, i32 0, i32 1, !dbg !5036
  %194 = getelementptr inbounds %struct.anon.0, ptr %193, i32 0, i32 0, !dbg !5037
  call void @list_prepend_list(ptr noundef %194, ptr noundef %12), !dbg !5038
  %195 = load ptr, ptr %6, align 8, !dbg !5039
  %196 = getelementptr inbounds %struct.cache_t, ptr %195, i32 0, i32 1, !dbg !5040
  %197 = getelementptr inbounds %struct.anon.0, ptr %196, i32 0, i32 1, !dbg !5041
  %198 = call i32 @pthread_rwlock_unlock(ptr noundef %197) #18, !dbg !5042
  br label %200, !dbg !5043

199:                                              ; preds = %179
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.1.4, i32 noundef 346, ptr noundef @__FUNCTION__.cache_pruner_job, ptr noundef @.str.11), !dbg !5044
  br label %200

200:                                              ; preds = %199, %191
  br label %201, !dbg !5031

201:                                              ; preds = %200, %178, %57
  call void @llvm.dbg.label(metadata !5046), !dbg !5047
  %202 = load ptr, ptr %6, align 8, !dbg !5048
  %203 = getelementptr inbounds %struct.cache_t, ptr %202, i32 0, i32 5, !dbg !5048
  %204 = getelementptr inbounds %struct.anon.3, ptr %203, i32 0, i32 2, !dbg !5048
  %205 = load i32, ptr %11, align 4, !dbg !5048
  %206 = atomicrmw add ptr %204, i32 %205 seq_cst, align 4, !dbg !5048
  %207 = add i32 %206, %205, !dbg !5048
  %208 = load i32, ptr %11, align 4, !dbg !5049
  %209 = icmp ne i32 %208, 0, !dbg !5049
  store i1 %209, ptr %4, align 1, !dbg !5050
  br label %210, !dbg !5050

210:                                              ; preds = %201, %43, %29
  %211 = load i1, ptr %4, align 1, !dbg !5051
  ret i1 %211, !dbg !5051
}

; Function Attrs: nounwind
declare i32 @pthread_rwlock_destroy(ptr noundef) #3

; Function Attrs: nounwind
declare i32 @pthread_rwlock_trywrlock(ptr noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @list_empty(ptr noundef %0) #0 !dbg !5052 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !5057, metadata !DIExpression()), !dbg !5058
  %3 = load ptr, ptr %2, align 8, !dbg !5059
  %4 = load ptr, ptr %2, align 8, !dbg !5060
  %5 = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 0, !dbg !5061
  %6 = getelementptr inbounds %struct.list_node, ptr %5, i32 0, i32 0, !dbg !5062
  %7 = load ptr, ptr %6, align 8, !dbg !5062
  %8 = load ptr, ptr %2, align 8, !dbg !5063
  %9 = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 0, !dbg !5064
  %10 = icmp eq ptr %7, %9, !dbg !5065
  ret i1 %10, !dbg !5066
}

; Function Attrs: nounwind
declare i32 @pthread_rwlock_unlock(ptr noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @list_append_list(ptr noundef %0, ptr noundef %1) #0 !dbg !5067 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !5070, metadata !DIExpression()), !dbg !5071
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !5072, metadata !DIExpression()), !dbg !5073
  call void @llvm.dbg.declare(metadata ptr %5, metadata !5074, metadata !DIExpression()), !dbg !5075
  %7 = load ptr, ptr %4, align 8, !dbg !5076
  %8 = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 0, !dbg !5077
  %9 = getelementptr inbounds %struct.list_node, ptr %8, i32 0, i32 1, !dbg !5078
  %10 = load ptr, ptr %9, align 8, !dbg !5078
  store ptr %10, ptr %5, align 8, !dbg !5075
  call void @llvm.dbg.declare(metadata ptr %6, metadata !5079, metadata !DIExpression()), !dbg !5080
  %11 = load ptr, ptr %3, align 8, !dbg !5081
  %12 = getelementptr inbounds %struct.list_head, ptr %11, i32 0, i32 0, !dbg !5082
  %13 = getelementptr inbounds %struct.list_node, ptr %12, i32 0, i32 1, !dbg !5083
  %14 = load ptr, ptr %13, align 8, !dbg !5083
  store ptr %14, ptr %6, align 8, !dbg !5080
  %15 = load ptr, ptr %5, align 8, !dbg !5084
  %16 = load ptr, ptr %3, align 8, !dbg !5085
  %17 = getelementptr inbounds %struct.list_head, ptr %16, i32 0, i32 0, !dbg !5086
  %18 = getelementptr inbounds %struct.list_node, ptr %17, i32 0, i32 1, !dbg !5087
  store ptr %15, ptr %18, align 8, !dbg !5088
  %19 = load ptr, ptr %3, align 8, !dbg !5089
  %20 = getelementptr inbounds %struct.list_head, ptr %19, i32 0, i32 0, !dbg !5090
  %21 = load ptr, ptr %5, align 8, !dbg !5091
  %22 = getelementptr inbounds %struct.list_node, ptr %21, i32 0, i32 0, !dbg !5092
  store ptr %20, ptr %22, align 8, !dbg !5093
  %23 = load ptr, ptr %4, align 8, !dbg !5094
  %24 = getelementptr inbounds %struct.list_head, ptr %23, i32 0, i32 0, !dbg !5095
  %25 = load ptr, ptr %6, align 8, !dbg !5096
  %26 = getelementptr inbounds %struct.list_node, ptr %25, i32 0, i32 0, !dbg !5097
  store ptr %24, ptr %26, align 8, !dbg !5098
  %27 = load ptr, ptr %6, align 8, !dbg !5099
  %28 = load ptr, ptr %4, align 8, !dbg !5100
  %29 = getelementptr inbounds %struct.list_head, ptr %28, i32 0, i32 0, !dbg !5101
  %30 = getelementptr inbounds %struct.list_node, ptr %29, i32 0, i32 1, !dbg !5102
  store ptr %27, ptr %30, align 8, !dbg !5103
  %31 = load ptr, ptr %4, align 8, !dbg !5104
  %32 = getelementptr inbounds %struct.list_head, ptr %31, i32 0, i32 0, !dbg !5105
  call void @list_del(ptr noundef %32), !dbg !5106
  %33 = load ptr, ptr %4, align 8, !dbg !5107
  call void @list_head_init(ptr noundef %33), !dbg !5108
  ret void, !dbg !5109
}

; Function Attrs: nounwind
declare i32 @clock_gettime(i32 noundef, ptr noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @list_node_to_off_(ptr noundef %0, i64 noundef %1) #0 !dbg !5110 {
  %3 = alloca ptr, align 8
  %4 = alloca i64, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !5113, metadata !DIExpression()), !dbg !5114
  store i64 %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !5115, metadata !DIExpression()), !dbg !5116
  %5 = load ptr, ptr %3, align 8, !dbg !5117
  %6 = load i64, ptr %4, align 8, !dbg !5118
  %7 = sub i64 0, %6, !dbg !5119
  %8 = getelementptr inbounds i8, ptr %5, i64 %7, !dbg !5119
  ret ptr %8, !dbg !5120
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @list_node_from_off_(ptr noundef %0, i64 noundef %1) #0 !dbg !5121 {
  %3 = alloca ptr, align 8
  %4 = alloca i64, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !5124, metadata !DIExpression()), !dbg !5125
  store i64 %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !5126, metadata !DIExpression()), !dbg !5127
  %5 = load ptr, ptr %3, align 8, !dbg !5128
  %6 = load i64, ptr %4, align 8, !dbg !5129
  %7 = getelementptr inbounds i8, ptr %5, i64 %6, !dbg !5130
  ret ptr %7, !dbg !5131
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @list_del(ptr noundef %0) #0 !dbg !5132 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !5135, metadata !DIExpression()), !dbg !5136
  %3 = load ptr, ptr %2, align 8, !dbg !5137
  %4 = load ptr, ptr %2, align 8, !dbg !5138
  %5 = getelementptr inbounds %struct.list_node, ptr %4, i32 0, i32 1, !dbg !5139
  %6 = load ptr, ptr %5, align 8, !dbg !5139
  %7 = load ptr, ptr %2, align 8, !dbg !5140
  %8 = getelementptr inbounds %struct.list_node, ptr %7, i32 0, i32 0, !dbg !5141
  %9 = load ptr, ptr %8, align 8, !dbg !5141
  %10 = getelementptr inbounds %struct.list_node, ptr %9, i32 0, i32 1, !dbg !5142
  store ptr %6, ptr %10, align 8, !dbg !5143
  %11 = load ptr, ptr %2, align 8, !dbg !5144
  %12 = getelementptr inbounds %struct.list_node, ptr %11, i32 0, i32 0, !dbg !5145
  %13 = load ptr, ptr %12, align 8, !dbg !5145
  %14 = load ptr, ptr %2, align 8, !dbg !5146
  %15 = getelementptr inbounds %struct.list_node, ptr %14, i32 0, i32 1, !dbg !5147
  %16 = load ptr, ptr %15, align 8, !dbg !5147
  %17 = getelementptr inbounds %struct.list_node, ptr %16, i32 0, i32 0, !dbg !5148
  store ptr %13, ptr %17, align 8, !dbg !5149
  ret void, !dbg !5150
}

; Function Attrs: nounwind
declare i32 @pthread_rwlock_wrlock(ptr noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @list_prepend_list(ptr noundef %0, ptr noundef %1) #0 !dbg !5151 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !5152, metadata !DIExpression()), !dbg !5153
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !5154, metadata !DIExpression()), !dbg !5155
  call void @llvm.dbg.declare(metadata ptr %5, metadata !5156, metadata !DIExpression()), !dbg !5157
  %7 = load ptr, ptr %4, align 8, !dbg !5158
  %8 = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 0, !dbg !5159
  %9 = getelementptr inbounds %struct.list_node, ptr %8, i32 0, i32 1, !dbg !5160
  %10 = load ptr, ptr %9, align 8, !dbg !5160
  store ptr %10, ptr %5, align 8, !dbg !5157
  call void @llvm.dbg.declare(metadata ptr %6, metadata !5161, metadata !DIExpression()), !dbg !5162
  %11 = load ptr, ptr %3, align 8, !dbg !5163
  %12 = getelementptr inbounds %struct.list_head, ptr %11, i32 0, i32 0, !dbg !5164
  %13 = getelementptr inbounds %struct.list_node, ptr %12, i32 0, i32 0, !dbg !5165
  %14 = load ptr, ptr %13, align 8, !dbg !5165
  store ptr %14, ptr %6, align 8, !dbg !5162
  %15 = load ptr, ptr %4, align 8, !dbg !5166
  %16 = getelementptr inbounds %struct.list_head, ptr %15, i32 0, i32 0, !dbg !5167
  %17 = load ptr, ptr %3, align 8, !dbg !5168
  %18 = getelementptr inbounds %struct.list_head, ptr %17, i32 0, i32 0, !dbg !5169
  %19 = getelementptr inbounds %struct.list_node, ptr %18, i32 0, i32 0, !dbg !5170
  store ptr %16, ptr %19, align 8, !dbg !5171
  %20 = load ptr, ptr %3, align 8, !dbg !5172
  %21 = getelementptr inbounds %struct.list_head, ptr %20, i32 0, i32 0, !dbg !5173
  %22 = load ptr, ptr %4, align 8, !dbg !5174
  %23 = getelementptr inbounds %struct.list_head, ptr %22, i32 0, i32 0, !dbg !5175
  %24 = getelementptr inbounds %struct.list_node, ptr %23, i32 0, i32 1, !dbg !5176
  store ptr %21, ptr %24, align 8, !dbg !5177
  %25 = load ptr, ptr %5, align 8, !dbg !5178
  %26 = load ptr, ptr %6, align 8, !dbg !5179
  %27 = getelementptr inbounds %struct.list_node, ptr %26, i32 0, i32 1, !dbg !5180
  store ptr %25, ptr %27, align 8, !dbg !5181
  %28 = load ptr, ptr %6, align 8, !dbg !5182
  %29 = load ptr, ptr %5, align 8, !dbg !5183
  %30 = getelementptr inbounds %struct.list_node, ptr %29, i32 0, i32 0, !dbg !5184
  store ptr %28, ptr %30, align 8, !dbg !5185
  %31 = load ptr, ptr %4, align 8, !dbg !5186
  %32 = getelementptr inbounds %struct.list_head, ptr %31, i32 0, i32 0, !dbg !5187
  call void @list_del(ptr noundef %32), !dbg !5188
  %33 = load ptr, ptr %4, align 8, !dbg !5189
  call void @list_head_init(ptr noundef %33), !dbg !5190
  ret void, !dbg !5191
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @cache_destroy(ptr noundef %0) #0 !dbg !5192 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !5195, metadata !DIExpression()), !dbg !5196
  %3 = load ptr, ptr %2, align 8, !dbg !5197
  %4 = icmp ne ptr %3, null, !dbg !5197
  br i1 %4, label %5, label %6, !dbg !5200

5:                                                ; preds = %1
  br label %7, !dbg !5200

6:                                                ; preds = %1
  call void @__assert_fail(ptr noundef @.str.4, ptr noundef @.str.1.4, i32 noundef 146, ptr noundef @__PRETTY_FUNCTION__.cache_destroy) #21, !dbg !5197
  unreachable, !dbg !5197

7:                                                ; preds = %5
  %8 = load ptr, ptr %2, align 8, !dbg !5201
  %9 = getelementptr inbounds %struct.cache_t, ptr %8, i32 0, i32 5, !dbg !5201
  %10 = getelementptr inbounds %struct.anon.3, ptr %9, i32 0, i32 0, !dbg !5201
  %11 = load i32, ptr %10, align 4, !dbg !5201
  %12 = load ptr, ptr %2, align 8, !dbg !5201
  %13 = getelementptr inbounds %struct.cache_t, ptr %12, i32 0, i32 5, !dbg !5201
  %14 = getelementptr inbounds %struct.anon.3, ptr %13, i32 0, i32 1, !dbg !5201
  %15 = load i32, ptr %14, align 4, !dbg !5201
  %16 = load ptr, ptr %2, align 8, !dbg !5201
  %17 = getelementptr inbounds %struct.cache_t, ptr %16, i32 0, i32 5, !dbg !5201
  %18 = getelementptr inbounds %struct.anon.3, ptr %17, i32 0, i32 2, !dbg !5201
  %19 = load i32, ptr %18, align 4, !dbg !5201
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.1.4, i32 noundef 151, ptr noundef @__FUNCTION__.cache_destroy, ptr noundef @.str.5, i32 noundef %11, i32 noundef %15, i32 noundef %19), !dbg !5201
  %20 = load ptr, ptr %2, align 8, !dbg !5202
  call void @lwan_job_del(ptr noundef @cache_pruner_job, ptr noundef %20), !dbg !5203
  %21 = load ptr, ptr %2, align 8, !dbg !5204
  %22 = getelementptr inbounds %struct.cache_t, ptr %21, i32 0, i32 4, !dbg !5205
  %23 = load i32, ptr %22, align 8, !dbg !5206
  %24 = or i32 %23, 1, !dbg !5206
  store i32 %24, ptr %22, align 8, !dbg !5206
  %25 = load ptr, ptr %2, align 8, !dbg !5207
  %26 = call zeroext i1 @cache_pruner_job(ptr noundef %25), !dbg !5208
  %27 = load ptr, ptr %2, align 8, !dbg !5209
  %28 = getelementptr inbounds %struct.cache_t, ptr %27, i32 0, i32 0, !dbg !5210
  %29 = getelementptr inbounds %struct.anon, ptr %28, i32 0, i32 1, !dbg !5211
  %30 = call i32 @pthread_rwlock_destroy(ptr noundef %29) #18, !dbg !5212
  %31 = load ptr, ptr %2, align 8, !dbg !5213
  %32 = getelementptr inbounds %struct.cache_t, ptr %31, i32 0, i32 1, !dbg !5214
  %33 = getelementptr inbounds %struct.anon.0, ptr %32, i32 0, i32 1, !dbg !5215
  %34 = call i32 @pthread_rwlock_destroy(ptr noundef %33) #18, !dbg !5216
  %35 = load ptr, ptr %2, align 8, !dbg !5217
  %36 = getelementptr inbounds %struct.cache_t, ptr %35, i32 0, i32 0, !dbg !5218
  %37 = getelementptr inbounds %struct.anon, ptr %36, i32 0, i32 0, !dbg !5219
  %38 = load ptr, ptr %37, align 8, !dbg !5219
  call void @hash_free(ptr noundef %38), !dbg !5220
  %39 = load ptr, ptr %2, align 8, !dbg !5221
  call void @free(ptr noundef %39) #18, !dbg !5222
  ret void, !dbg !5223
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @cache_get_and_ref_entry(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !5224 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca %struct.timespec, align 8
  store ptr %0, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %10, metadata !5227, metadata !DIExpression()), !dbg !5228
  store ptr %1, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !5229, metadata !DIExpression()), !dbg !5230
  store ptr %2, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %12, metadata !5231, metadata !DIExpression()), !dbg !5232
  call void @llvm.dbg.declare(metadata ptr %13, metadata !5233, metadata !DIExpression()), !dbg !5234
  %15 = load ptr, ptr %10, align 8, !dbg !5235
  %16 = icmp ne ptr %15, null, !dbg !5235
  br i1 %16, label %17, label %18, !dbg !5238

17:                                               ; preds = %3
  br label %19, !dbg !5238

18:                                               ; preds = %3
  call void @__assert_fail(ptr noundef @.str.4, ptr noundef @.str.1.4, i32 noundef 175, ptr noundef @__PRETTY_FUNCTION__.cache_get_and_ref_entry) #21, !dbg !5235
  unreachable, !dbg !5235

19:                                               ; preds = %17
  %20 = load ptr, ptr %12, align 8, !dbg !5239
  %21 = icmp ne ptr %20, null, !dbg !5239
  br i1 %21, label %22, label %23, !dbg !5242

22:                                               ; preds = %19
  br label %24, !dbg !5242

23:                                               ; preds = %19
  call void @__assert_fail(ptr noundef @.str.6, ptr noundef @.str.1.4, i32 noundef 176, ptr noundef @__PRETTY_FUNCTION__.cache_get_and_ref_entry) #21, !dbg !5239
  unreachable, !dbg !5239

24:                                               ; preds = %22
  %25 = load ptr, ptr %11, align 8, !dbg !5243
  %26 = icmp ne ptr %25, null, !dbg !5243
  br i1 %26, label %27, label %28, !dbg !5246

27:                                               ; preds = %24
  br label %29, !dbg !5246

28:                                               ; preds = %24
  call void @__assert_fail(ptr noundef @.str.7, ptr noundef @.str.1.4, i32 noundef 177, ptr noundef @__PRETTY_FUNCTION__.cache_get_and_ref_entry) #21, !dbg !5243
  unreachable, !dbg !5243

29:                                               ; preds = %27
  %30 = load ptr, ptr %12, align 8, !dbg !5247
  store i32 0, ptr %30, align 4, !dbg !5248
  %31 = load ptr, ptr %10, align 8, !dbg !5249
  %32 = getelementptr inbounds %struct.cache_t, ptr %31, i32 0, i32 0, !dbg !5249
  %33 = getelementptr inbounds %struct.anon, ptr %32, i32 0, i32 1, !dbg !5249
  %34 = call i32 @pthread_rwlock_tryrdlock(ptr noundef %33) #18, !dbg !5249
  %35 = icmp eq i32 %34, 16, !dbg !5249
  %36 = zext i1 %35 to i32, !dbg !5249
  %37 = sext i32 %36 to i64, !dbg !5249
  %38 = icmp ne i64 %37, 0, !dbg !5249
  br i1 %38, label %39, label %41, !dbg !5251

39:                                               ; preds = %29
  %40 = load ptr, ptr %12, align 8, !dbg !5252
  store i32 11, ptr %40, align 4, !dbg !5254
  store ptr null, ptr %9, align 8, !dbg !5255
  br label %182, !dbg !5255

41:                                               ; preds = %29
  %42 = load ptr, ptr %10, align 8, !dbg !5256
  %43 = getelementptr inbounds %struct.cache_t, ptr %42, i32 0, i32 0, !dbg !5257
  %44 = getelementptr inbounds %struct.anon, ptr %43, i32 0, i32 0, !dbg !5258
  %45 = load ptr, ptr %44, align 8, !dbg !5258
  %46 = load ptr, ptr %11, align 8, !dbg !5259
  %47 = call ptr @hash_find(ptr noundef %45, ptr noundef %46), !dbg !5260
  store ptr %47, ptr %13, align 8, !dbg !5261
  %48 = load ptr, ptr %13, align 8, !dbg !5262
  %49 = icmp ne ptr %48, null, !dbg !5262
  %50 = xor i1 %49, true, !dbg !5262
  %51 = xor i1 %50, true, !dbg !5262
  %52 = zext i1 %51 to i32, !dbg !5262
  %53 = sext i32 %52 to i64, !dbg !5262
  %54 = icmp ne i64 %53, 0, !dbg !5262
  br i1 %54, label %55, label %70, !dbg !5264

55:                                               ; preds = %41
  %56 = load ptr, ptr %13, align 8, !dbg !5265
  %57 = getelementptr inbounds %struct.cache_entry_t, ptr %56, i32 0, i32 2, !dbg !5265
  %58 = atomicrmw add ptr %57, i32 1 seq_cst, align 4, !dbg !5265
  %59 = add i32 %58, 1, !dbg !5265
  %60 = load ptr, ptr %10, align 8, !dbg !5267
  %61 = getelementptr inbounds %struct.cache_t, ptr %60, i32 0, i32 0, !dbg !5268
  %62 = getelementptr inbounds %struct.anon, ptr %61, i32 0, i32 1, !dbg !5269
  %63 = call i32 @pthread_rwlock_unlock(ptr noundef %62) #18, !dbg !5270
  %64 = load ptr, ptr %10, align 8, !dbg !5271
  %65 = getelementptr inbounds %struct.cache_t, ptr %64, i32 0, i32 5, !dbg !5271
  %66 = getelementptr inbounds %struct.anon.3, ptr %65, i32 0, i32 0, !dbg !5271
  %67 = atomicrmw add ptr %66, i32 1 seq_cst, align 4, !dbg !5271
  %68 = add i32 %67, 1, !dbg !5271
  %69 = load ptr, ptr %13, align 8, !dbg !5272
  store ptr %69, ptr %9, align 8, !dbg !5273
  br label %182, !dbg !5273

70:                                               ; preds = %41
  %71 = load ptr, ptr %10, align 8, !dbg !5274
  %72 = getelementptr inbounds %struct.cache_t, ptr %71, i32 0, i32 0, !dbg !5275
  %73 = getelementptr inbounds %struct.anon, ptr %72, i32 0, i32 1, !dbg !5276
  %74 = call i32 @pthread_rwlock_unlock(ptr noundef %73) #18, !dbg !5277
  %75 = load ptr, ptr %10, align 8, !dbg !5278
  %76 = getelementptr inbounds %struct.cache_t, ptr %75, i32 0, i32 5, !dbg !5278
  %77 = getelementptr inbounds %struct.anon.3, ptr %76, i32 0, i32 1, !dbg !5278
  %78 = atomicrmw add ptr %77, i32 1 seq_cst, align 4, !dbg !5278
  %79 = add i32 %78, 1, !dbg !5278
  %80 = load ptr, ptr %10, align 8, !dbg !5279
  %81 = getelementptr inbounds %struct.cache_t, ptr %80, i32 0, i32 2, !dbg !5280
  %82 = getelementptr inbounds %struct.anon.1, ptr %81, i32 0, i32 0, !dbg !5281
  %83 = load ptr, ptr %82, align 8, !dbg !5281
  %84 = load ptr, ptr %11, align 8, !dbg !5282
  %85 = load ptr, ptr %10, align 8, !dbg !5283
  %86 = getelementptr inbounds %struct.cache_t, ptr %85, i32 0, i32 2, !dbg !5284
  %87 = getelementptr inbounds %struct.anon.1, ptr %86, i32 0, i32 2, !dbg !5285
  %88 = load ptr, ptr %87, align 8, !dbg !5285
  %89 = call ptr %83(ptr noundef %84, ptr noundef %88), !dbg !5279
  store ptr %89, ptr %13, align 8, !dbg !5286
  %90 = load ptr, ptr %13, align 8, !dbg !5287
  %91 = icmp ne ptr %90, null, !dbg !5287
  br i1 %91, label %93, label %92, !dbg !5289

92:                                               ; preds = %70
  store ptr null, ptr %9, align 8, !dbg !5290
  br label %182, !dbg !5290

93:                                               ; preds = %70
  %94 = load ptr, ptr %13, align 8, !dbg !5291
  call void @llvm.memset.p0.i64(ptr align 8 %94, i8 0, i64 40, i1 false), !dbg !5292
  %95 = load ptr, ptr %11, align 8, !dbg !5293
  %96 = call noalias ptr @strdup(ptr noundef %95) #18, !dbg !5294
  %97 = load ptr, ptr %13, align 8, !dbg !5295
  %98 = getelementptr inbounds %struct.cache_entry_t, ptr %97, i32 0, i32 1, !dbg !5296
  store ptr %96, ptr %98, align 8, !dbg !5297
  %99 = load ptr, ptr %13, align 8, !dbg !5298
  %100 = getelementptr inbounds %struct.cache_entry_t, ptr %99, i32 0, i32 2, !dbg !5299
  store i32 1, ptr %100, align 8, !dbg !5300
  %101 = load ptr, ptr %10, align 8, !dbg !5301
  %102 = getelementptr inbounds %struct.cache_t, ptr %101, i32 0, i32 0, !dbg !5303
  %103 = getelementptr inbounds %struct.anon, ptr %102, i32 0, i32 1, !dbg !5304
  %104 = call i32 @pthread_rwlock_trywrlock(ptr noundef %103) #18, !dbg !5305
  %105 = icmp eq i32 %104, 16, !dbg !5306
  br i1 %105, label %106, label %111, !dbg !5307

106:                                              ; preds = %93
  %107 = load ptr, ptr %13, align 8, !dbg !5308
  store ptr %107, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !5310, metadata !DIExpression()), !dbg !5314
  %108 = load ptr, ptr %6, align 8, !dbg !5316
  %109 = getelementptr inbounds %struct.cache_entry_t, ptr %108, i32 0, i32 3, !dbg !5317
  store i32 2, ptr %109, align 4, !dbg !5318
  %110 = load ptr, ptr %6, align 8, !dbg !5319
  store ptr %110, ptr %9, align 8, !dbg !5320
  br label %182, !dbg !5320

111:                                              ; preds = %93
  %112 = load ptr, ptr %10, align 8, !dbg !5321
  %113 = getelementptr inbounds %struct.cache_t, ptr %112, i32 0, i32 0, !dbg !5323
  %114 = getelementptr inbounds %struct.anon, ptr %113, i32 0, i32 0, !dbg !5324
  %115 = load ptr, ptr %114, align 8, !dbg !5324
  %116 = load ptr, ptr %13, align 8, !dbg !5325
  %117 = getelementptr inbounds %struct.cache_entry_t, ptr %116, i32 0, i32 1, !dbg !5326
  %118 = load ptr, ptr %117, align 8, !dbg !5326
  %119 = load ptr, ptr %13, align 8, !dbg !5327
  %120 = call i32 @hash_add_unique(ptr noundef %115, ptr noundef %118, ptr noundef %119), !dbg !5328
  %121 = icmp ne i32 %120, 0, !dbg !5328
  br i1 %121, label %171, label %122, !dbg !5329

122:                                              ; preds = %111
  call void @llvm.dbg.declare(metadata ptr %14, metadata !5330, metadata !DIExpression()), !dbg !5332
  %123 = load ptr, ptr %10, align 8, !dbg !5333
  store ptr %123, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !4949, metadata !DIExpression()), !dbg !5334
  store ptr %14, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !4956, metadata !DIExpression()), !dbg !5336
  %124 = load ptr, ptr %4, align 8, !dbg !5337
  %125 = getelementptr inbounds %struct.cache_t, ptr %124, i32 0, i32 3, !dbg !5337
  %126 = getelementptr inbounds %struct.anon.2, ptr %125, i32 0, i32 1, !dbg !5337
  %127 = load i32, ptr %126, align 8, !dbg !5337
  %128 = load ptr, ptr %5, align 8, !dbg !5337
  %129 = call i32 @clock_gettime(i32 noundef %127, ptr noundef %128) #18, !dbg !5337
  %130 = icmp slt i32 %129, 0, !dbg !5337
  %131 = zext i1 %130 to i32, !dbg !5337
  %132 = sext i32 %131 to i64, !dbg !5337
  br i1 %130, label %133, label %134, !dbg !5338

133:                                              ; preds = %122
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.1.4, i32 noundef 94, ptr noundef @__FUNCTION__.clock_monotonic_gettime, ptr noundef @.str.9) #18, !dbg !5339
  br label %134, !dbg !5339

134:                                              ; preds = %133, %122
  %135 = getelementptr inbounds %struct.timespec, ptr %14, i32 0, i32 0, !dbg !5340
  %136 = load i64, ptr %135, align 8, !dbg !5340
  %137 = load ptr, ptr %10, align 8, !dbg !5341
  %138 = getelementptr inbounds %struct.cache_t, ptr %137, i32 0, i32 3, !dbg !5342
  %139 = getelementptr inbounds %struct.anon.2, ptr %138, i32 0, i32 0, !dbg !5343
  %140 = load i64, ptr %139, align 8, !dbg !5343
  %141 = add nsw i64 %136, %140, !dbg !5344
  %142 = load ptr, ptr %13, align 8, !dbg !5345
  %143 = getelementptr inbounds %struct.cache_entry_t, ptr %142, i32 0, i32 4, !dbg !5346
  store i64 %141, ptr %143, align 8, !dbg !5347
  %144 = load ptr, ptr %10, align 8, !dbg !5348
  %145 = getelementptr inbounds %struct.cache_t, ptr %144, i32 0, i32 1, !dbg !5348
  %146 = getelementptr inbounds %struct.anon.0, ptr %145, i32 0, i32 1, !dbg !5348
  %147 = call i32 @pthread_rwlock_wrlock(ptr noundef %146) #18, !dbg !5348
  %148 = icmp ne i32 %147, 0, !dbg !5348
  %149 = xor i1 %148, true, !dbg !5348
  %150 = xor i1 %149, true, !dbg !5348
  %151 = xor i1 %150, true, !dbg !5348
  %152 = zext i1 %151 to i32, !dbg !5348
  %153 = sext i32 %152 to i64, !dbg !5348
  %154 = icmp ne i64 %153, 0, !dbg !5348
  br i1 %154, label %155, label %165, !dbg !5350

155:                                              ; preds = %134
  %156 = load ptr, ptr %10, align 8, !dbg !5351
  %157 = getelementptr inbounds %struct.cache_t, ptr %156, i32 0, i32 1, !dbg !5353
  %158 = getelementptr inbounds %struct.anon.0, ptr %157, i32 0, i32 0, !dbg !5354
  %159 = load ptr, ptr %13, align 8, !dbg !5355
  %160 = getelementptr inbounds %struct.cache_entry_t, ptr %159, i32 0, i32 0, !dbg !5356
  call void @list_add_tail(ptr noundef %158, ptr noundef %160), !dbg !5357
  %161 = load ptr, ptr %10, align 8, !dbg !5358
  %162 = getelementptr inbounds %struct.cache_t, ptr %161, i32 0, i32 1, !dbg !5359
  %163 = getelementptr inbounds %struct.anon.0, ptr %162, i32 0, i32 1, !dbg !5360
  %164 = call i32 @pthread_rwlock_unlock(ptr noundef %163) #18, !dbg !5361
  br label %170, !dbg !5362

165:                                              ; preds = %134
  %166 = load ptr, ptr %13, align 8, !dbg !5363
  store ptr %166, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !5310, metadata !DIExpression()), !dbg !5365
  %167 = load ptr, ptr %7, align 8, !dbg !5367
  %168 = getelementptr inbounds %struct.cache_entry_t, ptr %167, i32 0, i32 3, !dbg !5368
  store i32 2, ptr %168, align 4, !dbg !5369
  %169 = load ptr, ptr %7, align 8, !dbg !5370
  store ptr %169, ptr %9, align 8, !dbg !5371
  br label %182, !dbg !5371

170:                                              ; preds = %155
  br label %176, !dbg !5372

171:                                              ; preds = %111
  %172 = load ptr, ptr %13, align 8, !dbg !5373
  store ptr %172, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !5310, metadata !DIExpression()), !dbg !5375
  %173 = load ptr, ptr %8, align 8, !dbg !5377
  %174 = getelementptr inbounds %struct.cache_entry_t, ptr %173, i32 0, i32 3, !dbg !5378
  store i32 2, ptr %174, align 4, !dbg !5379
  %175 = load ptr, ptr %8, align 8, !dbg !5380
  br label %176

176:                                              ; preds = %171, %170
  %177 = load ptr, ptr %10, align 8, !dbg !5381
  %178 = getelementptr inbounds %struct.cache_t, ptr %177, i32 0, i32 0, !dbg !5382
  %179 = getelementptr inbounds %struct.anon, ptr %178, i32 0, i32 1, !dbg !5383
  %180 = call i32 @pthread_rwlock_unlock(ptr noundef %179) #18, !dbg !5384
  %181 = load ptr, ptr %13, align 8, !dbg !5385
  store ptr %181, ptr %9, align 8, !dbg !5386
  br label %182, !dbg !5386

182:                                              ; preds = %176, %165, %106, %92, %55, %39
  %183 = load ptr, ptr %9, align 8, !dbg !5387
  ret ptr %183, !dbg !5387
}

; Function Attrs: nounwind
declare i32 @pthread_rwlock_tryrdlock(ptr noundef) #3

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #11

; Function Attrs: nounwind
declare noalias ptr @strdup(ptr noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @list_add_tail(ptr noundef %0, ptr noundef %1) #0 !dbg !5388 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !5391, metadata !DIExpression()), !dbg !5392
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !5393, metadata !DIExpression()), !dbg !5394
  %5 = load ptr, ptr %3, align 8, !dbg !5395
  %6 = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 0, !dbg !5396
  %7 = load ptr, ptr %4, align 8, !dbg !5397
  %8 = getelementptr inbounds %struct.list_node, ptr %7, i32 0, i32 0, !dbg !5398
  store ptr %6, ptr %8, align 8, !dbg !5399
  %9 = load ptr, ptr %3, align 8, !dbg !5400
  %10 = getelementptr inbounds %struct.list_head, ptr %9, i32 0, i32 0, !dbg !5401
  %11 = getelementptr inbounds %struct.list_node, ptr %10, i32 0, i32 1, !dbg !5402
  %12 = load ptr, ptr %11, align 8, !dbg !5402
  %13 = load ptr, ptr %4, align 8, !dbg !5403
  %14 = getelementptr inbounds %struct.list_node, ptr %13, i32 0, i32 1, !dbg !5404
  store ptr %12, ptr %14, align 8, !dbg !5405
  %15 = load ptr, ptr %4, align 8, !dbg !5406
  %16 = load ptr, ptr %3, align 8, !dbg !5407
  %17 = getelementptr inbounds %struct.list_head, ptr %16, i32 0, i32 0, !dbg !5408
  %18 = getelementptr inbounds %struct.list_node, ptr %17, i32 0, i32 1, !dbg !5409
  %19 = load ptr, ptr %18, align 8, !dbg !5409
  %20 = getelementptr inbounds %struct.list_node, ptr %19, i32 0, i32 0, !dbg !5410
  store ptr %15, ptr %20, align 8, !dbg !5411
  %21 = load ptr, ptr %4, align 8, !dbg !5412
  %22 = load ptr, ptr %3, align 8, !dbg !5413
  %23 = getelementptr inbounds %struct.list_head, ptr %22, i32 0, i32 0, !dbg !5414
  %24 = getelementptr inbounds %struct.list_node, ptr %23, i32 0, i32 1, !dbg !5415
  store ptr %21, ptr %24, align 8, !dbg !5416
  %25 = load ptr, ptr %3, align 8, !dbg !5417
  ret void, !dbg !5418
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @cache_entry_unref(ptr noundef %0, ptr noundef %1) #0 !dbg !5419 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !5422, metadata !DIExpression()), !dbg !5423
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !5424, metadata !DIExpression()), !dbg !5425
  %5 = load ptr, ptr %4, align 8, !dbg !5426
  %6 = icmp ne ptr %5, null, !dbg !5426
  br i1 %6, label %7, label %8, !dbg !5429

7:                                                ; preds = %2
  br label %9, !dbg !5429

8:                                                ; preds = %2
  call void @__assert_fail(ptr noundef @.str.8, ptr noundef @.str.1.4, i32 noundef 251, ptr noundef @__PRETTY_FUNCTION__.cache_entry_unref) #21, !dbg !5426
  unreachable, !dbg !5426

9:                                                ; preds = %7
  %10 = load ptr, ptr %4, align 8, !dbg !5430
  %11 = getelementptr inbounds %struct.cache_entry_t, ptr %10, i32 0, i32 3, !dbg !5432
  %12 = load i32, ptr %11, align 4, !dbg !5432
  %13 = and i32 %12, 2, !dbg !5433
  %14 = icmp ne i32 %13, 0, !dbg !5433
  br i1 %14, label %15, label %19, !dbg !5434

15:                                               ; preds = %9
  %16 = load ptr, ptr %4, align 8, !dbg !5435
  %17 = getelementptr inbounds %struct.cache_entry_t, ptr %16, i32 0, i32 1, !dbg !5437
  %18 = load ptr, ptr %17, align 8, !dbg !5437
  call void @free(ptr noundef %18) #18, !dbg !5438
  br label %33, !dbg !5439

19:                                               ; preds = %9
  %20 = load ptr, ptr %4, align 8, !dbg !5440
  %21 = getelementptr inbounds %struct.cache_entry_t, ptr %20, i32 0, i32 2, !dbg !5440
  %22 = atomicrmw add ptr %21, i32 -1 seq_cst, align 4, !dbg !5440
  %23 = add i32 %22, -1, !dbg !5440
  %24 = icmp ne i32 %23, 0, !dbg !5440
  br i1 %24, label %25, label %26, !dbg !5442

25:                                               ; preds = %19
  br label %43, !dbg !5443

26:                                               ; preds = %19
  %27 = load ptr, ptr %4, align 8, !dbg !5444
  %28 = getelementptr inbounds %struct.cache_entry_t, ptr %27, i32 0, i32 3, !dbg !5446
  %29 = load i32, ptr %28, align 4, !dbg !5446
  %30 = and i32 %29, 1, !dbg !5447
  %31 = icmp ne i32 %30, 0, !dbg !5447
  br i1 %31, label %32, label %43, !dbg !5448

32:                                               ; preds = %26
  br label %33, !dbg !5449

33:                                               ; preds = %32, %15
  call void @llvm.dbg.label(metadata !5450), !dbg !5452
  %34 = load ptr, ptr %3, align 8, !dbg !5453
  %35 = getelementptr inbounds %struct.cache_t, ptr %34, i32 0, i32 2, !dbg !5454
  %36 = getelementptr inbounds %struct.anon.1, ptr %35, i32 0, i32 1, !dbg !5455
  %37 = load ptr, ptr %36, align 8, !dbg !5455
  %38 = load ptr, ptr %4, align 8, !dbg !5456
  %39 = load ptr, ptr %3, align 8, !dbg !5457
  %40 = getelementptr inbounds %struct.cache_t, ptr %39, i32 0, i32 2, !dbg !5458
  %41 = getelementptr inbounds %struct.anon.1, ptr %40, i32 0, i32 2, !dbg !5459
  %42 = load ptr, ptr %41, align 8, !dbg !5459
  call void %37(ptr noundef %38, ptr noundef %42), !dbg !5453
  br label %43, !dbg !5460

43:                                               ; preds = %33, %26, %25
  ret void, !dbg !5461
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @cache_coro_get_and_ref_entry(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !5462 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !5465, metadata !DIExpression()), !dbg !5466
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !5467, metadata !DIExpression()), !dbg !5468
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !5469, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.declare(metadata ptr %8, metadata !5471, metadata !DIExpression()), !dbg !5473
  store i32 5, ptr %8, align 4, !dbg !5473
  br label %11, !dbg !5474

11:                                               ; preds = %38, %3
  %12 = load i32, ptr %8, align 4, !dbg !5475
  %13 = icmp ne i32 %12, 0, !dbg !5477
  br i1 %13, label %14, label %41, !dbg !5477

14:                                               ; preds = %11
  call void @llvm.dbg.declare(metadata ptr %9, metadata !5478, metadata !DIExpression()), !dbg !5480
  call void @llvm.dbg.declare(metadata ptr %10, metadata !5481, metadata !DIExpression()), !dbg !5482
  %15 = load ptr, ptr %5, align 8, !dbg !5483
  %16 = load ptr, ptr %7, align 8, !dbg !5484
  %17 = call ptr @cache_get_and_ref_entry(ptr noundef %15, ptr noundef %16, ptr noundef %9), !dbg !5485
  store ptr %17, ptr %10, align 8, !dbg !5482
  %18 = load ptr, ptr %10, align 8, !dbg !5486
  %19 = icmp ne ptr %18, null, !dbg !5486
  %20 = xor i1 %19, true, !dbg !5486
  %21 = xor i1 %20, true, !dbg !5486
  %22 = zext i1 %21 to i32, !dbg !5486
  %23 = sext i32 %22 to i64, !dbg !5486
  %24 = icmp ne i64 %23, 0, !dbg !5486
  br i1 %24, label %25, label %30, !dbg !5488

25:                                               ; preds = %14
  %26 = load ptr, ptr %6, align 8, !dbg !5489
  %27 = load ptr, ptr %5, align 8, !dbg !5491
  %28 = load ptr, ptr %10, align 8, !dbg !5492
  call void @coro_defer2(ptr noundef %26, ptr noundef @cache_entry_unref, ptr noundef %27, ptr noundef %28), !dbg !5493
  %29 = load ptr, ptr %10, align 8, !dbg !5494
  store ptr %29, ptr %4, align 8, !dbg !5495
  br label %42, !dbg !5495

30:                                               ; preds = %14
  %31 = load i32, ptr %9, align 4, !dbg !5496
  %32 = icmp eq i32 %31, 11, !dbg !5498
  br i1 %32, label %33, label %36, !dbg !5499

33:                                               ; preds = %30
  %34 = load ptr, ptr %6, align 8, !dbg !5500
  %35 = call i32 @coro_yield(ptr noundef %34, i32 noundef 0), !dbg !5502
  br label %37, !dbg !5503

36:                                               ; preds = %30
  br label %41, !dbg !5504

37:                                               ; preds = %33
  br label %38, !dbg !5506

38:                                               ; preds = %37
  %39 = load i32, ptr %8, align 4, !dbg !5507
  %40 = add nsw i32 %39, -1, !dbg !5507
  store i32 %40, ptr %8, align 4, !dbg !5507
  br label %11, !dbg !5508, !llvm.loop !5509

41:                                               ; preds = %36, %11
  store ptr null, ptr %4, align 8, !dbg !5511
  br label %42, !dbg !5511

42:                                               ; preds = %41, %25
  %43 = load ptr, ptr %4, align 8, !dbg !5512
  ret ptr %43, !dbg !5512
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @parse_time_period(ptr noundef %0, i32 noundef %1) #0 !dbg !5513 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8, align 1
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !5516, metadata !DIExpression()), !dbg !5517
  store i32 %1, ptr %5, align 4
  call void @llvm.dbg.declare(metadata ptr %5, metadata !5518, metadata !DIExpression()), !dbg !5519
  call void @llvm.dbg.declare(metadata ptr %6, metadata !5520, metadata !DIExpression()), !dbg !5521
  store i32 0, ptr %6, align 4, !dbg !5521
  call void @llvm.dbg.declare(metadata ptr %7, metadata !5522, metadata !DIExpression()), !dbg !5523
  call void @llvm.dbg.declare(metadata ptr %8, metadata !5524, metadata !DIExpression()), !dbg !5525
  %9 = load ptr, ptr %4, align 8, !dbg !5526
  %10 = icmp ne ptr %9, null, !dbg !5526
  br i1 %10, label %13, label %11, !dbg !5528

11:                                               ; preds = %2
  %12 = load i32, ptr %5, align 4, !dbg !5529
  store i32 %12, ptr %3, align 4, !dbg !5530
  br label %80, !dbg !5530

13:                                               ; preds = %2
  br label %14, !dbg !5531

14:                                               ; preds = %65, %13
  %15 = load ptr, ptr %4, align 8, !dbg !5532
  %16 = load i8, ptr %15, align 1, !dbg !5533
  %17 = sext i8 %16 to i32, !dbg !5533
  %18 = icmp ne i32 %17, 0, !dbg !5533
  br i1 %18, label %19, label %23, !dbg !5534

19:                                               ; preds = %14
  %20 = load ptr, ptr %4, align 8, !dbg !5535
  %21 = call i32 (ptr, ptr, ...) @__isoc99_sscanf(ptr noundef %20, ptr noundef @.str.12, ptr noundef %7, ptr noundef %8) #18, !dbg !5536
  %22 = icmp eq i32 %21, 2, !dbg !5537
  br label %23

23:                                               ; preds = %19, %14
  %24 = phi i1 [ false, %14 ], [ %22, %19 ], !dbg !5538
  br i1 %24, label %25, label %71, !dbg !5531

25:                                               ; preds = %23
  %26 = load i8, ptr %8, align 1, !dbg !5539
  %27 = sext i8 %26 to i32, !dbg !5539
  switch i32 %27, label %62 [
    i32 115, label %28
    i32 109, label %32
    i32 104, label %37
    i32 100, label %42
    i32 119, label %47
    i32 77, label %52
    i32 121, label %57
  ], !dbg !5541

28:                                               ; preds = %25
  %29 = load i32, ptr %7, align 4, !dbg !5542
  %30 = load i32, ptr %6, align 4, !dbg !5544
  %31 = add i32 %30, %29, !dbg !5544
  store i32 %31, ptr %6, align 4, !dbg !5544
  br label %65, !dbg !5545

32:                                               ; preds = %25
  %33 = load i32, ptr %7, align 4, !dbg !5546
  %34 = mul i32 %33, 60, !dbg !5547
  %35 = load i32, ptr %6, align 4, !dbg !5548
  %36 = add i32 %35, %34, !dbg !5548
  store i32 %36, ptr %6, align 4, !dbg !5548
  br label %65, !dbg !5549

37:                                               ; preds = %25
  %38 = load i32, ptr %7, align 4, !dbg !5550
  %39 = mul i32 %38, 3600, !dbg !5551
  %40 = load i32, ptr %6, align 4, !dbg !5552
  %41 = add i32 %40, %39, !dbg !5552
  store i32 %41, ptr %6, align 4, !dbg !5552
  br label %65, !dbg !5553

42:                                               ; preds = %25
  %43 = load i32, ptr %7, align 4, !dbg !5554
  %44 = mul i32 %43, 86400, !dbg !5555
  %45 = load i32, ptr %6, align 4, !dbg !5556
  %46 = add i32 %45, %44, !dbg !5556
  store i32 %46, ptr %6, align 4, !dbg !5556
  br label %65, !dbg !5557

47:                                               ; preds = %25
  %48 = load i32, ptr %7, align 4, !dbg !5558
  %49 = mul i32 %48, 604800, !dbg !5559
  %50 = load i32, ptr %6, align 4, !dbg !5560
  %51 = add i32 %50, %49, !dbg !5560
  store i32 %51, ptr %6, align 4, !dbg !5560
  br label %65, !dbg !5561

52:                                               ; preds = %25
  %53 = load i32, ptr %7, align 4, !dbg !5562
  %54 = mul i32 %53, 2678400, !dbg !5563
  %55 = load i32, ptr %6, align 4, !dbg !5564
  %56 = add i32 %55, %54, !dbg !5564
  store i32 %56, ptr %6, align 4, !dbg !5564
  br label %65, !dbg !5565

57:                                               ; preds = %25
  %58 = load i32, ptr %7, align 4, !dbg !5566
  %59 = mul i32 %58, 32140800, !dbg !5567
  %60 = load i32, ptr %6, align 4, !dbg !5568
  %61 = add i32 %60, %59, !dbg !5568
  store i32 %61, ptr %6, align 4, !dbg !5568
  br label %65, !dbg !5569

62:                                               ; preds = %25
  %63 = load i8, ptr %8, align 1, !dbg !5570
  %64 = sext i8 %63 to i32, !dbg !5570
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_warning_debug(ptr noundef @.str.1.13, i32 noundef 54, ptr noundef @__FUNCTION__.parse_time_period, ptr noundef @.str.2.14, i32 noundef %64), !dbg !5570
  br label %65, !dbg !5571

65:                                               ; preds = %62, %57, %52, %47, %42, %37, %32, %28
  %66 = load ptr, ptr %4, align 8, !dbg !5572
  %67 = load i8, ptr %8, align 1, !dbg !5573
  %68 = sext i8 %67 to i32, !dbg !5573
  %69 = call ptr @rawmemchr(ptr noundef %66, i32 noundef %68) #22, !dbg !5574
  %70 = getelementptr inbounds i8, ptr %69, i64 1, !dbg !5575
  store ptr %70, ptr %4, align 8, !dbg !5576
  br label %14, !dbg !5531, !llvm.loop !5577

71:                                               ; preds = %23
  %72 = load i32, ptr %6, align 4, !dbg !5579
  %73 = icmp ne i32 %72, 0, !dbg !5579
  br i1 %73, label %74, label %76, !dbg !5579

74:                                               ; preds = %71
  %75 = load i32, ptr %6, align 4, !dbg !5580
  br label %78, !dbg !5579

76:                                               ; preds = %71
  %77 = load i32, ptr %5, align 4, !dbg !5581
  br label %78, !dbg !5579

78:                                               ; preds = %76, %74
  %79 = phi i32 [ %75, %74 ], [ %77, %76 ], !dbg !5579
  store i32 %79, ptr %3, align 4, !dbg !5582
  br label %80, !dbg !5582

80:                                               ; preds = %78, %11
  %81 = load i32, ptr %3, align 4, !dbg !5583
  ret i32 %81, !dbg !5583
}

; Function Attrs: nounwind
declare i32 @__isoc99_sscanf(ptr noundef, ptr noundef, ...) #3

; Function Attrs: nounwind willreturn memory(read)
declare ptr @rawmemchr(ptr noundef, i32 noundef) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @parse_bool(ptr noundef %0, i1 noundef zeroext %1) #0 !dbg !5584 {
  %3 = alloca i1, align 1
  %4 = alloca ptr, align 8
  %5 = alloca i8, align 1
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !5587, metadata !DIExpression()), !dbg !5588
  %6 = zext i1 %1 to i8
  store i8 %6, ptr %5, align 1
  call void @llvm.dbg.declare(metadata ptr %5, metadata !5589, metadata !DIExpression()), !dbg !5590
  %7 = load ptr, ptr %4, align 8, !dbg !5591
  %8 = icmp ne ptr %7, null, !dbg !5591
  br i1 %8, label %12, label %9, !dbg !5593

9:                                                ; preds = %2
  %10 = load i8, ptr %5, align 1, !dbg !5594
  %11 = trunc i8 %10 to i1, !dbg !5594
  store i1 %11, ptr %3, align 1, !dbg !5595
  br label %49, !dbg !5595

12:                                               ; preds = %2
  %13 = load ptr, ptr %4, align 8, !dbg !5596
  %14 = call i32 @strcmp(ptr noundef %13, ptr noundef @.str.3.15) #22, !dbg !5598
  %15 = icmp ne i32 %14, 0, !dbg !5598
  br i1 %15, label %16, label %28, !dbg !5599

16:                                               ; preds = %12
  %17 = load ptr, ptr %4, align 8, !dbg !5600
  %18 = call i32 @strcmp(ptr noundef %17, ptr noundef @.str.4.16) #22, !dbg !5601
  %19 = icmp ne i32 %18, 0, !dbg !5601
  br i1 %19, label %20, label %28, !dbg !5602

20:                                               ; preds = %16
  %21 = load ptr, ptr %4, align 8, !dbg !5603
  %22 = call i32 @strcmp(ptr noundef %21, ptr noundef @.str.5.17) #22, !dbg !5604
  %23 = icmp ne i32 %22, 0, !dbg !5604
  br i1 %23, label %24, label %28, !dbg !5605

24:                                               ; preds = %20
  %25 = load ptr, ptr %4, align 8, !dbg !5606
  %26 = call i32 @strcmp(ptr noundef %25, ptr noundef @.str.6.18) #22, !dbg !5607
  %27 = icmp ne i32 %26, 0, !dbg !5607
  br i1 %27, label %29, label %28, !dbg !5608

28:                                               ; preds = %24, %20, %16, %12
  store i1 true, ptr %3, align 1, !dbg !5609
  br label %49, !dbg !5609

29:                                               ; preds = %24
  %30 = load ptr, ptr %4, align 8, !dbg !5610
  %31 = call i32 @strcmp(ptr noundef %30, ptr noundef @.str.7.19) #22, !dbg !5612
  %32 = icmp ne i32 %31, 0, !dbg !5612
  br i1 %32, label %33, label %45, !dbg !5613

33:                                               ; preds = %29
  %34 = load ptr, ptr %4, align 8, !dbg !5614
  %35 = call i32 @strcmp(ptr noundef %34, ptr noundef @.str.8.20) #22, !dbg !5615
  %36 = icmp ne i32 %35, 0, !dbg !5615
  br i1 %36, label %37, label %45, !dbg !5616

37:                                               ; preds = %33
  %38 = load ptr, ptr %4, align 8, !dbg !5617
  %39 = call i32 @strcmp(ptr noundef %38, ptr noundef @.str.9.21) #22, !dbg !5618
  %40 = icmp ne i32 %39, 0, !dbg !5618
  br i1 %40, label %41, label %45, !dbg !5619

41:                                               ; preds = %37
  %42 = load ptr, ptr %4, align 8, !dbg !5620
  %43 = call i32 @strcmp(ptr noundef %42, ptr noundef @.str.10.22) #22, !dbg !5621
  %44 = icmp ne i32 %43, 0, !dbg !5621
  br i1 %44, label %46, label %45, !dbg !5622

45:                                               ; preds = %41, %37, %33, %29
  store i1 false, ptr %3, align 1, !dbg !5623
  br label %49, !dbg !5623

46:                                               ; preds = %41
  %47 = load i8, ptr %5, align 1, !dbg !5624
  %48 = trunc i8 %47 to i1, !dbg !5624
  store i1 %48, ptr %3, align 1, !dbg !5625
  br label %49, !dbg !5625

49:                                               ; preds = %46, %45, %28, %9
  %50 = load i1, ptr %3, align 1, !dbg !5626
  ret i1 %50, !dbg !5626
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @parse_long(ptr noundef %0, i64 noundef %1) #0 !dbg !5627 {
  %3 = alloca i64, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i64, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !5630, metadata !DIExpression()), !dbg !5631
  store i64 %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !5632, metadata !DIExpression()), !dbg !5633
  call void @llvm.dbg.declare(metadata ptr %6, metadata !5634, metadata !DIExpression()), !dbg !5635
  call void @llvm.dbg.declare(metadata ptr %7, metadata !5636, metadata !DIExpression()), !dbg !5637
  %8 = call ptr @__errno_location() #20, !dbg !5638
  store i32 0, ptr %8, align 4, !dbg !5639
  %9 = load ptr, ptr %4, align 8, !dbg !5640
  %10 = call i64 @strtol(ptr noundef %9, ptr noundef %6, i32 noundef 0) #18, !dbg !5641
  store i64 %10, ptr %7, align 8, !dbg !5642
  %11 = call ptr @__errno_location() #20, !dbg !5643
  %12 = load i32, ptr %11, align 4, !dbg !5643
  %13 = icmp ne i32 %12, 0, !dbg !5645
  br i1 %13, label %14, label %16, !dbg !5646

14:                                               ; preds = %2
  %15 = load i64, ptr %5, align 8, !dbg !5647
  store i64 %15, ptr %3, align 8, !dbg !5648
  br label %29, !dbg !5648

16:                                               ; preds = %2
  %17 = load ptr, ptr %6, align 8, !dbg !5649
  %18 = load i8, ptr %17, align 1, !dbg !5651
  %19 = sext i8 %18 to i32, !dbg !5651
  %20 = icmp ne i32 %19, 0, !dbg !5652
  br i1 %20, label %25, label %21, !dbg !5653

21:                                               ; preds = %16
  %22 = load ptr, ptr %4, align 8, !dbg !5654
  %23 = load ptr, ptr %6, align 8, !dbg !5655
  %24 = icmp eq ptr %22, %23, !dbg !5656
  br i1 %24, label %25, label %27, !dbg !5657

25:                                               ; preds = %21, %16
  %26 = load i64, ptr %5, align 8, !dbg !5658
  store i64 %26, ptr %3, align 8, !dbg !5659
  br label %29, !dbg !5659

27:                                               ; preds = %21
  %28 = load i64, ptr %7, align 8, !dbg !5660
  store i64 %28, ptr %3, align 8, !dbg !5661
  br label %29, !dbg !5661

29:                                               ; preds = %27, %25, %14
  %30 = load i64, ptr %3, align 8, !dbg !5662
  ret i64 %30, !dbg !5662
}

; Function Attrs: nounwind
declare i64 @strtol(ptr noundef, ptr noundef, i32 noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @config_error(ptr noundef %0, ptr noundef %1, ...) #0 !dbg !5663 {
  %3 = alloca i1, align 1
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !5718, metadata !DIExpression()), !dbg !5719
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !5720, metadata !DIExpression()), !dbg !5721
  call void @llvm.dbg.declare(metadata ptr %6, metadata !5722, metadata !DIExpression()), !dbg !5735
  call void @llvm.dbg.declare(metadata ptr %7, metadata !5736, metadata !DIExpression()), !dbg !5737
  call void @llvm.dbg.declare(metadata ptr %8, metadata !5738, metadata !DIExpression()), !dbg !5739
  %9 = load ptr, ptr %4, align 8, !dbg !5740
  %10 = getelementptr inbounds %struct.config_t_, ptr %9, i32 0, i32 2, !dbg !5742
  %11 = load ptr, ptr %10, align 8, !dbg !5742
  %12 = icmp ne ptr %11, null, !dbg !5740
  br i1 %12, label %13, label %14, !dbg !5743

13:                                               ; preds = %2
  store i1 false, ptr %3, align 1, !dbg !5744
  br label %29, !dbg !5744

14:                                               ; preds = %2
  %15 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %6, i64 0, i64 0, !dbg !5745
  call void @llvm.va_start(ptr %15), !dbg !5745
  %16 = load ptr, ptr %5, align 8, !dbg !5746
  %17 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %6, i64 0, i64 0, !dbg !5747
  %18 = call i32 @vasprintf(ptr noundef %8, ptr noundef %16, ptr noundef %17) #18, !dbg !5748
  store i32 %18, ptr %7, align 4, !dbg !5749
  %19 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %6, i64 0, i64 0, !dbg !5750
  call void @llvm.va_end(ptr %19), !dbg !5750
  %20 = load i32, ptr %7, align 4, !dbg !5751
  %21 = icmp sge i32 %20, 0, !dbg !5753
  br i1 %21, label %22, label %26, !dbg !5754

22:                                               ; preds = %14
  %23 = load ptr, ptr %8, align 8, !dbg !5755
  %24 = load ptr, ptr %4, align 8, !dbg !5757
  %25 = getelementptr inbounds %struct.config_t_, ptr %24, i32 0, i32 2, !dbg !5758
  store ptr %23, ptr %25, align 8, !dbg !5759
  store i1 true, ptr %3, align 1, !dbg !5760
  br label %29, !dbg !5760

26:                                               ; preds = %14
  %27 = load ptr, ptr %4, align 8, !dbg !5761
  %28 = getelementptr inbounds %struct.config_t_, ptr %27, i32 0, i32 2, !dbg !5762
  store ptr null, ptr %28, align 8, !dbg !5763
  store i1 false, ptr %3, align 1, !dbg !5764
  br label %29, !dbg !5764

29:                                               ; preds = %26, %22, %13
  %30 = load i1, ptr %3, align 1, !dbg !5765
  ret i1 %30, !dbg !5765
}

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_start(ptr) #12

; Function Attrs: nounwind
declare i32 @vasprintf(ptr noundef, ptr noundef, ptr noundef) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_end(ptr) #12

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @config_read_line(ptr noundef %0, ptr noundef %1) #0 !dbg !5766 {
  %3 = alloca i1, align 1
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !5792, metadata !DIExpression()), !dbg !5793
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !5794, metadata !DIExpression()), !dbg !5795
  call void @llvm.dbg.declare(metadata ptr %6, metadata !5796, metadata !DIExpression()), !dbg !5797
  call void @llvm.dbg.declare(metadata ptr %7, metadata !5798, metadata !DIExpression()), !dbg !5799
  %9 = load ptr, ptr %4, align 8, !dbg !5800
  %10 = getelementptr inbounds %struct.config_t_, ptr %9, i32 0, i32 2, !dbg !5802
  %11 = load ptr, ptr %10, align 8, !dbg !5802
  %12 = icmp ne ptr %11, null, !dbg !5800
  br i1 %12, label %13, label %14, !dbg !5803

13:                                               ; preds = %2
  store i1 false, ptr %3, align 1, !dbg !5804
  br label %91, !dbg !5804

14:                                               ; preds = %2
  br label %15, !dbg !5802

15:                                               ; preds = %57, %14
  call void @llvm.dbg.label(metadata !5805), !dbg !5806
  %16 = load ptr, ptr %5, align 8, !dbg !5807
  %17 = getelementptr inbounds %struct.config_line_t_, ptr %16, i32 0, i32 2, !dbg !5809
  %18 = getelementptr inbounds [1024 x i8], ptr %17, i64 0, i64 0, !dbg !5807
  %19 = load ptr, ptr %4, align 8, !dbg !5810
  %20 = getelementptr inbounds %struct.config_t_, ptr %19, i32 0, i32 0, !dbg !5811
  %21 = load ptr, ptr %20, align 8, !dbg !5811
  %22 = call ptr @fgets(ptr noundef %18, i32 noundef 1024, ptr noundef %21), !dbg !5812
  %23 = icmp ne ptr %22, null, !dbg !5812
  br i1 %23, label %25, label %24, !dbg !5813

24:                                               ; preds = %15
  store i1 false, ptr %3, align 1, !dbg !5814
  br label %91, !dbg !5814

25:                                               ; preds = %15
  %26 = load ptr, ptr %4, align 8, !dbg !5815
  %27 = getelementptr inbounds %struct.config_t_, ptr %26, i32 0, i32 1, !dbg !5816
  %28 = load i32, ptr %27, align 8, !dbg !5817
  %29 = add nsw i32 %28, 1, !dbg !5817
  store i32 %29, ptr %27, align 8, !dbg !5817
  %30 = load ptr, ptr %5, align 8, !dbg !5818
  %31 = getelementptr inbounds %struct.config_line_t_, ptr %30, i32 0, i32 2, !dbg !5819
  %32 = getelementptr inbounds [1024 x i8], ptr %31, i64 0, i64 0, !dbg !5818
  %33 = call ptr @remove_comments(ptr noundef %32), !dbg !5820
  store ptr %33, ptr %6, align 8, !dbg !5821
  %34 = load ptr, ptr %6, align 8, !dbg !5822
  %35 = call ptr @remove_leading_spaces(ptr noundef %34), !dbg !5823
  store ptr %35, ptr %6, align 8, !dbg !5824
  %36 = load ptr, ptr %6, align 8, !dbg !5825
  %37 = call ptr @remove_trailing_spaces(ptr noundef %36), !dbg !5826
  store ptr %37, ptr %6, align 8, !dbg !5827
  %38 = load ptr, ptr %6, align 8, !dbg !5828
  %39 = call ptr @find_line_end(ptr noundef %38), !dbg !5829
  store ptr %39, ptr %7, align 8, !dbg !5830
  %40 = load ptr, ptr %7, align 8, !dbg !5831
  %41 = load i8, ptr %40, align 1, !dbg !5833
  %42 = sext i8 %41 to i32, !dbg !5833
  %43 = icmp eq i32 %42, 123, !dbg !5834
  br i1 %43, label %44, label %52, !dbg !5835

44:                                               ; preds = %25
  %45 = load ptr, ptr %6, align 8, !dbg !5836
  %46 = load ptr, ptr %5, align 8, !dbg !5839
  %47 = call zeroext i1 @parse_section(ptr noundef %45, ptr noundef %46), !dbg !5840
  br i1 %47, label %51, label %48, !dbg !5841

48:                                               ; preds = %44
  %49 = load ptr, ptr %4, align 8, !dbg !5842
  %50 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %49, ptr noundef @.str.11.23), !dbg !5844
  store i1 false, ptr %3, align 1, !dbg !5845
  br label %91, !dbg !5845

51:                                               ; preds = %44
  br label %90, !dbg !5846

52:                                               ; preds = %25
  %53 = load ptr, ptr %6, align 8, !dbg !5847
  %54 = load i8, ptr %53, align 1, !dbg !5849
  %55 = sext i8 %54 to i32, !dbg !5849
  %56 = icmp eq i32 %55, 0, !dbg !5850
  br i1 %56, label %57, label %58, !dbg !5851

57:                                               ; preds = %52
  br label %15, !dbg !5852

58:                                               ; preds = %52
  %59 = load ptr, ptr %6, align 8, !dbg !5854
  %60 = load i8, ptr %59, align 1, !dbg !5856
  %61 = sext i8 %60 to i32, !dbg !5856
  %62 = icmp eq i32 %61, 125, !dbg !5857
  br i1 %62, label %63, label %70, !dbg !5858

63:                                               ; preds = %58
  %64 = load ptr, ptr %6, align 8, !dbg !5859
  %65 = load ptr, ptr %7, align 8, !dbg !5860
  %66 = icmp eq ptr %64, %65, !dbg !5861
  br i1 %66, label %67, label %70, !dbg !5862

67:                                               ; preds = %63
  %68 = load ptr, ptr %5, align 8, !dbg !5863
  %69 = getelementptr inbounds %struct.config_line_t_, ptr %68, i32 0, i32 1, !dbg !5865
  store i32 2, ptr %69, align 8, !dbg !5866
  br label %88, !dbg !5867

70:                                               ; preds = %63, %58
  call void @llvm.dbg.declare(metadata ptr %8, metadata !5868, metadata !DIExpression()), !dbg !5870
  %71 = load ptr, ptr %6, align 8, !dbg !5871
  %72 = call ptr @strchr(ptr noundef %71, i32 noundef 61) #22, !dbg !5872
  store ptr %72, ptr %8, align 8, !dbg !5870
  %73 = load ptr, ptr %8, align 8, !dbg !5873
  %74 = icmp ne ptr %73, null, !dbg !5873
  br i1 %74, label %75, label %84, !dbg !5875

75:                                               ; preds = %70
  %76 = load ptr, ptr %6, align 8, !dbg !5876
  %77 = load ptr, ptr %5, align 8, !dbg !5879
  %78 = load ptr, ptr %8, align 8, !dbg !5880
  %79 = call zeroext i1 @parse_line(ptr noundef %76, ptr noundef %77, ptr noundef %78), !dbg !5881
  br i1 %79, label %83, label %80, !dbg !5882

80:                                               ; preds = %75
  %81 = load ptr, ptr %4, align 8, !dbg !5883
  %82 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %81, ptr noundef @.str.12.24), !dbg !5885
  store i1 false, ptr %3, align 1, !dbg !5886
  br label %91, !dbg !5886

83:                                               ; preds = %75
  br label %87, !dbg !5887

84:                                               ; preds = %70
  %85 = load ptr, ptr %4, align 8, !dbg !5888
  %86 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %85, ptr noundef @.str.13), !dbg !5890
  store i1 false, ptr %3, align 1, !dbg !5891
  br label %91, !dbg !5891

87:                                               ; preds = %83
  br label %88

88:                                               ; preds = %87, %67
  br label %89

89:                                               ; preds = %88
  br label %90

90:                                               ; preds = %89, %51
  store i1 true, ptr %3, align 1, !dbg !5892
  br label %91, !dbg !5892

91:                                               ; preds = %90, %84, %80, %48, %24, %13
  %92 = load i1, ptr %3, align 1, !dbg !5893
  ret i1 %92, !dbg !5893
}

declare ptr @fgets(ptr noundef, i32 noundef, ptr noundef) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @remove_comments(ptr noundef %0) #0 !dbg !5894 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !5897, metadata !DIExpression()), !dbg !5898
  call void @llvm.dbg.declare(metadata ptr %3, metadata !5899, metadata !DIExpression()), !dbg !5900
  %4 = load ptr, ptr %2, align 8, !dbg !5901
  %5 = call ptr @strrchr(ptr noundef %4, i32 noundef 35) #22, !dbg !5902
  store ptr %5, ptr %3, align 8, !dbg !5900
  %6 = load ptr, ptr %3, align 8, !dbg !5903
  %7 = icmp ne ptr %6, null, !dbg !5903
  br i1 %7, label %8, label %10, !dbg !5905

8:                                                ; preds = %1
  %9 = load ptr, ptr %3, align 8, !dbg !5906
  store i8 0, ptr %9, align 1, !dbg !5907
  br label %10, !dbg !5908

10:                                               ; preds = %8, %1
  %11 = load ptr, ptr %2, align 8, !dbg !5909
  ret ptr %11, !dbg !5910
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @remove_leading_spaces(ptr noundef %0) #0 !dbg !5911 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !5912, metadata !DIExpression()), !dbg !5913
  br label %3, !dbg !5914

3:                                                ; preds = %15, %1
  %4 = call ptr @__ctype_b_loc() #20, !dbg !5915
  %5 = load ptr, ptr %4, align 8, !dbg !5915
  %6 = load ptr, ptr %2, align 8, !dbg !5915
  %7 = load i8, ptr %6, align 1, !dbg !5915
  %8 = sext i8 %7 to i32, !dbg !5915
  %9 = sext i32 %8 to i64, !dbg !5915
  %10 = getelementptr inbounds i16, ptr %5, i64 %9, !dbg !5915
  %11 = load i16, ptr %10, align 2, !dbg !5915
  %12 = zext i16 %11 to i32, !dbg !5915
  %13 = and i32 %12, 8192, !dbg !5915
  %14 = icmp ne i32 %13, 0, !dbg !5914
  br i1 %14, label %15, label %18, !dbg !5914

15:                                               ; preds = %3
  %16 = load ptr, ptr %2, align 8, !dbg !5916
  %17 = getelementptr inbounds i8, ptr %16, i32 1, !dbg !5916
  store ptr %17, ptr %2, align 8, !dbg !5916
  br label %3, !dbg !5914, !llvm.loop !5917

18:                                               ; preds = %3
  %19 = load ptr, ptr %2, align 8, !dbg !5918
  ret ptr %19, !dbg !5919
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @remove_trailing_spaces(ptr noundef %0) #0 !dbg !5920 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !5921, metadata !DIExpression()), !dbg !5922
  call void @llvm.dbg.declare(metadata ptr %3, metadata !5923, metadata !DIExpression()), !dbg !5924
  %4 = load ptr, ptr %2, align 8, !dbg !5925
  %5 = call ptr @rawmemchr(ptr noundef %4, i32 noundef 0) #22, !dbg !5926
  store ptr %5, ptr %3, align 8, !dbg !5924
  %6 = load ptr, ptr %3, align 8, !dbg !5927
  %7 = getelementptr inbounds i8, ptr %6, i32 -1, !dbg !5927
  store ptr %7, ptr %3, align 8, !dbg !5927
  br label %8, !dbg !5929

8:                                                ; preds = %21, %1
  %9 = call ptr @__ctype_b_loc() #20, !dbg !5930
  %10 = load ptr, ptr %9, align 8, !dbg !5930
  %11 = load ptr, ptr %3, align 8, !dbg !5930
  %12 = load i8, ptr %11, align 1, !dbg !5930
  %13 = sext i8 %12 to i32, !dbg !5930
  %14 = sext i32 %13 to i64, !dbg !5930
  %15 = getelementptr inbounds i16, ptr %10, i64 %14, !dbg !5930
  %16 = load i16, ptr %15, align 2, !dbg !5930
  %17 = zext i16 %16 to i32, !dbg !5930
  %18 = and i32 %17, 8192, !dbg !5930
  %19 = icmp ne i32 %18, 0, !dbg !5932
  br i1 %19, label %20, label %24, !dbg !5932

20:                                               ; preds = %8
  br label %21, !dbg !5932

21:                                               ; preds = %20
  %22 = load ptr, ptr %3, align 8, !dbg !5933
  %23 = getelementptr inbounds i8, ptr %22, i32 -1, !dbg !5933
  store ptr %23, ptr %3, align 8, !dbg !5933
  br label %8, !dbg !5934, !llvm.loop !5935

24:                                               ; preds = %8
  %25 = load ptr, ptr %3, align 8, !dbg !5937
  %26 = getelementptr inbounds i8, ptr %25, i64 1, !dbg !5938
  store i8 0, ptr %26, align 1, !dbg !5939
  %27 = load ptr, ptr %2, align 8, !dbg !5940
  ret ptr %27, !dbg !5941
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @find_line_end(ptr noundef %0) #0 !dbg !5942 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !5943, metadata !DIExpression()), !dbg !5944
  %4 = load ptr, ptr %3, align 8, !dbg !5945
  %5 = load i8, ptr %4, align 1, !dbg !5947
  %6 = sext i8 %5 to i32, !dbg !5947
  %7 = icmp eq i32 %6, 0, !dbg !5948
  br i1 %7, label %8, label %10, !dbg !5949

8:                                                ; preds = %1
  %9 = load ptr, ptr %3, align 8, !dbg !5950
  store ptr %9, ptr %2, align 8, !dbg !5951
  br label %14, !dbg !5951

10:                                               ; preds = %1
  %11 = load ptr, ptr %3, align 8, !dbg !5952
  %12 = call ptr @rawmemchr(ptr noundef %11, i32 noundef 0) #22, !dbg !5953
  %13 = getelementptr inbounds i8, ptr %12, i64 -1, !dbg !5954
  store ptr %13, ptr %2, align 8, !dbg !5955
  br label %14, !dbg !5955

14:                                               ; preds = %10, %8
  %15 = load ptr, ptr %2, align 8, !dbg !5956
  ret ptr %15, !dbg !5956
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @parse_section(ptr noundef %0, ptr noundef %1) #0 !dbg !5957 {
  %3 = alloca i1, align 1
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !5960, metadata !DIExpression()), !dbg !5961
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !5962, metadata !DIExpression()), !dbg !5963
  call void @llvm.dbg.declare(metadata ptr %6, metadata !5964, metadata !DIExpression()), !dbg !5965
  call void @llvm.dbg.declare(metadata ptr %7, metadata !5966, metadata !DIExpression()), !dbg !5967
  call void @llvm.dbg.declare(metadata ptr %8, metadata !5968, metadata !DIExpression()), !dbg !5969
  %10 = load ptr, ptr %4, align 8, !dbg !5970
  %11 = call ptr @strrchr(ptr noundef %10, i32 noundef 123) #22, !dbg !5971
  store ptr %11, ptr %8, align 8, !dbg !5969
  %12 = load ptr, ptr %8, align 8, !dbg !5972
  %13 = icmp ne ptr %12, null, !dbg !5972
  br i1 %13, label %15, label %14, !dbg !5974

14:                                               ; preds = %2
  store i1 false, ptr %3, align 1, !dbg !5975
  br label %41, !dbg !5975

15:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata ptr %9, metadata !5976, metadata !DIExpression()), !dbg !5977
  %16 = load ptr, ptr %4, align 8, !dbg !5978
  %17 = call ptr @strchr(ptr noundef %16, i32 noundef 32) #22, !dbg !5979
  store ptr %17, ptr %9, align 8, !dbg !5977
  %18 = load ptr, ptr %9, align 8, !dbg !5980
  %19 = icmp ne ptr %18, null, !dbg !5980
  br i1 %19, label %21, label %20, !dbg !5982

20:                                               ; preds = %15
  store i1 false, ptr %3, align 1, !dbg !5983
  br label %41, !dbg !5983

21:                                               ; preds = %15
  %22 = load ptr, ptr %8, align 8, !dbg !5984
  store i8 0, ptr %22, align 1, !dbg !5985
  %23 = load ptr, ptr %9, align 8, !dbg !5986
  store i8 0, ptr %23, align 1, !dbg !5987
  %24 = load ptr, ptr %4, align 8, !dbg !5988
  %25 = call ptr @remove_leading_spaces(ptr noundef %24), !dbg !5989
  %26 = call ptr @remove_trailing_spaces(ptr noundef %25), !dbg !5990
  store ptr %26, ptr %6, align 8, !dbg !5991
  %27 = load ptr, ptr %9, align 8, !dbg !5992
  %28 = getelementptr inbounds i8, ptr %27, i64 1, !dbg !5993
  %29 = call ptr @remove_leading_spaces(ptr noundef %28), !dbg !5994
  %30 = call ptr @remove_trailing_spaces(ptr noundef %29), !dbg !5995
  store ptr %30, ptr %7, align 8, !dbg !5996
  %31 = load ptr, ptr %6, align 8, !dbg !5997
  %32 = load ptr, ptr %5, align 8, !dbg !5998
  %33 = getelementptr inbounds %struct.config_line_t_, ptr %32, i32 0, i32 0, !dbg !5999
  %34 = getelementptr inbounds %struct.list_node, ptr %33, i32 0, i32 0, !dbg !6000
  store ptr %31, ptr %34, align 8, !dbg !6001
  %35 = load ptr, ptr %7, align 8, !dbg !6002
  %36 = load ptr, ptr %5, align 8, !dbg !6003
  %37 = getelementptr inbounds %struct.config_line_t_, ptr %36, i32 0, i32 0, !dbg !6004
  %38 = getelementptr inbounds %struct.list_node, ptr %37, i32 0, i32 1, !dbg !6005
  store ptr %35, ptr %38, align 8, !dbg !6006
  %39 = load ptr, ptr %5, align 8, !dbg !6007
  %40 = getelementptr inbounds %struct.config_line_t_, ptr %39, i32 0, i32 1, !dbg !6008
  store i32 1, ptr %40, align 8, !dbg !6009
  store i1 true, ptr %3, align 1, !dbg !6010
  br label %41, !dbg !6010

41:                                               ; preds = %21, %20, %14
  %42 = load i1, ptr %3, align 1, !dbg !6011
  ret i1 %42, !dbg !6011
}

; Function Attrs: nounwind willreturn memory(read)
declare ptr @strchr(ptr noundef, i32 noundef) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @parse_line(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !6012 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !6015, metadata !DIExpression()), !dbg !6016
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !6017, metadata !DIExpression()), !dbg !6018
  store ptr %2, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !6019, metadata !DIExpression()), !dbg !6020
  %7 = load ptr, ptr %6, align 8, !dbg !6021
  store i8 0, ptr %7, align 1, !dbg !6022
  %8 = load ptr, ptr %4, align 8, !dbg !6023
  %9 = call ptr @remove_leading_spaces(ptr noundef %8), !dbg !6024
  %10 = call ptr @remove_trailing_spaces(ptr noundef %9), !dbg !6025
  %11 = load ptr, ptr %5, align 8, !dbg !6026
  %12 = getelementptr inbounds %struct.config_line_t_, ptr %11, i32 0, i32 0, !dbg !6027
  %13 = getelementptr inbounds %struct.list_node, ptr %12, i32 0, i32 0, !dbg !6028
  store ptr %10, ptr %13, align 8, !dbg !6029
  %14 = load ptr, ptr %6, align 8, !dbg !6030
  %15 = getelementptr inbounds i8, ptr %14, i64 1, !dbg !6031
  %16 = call ptr @remove_leading_spaces(ptr noundef %15), !dbg !6032
  %17 = load ptr, ptr %5, align 8, !dbg !6033
  %18 = getelementptr inbounds %struct.config_line_t_, ptr %17, i32 0, i32 0, !dbg !6034
  %19 = getelementptr inbounds %struct.list_node, ptr %18, i32 0, i32 1, !dbg !6035
  store ptr %16, ptr %19, align 8, !dbg !6036
  %20 = load ptr, ptr %5, align 8, !dbg !6037
  %21 = getelementptr inbounds %struct.config_line_t_, ptr %20, i32 0, i32 1, !dbg !6038
  store i32 0, ptr %21, align 8, !dbg !6039
  ret i1 true, !dbg !6040
}

; Function Attrs: nounwind willreturn memory(read)
declare ptr @strrchr(ptr noundef, i32 noundef) #6

; Function Attrs: nounwind willreturn memory(none)
declare ptr @__ctype_b_loc() #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @config_open(ptr noundef %0, ptr noundef %1) #0 !dbg !6041 {
  %3 = alloca i1, align 1
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !6044, metadata !DIExpression()), !dbg !6045
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !6046, metadata !DIExpression()), !dbg !6047
  %6 = load ptr, ptr %4, align 8, !dbg !6048
  %7 = icmp ne ptr %6, null, !dbg !6048
  br i1 %7, label %9, label %8, !dbg !6050

8:                                                ; preds = %2
  store i1 false, ptr %3, align 1, !dbg !6051
  br label %28, !dbg !6051

9:                                                ; preds = %2
  %10 = load ptr, ptr %5, align 8, !dbg !6052
  %11 = icmp ne ptr %10, null, !dbg !6052
  br i1 %11, label %13, label %12, !dbg !6054

12:                                               ; preds = %9
  store i1 false, ptr %3, align 1, !dbg !6055
  br label %28, !dbg !6055

13:                                               ; preds = %9
  %14 = load ptr, ptr %5, align 8, !dbg !6056
  %15 = call noalias ptr @fopen(ptr noundef %14, ptr noundef @.str.14), !dbg !6057
  %16 = load ptr, ptr %4, align 8, !dbg !6058
  %17 = getelementptr inbounds %struct.config_t_, ptr %16, i32 0, i32 0, !dbg !6059
  store ptr %15, ptr %17, align 8, !dbg !6060
  %18 = load ptr, ptr %4, align 8, !dbg !6061
  %19 = getelementptr inbounds %struct.config_t_, ptr %18, i32 0, i32 0, !dbg !6063
  %20 = load ptr, ptr %19, align 8, !dbg !6063
  %21 = icmp ne ptr %20, null, !dbg !6061
  br i1 %21, label %23, label %22, !dbg !6064

22:                                               ; preds = %13
  store i1 false, ptr %3, align 1, !dbg !6065
  br label %28, !dbg !6065

23:                                               ; preds = %13
  %24 = load ptr, ptr %4, align 8, !dbg !6066
  %25 = getelementptr inbounds %struct.config_t_, ptr %24, i32 0, i32 1, !dbg !6067
  store i32 0, ptr %25, align 8, !dbg !6068
  %26 = load ptr, ptr %4, align 8, !dbg !6069
  %27 = getelementptr inbounds %struct.config_t_, ptr %26, i32 0, i32 2, !dbg !6070
  store ptr null, ptr %27, align 8, !dbg !6071
  store i1 true, ptr %3, align 1, !dbg !6072
  br label %28, !dbg !6072

28:                                               ; preds = %23, %22, %12, %8
  %29 = load i1, ptr %3, align 1, !dbg !6073
  ret i1 %29, !dbg !6073
}

declare noalias ptr @fopen(ptr noundef, ptr noundef) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @config_close(ptr noundef %0) #0 !dbg !6074 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !6077, metadata !DIExpression()), !dbg !6078
  %3 = load ptr, ptr %2, align 8, !dbg !6079
  %4 = icmp ne ptr %3, null, !dbg !6079
  br i1 %4, label %6, label %5, !dbg !6081

5:                                                ; preds = %1
  br label %20, !dbg !6082

6:                                                ; preds = %1
  %7 = load ptr, ptr %2, align 8, !dbg !6083
  %8 = getelementptr inbounds %struct.config_t_, ptr %7, i32 0, i32 0, !dbg !6085
  %9 = load ptr, ptr %8, align 8, !dbg !6085
  %10 = icmp ne ptr %9, null, !dbg !6083
  br i1 %10, label %12, label %11, !dbg !6086

11:                                               ; preds = %6
  br label %20, !dbg !6087

12:                                               ; preds = %6
  %13 = load ptr, ptr %2, align 8, !dbg !6088
  %14 = getelementptr inbounds %struct.config_t_, ptr %13, i32 0, i32 0, !dbg !6089
  %15 = load ptr, ptr %14, align 8, !dbg !6089
  %16 = call i32 @fclose(ptr noundef %15), !dbg !6090
  %17 = load ptr, ptr %2, align 8, !dbg !6091
  %18 = getelementptr inbounds %struct.config_t_, ptr %17, i32 0, i32 2, !dbg !6092
  %19 = load ptr, ptr %18, align 8, !dbg !6092
  call void @free(ptr noundef %19) #18, !dbg !6093
  br label %20, !dbg !6094

20:                                               ; preds = %12, %11, %5
  ret void, !dbg !6094
}

declare i32 @fclose(ptr noundef) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @coro_reset(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !6095 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !6131, metadata !DIExpression()), !dbg !6132
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !6133, metadata !DIExpression()), !dbg !6134
  store ptr %2, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !6135, metadata !DIExpression()), !dbg !6136
  call void @llvm.dbg.declare(metadata ptr %7, metadata !6137, metadata !DIExpression()), !dbg !6138
  %8 = load ptr, ptr %4, align 8, !dbg !6139
  %9 = getelementptr inbounds %struct.coro_t_, ptr %8, i64 1, !dbg !6140
  store ptr %9, ptr %7, align 8, !dbg !6138
  %10 = load ptr, ptr %4, align 8, !dbg !6141
  %11 = getelementptr inbounds %struct.coro_t_, ptr %10, i32 0, i32 5, !dbg !6142
  store i8 0, ptr %11, align 8, !dbg !6143
  %12 = load ptr, ptr %6, align 8, !dbg !6144
  %13 = load ptr, ptr %4, align 8, !dbg !6145
  %14 = getelementptr inbounds %struct.coro_t_, ptr %13, i32 0, i32 4, !dbg !6146
  store ptr %12, ptr %14, align 8, !dbg !6147
  %15 = load ptr, ptr %4, align 8, !dbg !6148
  call void @coro_run_deferred(ptr noundef %15), !dbg !6149
  %16 = load ptr, ptr %4, align 8, !dbg !6150
  %17 = ptrtoint ptr %16 to i64, !dbg !6151
  %18 = load ptr, ptr %4, align 8, !dbg !6152
  %19 = getelementptr inbounds %struct.coro_t_, ptr %18, i32 0, i32 1, !dbg !6153
  %20 = getelementptr inbounds [10 x i64], ptr %19, i64 0, i64 6, !dbg !6152
  store i64 %17, ptr %20, align 8, !dbg !6154
  %21 = load ptr, ptr %5, align 8, !dbg !6155
  %22 = ptrtoint ptr %21 to i64, !dbg !6156
  %23 = load ptr, ptr %4, align 8, !dbg !6157
  %24 = getelementptr inbounds %struct.coro_t_, ptr %23, i32 0, i32 1, !dbg !6158
  %25 = getelementptr inbounds [10 x i64], ptr %24, i64 0, i64 7, !dbg !6157
  store i64 %22, ptr %25, align 8, !dbg !6159
  %26 = load ptr, ptr %4, align 8, !dbg !6160
  %27 = getelementptr inbounds %struct.coro_t_, ptr %26, i32 0, i32 1, !dbg !6161
  %28 = getelementptr inbounds [10 x i64], ptr %27, i64 0, i64 8, !dbg !6160
  store i64 ptrtoint (ptr @coro_entry_point to i64), ptr %28, align 8, !dbg !6162
  %29 = load ptr, ptr %7, align 8, !dbg !6163
  %30 = ptrtoint ptr %29 to i64, !dbg !6164
  %31 = call i64 @__sysconf(i32 noundef 75) #18, !dbg !6165
  %32 = mul nsw i64 3, %31, !dbg !6165
  %33 = sdiv i64 %32, 2, !dbg !6165
  %34 = add i64 %30, %33, !dbg !6166
  %35 = load ptr, ptr %4, align 8, !dbg !6167
  %36 = getelementptr inbounds %struct.coro_t_, ptr %35, i32 0, i32 1, !dbg !6168
  %37 = getelementptr inbounds [10 x i64], ptr %36, i64 0, i64 9, !dbg !6167
  store i64 %34, ptr %37, align 8, !dbg !6169
  ret void, !dbg !6170
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @coro_run_deferred(ptr noundef %0) #0 !dbg !6171 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !6174, metadata !DIExpression()), !dbg !6175
  call void @llvm.dbg.declare(metadata ptr %3, metadata !6176, metadata !DIExpression()), !dbg !6178
  %5 = load ptr, ptr %2, align 8, !dbg !6179
  %6 = getelementptr inbounds %struct.coro_t_, ptr %5, i32 0, i32 3, !dbg !6180
  %7 = load ptr, ptr %6, align 8, !dbg !6180
  store ptr %7, ptr %3, align 8, !dbg !6178
  br label %8, !dbg !6181

8:                                                ; preds = %11, %1
  %9 = load ptr, ptr %3, align 8, !dbg !6182
  %10 = icmp ne ptr %9, null, !dbg !6184
  br i1 %10, label %11, label %26, !dbg !6184

11:                                               ; preds = %8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !6185, metadata !DIExpression()), !dbg !6187
  %12 = load ptr, ptr %3, align 8, !dbg !6188
  store ptr %12, ptr %4, align 8, !dbg !6187
  %13 = load ptr, ptr %3, align 8, !dbg !6189
  %14 = getelementptr inbounds %struct.coro_defer_t_, ptr %13, i32 0, i32 1, !dbg !6190
  %15 = load ptr, ptr %14, align 8, !dbg !6190
  %16 = load ptr, ptr %3, align 8, !dbg !6191
  %17 = getelementptr inbounds %struct.coro_defer_t_, ptr %16, i32 0, i32 2, !dbg !6192
  %18 = load ptr, ptr %17, align 8, !dbg !6192
  %19 = load ptr, ptr %3, align 8, !dbg !6193
  %20 = getelementptr inbounds %struct.coro_defer_t_, ptr %19, i32 0, i32 3, !dbg !6194
  %21 = load ptr, ptr %20, align 8, !dbg !6194
  call void (ptr, ptr, ...) %15(ptr noundef %18, ptr noundef %21), !dbg !6189
  %22 = load ptr, ptr %4, align 8, !dbg !6195
  %23 = getelementptr inbounds %struct.coro_defer_t_, ptr %22, i32 0, i32 0, !dbg !6196
  %24 = load ptr, ptr %23, align 8, !dbg !6196
  store ptr %24, ptr %3, align 8, !dbg !6197
  %25 = load ptr, ptr %4, align 8, !dbg !6198
  call void @free(ptr noundef %25) #18, !dbg !6199
  br label %8, !dbg !6200, !llvm.loop !6201

26:                                               ; preds = %8
  %27 = load ptr, ptr %2, align 8, !dbg !6203
  %28 = getelementptr inbounds %struct.coro_t_, ptr %27, i32 0, i32 3, !dbg !6204
  store ptr null, ptr %28, align 8, !dbg !6205
  ret void, !dbg !6206
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @coro_entry_point(ptr noundef %0, ptr noundef %1) #0 !dbg !6207 {
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !6210, metadata !DIExpression()), !dbg !6211
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !6212, metadata !DIExpression()), !dbg !6213
  call void @llvm.dbg.declare(metadata ptr %7, metadata !6214, metadata !DIExpression()), !dbg !6215
  %8 = load ptr, ptr %6, align 8, !dbg !6216
  %9 = load ptr, ptr %5, align 8, !dbg !6217
  %10 = call i32 %8(ptr noundef %9), !dbg !6216
  store i32 %10, ptr %7, align 4, !dbg !6215
  %11 = load ptr, ptr %5, align 8, !dbg !6218
  %12 = getelementptr inbounds %struct.coro_t_, ptr %11, i32 0, i32 5, !dbg !6219
  store i8 1, ptr %12, align 8, !dbg !6220
  %13 = load ptr, ptr %5, align 8, !dbg !6221
  %14 = load i32, ptr %7, align 4, !dbg !6222
  store ptr %13, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !6223, metadata !DIExpression()), !dbg !6227
  store i32 %14, ptr %4, align 4
  call void @llvm.dbg.declare(metadata ptr %4, metadata !6229, metadata !DIExpression()), !dbg !6230
  %15 = load ptr, ptr %3, align 8, !dbg !6231
  %16 = icmp ne ptr %15, null, !dbg !6231
  br i1 %16, label %18, label %17, !dbg !6234

17:                                               ; preds = %2
  call void @__assert_fail(ptr noundef @.str.25, ptr noundef @.str.1.26, i32 noundef 267, ptr noundef @__PRETTY_FUNCTION__.coro_yield) #21, !dbg !6231
  unreachable, !dbg !6231

18:                                               ; preds = %2
  %19 = load i32, ptr %4, align 4, !dbg !6235
  %20 = load ptr, ptr %3, align 8, !dbg !6236
  %21 = getelementptr inbounds %struct.coro_t_, ptr %20, i32 0, i32 2, !dbg !6237
  store i32 %19, ptr %21, align 8, !dbg !6238
  %22 = load ptr, ptr %3, align 8, !dbg !6239
  %23 = load ptr, ptr %22, align 8, !dbg !6240
  %24 = getelementptr inbounds %struct.coro_switcher_t_, ptr %23, i32 0, i32 1, !dbg !6241
  %25 = load ptr, ptr %3, align 8, !dbg !6242
  %26 = load ptr, ptr %25, align 8, !dbg !6243
  call void @coro_swapcontext(ptr noundef %24, ptr noundef %26) #18, !dbg !6244
  %27 = load ptr, ptr %3, align 8, !dbg !6245
  %28 = getelementptr inbounds %struct.coro_t_, ptr %27, i32 0, i32 2, !dbg !6246
  %29 = load i32, ptr %28, align 8, !dbg !6246
  ret void, !dbg !6247
}

; Function Attrs: nounwind
declare i64 @__sysconf(i32 noundef) #3

declare void @coro_swapcontext(ptr noundef, ptr noundef) #4

; Function Attrs: alwaysinline nounwind uwtable
define dso_local ptr @coro_new(ptr noundef %0, ptr noundef %1, ptr noundef %2) #9 !dbg !6248 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !6251, metadata !DIExpression()), !dbg !6252
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !6253, metadata !DIExpression()), !dbg !6254
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !6255, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.declare(metadata ptr %8, metadata !6257, metadata !DIExpression()), !dbg !6258
  %9 = call i64 @__sysconf(i32 noundef 75) #18, !dbg !6259
  %10 = mul nsw i64 3, %9, !dbg !6259
  %11 = sdiv i64 %10, 2, !dbg !6259
  %12 = add i64 120, %11, !dbg !6260
  %13 = call noalias ptr @malloc(i64 noundef %12) #17, !dbg !6261
  store ptr %13, ptr %8, align 8, !dbg !6258
  %14 = load ptr, ptr %8, align 8, !dbg !6262
  %15 = icmp ne ptr %14, null, !dbg !6262
  br i1 %15, label %17, label %16, !dbg !6264

16:                                               ; preds = %3
  store ptr null, ptr %4, align 8, !dbg !6265
  br label %27, !dbg !6265

17:                                               ; preds = %3
  %18 = load ptr, ptr %5, align 8, !dbg !6266
  %19 = load ptr, ptr %8, align 8, !dbg !6267
  %20 = getelementptr inbounds %struct.coro_t_, ptr %19, i32 0, i32 0, !dbg !6268
  store ptr %18, ptr %20, align 8, !dbg !6269
  %21 = load ptr, ptr %8, align 8, !dbg !6270
  %22 = getelementptr inbounds %struct.coro_t_, ptr %21, i32 0, i32 3, !dbg !6271
  store ptr null, ptr %22, align 8, !dbg !6272
  %23 = load ptr, ptr %8, align 8, !dbg !6273
  %24 = load ptr, ptr %6, align 8, !dbg !6274
  %25 = load ptr, ptr %7, align 8, !dbg !6275
  call void @coro_reset(ptr noundef %23, ptr noundef %24, ptr noundef %25), !dbg !6276
  %26 = load ptr, ptr %8, align 8, !dbg !6277
  store ptr %26, ptr %4, align 8, !dbg !6278
  br label %27, !dbg !6278

27:                                               ; preds = %17, %16
  %28 = load ptr, ptr %4, align 8, !dbg !6279
  ret ptr %28, !dbg !6279
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local ptr @coro_get_data(ptr noundef %0) #9 !dbg !6280 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !6283, metadata !DIExpression()), !dbg !6284
  %3 = load ptr, ptr %2, align 8, !dbg !6285
  %4 = icmp ne ptr %3, null, !dbg !6285
  %5 = xor i1 %4, true, !dbg !6285
  %6 = xor i1 %5, true, !dbg !6285
  %7 = zext i1 %6 to i32, !dbg !6285
  %8 = sext i32 %7 to i64, !dbg !6285
  %9 = icmp ne i64 %8, 0, !dbg !6285
  br i1 %9, label %10, label %14, !dbg !6285

10:                                               ; preds = %1
  %11 = load ptr, ptr %2, align 8, !dbg !6286
  %12 = getelementptr inbounds %struct.coro_t_, ptr %11, i32 0, i32 4, !dbg !6287
  %13 = load ptr, ptr %12, align 8, !dbg !6287
  br label %15, !dbg !6285

14:                                               ; preds = %1
  br label %15, !dbg !6285

15:                                               ; preds = %14, %10
  %16 = phi ptr [ %13, %10 ], [ null, %14 ], !dbg !6285
  ret ptr %16, !dbg !6288
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local i32 @coro_resume(ptr noundef %0) #9 !dbg !6289 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !6290, metadata !DIExpression()), !dbg !6291
  %3 = load ptr, ptr %2, align 8, !dbg !6292
  %4 = icmp ne ptr %3, null, !dbg !6292
  br i1 %4, label %5, label %6, !dbg !6295

5:                                                ; preds = %1
  br label %7, !dbg !6295

6:                                                ; preds = %1
  call void @__assert_fail(ptr noundef @.str.25, ptr noundef @.str.1.26, i32 noundef 230, ptr noundef @__PRETTY_FUNCTION__.coro_resume) #21, !dbg !6292
  unreachable, !dbg !6292

7:                                                ; preds = %5
  %8 = load ptr, ptr %2, align 8, !dbg !6296
  %9 = getelementptr inbounds %struct.coro_t_, ptr %8, i32 0, i32 5, !dbg !6296
  %10 = load i8, ptr %9, align 8, !dbg !6296
  %11 = trunc i8 %10 to i1, !dbg !6296
  %12 = zext i1 %11 to i32, !dbg !6296
  %13 = icmp eq i32 %12, 0, !dbg !6296
  br i1 %13, label %14, label %15, !dbg !6299

14:                                               ; preds = %7
  br label %16, !dbg !6299

15:                                               ; preds = %7
  call void @__assert_fail(ptr noundef @.str.2.27, ptr noundef @.str.1.26, i32 noundef 231, ptr noundef @__PRETTY_FUNCTION__.coro_resume) #21, !dbg !6296
  unreachable, !dbg !6296

16:                                               ; preds = %14
  %17 = load ptr, ptr %2, align 8, !dbg !6300
  %18 = getelementptr inbounds %struct.coro_t_, ptr %17, i32 0, i32 0, !dbg !6301
  %19 = load ptr, ptr %18, align 8, !dbg !6301
  %20 = getelementptr inbounds %struct.coro_switcher_t_, ptr %19, i32 0, i32 0, !dbg !6302
  %21 = load ptr, ptr %2, align 8, !dbg !6303
  %22 = getelementptr inbounds %struct.coro_t_, ptr %21, i32 0, i32 1, !dbg !6304
  call void @coro_swapcontext(ptr noundef %20, ptr noundef %22), !dbg !6305
  %23 = load ptr, ptr %2, align 8, !dbg !6306
  %24 = getelementptr inbounds %struct.coro_t_, ptr %23, i32 0, i32 5, !dbg !6308
  %25 = load i8, ptr %24, align 8, !dbg !6308
  %26 = trunc i8 %25 to i1, !dbg !6308
  br i1 %26, label %34, label %27, !dbg !6309

27:                                               ; preds = %16
  %28 = load ptr, ptr %2, align 8, !dbg !6310
  %29 = getelementptr inbounds %struct.coro_t_, ptr %28, i32 0, i32 1, !dbg !6311
  %30 = load ptr, ptr %2, align 8, !dbg !6312
  %31 = getelementptr inbounds %struct.coro_t_, ptr %30, i32 0, i32 0, !dbg !6313
  %32 = load ptr, ptr %31, align 8, !dbg !6313
  %33 = getelementptr inbounds %struct.coro_switcher_t_, ptr %32, i32 0, i32 1, !dbg !6314
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %29, ptr align 8 %33, i64 80, i1 false), !dbg !6315
  br label %34, !dbg !6315

34:                                               ; preds = %27, %16
  %35 = load ptr, ptr %2, align 8, !dbg !6316
  %36 = getelementptr inbounds %struct.coro_t_, ptr %35, i32 0, i32 2, !dbg !6317
  %37 = load i32, ptr %36, align 8, !dbg !6317
  ret i32 %37, !dbg !6318
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #8

; Function Attrs: alwaysinline nounwind uwtable
define dso_local i32 @coro_resume_value(ptr noundef %0, i32 noundef %1) #9 !dbg !6319 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !6320, metadata !DIExpression()), !dbg !6321
  store i32 %1, ptr %5, align 4
  call void @llvm.dbg.declare(metadata ptr %5, metadata !6322, metadata !DIExpression()), !dbg !6323
  %6 = load ptr, ptr %4, align 8, !dbg !6324
  %7 = icmp ne ptr %6, null, !dbg !6324
  br i1 %7, label %8, label %9, !dbg !6327

8:                                                ; preds = %2
  br label %10, !dbg !6327

9:                                                ; preds = %2
  call void @__assert_fail(ptr noundef @.str.25, ptr noundef @.str.1.26, i32 noundef 257, ptr noundef @__PRETTY_FUNCTION__.coro_resume_value) #21, !dbg !6324
  unreachable, !dbg !6324

10:                                               ; preds = %8
  %11 = load ptr, ptr %4, align 8, !dbg !6328
  %12 = getelementptr inbounds %struct.coro_t_, ptr %11, i32 0, i32 5, !dbg !6328
  %13 = load i8, ptr %12, align 8, !dbg !6328
  %14 = trunc i8 %13 to i1, !dbg !6328
  %15 = zext i1 %14 to i32, !dbg !6328
  %16 = icmp eq i32 %15, 0, !dbg !6328
  br i1 %16, label %17, label %18, !dbg !6331

17:                                               ; preds = %10
  br label %19, !dbg !6331

18:                                               ; preds = %10
  call void @__assert_fail(ptr noundef @.str.2.27, ptr noundef @.str.1.26, i32 noundef 258, ptr noundef @__PRETTY_FUNCTION__.coro_resume_value) #21, !dbg !6328
  unreachable, !dbg !6328

19:                                               ; preds = %17
  %20 = load i32, ptr %5, align 4, !dbg !6332
  %21 = load ptr, ptr %4, align 8, !dbg !6333
  %22 = getelementptr inbounds %struct.coro_t_, ptr %21, i32 0, i32 2, !dbg !6334
  store i32 %20, ptr %22, align 8, !dbg !6335
  %23 = load ptr, ptr %4, align 8, !dbg !6336
  store ptr %23, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !6290, metadata !DIExpression()), !dbg !6337
  %24 = load ptr, ptr %3, align 8, !dbg !6339
  %25 = icmp ne ptr %24, null, !dbg !6339
  br i1 %25, label %26, label %33, !dbg !6340

26:                                               ; preds = %19
  %27 = load ptr, ptr %3, align 8, !dbg !6341
  %28 = getelementptr inbounds %struct.coro_t_, ptr %27, i32 0, i32 5, !dbg !6341
  %29 = load i8, ptr %28, align 8, !dbg !6341
  %30 = trunc i8 %29 to i1, !dbg !6341
  %31 = zext i1 %30 to i32, !dbg !6341
  %32 = icmp eq i32 %31, 0, !dbg !6341
  br i1 %32, label %34, label %43, !dbg !6342

33:                                               ; preds = %19
  call void @__assert_fail(ptr noundef @.str.25, ptr noundef @.str.1.26, i32 noundef 230, ptr noundef @__PRETTY_FUNCTION__.coro_resume) #21, !dbg !6339
  unreachable, !dbg !6339

34:                                               ; preds = %26
  %35 = load ptr, ptr %3, align 8, !dbg !6343
  %36 = load ptr, ptr %35, align 8, !dbg !6344
  %37 = load ptr, ptr %3, align 8, !dbg !6345
  %38 = getelementptr inbounds %struct.coro_t_, ptr %37, i32 0, i32 1, !dbg !6346
  call void @coro_swapcontext(ptr noundef %36, ptr noundef %38) #18, !dbg !6347
  %39 = load ptr, ptr %3, align 8, !dbg !6348
  %40 = getelementptr inbounds %struct.coro_t_, ptr %39, i32 0, i32 5, !dbg !6349
  %41 = load i8, ptr %40, align 8, !dbg !6349
  %42 = trunc i8 %41 to i1, !dbg !6349
  br i1 %42, label %50, label %44, !dbg !6350

43:                                               ; preds = %26
  call void @__assert_fail(ptr noundef @.str.2.27, ptr noundef @.str.1.26, i32 noundef 231, ptr noundef @__PRETTY_FUNCTION__.coro_resume) #21, !dbg !6341
  unreachable, !dbg !6341

44:                                               ; preds = %34
  %45 = load ptr, ptr %3, align 8, !dbg !6351
  %46 = getelementptr inbounds %struct.coro_t_, ptr %45, i32 0, i32 1, !dbg !6352
  %47 = load ptr, ptr %3, align 8, !dbg !6353
  %48 = load ptr, ptr %47, align 8, !dbg !6354
  %49 = getelementptr inbounds %struct.coro_switcher_t_, ptr %48, i32 0, i32 1, !dbg !6355
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %46, ptr align 8 %49, i64 80, i1 false), !dbg !6356
  br label %50, !dbg !6356

50:                                               ; preds = %44, %34
  %51 = load ptr, ptr %3, align 8, !dbg !6357
  %52 = getelementptr inbounds %struct.coro_t_, ptr %51, i32 0, i32 2, !dbg !6358
  %53 = load i32, ptr %52, align 8, !dbg !6358
  ret i32 %53, !dbg !6359
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local i32 @coro_yield(ptr noundef %0, i32 noundef %1) #9 !dbg !6224 {
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !6223, metadata !DIExpression()), !dbg !6360
  store i32 %1, ptr %4, align 4
  call void @llvm.dbg.declare(metadata ptr %4, metadata !6229, metadata !DIExpression()), !dbg !6361
  %5 = load ptr, ptr %3, align 8, !dbg !6362
  %6 = icmp ne ptr %5, null, !dbg !6362
  br i1 %6, label %7, label %8, !dbg !6363

7:                                                ; preds = %2
  br label %9, !dbg !6363

8:                                                ; preds = %2
  call void @__assert_fail(ptr noundef @.str.25, ptr noundef @.str.1.26, i32 noundef 267, ptr noundef @__PRETTY_FUNCTION__.coro_yield) #21, !dbg !6362
  unreachable, !dbg !6362

9:                                                ; preds = %7
  %10 = load i32, ptr %4, align 4, !dbg !6364
  %11 = load ptr, ptr %3, align 8, !dbg !6365
  %12 = getelementptr inbounds %struct.coro_t_, ptr %11, i32 0, i32 2, !dbg !6366
  store i32 %10, ptr %12, align 8, !dbg !6367
  %13 = load ptr, ptr %3, align 8, !dbg !6368
  %14 = getelementptr inbounds %struct.coro_t_, ptr %13, i32 0, i32 0, !dbg !6369
  %15 = load ptr, ptr %14, align 8, !dbg !6369
  %16 = getelementptr inbounds %struct.coro_switcher_t_, ptr %15, i32 0, i32 1, !dbg !6370
  %17 = load ptr, ptr %3, align 8, !dbg !6371
  %18 = getelementptr inbounds %struct.coro_t_, ptr %17, i32 0, i32 0, !dbg !6372
  %19 = load ptr, ptr %18, align 8, !dbg !6372
  %20 = getelementptr inbounds %struct.coro_switcher_t_, ptr %19, i32 0, i32 0, !dbg !6373
  call void @coro_swapcontext(ptr noundef %16, ptr noundef %20), !dbg !6374
  %21 = load ptr, ptr %3, align 8, !dbg !6375
  %22 = getelementptr inbounds %struct.coro_t_, ptr %21, i32 0, i32 2, !dbg !6376
  %23 = load i32, ptr %22, align 8, !dbg !6376
  ret i32 %23, !dbg !6377
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @coro_free(ptr noundef %0) #0 !dbg !6378 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !6379, metadata !DIExpression()), !dbg !6380
  %3 = load ptr, ptr %2, align 8, !dbg !6381
  %4 = icmp ne ptr %3, null, !dbg !6381
  br i1 %4, label %5, label %6, !dbg !6384

5:                                                ; preds = %1
  br label %7, !dbg !6384

6:                                                ; preds = %1
  call void @__assert_fail(ptr noundef @.str.25, ptr noundef @.str.1.26, i32 noundef 276, ptr noundef @__PRETTY_FUNCTION__.coro_free) #21, !dbg !6381
  unreachable, !dbg !6381

7:                                                ; preds = %5
  %8 = load ptr, ptr %2, align 8, !dbg !6385
  call void @coro_run_deferred(ptr noundef %8), !dbg !6386
  %9 = load ptr, ptr %2, align 8, !dbg !6387
  call void @free(ptr noundef %9) #18, !dbg !6388
  ret void, !dbg !6389
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local void @coro_defer(ptr noundef %0, ptr noundef %1, ptr noundef %2) #9 !dbg !6390 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !6393, metadata !DIExpression()), !dbg !6394
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !6395, metadata !DIExpression()), !dbg !6396
  store ptr %2, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !6397, metadata !DIExpression()), !dbg !6398
  %7 = load ptr, ptr %4, align 8, !dbg !6399
  %8 = load ptr, ptr %5, align 8, !dbg !6400
  %9 = load ptr, ptr %6, align 8, !dbg !6401
  call void @coro_defer_any(ptr noundef %7, ptr noundef %8, ptr noundef %9, ptr noundef null), !dbg !6402
  ret void, !dbg !6403
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @coro_defer_any(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 !dbg !6404 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !6407, metadata !DIExpression()), !dbg !6408
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !6409, metadata !DIExpression()), !dbg !6410
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !6411, metadata !DIExpression()), !dbg !6412
  store ptr %3, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !6413, metadata !DIExpression()), !dbg !6414
  call void @llvm.dbg.declare(metadata ptr %9, metadata !6415, metadata !DIExpression()), !dbg !6416
  %10 = call noalias ptr @malloc(i64 noundef 32) #17, !dbg !6417
  store ptr %10, ptr %9, align 8, !dbg !6416
  %11 = load ptr, ptr %9, align 8, !dbg !6418
  %12 = icmp ne ptr %11, null, !dbg !6418
  %13 = xor i1 %12, true, !dbg !6418
  %14 = zext i1 %13 to i32, !dbg !6418
  %15 = sext i32 %14 to i64, !dbg !6418
  %16 = icmp ne i64 %15, 0, !dbg !6418
  br i1 %16, label %17, label %18, !dbg !6420

17:                                               ; preds = %4
  br label %41, !dbg !6421

18:                                               ; preds = %4
  %19 = load ptr, ptr %6, align 8, !dbg !6422
  %20 = icmp ne ptr %19, null, !dbg !6422
  br i1 %20, label %21, label %22, !dbg !6425

21:                                               ; preds = %18
  br label %23, !dbg !6425

22:                                               ; preds = %18
  call void @__assert_fail(ptr noundef @.str.3.30, ptr noundef @.str.1.26, i32 noundef 291, ptr noundef @__PRETTY_FUNCTION__.coro_defer_any) #21, !dbg !6422
  unreachable, !dbg !6422

23:                                               ; preds = %21
  %24 = load ptr, ptr %5, align 8, !dbg !6426
  %25 = getelementptr inbounds %struct.coro_t_, ptr %24, i32 0, i32 3, !dbg !6427
  %26 = load ptr, ptr %25, align 8, !dbg !6427
  %27 = load ptr, ptr %9, align 8, !dbg !6428
  %28 = getelementptr inbounds %struct.coro_defer_t_, ptr %27, i32 0, i32 0, !dbg !6429
  store ptr %26, ptr %28, align 8, !dbg !6430
  %29 = load ptr, ptr %6, align 8, !dbg !6431
  %30 = load ptr, ptr %9, align 8, !dbg !6432
  %31 = getelementptr inbounds %struct.coro_defer_t_, ptr %30, i32 0, i32 1, !dbg !6433
  store ptr %29, ptr %31, align 8, !dbg !6434
  %32 = load ptr, ptr %7, align 8, !dbg !6435
  %33 = load ptr, ptr %9, align 8, !dbg !6436
  %34 = getelementptr inbounds %struct.coro_defer_t_, ptr %33, i32 0, i32 2, !dbg !6437
  store ptr %32, ptr %34, align 8, !dbg !6438
  %35 = load ptr, ptr %8, align 8, !dbg !6439
  %36 = load ptr, ptr %9, align 8, !dbg !6440
  %37 = getelementptr inbounds %struct.coro_defer_t_, ptr %36, i32 0, i32 3, !dbg !6441
  store ptr %35, ptr %37, align 8, !dbg !6442
  %38 = load ptr, ptr %9, align 8, !dbg !6443
  %39 = load ptr, ptr %5, align 8, !dbg !6444
  %40 = getelementptr inbounds %struct.coro_t_, ptr %39, i32 0, i32 3, !dbg !6445
  store ptr %38, ptr %40, align 8, !dbg !6446
  br label %41, !dbg !6447

41:                                               ; preds = %23, %17
  ret void, !dbg !6447
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local void @coro_defer2(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #9 !dbg !6448 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !6451, metadata !DIExpression()), !dbg !6452
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !6453, metadata !DIExpression()), !dbg !6454
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !6455, metadata !DIExpression()), !dbg !6456
  store ptr %3, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !6457, metadata !DIExpression()), !dbg !6458
  %9 = load ptr, ptr %5, align 8, !dbg !6459
  %10 = load ptr, ptr %6, align 8, !dbg !6460
  %11 = load ptr, ptr %7, align 8, !dbg !6461
  %12 = load ptr, ptr %8, align 8, !dbg !6462
  call void @coro_defer_any(ptr noundef %9, ptr noundef %10, ptr noundef %11, ptr noundef %12), !dbg !6463
  ret void, !dbg !6464
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @coro_malloc_full(ptr noundef %0, i64 noundef %1, ptr noundef %2) #0 !dbg !6465 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i64, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !6468, metadata !DIExpression()), !dbg !6469
  store i64 %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !6470, metadata !DIExpression()), !dbg !6471
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !6472, metadata !DIExpression()), !dbg !6473
  call void @llvm.dbg.declare(metadata ptr %8, metadata !6474, metadata !DIExpression()), !dbg !6475
  %9 = load i64, ptr %6, align 8, !dbg !6476
  %10 = add i64 32, %9, !dbg !6477
  %11 = call noalias ptr @malloc(i64 noundef %10) #17, !dbg !6478
  store ptr %11, ptr %8, align 8, !dbg !6475
  %12 = load ptr, ptr %8, align 8, !dbg !6479
  %13 = icmp ne ptr %12, null, !dbg !6479
  %14 = xor i1 %13, true, !dbg !6479
  %15 = zext i1 %14 to i32, !dbg !6479
  %16 = sext i32 %15 to i64, !dbg !6479
  %17 = icmp ne i64 %16, 0, !dbg !6479
  br i1 %17, label %18, label %19, !dbg !6481

18:                                               ; preds = %3
  store ptr null, ptr %4, align 8, !dbg !6482
  br label %39, !dbg !6482

19:                                               ; preds = %3
  %20 = load ptr, ptr %5, align 8, !dbg !6483
  %21 = getelementptr inbounds %struct.coro_t_, ptr %20, i32 0, i32 3, !dbg !6484
  %22 = load ptr, ptr %21, align 8, !dbg !6484
  %23 = load ptr, ptr %8, align 8, !dbg !6485
  %24 = getelementptr inbounds %struct.coro_defer_t_, ptr %23, i32 0, i32 0, !dbg !6486
  store ptr %22, ptr %24, align 8, !dbg !6487
  %25 = load ptr, ptr %7, align 8, !dbg !6488
  %26 = load ptr, ptr %8, align 8, !dbg !6489
  %27 = getelementptr inbounds %struct.coro_defer_t_, ptr %26, i32 0, i32 1, !dbg !6490
  store ptr %25, ptr %27, align 8, !dbg !6491
  %28 = load ptr, ptr %8, align 8, !dbg !6492
  %29 = getelementptr inbounds %struct.coro_defer_t_, ptr %28, i64 1, !dbg !6493
  %30 = load ptr, ptr %8, align 8, !dbg !6494
  %31 = getelementptr inbounds %struct.coro_defer_t_, ptr %30, i32 0, i32 2, !dbg !6495
  store ptr %29, ptr %31, align 8, !dbg !6496
  %32 = load ptr, ptr %8, align 8, !dbg !6497
  %33 = getelementptr inbounds %struct.coro_defer_t_, ptr %32, i32 0, i32 3, !dbg !6498
  store ptr null, ptr %33, align 8, !dbg !6499
  %34 = load ptr, ptr %8, align 8, !dbg !6500
  %35 = load ptr, ptr %5, align 8, !dbg !6501
  %36 = getelementptr inbounds %struct.coro_t_, ptr %35, i32 0, i32 3, !dbg !6502
  store ptr %34, ptr %36, align 8, !dbg !6503
  %37 = load ptr, ptr %8, align 8, !dbg !6504
  %38 = getelementptr inbounds %struct.coro_defer_t_, ptr %37, i64 1, !dbg !6505
  store ptr %38, ptr %4, align 8, !dbg !6506
  br label %39, !dbg !6506

39:                                               ; preds = %19, %18
  %40 = load ptr, ptr %4, align 8, !dbg !6507
  ret ptr %40, !dbg !6507
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @coro_malloc(ptr noundef %0, i64 noundef %1) #0 !dbg !6508 {
  %3 = alloca ptr, align 8
  %4 = alloca i64, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !6511, metadata !DIExpression()), !dbg !6512
  store i64 %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !6513, metadata !DIExpression()), !dbg !6514
  %5 = load ptr, ptr %3, align 8, !dbg !6515
  %6 = load i64, ptr %4, align 8, !dbg !6516
  %7 = call ptr @coro_malloc_full(ptr noundef %5, i64 noundef %6, ptr noundef @nothing), !dbg !6517
  ret ptr %7, !dbg !6518
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @nothing() #0 !dbg !6519 {
  ret void, !dbg !6520
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @coro_strdup(ptr noundef %0, ptr noundef %1) #0 !dbg !6521 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i64, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !6524, metadata !DIExpression()), !dbg !6525
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !6526, metadata !DIExpression()), !dbg !6527
  call void @llvm.dbg.declare(metadata ptr %5, metadata !6528, metadata !DIExpression()), !dbg !6529
  %7 = load ptr, ptr %4, align 8, !dbg !6530
  %8 = call i64 @strlen(ptr noundef %7) #22, !dbg !6531
  %9 = add i64 %8, 1, !dbg !6532
  store i64 %9, ptr %5, align 8, !dbg !6529
  call void @llvm.dbg.declare(metadata ptr %6, metadata !6533, metadata !DIExpression()), !dbg !6534
  %10 = load ptr, ptr %3, align 8, !dbg !6535
  %11 = load i64, ptr %5, align 8, !dbg !6536
  %12 = call ptr @coro_malloc(ptr noundef %10, i64 noundef %11), !dbg !6537
  store ptr %12, ptr %6, align 8, !dbg !6534
  %13 = load ptr, ptr %6, align 8, !dbg !6538
  %14 = icmp ne ptr %13, null, !dbg !6538
  %15 = xor i1 %14, true, !dbg !6538
  %16 = xor i1 %15, true, !dbg !6538
  %17 = zext i1 %16 to i32, !dbg !6538
  %18 = sext i32 %17 to i64, !dbg !6538
  %19 = icmp ne i64 %18, 0, !dbg !6538
  br i1 %19, label %20, label %24, !dbg !6540

20:                                               ; preds = %2
  %21 = load ptr, ptr %6, align 8, !dbg !6541
  %22 = load ptr, ptr %4, align 8, !dbg !6542
  %23 = load i64, ptr %5, align 8, !dbg !6543
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %21, ptr align 1 %22, i64 %23, i1 false), !dbg !6544
  br label %24, !dbg !6544

24:                                               ; preds = %20, %2
  %25 = load ptr, ptr %6, align 8, !dbg !6545
  ret ptr %25, !dbg !6546
}

; Function Attrs: nounwind willreturn memory(read)
declare i64 @strlen(ptr noundef) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @coro_printf(ptr noundef %0, ptr noundef %1, ...) #0 !dbg !6547 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca [1 x %struct.__va_list_tag], align 16
  %10 = alloca i32, align 4
  %11 = alloca ptr, align 8
  store ptr %0, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !6550, metadata !DIExpression()), !dbg !6551
  store ptr %1, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !6552, metadata !DIExpression()), !dbg !6553
  call void @llvm.dbg.declare(metadata ptr %9, metadata !6554, metadata !DIExpression()), !dbg !6566
  call void @llvm.dbg.declare(metadata ptr %10, metadata !6567, metadata !DIExpression()), !dbg !6568
  call void @llvm.dbg.declare(metadata ptr %11, metadata !6569, metadata !DIExpression()), !dbg !6570
  %12 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !6571
  call void @llvm.va_start(ptr %12), !dbg !6571
  %13 = load ptr, ptr %8, align 8, !dbg !6572
  %14 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !6573
  %15 = call i32 @vasprintf(ptr noundef %11, ptr noundef %13, ptr noundef %14) #18, !dbg !6574
  store i32 %15, ptr %10, align 4, !dbg !6575
  %16 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !6576
  call void @llvm.va_end(ptr %16), !dbg !6576
  %17 = load i32, ptr %10, align 4, !dbg !6577
  %18 = icmp slt i32 %17, 0, !dbg !6577
  %19 = zext i1 %18 to i32, !dbg !6577
  %20 = sext i32 %19 to i64, !dbg !6577
  %21 = icmp ne i64 %20, 0, !dbg !6577
  br i1 %21, label %22, label %23, !dbg !6579

22:                                               ; preds = %2
  store ptr null, ptr %6, align 8, !dbg !6580
  br label %30, !dbg !6580

23:                                               ; preds = %2
  %24 = load ptr, ptr %7, align 8, !dbg !6581
  %25 = load ptr, ptr %11, align 8, !dbg !6582
  store ptr %24, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !6393, metadata !DIExpression()), !dbg !6583
  store ptr @free, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !6395, metadata !DIExpression()), !dbg !6585
  store ptr %25, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !6397, metadata !DIExpression()), !dbg !6586
  %26 = load ptr, ptr %3, align 8, !dbg !6587
  %27 = load ptr, ptr %4, align 8, !dbg !6588
  %28 = load ptr, ptr %5, align 8, !dbg !6589
  call void @coro_defer_any(ptr noundef %26, ptr noundef %27, ptr noundef %28, ptr noundef null), !dbg !6590
  %29 = load ptr, ptr %11, align 8, !dbg !6591
  store ptr %29, ptr %6, align 8, !dbg !6592
  br label %30, !dbg !6592

30:                                               ; preds = %23, %22
  %31 = load ptr, ptr %6, align 8, !dbg !6593
  ret ptr %31, !dbg !6593
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @lwan_http_authorize_init() #0 !dbg !6594 {
  %1 = call ptr @cache_create(ptr noundef @create_realm_file, ptr noundef @destroy_realm_file, ptr noundef null, i64 noundef 60), !dbg !6597
  store ptr %1, ptr @realm_password_cache, align 8, !dbg !6598
  %2 = load ptr, ptr @realm_password_cache, align 8, !dbg !6599
  %3 = icmp ne ptr %2, null, !dbg !6600
  %4 = xor i1 %3, true, !dbg !6600
  %5 = xor i1 %4, true, !dbg !6601
  ret i1 %5, !dbg !6602
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @create_realm_file(ptr noundef %0, ptr noundef %1) #0 !dbg !6603 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca %struct.config_t_, align 8
  %8 = alloca %struct.config_line_t_, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i32, align 4
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !6606, metadata !DIExpression()), !dbg !6607
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !6608, metadata !DIExpression()), !dbg !6609
  call void @llvm.dbg.declare(metadata ptr %6, metadata !6610, metadata !DIExpression()), !dbg !6611
  %12 = call noalias ptr @malloc(i64 noundef 48) #17, !dbg !6612
  store ptr %12, ptr %6, align 8, !dbg !6611
  call void @llvm.dbg.declare(metadata ptr %7, metadata !6613, metadata !DIExpression()), !dbg !6654
  call void @llvm.dbg.declare(metadata ptr %8, metadata !6655, metadata !DIExpression()), !dbg !6674
  %13 = load ptr, ptr %6, align 8, !dbg !6675
  %14 = icmp ne ptr %13, null, !dbg !6675
  %15 = xor i1 %14, true, !dbg !6675
  %16 = zext i1 %15 to i32, !dbg !6675
  %17 = sext i32 %16 to i64, !dbg !6675
  %18 = icmp ne i64 %17, 0, !dbg !6675
  br i1 %18, label %19, label %20, !dbg !6677

19:                                               ; preds = %2
  store ptr null, ptr %3, align 8, !dbg !6678
  br label %107, !dbg !6678

20:                                               ; preds = %2
  %21 = call ptr @hash_str_new(ptr noundef @fourty_two_and_free, ptr noundef @fourty_two_and_free), !dbg !6679
  %22 = load ptr, ptr %6, align 8, !dbg !6680
  %23 = getelementptr inbounds %struct.realm_password_file_t, ptr %22, i32 0, i32 1, !dbg !6681
  store ptr %21, ptr %23, align 8, !dbg !6682
  %24 = load ptr, ptr %6, align 8, !dbg !6683
  %25 = getelementptr inbounds %struct.realm_password_file_t, ptr %24, i32 0, i32 1, !dbg !6683
  %26 = load ptr, ptr %25, align 8, !dbg !6683
  %27 = icmp ne ptr %26, null, !dbg !6683
  %28 = xor i1 %27, true, !dbg !6683
  %29 = zext i1 %28 to i32, !dbg !6683
  %30 = sext i32 %29 to i64, !dbg !6683
  %31 = icmp ne i64 %30, 0, !dbg !6683
  br i1 %31, label %32, label %33, !dbg !6685

32:                                               ; preds = %20
  br label %102, !dbg !6686

33:                                               ; preds = %20
  %34 = load ptr, ptr %4, align 8, !dbg !6687
  %35 = call zeroext i1 @config_open(ptr noundef %7, ptr noundef %34), !dbg !6689
  br i1 %35, label %37, label %36, !dbg !6690

36:                                               ; preds = %33
  br label %102, !dbg !6691

37:                                               ; preds = %33
  br label %38, !dbg !6692

38:                                               ; preds = %88, %81, %75, %37
  %39 = call zeroext i1 @config_read_line(ptr noundef %7, ptr noundef %8), !dbg !6693
  br i1 %39, label %40, label %89, !dbg !6692

40:                                               ; preds = %38
  %41 = getelementptr inbounds %struct.config_line_t_, ptr %8, i32 0, i32 1, !dbg !6694
  %42 = load i32, ptr %41, align 8, !dbg !6694
  switch i32 %42, label %86 [
    i32 0, label %43
  ], !dbg !6696

43:                                               ; preds = %40
  call void @llvm.dbg.declare(metadata ptr %9, metadata !6697, metadata !DIExpression()), !dbg !6700
  %44 = getelementptr inbounds %struct.config_line_t_, ptr %8, i32 0, i32 0, !dbg !6701
  %45 = getelementptr inbounds %struct.list_node, ptr %44, i32 0, i32 0, !dbg !6702
  %46 = load ptr, ptr %45, align 8, !dbg !6702
  %47 = call noalias ptr @strdup(ptr noundef %46) #18, !dbg !6703
  store ptr %47, ptr %9, align 8, !dbg !6700
  %48 = load ptr, ptr %9, align 8, !dbg !6704
  %49 = icmp ne ptr %48, null, !dbg !6704
  br i1 %49, label %51, label %50, !dbg !6706

50:                                               ; preds = %43
  br label %101, !dbg !6707

51:                                               ; preds = %43
  call void @llvm.dbg.declare(metadata ptr %10, metadata !6708, metadata !DIExpression()), !dbg !6709
  %52 = getelementptr inbounds %struct.config_line_t_, ptr %8, i32 0, i32 0, !dbg !6710
  %53 = getelementptr inbounds %struct.list_node, ptr %52, i32 0, i32 1, !dbg !6711
  %54 = load ptr, ptr %53, align 8, !dbg !6711
  %55 = call noalias ptr @strdup(ptr noundef %54) #18, !dbg !6712
  store ptr %55, ptr %10, align 8, !dbg !6709
  %56 = load ptr, ptr %10, align 8, !dbg !6713
  %57 = icmp ne ptr %56, null, !dbg !6713
  br i1 %57, label %60, label %58, !dbg !6715

58:                                               ; preds = %51
  %59 = load ptr, ptr %9, align 8, !dbg !6716
  call void @free(ptr noundef %59) #18, !dbg !6718
  br label %101, !dbg !6719

60:                                               ; preds = %51
  call void @llvm.dbg.declare(metadata ptr %11, metadata !6720, metadata !DIExpression()), !dbg !6721
  %61 = load ptr, ptr %6, align 8, !dbg !6722
  %62 = getelementptr inbounds %struct.realm_password_file_t, ptr %61, i32 0, i32 1, !dbg !6723
  %63 = load ptr, ptr %62, align 8, !dbg !6723
  %64 = load ptr, ptr %9, align 8, !dbg !6724
  %65 = load ptr, ptr %10, align 8, !dbg !6725
  %66 = call i32 @hash_add_unique(ptr noundef %63, ptr noundef %64, ptr noundef %65), !dbg !6726
  store i32 %66, ptr %11, align 4, !dbg !6721
  %67 = load i32, ptr %11, align 4, !dbg !6727
  %68 = icmp ne i32 %67, 0, !dbg !6727
  %69 = xor i1 %68, true, !dbg !6727
  %70 = xor i1 %69, true, !dbg !6727
  %71 = xor i1 %70, true, !dbg !6727
  %72 = zext i1 %71 to i32, !dbg !6727
  %73 = sext i32 %72 to i64, !dbg !6727
  %74 = icmp ne i64 %73, 0, !dbg !6727
  br i1 %74, label %75, label %76, !dbg !6729

75:                                               ; preds = %60
  br label %38, !dbg !6730, !llvm.loop !6731

76:                                               ; preds = %60
  %77 = load ptr, ptr %9, align 8, !dbg !6733
  call void @free(ptr noundef %77) #18, !dbg !6734
  %78 = load ptr, ptr %10, align 8, !dbg !6735
  call void @free(ptr noundef %78) #18, !dbg !6736
  %79 = load i32, ptr %11, align 4, !dbg !6737
  %80 = icmp eq i32 %79, -17, !dbg !6739
  br i1 %80, label %81, label %85, !dbg !6740

81:                                               ; preds = %76
  %82 = getelementptr inbounds %struct.config_line_t_, ptr %8, i32 0, i32 0, !dbg !6741
  %83 = getelementptr inbounds %struct.list_node, ptr %82, i32 0, i32 0, !dbg !6741
  %84 = load ptr, ptr %83, align 8, !dbg !6741
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_warning_debug(ptr noundef @.str.2.33, i32 noundef 89, ptr noundef @__FUNCTION__.create_realm_file, ptr noundef @.str.3.34, ptr noundef %84), !dbg !6741
  br label %38, !dbg !6743, !llvm.loop !6731

85:                                               ; preds = %76
  br label %101, !dbg !6744

86:                                               ; preds = %40
  %87 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %7, ptr noundef @.str.4.35), !dbg !6745
  br label %88, !dbg !6746

88:                                               ; preds = %86
  br label %38, !dbg !6692, !llvm.loop !6731

89:                                               ; preds = %38
  %90 = getelementptr inbounds %struct.config_t_, ptr %7, i32 0, i32 2, !dbg !6747
  %91 = load ptr, ptr %90, align 8, !dbg !6747
  %92 = icmp ne ptr %91, null, !dbg !6749
  br i1 %92, label %93, label %99, !dbg !6750

93:                                               ; preds = %89
  %94 = load ptr, ptr %4, align 8, !dbg !6751
  %95 = getelementptr inbounds %struct.config_t_, ptr %7, i32 0, i32 1, !dbg !6751
  %96 = load i32, ptr %95, align 8, !dbg !6751
  %97 = getelementptr inbounds %struct.config_t_, ptr %7, i32 0, i32 2, !dbg !6751
  %98 = load ptr, ptr %97, align 8, !dbg !6751
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_error_debug(ptr noundef @.str.2.33, i32 noundef 103, ptr noundef @__FUNCTION__.create_realm_file, ptr noundef @.str.5.36, ptr noundef %94, i32 noundef %96, ptr noundef %98), !dbg !6751
  br label %101, !dbg !6753

99:                                               ; preds = %89
  call void @config_close(ptr noundef %7), !dbg !6754
  %100 = load ptr, ptr %6, align 8, !dbg !6755
  store ptr %100, ptr %3, align 8, !dbg !6756
  br label %107, !dbg !6756

101:                                              ; preds = %93, %85, %58, %50
  call void @llvm.dbg.label(metadata !6757), !dbg !6758
  call void @config_close(ptr noundef %7), !dbg !6759
  br label %102, !dbg !6759

102:                                              ; preds = %101, %36, %32
  call void @llvm.dbg.label(metadata !6760), !dbg !6761
  %103 = load ptr, ptr %6, align 8, !dbg !6762
  %104 = getelementptr inbounds %struct.realm_password_file_t, ptr %103, i32 0, i32 1, !dbg !6763
  %105 = load ptr, ptr %104, align 8, !dbg !6763
  call void @hash_free(ptr noundef %105), !dbg !6764
  %106 = load ptr, ptr %6, align 8, !dbg !6765
  call void @free(ptr noundef %106) #18, !dbg !6766
  store ptr null, ptr %3, align 8, !dbg !6767
  br label %107, !dbg !6767

107:                                              ; preds = %102, %99, %19
  %108 = load ptr, ptr %3, align 8, !dbg !6768
  ret ptr %108, !dbg !6768
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @destroy_realm_file(ptr noundef %0, ptr noundef %1) #0 !dbg !6769 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !6772, metadata !DIExpression()), !dbg !6773
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !6774, metadata !DIExpression()), !dbg !6775
  call void @llvm.dbg.declare(metadata ptr %5, metadata !6776, metadata !DIExpression()), !dbg !6777
  %6 = load ptr, ptr %3, align 8, !dbg !6778
  store ptr %6, ptr %5, align 8, !dbg !6777
  %7 = load ptr, ptr %5, align 8, !dbg !6779
  %8 = getelementptr inbounds %struct.realm_password_file_t, ptr %7, i32 0, i32 1, !dbg !6780
  %9 = load ptr, ptr %8, align 8, !dbg !6780
  call void @hash_free(ptr noundef %9), !dbg !6781
  %10 = load ptr, ptr %5, align 8, !dbg !6782
  call void @free(ptr noundef %10) #18, !dbg !6783
  ret void, !dbg !6784
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fourty_two_and_free(ptr noundef %0) #0 !dbg !6785 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !6786, metadata !DIExpression()), !dbg !6787
  %4 = load ptr, ptr %2, align 8, !dbg !6788
  %5 = icmp ne ptr %4, null, !dbg !6788
  %6 = xor i1 %5, true, !dbg !6788
  %7 = xor i1 %6, true, !dbg !6788
  %8 = zext i1 %7 to i32, !dbg !6788
  %9 = sext i32 %8 to i64, !dbg !6788
  %10 = icmp ne i64 %9, 0, !dbg !6788
  br i1 %10, label %11, label %22, !dbg !6790

11:                                               ; preds = %1
  call void @llvm.dbg.declare(metadata ptr %3, metadata !6791, metadata !DIExpression()), !dbg !6793
  %12 = load ptr, ptr %2, align 8, !dbg !6794
  store ptr %12, ptr %3, align 8, !dbg !6793
  br label %13, !dbg !6795

13:                                               ; preds = %17, %11
  %14 = load ptr, ptr %3, align 8, !dbg !6796
  %15 = load i8, ptr %14, align 1, !dbg !6797
  %16 = icmp ne i8 %15, 0, !dbg !6795
  br i1 %16, label %17, label %20, !dbg !6795

17:                                               ; preds = %13
  %18 = load ptr, ptr %3, align 8, !dbg !6798
  %19 = getelementptr inbounds i8, ptr %18, i32 1, !dbg !6798
  store ptr %19, ptr %3, align 8, !dbg !6798
  store i8 42, ptr %18, align 1, !dbg !6799
  br label %13, !dbg !6795, !llvm.loop !6800

20:                                               ; preds = %13
  %21 = load ptr, ptr %2, align 8, !dbg !6802
  call void @free(ptr noundef %21) #18, !dbg !6803
  br label %22, !dbg !6804

22:                                               ; preds = %20, %1
  ret void, !dbg !6805
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_http_authorize_shutdown() #0 !dbg !6806 {
  %1 = load ptr, ptr @realm_password_cache, align 8, !dbg !6807
  call void @cache_destroy(ptr noundef %1), !dbg !6808
  ret void, !dbg !6809
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @lwan_http_authorize(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 !dbg !338 {
  %5 = alloca i1, align 1
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  store ptr %0, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !6810, metadata !DIExpression()), !dbg !6811
  store ptr %1, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !6812, metadata !DIExpression()), !dbg !6813
  store ptr %2, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !6814, metadata !DIExpression()), !dbg !6815
  store ptr %3, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !6816, metadata !DIExpression()), !dbg !6817
  call void @llvm.dbg.declare(metadata ptr %10, metadata !6818, metadata !DIExpression()), !dbg !6819
  %11 = load ptr, ptr %7, align 8, !dbg !6820
  %12 = getelementptr inbounds %struct.lwan_value_t_, ptr %11, i32 0, i32 0, !dbg !6822
  %13 = load ptr, ptr %12, align 8, !dbg !6822
  %14 = icmp ne ptr %13, null, !dbg !6820
  br i1 %14, label %16, label %15, !dbg !6823

15:                                               ; preds = %4
  br label %43, !dbg !6824

16:                                               ; preds = %4
  %17 = load ptr, ptr %7, align 8, !dbg !6825
  %18 = getelementptr inbounds %struct.lwan_value_t_, ptr %17, i32 0, i32 0, !dbg !6825
  %19 = load ptr, ptr %18, align 8, !dbg !6825
  %20 = call i32 @strncmp(ptr noundef %19, ptr noundef @.str.37, i64 noundef 6) #22, !dbg !6825
  %21 = sext i32 %20 to i64, !dbg !6825
  %22 = icmp ne i64 %21, 0, !dbg !6825
  br i1 %22, label %23, label %24, !dbg !6827

23:                                               ; preds = %16
  br label %43, !dbg !6828

24:                                               ; preds = %16
  %25 = load ptr, ptr %7, align 8, !dbg !6829
  %26 = getelementptr inbounds %struct.lwan_value_t_, ptr %25, i32 0, i32 0, !dbg !6830
  %27 = load ptr, ptr %26, align 8, !dbg !6831
  %28 = getelementptr inbounds i8, ptr %27, i64 6, !dbg !6831
  store ptr %28, ptr %26, align 8, !dbg !6831
  %29 = load ptr, ptr %7, align 8, !dbg !6832
  %30 = getelementptr inbounds %struct.lwan_value_t_, ptr %29, i32 0, i32 1, !dbg !6833
  %31 = load i64, ptr %30, align 8, !dbg !6834
  %32 = sub i64 %31, 6, !dbg !6834
  store i64 %32, ptr %30, align 8, !dbg !6834
  %33 = load ptr, ptr %6, align 8, !dbg !6835
  %34 = getelementptr inbounds %struct.lwan_request_t_, ptr %33, i32 0, i32 4, !dbg !6837
  %35 = load ptr, ptr %34, align 8, !dbg !6837
  %36 = getelementptr inbounds %struct.lwan_connection_t_, ptr %35, i32 0, i32 2, !dbg !6838
  %37 = load ptr, ptr %36, align 8, !dbg !6838
  %38 = load ptr, ptr %7, align 8, !dbg !6839
  %39 = load ptr, ptr %9, align 8, !dbg !6840
  %40 = call zeroext i1 @authorize(ptr noundef %37, ptr noundef %38, ptr noundef %39), !dbg !6841
  br i1 %40, label %41, label %42, !dbg !6842

41:                                               ; preds = %24
  store i1 true, ptr %5, align 1, !dbg !6843
  br label %73, !dbg !6843

42:                                               ; preds = %24
  br label %43, !dbg !6844

43:                                               ; preds = %42, %23, %15
  call void @llvm.dbg.label(metadata !6845), !dbg !6846
  %44 = load ptr, ptr %6, align 8, !dbg !6847
  %45 = getelementptr inbounds %struct.lwan_request_t_, ptr %44, i32 0, i32 4, !dbg !6848
  %46 = load ptr, ptr %45, align 8, !dbg !6848
  %47 = getelementptr inbounds %struct.lwan_connection_t_, ptr %46, i32 0, i32 2, !dbg !6849
  %48 = load ptr, ptr %47, align 8, !dbg !6849
  %49 = call ptr @coro_malloc(ptr noundef %48, i64 noundef 32), !dbg !6850
  store ptr %49, ptr %10, align 8, !dbg !6851
  %50 = load ptr, ptr %10, align 8, !dbg !6852
  %51 = getelementptr inbounds %struct.list_node, ptr %50, i64 0, !dbg !6852
  %52 = getelementptr inbounds %struct.list_node, ptr %51, i32 0, i32 0, !dbg !6853
  store ptr @.str.1.38, ptr %52, align 8, !dbg !6854
  %53 = load ptr, ptr %6, align 8, !dbg !6855
  %54 = getelementptr inbounds %struct.lwan_request_t_, ptr %53, i32 0, i32 4, !dbg !6856
  %55 = load ptr, ptr %54, align 8, !dbg !6856
  %56 = getelementptr inbounds %struct.lwan_connection_t_, ptr %55, i32 0, i32 2, !dbg !6857
  %57 = load ptr, ptr %56, align 8, !dbg !6857
  %58 = load ptr, ptr %8, align 8, !dbg !6858
  %59 = call ptr (ptr, ptr, ...) @coro_printf(ptr noundef %57, ptr noundef @lwan_http_authorize.authenticate_tmpl, ptr noundef %58), !dbg !6859
  %60 = load ptr, ptr %10, align 8, !dbg !6860
  %61 = getelementptr inbounds %struct.list_node, ptr %60, i64 0, !dbg !6860
  %62 = getelementptr inbounds %struct.list_node, ptr %61, i32 0, i32 1, !dbg !6861
  store ptr %59, ptr %62, align 8, !dbg !6862
  %63 = load ptr, ptr %10, align 8, !dbg !6863
  %64 = getelementptr inbounds %struct.list_node, ptr %63, i64 1, !dbg !6863
  %65 = getelementptr inbounds %struct.list_node, ptr %64, i32 0, i32 1, !dbg !6864
  store ptr null, ptr %65, align 8, !dbg !6865
  %66 = load ptr, ptr %10, align 8, !dbg !6866
  %67 = getelementptr inbounds %struct.list_node, ptr %66, i64 1, !dbg !6866
  %68 = getelementptr inbounds %struct.list_node, ptr %67, i32 0, i32 0, !dbg !6867
  store ptr null, ptr %68, align 8, !dbg !6868
  %69 = load ptr, ptr %10, align 8, !dbg !6869
  %70 = load ptr, ptr %6, align 8, !dbg !6870
  %71 = getelementptr inbounds %struct.lwan_request_t_, ptr %70, i32 0, i32 8, !dbg !6871
  %72 = getelementptr inbounds %struct.lwan_response_t_, ptr %71, i32 0, i32 3, !dbg !6872
  store ptr %69, ptr %72, align 8, !dbg !6873
  store i1 false, ptr %5, align 1, !dbg !6874
  br label %73, !dbg !6874

73:                                               ; preds = %43, %41
  %74 = load i1, ptr %5, align 1, !dbg !6875
  ret i1 %74, !dbg !6875
}

; Function Attrs: nounwind willreturn memory(read)
declare i32 @strncmp(ptr noundef, ptr noundef, i64 noundef) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @authorize(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !6876 {
  %4 = alloca i1, align 1
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8, align 1
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !6879, metadata !DIExpression()), !dbg !6880
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !6881, metadata !DIExpression()), !dbg !6882
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !6883, metadata !DIExpression()), !dbg !6884
  call void @llvm.dbg.declare(metadata ptr %8, metadata !6885, metadata !DIExpression()), !dbg !6886
  call void @llvm.dbg.declare(metadata ptr %9, metadata !6887, metadata !DIExpression()), !dbg !6888
  call void @llvm.dbg.declare(metadata ptr %10, metadata !6889, metadata !DIExpression()), !dbg !6890
  call void @llvm.dbg.declare(metadata ptr %11, metadata !6891, metadata !DIExpression()), !dbg !6892
  call void @llvm.dbg.declare(metadata ptr %12, metadata !6893, metadata !DIExpression()), !dbg !6894
  call void @llvm.dbg.declare(metadata ptr %13, metadata !6895, metadata !DIExpression()), !dbg !6896
  call void @llvm.dbg.declare(metadata ptr %14, metadata !6897, metadata !DIExpression()), !dbg !6898
  store i8 0, ptr %14, align 1, !dbg !6898
  %15 = load ptr, ptr @realm_password_cache, align 8, !dbg !6899
  %16 = load ptr, ptr %5, align 8, !dbg !6900
  %17 = load ptr, ptr %7, align 8, !dbg !6901
  %18 = call ptr @cache_coro_get_and_ref_entry(ptr noundef %15, ptr noundef %16, ptr noundef %17), !dbg !6902
  store ptr %18, ptr %8, align 8, !dbg !6903
  %19 = load ptr, ptr %8, align 8, !dbg !6904
  %20 = icmp ne ptr %19, null, !dbg !6904
  %21 = xor i1 %20, true, !dbg !6904
  %22 = zext i1 %21 to i32, !dbg !6904
  %23 = sext i32 %22 to i64, !dbg !6904
  %24 = icmp ne i64 %23, 0, !dbg !6904
  br i1 %24, label %25, label %26, !dbg !6906

25:                                               ; preds = %3
  store i1 false, ptr %4, align 1, !dbg !6907
  br label %82, !dbg !6907

26:                                               ; preds = %3
  %27 = load ptr, ptr %6, align 8, !dbg !6908
  %28 = getelementptr inbounds %struct.lwan_value_t_, ptr %27, i32 0, i32 0, !dbg !6909
  %29 = load ptr, ptr %28, align 8, !dbg !6909
  %30 = load ptr, ptr %6, align 8, !dbg !6910
  %31 = getelementptr inbounds %struct.lwan_value_t_, ptr %30, i32 0, i32 1, !dbg !6911
  %32 = load i64, ptr %31, align 8, !dbg !6911
  %33 = call ptr @base64_decode(ptr noundef %29, i64 noundef %32, ptr noundef %13), !dbg !6912
  store ptr %33, ptr %9, align 8, !dbg !6913
  %34 = load ptr, ptr %9, align 8, !dbg !6914
  %35 = icmp ne ptr %34, null, !dbg !6914
  %36 = xor i1 %35, true, !dbg !6914
  %37 = zext i1 %36 to i32, !dbg !6914
  %38 = sext i32 %37 to i64, !dbg !6914
  %39 = icmp ne i64 %38, 0, !dbg !6914
  br i1 %39, label %40, label %41, !dbg !6916

40:                                               ; preds = %26
  store i1 false, ptr %4, align 1, !dbg !6917
  br label %82, !dbg !6917

41:                                               ; preds = %26
  %42 = load i64, ptr %13, align 8, !dbg !6918
  %43 = icmp uge i64 %42, 1024, !dbg !6918
  %44 = zext i1 %43 to i32, !dbg !6918
  %45 = sext i32 %44 to i64, !dbg !6918
  %46 = icmp ne i64 %45, 0, !dbg !6918
  br i1 %46, label %47, label %48, !dbg !6920

47:                                               ; preds = %41
  br label %78, !dbg !6921

48:                                               ; preds = %41
  %49 = load ptr, ptr %9, align 8, !dbg !6922
  %50 = load i64, ptr %13, align 8, !dbg !6923
  %51 = call ptr @memchr(ptr noundef %49, i32 noundef 58, i64 noundef %50) #22, !dbg !6924
  store ptr %51, ptr %10, align 8, !dbg !6925
  %52 = load ptr, ptr %10, align 8, !dbg !6926
  %53 = icmp ne ptr %52, null, !dbg !6926
  %54 = xor i1 %53, true, !dbg !6926
  %55 = zext i1 %54 to i32, !dbg !6926
  %56 = sext i32 %55 to i64, !dbg !6926
  %57 = icmp ne i64 %56, 0, !dbg !6926
  br i1 %57, label %58, label %59, !dbg !6928

58:                                               ; preds = %48
  br label %78, !dbg !6929

59:                                               ; preds = %48
  %60 = load ptr, ptr %10, align 8, !dbg !6930
  store i8 0, ptr %60, align 1, !dbg !6931
  %61 = load ptr, ptr %10, align 8, !dbg !6932
  %62 = getelementptr inbounds i8, ptr %61, i64 1, !dbg !6933
  store ptr %62, ptr %11, align 8, !dbg !6934
  %63 = load ptr, ptr %8, align 8, !dbg !6935
  %64 = getelementptr inbounds %struct.realm_password_file_t, ptr %63, i32 0, i32 1, !dbg !6936
  %65 = load ptr, ptr %64, align 8, !dbg !6936
  %66 = load ptr, ptr %9, align 8, !dbg !6937
  %67 = call ptr @hash_find(ptr noundef %65, ptr noundef %66), !dbg !6938
  store ptr %67, ptr %12, align 8, !dbg !6939
  %68 = load ptr, ptr %12, align 8, !dbg !6940
  %69 = icmp ne ptr %68, null, !dbg !6940
  br i1 %69, label %70, label %77, !dbg !6942

70:                                               ; preds = %59
  %71 = load ptr, ptr %11, align 8, !dbg !6943
  %72 = load ptr, ptr %12, align 8, !dbg !6944
  %73 = call i32 @strcmp(ptr noundef %71, ptr noundef %72) #22, !dbg !6945
  %74 = icmp ne i32 %73, 0, !dbg !6946
  %75 = xor i1 %74, true, !dbg !6946
  %76 = zext i1 %75 to i8, !dbg !6947
  store i8 %76, ptr %14, align 1, !dbg !6947
  br label %77, !dbg !6948

77:                                               ; preds = %70, %59
  br label %78, !dbg !6940

78:                                               ; preds = %77, %58, %47
  call void @llvm.dbg.label(metadata !6949), !dbg !6950
  %79 = load ptr, ptr %9, align 8, !dbg !6951
  call void @free(ptr noundef %79) #18, !dbg !6952
  %80 = load i8, ptr %14, align 1, !dbg !6953
  %81 = trunc i8 %80 to i1, !dbg !6953
  store i1 %81, ptr %4, align 1, !dbg !6954
  br label %82, !dbg !6954

82:                                               ; preds = %78, %40, %25
  %83 = load i1, ptr %4, align 1, !dbg !6955
  ret i1 %83, !dbg !6955
}

; Function Attrs: nounwind willreturn memory(read)
declare ptr @memchr(ptr noundef, i32 noundef, i64 noundef) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lwan_openat(ptr noundef %0, i32 noundef %1, ptr noundef %2, i32 noundef %3) #0 !dbg !6956 {
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store ptr %0, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !7094, metadata !DIExpression()), !dbg !7095
  store i32 %1, ptr %7, align 4
  call void @llvm.dbg.declare(metadata ptr %7, metadata !7096, metadata !DIExpression()), !dbg !7097
  store ptr %2, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !7098, metadata !DIExpression()), !dbg !7099
  store i32 %3, ptr %9, align 4
  call void @llvm.dbg.declare(metadata ptr %9, metadata !7100, metadata !DIExpression()), !dbg !7101
  call void @llvm.dbg.declare(metadata ptr %10, metadata !7102, metadata !DIExpression()), !dbg !7104
  store i32 5, ptr %10, align 4, !dbg !7104
  br label %12, !dbg !7105

12:                                               ; preds = %52, %4
  %13 = load i32, ptr %10, align 4, !dbg !7106
  %14 = icmp ne i32 %13, 0, !dbg !7108
  br i1 %14, label %15, label %55, !dbg !7108

15:                                               ; preds = %12
  call void @llvm.dbg.declare(metadata ptr %11, metadata !7109, metadata !DIExpression()), !dbg !7111
  %16 = load i32, ptr %7, align 4, !dbg !7112
  %17 = load ptr, ptr %8, align 8, !dbg !7113
  %18 = load i32, ptr %9, align 4, !dbg !7114
  %19 = call i32 (i32, ptr, i32, ...) @openat(i32 noundef %16, ptr noundef %17, i32 noundef %18), !dbg !7115
  store i32 %19, ptr %11, align 4, !dbg !7111
  %20 = load i32, ptr %11, align 4, !dbg !7116
  %21 = icmp sge i32 %20, 0, !dbg !7116
  %22 = xor i1 %21, true, !dbg !7116
  %23 = xor i1 %22, true, !dbg !7116
  %24 = zext i1 %23 to i32, !dbg !7116
  %25 = sext i32 %24 to i64, !dbg !7116
  %26 = icmp ne i64 %25, 0, !dbg !7116
  br i1 %26, label %27, label %37, !dbg !7118

27:                                               ; preds = %15
  %28 = load ptr, ptr %6, align 8, !dbg !7119
  %29 = getelementptr inbounds %struct.lwan_request_t_, ptr %28, i32 0, i32 4, !dbg !7121
  %30 = load ptr, ptr %29, align 8, !dbg !7121
  %31 = getelementptr inbounds %struct.lwan_connection_t_, ptr %30, i32 0, i32 2, !dbg !7122
  %32 = load ptr, ptr %31, align 8, !dbg !7122
  %33 = load i32, ptr %11, align 4, !dbg !7123
  %34 = sext i32 %33 to i64, !dbg !7124
  %35 = inttoptr i64 %34 to ptr, !dbg !7125
  call void @coro_defer(ptr noundef %32, ptr noundef @close, ptr noundef %35), !dbg !7126
  %36 = load i32, ptr %11, align 4, !dbg !7127
  store i32 %36, ptr %5, align 4, !dbg !7128
  br label %56, !dbg !7128

37:                                               ; preds = %15
  %38 = call ptr @__errno_location() #20, !dbg !7129
  %39 = load i32, ptr %38, align 4, !dbg !7129
  switch i32 %39, label %47 [
    i32 4, label %40
    i32 24, label %40
    i32 23, label %40
    i32 12, label %40
  ], !dbg !7130

40:                                               ; preds = %37, %37, %37, %37
  %41 = load ptr, ptr %6, align 8, !dbg !7131
  %42 = getelementptr inbounds %struct.lwan_request_t_, ptr %41, i32 0, i32 4, !dbg !7133
  %43 = load ptr, ptr %42, align 8, !dbg !7133
  %44 = getelementptr inbounds %struct.lwan_connection_t_, ptr %43, i32 0, i32 2, !dbg !7134
  %45 = load ptr, ptr %44, align 8, !dbg !7134
  %46 = call i32 @coro_yield(ptr noundef %45, i32 noundef 0), !dbg !7135
  br label %51, !dbg !7136

47:                                               ; preds = %37
  %48 = call ptr @__errno_location() #20, !dbg !7137
  %49 = load i32, ptr %48, align 4, !dbg !7137
  %50 = sub nsw i32 0, %49, !dbg !7138
  store i32 %50, ptr %5, align 4, !dbg !7139
  br label %56, !dbg !7139

51:                                               ; preds = %40
  br label %52, !dbg !7140

52:                                               ; preds = %51
  %53 = load i32, ptr %10, align 4, !dbg !7141
  %54 = add nsw i32 %53, -1, !dbg !7141
  store i32 %54, ptr %10, align 4, !dbg !7141
  br label %12, !dbg !7142, !llvm.loop !7143

55:                                               ; preds = %12
  store i32 -23, ptr %5, align 4, !dbg !7145
  br label %56, !dbg !7145

56:                                               ; preds = %55, %47, %27
  %57 = load i32, ptr %5, align 4, !dbg !7146
  ret i32 %57, !dbg !7146
}

declare i32 @openat(i32 noundef, ptr noundef, i32 noundef, ...) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @lwan_writev(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 !dbg !7147 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !7156, metadata !DIExpression()), !dbg !7157
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !7158, metadata !DIExpression()), !dbg !7159
  store i32 %2, ptr %6, align 4
  call void @llvm.dbg.declare(metadata ptr %6, metadata !7160, metadata !DIExpression()), !dbg !7161
  call void @llvm.dbg.declare(metadata ptr %7, metadata !7162, metadata !DIExpression()), !dbg !7163
  store i64 0, ptr %7, align 8, !dbg !7163
  call void @llvm.dbg.declare(metadata ptr %8, metadata !7164, metadata !DIExpression()), !dbg !7165
  store i32 0, ptr %8, align 4, !dbg !7165
  call void @llvm.dbg.declare(metadata ptr %9, metadata !7166, metadata !DIExpression()), !dbg !7168
  store i32 5, ptr %9, align 4, !dbg !7168
  br label %11, !dbg !7169

11:                                               ; preds = %96, %3
  %12 = load i32, ptr %9, align 4, !dbg !7170
  %13 = icmp ne i32 %12, 0, !dbg !7172
  br i1 %13, label %14, label %103, !dbg !7172

14:                                               ; preds = %11
  call void @llvm.dbg.declare(metadata ptr %10, metadata !7173, metadata !DIExpression()), !dbg !7175
  %15 = load ptr, ptr %4, align 8, !dbg !7176
  %16 = getelementptr inbounds %struct.lwan_request_t_, ptr %15, i32 0, i32 1, !dbg !7177
  %17 = load i32, ptr %16, align 4, !dbg !7177
  %18 = load ptr, ptr %5, align 8, !dbg !7178
  %19 = load i32, ptr %8, align 4, !dbg !7179
  %20 = sext i32 %19 to i64, !dbg !7180
  %21 = getelementptr inbounds %struct.lwan_value_t_, ptr %18, i64 %20, !dbg !7180
  %22 = load i32, ptr %6, align 4, !dbg !7181
  %23 = load i32, ptr %8, align 4, !dbg !7182
  %24 = sub nsw i32 %22, %23, !dbg !7183
  %25 = call i64 @writev(i32 noundef %17, ptr noundef %21, i32 noundef %24), !dbg !7184
  store i64 %25, ptr %10, align 8, !dbg !7175
  %26 = load i64, ptr %10, align 8, !dbg !7185
  %27 = icmp slt i64 %26, 0, !dbg !7185
  %28 = zext i1 %27 to i32, !dbg !7185
  %29 = sext i32 %28 to i64, !dbg !7185
  %30 = icmp ne i64 %29, 0, !dbg !7185
  br i1 %30, label %31, label %38, !dbg !7187

31:                                               ; preds = %14
  %32 = load i32, ptr %9, align 4, !dbg !7188
  %33 = add nsw i32 %32, -1, !dbg !7188
  store i32 %33, ptr %9, align 4, !dbg !7188
  %34 = call ptr @__errno_location() #20, !dbg !7190
  %35 = load i32, ptr %34, align 4, !dbg !7190
  switch i32 %35, label %37 [
    i32 11, label %36
    i32 4, label %36
  ], !dbg !7191

36:                                               ; preds = %31, %31
  br label %96, !dbg !7192

37:                                               ; preds = %31
  br label %104, !dbg !7194

38:                                               ; preds = %14
  %39 = load i64, ptr %10, align 8, !dbg !7195
  %40 = load i64, ptr %7, align 8, !dbg !7196
  %41 = add nsw i64 %40, %39, !dbg !7196
  store i64 %41, ptr %7, align 8, !dbg !7196
  br label %42, !dbg !7197

42:                                               ; preds = %57, %38
  %43 = load i32, ptr %8, align 4, !dbg !7198
  %44 = load i32, ptr %6, align 4, !dbg !7199
  %45 = icmp slt i32 %43, %44, !dbg !7200
  br i1 %45, label %46, label %55, !dbg !7201

46:                                               ; preds = %42
  %47 = load i64, ptr %10, align 8, !dbg !7202
  %48 = load ptr, ptr %5, align 8, !dbg !7203
  %49 = load i32, ptr %8, align 4, !dbg !7204
  %50 = sext i32 %49 to i64, !dbg !7203
  %51 = getelementptr inbounds %struct.lwan_value_t_, ptr %48, i64 %50, !dbg !7203
  %52 = getelementptr inbounds %struct.lwan_value_t_, ptr %51, i32 0, i32 1, !dbg !7205
  %53 = load i64, ptr %52, align 8, !dbg !7205
  %54 = icmp sge i64 %47, %53, !dbg !7206
  br label %55

55:                                               ; preds = %46, %42
  %56 = phi i1 [ false, %42 ], [ %54, %46 ], !dbg !7207
  br i1 %56, label %57, label %68, !dbg !7197

57:                                               ; preds = %55
  %58 = load ptr, ptr %5, align 8, !dbg !7208
  %59 = load i32, ptr %8, align 4, !dbg !7210
  %60 = sext i32 %59 to i64, !dbg !7208
  %61 = getelementptr inbounds %struct.lwan_value_t_, ptr %58, i64 %60, !dbg !7208
  %62 = getelementptr inbounds %struct.lwan_value_t_, ptr %61, i32 0, i32 1, !dbg !7211
  %63 = load i64, ptr %62, align 8, !dbg !7211
  %64 = load i64, ptr %10, align 8, !dbg !7212
  %65 = sub nsw i64 %64, %63, !dbg !7212
  store i64 %65, ptr %10, align 8, !dbg !7212
  %66 = load i32, ptr %8, align 4, !dbg !7213
  %67 = add nsw i32 %66, 1, !dbg !7213
  store i32 %67, ptr %8, align 4, !dbg !7213
  br label %42, !dbg !7197, !llvm.loop !7214

68:                                               ; preds = %55
  %69 = load i32, ptr %8, align 4, !dbg !7216
  %70 = load i32, ptr %6, align 4, !dbg !7218
  %71 = icmp eq i32 %69, %70, !dbg !7219
  br i1 %71, label %72, label %74, !dbg !7220

72:                                               ; preds = %68
  %73 = load i64, ptr %7, align 8, !dbg !7221
  ret i64 %73, !dbg !7222

74:                                               ; preds = %68
  %75 = load ptr, ptr %5, align 8, !dbg !7223
  %76 = load i32, ptr %8, align 4, !dbg !7224
  %77 = sext i32 %76 to i64, !dbg !7223
  %78 = getelementptr inbounds %struct.lwan_value_t_, ptr %75, i64 %77, !dbg !7223
  %79 = getelementptr inbounds %struct.lwan_value_t_, ptr %78, i32 0, i32 0, !dbg !7225
  %80 = load ptr, ptr %79, align 8, !dbg !7225
  %81 = load i64, ptr %10, align 8, !dbg !7226
  %82 = getelementptr inbounds i8, ptr %80, i64 %81, !dbg !7227
  %83 = load ptr, ptr %5, align 8, !dbg !7228
  %84 = load i32, ptr %8, align 4, !dbg !7229
  %85 = sext i32 %84 to i64, !dbg !7228
  %86 = getelementptr inbounds %struct.lwan_value_t_, ptr %83, i64 %85, !dbg !7228
  %87 = getelementptr inbounds %struct.lwan_value_t_, ptr %86, i32 0, i32 0, !dbg !7230
  store ptr %82, ptr %87, align 8, !dbg !7231
  %88 = load i64, ptr %10, align 8, !dbg !7232
  %89 = load ptr, ptr %5, align 8, !dbg !7233
  %90 = load i32, ptr %8, align 4, !dbg !7234
  %91 = sext i32 %90 to i64, !dbg !7233
  %92 = getelementptr inbounds %struct.lwan_value_t_, ptr %89, i64 %91, !dbg !7233
  %93 = getelementptr inbounds %struct.lwan_value_t_, ptr %92, i32 0, i32 1, !dbg !7235
  %94 = load i64, ptr %93, align 8, !dbg !7236
  %95 = sub i64 %94, %88, !dbg !7236
  store i64 %95, ptr %93, align 8, !dbg !7236
  br label %96, !dbg !7233

96:                                               ; preds = %74, %36
  call void @llvm.dbg.label(metadata !7237), !dbg !7238
  %97 = load ptr, ptr %4, align 8, !dbg !7239
  %98 = getelementptr inbounds %struct.lwan_request_t_, ptr %97, i32 0, i32 4, !dbg !7240
  %99 = load ptr, ptr %98, align 8, !dbg !7240
  %100 = getelementptr inbounds %struct.lwan_connection_t_, ptr %99, i32 0, i32 2, !dbg !7241
  %101 = load ptr, ptr %100, align 8, !dbg !7241
  %102 = call i32 @coro_yield(ptr noundef %101, i32 noundef 0), !dbg !7242
  br label %11, !dbg !7243, !llvm.loop !7244

103:                                              ; preds = %11
  br label %104, !dbg !7245

104:                                              ; preds = %103, %37
  call void @llvm.dbg.label(metadata !7246), !dbg !7247
  %105 = load ptr, ptr %4, align 8, !dbg !7248
  %106 = getelementptr inbounds %struct.lwan_request_t_, ptr %105, i32 0, i32 4, !dbg !7249
  %107 = load ptr, ptr %106, align 8, !dbg !7249
  %108 = getelementptr inbounds %struct.lwan_connection_t_, ptr %107, i32 0, i32 2, !dbg !7250
  %109 = load ptr, ptr %108, align 8, !dbg !7250
  %110 = call i32 @coro_yield(ptr noundef %109, i32 noundef -1), !dbg !7251
  unreachable, !dbg !7252
}

declare i64 @writev(i32 noundef, ptr noundef, i32 noundef) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @lwan_write(ptr noundef %0, ptr noundef %1, i64 noundef %2) #0 !dbg !7253 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !7256, metadata !DIExpression()), !dbg !7257
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !7258, metadata !DIExpression()), !dbg !7259
  store i64 %2, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !7260, metadata !DIExpression()), !dbg !7261
  call void @llvm.dbg.declare(metadata ptr %7, metadata !7262, metadata !DIExpression()), !dbg !7263
  store i64 0, ptr %7, align 8, !dbg !7263
  call void @llvm.dbg.declare(metadata ptr %8, metadata !7264, metadata !DIExpression()), !dbg !7266
  store i32 5, ptr %8, align 4, !dbg !7266
  br label %10, !dbg !7267

10:                                               ; preds = %50, %3
  %11 = load i32, ptr %8, align 4, !dbg !7268
  %12 = icmp ne i32 %11, 0, !dbg !7270
  br i1 %12, label %13, label %57, !dbg !7270

13:                                               ; preds = %10
  call void @llvm.dbg.declare(metadata ptr %9, metadata !7271, metadata !DIExpression()), !dbg !7273
  %14 = load ptr, ptr %4, align 8, !dbg !7274
  %15 = getelementptr inbounds %struct.lwan_request_t_, ptr %14, i32 0, i32 1, !dbg !7275
  %16 = load i32, ptr %15, align 4, !dbg !7275
  %17 = load ptr, ptr %5, align 8, !dbg !7276
  %18 = load i64, ptr %6, align 8, !dbg !7277
  %19 = call i64 @write(i32 noundef %16, ptr noundef %17, i64 noundef %18), !dbg !7278
  store i64 %19, ptr %9, align 8, !dbg !7273
  %20 = load i64, ptr %9, align 8, !dbg !7279
  %21 = icmp slt i64 %20, 0, !dbg !7279
  %22 = zext i1 %21 to i32, !dbg !7279
  %23 = sext i32 %22 to i64, !dbg !7279
  %24 = icmp ne i64 %23, 0, !dbg !7279
  br i1 %24, label %25, label %32, !dbg !7281

25:                                               ; preds = %13
  %26 = load i32, ptr %8, align 4, !dbg !7282
  %27 = add nsw i32 %26, -1, !dbg !7282
  store i32 %27, ptr %8, align 4, !dbg !7282
  %28 = call ptr @__errno_location() #20, !dbg !7284
  %29 = load i32, ptr %28, align 4, !dbg !7284
  switch i32 %29, label %31 [
    i32 11, label %30
    i32 4, label %30
  ], !dbg !7285

30:                                               ; preds = %25, %25
  br label %50, !dbg !7286

31:                                               ; preds = %25
  br label %58, !dbg !7288

32:                                               ; preds = %13
  %33 = load i64, ptr %9, align 8, !dbg !7289
  %34 = load i64, ptr %7, align 8, !dbg !7290
  %35 = add nsw i64 %34, %33, !dbg !7290
  store i64 %35, ptr %7, align 8, !dbg !7290
  %36 = load i64, ptr %7, align 8, !dbg !7291
  %37 = load i64, ptr %6, align 8, !dbg !7293
  %38 = icmp eq i64 %36, %37, !dbg !7294
  br i1 %38, label %39, label %41, !dbg !7295

39:                                               ; preds = %32
  %40 = load i64, ptr %7, align 8, !dbg !7296
  ret i64 %40, !dbg !7297

41:                                               ; preds = %32
  %42 = load i64, ptr %7, align 8, !dbg !7298
  %43 = load i64, ptr %6, align 8, !dbg !7300
  %44 = icmp ult i64 %42, %43, !dbg !7301
  br i1 %44, label %45, label %49, !dbg !7302

45:                                               ; preds = %41
  %46 = load ptr, ptr %5, align 8, !dbg !7303
  %47 = load i64, ptr %9, align 8, !dbg !7304
  %48 = getelementptr inbounds i8, ptr %46, i64 %47, !dbg !7305
  store ptr %48, ptr %5, align 8, !dbg !7306
  br label %49, !dbg !7307

49:                                               ; preds = %45, %41
  br label %50, !dbg !7300

50:                                               ; preds = %49, %30
  call void @llvm.dbg.label(metadata !7308), !dbg !7309
  %51 = load ptr, ptr %4, align 8, !dbg !7310
  %52 = getelementptr inbounds %struct.lwan_request_t_, ptr %51, i32 0, i32 4, !dbg !7311
  %53 = load ptr, ptr %52, align 8, !dbg !7311
  %54 = getelementptr inbounds %struct.lwan_connection_t_, ptr %53, i32 0, i32 2, !dbg !7312
  %55 = load ptr, ptr %54, align 8, !dbg !7312
  %56 = call i32 @coro_yield(ptr noundef %55, i32 noundef 0), !dbg !7313
  br label %10, !dbg !7314, !llvm.loop !7315

57:                                               ; preds = %10
  br label %58, !dbg !7316

58:                                               ; preds = %57, %31
  call void @llvm.dbg.label(metadata !7317), !dbg !7318
  %59 = load ptr, ptr %4, align 8, !dbg !7319
  %60 = getelementptr inbounds %struct.lwan_request_t_, ptr %59, i32 0, i32 4, !dbg !7320
  %61 = load ptr, ptr %60, align 8, !dbg !7320
  %62 = getelementptr inbounds %struct.lwan_connection_t_, ptr %61, i32 0, i32 2, !dbg !7321
  %63 = load ptr, ptr %62, align 8, !dbg !7321
  %64 = call i32 @coro_yield(ptr noundef %63, i32 noundef -1), !dbg !7322
  unreachable, !dbg !7323
}

declare i64 @write(i32 noundef, ptr noundef, i64 noundef) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @lwan_send(ptr noundef %0, ptr noundef %1, i64 noundef %2, i32 noundef %3) #0 !dbg !7324 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !7327, metadata !DIExpression()), !dbg !7328
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !7329, metadata !DIExpression()), !dbg !7330
  store i64 %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !7331, metadata !DIExpression()), !dbg !7332
  store i32 %3, ptr %8, align 4
  call void @llvm.dbg.declare(metadata ptr %8, metadata !7333, metadata !DIExpression()), !dbg !7334
  call void @llvm.dbg.declare(metadata ptr %9, metadata !7335, metadata !DIExpression()), !dbg !7336
  store i64 0, ptr %9, align 8, !dbg !7336
  call void @llvm.dbg.declare(metadata ptr %10, metadata !7337, metadata !DIExpression()), !dbg !7339
  store i32 5, ptr %10, align 4, !dbg !7339
  br label %12, !dbg !7340

12:                                               ; preds = %53, %4
  %13 = load i32, ptr %10, align 4, !dbg !7341
  %14 = icmp ne i32 %13, 0, !dbg !7343
  br i1 %14, label %15, label %60, !dbg !7343

15:                                               ; preds = %12
  call void @llvm.dbg.declare(metadata ptr %11, metadata !7344, metadata !DIExpression()), !dbg !7346
  %16 = load ptr, ptr %5, align 8, !dbg !7347
  %17 = getelementptr inbounds %struct.lwan_request_t_, ptr %16, i32 0, i32 1, !dbg !7348
  %18 = load i32, ptr %17, align 4, !dbg !7348
  %19 = load ptr, ptr %6, align 8, !dbg !7349
  %20 = load i64, ptr %7, align 8, !dbg !7350
  %21 = load i32, ptr %8, align 4, !dbg !7351
  %22 = call i64 @send(i32 noundef %18, ptr noundef %19, i64 noundef %20, i32 noundef %21), !dbg !7352
  store i64 %22, ptr %11, align 8, !dbg !7346
  %23 = load i64, ptr %11, align 8, !dbg !7353
  %24 = icmp slt i64 %23, 0, !dbg !7353
  %25 = zext i1 %24 to i32, !dbg !7353
  %26 = sext i32 %25 to i64, !dbg !7353
  %27 = icmp ne i64 %26, 0, !dbg !7353
  br i1 %27, label %28, label %35, !dbg !7355

28:                                               ; preds = %15
  %29 = load i32, ptr %10, align 4, !dbg !7356
  %30 = add nsw i32 %29, -1, !dbg !7356
  store i32 %30, ptr %10, align 4, !dbg !7356
  %31 = call ptr @__errno_location() #20, !dbg !7358
  %32 = load i32, ptr %31, align 4, !dbg !7358
  switch i32 %32, label %34 [
    i32 11, label %33
    i32 4, label %33
  ], !dbg !7359

33:                                               ; preds = %28, %28
  br label %53, !dbg !7360

34:                                               ; preds = %28
  br label %61, !dbg !7362

35:                                               ; preds = %15
  %36 = load i64, ptr %11, align 8, !dbg !7363
  %37 = load i64, ptr %9, align 8, !dbg !7364
  %38 = add nsw i64 %37, %36, !dbg !7364
  store i64 %38, ptr %9, align 8, !dbg !7364
  %39 = load i64, ptr %9, align 8, !dbg !7365
  %40 = load i64, ptr %7, align 8, !dbg !7367
  %41 = icmp eq i64 %39, %40, !dbg !7368
  br i1 %41, label %42, label %44, !dbg !7369

42:                                               ; preds = %35
  %43 = load i64, ptr %9, align 8, !dbg !7370
  ret i64 %43, !dbg !7371

44:                                               ; preds = %35
  %45 = load i64, ptr %9, align 8, !dbg !7372
  %46 = load i64, ptr %7, align 8, !dbg !7374
  %47 = icmp ult i64 %45, %46, !dbg !7375
  br i1 %47, label %48, label %52, !dbg !7376

48:                                               ; preds = %44
  %49 = load ptr, ptr %6, align 8, !dbg !7377
  %50 = load i64, ptr %11, align 8, !dbg !7378
  %51 = getelementptr inbounds i8, ptr %49, i64 %50, !dbg !7379
  store ptr %51, ptr %6, align 8, !dbg !7380
  br label %52, !dbg !7381

52:                                               ; preds = %48, %44
  br label %53, !dbg !7374

53:                                               ; preds = %52, %33
  call void @llvm.dbg.label(metadata !7382), !dbg !7383
  %54 = load ptr, ptr %5, align 8, !dbg !7384
  %55 = getelementptr inbounds %struct.lwan_request_t_, ptr %54, i32 0, i32 4, !dbg !7385
  %56 = load ptr, ptr %55, align 8, !dbg !7385
  %57 = getelementptr inbounds %struct.lwan_connection_t_, ptr %56, i32 0, i32 2, !dbg !7386
  %58 = load ptr, ptr %57, align 8, !dbg !7386
  %59 = call i32 @coro_yield(ptr noundef %58, i32 noundef 0), !dbg !7387
  br label %12, !dbg !7388, !llvm.loop !7389

60:                                               ; preds = %12
  br label %61, !dbg !7390

61:                                               ; preds = %60, %34
  call void @llvm.dbg.label(metadata !7391), !dbg !7392
  %62 = load ptr, ptr %5, align 8, !dbg !7393
  %63 = getelementptr inbounds %struct.lwan_request_t_, ptr %62, i32 0, i32 4, !dbg !7394
  %64 = load ptr, ptr %63, align 8, !dbg !7394
  %65 = getelementptr inbounds %struct.lwan_connection_t_, ptr %64, i32 0, i32 2, !dbg !7395
  %66 = load ptr, ptr %65, align 8, !dbg !7395
  %67 = call i32 @coro_yield(ptr noundef %66, i32 noundef -1), !dbg !7396
  unreachable, !dbg !7397
}

declare i64 @send(i32 noundef, ptr noundef, i64 noundef, i32 noundef) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @lwan_sendfile(ptr noundef %0, i32 noundef %1, i64 noundef %2, i64 noundef %3) #0 !dbg !7398 {
  %5 = alloca i64, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca ptr, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  %24 = alloca ptr, align 8
  %25 = alloca i32, align 4
  %26 = alloca i64, align 8
  %27 = alloca i64, align 8
  %28 = alloca i64, align 8
  store ptr %0, ptr %24, align 8
  call void @llvm.dbg.declare(metadata ptr %24, metadata !7401, metadata !DIExpression()), !dbg !7402
  store i32 %1, ptr %25, align 4
  call void @llvm.dbg.declare(metadata ptr %25, metadata !7403, metadata !DIExpression()), !dbg !7404
  store i64 %2, ptr %26, align 8
  call void @llvm.dbg.declare(metadata ptr %26, metadata !7405, metadata !DIExpression()), !dbg !7406
  store i64 %3, ptr %27, align 8
  call void @llvm.dbg.declare(metadata ptr %27, metadata !7407, metadata !DIExpression()), !dbg !7408
  %29 = load i64, ptr %27, align 8, !dbg !7409
  %30 = icmp ugt i64 %29, 7000, !dbg !7411
  br i1 %30, label %31, label %42, !dbg !7412

31:                                               ; preds = %4
  %32 = load i32, ptr %25, align 4, !dbg !7413
  %33 = load i64, ptr %26, align 8, !dbg !7413
  %34 = load i64, ptr %27, align 8, !dbg !7413
  %35 = call i32 @posix_fadvise(i32 noundef %32, i64 noundef %33, i64 noundef %34, i32 noundef 2) #18, !dbg !7413
  %36 = icmp slt i32 %35, 0, !dbg !7413
  %37 = zext i1 %36 to i32, !dbg !7413
  %38 = sext i32 %37 to i64, !dbg !7413
  %39 = icmp ne i64 %38, 0, !dbg !7413
  br i1 %39, label %40, label %41, !dbg !7416

40:                                               ; preds = %31
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.39, i32 noundef 240, ptr noundef @__FUNCTION__.lwan_sendfile, ptr noundef @.str.1.40), !dbg !7417
  br label %41, !dbg !7417

41:                                               ; preds = %40, %31
  br label %42, !dbg !7418

42:                                               ; preds = %41, %4
  call void @llvm.dbg.declare(metadata ptr %28, metadata !7419, metadata !DIExpression()), !dbg !7420
  %43 = load ptr, ptr %24, align 8, !dbg !7421
  %44 = getelementptr inbounds %struct.lwan_request_t_, ptr %43, i32 0, i32 4, !dbg !7422
  %45 = load ptr, ptr %44, align 8, !dbg !7422
  %46 = getelementptr inbounds %struct.lwan_connection_t_, ptr %45, i32 0, i32 2, !dbg !7423
  %47 = load ptr, ptr %46, align 8, !dbg !7423
  %48 = load i32, ptr %25, align 4, !dbg !7424
  %49 = load ptr, ptr %24, align 8, !dbg !7425
  %50 = getelementptr inbounds %struct.lwan_request_t_, ptr %49, i32 0, i32 1, !dbg !7426
  %51 = load i32, ptr %50, align 4, !dbg !7426
  %52 = load i64, ptr %26, align 8, !dbg !7427
  %53 = load i64, ptr %27, align 8, !dbg !7428
  store ptr %47, ptr %15, align 8
  call void @llvm.dbg.declare(metadata ptr %15, metadata !7429, metadata !DIExpression()), !dbg !7433
  store i32 %48, ptr %16, align 4
  call void @llvm.dbg.declare(metadata ptr %16, metadata !7435, metadata !DIExpression()), !dbg !7436
  store i32 %51, ptr %17, align 4
  call void @llvm.dbg.declare(metadata ptr %17, metadata !7437, metadata !DIExpression()), !dbg !7438
  store i64 %52, ptr %18, align 8
  call void @llvm.dbg.declare(metadata ptr %18, metadata !7439, metadata !DIExpression()), !dbg !7440
  store i64 %53, ptr %19, align 8
  call void @llvm.dbg.declare(metadata ptr %19, metadata !7441, metadata !DIExpression()), !dbg !7442
  call void @llvm.dbg.declare(metadata ptr %20, metadata !7443, metadata !DIExpression()), !dbg !7444
  store i64 0, ptr %20, align 8, !dbg !7444
  call void @llvm.dbg.declare(metadata ptr %21, metadata !7445, metadata !DIExpression()), !dbg !7446
  %54 = load i64, ptr %19, align 8, !dbg !7447
  store i64 %54, ptr %21, align 8, !dbg !7446
  br label %55, !dbg !7448

55:                                               ; preds = %80, %42
  call void @llvm.dbg.declare(metadata ptr %22, metadata !7449, metadata !DIExpression()), !dbg !7451
  %56 = load i32, ptr %17, align 4, !dbg !7452
  %57 = load i32, ptr %16, align 4, !dbg !7453
  %58 = load i64, ptr %21, align 8, !dbg !7454
  %59 = call i64 @sendfile(i32 noundef %56, i32 noundef %57, ptr noundef %18, i64 noundef %58) #18, !dbg !7455
  store i64 %59, ptr %22, align 8, !dbg !7451
  %60 = load i64, ptr %22, align 8, !dbg !7456
  %61 = icmp slt i64 %60, 0, !dbg !7458
  br i1 %61, label %62, label %71, !dbg !7459

62:                                               ; preds = %55
  %63 = call ptr @__errno_location() #20, !dbg !7460
  %64 = load i32, ptr %63, align 4, !dbg !7460
  switch i32 %64, label %68 [
    i32 11, label %65
    i32 4, label %65
  ], !dbg !7462

65:                                               ; preds = %62, %62
  %66 = load ptr, ptr %15, align 8, !dbg !7463
  %67 = call i32 @coro_yield(ptr noundef %66, i32 noundef 0) #18, !dbg !7465
  br label %80, !dbg !7466

68:                                               ; preds = %62
  %69 = load ptr, ptr %15, align 8, !dbg !7467
  %70 = call i32 @coro_yield(ptr noundef %69, i32 noundef -1) #18, !dbg !7468
  unreachable, !dbg !7469

71:                                               ; preds = %55
  %72 = load i64, ptr %22, align 8, !dbg !7470
  %73 = load i64, ptr %20, align 8, !dbg !7471
  %74 = add i64 %73, %72, !dbg !7471
  store i64 %74, ptr %20, align 8, !dbg !7471
  %75 = load i64, ptr %22, align 8, !dbg !7472
  %76 = load i64, ptr %21, align 8, !dbg !7473
  %77 = sub i64 %76, %75, !dbg !7473
  store i64 %77, ptr %21, align 8, !dbg !7473
  %78 = load ptr, ptr %15, align 8, !dbg !7474
  %79 = call i32 @coro_yield(ptr noundef %78, i32 noundef 0) #18, !dbg !7475
  br label %80, !dbg !7476

80:                                               ; preds = %71, %65
  %81 = load i64, ptr %21, align 8, !dbg !7477
  %82 = icmp ugt i64 %81, 0, !dbg !7478
  br i1 %82, label %55, label %83, !dbg !7476, !llvm.loop !7479

83:                                               ; preds = %80
  %84 = load i64, ptr %20, align 8, !dbg !7481
  store i64 %84, ptr %28, align 8, !dbg !7420
  %85 = load i64, ptr %28, align 8, !dbg !7482
  %86 = icmp slt i64 %85, 0, !dbg !7482
  %87 = zext i1 %86 to i32, !dbg !7482
  %88 = sext i32 %87 to i64, !dbg !7482
  %89 = icmp ne i64 %88, 0, !dbg !7482
  br i1 %89, label %90, label %152, !dbg !7484

90:                                               ; preds = %83
  %91 = call ptr @__errno_location() #20, !dbg !7485
  %92 = load i32, ptr %91, align 4, !dbg !7485
  switch i32 %92, label %151 [
    i32 38, label %93
    i32 22, label %93
  ], !dbg !7487

93:                                               ; preds = %90, %90
  %94 = load ptr, ptr %24, align 8, !dbg !7488
  %95 = getelementptr inbounds %struct.lwan_request_t_, ptr %94, i32 0, i32 4, !dbg !7490
  %96 = load ptr, ptr %95, align 8, !dbg !7490
  %97 = getelementptr inbounds %struct.lwan_connection_t_, ptr %96, i32 0, i32 2, !dbg !7491
  %98 = load ptr, ptr %97, align 8, !dbg !7491
  %99 = load i32, ptr %25, align 4, !dbg !7492
  %100 = load ptr, ptr %24, align 8, !dbg !7493
  %101 = getelementptr inbounds %struct.lwan_request_t_, ptr %100, i32 0, i32 1, !dbg !7494
  %102 = load i32, ptr %101, align 4, !dbg !7494
  %103 = load i64, ptr %26, align 8, !dbg !7495
  %104 = load i64, ptr %27, align 8, !dbg !7496
  store ptr %98, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !7497, metadata !DIExpression()), !dbg !7499
  store i32 %99, ptr %7, align 4
  call void @llvm.dbg.declare(metadata ptr %7, metadata !7501, metadata !DIExpression()), !dbg !7502
  store i32 %102, ptr %8, align 4
  call void @llvm.dbg.declare(metadata ptr %8, metadata !7503, metadata !DIExpression()), !dbg !7504
  store i64 %103, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !7505, metadata !DIExpression()), !dbg !7506
  store i64 %104, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %10, metadata !7507, metadata !DIExpression()), !dbg !7508
  call void @llvm.dbg.declare(metadata ptr %11, metadata !7509, metadata !DIExpression()), !dbg !7510
  store i64 0, ptr %11, align 8, !dbg !7510
  call void @llvm.dbg.declare(metadata ptr %12, metadata !7511, metadata !DIExpression()), !dbg !7512
  %105 = load ptr, ptr %6, align 8, !dbg !7513
  %106 = call ptr @coro_malloc(ptr noundef %105, i64 noundef 1400) #18, !dbg !7514
  store ptr %106, ptr %12, align 8, !dbg !7512
  %107 = load i64, ptr %9, align 8, !dbg !7515
  %108 = icmp ne i64 %107, 0, !dbg !7515
  br i1 %108, label %109, label %115, !dbg !7517

109:                                              ; preds = %93
  %110 = load i32, ptr %7, align 4, !dbg !7518
  %111 = load i64, ptr %9, align 8, !dbg !7519
  %112 = call i64 @lseek(i32 noundef %110, i64 noundef %111, i32 noundef 0) #18, !dbg !7520
  %113 = icmp slt i64 %112, 0, !dbg !7521
  br i1 %113, label %114, label %115, !dbg !7522

114:                                              ; preds = %109
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.39, i32 noundef 179, ptr noundef @__FUNCTION__.sendfile_read_write, ptr noundef @.str.2.41) #18, !dbg !7523
  store i64 -1, ptr %5, align 8, !dbg !7525
  br label %149, !dbg !7525

115:                                              ; preds = %109, %93
  br label %116, !dbg !7526

116:                                              ; preds = %138, %115
  %117 = load i64, ptr %10, align 8, !dbg !7527
  %118 = icmp ugt i64 %117, 0, !dbg !7528
  br i1 %118, label %119, label %147, !dbg !7526

119:                                              ; preds = %116
  call void @llvm.dbg.declare(metadata ptr %13, metadata !7529, metadata !DIExpression()), !dbg !7531
  %120 = load i32, ptr %7, align 4, !dbg !7532
  %121 = load ptr, ptr %12, align 8, !dbg !7533
  %122 = call i64 @read(i32 noundef %120, ptr noundef %121, i64 noundef 1400) #18, !dbg !7534
  store i64 %122, ptr %13, align 8, !dbg !7531
  %123 = load i64, ptr %13, align 8, !dbg !7535
  %124 = icmp slt i64 %123, 0, !dbg !7537
  br i1 %124, label %125, label %128, !dbg !7538

125:                                              ; preds = %119
  %126 = load ptr, ptr %6, align 8, !dbg !7539
  %127 = call i32 @coro_yield(ptr noundef %126, i32 noundef -1) #18, !dbg !7541
  unreachable, !dbg !7542

128:                                              ; preds = %119
  call void @llvm.dbg.declare(metadata ptr %14, metadata !7543, metadata !DIExpression()), !dbg !7544
  %129 = load i32, ptr %8, align 4, !dbg !7545
  %130 = load ptr, ptr %12, align 8, !dbg !7546
  %131 = load i64, ptr %13, align 8, !dbg !7547
  %132 = call i64 @write(i32 noundef %129, ptr noundef %130, i64 noundef %131) #18, !dbg !7548
  store i64 %132, ptr %14, align 8, !dbg !7544
  %133 = load i64, ptr %14, align 8, !dbg !7549
  %134 = icmp slt i64 %133, 0, !dbg !7551
  br i1 %134, label %135, label %138, !dbg !7552

135:                                              ; preds = %128
  %136 = load ptr, ptr %6, align 8, !dbg !7553
  %137 = call i32 @coro_yield(ptr noundef %136, i32 noundef -1) #18, !dbg !7555
  unreachable, !dbg !7556

138:                                              ; preds = %128
  %139 = load i64, ptr %14, align 8, !dbg !7557
  %140 = load i64, ptr %11, align 8, !dbg !7558
  %141 = add nsw i64 %140, %139, !dbg !7558
  store i64 %141, ptr %11, align 8, !dbg !7558
  %142 = load i64, ptr %14, align 8, !dbg !7559
  %143 = load i64, ptr %10, align 8, !dbg !7560
  %144 = sub i64 %143, %142, !dbg !7560
  store i64 %144, ptr %10, align 8, !dbg !7560
  %145 = load ptr, ptr %6, align 8, !dbg !7561
  %146 = call i32 @coro_yield(ptr noundef %145, i32 noundef 0) #18, !dbg !7562
  br label %116, !dbg !7526, !llvm.loop !7563

147:                                              ; preds = %116
  %148 = load i64, ptr %11, align 8, !dbg !7565
  store i64 %148, ptr %5, align 8, !dbg !7566
  br label %149, !dbg !7566

149:                                              ; preds = %147, %114
  %150 = load i64, ptr %5, align 8, !dbg !7567
  store i64 %150, ptr %23, align 8, !dbg !7568
  br label %154, !dbg !7568

151:                                              ; preds = %90
  br label %152, !dbg !7569

152:                                              ; preds = %151, %83
  %153 = load i64, ptr %28, align 8, !dbg !7570
  store i64 %153, ptr %23, align 8, !dbg !7571
  br label %154, !dbg !7571

154:                                              ; preds = %152, %149
  %155 = load i64, ptr %23, align 8, !dbg !7572
  ret i64 %155, !dbg !7572
}

; Function Attrs: nounwind
declare i32 @posix_fadvise(i32 noundef, i64 noundef, i64 noundef, i32 noundef) #3

; Function Attrs: nounwind
declare i64 @sendfile(i32 noundef, i32 noundef, ptr noundef, i64 noundef) #3

; Function Attrs: nounwind
declare i64 @lseek(i32 noundef, i64 noundef, i32 noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_job_thread_init() #0 !dbg !7573 {
  %1 = alloca %struct.sched_param, align 4
  %2 = load i8, ptr @running, align 1, !dbg !7574
  %3 = trunc i8 %2 to i1, !dbg !7574
  br i1 %3, label %5, label %4, !dbg !7577

4:                                                ; preds = %0
  br label %6, !dbg !7577

5:                                                ; preds = %0
  call void @__assert_fail(ptr noundef @.str.42, ptr noundef @.str.1.43, i32 noundef 77, ptr noundef @__PRETTY_FUNCTION__.lwan_job_thread_init) #21, !dbg !7574
  unreachable, !dbg !7574

6:                                                ; preds = %4
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.1.43, i32 noundef 79, ptr noundef @__FUNCTION__.lwan_job_thread_init, ptr noundef @.str.2.44), !dbg !7578
  call void @list_head_init.45(ptr noundef @jobs), !dbg !7579
  store i8 1, ptr @running, align 1, !dbg !7580
  %7 = call i32 @pthread_create(ptr noundef @self, ptr noundef null, ptr noundef @job_thread, ptr noundef null) #18, !dbg !7581
  %8 = icmp slt i32 %7, 0, !dbg !7583
  br i1 %8, label %9, label %10, !dbg !7584

9:                                                ; preds = %6
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.1.43, i32 noundef 85, ptr noundef @__FUNCTION__.lwan_job_thread_init, ptr noundef @.str.3.46) #23, !dbg !7585
  unreachable, !dbg !7585

10:                                               ; preds = %6
  call void @llvm.dbg.declare(metadata ptr %1, metadata !7586, metadata !DIExpression()), !dbg !7591
  call void @llvm.memset.p0.i64(ptr align 4 %1, i8 0, i64 4, i1 false), !dbg !7591
  %11 = load i64, ptr @self, align 8, !dbg !7592
  %12 = call i32 @pthread_setschedparam(i64 noundef %11, i32 noundef 5, ptr noundef %1) #18, !dbg !7594
  %13 = icmp slt i32 %12, 0, !dbg !7595
  br i1 %13, label %14, label %15, !dbg !7596

14:                                               ; preds = %10
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.1.43, i32 noundef 92, ptr noundef @__FUNCTION__.lwan_job_thread_init, ptr noundef @.str.4.47), !dbg !7597
  br label %15, !dbg !7597

15:                                               ; preds = %14, %10
  ret void, !dbg !7598
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @list_head_init.45(ptr noundef %0) #0 !dbg !7599 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !7603, metadata !DIExpression()), !dbg !7604
  %3 = load ptr, ptr %2, align 8, !dbg !7605
  %4 = getelementptr inbounds %struct.list_head, ptr %3, i32 0, i32 0, !dbg !7606
  %5 = load ptr, ptr %2, align 8, !dbg !7607
  %6 = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 0, !dbg !7608
  %7 = getelementptr inbounds %struct.list_node, ptr %6, i32 0, i32 1, !dbg !7609
  store ptr %4, ptr %7, align 8, !dbg !7610
  %8 = load ptr, ptr %2, align 8, !dbg !7611
  %9 = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 0, !dbg !7612
  %10 = getelementptr inbounds %struct.list_node, ptr %9, i32 0, i32 0, !dbg !7613
  store ptr %4, ptr %10, align 8, !dbg !7614
  ret void, !dbg !7615
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @job_thread(ptr noundef %0) #0 !dbg !7616 {
  %2 = alloca ptr, align 8
  %3 = alloca %struct.timespec, align 8
  %4 = alloca i8, align 1
  %5 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !7617, metadata !DIExpression()), !dbg !7618
  call void @llvm.dbg.declare(metadata ptr %3, metadata !7619, metadata !DIExpression()), !dbg !7624
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 @__const.job_thread.rgtp, i64 16, i1 false), !dbg !7624
  br label %6, !dbg !7625

6:                                                ; preds = %75, %1
  %7 = load i8, ptr @running, align 1, !dbg !7626
  %8 = trunc i8 %7 to i1, !dbg !7626
  br i1 %8, label %9, label %76, !dbg !7625

9:                                                ; preds = %6
  call void @llvm.dbg.declare(metadata ptr %4, metadata !7627, metadata !DIExpression()), !dbg !7629
  store i8 0, ptr %4, align 1, !dbg !7629
  %10 = call i32 @pthread_mutex_lock(ptr noundef @queue_mutex) #18, !dbg !7630
  %11 = icmp ne i32 %10, 0, !dbg !7630
  %12 = xor i1 %11, true, !dbg !7630
  %13 = xor i1 %12, true, !dbg !7630
  %14 = xor i1 %13, true, !dbg !7630
  %15 = zext i1 %14 to i32, !dbg !7630
  %16 = sext i32 %15 to i64, !dbg !7630
  %17 = icmp ne i64 %16, 0, !dbg !7630
  br i1 %17, label %18, label %48, !dbg !7632

18:                                               ; preds = %9
  call void @llvm.dbg.declare(metadata ptr %5, metadata !7633, metadata !DIExpression()), !dbg !7641
  %19 = load ptr, ptr @jobs, align 8, !dbg !7642
  %20 = call ptr @list_node_to_off_.48(ptr noundef %19, i64 noundef 0), !dbg !7642
  store ptr %20, ptr %5, align 8, !dbg !7642
  br label %21, !dbg !7642

21:                                               ; preds = %40, %18
  %22 = load ptr, ptr %5, align 8, !dbg !7644
  %23 = call ptr @list_node_from_off_.49(ptr noundef %22, i64 noundef 0), !dbg !7644
  %24 = icmp ne ptr %23, @jobs, !dbg !7644
  br i1 %24, label %25, label %46, !dbg !7642

25:                                               ; preds = %21
  %26 = load ptr, ptr %5, align 8, !dbg !7646
  %27 = getelementptr inbounds %struct.job_t, ptr %26, i32 0, i32 1, !dbg !7647
  %28 = load ptr, ptr %27, align 8, !dbg !7647
  %29 = load ptr, ptr %5, align 8, !dbg !7648
  %30 = getelementptr inbounds %struct.job_t, ptr %29, i32 0, i32 2, !dbg !7649
  %31 = load ptr, ptr %30, align 8, !dbg !7649
  %32 = call zeroext i1 %28(ptr noundef %31), !dbg !7646
  %33 = zext i1 %32 to i32, !dbg !7646
  %34 = load i8, ptr %4, align 1, !dbg !7650
  %35 = trunc i8 %34 to i1, !dbg !7650
  %36 = zext i1 %35 to i32, !dbg !7650
  %37 = or i32 %36, %33, !dbg !7650
  %38 = icmp ne i32 %37, 0, !dbg !7650
  %39 = zext i1 %38 to i8, !dbg !7650
  store i8 %39, ptr %4, align 1, !dbg !7650
  br label %40, !dbg !7651

40:                                               ; preds = %25
  %41 = load ptr, ptr %5, align 8, !dbg !7644
  %42 = call ptr @list_node_from_off_.49(ptr noundef %41, i64 noundef 0), !dbg !7644
  %43 = getelementptr inbounds %struct.list_node, ptr %42, i32 0, i32 0, !dbg !7644
  %44 = load ptr, ptr %43, align 8, !dbg !7644
  %45 = call ptr @list_node_to_off_.48(ptr noundef %44, i64 noundef 0), !dbg !7644
  store ptr %45, ptr %5, align 8, !dbg !7644
  br label %21, !dbg !7644, !llvm.loop !7652

46:                                               ; preds = %21
  %47 = call i32 @pthread_mutex_unlock(ptr noundef @queue_mutex) #18, !dbg !7654
  br label %48, !dbg !7655

48:                                               ; preds = %46, %9
  %49 = load i8, ptr %4, align 1, !dbg !7656
  %50 = trunc i8 %49 to i1, !dbg !7656
  br i1 %50, label %51, label %53, !dbg !7658

51:                                               ; preds = %48
  %52 = getelementptr inbounds %struct.timespec, ptr %3, i32 0, i32 0, !dbg !7659
  store i64 1, ptr %52, align 8, !dbg !7660
  br label %62, !dbg !7661

53:                                               ; preds = %48
  %54 = getelementptr inbounds %struct.timespec, ptr %3, i32 0, i32 0, !dbg !7662
  %55 = load i64, ptr %54, align 8, !dbg !7662
  %56 = icmp sle i64 %55, 15, !dbg !7664
  br i1 %56, label %57, label %61, !dbg !7665

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct.timespec, ptr %3, i32 0, i32 0, !dbg !7666
  %59 = load i64, ptr %58, align 8, !dbg !7667
  %60 = add nsw i64 %59, 1, !dbg !7667
  store i64 %60, ptr %58, align 8, !dbg !7667
  br label %61, !dbg !7668

61:                                               ; preds = %57, %53
  br label %62

62:                                               ; preds = %61, %51
  %63 = call i32 @nanosleep(ptr noundef %3, ptr noundef null), !dbg !7669
  %64 = icmp slt i32 %63, 0, !dbg !7669
  %65 = zext i1 %64 to i32, !dbg !7669
  %66 = sext i32 %65 to i64, !dbg !7669
  %67 = icmp ne i64 %66, 0, !dbg !7669
  br i1 %67, label %68, label %75, !dbg !7671

68:                                               ; preds = %62
  %69 = call ptr @__errno_location() #20, !dbg !7672
  %70 = load i32, ptr %69, align 4, !dbg !7672
  %71 = icmp eq i32 %70, 4, !dbg !7675
  br i1 %71, label %72, label %74, !dbg !7676

72:                                               ; preds = %68
  %73 = call i32 @sleep(i32 noundef 1), !dbg !7677
  br label %74, !dbg !7677

74:                                               ; preds = %72, %68
  br label %75, !dbg !7678

75:                                               ; preds = %74, %62
  br label %6, !dbg !7625, !llvm.loop !7679

76:                                               ; preds = %6
  ret ptr null, !dbg !7681
}

; Function Attrs: nounwind
declare i32 @pthread_create(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #3

; Function Attrs: nounwind
declare i32 @pthread_setschedparam(i64 noundef, i32 noundef, ptr noundef) #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(ptr noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @list_node_to_off_.48(ptr noundef %0, i64 noundef %1) #0 !dbg !7682 {
  %3 = alloca ptr, align 8
  %4 = alloca i64, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !7685, metadata !DIExpression()), !dbg !7686
  store i64 %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !7687, metadata !DIExpression()), !dbg !7688
  %5 = load ptr, ptr %3, align 8, !dbg !7689
  %6 = load i64, ptr %4, align 8, !dbg !7690
  %7 = sub i64 0, %6, !dbg !7691
  %8 = getelementptr inbounds i8, ptr %5, i64 %7, !dbg !7691
  ret ptr %8, !dbg !7692
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @list_node_from_off_.49(ptr noundef %0, i64 noundef %1) #0 !dbg !7693 {
  %3 = alloca ptr, align 8
  %4 = alloca i64, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !7696, metadata !DIExpression()), !dbg !7697
  store i64 %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !7698, metadata !DIExpression()), !dbg !7699
  %5 = load ptr, ptr %3, align 8, !dbg !7700
  %6 = load i64, ptr %4, align 8, !dbg !7701
  %7 = getelementptr inbounds i8, ptr %5, i64 %6, !dbg !7702
  ret ptr %7, !dbg !7703
}

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(ptr noundef) #3

declare i32 @nanosleep(ptr noundef, ptr noundef) #4

declare i32 @sleep(i32 noundef) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_job_thread_shutdown() #0 !dbg !7704 {
  %1 = alloca ptr, align 8
  %2 = alloca ptr, align 8
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.1.43, i32 noundef 98, ptr noundef @__FUNCTION__.lwan_job_thread_shutdown, ptr noundef @.str.5.50), !dbg !7705
  %3 = call i32 @pthread_mutex_lock(ptr noundef @queue_mutex) #18, !dbg !7706
  %4 = icmp ne i32 %3, 0, !dbg !7706
  %5 = xor i1 %4, true, !dbg !7706
  %6 = xor i1 %5, true, !dbg !7706
  %7 = xor i1 %6, true, !dbg !7706
  %8 = zext i1 %7 to i32, !dbg !7706
  %9 = sext i32 %8 to i64, !dbg !7706
  %10 = icmp ne i64 %9, 0, !dbg !7706
  br i1 %10, label %11, label %41, !dbg !7708

11:                                               ; preds = %0
  call void @llvm.dbg.declare(metadata ptr %1, metadata !7709, metadata !DIExpression()), !dbg !7711
  call void @llvm.dbg.declare(metadata ptr %2, metadata !7712, metadata !DIExpression()), !dbg !7713
  %12 = load ptr, ptr @jobs, align 8, !dbg !7714
  %13 = call ptr @list_node_to_off_.48(ptr noundef %12, i64 noundef 0), !dbg !7714
  store ptr %13, ptr %1, align 8, !dbg !7714
  %14 = load ptr, ptr %1, align 8, !dbg !7714
  %15 = call ptr @list_node_from_off_.49(ptr noundef %14, i64 noundef 0), !dbg !7714
  %16 = getelementptr inbounds %struct.list_node, ptr %15, i32 0, i32 0, !dbg !7714
  %17 = load ptr, ptr %16, align 8, !dbg !7714
  %18 = call ptr @list_node_to_off_.48(ptr noundef %17, i64 noundef 0), !dbg !7714
  store ptr %18, ptr %2, align 8, !dbg !7714
  br label %19, !dbg !7714

19:                                               ; preds = %27, %11
  %20 = load ptr, ptr %1, align 8, !dbg !7716
  %21 = call ptr @list_node_from_off_.49(ptr noundef %20, i64 noundef 0), !dbg !7716
  %22 = icmp ne ptr %21, @jobs, !dbg !7716
  br i1 %22, label %23, label %34, !dbg !7714

23:                                               ; preds = %19
  %24 = load ptr, ptr %1, align 8, !dbg !7718
  %25 = getelementptr inbounds %struct.job_t, ptr %24, i32 0, i32 0, !dbg !7720
  call void @list_del.51(ptr noundef %25), !dbg !7721
  %26 = load ptr, ptr %1, align 8, !dbg !7722
  call void @free(ptr noundef %26) #18, !dbg !7723
  br label %27, !dbg !7724

27:                                               ; preds = %23
  %28 = load ptr, ptr %2, align 8, !dbg !7716
  store ptr %28, ptr %1, align 8, !dbg !7716
  %29 = load ptr, ptr %1, align 8, !dbg !7716
  %30 = call ptr @list_node_from_off_.49(ptr noundef %29, i64 noundef 0), !dbg !7716
  %31 = getelementptr inbounds %struct.list_node, ptr %30, i32 0, i32 0, !dbg !7716
  %32 = load ptr, ptr %31, align 8, !dbg !7716
  %33 = call ptr @list_node_to_off_.48(ptr noundef %32, i64 noundef 0), !dbg !7716
  store ptr %33, ptr %2, align 8, !dbg !7716
  br label %19, !dbg !7716, !llvm.loop !7725

34:                                               ; preds = %19
  store i8 0, ptr @running, align 1, !dbg !7727
  %35 = load i64, ptr @self, align 8, !dbg !7728
  %36 = call i32 @pthread_tryjoin_np(i64 noundef %35, ptr noundef null) #18, !dbg !7730
  %37 = icmp slt i32 %36, 0, !dbg !7731
  br i1 %37, label %38, label %39, !dbg !7732

38:                                               ; preds = %34
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.1.43, i32 noundef 108, ptr noundef @__FUNCTION__.lwan_job_thread_shutdown, ptr noundef @.str.6.52) #23, !dbg !7733
  unreachable, !dbg !7733

39:                                               ; preds = %34
  %40 = call i32 @pthread_mutex_unlock(ptr noundef @queue_mutex) #18, !dbg !7734
  br label %41, !dbg !7735

41:                                               ; preds = %39, %0
  ret void, !dbg !7736
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @list_del.51(ptr noundef %0) #0 !dbg !7737 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !7740, metadata !DIExpression()), !dbg !7741
  %3 = load ptr, ptr %2, align 8, !dbg !7742
  %4 = load ptr, ptr %2, align 8, !dbg !7743
  %5 = getelementptr inbounds %struct.list_node, ptr %4, i32 0, i32 1, !dbg !7744
  %6 = load ptr, ptr %5, align 8, !dbg !7744
  %7 = load ptr, ptr %2, align 8, !dbg !7745
  %8 = getelementptr inbounds %struct.list_node, ptr %7, i32 0, i32 0, !dbg !7746
  %9 = load ptr, ptr %8, align 8, !dbg !7746
  %10 = getelementptr inbounds %struct.list_node, ptr %9, i32 0, i32 1, !dbg !7747
  store ptr %6, ptr %10, align 8, !dbg !7748
  %11 = load ptr, ptr %2, align 8, !dbg !7749
  %12 = getelementptr inbounds %struct.list_node, ptr %11, i32 0, i32 0, !dbg !7750
  %13 = load ptr, ptr %12, align 8, !dbg !7750
  %14 = load ptr, ptr %2, align 8, !dbg !7751
  %15 = getelementptr inbounds %struct.list_node, ptr %14, i32 0, i32 1, !dbg !7752
  %16 = load ptr, ptr %15, align 8, !dbg !7752
  %17 = getelementptr inbounds %struct.list_node, ptr %16, i32 0, i32 0, !dbg !7753
  store ptr %13, ptr %17, align 8, !dbg !7754
  ret void, !dbg !7755
}

; Function Attrs: nounwind
declare i32 @pthread_tryjoin_np(i64 noundef, ptr noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_job_add(ptr noundef %0, ptr noundef %1) #0 !dbg !7756 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !7759, metadata !DIExpression()), !dbg !7760
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !7761, metadata !DIExpression()), !dbg !7762
  %6 = load ptr, ptr %3, align 8, !dbg !7763
  %7 = icmp ne ptr %6, null, !dbg !7763
  br i1 %7, label %8, label %9, !dbg !7766

8:                                                ; preds = %2
  br label %10, !dbg !7766

9:                                                ; preds = %2
  call void @__assert_fail(ptr noundef @.str.7.55, ptr noundef @.str.1.43, i32 noundef 115, ptr noundef @__PRETTY_FUNCTION__.lwan_job_add) #21, !dbg !7763
  unreachable, !dbg !7763

10:                                               ; preds = %8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !7767, metadata !DIExpression()), !dbg !7768
  %11 = call noalias ptr @calloc(i64 noundef 1, i64 noundef 32) #19, !dbg !7769
  store ptr %11, ptr %5, align 8, !dbg !7768
  %12 = load ptr, ptr %5, align 8, !dbg !7770
  %13 = icmp ne ptr %12, null, !dbg !7770
  br i1 %13, label %15, label %14, !dbg !7772

14:                                               ; preds = %10
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.1.43, i32 noundef 119, ptr noundef @__FUNCTION__.lwan_job_add, ptr noundef @.str.8.56) #23, !dbg !7773
  unreachable, !dbg !7773

15:                                               ; preds = %10
  %16 = load ptr, ptr %3, align 8, !dbg !7774
  %17 = load ptr, ptr %5, align 8, !dbg !7775
  %18 = getelementptr inbounds %struct.job_t, ptr %17, i32 0, i32 1, !dbg !7776
  store ptr %16, ptr %18, align 8, !dbg !7777
  %19 = load ptr, ptr %4, align 8, !dbg !7778
  %20 = load ptr, ptr %5, align 8, !dbg !7779
  %21 = getelementptr inbounds %struct.job_t, ptr %20, i32 0, i32 2, !dbg !7780
  store ptr %19, ptr %21, align 8, !dbg !7781
  %22 = call i32 @pthread_mutex_lock(ptr noundef @queue_mutex) #18, !dbg !7782
  %23 = icmp ne i32 %22, 0, !dbg !7782
  %24 = xor i1 %23, true, !dbg !7782
  %25 = xor i1 %24, true, !dbg !7782
  %26 = xor i1 %25, true, !dbg !7782
  %27 = zext i1 %26 to i32, !dbg !7782
  %28 = sext i32 %27 to i64, !dbg !7782
  %29 = icmp ne i64 %28, 0, !dbg !7782
  br i1 %29, label %30, label %34, !dbg !7784

30:                                               ; preds = %15
  %31 = load ptr, ptr %5, align 8, !dbg !7785
  %32 = getelementptr inbounds %struct.job_t, ptr %31, i32 0, i32 0, !dbg !7787
  call void @list_add(ptr noundef @jobs, ptr noundef %32), !dbg !7788
  %33 = call i32 @pthread_mutex_unlock(ptr noundef @queue_mutex) #18, !dbg !7789
  br label %36, !dbg !7790

34:                                               ; preds = %15
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_warning_debug(ptr noundef @.str.1.43, i32 noundef 128, ptr noundef @__FUNCTION__.lwan_job_add, ptr noundef @.str.9.57), !dbg !7791
  %35 = load ptr, ptr %5, align 8, !dbg !7793
  call void @free(ptr noundef %35) #18, !dbg !7794
  br label %36

36:                                               ; preds = %34, %30
  ret void, !dbg !7795
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @list_add(ptr noundef %0, ptr noundef %1) #0 !dbg !7796 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !7799, metadata !DIExpression()), !dbg !7800
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !7801, metadata !DIExpression()), !dbg !7802
  %5 = load ptr, ptr %3, align 8, !dbg !7803
  %6 = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 0, !dbg !7804
  %7 = getelementptr inbounds %struct.list_node, ptr %6, i32 0, i32 0, !dbg !7805
  %8 = load ptr, ptr %7, align 8, !dbg !7805
  %9 = load ptr, ptr %4, align 8, !dbg !7806
  %10 = getelementptr inbounds %struct.list_node, ptr %9, i32 0, i32 0, !dbg !7807
  store ptr %8, ptr %10, align 8, !dbg !7808
  %11 = load ptr, ptr %3, align 8, !dbg !7809
  %12 = getelementptr inbounds %struct.list_head, ptr %11, i32 0, i32 0, !dbg !7810
  %13 = load ptr, ptr %4, align 8, !dbg !7811
  %14 = getelementptr inbounds %struct.list_node, ptr %13, i32 0, i32 1, !dbg !7812
  store ptr %12, ptr %14, align 8, !dbg !7813
  %15 = load ptr, ptr %4, align 8, !dbg !7814
  %16 = load ptr, ptr %3, align 8, !dbg !7815
  %17 = getelementptr inbounds %struct.list_head, ptr %16, i32 0, i32 0, !dbg !7816
  %18 = getelementptr inbounds %struct.list_node, ptr %17, i32 0, i32 0, !dbg !7817
  %19 = load ptr, ptr %18, align 8, !dbg !7817
  %20 = getelementptr inbounds %struct.list_node, ptr %19, i32 0, i32 1, !dbg !7818
  store ptr %15, ptr %20, align 8, !dbg !7819
  %21 = load ptr, ptr %4, align 8, !dbg !7820
  %22 = load ptr, ptr %3, align 8, !dbg !7821
  %23 = getelementptr inbounds %struct.list_head, ptr %22, i32 0, i32 0, !dbg !7822
  %24 = getelementptr inbounds %struct.list_node, ptr %23, i32 0, i32 0, !dbg !7823
  store ptr %21, ptr %24, align 8, !dbg !7824
  %25 = load ptr, ptr %3, align 8, !dbg !7825
  ret void, !dbg !7826
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_job_del(ptr noundef %0, ptr noundef %1) #0 !dbg !7827 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !7828, metadata !DIExpression()), !dbg !7829
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !7830, metadata !DIExpression()), !dbg !7831
  call void @llvm.dbg.declare(metadata ptr %5, metadata !7832, metadata !DIExpression()), !dbg !7833
  call void @llvm.dbg.declare(metadata ptr %6, metadata !7834, metadata !DIExpression()), !dbg !7835
  %7 = load ptr, ptr %3, align 8, !dbg !7836
  %8 = icmp ne ptr %7, null, !dbg !7836
  br i1 %8, label %9, label %10, !dbg !7839

9:                                                ; preds = %2
  br label %11, !dbg !7839

10:                                               ; preds = %2
  call void @__assert_fail(ptr noundef @.str.7.55, ptr noundef @.str.1.43, i32 noundef 137, ptr noundef @__PRETTY_FUNCTION__.lwan_job_del) #21, !dbg !7836
  unreachable, !dbg !7836

11:                                               ; preds = %9
  %12 = call i32 @pthread_mutex_lock(ptr noundef @queue_mutex) #18, !dbg !7840
  %13 = icmp ne i32 %12, 0, !dbg !7840
  %14 = xor i1 %13, true, !dbg !7840
  %15 = xor i1 %14, true, !dbg !7840
  %16 = xor i1 %15, true, !dbg !7840
  %17 = zext i1 %16 to i32, !dbg !7840
  %18 = sext i32 %17 to i64, !dbg !7840
  %19 = icmp ne i64 %18, 0, !dbg !7840
  br i1 %19, label %20, label %58, !dbg !7842

20:                                               ; preds = %11
  %21 = load ptr, ptr @jobs, align 8, !dbg !7843
  %22 = call ptr @list_node_to_off_.48(ptr noundef %21, i64 noundef 0), !dbg !7843
  store ptr %22, ptr %5, align 8, !dbg !7843
  %23 = load ptr, ptr %5, align 8, !dbg !7843
  %24 = call ptr @list_node_from_off_.49(ptr noundef %23, i64 noundef 0), !dbg !7843
  %25 = getelementptr inbounds %struct.list_node, ptr %24, i32 0, i32 0, !dbg !7843
  %26 = load ptr, ptr %25, align 8, !dbg !7843
  %27 = call ptr @list_node_to_off_.48(ptr noundef %26, i64 noundef 0), !dbg !7843
  store ptr %27, ptr %6, align 8, !dbg !7843
  br label %28, !dbg !7843

28:                                               ; preds = %49, %20
  %29 = load ptr, ptr %5, align 8, !dbg !7846
  %30 = call ptr @list_node_from_off_.49(ptr noundef %29, i64 noundef 0), !dbg !7846
  %31 = icmp ne ptr %30, @jobs, !dbg !7846
  br i1 %31, label %32, label %56, !dbg !7843

32:                                               ; preds = %28
  %33 = load ptr, ptr %3, align 8, !dbg !7848
  %34 = load ptr, ptr %5, align 8, !dbg !7851
  %35 = getelementptr inbounds %struct.job_t, ptr %34, i32 0, i32 1, !dbg !7852
  %36 = load ptr, ptr %35, align 8, !dbg !7852
  %37 = icmp eq ptr %33, %36, !dbg !7853
  br i1 %37, label %38, label %48, !dbg !7854

38:                                               ; preds = %32
  %39 = load ptr, ptr %4, align 8, !dbg !7855
  %40 = load ptr, ptr %5, align 8, !dbg !7856
  %41 = getelementptr inbounds %struct.job_t, ptr %40, i32 0, i32 2, !dbg !7857
  %42 = load ptr, ptr %41, align 8, !dbg !7857
  %43 = icmp eq ptr %39, %42, !dbg !7858
  br i1 %43, label %44, label %48, !dbg !7859

44:                                               ; preds = %38
  %45 = load ptr, ptr %5, align 8, !dbg !7860
  %46 = getelementptr inbounds %struct.job_t, ptr %45, i32 0, i32 0, !dbg !7862
  call void @list_del.51(ptr noundef %46), !dbg !7863
  %47 = load ptr, ptr %5, align 8, !dbg !7864
  call void @free(ptr noundef %47) #18, !dbg !7865
  br label %48, !dbg !7866

48:                                               ; preds = %44, %38, %32
  br label %49, !dbg !7867

49:                                               ; preds = %48
  %50 = load ptr, ptr %6, align 8, !dbg !7846
  store ptr %50, ptr %5, align 8, !dbg !7846
  %51 = load ptr, ptr %5, align 8, !dbg !7846
  %52 = call ptr @list_node_from_off_.49(ptr noundef %51, i64 noundef 0), !dbg !7846
  %53 = getelementptr inbounds %struct.list_node, ptr %52, i32 0, i32 0, !dbg !7846
  %54 = load ptr, ptr %53, align 8, !dbg !7846
  %55 = call ptr @list_node_to_off_.48(ptr noundef %54, i64 noundef 0), !dbg !7846
  store ptr %55, ptr %6, align 8, !dbg !7846
  br label %28, !dbg !7846, !llvm.loop !7868

56:                                               ; preds = %28
  %57 = call i32 @pthread_mutex_unlock(ptr noundef @queue_mutex) #18, !dbg !7870
  br label %58, !dbg !7871

58:                                               ; preds = %56, %11
  ret void, !dbg !7872
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_set_url_map(ptr noundef %0, ptr noundef %1) #0 !dbg !7873 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !8035, metadata !DIExpression()), !dbg !8036
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !8037, metadata !DIExpression()), !dbg !8038
  %6 = load ptr, ptr %3, align 8, !dbg !8039
  %7 = getelementptr inbounds %struct.lwan_t_, ptr %6, i32 0, i32 0, !dbg !8040
  call void @lwan_trie_destroy(ptr noundef %7), !dbg !8041
  %8 = load ptr, ptr %3, align 8, !dbg !8042
  %9 = getelementptr inbounds %struct.lwan_t_, ptr %8, i32 0, i32 0, !dbg !8042
  %10 = call zeroext i1 @lwan_trie_init(ptr noundef %9, ptr noundef @destroy_urlmap), !dbg !8042
  %11 = xor i1 %10, true, !dbg !8042
  %12 = zext i1 %11 to i32, !dbg !8042
  %13 = sext i32 %12 to i64, !dbg !8042
  %14 = icmp ne i64 %13, 0, !dbg !8042
  br i1 %14, label %15, label %16, !dbg !8044

15:                                               ; preds = %2
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.60, i32 noundef 253, ptr noundef @__FUNCTION__.lwan_set_url_map, ptr noundef @.str.1.61) #23, !dbg !8045
  unreachable, !dbg !8045

16:                                               ; preds = %2
  br label %17, !dbg !8046

17:                                               ; preds = %76, %16
  %18 = load ptr, ptr %4, align 8, !dbg !8047
  %19 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %18, i32 0, i32 2, !dbg !8050
  %20 = load ptr, ptr %19, align 8, !dbg !8050
  %21 = icmp ne ptr %20, null, !dbg !8051
  br i1 %21, label %22, label %79, !dbg !8051

22:                                               ; preds = %17
  call void @llvm.dbg.declare(metadata ptr %5, metadata !8052, metadata !DIExpression()), !dbg !8055
  %23 = load ptr, ptr %3, align 8, !dbg !8056
  %24 = getelementptr inbounds %struct.lwan_t_, ptr %23, i32 0, i32 0, !dbg !8057
  %25 = load ptr, ptr %4, align 8, !dbg !8058
  %26 = call ptr @add_url_map(ptr noundef %24, ptr noundef null, ptr noundef %25), !dbg !8059
  store ptr %26, ptr %5, align 8, !dbg !8055
  %27 = load ptr, ptr %5, align 8, !dbg !8060
  %28 = icmp ne ptr %27, null, !dbg !8060
  %29 = xor i1 %28, true, !dbg !8060
  %30 = zext i1 %29 to i32, !dbg !8060
  %31 = sext i32 %30 to i64, !dbg !8060
  %32 = icmp ne i64 %31, 0, !dbg !8060
  br i1 %32, label %33, label %34, !dbg !8062

33:                                               ; preds = %22
  br label %76, !dbg !8063

34:                                               ; preds = %22
  %35 = load ptr, ptr %5, align 8, !dbg !8064
  %36 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %35, i32 0, i32 5, !dbg !8066
  %37 = load ptr, ptr %36, align 8, !dbg !8066
  %38 = icmp ne ptr %37, null, !dbg !8064
  br i1 %38, label %39, label %72, !dbg !8067

39:                                               ; preds = %34
  %40 = load ptr, ptr %5, align 8, !dbg !8068
  %41 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %40, i32 0, i32 5, !dbg !8069
  %42 = load ptr, ptr %41, align 8, !dbg !8069
  %43 = getelementptr inbounds %struct.lwan_module_t_, ptr %42, i32 0, i32 1, !dbg !8070
  %44 = load ptr, ptr %43, align 8, !dbg !8070
  %45 = icmp ne ptr %44, null, !dbg !8068
  br i1 %45, label %46, label %72, !dbg !8071

46:                                               ; preds = %39
  %47 = load ptr, ptr %5, align 8, !dbg !8072
  %48 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %47, i32 0, i32 5, !dbg !8074
  %49 = load ptr, ptr %48, align 8, !dbg !8074
  %50 = getelementptr inbounds %struct.lwan_module_t_, ptr %49, i32 0, i32 1, !dbg !8075
  %51 = load ptr, ptr %50, align 8, !dbg !8075
  %52 = load ptr, ptr %5, align 8, !dbg !8076
  %53 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %52, i32 0, i32 6, !dbg !8077
  %54 = load ptr, ptr %53, align 8, !dbg !8077
  %55 = call ptr %51(ptr noundef %54), !dbg !8072
  %56 = load ptr, ptr %5, align 8, !dbg !8078
  %57 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %56, i32 0, i32 1, !dbg !8079
  store ptr %55, ptr %57, align 8, !dbg !8080
  %58 = load ptr, ptr %5, align 8, !dbg !8081
  %59 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %58, i32 0, i32 5, !dbg !8082
  %60 = load ptr, ptr %59, align 8, !dbg !8082
  %61 = getelementptr inbounds %struct.lwan_module_t_, ptr %60, i32 0, i32 5, !dbg !8083
  %62 = load i32, ptr %61, align 8, !dbg !8083
  %63 = load ptr, ptr %5, align 8, !dbg !8084
  %64 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %63, i32 0, i32 4, !dbg !8085
  store i32 %62, ptr %64, align 8, !dbg !8086
  %65 = load ptr, ptr %5, align 8, !dbg !8087
  %66 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %65, i32 0, i32 5, !dbg !8088
  %67 = load ptr, ptr %66, align 8, !dbg !8088
  %68 = getelementptr inbounds %struct.lwan_module_t_, ptr %67, i32 0, i32 4, !dbg !8089
  %69 = load ptr, ptr %68, align 8, !dbg !8089
  %70 = load ptr, ptr %5, align 8, !dbg !8090
  %71 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %70, i32 0, i32 0, !dbg !8091
  store ptr %69, ptr %71, align 8, !dbg !8092
  br label %75, !dbg !8093

72:                                               ; preds = %39, %34
  %73 = load ptr, ptr %5, align 8, !dbg !8094
  %74 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %73, i32 0, i32 4, !dbg !8096
  store i32 31, ptr %74, align 8, !dbg !8097
  br label %75

75:                                               ; preds = %72, %46
  br label %76, !dbg !8098

76:                                               ; preds = %75, %33
  %77 = load ptr, ptr %4, align 8, !dbg !8099
  %78 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %77, i32 1, !dbg !8099
  store ptr %78, ptr %4, align 8, !dbg !8099
  br label %17, !dbg !8100, !llvm.loop !8101

79:                                               ; preds = %17
  ret void, !dbg !8103
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @destroy_urlmap(ptr noundef %0) #0 !dbg !8104 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !8105, metadata !DIExpression()), !dbg !8106
  call void @llvm.dbg.declare(metadata ptr %3, metadata !8107, metadata !DIExpression()), !dbg !8108
  %5 = load ptr, ptr %2, align 8, !dbg !8109
  store ptr %5, ptr %3, align 8, !dbg !8108
  %6 = load ptr, ptr %3, align 8, !dbg !8110
  %7 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %6, i32 0, i32 5, !dbg !8112
  %8 = load ptr, ptr %7, align 8, !dbg !8112
  %9 = icmp ne ptr %8, null, !dbg !8110
  br i1 %9, label %10, label %26, !dbg !8113

10:                                               ; preds = %1
  call void @llvm.dbg.declare(metadata ptr %4, metadata !8114, metadata !DIExpression()), !dbg !8116
  %11 = load ptr, ptr %3, align 8, !dbg !8117
  %12 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %11, i32 0, i32 5, !dbg !8118
  %13 = load ptr, ptr %12, align 8, !dbg !8118
  store ptr %13, ptr %4, align 8, !dbg !8116
  %14 = load ptr, ptr %4, align 8, !dbg !8119
  %15 = getelementptr inbounds %struct.lwan_module_t_, ptr %14, i32 0, i32 3, !dbg !8121
  %16 = load ptr, ptr %15, align 8, !dbg !8121
  %17 = icmp ne ptr %16, null, !dbg !8119
  br i1 %17, label %18, label %25, !dbg !8122

18:                                               ; preds = %10
  %19 = load ptr, ptr %4, align 8, !dbg !8123
  %20 = getelementptr inbounds %struct.lwan_module_t_, ptr %19, i32 0, i32 3, !dbg !8124
  %21 = load ptr, ptr %20, align 8, !dbg !8124
  %22 = load ptr, ptr %3, align 8, !dbg !8125
  %23 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %22, i32 0, i32 1, !dbg !8126
  %24 = load ptr, ptr %23, align 8, !dbg !8126
  call void %21(ptr noundef %24), !dbg !8123
  br label %25, !dbg !8123

25:                                               ; preds = %18, %10
  br label %36, !dbg !8127

26:                                               ; preds = %1
  %27 = load ptr, ptr %3, align 8, !dbg !8128
  %28 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %27, i32 0, i32 1, !dbg !8130
  %29 = load ptr, ptr %28, align 8, !dbg !8130
  %30 = icmp ne ptr %29, null, !dbg !8128
  br i1 %30, label %31, label %35, !dbg !8131

31:                                               ; preds = %26
  %32 = load ptr, ptr %3, align 8, !dbg !8132
  %33 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %32, i32 0, i32 1, !dbg !8134
  %34 = load ptr, ptr %33, align 8, !dbg !8134
  call void @hash_free(ptr noundef %34), !dbg !8135
  br label %35, !dbg !8136

35:                                               ; preds = %31, %26
  br label %36

36:                                               ; preds = %35, %25
  %37 = load ptr, ptr %3, align 8, !dbg !8137
  %38 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %37, i32 0, i32 7, !dbg !8138
  %39 = getelementptr inbounds %struct.list_node, ptr %38, i32 0, i32 0, !dbg !8139
  %40 = load ptr, ptr %39, align 8, !dbg !8139
  call void @free(ptr noundef %40) #18, !dbg !8140
  %41 = load ptr, ptr %3, align 8, !dbg !8141
  %42 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %41, i32 0, i32 7, !dbg !8142
  %43 = getelementptr inbounds %struct.list_node, ptr %42, i32 0, i32 1, !dbg !8143
  %44 = load ptr, ptr %43, align 8, !dbg !8143
  call void @free(ptr noundef %44) #18, !dbg !8144
  %45 = load ptr, ptr %3, align 8, !dbg !8145
  %46 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %45, i32 0, i32 2, !dbg !8146
  %47 = load ptr, ptr %46, align 8, !dbg !8146
  call void @free(ptr noundef %47) #18, !dbg !8147
  %48 = load ptr, ptr %3, align 8, !dbg !8148
  call void @free(ptr noundef %48) #18, !dbg !8149
  ret void, !dbg !8150
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @add_url_map(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !8151 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !8155, metadata !DIExpression()), !dbg !8156
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !8157, metadata !DIExpression()), !dbg !8158
  store ptr %2, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !8159, metadata !DIExpression()), !dbg !8160
  call void @llvm.dbg.declare(metadata ptr %7, metadata !8161, metadata !DIExpression()), !dbg !8162
  %8 = call noalias ptr @malloc(i64 noundef 72) #17, !dbg !8163
  store ptr %8, ptr %7, align 8, !dbg !8162
  %9 = load ptr, ptr %7, align 8, !dbg !8164
  %10 = icmp ne ptr %9, null, !dbg !8164
  br i1 %10, label %12, label %11, !dbg !8166

11:                                               ; preds = %3
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.60, i32 noundef 111, ptr noundef @__FUNCTION__.add_url_map, ptr noundef @.str.16) #23, !dbg !8167
  unreachable, !dbg !8167

12:                                               ; preds = %3
  %13 = load ptr, ptr %7, align 8, !dbg !8168
  %14 = load ptr, ptr %6, align 8, !dbg !8169
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %13, ptr align 8 %14, i64 72, i1 false), !dbg !8170
  %15 = load ptr, ptr %5, align 8, !dbg !8171
  %16 = icmp ne ptr %15, null, !dbg !8171
  br i1 %16, label %17, label %19, !dbg !8171

17:                                               ; preds = %12
  %18 = load ptr, ptr %5, align 8, !dbg !8172
  br label %23, !dbg !8171

19:                                               ; preds = %12
  %20 = load ptr, ptr %7, align 8, !dbg !8173
  %21 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %20, i32 0, i32 2, !dbg !8174
  %22 = load ptr, ptr %21, align 8, !dbg !8174
  br label %23, !dbg !8171

23:                                               ; preds = %19, %17
  %24 = phi ptr [ %18, %17 ], [ %22, %19 ], !dbg !8171
  %25 = call noalias ptr @strdup(ptr noundef %24) #18, !dbg !8175
  %26 = load ptr, ptr %7, align 8, !dbg !8176
  %27 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %26, i32 0, i32 2, !dbg !8177
  store ptr %25, ptr %27, align 8, !dbg !8178
  %28 = load ptr, ptr %7, align 8, !dbg !8179
  %29 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %28, i32 0, i32 2, !dbg !8180
  %30 = load ptr, ptr %29, align 8, !dbg !8180
  %31 = call i64 @strlen(ptr noundef %30) #22, !dbg !8181
  %32 = load ptr, ptr %7, align 8, !dbg !8182
  %33 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %32, i32 0, i32 3, !dbg !8183
  store i64 %31, ptr %33, align 8, !dbg !8184
  %34 = load ptr, ptr %4, align 8, !dbg !8185
  %35 = load ptr, ptr %7, align 8, !dbg !8186
  %36 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %35, i32 0, i32 2, !dbg !8187
  %37 = load ptr, ptr %36, align 8, !dbg !8187
  %38 = load ptr, ptr %7, align 8, !dbg !8188
  call void @lwan_trie_add(ptr noundef %34, ptr noundef %37, ptr noundef %38), !dbg !8189
  %39 = load ptr, ptr %7, align 8, !dbg !8190
  ret ptr %39, !dbg !8191
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @get_config_path(ptr noundef %0) #0 !dbg !8192 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !8195, metadata !DIExpression()), !dbg !8196
  call void @llvm.dbg.declare(metadata ptr %4, metadata !8197, metadata !DIExpression()), !dbg !8198
  store ptr null, ptr %4, align 8, !dbg !8198
  call void @llvm.dbg.declare(metadata ptr %5, metadata !8199, metadata !DIExpression()), !dbg !8200
  %7 = load ptr, ptr %3, align 8, !dbg !8201
  %8 = call i64 @readlink(ptr noundef @.str.2.62, ptr noundef %7, i64 noundef 4096) #18, !dbg !8202
  store i64 %8, ptr %5, align 8, !dbg !8203
  %9 = load i64, ptr %5, align 8, !dbg !8204
  %10 = icmp slt i64 %9, 0, !dbg !8206
  br i1 %10, label %11, label %12, !dbg !8207

11:                                               ; preds = %1
  br label %34, !dbg !8208

12:                                               ; preds = %1
  %13 = load ptr, ptr %3, align 8, !dbg !8209
  %14 = load i64, ptr %5, align 8, !dbg !8210
  %15 = getelementptr inbounds i8, ptr %13, i64 %14, !dbg !8209
  store i8 0, ptr %15, align 1, !dbg !8211
  %16 = load ptr, ptr %3, align 8, !dbg !8212
  %17 = call ptr @strrchr(ptr noundef %16, i32 noundef 47) #22, !dbg !8213
  store ptr %17, ptr %4, align 8, !dbg !8214
  %18 = load ptr, ptr %4, align 8, !dbg !8215
  %19 = icmp ne ptr %18, null, !dbg !8215
  br i1 %19, label %21, label %20, !dbg !8217

20:                                               ; preds = %12
  br label %34, !dbg !8218

21:                                               ; preds = %12
  call void @llvm.dbg.declare(metadata ptr %6, metadata !8219, metadata !DIExpression()), !dbg !8220
  %22 = load ptr, ptr %3, align 8, !dbg !8221
  %23 = load ptr, ptr %4, align 8, !dbg !8222
  %24 = getelementptr inbounds i8, ptr %23, i64 1, !dbg !8223
  %25 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %22, i64 noundef 4096, ptr noundef @.str.3.63, ptr noundef %24) #18, !dbg !8224
  store i32 %25, ptr %6, align 4, !dbg !8220
  %26 = load i32, ptr %6, align 4, !dbg !8225
  %27 = icmp slt i32 %26, 0, !dbg !8227
  br i1 %27, label %31, label %28, !dbg !8228

28:                                               ; preds = %21
  %29 = load i32, ptr %6, align 4, !dbg !8229
  %30 = icmp sge i32 %29, 4096, !dbg !8230
  br i1 %30, label %31, label %32, !dbg !8231

31:                                               ; preds = %28, %21
  br label %34, !dbg !8232

32:                                               ; preds = %28
  %33 = load ptr, ptr %3, align 8, !dbg !8233
  store ptr %33, ptr %2, align 8, !dbg !8234
  br label %35, !dbg !8234

34:                                               ; preds = %31, %20, %11
  call void @llvm.dbg.label(metadata !8235), !dbg !8236
  store ptr @.str.4.64, ptr %2, align 8, !dbg !8237
  br label %35, !dbg !8237

35:                                               ; preds = %34, %32
  %36 = load ptr, ptr %2, align 8, !dbg !8238
  ret ptr %36, !dbg !8238
}

; Function Attrs: nounwind
declare i64 @readlink(ptr noundef, ptr noundef, i64 noundef) #3

; Function Attrs: nounwind
declare i32 @snprintf(ptr noundef, i64 noundef, ptr noundef, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_init(ptr noundef %0) #0 !dbg !8239 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !8242, metadata !DIExpression()), !dbg !8243
  %3 = load ptr, ptr %2, align 8, !dbg !8244
  call void @lwan_init_with_config(ptr noundef %3, ptr noundef @default_config), !dbg !8245
  ret void, !dbg !8246
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_init_with_config(ptr noundef %0, ptr noundef %1) #0 !dbg !8247 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i64, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !8251, metadata !DIExpression()), !dbg !8252
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !8253, metadata !DIExpression()), !dbg !8254
  %6 = load ptr, ptr %3, align 8, !dbg !8255
  call void @llvm.memset.p0.i64(ptr align 8 %6, i8 0, i64 80, i1 false), !dbg !8256
  %7 = load ptr, ptr %3, align 8, !dbg !8257
  %8 = getelementptr inbounds %struct.lwan_t_, ptr %7, i32 0, i32 4, !dbg !8258
  %9 = load ptr, ptr %4, align 8, !dbg !8259
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %9, i64 24, i1 false), !dbg !8260
  %10 = load ptr, ptr %3, align 8, !dbg !8261
  call void @lwan_status_init(ptr noundef %10), !dbg !8262
  call void @lwan_job_thread_init(), !dbg !8263
  call void @lwan_response_init(), !dbg !8264
  call void @lwan_tables_init(), !dbg !8265
  %11 = load ptr, ptr %3, align 8, !dbg !8266
  call void @lwan_module_init(ptr noundef %11), !dbg !8267
  %12 = load ptr, ptr %3, align 8, !dbg !8268
  %13 = call ptr @lwan_module_serve_files(), !dbg !8269
  call void @lwan_module_register(ptr noundef %12, ptr noundef %13), !dbg !8270
  %14 = load ptr, ptr %3, align 8, !dbg !8271
  %15 = call ptr @lwan_module_redirect(), !dbg !8272
  call void @lwan_module_register(ptr noundef %14, ptr noundef %15), !dbg !8273
  %16 = load ptr, ptr %4, align 8, !dbg !8274
  %17 = icmp eq ptr %16, @default_config, !dbg !8276
  br i1 %17, label %18, label %23, !dbg !8277

18:                                               ; preds = %2
  %19 = load ptr, ptr %3, align 8, !dbg !8278
  %20 = call zeroext i1 @setup_from_config(ptr noundef %19), !dbg !8281
  br i1 %20, label %22, label %21, !dbg !8282

21:                                               ; preds = %18
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_warning_debug(ptr noundef @.str.60, i32 noundef 473, ptr noundef @__FUNCTION__.lwan_init_with_config, ptr noundef @.str.5.65), !dbg !8283
  br label %22, !dbg !8283

22:                                               ; preds = %21, %18
  br label %23, !dbg !8284

23:                                               ; preds = %22, %2
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.60, i32 noundef 477, ptr noundef @__FUNCTION__.lwan_init_with_config, ptr noundef @.str.6.66), !dbg !8285
  %24 = load ptr, ptr %3, align 8, !dbg !8286
  %25 = getelementptr inbounds %struct.lwan_t_, ptr %24, i32 0, i32 4, !dbg !8288
  %26 = getelementptr inbounds %struct.lwan_config_t_, ptr %25, i32 0, i32 5, !dbg !8289
  %27 = load i16, ptr %26, align 8, !dbg !8289
  %28 = icmp ne i16 %27, 0, !dbg !8286
  br i1 %28, label %45, label %29, !dbg !8290

29:                                               ; preds = %23
  %30 = call zeroext i16 @get_number_of_cpus(), !dbg !8291
  %31 = load ptr, ptr %3, align 8, !dbg !8293
  %32 = getelementptr inbounds %struct.lwan_t_, ptr %31, i32 0, i32 2, !dbg !8294
  %33 = getelementptr inbounds %struct.anon.0.24, ptr %32, i32 0, i32 2, !dbg !8295
  store i16 %30, ptr %33, align 4, !dbg !8296
  %34 = load ptr, ptr %3, align 8, !dbg !8297
  %35 = getelementptr inbounds %struct.lwan_t_, ptr %34, i32 0, i32 2, !dbg !8299
  %36 = getelementptr inbounds %struct.anon.0.24, ptr %35, i32 0, i32 2, !dbg !8300
  %37 = load i16, ptr %36, align 4, !dbg !8300
  %38 = zext i16 %37 to i32, !dbg !8297
  %39 = icmp eq i32 %38, 1, !dbg !8301
  br i1 %39, label %40, label %44, !dbg !8302

40:                                               ; preds = %29
  %41 = load ptr, ptr %3, align 8, !dbg !8303
  %42 = getelementptr inbounds %struct.lwan_t_, ptr %41, i32 0, i32 2, !dbg !8304
  %43 = getelementptr inbounds %struct.anon.0.24, ptr %42, i32 0, i32 2, !dbg !8305
  store i16 2, ptr %43, align 4, !dbg !8306
  br label %44, !dbg !8303

44:                                               ; preds = %40, %29
  br label %53, !dbg !8307

45:                                               ; preds = %23
  %46 = load ptr, ptr %3, align 8, !dbg !8308
  %47 = getelementptr inbounds %struct.lwan_t_, ptr %46, i32 0, i32 4, !dbg !8310
  %48 = getelementptr inbounds %struct.lwan_config_t_, ptr %47, i32 0, i32 5, !dbg !8311
  %49 = load i16, ptr %48, align 8, !dbg !8311
  %50 = load ptr, ptr %3, align 8, !dbg !8312
  %51 = getelementptr inbounds %struct.lwan_t_, ptr %50, i32 0, i32 2, !dbg !8313
  %52 = getelementptr inbounds %struct.anon.0.24, ptr %51, i32 0, i32 2, !dbg !8314
  store i16 %49, ptr %52, align 4, !dbg !8315
  br label %53

53:                                               ; preds = %45, %44
  call void @llvm.dbg.declare(metadata ptr %5, metadata !8316, metadata !DIExpression()), !dbg !8318
  %54 = call i64 @setup_open_file_count_limits(), !dbg !8319
  store i64 %54, ptr %5, align 8, !dbg !8318
  %55 = load ptr, ptr %3, align 8, !dbg !8320
  %56 = load i64, ptr %5, align 8, !dbg !8321
  call void @allocate_connections(ptr noundef %55, i64 noundef %56), !dbg !8322
  %57 = load i64, ptr %5, align 8, !dbg !8323
  %58 = trunc i64 %57 to i32, !dbg !8324
  %59 = load ptr, ptr %3, align 8, !dbg !8325
  %60 = getelementptr inbounds %struct.lwan_t_, ptr %59, i32 0, i32 2, !dbg !8326
  %61 = getelementptr inbounds %struct.anon.0.24, ptr %60, i32 0, i32 2, !dbg !8327
  %62 = load i16, ptr %61, align 4, !dbg !8327
  %63 = zext i16 %62 to i32, !dbg !8328
  %64 = udiv i32 %58, %63, !dbg !8329
  %65 = load ptr, ptr %3, align 8, !dbg !8330
  %66 = getelementptr inbounds %struct.lwan_t_, ptr %65, i32 0, i32 2, !dbg !8331
  %67 = getelementptr inbounds %struct.anon.0.24, ptr %66, i32 0, i32 1, !dbg !8332
  store i32 %64, ptr %67, align 8, !dbg !8333
  %68 = load ptr, ptr %3, align 8, !dbg !8334
  %69 = getelementptr inbounds %struct.lwan_t_, ptr %68, i32 0, i32 2, !dbg !8334
  %70 = getelementptr inbounds %struct.anon.0.24, ptr %69, i32 0, i32 2, !dbg !8334
  %71 = load i16, ptr %70, align 4, !dbg !8334
  %72 = zext i16 %71 to i32, !dbg !8334
  %73 = load ptr, ptr %3, align 8, !dbg !8334
  %74 = getelementptr inbounds %struct.lwan_t_, ptr %73, i32 0, i32 2, !dbg !8334
  %75 = getelementptr inbounds %struct.anon.0.24, ptr %74, i32 0, i32 1, !dbg !8334
  %76 = load i32, ptr %75, align 8, !dbg !8334
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_info_debug(ptr noundef @.str.60, i32 noundef 492, ptr noundef @__FUNCTION__.lwan_init_with_config, ptr noundef @.str.7.67, i32 noundef %72, i32 noundef %76), !dbg !8334
  %77 = call ptr @signal(i32 noundef 13, ptr noundef inttoptr (i64 1 to ptr)) #18, !dbg !8335
  %78 = call i32 @close(i32 noundef 0), !dbg !8336
  %79 = load ptr, ptr %3, align 8, !dbg !8337
  call void @lwan_thread_init(ptr noundef %79), !dbg !8338
  %80 = load ptr, ptr %3, align 8, !dbg !8339
  call void @lwan_socket_init(ptr noundef %80), !dbg !8340
  %81 = call zeroext i1 @lwan_http_authorize_init(), !dbg !8341
  ret void, !dbg !8342
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @lwan_module_init(ptr noundef %0) #0 !dbg !8343 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !8344, metadata !DIExpression()), !dbg !8345
  %3 = load ptr, ptr %2, align 8, !dbg !8346
  %4 = getelementptr inbounds %struct.lwan_t_, ptr %3, i32 0, i32 3, !dbg !8348
  %5 = load ptr, ptr %4, align 8, !dbg !8348
  %6 = icmp ne ptr %5, null, !dbg !8346
  br i1 %6, label %11, label %7, !dbg !8349

7:                                                ; preds = %1
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.60, i32 noundef 56, ptr noundef @__FUNCTION__.lwan_module_init, ptr noundef @.str.18), !dbg !8350
  %8 = call ptr @hash_str_new(ptr noundef null, ptr noundef null), !dbg !8352
  %9 = load ptr, ptr %2, align 8, !dbg !8353
  %10 = getelementptr inbounds %struct.lwan_t_, ptr %9, i32 0, i32 3, !dbg !8354
  store ptr %8, ptr %10, align 8, !dbg !8355
  br label %11, !dbg !8356

11:                                               ; preds = %7, %1
  ret void, !dbg !8357
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @lwan_module_register(ptr noundef %0, ptr noundef %1) #0 !dbg !8358 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !8361, metadata !DIExpression()), !dbg !8362
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !8363, metadata !DIExpression()), !dbg !8364
  %5 = load ptr, ptr %4, align 8, !dbg !8365
  %6 = getelementptr inbounds %struct.lwan_module_t_, ptr %5, i32 0, i32 0, !dbg !8367
  %7 = load ptr, ptr %6, align 8, !dbg !8367
  %8 = icmp ne ptr %7, null, !dbg !8365
  br i1 %8, label %11, label %9, !dbg !8368

9:                                                ; preds = %2
  %10 = load ptr, ptr %4, align 8, !dbg !8369
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_debug(ptr noundef @.str.60, i32 noundef 69, ptr noundef @__FUNCTION__.lwan_module_register, ptr noundef @.str.19, ptr noundef %10) #23, !dbg !8369
  unreachable, !dbg !8369

11:                                               ; preds = %2
  %12 = load ptr, ptr %4, align 8, !dbg !8370
  %13 = getelementptr inbounds %struct.lwan_module_t_, ptr %12, i32 0, i32 0, !dbg !8370
  %14 = load ptr, ptr %13, align 8, !dbg !8370
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.60, i32 noundef 71, ptr noundef @__FUNCTION__.lwan_module_register, ptr noundef @.str.20, ptr noundef %14), !dbg !8370
  %15 = load ptr, ptr %3, align 8, !dbg !8371
  %16 = getelementptr inbounds %struct.lwan_t_, ptr %15, i32 0, i32 3, !dbg !8372
  %17 = load ptr, ptr %16, align 8, !dbg !8372
  %18 = load ptr, ptr %4, align 8, !dbg !8373
  %19 = getelementptr inbounds %struct.lwan_module_t_, ptr %18, i32 0, i32 0, !dbg !8374
  %20 = load ptr, ptr %19, align 8, !dbg !8374
  %21 = load ptr, ptr %4, align 8, !dbg !8375
  %22 = call i32 @hash_add(ptr noundef %17, ptr noundef %20, ptr noundef %21), !dbg !8376
  ret void, !dbg !8377
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @setup_from_config(ptr noundef %0) #0 !dbg !8378 {
  %2 = alloca i1, align 1
  %3 = alloca ptr, align 8
  %4 = alloca %struct.config_t_, align 8
  %5 = alloca %struct.config_line_t_, align 8
  %6 = alloca i8, align 1
  %7 = alloca [4096 x i8], align 16
  %8 = alloca ptr, align 8
  %9 = alloca i64, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !8381, metadata !DIExpression()), !dbg !8382
  call void @llvm.dbg.declare(metadata ptr %4, metadata !8383, metadata !DIExpression()), !dbg !8424
  call void @llvm.dbg.declare(metadata ptr %5, metadata !8425, metadata !DIExpression()), !dbg !8444
  call void @llvm.dbg.declare(metadata ptr %6, metadata !8445, metadata !DIExpression()), !dbg !8446
  store i8 0, ptr %6, align 1, !dbg !8446
  call void @llvm.dbg.declare(metadata ptr %7, metadata !8447, metadata !DIExpression()), !dbg !8451
  call void @llvm.dbg.declare(metadata ptr %8, metadata !8452, metadata !DIExpression()), !dbg !8453
  %10 = getelementptr inbounds [4096 x i8], ptr %7, i64 0, i64 0, !dbg !8454
  %11 = call ptr @get_config_path(ptr noundef %10), !dbg !8455
  store ptr %11, ptr %8, align 8, !dbg !8456
  %12 = load ptr, ptr %8, align 8, !dbg !8457
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_info_debug(ptr noundef @.str.60, i32 noundef 334, ptr noundef @__FUNCTION__.setup_from_config, ptr noundef @.str.21, ptr noundef %12), !dbg !8457
  %13 = load ptr, ptr %3, align 8, !dbg !8458
  %14 = getelementptr inbounds %struct.lwan_t_, ptr %13, i32 0, i32 0, !dbg !8460
  %15 = call zeroext i1 @lwan_trie_init(ptr noundef %14, ptr noundef @destroy_urlmap), !dbg !8461
  br i1 %15, label %17, label %16, !dbg !8462

16:                                               ; preds = %1
  store i1 false, ptr %2, align 1, !dbg !8463
  br label %161, !dbg !8463

17:                                               ; preds = %1
  %18 = load ptr, ptr %8, align 8, !dbg !8464
  %19 = call zeroext i1 @config_open(ptr noundef %4, ptr noundef %18), !dbg !8466
  br i1 %19, label %21, label %20, !dbg !8467

20:                                               ; preds = %17
  store i1 false, ptr %2, align 1, !dbg !8468
  br label %161, !dbg !8468

21:                                               ; preds = %17
  br label %22, !dbg !8469

22:                                               ; preds = %149, %21
  %23 = call zeroext i1 @config_read_line(ptr noundef %4, ptr noundef %5), !dbg !8470
  br i1 %23, label %24, label %150, !dbg !8469

24:                                               ; preds = %22
  %25 = getelementptr inbounds %struct.config_line_t_, ptr %5, i32 0, i32 1, !dbg !8471
  %26 = load i32, ptr %25, align 8, !dbg !8471
  switch i32 %26, label %149 [
    i32 0, label %27
    i32 1, label %127
    i32 2, label %147
  ], !dbg !8473

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct.config_line_t_, ptr %5, i32 0, i32 0, !dbg !8474
  %29 = getelementptr inbounds %struct.list_node, ptr %28, i32 0, i32 0, !dbg !8477
  %30 = load ptr, ptr %29, align 8, !dbg !8477
  %31 = call i32 @strcmp(ptr noundef %30, ptr noundef @.str.22) #22, !dbg !8478
  %32 = icmp ne i32 %31, 0, !dbg !8478
  br i1 %32, label %44, label %33, !dbg !8479

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct.config_line_t_, ptr %5, i32 0, i32 0, !dbg !8480
  %35 = getelementptr inbounds %struct.list_node, ptr %34, i32 0, i32 1, !dbg !8481
  %36 = load ptr, ptr %35, align 8, !dbg !8481
  %37 = load i16, ptr getelementptr inbounds (%struct.lwan_config_t_, ptr @default_config, i32 0, i32 1), align 8, !dbg !8482
  %38 = zext i16 %37 to i64, !dbg !8483
  %39 = call i64 @parse_long(ptr noundef %36, i64 noundef %38), !dbg !8484
  %40 = trunc i64 %39 to i16, !dbg !8485
  %41 = load ptr, ptr %3, align 8, !dbg !8486
  %42 = getelementptr inbounds %struct.lwan_t_, ptr %41, i32 0, i32 4, !dbg !8487
  %43 = getelementptr inbounds %struct.lwan_config_t_, ptr %42, i32 0, i32 1, !dbg !8488
  store i16 %40, ptr %43, align 8, !dbg !8489
  br label %126, !dbg !8486

44:                                               ; preds = %27
  %45 = getelementptr inbounds %struct.config_line_t_, ptr %5, i32 0, i32 0, !dbg !8490
  %46 = getelementptr inbounds %struct.list_node, ptr %45, i32 0, i32 0, !dbg !8492
  %47 = load ptr, ptr %46, align 8, !dbg !8492
  %48 = call i32 @strcmp(ptr noundef %47, ptr noundef @.str.23) #22, !dbg !8493
  %49 = icmp ne i32 %48, 0, !dbg !8493
  br i1 %49, label %61, label %50, !dbg !8494

50:                                               ; preds = %44
  %51 = getelementptr inbounds %struct.config_line_t_, ptr %5, i32 0, i32 0, !dbg !8495
  %52 = getelementptr inbounds %struct.list_node, ptr %51, i32 0, i32 1, !dbg !8496
  %53 = load ptr, ptr %52, align 8, !dbg !8496
  %54 = load i8, ptr getelementptr inbounds (%struct.lwan_config_t_, ptr @default_config, i32 0, i32 2), align 2, !dbg !8497
  %55 = trunc i8 %54 to i1, !dbg !8497
  %56 = call zeroext i1 @parse_bool(ptr noundef %53, i1 noundef zeroext %55), !dbg !8498
  %57 = load ptr, ptr %3, align 8, !dbg !8499
  %58 = getelementptr inbounds %struct.lwan_t_, ptr %57, i32 0, i32 4, !dbg !8500
  %59 = getelementptr inbounds %struct.lwan_config_t_, ptr %58, i32 0, i32 2, !dbg !8501
  %60 = zext i1 %56 to i8, !dbg !8502
  store i8 %60, ptr %59, align 2, !dbg !8502
  br label %125, !dbg !8499

61:                                               ; preds = %44
  %62 = getelementptr inbounds %struct.config_line_t_, ptr %5, i32 0, i32 0, !dbg !8503
  %63 = getelementptr inbounds %struct.list_node, ptr %62, i32 0, i32 0, !dbg !8505
  %64 = load ptr, ptr %63, align 8, !dbg !8505
  %65 = call i32 @strcmp(ptr noundef %64, ptr noundef @.str.24) #22, !dbg !8506
  %66 = icmp ne i32 %65, 0, !dbg !8506
  br i1 %66, label %78, label %67, !dbg !8507

67:                                               ; preds = %61
  %68 = getelementptr inbounds %struct.config_line_t_, ptr %5, i32 0, i32 0, !dbg !8508
  %69 = getelementptr inbounds %struct.list_node, ptr %68, i32 0, i32 1, !dbg !8509
  %70 = load ptr, ptr %69, align 8, !dbg !8509
  %71 = load i8, ptr getelementptr inbounds (%struct.lwan_config_t_, ptr @default_config, i32 0, i32 3), align 1, !dbg !8510
  %72 = trunc i8 %71 to i1, !dbg !8510
  %73 = call zeroext i1 @parse_bool(ptr noundef %70, i1 noundef zeroext %72), !dbg !8511
  %74 = load ptr, ptr %3, align 8, !dbg !8512
  %75 = getelementptr inbounds %struct.lwan_t_, ptr %74, i32 0, i32 4, !dbg !8513
  %76 = getelementptr inbounds %struct.lwan_config_t_, ptr %75, i32 0, i32 3, !dbg !8514
  %77 = zext i1 %73 to i8, !dbg !8515
  store i8 %77, ptr %76, align 1, !dbg !8515
  br label %124, !dbg !8512

78:                                               ; preds = %61
  %79 = getelementptr inbounds %struct.config_line_t_, ptr %5, i32 0, i32 0, !dbg !8516
  %80 = getelementptr inbounds %struct.list_node, ptr %79, i32 0, i32 0, !dbg !8518
  %81 = load ptr, ptr %80, align 8, !dbg !8518
  %82 = call i32 @strcmp(ptr noundef %81, ptr noundef @.str.25.68) #22, !dbg !8519
  %83 = icmp ne i32 %82, 0, !dbg !8519
  br i1 %83, label %93, label %84, !dbg !8520

84:                                               ; preds = %78
  %85 = getelementptr inbounds %struct.config_line_t_, ptr %5, i32 0, i32 0, !dbg !8521
  %86 = getelementptr inbounds %struct.list_node, ptr %85, i32 0, i32 1, !dbg !8522
  %87 = load ptr, ptr %86, align 8, !dbg !8522
  %88 = load i32, ptr getelementptr inbounds (%struct.lwan_config_t_, ptr @default_config, i32 0, i32 4), align 4, !dbg !8523
  %89 = call i32 @parse_time_period(ptr noundef %87, i32 noundef %88), !dbg !8524
  %90 = load ptr, ptr %3, align 8, !dbg !8525
  %91 = getelementptr inbounds %struct.lwan_t_, ptr %90, i32 0, i32 4, !dbg !8526
  %92 = getelementptr inbounds %struct.lwan_config_t_, ptr %91, i32 0, i32 4, !dbg !8527
  store i32 %89, ptr %92, align 4, !dbg !8528
  br label %123, !dbg !8525

93:                                               ; preds = %78
  %94 = getelementptr inbounds %struct.config_line_t_, ptr %5, i32 0, i32 0, !dbg !8529
  %95 = getelementptr inbounds %struct.list_node, ptr %94, i32 0, i32 0, !dbg !8531
  %96 = load ptr, ptr %95, align 8, !dbg !8531
  %97 = call i32 @strcmp(ptr noundef %96, ptr noundef @.str.26) #22, !dbg !8532
  %98 = icmp ne i32 %97, 0, !dbg !8532
  br i1 %98, label %117, label %99, !dbg !8533

99:                                               ; preds = %93
  call void @llvm.dbg.declare(metadata ptr %9, metadata !8534, metadata !DIExpression()), !dbg !8536
  %100 = getelementptr inbounds %struct.config_line_t_, ptr %5, i32 0, i32 0, !dbg !8537
  %101 = getelementptr inbounds %struct.list_node, ptr %100, i32 0, i32 1, !dbg !8538
  %102 = load ptr, ptr %101, align 8, !dbg !8538
  %103 = load i16, ptr getelementptr inbounds (%struct.lwan_config_t_, ptr @default_config, i32 0, i32 5), align 8, !dbg !8539
  %104 = zext i16 %103 to i64, !dbg !8540
  %105 = call i64 @parse_long(ptr noundef %102, i64 noundef %104), !dbg !8541
  store i64 %105, ptr %9, align 8, !dbg !8536
  %106 = load i64, ptr %9, align 8, !dbg !8542
  %107 = icmp slt i64 %106, 0, !dbg !8544
  br i1 %107, label %108, label %111, !dbg !8545

108:                                              ; preds = %99
  %109 = load i64, ptr %9, align 8, !dbg !8546
  %110 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %4, ptr noundef @.str.27, i64 noundef %109), !dbg !8547
  br label %111, !dbg !8547

111:                                              ; preds = %108, %99
  %112 = load i64, ptr %9, align 8, !dbg !8548
  %113 = trunc i64 %112 to i16, !dbg !8549
  %114 = load ptr, ptr %3, align 8, !dbg !8550
  %115 = getelementptr inbounds %struct.lwan_t_, ptr %114, i32 0, i32 4, !dbg !8551
  %116 = getelementptr inbounds %struct.lwan_config_t_, ptr %115, i32 0, i32 5, !dbg !8552
  store i16 %113, ptr %116, align 8, !dbg !8553
  br label %122, !dbg !8554

117:                                              ; preds = %93
  %118 = getelementptr inbounds %struct.config_line_t_, ptr %5, i32 0, i32 0, !dbg !8555
  %119 = getelementptr inbounds %struct.list_node, ptr %118, i32 0, i32 0, !dbg !8556
  %120 = load ptr, ptr %119, align 8, !dbg !8556
  %121 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %4, ptr noundef @.str.28, ptr noundef %120), !dbg !8557
  br label %122

122:                                              ; preds = %117, %111
  br label %123

123:                                              ; preds = %122, %84
  br label %124

124:                                              ; preds = %123, %67
  br label %125

125:                                              ; preds = %124, %50
  br label %126

126:                                              ; preds = %125, %33
  br label %149, !dbg !8558

127:                                              ; preds = %24
  %128 = load i8, ptr %6, align 1, !dbg !8559
  %129 = trunc i8 %128 to i1, !dbg !8559
  br i1 %129, label %144, label %130, !dbg !8561

130:                                              ; preds = %127
  store i8 1, ptr %6, align 1, !dbg !8562
  %131 = getelementptr inbounds %struct.config_line_t_, ptr %5, i32 0, i32 0, !dbg !8564
  %132 = getelementptr inbounds %struct.list_node, ptr %131, i32 0, i32 0, !dbg !8566
  %133 = load ptr, ptr %132, align 8, !dbg !8566
  %134 = call i32 @strcmp(ptr noundef %133, ptr noundef @.str.29) #22, !dbg !8567
  %135 = icmp ne i32 %134, 0, !dbg !8567
  br i1 %135, label %138, label %136, !dbg !8568

136:                                              ; preds = %130
  %137 = load ptr, ptr %3, align 8, !dbg !8569
  call void @parse_listener(ptr noundef %4, ptr noundef %5, ptr noundef %137), !dbg !8570
  br label %143, !dbg !8570

138:                                              ; preds = %130
  %139 = getelementptr inbounds %struct.config_line_t_, ptr %5, i32 0, i32 0, !dbg !8571
  %140 = getelementptr inbounds %struct.list_node, ptr %139, i32 0, i32 0, !dbg !8572
  %141 = load ptr, ptr %140, align 8, !dbg !8572
  %142 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %4, ptr noundef @.str.30, ptr noundef %141), !dbg !8573
  br label %143

143:                                              ; preds = %138, %136
  br label %146, !dbg !8574

144:                                              ; preds = %127
  %145 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %4, ptr noundef @.str.31), !dbg !8575
  br label %146

146:                                              ; preds = %144, %143
  br label %149, !dbg !8577

147:                                              ; preds = %24
  %148 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %4, ptr noundef @.str.32), !dbg !8578
  br label %149, !dbg !8579

149:                                              ; preds = %147, %146, %126, %24
  br label %22, !dbg !8469, !llvm.loop !8580

150:                                              ; preds = %22
  %151 = getelementptr inbounds %struct.config_t_, ptr %4, i32 0, i32 2, !dbg !8582
  %152 = load ptr, ptr %151, align 8, !dbg !8582
  %153 = icmp ne ptr %152, null, !dbg !8584
  br i1 %153, label %154, label %160, !dbg !8585

154:                                              ; preds = %150
  %155 = load ptr, ptr %8, align 8, !dbg !8586
  %156 = getelementptr inbounds %struct.config_t_, ptr %4, i32 0, i32 1, !dbg !8586
  %157 = load i32, ptr %156, align 8, !dbg !8586
  %158 = getelementptr inbounds %struct.config_t_, ptr %4, i32 0, i32 2, !dbg !8586
  %159 = load ptr, ptr %158, align 8, !dbg !8586
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_debug(ptr noundef @.str.60, i32 noundef 384, ptr noundef @__FUNCTION__.setup_from_config, ptr noundef @.str.33, ptr noundef %155, i32 noundef %157, ptr noundef %159) #23, !dbg !8586
  unreachable, !dbg !8586

160:                                              ; preds = %150
  call void @config_close(ptr noundef %4), !dbg !8588
  store i1 true, ptr %2, align 1, !dbg !8589
  br label %161, !dbg !8589

161:                                              ; preds = %160, %20, %16
  %162 = load i1, ptr %2, align 1, !dbg !8590
  ret i1 %162, !dbg !8590
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i16 @get_number_of_cpus() #0 !dbg !8591 {
  %1 = alloca i16, align 2
  %2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !8594, metadata !DIExpression()), !dbg !8595
  %3 = call i64 @sysconf(i32 noundef 84) #18, !dbg !8596
  store i64 %3, ptr %2, align 8, !dbg !8595
  %4 = load i64, ptr %2, align 8, !dbg !8597
  %5 = icmp slt i64 %4, 0, !dbg !8597
  %6 = zext i1 %5 to i32, !dbg !8597
  %7 = sext i32 %6 to i64, !dbg !8597
  %8 = icmp ne i64 %7, 0, !dbg !8597
  br i1 %8, label %9, label %10, !dbg !8599

9:                                                ; preds = %0
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_warning_debug(ptr noundef @.str.60, i32 noundef 427, ptr noundef @__FUNCTION__.get_number_of_cpus, ptr noundef @.str.56), !dbg !8600
  store i16 1, ptr %1, align 2, !dbg !8602
  br label %13, !dbg !8602

10:                                               ; preds = %0
  %11 = load i64, ptr %2, align 8, !dbg !8603
  %12 = trunc i64 %11 to i16, !dbg !8604
  store i16 %12, ptr %1, align 2, !dbg !8605
  br label %13, !dbg !8605

13:                                               ; preds = %10, %9
  %14 = load i16, ptr %1, align 2, !dbg !8606
  ret i16 %14, !dbg !8606
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @setup_open_file_count_limits() #0 !dbg !8607 {
  %1 = alloca i64, align 8
  %2 = alloca %struct.timespec, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !8610, metadata !DIExpression()), !dbg !8615
  %3 = call i32 @getrlimit(i32 noundef 7, ptr noundef %2) #18, !dbg !8616
  %4 = icmp slt i32 %3, 0, !dbg !8618
  br i1 %4, label %5, label %6, !dbg !8619

5:                                                ; preds = %0
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.60, i32 noundef 398, ptr noundef @__FUNCTION__.setup_open_file_count_limits, ptr noundef @.str.57) #23, !dbg !8620
  unreachable, !dbg !8620

6:                                                ; preds = %0
  %7 = getelementptr inbounds %struct.timespec, ptr %2, i32 0, i32 1, !dbg !8621
  %8 = load i64, ptr %7, align 8, !dbg !8621
  %9 = getelementptr inbounds %struct.timespec, ptr %2, i32 0, i32 0, !dbg !8623
  %10 = load i64, ptr %9, align 8, !dbg !8623
  %11 = icmp eq i64 %8, %10, !dbg !8624
  br i1 %11, label %12, label %15, !dbg !8625

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.timespec, ptr %2, i32 0, i32 0, !dbg !8626
  %14 = load i64, ptr %13, align 8, !dbg !8626
  store i64 %14, ptr %1, align 8, !dbg !8627
  br label %41, !dbg !8627

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.timespec, ptr %2, i32 0, i32 1, !dbg !8628
  %17 = load i64, ptr %16, align 8, !dbg !8628
  %18 = icmp eq i64 %17, -1, !dbg !8630
  br i1 %18, label %19, label %23, !dbg !8631

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.timespec, ptr %2, i32 0, i32 0, !dbg !8632
  %21 = load i64, ptr %20, align 8, !dbg !8633
  %22 = mul i64 %21, 8, !dbg !8633
  store i64 %22, ptr %20, align 8, !dbg !8633
  br label %34, !dbg !8634

23:                                               ; preds = %15
  %24 = getelementptr inbounds %struct.timespec, ptr %2, i32 0, i32 0, !dbg !8635
  %25 = load i64, ptr %24, align 8, !dbg !8635
  %26 = getelementptr inbounds %struct.timespec, ptr %2, i32 0, i32 1, !dbg !8637
  %27 = load i64, ptr %26, align 8, !dbg !8637
  %28 = icmp ult i64 %25, %27, !dbg !8638
  br i1 %28, label %29, label %33, !dbg !8639

29:                                               ; preds = %23
  %30 = getelementptr inbounds %struct.timespec, ptr %2, i32 0, i32 1, !dbg !8640
  %31 = load i64, ptr %30, align 8, !dbg !8640
  %32 = getelementptr inbounds %struct.timespec, ptr %2, i32 0, i32 0, !dbg !8641
  store i64 %31, ptr %32, align 8, !dbg !8642
  br label %33, !dbg !8643

33:                                               ; preds = %29, %23
  br label %34

34:                                               ; preds = %33, %19
  %35 = call i32 @setrlimit(i32 noundef 7, ptr noundef %2) #18, !dbg !8644
  %36 = icmp slt i32 %35, 0, !dbg !8646
  br i1 %36, label %37, label %38, !dbg !8647

37:                                               ; preds = %34
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.60, i32 noundef 409, ptr noundef @__FUNCTION__.setup_open_file_count_limits, ptr noundef @.str.58) #23, !dbg !8648
  unreachable, !dbg !8648

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.timespec, ptr %2, i32 0, i32 0, !dbg !8649
  %40 = load i64, ptr %39, align 8, !dbg !8649
  store i64 %40, ptr %1, align 8, !dbg !8650
  br label %41, !dbg !8650

41:                                               ; preds = %38, %12
  %42 = load i64, ptr %1, align 8, !dbg !8651
  ret i64 %42, !dbg !8651
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @allocate_connections(ptr noundef %0, i64 noundef %1) #0 !dbg !8652 {
  %3 = alloca ptr, align 8
  %4 = alloca i64, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !8655, metadata !DIExpression()), !dbg !8656
  store i64 %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !8657, metadata !DIExpression()), !dbg !8658
  %5 = load i64, ptr %4, align 8, !dbg !8659
  %6 = call noalias ptr @calloc(i64 noundef %5, i64 noundef 32) #19, !dbg !8660
  %7 = load ptr, ptr %3, align 8, !dbg !8661
  %8 = getelementptr inbounds %struct.lwan_t_, ptr %7, i32 0, i32 1, !dbg !8662
  store ptr %6, ptr %8, align 8, !dbg !8663
  %9 = load ptr, ptr %3, align 8, !dbg !8664
  %10 = getelementptr inbounds %struct.lwan_t_, ptr %9, i32 0, i32 1, !dbg !8666
  %11 = load ptr, ptr %10, align 8, !dbg !8666
  %12 = icmp ne ptr %11, null, !dbg !8664
  br i1 %12, label %14, label %13, !dbg !8667

13:                                               ; preds = %2
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.60, i32 noundef 419, ptr noundef @__FUNCTION__.allocate_connections, ptr noundef @.str.59) #23, !dbg !8668
  unreachable, !dbg !8668

14:                                               ; preds = %2
  ret void, !dbg !8669
}

; Function Attrs: nounwind
declare ptr @signal(i32 noundef, ptr noundef) #3

; Function Attrs: nounwind
declare i32 @getrlimit(i32 noundef, ptr noundef) #3

; Function Attrs: nounwind
declare i32 @setrlimit(i32 noundef, ptr noundef) #3

; Function Attrs: nounwind
declare i64 @sysconf(i32 noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @parse_listener(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !8670 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !8675, metadata !DIExpression()), !dbg !8676
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !8677, metadata !DIExpression()), !dbg !8678
  store ptr %2, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !8679, metadata !DIExpression()), !dbg !8680
  %8 = load ptr, ptr %5, align 8, !dbg !8681
  %9 = getelementptr inbounds %struct.config_line_t_, ptr %8, i32 0, i32 0, !dbg !8682
  %10 = getelementptr inbounds %struct.list_node, ptr %9, i32 0, i32 1, !dbg !8683
  %11 = load ptr, ptr %10, align 8, !dbg !8683
  %12 = call noalias ptr @strdup(ptr noundef %11) #18, !dbg !8684
  %13 = load ptr, ptr %6, align 8, !dbg !8685
  %14 = getelementptr inbounds %struct.lwan_t_, ptr %13, i32 0, i32 4, !dbg !8686
  %15 = getelementptr inbounds %struct.lwan_config_t_, ptr %14, i32 0, i32 0, !dbg !8687
  store ptr %12, ptr %15, align 8, !dbg !8688
  br label %16, !dbg !8689

16:                                               ; preds = %62, %3
  %17 = load ptr, ptr %4, align 8, !dbg !8690
  %18 = load ptr, ptr %5, align 8, !dbg !8691
  %19 = call zeroext i1 @config_read_line(ptr noundef %17, ptr noundef %18), !dbg !8692
  br i1 %19, label %20, label %63, !dbg !8689

20:                                               ; preds = %16
  %21 = load ptr, ptr %5, align 8, !dbg !8693
  %22 = getelementptr inbounds %struct.config_line_t_, ptr %21, i32 0, i32 1, !dbg !8695
  %23 = load i32, ptr %22, align 8, !dbg !8695
  switch i32 %23, label %62 [
    i32 0, label %24
    i32 1, label %27
    i32 2, label %61
  ], !dbg !8696

24:                                               ; preds = %20
  %25 = load ptr, ptr %4, align 8, !dbg !8697
  %26 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %25, ptr noundef @.str.34), !dbg !8699
  br label %66, !dbg !8700

27:                                               ; preds = %20
  %28 = load ptr, ptr %5, align 8, !dbg !8701
  %29 = getelementptr inbounds %struct.config_line_t_, ptr %28, i32 0, i32 0, !dbg !8703
  %30 = getelementptr inbounds %struct.list_node, ptr %29, i32 0, i32 0, !dbg !8704
  %31 = load ptr, ptr %30, align 8, !dbg !8704
  %32 = call i32 @strcmp(ptr noundef %31, ptr noundef @.str.35) #22, !dbg !8705
  %33 = icmp ne i32 %32, 0, !dbg !8705
  br i1 %33, label %38, label %34, !dbg !8706

34:                                               ; preds = %27
  %35 = load ptr, ptr %4, align 8, !dbg !8707
  %36 = load ptr, ptr %5, align 8, !dbg !8709
  %37 = load ptr, ptr %6, align 8, !dbg !8710
  call void @parse_listener_prefix(ptr noundef %35, ptr noundef %36, ptr noundef %37, ptr noundef null), !dbg !8711
  br label %60, !dbg !8712

38:                                               ; preds = %27
  call void @llvm.dbg.declare(metadata ptr %7, metadata !8713, metadata !DIExpression()), !dbg !8715
  %39 = load ptr, ptr %6, align 8, !dbg !8716
  %40 = load ptr, ptr %5, align 8, !dbg !8717
  %41 = getelementptr inbounds %struct.config_line_t_, ptr %40, i32 0, i32 0, !dbg !8718
  %42 = getelementptr inbounds %struct.list_node, ptr %41, i32 0, i32 0, !dbg !8719
  %43 = load ptr, ptr %42, align 8, !dbg !8719
  %44 = call ptr @lwan_module_find(ptr noundef %39, ptr noundef %43), !dbg !8720
  store ptr %44, ptr %7, align 8, !dbg !8715
  %45 = load ptr, ptr %7, align 8, !dbg !8721
  %46 = icmp ne ptr %45, null, !dbg !8721
  br i1 %46, label %54, label %47, !dbg !8723

47:                                               ; preds = %38
  %48 = load ptr, ptr %4, align 8, !dbg !8724
  %49 = load ptr, ptr %5, align 8, !dbg !8726
  %50 = getelementptr inbounds %struct.config_line_t_, ptr %49, i32 0, i32 0, !dbg !8727
  %51 = getelementptr inbounds %struct.list_node, ptr %50, i32 0, i32 0, !dbg !8728
  %52 = load ptr, ptr %51, align 8, !dbg !8728
  %53 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %48, ptr noundef @.str.36, ptr noundef %52), !dbg !8729
  br label %59, !dbg !8730

54:                                               ; preds = %38
  %55 = load ptr, ptr %4, align 8, !dbg !8731
  %56 = load ptr, ptr %5, align 8, !dbg !8733
  %57 = load ptr, ptr %6, align 8, !dbg !8734
  %58 = load ptr, ptr %7, align 8, !dbg !8735
  call void @parse_listener_prefix(ptr noundef %55, ptr noundef %56, ptr noundef %57, ptr noundef %58), !dbg !8736
  br label %59

59:                                               ; preds = %54, %47
  br label %60

60:                                               ; preds = %59, %34
  br label %62, !dbg !8737

61:                                               ; preds = %20
  br label %66, !dbg !8738

62:                                               ; preds = %60, %20
  br label %16, !dbg !8689, !llvm.loop !8739

63:                                               ; preds = %16
  %64 = load ptr, ptr %4, align 8, !dbg !8741
  %65 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %64, ptr noundef @.str.37.69), !dbg !8742
  br label %66, !dbg !8743

66:                                               ; preds = %63, %61, %24
  ret void, !dbg !8743
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @parse_listener_prefix(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 !dbg !8744 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca %struct.lwan_url_map_t_, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca i64, align 8
  %15 = alloca ptr, align 8
  %16 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !8747, metadata !DIExpression()), !dbg !8748
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !8749, metadata !DIExpression()), !dbg !8750
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !8751, metadata !DIExpression()), !dbg !8752
  store ptr %3, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !8753, metadata !DIExpression()), !dbg !8754
  call void @llvm.dbg.declare(metadata ptr %9, metadata !8755, metadata !DIExpression()), !dbg !8756
  call void @llvm.memset.p0.i64(ptr align 8 %9, i8 0, i64 72, i1 false), !dbg !8756
  call void @llvm.dbg.declare(metadata ptr %10, metadata !8757, metadata !DIExpression()), !dbg !8758
  %17 = call ptr @hash_str_new(ptr noundef @free, ptr noundef @free), !dbg !8759
  store ptr %17, ptr %10, align 8, !dbg !8758
  call void @llvm.dbg.declare(metadata ptr %11, metadata !8760, metadata !DIExpression()), !dbg !8761
  store ptr null, ptr %11, align 8, !dbg !8761
  call void @llvm.dbg.declare(metadata ptr %12, metadata !8762, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.declare(metadata ptr %13, metadata !8764, metadata !DIExpression()), !dbg !8766
  %18 = load ptr, ptr %6, align 8, !dbg !8766
  %19 = getelementptr inbounds %struct.config_line_t_, ptr %18, i32 0, i32 0, !dbg !8766
  %20 = getelementptr inbounds %struct.list_node, ptr %19, i32 0, i32 1, !dbg !8766
  %21 = load ptr, ptr %20, align 8, !dbg !8766
  store ptr %21, ptr %13, align 8, !dbg !8766
  call void @llvm.dbg.declare(metadata ptr %14, metadata !8767, metadata !DIExpression()), !dbg !8766
  %22 = load ptr, ptr %13, align 8, !dbg !8766
  %23 = call i64 @strlen(ptr noundef %22) #22, !dbg !8766
  %24 = add i64 %23, 1, !dbg !8766
  store i64 %24, ptr %14, align 8, !dbg !8766
  call void @llvm.dbg.declare(metadata ptr %15, metadata !8768, metadata !DIExpression()), !dbg !8766
  %25 = load i64, ptr %14, align 8, !dbg !8766
  %26 = alloca i8, i64 %25, align 16, !dbg !8766
  store ptr %26, ptr %15, align 8, !dbg !8766
  %27 = load ptr, ptr %15, align 8, !dbg !8766
  %28 = load ptr, ptr %13, align 8, !dbg !8766
  %29 = load i64, ptr %14, align 8, !dbg !8766
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %27, ptr align 1 %28, i64 %29, i1 false), !dbg !8766
  store ptr %27, ptr %16, align 8, !dbg !8766
  %30 = load ptr, ptr %16, align 8, !dbg !8766
  store ptr %30, ptr %12, align 8, !dbg !8763
  br label %31, !dbg !8769

31:                                               ; preds = %126, %4
  %32 = load ptr, ptr %5, align 8, !dbg !8770
  %33 = load ptr, ptr %6, align 8, !dbg !8771
  %34 = call zeroext i1 @config_read_line(ptr noundef %32, ptr noundef %33), !dbg !8772
  br i1 %34, label %35, label %127, !dbg !8769

35:                                               ; preds = %31
  %36 = load ptr, ptr %6, align 8, !dbg !8773
  %37 = getelementptr inbounds %struct.config_line_t_, ptr %36, i32 0, i32 1, !dbg !8775
  %38 = load i32, ptr %37, align 8, !dbg !8775
  switch i32 %38, label %126 [
    i32 0, label %39
    i32 1, label %107
    i32 2, label %125
  ], !dbg !8776

39:                                               ; preds = %35
  %40 = load ptr, ptr %6, align 8, !dbg !8777
  %41 = getelementptr inbounds %struct.config_line_t_, ptr %40, i32 0, i32 0, !dbg !8780
  %42 = getelementptr inbounds %struct.list_node, ptr %41, i32 0, i32 0, !dbg !8781
  %43 = load ptr, ptr %42, align 8, !dbg !8781
  %44 = call i32 @strcmp(ptr noundef %43, ptr noundef @.str.38) #22, !dbg !8782
  %45 = icmp ne i32 %44, 0, !dbg !8782
  br i1 %45, label %69, label %46, !dbg !8783

46:                                               ; preds = %39
  %47 = load ptr, ptr %8, align 8, !dbg !8784
  %48 = icmp ne ptr %47, null, !dbg !8784
  br i1 %48, label %49, label %52, !dbg !8787

49:                                               ; preds = %46
  %50 = load ptr, ptr %5, align 8, !dbg !8788
  %51 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %50, ptr noundef @.str.39.70), !dbg !8790
  br label %202, !dbg !8791

52:                                               ; preds = %46
  %53 = load ptr, ptr %7, align 8, !dbg !8792
  %54 = load ptr, ptr %6, align 8, !dbg !8793
  %55 = getelementptr inbounds %struct.config_line_t_, ptr %54, i32 0, i32 0, !dbg !8794
  %56 = getelementptr inbounds %struct.list_node, ptr %55, i32 0, i32 1, !dbg !8795
  %57 = load ptr, ptr %56, align 8, !dbg !8795
  %58 = call ptr @lwan_module_find(ptr noundef %53, ptr noundef %57), !dbg !8796
  store ptr %58, ptr %8, align 8, !dbg !8797
  %59 = load ptr, ptr %8, align 8, !dbg !8798
  %60 = icmp ne ptr %59, null, !dbg !8798
  br i1 %60, label %68, label %61, !dbg !8800

61:                                               ; preds = %52
  %62 = load ptr, ptr %5, align 8, !dbg !8801
  %63 = load ptr, ptr %6, align 8, !dbg !8803
  %64 = getelementptr inbounds %struct.config_line_t_, ptr %63, i32 0, i32 0, !dbg !8804
  %65 = getelementptr inbounds %struct.list_node, ptr %64, i32 0, i32 1, !dbg !8805
  %66 = load ptr, ptr %65, align 8, !dbg !8805
  %67 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %62, ptr noundef @.str.40, ptr noundef %66), !dbg !8806
  br label %202, !dbg !8807

68:                                               ; preds = %52
  br label %106, !dbg !8808

69:                                               ; preds = %39
  %70 = load ptr, ptr %6, align 8, !dbg !8809
  %71 = getelementptr inbounds %struct.config_line_t_, ptr %70, i32 0, i32 0, !dbg !8811
  %72 = getelementptr inbounds %struct.list_node, ptr %71, i32 0, i32 0, !dbg !8812
  %73 = load ptr, ptr %72, align 8, !dbg !8812
  %74 = call i32 @strcmp(ptr noundef %73, ptr noundef @.str.41) #22, !dbg !8813
  %75 = icmp ne i32 %74, 0, !dbg !8813
  br i1 %75, label %92, label %76, !dbg !8814

76:                                               ; preds = %69
  %77 = load ptr, ptr %6, align 8, !dbg !8815
  %78 = getelementptr inbounds %struct.config_line_t_, ptr %77, i32 0, i32 0, !dbg !8817
  %79 = getelementptr inbounds %struct.list_node, ptr %78, i32 0, i32 1, !dbg !8818
  %80 = load ptr, ptr %79, align 8, !dbg !8818
  %81 = call ptr @find_handler_symbol(ptr noundef %80), !dbg !8819
  store ptr %81, ptr %11, align 8, !dbg !8820
  %82 = load ptr, ptr %11, align 8, !dbg !8821
  %83 = icmp ne ptr %82, null, !dbg !8821
  br i1 %83, label %91, label %84, !dbg !8823

84:                                               ; preds = %76
  %85 = load ptr, ptr %5, align 8, !dbg !8824
  %86 = load ptr, ptr %6, align 8, !dbg !8826
  %87 = getelementptr inbounds %struct.config_line_t_, ptr %86, i32 0, i32 0, !dbg !8827
  %88 = getelementptr inbounds %struct.list_node, ptr %87, i32 0, i32 1, !dbg !8828
  %89 = load ptr, ptr %88, align 8, !dbg !8828
  %90 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %85, ptr noundef @.str.42.71, ptr noundef %89), !dbg !8829
  br label %202, !dbg !8830

91:                                               ; preds = %76
  br label %105, !dbg !8831

92:                                               ; preds = %69
  %93 = load ptr, ptr %10, align 8, !dbg !8832
  %94 = load ptr, ptr %6, align 8, !dbg !8834
  %95 = getelementptr inbounds %struct.config_line_t_, ptr %94, i32 0, i32 0, !dbg !8835
  %96 = getelementptr inbounds %struct.list_node, ptr %95, i32 0, i32 0, !dbg !8836
  %97 = load ptr, ptr %96, align 8, !dbg !8836
  %98 = call noalias ptr @strdup(ptr noundef %97) #18, !dbg !8837
  %99 = load ptr, ptr %6, align 8, !dbg !8838
  %100 = getelementptr inbounds %struct.config_line_t_, ptr %99, i32 0, i32 0, !dbg !8839
  %101 = getelementptr inbounds %struct.list_node, ptr %100, i32 0, i32 1, !dbg !8840
  %102 = load ptr, ptr %101, align 8, !dbg !8840
  %103 = call noalias ptr @strdup(ptr noundef %102) #18, !dbg !8841
  %104 = call i32 @hash_add(ptr noundef %93, ptr noundef %98, ptr noundef %103), !dbg !8842
  br label %105

105:                                              ; preds = %92, %91
  br label %106

106:                                              ; preds = %105, %68
  br label %126, !dbg !8843

107:                                              ; preds = %35
  %108 = load ptr, ptr %6, align 8, !dbg !8844
  %109 = getelementptr inbounds %struct.config_line_t_, ptr %108, i32 0, i32 0, !dbg !8846
  %110 = getelementptr inbounds %struct.list_node, ptr %109, i32 0, i32 0, !dbg !8847
  %111 = load ptr, ptr %110, align 8, !dbg !8847
  %112 = call i32 @strcmp(ptr noundef %111, ptr noundef @.str.43) #22, !dbg !8848
  %113 = icmp ne i32 %112, 0, !dbg !8848
  br i1 %113, label %117, label %114, !dbg !8849

114:                                              ; preds = %107
  %115 = load ptr, ptr %5, align 8, !dbg !8850
  %116 = load ptr, ptr %6, align 8, !dbg !8852
  call void @parse_listener_prefix_authorization(ptr noundef %115, ptr noundef %116, ptr noundef %9), !dbg !8853
  br label %124, !dbg !8854

117:                                              ; preds = %107
  %118 = load ptr, ptr %5, align 8, !dbg !8855
  %119 = load ptr, ptr %6, align 8, !dbg !8857
  %120 = getelementptr inbounds %struct.config_line_t_, ptr %119, i32 0, i32 0, !dbg !8858
  %121 = getelementptr inbounds %struct.list_node, ptr %120, i32 0, i32 0, !dbg !8859
  %122 = load ptr, ptr %121, align 8, !dbg !8859
  %123 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %118, ptr noundef @.str.44, ptr noundef %122), !dbg !8860
  br label %202, !dbg !8861

124:                                              ; preds = %114
  br label %126, !dbg !8862

125:                                              ; preds = %35
  br label %130, !dbg !8863

126:                                              ; preds = %124, %106, %35
  br label %31, !dbg !8769, !llvm.loop !8864

127:                                              ; preds = %31
  %128 = load ptr, ptr %5, align 8, !dbg !8866
  %129 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %128, ptr noundef @.str.45), !dbg !8867
  br label %202, !dbg !8868

130:                                              ; preds = %125
  call void @llvm.dbg.label(metadata !8869), !dbg !8870
  %131 = load ptr, ptr %8, align 8, !dbg !8871
  %132 = load ptr, ptr %11, align 8, !dbg !8873
  %133 = icmp eq ptr %131, %132, !dbg !8874
  br i1 %133, label %134, label %140, !dbg !8875

134:                                              ; preds = %130
  %135 = load ptr, ptr %11, align 8, !dbg !8876
  %136 = icmp ne ptr %135, null, !dbg !8876
  br i1 %136, label %140, label %137, !dbg !8877

137:                                              ; preds = %134
  %138 = load ptr, ptr %5, align 8, !dbg !8878
  %139 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %138, ptr noundef @.str.46), !dbg !8880
  br label %202, !dbg !8881

140:                                              ; preds = %134, %130
  %141 = load ptr, ptr %8, align 8, !dbg !8882
  %142 = icmp ne ptr %141, null, !dbg !8882
  br i1 %142, label %143, label %149, !dbg !8884

143:                                              ; preds = %140
  %144 = load ptr, ptr %11, align 8, !dbg !8885
  %145 = icmp ne ptr %144, null, !dbg !8885
  br i1 %145, label %146, label %149, !dbg !8886

146:                                              ; preds = %143
  %147 = load ptr, ptr %5, align 8, !dbg !8887
  %148 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %147, ptr noundef @.str.47), !dbg !8889
  br label %202, !dbg !8890

149:                                              ; preds = %143, %140
  %150 = load ptr, ptr %11, align 8, !dbg !8891
  %151 = icmp ne ptr %150, null, !dbg !8891
  br i1 %151, label %152, label %161, !dbg !8893

152:                                              ; preds = %149
  %153 = load ptr, ptr %11, align 8, !dbg !8894
  %154 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %9, i32 0, i32 0, !dbg !8896
  store ptr %153, ptr %154, align 8, !dbg !8897
  %155 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %9, i32 0, i32 4, !dbg !8898
  %156 = load i32, ptr %155, align 8, !dbg !8899
  %157 = or i32 %156, 31, !dbg !8899
  store i32 %157, ptr %155, align 8, !dbg !8899
  %158 = load ptr, ptr %10, align 8, !dbg !8900
  %159 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %9, i32 0, i32 1, !dbg !8901
  store ptr %158, ptr %159, align 8, !dbg !8902
  %160 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %9, i32 0, i32 5, !dbg !8903
  store ptr null, ptr %160, align 8, !dbg !8904
  store ptr null, ptr %10, align 8, !dbg !8905
  br label %197, !dbg !8906

161:                                              ; preds = %149
  %162 = load ptr, ptr %8, align 8, !dbg !8907
  %163 = icmp ne ptr %162, null, !dbg !8907
  br i1 %163, label %164, label %193, !dbg !8909

164:                                              ; preds = %161
  %165 = load ptr, ptr %8, align 8, !dbg !8910
  %166 = getelementptr inbounds %struct.lwan_module_t_, ptr %165, i32 0, i32 2, !dbg !8911
  %167 = load ptr, ptr %166, align 8, !dbg !8911
  %168 = icmp ne ptr %167, null, !dbg !8910
  br i1 %168, label %169, label %193, !dbg !8912

169:                                              ; preds = %164
  %170 = load ptr, ptr %8, align 8, !dbg !8913
  %171 = getelementptr inbounds %struct.lwan_module_t_, ptr %170, i32 0, i32 4, !dbg !8914
  %172 = load ptr, ptr %171, align 8, !dbg !8914
  %173 = icmp ne ptr %172, null, !dbg !8913
  br i1 %173, label %174, label %193, !dbg !8915

174:                                              ; preds = %169
  %175 = load ptr, ptr %8, align 8, !dbg !8916
  %176 = getelementptr inbounds %struct.lwan_module_t_, ptr %175, i32 0, i32 2, !dbg !8918
  %177 = load ptr, ptr %176, align 8, !dbg !8918
  %178 = load ptr, ptr %10, align 8, !dbg !8919
  %179 = call ptr %177(ptr noundef %178), !dbg !8916
  %180 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %9, i32 0, i32 1, !dbg !8920
  store ptr %179, ptr %180, align 8, !dbg !8921
  %181 = load ptr, ptr %8, align 8, !dbg !8922
  %182 = getelementptr inbounds %struct.lwan_module_t_, ptr %181, i32 0, i32 4, !dbg !8923
  %183 = load ptr, ptr %182, align 8, !dbg !8923
  %184 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %9, i32 0, i32 0, !dbg !8924
  store ptr %183, ptr %184, align 8, !dbg !8925
  %185 = load ptr, ptr %8, align 8, !dbg !8926
  %186 = getelementptr inbounds %struct.lwan_module_t_, ptr %185, i32 0, i32 5, !dbg !8927
  %187 = load i32, ptr %186, align 8, !dbg !8927
  %188 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %9, i32 0, i32 4, !dbg !8928
  %189 = load i32, ptr %188, align 8, !dbg !8929
  %190 = or i32 %189, %187, !dbg !8929
  store i32 %190, ptr %188, align 8, !dbg !8929
  %191 = load ptr, ptr %8, align 8, !dbg !8930
  %192 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %9, i32 0, i32 5, !dbg !8931
  store ptr %191, ptr %192, align 8, !dbg !8932
  br label %196, !dbg !8933

193:                                              ; preds = %169, %164, %161
  %194 = load ptr, ptr %5, align 8, !dbg !8934
  %195 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %194, ptr noundef @.str.48), !dbg !8936
  br label %202, !dbg !8937

196:                                              ; preds = %174
  br label %197

197:                                              ; preds = %196, %152
  %198 = load ptr, ptr %7, align 8, !dbg !8938
  %199 = getelementptr inbounds %struct.lwan_t_, ptr %198, i32 0, i32 0, !dbg !8939
  %200 = load ptr, ptr %12, align 8, !dbg !8940
  %201 = call ptr @add_url_map(ptr noundef %199, ptr noundef %200, ptr noundef %9), !dbg !8941
  br label %202, !dbg !8941

202:                                              ; preds = %197, %193, %146, %137, %127, %117, %84, %61, %49
  call void @llvm.dbg.label(metadata !8942), !dbg !8943
  %203 = load ptr, ptr %10, align 8, !dbg !8944
  call void @hash_free(ptr noundef %203), !dbg !8945
  ret void, !dbg !8946
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @lwan_module_find(ptr noundef %0, ptr noundef %1) #0 !dbg !8947 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !8950, metadata !DIExpression()), !dbg !8951
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !8952, metadata !DIExpression()), !dbg !8953
  %5 = load ptr, ptr %3, align 8, !dbg !8954
  %6 = getelementptr inbounds %struct.lwan_t_, ptr %5, i32 0, i32 3, !dbg !8955
  %7 = load ptr, ptr %6, align 8, !dbg !8955
  %8 = load ptr, ptr %4, align 8, !dbg !8956
  %9 = call ptr @hash_find(ptr noundef %7, ptr noundef %8), !dbg !8957
  ret ptr %9, !dbg !8958
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @find_handler_symbol(ptr noundef %0) #0 !dbg !8959 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !8962, metadata !DIExpression()), !dbg !8963
  call void @llvm.dbg.declare(metadata ptr %3, metadata !8964, metadata !DIExpression()), !dbg !8965
  %4 = load ptr, ptr %2, align 8, !dbg !8966
  %5 = call ptr @dlsym(ptr noundef inttoptr (i64 -1 to ptr), ptr noundef %4) #18, !dbg !8967
  store ptr %5, ptr %3, align 8, !dbg !8965
  %6 = load ptr, ptr %3, align 8, !dbg !8968
  %7 = icmp ne ptr %6, null, !dbg !8968
  br i1 %7, label %11, label %8, !dbg !8970

8:                                                ; preds = %1
  %9 = load ptr, ptr %2, align 8, !dbg !8971
  %10 = call ptr @dlsym(ptr noundef null, ptr noundef %9) #18, !dbg !8972
  store ptr %10, ptr %3, align 8, !dbg !8973
  br label %11, !dbg !8974

11:                                               ; preds = %8, %1
  %12 = load ptr, ptr %3, align 8, !dbg !8975
  ret ptr %12, !dbg !8976
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @parse_listener_prefix_authorization(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !8977 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !8980, metadata !DIExpression()), !dbg !8981
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !8982, metadata !DIExpression()), !dbg !8983
  store ptr %2, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !8984, metadata !DIExpression()), !dbg !8985
  %7 = load ptr, ptr %5, align 8, !dbg !8986
  %8 = getelementptr inbounds %struct.config_line_t_, ptr %7, i32 0, i32 0, !dbg !8988
  %9 = getelementptr inbounds %struct.list_node, ptr %8, i32 0, i32 1, !dbg !8989
  %10 = load ptr, ptr %9, align 8, !dbg !8989
  %11 = call i32 @strcmp(ptr noundef %10, ptr noundef @.str.49) #22, !dbg !8990
  %12 = icmp ne i32 %11, 0, !dbg !8990
  br i1 %12, label %13, label %16, !dbg !8991

13:                                               ; preds = %3
  %14 = load ptr, ptr %4, align 8, !dbg !8992
  %15 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %14, ptr noundef @.str.50), !dbg !8994
  br label %115, !dbg !8995

16:                                               ; preds = %3
  %17 = load ptr, ptr %6, align 8, !dbg !8996
  %18 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %17, i32 0, i32 7, !dbg !8997
  call void @llvm.memset.p0.i64(ptr align 8 %18, i8 0, i64 16, i1 false), !dbg !8998
  br label %19, !dbg !8999

19:                                               ; preds = %103, %16
  %20 = load ptr, ptr %4, align 8, !dbg !9000
  %21 = load ptr, ptr %5, align 8, !dbg !9001
  %22 = call zeroext i1 @config_read_line(ptr noundef %20, ptr noundef %21), !dbg !9002
  br i1 %22, label %23, label %104, !dbg !8999

23:                                               ; preds = %19
  %24 = load ptr, ptr %5, align 8, !dbg !9003
  %25 = getelementptr inbounds %struct.config_line_t_, ptr %24, i32 0, i32 1, !dbg !9005
  %26 = load i32, ptr %25, align 8, !dbg !9005
  switch i32 %26, label %103 [
    i32 0, label %27
    i32 1, label %69
    i32 2, label %76
  ], !dbg !9006

27:                                               ; preds = %23
  %28 = load ptr, ptr %5, align 8, !dbg !9007
  %29 = getelementptr inbounds %struct.config_line_t_, ptr %28, i32 0, i32 0, !dbg !9010
  %30 = getelementptr inbounds %struct.list_node, ptr %29, i32 0, i32 0, !dbg !9011
  %31 = load ptr, ptr %30, align 8, !dbg !9011
  %32 = call i32 @strcmp(ptr noundef %31, ptr noundef @.str.51) #22, !dbg !9012
  %33 = icmp ne i32 %32, 0, !dbg !9012
  br i1 %33, label %47, label %34, !dbg !9013

34:                                               ; preds = %27
  %35 = load ptr, ptr %6, align 8, !dbg !9014
  %36 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %35, i32 0, i32 7, !dbg !9016
  %37 = getelementptr inbounds %struct.list_node, ptr %36, i32 0, i32 0, !dbg !9017
  %38 = load ptr, ptr %37, align 8, !dbg !9017
  call void @free(ptr noundef %38) #18, !dbg !9018
  %39 = load ptr, ptr %5, align 8, !dbg !9019
  %40 = getelementptr inbounds %struct.config_line_t_, ptr %39, i32 0, i32 0, !dbg !9020
  %41 = getelementptr inbounds %struct.list_node, ptr %40, i32 0, i32 1, !dbg !9021
  %42 = load ptr, ptr %41, align 8, !dbg !9021
  %43 = call noalias ptr @strdup(ptr noundef %42) #18, !dbg !9022
  %44 = load ptr, ptr %6, align 8, !dbg !9023
  %45 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %44, i32 0, i32 7, !dbg !9024
  %46 = getelementptr inbounds %struct.list_node, ptr %45, i32 0, i32 0, !dbg !9025
  store ptr %43, ptr %46, align 8, !dbg !9026
  br label %68, !dbg !9027

47:                                               ; preds = %27
  %48 = load ptr, ptr %5, align 8, !dbg !9028
  %49 = getelementptr inbounds %struct.config_line_t_, ptr %48, i32 0, i32 0, !dbg !9030
  %50 = getelementptr inbounds %struct.list_node, ptr %49, i32 0, i32 0, !dbg !9031
  %51 = load ptr, ptr %50, align 8, !dbg !9031
  %52 = call i32 @strcmp(ptr noundef %51, ptr noundef @.str.52) #22, !dbg !9032
  %53 = icmp ne i32 %52, 0, !dbg !9032
  br i1 %53, label %67, label %54, !dbg !9033

54:                                               ; preds = %47
  %55 = load ptr, ptr %6, align 8, !dbg !9034
  %56 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %55, i32 0, i32 7, !dbg !9036
  %57 = getelementptr inbounds %struct.list_node, ptr %56, i32 0, i32 1, !dbg !9037
  %58 = load ptr, ptr %57, align 8, !dbg !9037
  call void @free(ptr noundef %58) #18, !dbg !9038
  %59 = load ptr, ptr %5, align 8, !dbg !9039
  %60 = getelementptr inbounds %struct.config_line_t_, ptr %59, i32 0, i32 0, !dbg !9040
  %61 = getelementptr inbounds %struct.list_node, ptr %60, i32 0, i32 1, !dbg !9041
  %62 = load ptr, ptr %61, align 8, !dbg !9041
  %63 = call noalias ptr @strdup(ptr noundef %62) #18, !dbg !9042
  %64 = load ptr, ptr %6, align 8, !dbg !9043
  %65 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %64, i32 0, i32 7, !dbg !9044
  %66 = getelementptr inbounds %struct.list_node, ptr %65, i32 0, i32 1, !dbg !9045
  store ptr %63, ptr %66, align 8, !dbg !9046
  br label %67, !dbg !9047

67:                                               ; preds = %54, %47
  br label %68

68:                                               ; preds = %67, %34
  br label %103, !dbg !9048

69:                                               ; preds = %23
  %70 = load ptr, ptr %4, align 8, !dbg !9049
  %71 = load ptr, ptr %5, align 8, !dbg !9050
  %72 = getelementptr inbounds %struct.config_line_t_, ptr %71, i32 0, i32 0, !dbg !9051
  %73 = getelementptr inbounds %struct.list_node, ptr %72, i32 0, i32 0, !dbg !9052
  %74 = load ptr, ptr %73, align 8, !dbg !9052
  %75 = call zeroext i1 (ptr, ptr, ...) @config_error(ptr noundef %70, ptr noundef @.str.53, ptr noundef %74), !dbg !9053
  br label %106, !dbg !9054

76:                                               ; preds = %23
  %77 = load ptr, ptr %6, align 8, !dbg !9055
  %78 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %77, i32 0, i32 7, !dbg !9057
  %79 = getelementptr inbounds %struct.list_node, ptr %78, i32 0, i32 0, !dbg !9058
  %80 = load ptr, ptr %79, align 8, !dbg !9058
  %81 = icmp ne ptr %80, null, !dbg !9055
  br i1 %81, label %87, label %82, !dbg !9059

82:                                               ; preds = %76
  %83 = call noalias ptr @strdup(ptr noundef @.str.54) #18, !dbg !9060
  %84 = load ptr, ptr %6, align 8, !dbg !9061
  %85 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %84, i32 0, i32 7, !dbg !9062
  %86 = getelementptr inbounds %struct.list_node, ptr %85, i32 0, i32 0, !dbg !9063
  store ptr %83, ptr %86, align 8, !dbg !9064
  br label %87, !dbg !9061

87:                                               ; preds = %82, %76
  %88 = load ptr, ptr %6, align 8, !dbg !9065
  %89 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %88, i32 0, i32 7, !dbg !9067
  %90 = getelementptr inbounds %struct.list_node, ptr %89, i32 0, i32 1, !dbg !9068
  %91 = load ptr, ptr %90, align 8, !dbg !9068
  %92 = icmp ne ptr %91, null, !dbg !9065
  br i1 %92, label %98, label %93, !dbg !9069

93:                                               ; preds = %87
  %94 = call noalias ptr @strdup(ptr noundef @.str.55) #18, !dbg !9070
  %95 = load ptr, ptr %6, align 8, !dbg !9071
  %96 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %95, i32 0, i32 7, !dbg !9072
  %97 = getelementptr inbounds %struct.list_node, ptr %96, i32 0, i32 1, !dbg !9073
  store ptr %94, ptr %97, align 8, !dbg !9074
  br label %98, !dbg !9071

98:                                               ; preds = %93, %87
  %99 = load ptr, ptr %6, align 8, !dbg !9075
  %100 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %99, i32 0, i32 4, !dbg !9076
  %101 = load i32, ptr %100, align 8, !dbg !9077
  %102 = or i32 %101, 32, !dbg !9077
  store i32 %102, ptr %100, align 8, !dbg !9077
  br label %105, !dbg !9078

103:                                              ; preds = %68, %23
  br label %19, !dbg !8999, !llvm.loop !9079

104:                                              ; preds = %19
  br label %105, !dbg !8999

105:                                              ; preds = %104, %98
  call void @llvm.dbg.label(metadata !9081), !dbg !9082
  br label %115, !dbg !9083

106:                                              ; preds = %69
  call void @llvm.dbg.label(metadata !9084), !dbg !9085
  %107 = load ptr, ptr %6, align 8, !dbg !9086
  %108 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %107, i32 0, i32 7, !dbg !9087
  %109 = getelementptr inbounds %struct.list_node, ptr %108, i32 0, i32 0, !dbg !9088
  %110 = load ptr, ptr %109, align 8, !dbg !9088
  call void @free(ptr noundef %110) #18, !dbg !9089
  %111 = load ptr, ptr %6, align 8, !dbg !9090
  %112 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %111, i32 0, i32 7, !dbg !9091
  %113 = getelementptr inbounds %struct.list_node, ptr %112, i32 0, i32 1, !dbg !9092
  %114 = load ptr, ptr %113, align 8, !dbg !9092
  call void @free(ptr noundef %114) #18, !dbg !9093
  br label %115, !dbg !9094

115:                                              ; preds = %106, %105, %13
  ret void, !dbg !9094
}

; Function Attrs: nounwind
declare ptr @dlsym(ptr noundef, ptr noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @lwan_get_default_config() #0 !dbg !9095 {
  ret ptr @default_config, !dbg !9098
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_shutdown(ptr noundef %0) #0 !dbg !9099 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !9100, metadata !DIExpression()), !dbg !9101
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_info_debug(ptr noundef @.str.60, i32 noundef 505, ptr noundef @__FUNCTION__.lwan_shutdown, ptr noundef @.str.8.72), !dbg !9102
  %3 = load ptr, ptr %2, align 8, !dbg !9103
  %4 = getelementptr inbounds %struct.lwan_t_, ptr %3, i32 0, i32 4, !dbg !9105
  %5 = getelementptr inbounds %struct.lwan_config_t_, ptr %4, i32 0, i32 0, !dbg !9106
  %6 = load ptr, ptr %5, align 8, !dbg !9106
  %7 = load ptr, ptr @default_config, align 8, !dbg !9107
  %8 = icmp ne ptr %6, %7, !dbg !9108
  br i1 %8, label %9, label %14, !dbg !9109

9:                                                ; preds = %1
  %10 = load ptr, ptr %2, align 8, !dbg !9110
  %11 = getelementptr inbounds %struct.lwan_t_, ptr %10, i32 0, i32 4, !dbg !9111
  %12 = getelementptr inbounds %struct.lwan_config_t_, ptr %11, i32 0, i32 0, !dbg !9112
  %13 = load ptr, ptr %12, align 8, !dbg !9112
  call void @free(ptr noundef %13) #18, !dbg !9113
  br label %14, !dbg !9113

14:                                               ; preds = %9, %1
  call void @lwan_job_thread_shutdown(), !dbg !9114
  %15 = load ptr, ptr %2, align 8, !dbg !9115
  call void @lwan_thread_shutdown(ptr noundef %15), !dbg !9116
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.60, i32 noundef 513, ptr noundef @__FUNCTION__.lwan_shutdown, ptr noundef @.str.9.73), !dbg !9117
  %16 = load ptr, ptr %2, align 8, !dbg !9118
  %17 = getelementptr inbounds %struct.lwan_t_, ptr %16, i32 0, i32 0, !dbg !9119
  call void @lwan_trie_destroy(ptr noundef %17), !dbg !9120
  %18 = load ptr, ptr %2, align 8, !dbg !9121
  %19 = getelementptr inbounds %struct.lwan_t_, ptr %18, i32 0, i32 1, !dbg !9122
  %20 = load ptr, ptr %19, align 8, !dbg !9122
  call void @free(ptr noundef %20) #18, !dbg !9123
  call void @lwan_response_shutdown(), !dbg !9124
  call void @lwan_tables_shutdown(), !dbg !9125
  %21 = load ptr, ptr %2, align 8, !dbg !9126
  call void @lwan_status_shutdown(ptr noundef %21), !dbg !9127
  call void @lwan_http_authorize_shutdown(), !dbg !9128
  %22 = load ptr, ptr %2, align 8, !dbg !9129
  call void @lwan_module_shutdown(ptr noundef %22), !dbg !9130
  ret void, !dbg !9131
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @lwan_module_shutdown(ptr noundef %0) #0 !dbg !9132 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !9133, metadata !DIExpression()), !dbg !9134
  %3 = load ptr, ptr %2, align 8, !dbg !9135
  %4 = getelementptr inbounds %struct.lwan_t_, ptr %3, i32 0, i32 3, !dbg !9136
  %5 = load ptr, ptr %4, align 8, !dbg !9136
  call void @hash_free(ptr noundef %5), !dbg !9137
  ret void, !dbg !9138
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_main_loop(ptr noundef %0) #0 !dbg !9139 {
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca %union.__SOCKADDR_ARG, align 8
  store ptr %0, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !9140, metadata !DIExpression()), !dbg !9141
  %9 = load volatile i32, ptr @main_socket, align 4, !dbg !9142
  %10 = icmp eq i32 %9, -1, !dbg !9142
  br i1 %10, label %11, label %12, !dbg !9145

11:                                               ; preds = %1
  br label %13, !dbg !9145

12:                                               ; preds = %1
  call void @__assert_fail(ptr noundef @.str.10.74, ptr noundef @.str.60, i32 noundef 561, ptr noundef @__PRETTY_FUNCTION__.lwan_main_loop) #21, !dbg !9142
  unreachable, !dbg !9142

13:                                               ; preds = %11
  %14 = load ptr, ptr %6, align 8, !dbg !9146
  %15 = getelementptr inbounds %struct.lwan_t_, ptr %14, i32 0, i32 5, !dbg !9147
  %16 = load i32, ptr %15, align 8, !dbg !9147
  store volatile i32 %16, ptr @main_socket, align 4, !dbg !9148
  %17 = call ptr @signal(i32 noundef 2, ptr noundef @sigint_handler) #18, !dbg !9149
  %18 = icmp eq ptr %17, inttoptr (i64 -1 to ptr), !dbg !9151
  br i1 %18, label %19, label %20, !dbg !9152

19:                                               ; preds = %13
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_debug(ptr noundef @.str.60, i32 noundef 564, ptr noundef @__FUNCTION__.lwan_main_loop, ptr noundef @.str.11.75) #23, !dbg !9153
  unreachable, !dbg !9153

20:                                               ; preds = %13
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_info_debug(ptr noundef @.str.60, i32 noundef 566, ptr noundef @__FUNCTION__.lwan_main_loop, ptr noundef @.str.12.76), !dbg !9154
  br label %21, !dbg !9155

21:                                               ; preds = %42, %35, %20
  call void @llvm.dbg.declare(metadata ptr %7, metadata !9156, metadata !DIExpression()), !dbg !9160
  %22 = load volatile i32, ptr @main_socket, align 4, !dbg !9161
  store ptr null, ptr %8, align 8, !dbg !9162
  %23 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %8, i32 0, i32 0, !dbg !9163
  %24 = load ptr, ptr %23, align 8, !dbg !9163
  %25 = call i32 @accept4(i32 noundef %22, ptr %24, ptr noundef null, i32 noundef 526336), !dbg !9163
  store i32 %25, ptr %7, align 4, !dbg !9160
  %26 = load i32, ptr %7, align 4, !dbg !9164
  %27 = icmp slt i32 %26, 0, !dbg !9164
  %28 = zext i1 %27 to i32, !dbg !9164
  %29 = sext i32 %28 to i64, !dbg !9164
  %30 = icmp ne i64 %29, 0, !dbg !9164
  br i1 %30, label %31, label %42, !dbg !9166

31:                                               ; preds = %21
  %32 = call ptr @__errno_location() #20, !dbg !9167
  %33 = load i32, ptr %32, align 4, !dbg !9167
  %34 = icmp ne i32 %33, 9, !dbg !9170
  br i1 %34, label %35, label %36, !dbg !9171

35:                                               ; preds = %31
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.60, i32 noundef 572, ptr noundef @__FUNCTION__.lwan_main_loop, ptr noundef @.str.13.77), !dbg !9172
  br label %21, !dbg !9174, !llvm.loop !9175

36:                                               ; preds = %31
  %37 = load volatile i32, ptr @main_socket, align 4, !dbg !9178
  %38 = icmp slt i32 %37, 0, !dbg !9180
  br i1 %38, label %39, label %40, !dbg !9181

39:                                               ; preds = %36
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_info_debug(ptr noundef @.str.60, i32 noundef 577, ptr noundef @__FUNCTION__.lwan_main_loop, ptr noundef @.str.14.78), !dbg !9182
  br label %41, !dbg !9184

40:                                               ; preds = %36
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_info_debug(ptr noundef @.str.60, i32 noundef 579, ptr noundef @__FUNCTION__.lwan_main_loop, ptr noundef @.str.15), !dbg !9185
  br label %41

41:                                               ; preds = %40, %39
  br label %62, !dbg !9187

42:                                               ; preds = %21
  %43 = load ptr, ptr %6, align 8, !dbg !9188
  %44 = load i32, ptr %7, align 4, !dbg !9189
  store ptr %43, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !9190, metadata !DIExpression()), !dbg !9194
  store i32 %44, ptr %3, align 4
  call void @llvm.dbg.declare(metadata ptr %3, metadata !9196, metadata !DIExpression()), !dbg !9197
  call void @llvm.dbg.declare(metadata ptr %4, metadata !9198, metadata !DIExpression()), !dbg !9199
  %45 = load i32, ptr %3, align 4, !dbg !9200
  %46 = sub nsw i32 %45, 1, !dbg !9201
  %47 = sdiv i32 %46, 2, !dbg !9202
  %48 = load ptr, ptr %2, align 8, !dbg !9203
  %49 = getelementptr inbounds %struct.lwan_t_, ptr %48, i32 0, i32 2, !dbg !9204
  %50 = getelementptr inbounds %struct.anon.0.24, ptr %49, i32 0, i32 2, !dbg !9205
  %51 = load i16, ptr %50, align 4, !dbg !9205
  %52 = zext i16 %51 to i32, !dbg !9203
  %53 = srem i32 %47, %52, !dbg !9206
  store i32 %53, ptr %4, align 4, !dbg !9207
  call void @llvm.dbg.declare(metadata ptr %5, metadata !9208, metadata !DIExpression()), !dbg !9209
  %54 = load ptr, ptr %2, align 8, !dbg !9210
  %55 = getelementptr inbounds %struct.lwan_t_, ptr %54, i32 0, i32 2, !dbg !9211
  %56 = load ptr, ptr %55, align 8, !dbg !9212
  %57 = load i32, ptr %4, align 4, !dbg !9213
  %58 = sext i32 %57 to i64, !dbg !9210
  %59 = getelementptr inbounds %struct.lwan_thread_t_, ptr %56, i64 %58, !dbg !9210
  store ptr %59, ptr %5, align 8, !dbg !9209
  %60 = load ptr, ptr %5, align 8, !dbg !9214
  %61 = load i32, ptr %3, align 4, !dbg !9215
  call void @lwan_thread_add_client(ptr noundef %60, i32 noundef %61) #18, !dbg !9216
  br label %21, !dbg !9217, !llvm.loop !9175

62:                                               ; preds = %41
  ret void, !dbg !9218
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @sigint_handler(i32 noundef %0) #0 !dbg !9219 {
  %2 = alloca i32, align 4
  store i32 %0, ptr %2, align 4
  call void @llvm.dbg.declare(metadata ptr %2, metadata !9220, metadata !DIExpression()), !dbg !9221
  %3 = load volatile i32, ptr @main_socket, align 4, !dbg !9222
  %4 = icmp slt i32 %3, 0, !dbg !9224
  br i1 %4, label %5, label %6, !dbg !9225

5:                                                ; preds = %1
  br label %9, !dbg !9226

6:                                                ; preds = %1
  %7 = load volatile i32, ptr @main_socket, align 4, !dbg !9227
  %8 = call i32 @close(i32 noundef %7), !dbg !9228
  store volatile i32 -1, ptr @main_socket, align 4, !dbg !9229
  br label %9, !dbg !9230

9:                                                ; preds = %6, %5
  ret void, !dbg !9230
}

declare i32 @accept4(i32 noundef, ptr, ptr noundef, i32 noundef) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @lwan_module_redirect() #0 !dbg !1121 {
  ret ptr @lwan_module_redirect.redirect_module, !dbg !9231
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @redirect_init(ptr noundef %0) #0 !dbg !9232 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !9233, metadata !DIExpression()), !dbg !9234
  call void @llvm.dbg.declare(metadata ptr %3, metadata !9235, metadata !DIExpression()), !dbg !9241
  %4 = load ptr, ptr %2, align 8, !dbg !9242
  store ptr %4, ptr %3, align 8, !dbg !9241
  %5 = load ptr, ptr %3, align 8, !dbg !9243
  %6 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %5, i32 0, i32 0, !dbg !9244
  %7 = load ptr, ptr %6, align 8, !dbg !9244
  %8 = icmp ne ptr %7, null, !dbg !9245
  br i1 %8, label %9, label %14, !dbg !9245

9:                                                ; preds = %1
  %10 = load ptr, ptr %3, align 8, !dbg !9246
  %11 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %10, i32 0, i32 0, !dbg !9247
  %12 = load ptr, ptr %11, align 8, !dbg !9247
  %13 = call noalias ptr @strdup(ptr noundef %12) #18, !dbg !9248
  br label %15, !dbg !9245

14:                                               ; preds = %1
  br label %15, !dbg !9245

15:                                               ; preds = %14, %9
  %16 = phi ptr [ %13, %9 ], [ null, %14 ], !dbg !9245
  ret ptr %16, !dbg !9249
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @redirect_init_from_hash(ptr noundef %0) #0 !dbg !9250 {
  %2 = alloca ptr, align 8
  %3 = alloca %union.__SOCKADDR_ARG, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !9251, metadata !DIExpression()), !dbg !9252
  call void @llvm.dbg.declare(metadata ptr %3, metadata !9253, metadata !DIExpression()), !dbg !9254
  %4 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %3, i32 0, i32 0, !dbg !9255
  %5 = load ptr, ptr %2, align 8, !dbg !9256
  %6 = call ptr @hash_find(ptr noundef %5, ptr noundef @.str.1.83), !dbg !9257
  store ptr %6, ptr %4, align 8, !dbg !9255
  %7 = call ptr @redirect_init(ptr noundef %3), !dbg !9258
  ret ptr %7, !dbg !9259
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @redirect_handle_cb(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !9260 {
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !9261, metadata !DIExpression()), !dbg !9262
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !9263, metadata !DIExpression()), !dbg !9264
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !9265, metadata !DIExpression()), !dbg !9266
  %9 = load ptr, ptr %7, align 8, !dbg !9267
  %10 = icmp ne ptr %9, null, !dbg !9267
  %11 = xor i1 %10, true, !dbg !9267
  %12 = zext i1 %11 to i32, !dbg !9267
  %13 = sext i32 %12 to i64, !dbg !9267
  %14 = icmp ne i64 %13, 0, !dbg !9267
  br i1 %14, label %15, label %16, !dbg !9269

15:                                               ; preds = %3
  store i32 500, ptr %4, align 4, !dbg !9270
  br label %47, !dbg !9270

16:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata ptr %8, metadata !9271, metadata !DIExpression()), !dbg !9272
  %17 = load ptr, ptr %5, align 8, !dbg !9273
  %18 = getelementptr inbounds %struct.lwan_request_t_, ptr %17, i32 0, i32 4, !dbg !9274
  %19 = load ptr, ptr %18, align 8, !dbg !9274
  %20 = getelementptr inbounds %struct.lwan_connection_t_, ptr %19, i32 0, i32 2, !dbg !9275
  %21 = load ptr, ptr %20, align 8, !dbg !9275
  %22 = call ptr @coro_malloc(ptr noundef %21, i64 noundef 32), !dbg !9276
  store ptr %22, ptr %8, align 8, !dbg !9272
  %23 = load ptr, ptr %8, align 8, !dbg !9277
  %24 = icmp ne ptr %23, null, !dbg !9277
  %25 = xor i1 %24, true, !dbg !9277
  %26 = zext i1 %25 to i32, !dbg !9277
  %27 = sext i32 %26 to i64, !dbg !9277
  %28 = icmp ne i64 %27, 0, !dbg !9277
  br i1 %28, label %29, label %30, !dbg !9279

29:                                               ; preds = %16
  store i32 500, ptr %4, align 4, !dbg !9280
  br label %47, !dbg !9280

30:                                               ; preds = %16
  %31 = load ptr, ptr %8, align 8, !dbg !9281
  %32 = getelementptr inbounds %struct.list_node, ptr %31, i64 0, !dbg !9281
  %33 = getelementptr inbounds %struct.list_node, ptr %32, i32 0, i32 0, !dbg !9282
  store ptr @.str.2.82, ptr %33, align 8, !dbg !9283
  %34 = load ptr, ptr %7, align 8, !dbg !9284
  %35 = load ptr, ptr %8, align 8, !dbg !9285
  %36 = getelementptr inbounds %struct.list_node, ptr %35, i64 0, !dbg !9285
  %37 = getelementptr inbounds %struct.list_node, ptr %36, i32 0, i32 1, !dbg !9286
  store ptr %34, ptr %37, align 8, !dbg !9287
  %38 = load ptr, ptr %8, align 8, !dbg !9288
  %39 = getelementptr inbounds %struct.list_node, ptr %38, i64 1, !dbg !9288
  %40 = getelementptr inbounds %struct.list_node, ptr %39, i32 0, i32 0, !dbg !9289
  store ptr null, ptr %40, align 8, !dbg !9290
  %41 = load ptr, ptr %8, align 8, !dbg !9291
  %42 = getelementptr inbounds %struct.list_node, ptr %41, i64 1, !dbg !9291
  %43 = getelementptr inbounds %struct.list_node, ptr %42, i32 0, i32 1, !dbg !9292
  store ptr null, ptr %43, align 8, !dbg !9293
  %44 = load ptr, ptr %8, align 8, !dbg !9294
  %45 = load ptr, ptr %6, align 8, !dbg !9295
  %46 = getelementptr inbounds %struct.lwan_response_t_, ptr %45, i32 0, i32 3, !dbg !9296
  store ptr %44, ptr %46, align 8, !dbg !9297
  store i32 301, ptr %4, align 4, !dbg !9298
  br label %47, !dbg !9298

47:                                               ; preds = %30, %29, %15
  %48 = load i32, ptr %4, align 4, !dbg !9299
  ret i32 %48, !dbg !9299
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @lwan_process_request(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 !dbg !9300 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i32, align 4
  %12 = alloca ptr, align 8
  %13 = alloca %struct.request_parser_helper, align 8
  store ptr %0, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !9303, metadata !DIExpression()), !dbg !9304
  store ptr %1, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !9305, metadata !DIExpression()), !dbg !9306
  store ptr %2, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !9307, metadata !DIExpression()), !dbg !9308
  store ptr %3, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %10, metadata !9309, metadata !DIExpression()), !dbg !9310
  call void @llvm.dbg.declare(metadata ptr %11, metadata !9311, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.declare(metadata ptr %12, metadata !9313, metadata !DIExpression()), !dbg !9345
  call void @llvm.dbg.declare(metadata ptr %13, metadata !9346, metadata !DIExpression()), !dbg !9347
  call void @llvm.memset.p0.i64(ptr align 8 %13, i8 0, i64 168, i1 false), !dbg !9347
  %14 = getelementptr inbounds %struct.request_parser_helper, ptr %13, i32 0, i32 0, !dbg !9348
  %15 = load ptr, ptr %9, align 8, !dbg !9349
  store ptr %15, ptr %14, align 8, !dbg !9348
  %16 = getelementptr inbounds %struct.request_parser_helper, ptr %13, i32 0, i32 1, !dbg !9348
  %17 = load ptr, ptr %10, align 8, !dbg !9350
  store ptr %17, ptr %16, align 8, !dbg !9348
  %18 = load ptr, ptr %8, align 8, !dbg !9351
  store ptr %18, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !9352, metadata !DIExpression()), !dbg !9356
  store ptr %13, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !9358, metadata !DIExpression()), !dbg !9359
  %19 = load ptr, ptr %5, align 8, !dbg !9360
  %20 = load ptr, ptr %6, align 8, !dbg !9361
  %21 = load ptr, ptr %20, align 8, !dbg !9362
  %22 = load ptr, ptr %6, align 8, !dbg !9363
  %23 = call i32 @read_from_request_socket(ptr noundef %19, ptr noundef %21, ptr noundef %22, i64 noundef 4096, ptr noundef @read_request_finalizer), !dbg !9364
  store i32 %23, ptr %11, align 4, !dbg !9365
  %24 = load i32, ptr %11, align 4, !dbg !9366
  %25 = icmp ne i32 %24, 200, !dbg !9366
  %26 = zext i1 %25 to i32, !dbg !9366
  %27 = sext i32 %26 to i64, !dbg !9366
  %28 = icmp ne i64 %27, 0, !dbg !9366
  br i1 %28, label %29, label %36, !dbg !9368

29:                                               ; preds = %4
  %30 = load i32, ptr %11, align 4, !dbg !9369
  %31 = icmp ne i32 %30, 400, !dbg !9372
  br i1 %31, label %32, label %35, !dbg !9373

32:                                               ; preds = %29
  %33 = load ptr, ptr %8, align 8, !dbg !9374
  %34 = load i32, ptr %11, align 4, !dbg !9375
  call void @lwan_default_response(ptr noundef %33, i32 noundef %34), !dbg !9376
  br label %35, !dbg !9376

35:                                               ; preds = %32, %29
  br label %104, !dbg !9377

36:                                               ; preds = %4
  %37 = load ptr, ptr %8, align 8, !dbg !9378
  %38 = call i32 @parse_http_request(ptr noundef %37, ptr noundef %13), !dbg !9379
  store i32 %38, ptr %11, align 4, !dbg !9380
  %39 = load i32, ptr %11, align 4, !dbg !9381
  %40 = icmp ne i32 %39, 200, !dbg !9381
  %41 = zext i1 %40 to i32, !dbg !9381
  %42 = sext i32 %41 to i64, !dbg !9381
  %43 = icmp ne i64 %42, 0, !dbg !9381
  br i1 %43, label %44, label %47, !dbg !9383

44:                                               ; preds = %36
  %45 = load ptr, ptr %8, align 8, !dbg !9384
  %46 = load i32, ptr %11, align 4, !dbg !9386
  call void @lwan_default_response(ptr noundef %45, i32 noundef %46), !dbg !9387
  br label %104, !dbg !9388

47:                                               ; preds = %36
  %48 = load ptr, ptr %7, align 8, !dbg !9389
  %49 = getelementptr inbounds %struct.lwan_t_, ptr %48, i32 0, i32 0, !dbg !9390
  %50 = load ptr, ptr %8, align 8, !dbg !9391
  %51 = getelementptr inbounds %struct.lwan_request_t_, ptr %50, i32 0, i32 2, !dbg !9392
  %52 = getelementptr inbounds %struct.lwan_value_t_, ptr %51, i32 0, i32 0, !dbg !9393
  %53 = load ptr, ptr %52, align 8, !dbg !9393
  %54 = call ptr @lwan_trie_lookup_prefix(ptr noundef %49, ptr noundef %53), !dbg !9394
  store ptr %54, ptr %12, align 8, !dbg !9395
  %55 = load ptr, ptr %12, align 8, !dbg !9396
  %56 = icmp ne ptr %55, null, !dbg !9396
  %57 = xor i1 %56, true, !dbg !9396
  %58 = zext i1 %57 to i32, !dbg !9396
  %59 = sext i32 %58 to i64, !dbg !9396
  %60 = icmp ne i64 %59, 0, !dbg !9396
  br i1 %60, label %61, label %63, !dbg !9398

61:                                               ; preds = %47
  %62 = load ptr, ptr %8, align 8, !dbg !9399
  call void @lwan_default_response(ptr noundef %62, i32 noundef 404), !dbg !9401
  br label %104, !dbg !9402

63:                                               ; preds = %47
  %64 = load ptr, ptr %12, align 8, !dbg !9403
  %65 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %64, i32 0, i32 3, !dbg !9404
  %66 = load i64, ptr %65, align 8, !dbg !9404
  %67 = load ptr, ptr %8, align 8, !dbg !9405
  %68 = getelementptr inbounds %struct.lwan_request_t_, ptr %67, i32 0, i32 2, !dbg !9406
  %69 = getelementptr inbounds %struct.lwan_value_t_, ptr %68, i32 0, i32 0, !dbg !9407
  %70 = load ptr, ptr %69, align 8, !dbg !9408
  %71 = getelementptr inbounds i8, ptr %70, i64 %66, !dbg !9408
  store ptr %71, ptr %69, align 8, !dbg !9408
  %72 = load ptr, ptr %12, align 8, !dbg !9409
  %73 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %72, i32 0, i32 3, !dbg !9410
  %74 = load i64, ptr %73, align 8, !dbg !9410
  %75 = load ptr, ptr %8, align 8, !dbg !9411
  %76 = getelementptr inbounds %struct.lwan_request_t_, ptr %75, i32 0, i32 2, !dbg !9412
  %77 = getelementptr inbounds %struct.lwan_value_t_, ptr %76, i32 0, i32 1, !dbg !9413
  %78 = load i64, ptr %77, align 8, !dbg !9414
  %79 = sub i64 %78, %74, !dbg !9414
  store i64 %79, ptr %77, align 8, !dbg !9414
  %80 = load ptr, ptr %12, align 8, !dbg !9415
  %81 = load ptr, ptr %8, align 8, !dbg !9416
  %82 = call i32 @prepare_for_response(ptr noundef %80, ptr noundef %81, ptr noundef %13), !dbg !9417
  store i32 %82, ptr %11, align 4, !dbg !9418
  %83 = load i32, ptr %11, align 4, !dbg !9419
  %84 = icmp ne i32 %83, 200, !dbg !9419
  %85 = zext i1 %84 to i32, !dbg !9419
  %86 = sext i32 %85 to i64, !dbg !9419
  %87 = icmp ne i64 %86, 0, !dbg !9419
  br i1 %87, label %88, label %91, !dbg !9421

88:                                               ; preds = %63
  %89 = load ptr, ptr %8, align 8, !dbg !9422
  %90 = load i32, ptr %11, align 4, !dbg !9424
  call void @lwan_default_response(ptr noundef %89, i32 noundef %90), !dbg !9425
  br label %104, !dbg !9426

91:                                               ; preds = %63
  %92 = load ptr, ptr %12, align 8, !dbg !9427
  %93 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %92, i32 0, i32 0, !dbg !9428
  %94 = load ptr, ptr %93, align 8, !dbg !9428
  %95 = load ptr, ptr %8, align 8, !dbg !9429
  %96 = load ptr, ptr %8, align 8, !dbg !9430
  %97 = getelementptr inbounds %struct.lwan_request_t_, ptr %96, i32 0, i32 8, !dbg !9431
  %98 = load ptr, ptr %12, align 8, !dbg !9432
  %99 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %98, i32 0, i32 1, !dbg !9433
  %100 = load ptr, ptr %99, align 8, !dbg !9433
  %101 = call i32 %94(ptr noundef %95, ptr noundef %97, ptr noundef %100), !dbg !9427
  store i32 %101, ptr %11, align 4, !dbg !9434
  %102 = load ptr, ptr %8, align 8, !dbg !9435
  %103 = load i32, ptr %11, align 4, !dbg !9436
  call void @lwan_response(ptr noundef %102, i32 noundef %103), !dbg !9437
  br label %104, !dbg !9437

104:                                              ; preds = %91, %88, %61, %44, %35
  call void @llvm.dbg.label(metadata !9438), !dbg !9439
  %105 = getelementptr inbounds %struct.request_parser_helper, ptr %13, i32 0, i32 1, !dbg !9440
  %106 = load ptr, ptr %105, align 8, !dbg !9440
  ret ptr %106, !dbg !9441
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @read_request_finalizer(i64 noundef %0, i64 noundef %1, ptr noundef %2) #0 !dbg !9442 {
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  store i64 %0, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !9446, metadata !DIExpression()), !dbg !9447
  store i64 %1, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %10, metadata !9448, metadata !DIExpression()), !dbg !9449
  store ptr %2, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !9450, metadata !DIExpression()), !dbg !9451
  %13 = load i64, ptr %9, align 8, !dbg !9452
  %14 = icmp ult i64 %13, 4, !dbg !9452
  %15 = zext i1 %14 to i32, !dbg !9452
  %16 = sext i32 %15 to i64, !dbg !9452
  %17 = icmp ne i64 %16, 0, !dbg !9452
  br i1 %17, label %18, label %19, !dbg !9454

18:                                               ; preds = %3
  store i32 2, ptr %8, align 4, !dbg !9455
  br label %98, !dbg !9455

19:                                               ; preds = %3
  %20 = load i64, ptr %9, align 8, !dbg !9456
  %21 = load i64, ptr %10, align 8, !dbg !9456
  %22 = icmp eq i64 %20, %21, !dbg !9456
  %23 = zext i1 %22 to i32, !dbg !9456
  %24 = sext i32 %23 to i64, !dbg !9456
  %25 = icmp ne i64 %24, 0, !dbg !9456
  br i1 %25, label %26, label %27, !dbg !9458

26:                                               ; preds = %19
  store i32 3, ptr %8, align 4, !dbg !9459
  br label %98, !dbg !9459

27:                                               ; preds = %19
  %28 = load ptr, ptr %11, align 8, !dbg !9460
  %29 = getelementptr inbounds %struct.request_parser_helper, ptr %28, i32 0, i32 1, !dbg !9460
  %30 = load ptr, ptr %29, align 8, !dbg !9460
  %31 = icmp ne ptr %30, null, !dbg !9460
  %32 = xor i1 %31, true, !dbg !9460
  %33 = xor i1 %32, true, !dbg !9460
  %34 = zext i1 %33 to i32, !dbg !9460
  %35 = sext i32 %34 to i64, !dbg !9460
  %36 = icmp ne i64 %35, 0, !dbg !9460
  br i1 %36, label %37, label %40, !dbg !9462

37:                                               ; preds = %27
  %38 = load ptr, ptr %11, align 8, !dbg !9463
  %39 = getelementptr inbounds %struct.request_parser_helper, ptr %38, i32 0, i32 1, !dbg !9465
  store ptr null, ptr %39, align 8, !dbg !9466
  store i32 0, ptr %8, align 4, !dbg !9467
  br label %98, !dbg !9467

40:                                               ; preds = %27
  %41 = load ptr, ptr %11, align 8, !dbg !9468
  %42 = getelementptr inbounds %struct.request_parser_helper, ptr %41, i32 0, i32 0, !dbg !9468
  %43 = load ptr, ptr %42, align 8, !dbg !9468
  %44 = getelementptr inbounds %struct.lwan_value_t_, ptr %43, i32 0, i32 0, !dbg !9468
  %45 = load ptr, ptr %44, align 8, !dbg !9468
  %46 = load i64, ptr %9, align 8, !dbg !9468
  %47 = getelementptr inbounds i8, ptr %45, i64 %46, !dbg !9468
  %48 = getelementptr inbounds i8, ptr %47, i64 -4, !dbg !9468
  %49 = call i32 @memcmp(ptr noundef %48, ptr noundef @.str.90, i64 noundef 4) #22, !dbg !9468
  %50 = icmp ne i32 %49, 0, !dbg !9468
  %51 = xor i1 %50, true, !dbg !9468
  %52 = xor i1 %51, true, !dbg !9468
  %53 = xor i1 %52, true, !dbg !9468
  %54 = zext i1 %53 to i32, !dbg !9468
  %55 = sext i32 %54 to i64, !dbg !9468
  %56 = icmp ne i64 %55, 0, !dbg !9468
  br i1 %56, label %57, label %58, !dbg !9470

57:                                               ; preds = %40
  store i32 0, ptr %8, align 4, !dbg !9471
  br label %98, !dbg !9471

58:                                               ; preds = %40
  %59 = load ptr, ptr %11, align 8, !dbg !9472
  %60 = getelementptr inbounds %struct.request_parser_helper, ptr %59, i32 0, i32 0, !dbg !9474
  %61 = load ptr, ptr %60, align 8, !dbg !9474
  %62 = getelementptr inbounds %struct.lwan_value_t_, ptr %61, i32 0, i32 0, !dbg !9475
  %63 = load ptr, ptr %62, align 8, !dbg !9475
  store ptr %63, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !9476, metadata !DIExpression()), !dbg !9477
  %64 = load ptr, ptr %7, align 8, !dbg !9479
  store ptr %64, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !9480, metadata !DIExpression()), !dbg !9487
  call void @llvm.dbg.declare(metadata ptr %5, metadata !9489, metadata !DIExpression()), !dbg !9490
  %65 = load ptr, ptr %4, align 8, !dbg !9491
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %5, ptr align 1 %65, i64 4, i1 false), !dbg !9492
  %66 = load i32, ptr %5, align 4, !dbg !9493
  switch i32 %66, label %70 [
    i32 542393671, label %67
    i32 1145128264, label %68
    i32 1414745936, label %69
  ], !dbg !9479

67:                                               ; preds = %58
  store i32 1, ptr %6, align 4, !dbg !9494
  br label %71, !dbg !9494

68:                                               ; preds = %58
  store i32 2, ptr %6, align 4, !dbg !9496
  br label %71, !dbg !9496

69:                                               ; preds = %58
  store i32 4, ptr %6, align 4, !dbg !9497
  br label %71, !dbg !9497

70:                                               ; preds = %58
  store i32 0, ptr %6, align 4, !dbg !9498
  br label %71, !dbg !9498

71:                                               ; preds = %70, %69, %68, %67
  %72 = load i32, ptr %6, align 4, !dbg !9499
  %73 = icmp eq i32 %72, 4, !dbg !9500
  br i1 %73, label %74, label %97, !dbg !9501

74:                                               ; preds = %71
  call void @llvm.dbg.declare(metadata ptr %12, metadata !9502, metadata !DIExpression()), !dbg !9504
  %75 = load ptr, ptr %11, align 8, !dbg !9505
  %76 = getelementptr inbounds %struct.request_parser_helper, ptr %75, i32 0, i32 0, !dbg !9506
  %77 = load ptr, ptr %76, align 8, !dbg !9506
  %78 = getelementptr inbounds %struct.lwan_value_t_, ptr %77, i32 0, i32 0, !dbg !9507
  %79 = load ptr, ptr %78, align 8, !dbg !9507
  %80 = call ptr @strrchr(ptr noundef %79, i32 noundef 10) #22, !dbg !9508
  store ptr %80, ptr %12, align 8, !dbg !9504
  %81 = load ptr, ptr %12, align 8, !dbg !9509
  %82 = icmp ne ptr %81, null, !dbg !9509
  br i1 %82, label %83, label %96, !dbg !9511

83:                                               ; preds = %74
  %84 = load ptr, ptr %12, align 8, !dbg !9512
  %85 = getelementptr inbounds i8, ptr %84, i64 -3, !dbg !9512
  %86 = call i32 @memcmp(ptr noundef %85, ptr noundef @.str.1.91, i64 noundef 3) #22, !dbg !9512
  %87 = icmp ne i32 %86, 0, !dbg !9512
  %88 = xor i1 %87, true, !dbg !9512
  %89 = xor i1 %88, true, !dbg !9512
  %90 = xor i1 %89, true, !dbg !9512
  %91 = zext i1 %90 to i32, !dbg !9512
  %92 = sext i32 %91 to i64, !dbg !9512
  %93 = icmp ne i64 %92, 0, !dbg !9512
  br i1 %93, label %94, label %95, !dbg !9515

94:                                               ; preds = %83
  store i32 0, ptr %8, align 4, !dbg !9516
  br label %98, !dbg !9516

95:                                               ; preds = %83
  br label %96, !dbg !9517

96:                                               ; preds = %95, %74
  br label %97, !dbg !9518

97:                                               ; preds = %96, %71
  store i32 1, ptr %8, align 4, !dbg !9519
  br label %98, !dbg !9519

98:                                               ; preds = %97, %94, %57, %37, %26, %18
  %99 = load i32, ptr %8, align 4, !dbg !9520
  ret i32 %99, !dbg !9520
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @read_from_request_socket(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3, ptr noundef %4) #0 !dbg !9521 {
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca i64, align 8
  %11 = alloca ptr, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  store ptr %0, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !9525, metadata !DIExpression()), !dbg !9526
  store ptr %1, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !9527, metadata !DIExpression()), !dbg !9528
  store ptr %2, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !9529, metadata !DIExpression()), !dbg !9530
  store i64 %3, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %10, metadata !9531, metadata !DIExpression()), !dbg !9532
  store ptr %4, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !9533, metadata !DIExpression()), !dbg !9534
  call void @llvm.dbg.declare(metadata ptr %12, metadata !9535, metadata !DIExpression()), !dbg !9536
  call void @llvm.dbg.declare(metadata ptr %13, metadata !9537, metadata !DIExpression()), !dbg !9538
  store i64 0, ptr %13, align 8, !dbg !9538
  call void @llvm.dbg.declare(metadata ptr %14, metadata !9539, metadata !DIExpression()), !dbg !9540
  store i32 16, ptr %14, align 4, !dbg !9540
  %15 = load ptr, ptr %9, align 8, !dbg !9541
  %16 = getelementptr inbounds %struct.request_parser_helper, ptr %15, i32 0, i32 1, !dbg !9543
  %17 = load ptr, ptr %16, align 8, !dbg !9543
  %18 = icmp ne ptr %17, null, !dbg !9541
  br i1 %18, label %19, label %45, !dbg !9544

19:                                               ; preds = %5
  %20 = load ptr, ptr %9, align 8, !dbg !9545
  %21 = getelementptr inbounds %struct.request_parser_helper, ptr %20, i32 0, i32 1, !dbg !9547
  %22 = load ptr, ptr %21, align 8, !dbg !9547
  %23 = load ptr, ptr %8, align 8, !dbg !9548
  %24 = getelementptr inbounds %struct.lwan_value_t_, ptr %23, i32 0, i32 0, !dbg !9549
  %25 = load ptr, ptr %24, align 8, !dbg !9549
  %26 = ptrtoint ptr %22 to i64, !dbg !9550
  %27 = ptrtoint ptr %25 to i64, !dbg !9550
  %28 = sub i64 %26, %27, !dbg !9550
  %29 = load ptr, ptr %8, align 8, !dbg !9551
  %30 = getelementptr inbounds %struct.lwan_value_t_, ptr %29, i32 0, i32 1, !dbg !9552
  %31 = load i64, ptr %30, align 8, !dbg !9553
  %32 = sub i64 %31, %28, !dbg !9553
  store i64 %32, ptr %30, align 8, !dbg !9553
  %33 = load ptr, ptr %8, align 8, !dbg !9554
  %34 = getelementptr inbounds %struct.lwan_value_t_, ptr %33, i32 0, i32 0, !dbg !9555
  %35 = load ptr, ptr %34, align 8, !dbg !9555
  %36 = load ptr, ptr %9, align 8, !dbg !9556
  %37 = getelementptr inbounds %struct.request_parser_helper, ptr %36, i32 0, i32 1, !dbg !9557
  %38 = load ptr, ptr %37, align 8, !dbg !9557
  %39 = load ptr, ptr %8, align 8, !dbg !9558
  %40 = getelementptr inbounds %struct.lwan_value_t_, ptr %39, i32 0, i32 1, !dbg !9559
  %41 = load i64, ptr %40, align 8, !dbg !9559
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %35, ptr align 1 %38, i64 %41, i1 false), !dbg !9560
  %42 = load ptr, ptr %8, align 8, !dbg !9561
  %43 = getelementptr inbounds %struct.lwan_value_t_, ptr %42, i32 0, i32 1, !dbg !9562
  %44 = load i64, ptr %43, align 8, !dbg !9562
  store i64 %44, ptr %13, align 8, !dbg !9563
  br label %124, !dbg !9564

45:                                               ; preds = %5
  br label %46, !dbg !9565

46:                                               ; preds = %141, %45
  %47 = load i32, ptr %14, align 4, !dbg !9566
  %48 = icmp sgt i32 %47, 0, !dbg !9569
  br i1 %48, label %49, label %144, !dbg !9570

49:                                               ; preds = %46
  %50 = load ptr, ptr %7, align 8, !dbg !9571
  %51 = getelementptr inbounds %struct.lwan_request_t_, ptr %50, i32 0, i32 1, !dbg !9573
  %52 = load i32, ptr %51, align 4, !dbg !9573
  %53 = load ptr, ptr %8, align 8, !dbg !9574
  %54 = getelementptr inbounds %struct.lwan_value_t_, ptr %53, i32 0, i32 0, !dbg !9575
  %55 = load ptr, ptr %54, align 8, !dbg !9575
  %56 = load i64, ptr %13, align 8, !dbg !9576
  %57 = getelementptr inbounds i8, ptr %55, i64 %56, !dbg !9577
  %58 = load i64, ptr %10, align 8, !dbg !9578
  %59 = load i64, ptr %13, align 8, !dbg !9579
  %60 = sub i64 %58, %59, !dbg !9580
  %61 = call i64 @read(i32 noundef %52, ptr noundef %57, i64 noundef %60), !dbg !9581
  store i64 %61, ptr %12, align 8, !dbg !9582
  %62 = load i64, ptr %12, align 8, !dbg !9583
  %63 = icmp eq i64 %62, 0, !dbg !9583
  %64 = zext i1 %63 to i32, !dbg !9583
  %65 = sext i32 %64 to i64, !dbg !9583
  %66 = icmp ne i64 %65, 0, !dbg !9583
  br i1 %66, label %67, label %74, !dbg !9585

67:                                               ; preds = %49
  %68 = load ptr, ptr %7, align 8, !dbg !9586
  %69 = getelementptr inbounds %struct.lwan_request_t_, ptr %68, i32 0, i32 4, !dbg !9588
  %70 = load ptr, ptr %69, align 8, !dbg !9588
  %71 = getelementptr inbounds %struct.lwan_connection_t_, ptr %70, i32 0, i32 2, !dbg !9589
  %72 = load ptr, ptr %71, align 8, !dbg !9589
  %73 = call i32 @coro_yield(ptr noundef %72, i32 noundef -1), !dbg !9590
  unreachable, !dbg !9591

74:                                               ; preds = %49
  %75 = load i64, ptr %12, align 8, !dbg !9592
  %76 = icmp slt i64 %75, 0, !dbg !9592
  %77 = zext i1 %76 to i32, !dbg !9592
  %78 = sext i32 %77 to i64, !dbg !9592
  %79 = icmp ne i64 %78, 0, !dbg !9592
  br i1 %79, label %80, label %112, !dbg !9594

80:                                               ; preds = %74
  %81 = call ptr @__errno_location() #20, !dbg !9595
  %82 = load i32, ptr %81, align 4, !dbg !9595
  switch i32 %82, label %97 [
    i32 11, label %83
    i32 4, label %83
  ], !dbg !9597

83:                                               ; preds = %80, %80
  br label %84, !dbg !9598

84:                                               ; preds = %138, %83
  call void @llvm.dbg.label(metadata !9599), !dbg !9601
  %85 = load ptr, ptr %7, align 8, !dbg !9602
  %86 = getelementptr inbounds %struct.lwan_request_t_, ptr %85, i32 0, i32 4, !dbg !9603
  %87 = load ptr, ptr %86, align 8, !dbg !9603
  %88 = getelementptr inbounds %struct.lwan_connection_t_, ptr %87, i32 0, i32 0, !dbg !9604
  %89 = load i32, ptr %88, align 8, !dbg !9605
  %90 = or i32 %89, 16, !dbg !9605
  store i32 %90, ptr %88, align 8, !dbg !9605
  %91 = load ptr, ptr %7, align 8, !dbg !9606
  %92 = getelementptr inbounds %struct.lwan_request_t_, ptr %91, i32 0, i32 4, !dbg !9607
  %93 = load ptr, ptr %92, align 8, !dbg !9607
  %94 = getelementptr inbounds %struct.lwan_connection_t_, ptr %93, i32 0, i32 2, !dbg !9608
  %95 = load ptr, ptr %94, align 8, !dbg !9608
  %96 = call i32 @coro_yield(ptr noundef %95, i32 noundef 0), !dbg !9609
  br label %141, !dbg !9610

97:                                               ; preds = %80
  %98 = load i64, ptr %13, align 8, !dbg !9611
  %99 = icmp ne i64 %98, 0, !dbg !9611
  %100 = xor i1 %99, true, !dbg !9611
  %101 = zext i1 %100 to i32, !dbg !9611
  %102 = sext i32 %101 to i64, !dbg !9611
  %103 = icmp ne i64 %102, 0, !dbg !9611
  br i1 %103, label %104, label %105, !dbg !9613

104:                                              ; preds = %97
  store i32 400, ptr %6, align 4, !dbg !9614
  br label %145, !dbg !9614

105:                                              ; preds = %97
  %106 = load ptr, ptr %7, align 8, !dbg !9615
  %107 = getelementptr inbounds %struct.lwan_request_t_, ptr %106, i32 0, i32 4, !dbg !9616
  %108 = load ptr, ptr %107, align 8, !dbg !9616
  %109 = getelementptr inbounds %struct.lwan_connection_t_, ptr %108, i32 0, i32 2, !dbg !9617
  %110 = load ptr, ptr %109, align 8, !dbg !9617
  %111 = call i32 @coro_yield(ptr noundef %110, i32 noundef -1), !dbg !9618
  unreachable, !dbg !9619

112:                                              ; preds = %74
  %113 = load i64, ptr %12, align 8, !dbg !9620
  %114 = load i64, ptr %13, align 8, !dbg !9621
  %115 = add i64 %114, %113, !dbg !9621
  store i64 %115, ptr %13, align 8, !dbg !9621
  %116 = load ptr, ptr %8, align 8, !dbg !9622
  %117 = getelementptr inbounds %struct.lwan_value_t_, ptr %116, i32 0, i32 0, !dbg !9623
  %118 = load ptr, ptr %117, align 8, !dbg !9623
  %119 = load i64, ptr %13, align 8, !dbg !9624
  %120 = getelementptr inbounds i8, ptr %118, i64 %119, !dbg !9622
  store i8 0, ptr %120, align 1, !dbg !9625
  %121 = load i64, ptr %13, align 8, !dbg !9626
  %122 = load ptr, ptr %8, align 8, !dbg !9627
  %123 = getelementptr inbounds %struct.lwan_value_t_, ptr %122, i32 0, i32 1, !dbg !9628
  store i64 %121, ptr %123, align 8, !dbg !9629
  br label %124, !dbg !9627

124:                                              ; preds = %112, %19
  call void @llvm.dbg.label(metadata !9630), !dbg !9631
  %125 = load ptr, ptr %11, align 8, !dbg !9632
  %126 = load i64, ptr %13, align 8, !dbg !9633
  %127 = load i64, ptr %10, align 8, !dbg !9634
  %128 = load ptr, ptr %9, align 8, !dbg !9635
  %129 = call i32 %125(i64 noundef %126, i64 noundef %127, ptr noundef %128), !dbg !9632
  switch i32 %129, label %140 [
    i32 0, label %130
    i32 1, label %137
    i32 2, label %138
    i32 3, label %139
  ], !dbg !9636

130:                                              ; preds = %124
  %131 = load ptr, ptr %7, align 8, !dbg !9637
  %132 = getelementptr inbounds %struct.lwan_request_t_, ptr %131, i32 0, i32 4, !dbg !9639
  %133 = load ptr, ptr %132, align 8, !dbg !9639
  %134 = getelementptr inbounds %struct.lwan_connection_t_, ptr %133, i32 0, i32 0, !dbg !9640
  %135 = load i32, ptr %134, align 8, !dbg !9641
  %136 = and i32 %135, -17, !dbg !9641
  store i32 %136, ptr %134, align 8, !dbg !9641
  store i32 200, ptr %6, align 4, !dbg !9642
  br label %145, !dbg !9642

137:                                              ; preds = %124
  br label %141, !dbg !9643

138:                                              ; preds = %124
  br label %84, !dbg !9644

139:                                              ; preds = %124
  store i32 413, ptr %6, align 4, !dbg !9645
  br label %145, !dbg !9645

140:                                              ; preds = %124
  br label %141, !dbg !9646

141:                                              ; preds = %140, %137, %84
  %142 = load i32, ptr %14, align 4, !dbg !9647
  %143 = add nsw i32 %142, -1, !dbg !9647
  store i32 %143, ptr %14, align 4, !dbg !9647
  br label %46, !dbg !9648, !llvm.loop !9649

144:                                              ; preds = %46
  store i32 408, ptr %6, align 4, !dbg !9651
  br label %145, !dbg !9651

145:                                              ; preds = %144, %139, %130, %104
  %146 = load i32, ptr %6, align 4, !dbg !9652
  ret i32 %146, !dbg !9652
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @parse_http_request(ptr noundef %0, ptr noundef %1) #0 !dbg !9653 {
  %3 = alloca i64, align 8
  %4 = alloca i8, align 1
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i8, align 1
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca i32, align 4
  %15 = alloca ptr, align 8
  %16 = alloca i32, align 4
  %17 = alloca ptr, align 8
  %18 = alloca ptr, align 8
  %19 = alloca ptr, align 8
  %20 = alloca ptr, align 8
  %21 = alloca i64, align 8
  %22 = alloca i32, align 4
  store ptr %0, ptr %17, align 8
  call void @llvm.dbg.declare(metadata ptr %17, metadata !9654, metadata !DIExpression()), !dbg !9655
  store ptr %1, ptr %18, align 8
  call void @llvm.dbg.declare(metadata ptr %18, metadata !9656, metadata !DIExpression()), !dbg !9657
  call void @llvm.dbg.declare(metadata ptr %19, metadata !9658, metadata !DIExpression()), !dbg !9659
  %23 = load ptr, ptr %18, align 8, !dbg !9660
  %24 = getelementptr inbounds %struct.request_parser_helper, ptr %23, i32 0, i32 0, !dbg !9661
  %25 = load ptr, ptr %24, align 8, !dbg !9661
  %26 = getelementptr inbounds %struct.lwan_value_t_, ptr %25, i32 0, i32 0, !dbg !9662
  %27 = load ptr, ptr %26, align 8, !dbg !9662
  store ptr %27, ptr %15, align 8
  call void @llvm.dbg.declare(metadata ptr %15, metadata !9663, metadata !DIExpression()), !dbg !9665
  br label %28, !dbg !9667

28:                                               ; preds = %49, %2
  %29 = load ptr, ptr %15, align 8, !dbg !9668
  %30 = load i8, ptr %29, align 1, !dbg !9669
  %31 = sext i8 %30 to i32, !dbg !9669
  %32 = icmp ne i32 %31, 0, !dbg !9669
  br i1 %32, label %33, label %47, !dbg !9670

33:                                               ; preds = %28
  %34 = load ptr, ptr %15, align 8, !dbg !9671
  %35 = load i8, ptr %34, align 1, !dbg !9672
  store i8 %35, ptr %4, align 1
  call void @llvm.dbg.declare(metadata ptr %4, metadata !9673, metadata !DIExpression()), !dbg !9677
  %36 = load i8, ptr %4, align 1, !dbg !9679
  %37 = sext i8 %36 to i64, !dbg !9680
  %38 = mul i64 16843009, %37, !dbg !9681
  %39 = xor i64 %38, 151653664, !dbg !9682
  store i64 %39, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !9683, metadata !DIExpression()), !dbg !9687
  %40 = load i64, ptr %3, align 8, !dbg !9689
  %41 = sub i64 %40, 16843009, !dbg !9690
  %42 = load i64, ptr %3, align 8, !dbg !9691
  %43 = xor i64 %42, -1, !dbg !9692
  %44 = and i64 %41, %43, !dbg !9693
  %45 = and i64 %44, 2155905152, !dbg !9694
  %46 = icmp ne i64 %45, 0, !dbg !9670
  br label %47

47:                                               ; preds = %33, %28
  %48 = phi i1 [ false, %28 ], [ %46, %33 ], !dbg !9695
  br i1 %48, label %49, label %52, !dbg !9667

49:                                               ; preds = %47
  %50 = load ptr, ptr %15, align 8, !dbg !9696
  %51 = getelementptr inbounds i8, ptr %50, i32 1, !dbg !9696
  store ptr %51, ptr %15, align 8, !dbg !9696
  br label %28, !dbg !9667, !llvm.loop !9697

52:                                               ; preds = %47
  %53 = load ptr, ptr %15, align 8, !dbg !9698
  store ptr %53, ptr %19, align 8, !dbg !9699
  %54 = load ptr, ptr %19, align 8, !dbg !9700
  %55 = load i8, ptr %54, align 1, !dbg !9700
  %56 = icmp ne i8 %55, 0, !dbg !9700
  %57 = xor i1 %56, true, !dbg !9700
  %58 = zext i1 %57 to i32, !dbg !9700
  %59 = sext i32 %58 to i64, !dbg !9700
  %60 = icmp ne i64 %59, 0, !dbg !9700
  br i1 %60, label %61, label %62, !dbg !9702

61:                                               ; preds = %52
  store i32 400, ptr %16, align 4, !dbg !9703
  br label %204, !dbg !9703

62:                                               ; preds = %52
  call void @llvm.dbg.declare(metadata ptr %20, metadata !9704, metadata !DIExpression()), !dbg !9705
  %63 = load ptr, ptr %17, align 8, !dbg !9706
  %64 = load ptr, ptr %19, align 8, !dbg !9707
  store ptr %63, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %12, metadata !9708, metadata !DIExpression()), !dbg !9709
  store ptr %64, ptr %13, align 8
  call void @llvm.dbg.declare(metadata ptr %13, metadata !9711, metadata !DIExpression()), !dbg !9712
  call void @llvm.dbg.declare(metadata ptr %14, metadata !9713, metadata !DIExpression()), !dbg !9714
  %65 = load ptr, ptr %13, align 8, !dbg !9715
  store ptr %65, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !9476, metadata !DIExpression()), !dbg !9716
  %66 = load ptr, ptr %11, align 8, !dbg !9718
  store ptr %66, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !9480, metadata !DIExpression()), !dbg !9719
  call void @llvm.dbg.declare(metadata ptr %9, metadata !9489, metadata !DIExpression()), !dbg !9721
  %67 = load ptr, ptr %8, align 8, !dbg !9722
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %9, ptr align 1 %67, i64 4, i1 false), !dbg !9723
  %68 = load i32, ptr %9, align 4, !dbg !9724
  switch i32 %68, label %72 [
    i32 542393671, label %69
    i32 1145128264, label %70
    i32 1414745936, label %71
  ], !dbg !9718

69:                                               ; preds = %62
  store i32 1, ptr %10, align 4, !dbg !9725
  br label %73, !dbg !9725

70:                                               ; preds = %62
  store i32 2, ptr %10, align 4, !dbg !9726
  br label %73, !dbg !9726

71:                                               ; preds = %62
  store i32 4, ptr %10, align 4, !dbg !9727
  br label %73, !dbg !9727

72:                                               ; preds = %62
  store i32 0, ptr %10, align 4, !dbg !9728
  br label %73, !dbg !9728

73:                                               ; preds = %72, %71, %70, %69
  %74 = load i32, ptr %10, align 4, !dbg !9729
  store i32 %74, ptr %14, align 4, !dbg !9714
  %75 = load i32, ptr %14, align 4, !dbg !9730
  %76 = load ptr, ptr %12, align 8, !dbg !9731
  %77 = load i32, ptr %76, align 8, !dbg !9732
  %78 = or i32 %77, %75, !dbg !9732
  store i32 %78, ptr %76, align 8, !dbg !9732
  %79 = load ptr, ptr %13, align 8, !dbg !9733
  %80 = load i32, ptr %14, align 4, !dbg !9734
  %81 = sext i32 %80 to i64, !dbg !9735
  %82 = getelementptr inbounds [5 x i8], ptr @identify_http_method.sizes, i64 0, i64 %81, !dbg !9735
  %83 = load i8, ptr %82, align 1, !dbg !9735
  %84 = sext i8 %83 to i32, !dbg !9735
  %85 = sext i32 %84 to i64, !dbg !9736
  %86 = getelementptr inbounds i8, ptr %79, i64 %85, !dbg !9736
  store ptr %86, ptr %20, align 8, !dbg !9705
  %87 = load ptr, ptr %19, align 8, !dbg !9737
  %88 = load ptr, ptr %20, align 8, !dbg !9737
  %89 = icmp eq ptr %87, %88, !dbg !9737
  %90 = zext i1 %89 to i32, !dbg !9737
  %91 = sext i32 %90 to i64, !dbg !9737
  %92 = icmp ne i64 %91, 0, !dbg !9737
  br i1 %92, label %93, label %94, !dbg !9739

93:                                               ; preds = %73
  store i32 405, ptr %16, align 4, !dbg !9740
  br label %204, !dbg !9740

94:                                               ; preds = %73
  %95 = load ptr, ptr %17, align 8, !dbg !9741
  %96 = load ptr, ptr %20, align 8, !dbg !9742
  %97 = load ptr, ptr %18, align 8, !dbg !9743
  %98 = call ptr @identify_http_path(ptr noundef %95, ptr noundef %96, ptr noundef %97), !dbg !9744
  store ptr %98, ptr %19, align 8, !dbg !9745
  %99 = load ptr, ptr %19, align 8, !dbg !9746
  %100 = icmp ne ptr %99, null, !dbg !9746
  %101 = xor i1 %100, true, !dbg !9746
  %102 = zext i1 %101 to i32, !dbg !9746
  %103 = sext i32 %102 to i64, !dbg !9746
  %104 = icmp ne i64 %103, 0, !dbg !9746
  br i1 %104, label %105, label %106, !dbg !9748

105:                                              ; preds = %94
  store i32 400, ptr %16, align 4, !dbg !9749
  br label %204, !dbg !9749

106:                                              ; preds = %94
  %107 = load ptr, ptr %18, align 8, !dbg !9750
  %108 = load ptr, ptr %19, align 8, !dbg !9751
  %109 = load ptr, ptr %18, align 8, !dbg !9752
  %110 = getelementptr inbounds %struct.request_parser_helper, ptr %109, i32 0, i32 0, !dbg !9753
  %111 = load ptr, ptr %110, align 8, !dbg !9753
  %112 = getelementptr inbounds %struct.lwan_value_t_, ptr %111, i32 0, i32 0, !dbg !9754
  %113 = load ptr, ptr %112, align 8, !dbg !9754
  %114 = load ptr, ptr %18, align 8, !dbg !9755
  %115 = getelementptr inbounds %struct.request_parser_helper, ptr %114, i32 0, i32 0, !dbg !9756
  %116 = load ptr, ptr %115, align 8, !dbg !9756
  %117 = getelementptr inbounds %struct.lwan_value_t_, ptr %116, i32 0, i32 1, !dbg !9757
  %118 = load i64, ptr %117, align 8, !dbg !9757
  %119 = getelementptr inbounds i8, ptr %113, i64 %118, !dbg !9758
  %120 = call ptr @parse_headers(ptr noundef %107, ptr noundef %108, ptr noundef %119), !dbg !9759
  store ptr %120, ptr %19, align 8, !dbg !9760
  %121 = load ptr, ptr %19, align 8, !dbg !9761
  %122 = icmp ne ptr %121, null, !dbg !9761
  %123 = xor i1 %122, true, !dbg !9761
  %124 = zext i1 %123 to i32, !dbg !9761
  %125 = sext i32 %124 to i64, !dbg !9761
  %126 = icmp ne i64 %125, 0, !dbg !9761
  br i1 %126, label %127, label %128, !dbg !9763

127:                                              ; preds = %106
  store i32 400, ptr %16, align 4, !dbg !9764
  br label %204, !dbg !9764

128:                                              ; preds = %106
  call void @llvm.dbg.declare(metadata ptr %21, metadata !9765, metadata !DIExpression()), !dbg !9766
  %129 = load ptr, ptr %17, align 8, !dbg !9767
  %130 = getelementptr inbounds %struct.lwan_request_t_, ptr %129, i32 0, i32 2, !dbg !9768
  %131 = getelementptr inbounds %struct.lwan_value_t_, ptr %130, i32 0, i32 0, !dbg !9769
  %132 = load ptr, ptr %131, align 8, !dbg !9769
  %133 = call i64 @url_decode(ptr noundef %132), !dbg !9770
  store i64 %133, ptr %21, align 8, !dbg !9766
  %134 = load i64, ptr %21, align 8, !dbg !9771
  %135 = icmp ne i64 %134, 0, !dbg !9771
  %136 = xor i1 %135, true, !dbg !9771
  %137 = zext i1 %136 to i32, !dbg !9771
  %138 = sext i32 %137 to i64, !dbg !9771
  %139 = icmp ne i64 %138, 0, !dbg !9771
  br i1 %139, label %140, label %141, !dbg !9773

140:                                              ; preds = %128
  store i32 400, ptr %16, align 4, !dbg !9774
  br label %204, !dbg !9774

141:                                              ; preds = %128
  %142 = load i64, ptr %21, align 8, !dbg !9775
  %143 = load ptr, ptr %17, align 8, !dbg !9776
  %144 = getelementptr inbounds %struct.lwan_request_t_, ptr %143, i32 0, i32 2, !dbg !9777
  %145 = getelementptr inbounds %struct.lwan_value_t_, ptr %144, i32 0, i32 1, !dbg !9778
  store i64 %142, ptr %145, align 8, !dbg !9779
  %146 = load ptr, ptr %17, align 8, !dbg !9780
  %147 = getelementptr inbounds %struct.lwan_request_t_, ptr %146, i32 0, i32 3, !dbg !9781
  %148 = getelementptr inbounds %struct.lwan_value_t_, ptr %147, i32 0, i32 1, !dbg !9782
  store i64 %142, ptr %148, align 8, !dbg !9783
  %149 = load ptr, ptr %17, align 8, !dbg !9784
  %150 = load ptr, ptr %18, align 8, !dbg !9785
  store ptr %149, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !9786, metadata !DIExpression()), !dbg !9788
  store ptr %150, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !9790, metadata !DIExpression()), !dbg !9791
  call void @llvm.dbg.declare(metadata ptr %7, metadata !9792, metadata !DIExpression()), !dbg !9793
  %151 = load ptr, ptr %5, align 8, !dbg !9794
  %152 = load i32, ptr %151, align 8, !dbg !9796
  %153 = and i32 %152, 32, !dbg !9797
  %154 = icmp ne i32 %153, 0, !dbg !9797
  br i1 %154, label %155, label %162, !dbg !9798

155:                                              ; preds = %141
  %156 = load ptr, ptr %6, align 8, !dbg !9799
  %157 = getelementptr inbounds %struct.request_parser_helper, ptr %156, i32 0, i32 11, !dbg !9800
  %158 = load i8, ptr %157, align 8, !dbg !9800
  %159 = sext i8 %158 to i32, !dbg !9799
  %160 = icmp eq i32 %159, 107, !dbg !9801
  %161 = zext i1 %160 to i8, !dbg !9802
  store i8 %161, ptr %7, align 1, !dbg !9802
  br label %169, !dbg !9803

162:                                              ; preds = %141
  %163 = load ptr, ptr %6, align 8, !dbg !9804
  %164 = getelementptr inbounds %struct.request_parser_helper, ptr %163, i32 0, i32 11, !dbg !9805
  %165 = load i8, ptr %164, align 8, !dbg !9805
  %166 = sext i8 %165 to i32, !dbg !9804
  %167 = icmp ne i32 %166, 99, !dbg !9806
  %168 = zext i1 %167 to i8, !dbg !9807
  store i8 %168, ptr %7, align 1, !dbg !9807
  br label %169

169:                                              ; preds = %162, %155
  %170 = load i8, ptr %7, align 1, !dbg !9808
  %171 = trunc i8 %170 to i1, !dbg !9808
  br i1 %171, label %172, label %178, !dbg !9810

172:                                              ; preds = %169
  %173 = load ptr, ptr %5, align 8, !dbg !9811
  %174 = getelementptr inbounds %struct.lwan_request_t_, ptr %173, i32 0, i32 4, !dbg !9812
  %175 = load ptr, ptr %174, align 8, !dbg !9812
  %176 = load i32, ptr %175, align 8, !dbg !9813
  %177 = or i32 %176, 1, !dbg !9813
  store i32 %177, ptr %175, align 8, !dbg !9813
  br label %184, !dbg !9811

178:                                              ; preds = %169
  %179 = load ptr, ptr %5, align 8, !dbg !9814
  %180 = getelementptr inbounds %struct.lwan_request_t_, ptr %179, i32 0, i32 4, !dbg !9815
  %181 = load ptr, ptr %180, align 8, !dbg !9815
  %182 = load i32, ptr %181, align 8, !dbg !9816
  %183 = and i32 %182, -2, !dbg !9816
  store i32 %183, ptr %181, align 8, !dbg !9816
  br label %184

184:                                              ; preds = %178, %172
  %185 = load ptr, ptr %17, align 8, !dbg !9817
  %186 = getelementptr inbounds %struct.lwan_request_t_, ptr %185, i32 0, i32 0, !dbg !9819
  %187 = load i32, ptr %186, align 8, !dbg !9819
  %188 = and i32 %187, 4, !dbg !9820
  %189 = icmp ne i32 %188, 0, !dbg !9820
  br i1 %189, label %190, label %203, !dbg !9821

190:                                              ; preds = %184
  call void @llvm.dbg.declare(metadata ptr %22, metadata !9822, metadata !DIExpression()), !dbg !9824
  %191 = load ptr, ptr %17, align 8, !dbg !9825
  %192 = load ptr, ptr %18, align 8, !dbg !9826
  %193 = load ptr, ptr %19, align 8, !dbg !9827
  %194 = call i32 @read_post_data(ptr noundef %191, ptr noundef %192, ptr noundef %193), !dbg !9828
  store i32 %194, ptr %22, align 4, !dbg !9824
  %195 = load i32, ptr %22, align 4, !dbg !9829
  %196 = icmp ne i32 %195, 200, !dbg !9829
  %197 = zext i1 %196 to i32, !dbg !9829
  %198 = sext i32 %197 to i64, !dbg !9829
  %199 = icmp ne i64 %198, 0, !dbg !9829
  br i1 %199, label %200, label %202, !dbg !9831

200:                                              ; preds = %190
  %201 = load i32, ptr %22, align 4, !dbg !9832
  store i32 %201, ptr %16, align 4, !dbg !9833
  br label %204, !dbg !9833

202:                                              ; preds = %190
  br label %203, !dbg !9834

203:                                              ; preds = %202, %184
  store i32 200, ptr %16, align 4, !dbg !9835
  br label %204, !dbg !9835

204:                                              ; preds = %203, %200, %140, %127, %105, %93, %61
  %205 = load i32, ptr %16, align 4, !dbg !9836
  ret i32 %205, !dbg !9836
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @prepare_for_response(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !9837 {
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !9840, metadata !DIExpression()), !dbg !9841
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !9842, metadata !DIExpression()), !dbg !9843
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !9844, metadata !DIExpression()), !dbg !9845
  %8 = load ptr, ptr %5, align 8, !dbg !9846
  %9 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %8, i32 0, i32 4, !dbg !9848
  %10 = load i32, ptr %9, align 8, !dbg !9848
  %11 = and i32 %10, 1, !dbg !9849
  %12 = icmp ne i32 %11, 0, !dbg !9849
  br i1 %12, label %13, label %16, !dbg !9850

13:                                               ; preds = %3
  %14 = load ptr, ptr %6, align 8, !dbg !9851
  %15 = load ptr, ptr %7, align 8, !dbg !9852
  call void @parse_query_string(ptr noundef %14, ptr noundef %15), !dbg !9853
  br label %16, !dbg !9853

16:                                               ; preds = %13, %3
  %17 = load ptr, ptr %5, align 8, !dbg !9854
  %18 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %17, i32 0, i32 4, !dbg !9856
  %19 = load i32, ptr %18, align 8, !dbg !9856
  %20 = and i32 %19, 2, !dbg !9857
  %21 = icmp ne i32 %20, 0, !dbg !9857
  br i1 %21, label %22, label %25, !dbg !9858

22:                                               ; preds = %16
  %23 = load ptr, ptr %6, align 8, !dbg !9859
  %24 = load ptr, ptr %7, align 8, !dbg !9860
  call void @parse_if_modified_since(ptr noundef %23, ptr noundef %24), !dbg !9861
  br label %25, !dbg !9861

25:                                               ; preds = %22, %16
  %26 = load ptr, ptr %5, align 8, !dbg !9862
  %27 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %26, i32 0, i32 4, !dbg !9864
  %28 = load i32, ptr %27, align 8, !dbg !9864
  %29 = and i32 %28, 4, !dbg !9865
  %30 = icmp ne i32 %29, 0, !dbg !9865
  br i1 %30, label %31, label %34, !dbg !9866

31:                                               ; preds = %25
  %32 = load ptr, ptr %6, align 8, !dbg !9867
  %33 = load ptr, ptr %7, align 8, !dbg !9868
  call void @parse_range(ptr noundef %32, ptr noundef %33), !dbg !9869
  br label %34, !dbg !9869

34:                                               ; preds = %31, %25
  %35 = load ptr, ptr %5, align 8, !dbg !9870
  %36 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %35, i32 0, i32 4, !dbg !9872
  %37 = load i32, ptr %36, align 8, !dbg !9872
  %38 = and i32 %37, 8, !dbg !9873
  %39 = icmp ne i32 %38, 0, !dbg !9873
  br i1 %39, label %40, label %43, !dbg !9874

40:                                               ; preds = %34
  %41 = load ptr, ptr %6, align 8, !dbg !9875
  %42 = load ptr, ptr %7, align 8, !dbg !9876
  call void @parse_accept_encoding(ptr noundef %41, ptr noundef %42), !dbg !9877
  br label %43, !dbg !9877

43:                                               ; preds = %40, %34
  %44 = load ptr, ptr %6, align 8, !dbg !9878
  %45 = getelementptr inbounds %struct.lwan_request_t_, ptr %44, i32 0, i32 0, !dbg !9880
  %46 = load i32, ptr %45, align 8, !dbg !9880
  %47 = and i32 %46, 4, !dbg !9881
  %48 = icmp ne i32 %47, 0, !dbg !9881
  br i1 %48, label %49, label %60, !dbg !9882

49:                                               ; preds = %43
  %50 = load ptr, ptr %5, align 8, !dbg !9883
  %51 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %50, i32 0, i32 4, !dbg !9886
  %52 = load i32, ptr %51, align 8, !dbg !9886
  %53 = and i32 %52, 16, !dbg !9887
  %54 = icmp ne i32 %53, 0, !dbg !9887
  br i1 %54, label %55, label %58, !dbg !9888

55:                                               ; preds = %49
  %56 = load ptr, ptr %6, align 8, !dbg !9889
  %57 = load ptr, ptr %7, align 8, !dbg !9890
  call void @parse_post_data(ptr noundef %56, ptr noundef %57), !dbg !9891
  br label %59, !dbg !9891

58:                                               ; preds = %49
  store i32 405, ptr %4, align 4, !dbg !9892
  br label %117, !dbg !9892

59:                                               ; preds = %55
  br label %60, !dbg !9893

60:                                               ; preds = %59, %43
  %61 = load ptr, ptr %5, align 8, !dbg !9894
  %62 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %61, i32 0, i32 4, !dbg !9896
  %63 = load i32, ptr %62, align 8, !dbg !9896
  %64 = and i32 %63, 32, !dbg !9897
  %65 = icmp ne i32 %64, 0, !dbg !9897
  br i1 %65, label %66, label %81, !dbg !9898

66:                                               ; preds = %60
  %67 = load ptr, ptr %6, align 8, !dbg !9899
  %68 = load ptr, ptr %7, align 8, !dbg !9902
  %69 = getelementptr inbounds %struct.request_parser_helper, ptr %68, i32 0, i32 10, !dbg !9903
  %70 = load ptr, ptr %5, align 8, !dbg !9904
  %71 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %70, i32 0, i32 7, !dbg !9905
  %72 = getelementptr inbounds %struct.list_node, ptr %71, i32 0, i32 0, !dbg !9906
  %73 = load ptr, ptr %72, align 8, !dbg !9906
  %74 = load ptr, ptr %5, align 8, !dbg !9907
  %75 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %74, i32 0, i32 7, !dbg !9908
  %76 = getelementptr inbounds %struct.list_node, ptr %75, i32 0, i32 1, !dbg !9909
  %77 = load ptr, ptr %76, align 8, !dbg !9909
  %78 = call zeroext i1 @lwan_http_authorize(ptr noundef %67, ptr noundef %69, ptr noundef %73, ptr noundef %77), !dbg !9910
  br i1 %78, label %80, label %79, !dbg !9911

79:                                               ; preds = %66
  store i32 401, ptr %4, align 4, !dbg !9912
  br label %117, !dbg !9912

80:                                               ; preds = %66
  br label %81, !dbg !9913

81:                                               ; preds = %80, %60
  %82 = load ptr, ptr %5, align 8, !dbg !9914
  %83 = getelementptr inbounds %struct.lwan_url_map_t_, ptr %82, i32 0, i32 4, !dbg !9916
  %84 = load i32, ptr %83, align 8, !dbg !9916
  %85 = and i32 %84, 64, !dbg !9917
  %86 = icmp ne i32 %85, 0, !dbg !9917
  br i1 %86, label %87, label %116, !dbg !9918

87:                                               ; preds = %81
  br label %88, !dbg !9919

88:                                               ; preds = %104, %87
  %89 = load ptr, ptr %6, align 8, !dbg !9921
  %90 = getelementptr inbounds %struct.lwan_request_t_, ptr %89, i32 0, i32 2, !dbg !9922
  %91 = getelementptr inbounds %struct.lwan_value_t_, ptr %90, i32 0, i32 0, !dbg !9923
  %92 = load ptr, ptr %91, align 8, !dbg !9923
  %93 = load i8, ptr %92, align 1, !dbg !9924
  %94 = sext i8 %93 to i32, !dbg !9924
  %95 = icmp eq i32 %94, 47, !dbg !9925
  br i1 %95, label %96, label %102, !dbg !9926

96:                                               ; preds = %88
  %97 = load ptr, ptr %6, align 8, !dbg !9927
  %98 = getelementptr inbounds %struct.lwan_request_t_, ptr %97, i32 0, i32 2, !dbg !9928
  %99 = getelementptr inbounds %struct.lwan_value_t_, ptr %98, i32 0, i32 1, !dbg !9929
  %100 = load i64, ptr %99, align 8, !dbg !9929
  %101 = icmp ugt i64 %100, 0, !dbg !9930
  br label %102

102:                                              ; preds = %96, %88
  %103 = phi i1 [ false, %88 ], [ %101, %96 ], !dbg !9931
  br i1 %103, label %104, label %115, !dbg !9919

104:                                              ; preds = %102
  %105 = load ptr, ptr %6, align 8, !dbg !9932
  %106 = getelementptr inbounds %struct.lwan_request_t_, ptr %105, i32 0, i32 2, !dbg !9934
  %107 = getelementptr inbounds %struct.lwan_value_t_, ptr %106, i32 0, i32 0, !dbg !9935
  %108 = load ptr, ptr %107, align 8, !dbg !9936
  %109 = getelementptr inbounds i8, ptr %108, i32 1, !dbg !9936
  store ptr %109, ptr %107, align 8, !dbg !9936
  %110 = load ptr, ptr %6, align 8, !dbg !9937
  %111 = getelementptr inbounds %struct.lwan_request_t_, ptr %110, i32 0, i32 2, !dbg !9938
  %112 = getelementptr inbounds %struct.lwan_value_t_, ptr %111, i32 0, i32 1, !dbg !9939
  %113 = load i64, ptr %112, align 8, !dbg !9940
  %114 = add i64 %113, -1, !dbg !9940
  store i64 %114, ptr %112, align 8, !dbg !9940
  br label %88, !dbg !9919, !llvm.loop !9941

115:                                              ; preds = %102
  br label %116, !dbg !9943

116:                                              ; preds = %115, %81
  store i32 200, ptr %4, align 4, !dbg !9944
  br label %117, !dbg !9944

117:                                              ; preds = %116, %79, %58
  %118 = load i32, ptr %4, align 4, !dbg !9945
  ret i32 %118, !dbg !9945
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @parse_query_string(ptr noundef %0, ptr noundef %1) #0 !dbg !9946 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !9947, metadata !DIExpression()), !dbg !9948
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !9949, metadata !DIExpression()), !dbg !9950
  %5 = load ptr, ptr %3, align 8, !dbg !9951
  %6 = load ptr, ptr %4, align 8, !dbg !9952
  %7 = getelementptr inbounds %struct.request_parser_helper, ptr %6, i32 0, i32 5, !dbg !9953
  %8 = load ptr, ptr %3, align 8, !dbg !9954
  %9 = getelementptr inbounds %struct.lwan_request_t_, ptr %8, i32 0, i32 5, !dbg !9955
  %10 = getelementptr inbounds %struct.lwan_value_t_, ptr %9, i32 0, i32 0, !dbg !9956
  %11 = load ptr, ptr %3, align 8, !dbg !9957
  %12 = getelementptr inbounds %struct.lwan_request_t_, ptr %11, i32 0, i32 5, !dbg !9958
  %13 = getelementptr inbounds %struct.lwan_value_t_, ptr %12, i32 0, i32 1, !dbg !9959
  call void @parse_urlencoded_keyvalues(ptr noundef %5, ptr noundef %7, ptr noundef %10, ptr noundef %13), !dbg !9960
  ret void, !dbg !9961
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @parse_if_modified_since(ptr noundef %0, ptr noundef %1) #0 !dbg !9962 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca %struct.tm, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !9963, metadata !DIExpression()), !dbg !9964
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !9965, metadata !DIExpression()), !dbg !9966
  %7 = load ptr, ptr %4, align 8, !dbg !9967
  %8 = getelementptr inbounds %struct.request_parser_helper, ptr %7, i32 0, i32 3, !dbg !9967
  %9 = getelementptr inbounds %struct.lwan_value_t_, ptr %8, i32 0, i32 1, !dbg !9967
  %10 = load i64, ptr %9, align 8, !dbg !9967
  %11 = icmp ne i64 %10, 0, !dbg !9967
  %12 = xor i1 %11, true, !dbg !9967
  %13 = zext i1 %12 to i32, !dbg !9967
  %14 = sext i32 %13 to i64, !dbg !9967
  %15 = icmp ne i64 %14, 0, !dbg !9967
  br i1 %15, label %16, label %17, !dbg !9969

16:                                               ; preds = %2
  br label %41, !dbg !9970

17:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata ptr %5, metadata !9971, metadata !DIExpression()), !dbg !9986
  call void @llvm.dbg.declare(metadata ptr %6, metadata !9987, metadata !DIExpression()), !dbg !9988
  %18 = load ptr, ptr %4, align 8, !dbg !9989
  %19 = getelementptr inbounds %struct.request_parser_helper, ptr %18, i32 0, i32 3, !dbg !9990
  %20 = getelementptr inbounds %struct.lwan_value_t_, ptr %19, i32 0, i32 0, !dbg !9991
  %21 = load ptr, ptr %20, align 8, !dbg !9991
  %22 = call ptr @strptime(ptr noundef %21, ptr noundef @.str.3.89, ptr noundef %5) #18, !dbg !9992
  store ptr %22, ptr %6, align 8, !dbg !9988
  %23 = load ptr, ptr %6, align 8, !dbg !9993
  %24 = icmp ne ptr %23, null, !dbg !9993
  %25 = xor i1 %24, true, !dbg !9993
  %26 = zext i1 %25 to i32, !dbg !9993
  %27 = sext i32 %26 to i64, !dbg !9993
  %28 = icmp ne i64 %27, 0, !dbg !9993
  br i1 %28, label %29, label %30, !dbg !9995

29:                                               ; preds = %17
  br label %41, !dbg !9996

30:                                               ; preds = %17
  %31 = load ptr, ptr %6, align 8, !dbg !9997
  %32 = load i8, ptr %31, align 1, !dbg !9997
  %33 = sext i8 %32 to i64, !dbg !9997
  %34 = icmp ne i64 %33, 0, !dbg !9997
  br i1 %34, label %35, label %36, !dbg !9999

35:                                               ; preds = %30
  br label %41, !dbg !10000

36:                                               ; preds = %30
  %37 = call i64 @timegm(ptr noundef %5) #18, !dbg !10001
  %38 = load ptr, ptr %3, align 8, !dbg !10002
  %39 = getelementptr inbounds %struct.lwan_request_t_, ptr %38, i32 0, i32 7, !dbg !10003
  %40 = getelementptr inbounds %struct.anon.2.12, ptr %39, i32 0, i32 0, !dbg !10004
  store i64 %37, ptr %40, align 8, !dbg !10005
  br label %41, !dbg !10006

41:                                               ; preds = %36, %35, %29, %16
  ret void, !dbg !10006
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @parse_range(ptr noundef %0, ptr noundef %1) #0 !dbg !10007 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !10008, metadata !DIExpression()), !dbg !10009
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !10010, metadata !DIExpression()), !dbg !10011
  %8 = load ptr, ptr %4, align 8, !dbg !10012
  %9 = getelementptr inbounds %struct.request_parser_helper, ptr %8, i32 0, i32 4, !dbg !10012
  %10 = getelementptr inbounds %struct.lwan_value_t_, ptr %9, i32 0, i32 1, !dbg !10012
  %11 = load i64, ptr %10, align 8, !dbg !10012
  %12 = icmp ule i64 %11, 6, !dbg !10012
  %13 = zext i1 %12 to i32, !dbg !10012
  %14 = sext i32 %13 to i64, !dbg !10012
  %15 = icmp ne i64 %14, 0, !dbg !10012
  br i1 %15, label %16, label %17, !dbg !10014

16:                                               ; preds = %2
  br label %83, !dbg !10015

17:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata ptr %5, metadata !10016, metadata !DIExpression()), !dbg !10017
  %18 = load ptr, ptr %4, align 8, !dbg !10018
  %19 = getelementptr inbounds %struct.request_parser_helper, ptr %18, i32 0, i32 4, !dbg !10019
  %20 = getelementptr inbounds %struct.lwan_value_t_, ptr %19, i32 0, i32 0, !dbg !10020
  %21 = load ptr, ptr %20, align 8, !dbg !10020
  store ptr %21, ptr %5, align 8, !dbg !10017
  %22 = load ptr, ptr %5, align 8, !dbg !10021
  %23 = call i32 @strncmp(ptr noundef %22, ptr noundef @.str.4.85, i64 noundef 6) #22, !dbg !10021
  %24 = sext i32 %23 to i64, !dbg !10021
  %25 = icmp ne i64 %24, 0, !dbg !10021
  br i1 %25, label %26, label %27, !dbg !10023

26:                                               ; preds = %17
  br label %83, !dbg !10024

27:                                               ; preds = %17
  %28 = load ptr, ptr %5, align 8, !dbg !10025
  %29 = getelementptr inbounds i8, ptr %28, i64 6, !dbg !10025
  store ptr %29, ptr %5, align 8, !dbg !10025
  call void @llvm.dbg.declare(metadata ptr %6, metadata !10026, metadata !DIExpression()), !dbg !10027
  call void @llvm.dbg.declare(metadata ptr %7, metadata !10028, metadata !DIExpression()), !dbg !10029
  %30 = load ptr, ptr %5, align 8, !dbg !10030
  %31 = call i32 (ptr, ptr, ...) @__isoc99_sscanf(ptr noundef %30, ptr noundef @.str.5.86, ptr noundef %6, ptr noundef %7) #18, !dbg !10032
  %32 = icmp eq i32 %31, 2, !dbg !10033
  br i1 %32, label %33, label %44, !dbg !10034

33:                                               ; preds = %27
  %34 = load i64, ptr %6, align 8, !dbg !10035
  %35 = load ptr, ptr %3, align 8, !dbg !10037
  %36 = getelementptr inbounds %struct.lwan_request_t_, ptr %35, i32 0, i32 7, !dbg !10038
  %37 = getelementptr inbounds %struct.anon.2.12, ptr %36, i32 0, i32 1, !dbg !10039
  %38 = getelementptr inbounds %struct.timespec, ptr %37, i32 0, i32 0, !dbg !10040
  store i64 %34, ptr %38, align 8, !dbg !10041
  %39 = load i64, ptr %7, align 8, !dbg !10042
  %40 = load ptr, ptr %3, align 8, !dbg !10043
  %41 = getelementptr inbounds %struct.lwan_request_t_, ptr %40, i32 0, i32 7, !dbg !10044
  %42 = getelementptr inbounds %struct.anon.2.12, ptr %41, i32 0, i32 1, !dbg !10045
  %43 = getelementptr inbounds %struct.timespec, ptr %42, i32 0, i32 1, !dbg !10046
  store i64 %39, ptr %43, align 8, !dbg !10047
  br label %83, !dbg !10048

44:                                               ; preds = %27
  %45 = load ptr, ptr %5, align 8, !dbg !10049
  %46 = call i32 (ptr, ptr, ...) @__isoc99_sscanf(ptr noundef %45, ptr noundef @.str.6.87, ptr noundef %7) #18, !dbg !10051
  %47 = icmp eq i32 %46, 1, !dbg !10052
  br i1 %47, label %48, label %58, !dbg !10053

48:                                               ; preds = %44
  %49 = load ptr, ptr %3, align 8, !dbg !10054
  %50 = getelementptr inbounds %struct.lwan_request_t_, ptr %49, i32 0, i32 7, !dbg !10056
  %51 = getelementptr inbounds %struct.anon.2.12, ptr %50, i32 0, i32 1, !dbg !10057
  %52 = getelementptr inbounds %struct.timespec, ptr %51, i32 0, i32 0, !dbg !10058
  store i64 0, ptr %52, align 8, !dbg !10059
  %53 = load i64, ptr %7, align 8, !dbg !10060
  %54 = load ptr, ptr %3, align 8, !dbg !10061
  %55 = getelementptr inbounds %struct.lwan_request_t_, ptr %54, i32 0, i32 7, !dbg !10062
  %56 = getelementptr inbounds %struct.anon.2.12, ptr %55, i32 0, i32 1, !dbg !10063
  %57 = getelementptr inbounds %struct.timespec, ptr %56, i32 0, i32 1, !dbg !10064
  store i64 %53, ptr %57, align 8, !dbg !10065
  br label %82, !dbg !10066

58:                                               ; preds = %44
  %59 = load ptr, ptr %5, align 8, !dbg !10067
  %60 = call i32 (ptr, ptr, ...) @__isoc99_sscanf(ptr noundef %59, ptr noundef @.str.7.88, ptr noundef %6) #18, !dbg !10069
  %61 = icmp eq i32 %60, 1, !dbg !10070
  br i1 %61, label %62, label %72, !dbg !10071

62:                                               ; preds = %58
  %63 = load i64, ptr %6, align 8, !dbg !10072
  %64 = load ptr, ptr %3, align 8, !dbg !10074
  %65 = getelementptr inbounds %struct.lwan_request_t_, ptr %64, i32 0, i32 7, !dbg !10075
  %66 = getelementptr inbounds %struct.anon.2.12, ptr %65, i32 0, i32 1, !dbg !10076
  %67 = getelementptr inbounds %struct.timespec, ptr %66, i32 0, i32 0, !dbg !10077
  store i64 %63, ptr %67, align 8, !dbg !10078
  %68 = load ptr, ptr %3, align 8, !dbg !10079
  %69 = getelementptr inbounds %struct.lwan_request_t_, ptr %68, i32 0, i32 7, !dbg !10080
  %70 = getelementptr inbounds %struct.anon.2.12, ptr %69, i32 0, i32 1, !dbg !10081
  %71 = getelementptr inbounds %struct.timespec, ptr %70, i32 0, i32 1, !dbg !10082
  store i64 -1, ptr %71, align 8, !dbg !10083
  br label %81, !dbg !10084

72:                                               ; preds = %58
  %73 = load ptr, ptr %3, align 8, !dbg !10085
  %74 = getelementptr inbounds %struct.lwan_request_t_, ptr %73, i32 0, i32 7, !dbg !10087
  %75 = getelementptr inbounds %struct.anon.2.12, ptr %74, i32 0, i32 1, !dbg !10088
  %76 = getelementptr inbounds %struct.timespec, ptr %75, i32 0, i32 0, !dbg !10089
  store i64 -1, ptr %76, align 8, !dbg !10090
  %77 = load ptr, ptr %3, align 8, !dbg !10091
  %78 = getelementptr inbounds %struct.lwan_request_t_, ptr %77, i32 0, i32 7, !dbg !10092
  %79 = getelementptr inbounds %struct.anon.2.12, ptr %78, i32 0, i32 1, !dbg !10093
  %80 = getelementptr inbounds %struct.timespec, ptr %79, i32 0, i32 1, !dbg !10094
  store i64 -1, ptr %80, align 8, !dbg !10095
  br label %81

81:                                               ; preds = %72, %62
  br label %82

82:                                               ; preds = %81, %48
  br label %83

83:                                               ; preds = %82, %33, %26, %16
  ret void, !dbg !10096
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @parse_accept_encoding(ptr noundef %0, ptr noundef %1) #0 !dbg !1493 {
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !10097, metadata !DIExpression()), !dbg !10098
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !10099, metadata !DIExpression()), !dbg !10100
  %8 = load ptr, ptr %6, align 8, !dbg !10101
  %9 = getelementptr inbounds %struct.request_parser_helper, ptr %8, i32 0, i32 2, !dbg !10103
  %10 = getelementptr inbounds %struct.lwan_value_t_, ptr %9, i32 0, i32 1, !dbg !10104
  %11 = load i64, ptr %10, align 8, !dbg !10104
  %12 = icmp ne i64 %11, 0, !dbg !10101
  br i1 %12, label %14, label %13, !dbg !10105

13:                                               ; preds = %2
  br label %52, !dbg !10106

14:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata ptr %7, metadata !10107, metadata !DIExpression()), !dbg !10109
  %15 = load ptr, ptr %6, align 8, !dbg !10110
  %16 = getelementptr inbounds %struct.request_parser_helper, ptr %15, i32 0, i32 2, !dbg !10111
  %17 = getelementptr inbounds %struct.lwan_value_t_, ptr %16, i32 0, i32 0, !dbg !10112
  %18 = load ptr, ptr %17, align 8, !dbg !10112
  store ptr %18, ptr %7, align 8, !dbg !10109
  br label %19, !dbg !10113

19:                                               ; preds = %49, %14
  %20 = load ptr, ptr %7, align 8, !dbg !10114
  %21 = icmp ne ptr %20, null, !dbg !10114
  br i1 %21, label %22, label %27, !dbg !10116

22:                                               ; preds = %19
  %23 = load ptr, ptr %7, align 8, !dbg !10117
  %24 = load i8, ptr %23, align 1, !dbg !10118
  %25 = sext i8 %24 to i32, !dbg !10118
  %26 = icmp ne i32 %25, 0, !dbg !10116
  br label %27

27:                                               ; preds = %22, %19
  %28 = phi i1 [ false, %19 ], [ %26, %22 ], !dbg !10119
  br i1 %28, label %29, label %52, !dbg !10120

29:                                               ; preds = %27
  %30 = load ptr, ptr %7, align 8, !dbg !10121
  store ptr %30, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !9480, metadata !DIExpression()), !dbg !10123
  call void @llvm.dbg.declare(metadata ptr %4, metadata !9489, metadata !DIExpression()), !dbg !10125
  %31 = load ptr, ptr %3, align 8, !dbg !10126
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %4, ptr align 1 %31, i64 4, i1 false), !dbg !10127
  %32 = load i32, ptr %4, align 4, !dbg !10128
  switch i32 %32, label %43 [
    i32 1818649956, label %33
    i32 1717920800, label %33
    i32 1885960807, label %38
    i32 1769629472, label %38
  ], !dbg !10121

33:                                               ; preds = %29, %29
  %34 = load ptr, ptr %5, align 8, !dbg !10129
  %35 = getelementptr inbounds %struct.lwan_request_t_, ptr %34, i32 0, i32 0, !dbg !10131
  %36 = load i32, ptr %35, align 8, !dbg !10132
  %37 = or i32 %36, 8, !dbg !10132
  store i32 %37, ptr %35, align 8, !dbg !10132
  br label %43, !dbg !10133

38:                                               ; preds = %29, %29
  %39 = load ptr, ptr %5, align 8, !dbg !10134
  %40 = getelementptr inbounds %struct.lwan_request_t_, ptr %39, i32 0, i32 0, !dbg !10135
  %41 = load i32, ptr %40, align 8, !dbg !10136
  %42 = or i32 %41, 16, !dbg !10136
  store i32 %42, ptr %40, align 8, !dbg !10136
  br label %43, !dbg !10137

43:                                               ; preds = %38, %33, %29
  %44 = load ptr, ptr %7, align 8, !dbg !10138
  %45 = call ptr @strchr(ptr noundef %44, i32 noundef 44) #22, !dbg !10140
  store ptr %45, ptr %7, align 8, !dbg !10141
  %46 = icmp ne ptr %45, null, !dbg !10141
  br i1 %46, label %48, label %47, !dbg !10142

47:                                               ; preds = %43
  br label %52, !dbg !10143

48:                                               ; preds = %43
  br label %49, !dbg !10144

49:                                               ; preds = %48
  %50 = load ptr, ptr %7, align 8, !dbg !10145
  %51 = getelementptr inbounds i8, ptr %50, i32 1, !dbg !10145
  store ptr %51, ptr %7, align 8, !dbg !10145
  br label %19, !dbg !10146, !llvm.loop !10147

52:                                               ; preds = %47, %27, %13
  ret void, !dbg !10149
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @parse_post_data(ptr noundef %0, ptr noundef %1) #0 !dbg !1571 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !10150, metadata !DIExpression()), !dbg !10151
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !10152, metadata !DIExpression()), !dbg !10153
  %5 = load ptr, ptr %4, align 8, !dbg !10154
  %6 = getelementptr inbounds %struct.request_parser_helper, ptr %5, i32 0, i32 9, !dbg !10156
  %7 = getelementptr inbounds %struct.lwan_value_t_, ptr %6, i32 0, i32 1, !dbg !10157
  %8 = load i64, ptr %7, align 8, !dbg !10157
  %9 = icmp ne i64 %8, 33, !dbg !10158
  br i1 %9, label %10, label %11, !dbg !10159

10:                                               ; preds = %2
  br label %30, !dbg !10160

11:                                               ; preds = %2
  %12 = load ptr, ptr %4, align 8, !dbg !10161
  %13 = getelementptr inbounds %struct.request_parser_helper, ptr %12, i32 0, i32 9, !dbg !10161
  %14 = getelementptr inbounds %struct.lwan_value_t_, ptr %13, i32 0, i32 0, !dbg !10161
  %15 = load ptr, ptr %14, align 8, !dbg !10161
  %16 = call i32 @strcmp(ptr noundef %15, ptr noundef @parse_post_data.content_type) #22, !dbg !10161
  %17 = sext i32 %16 to i64, !dbg !10161
  %18 = icmp ne i64 %17, 0, !dbg !10161
  br i1 %18, label %19, label %20, !dbg !10163

19:                                               ; preds = %11
  br label %30, !dbg !10164

20:                                               ; preds = %11
  %21 = load ptr, ptr %3, align 8, !dbg !10165
  %22 = load ptr, ptr %4, align 8, !dbg !10166
  %23 = getelementptr inbounds %struct.request_parser_helper, ptr %22, i32 0, i32 8, !dbg !10167
  %24 = load ptr, ptr %3, align 8, !dbg !10168
  %25 = getelementptr inbounds %struct.lwan_request_t_, ptr %24, i32 0, i32 6, !dbg !10169
  %26 = getelementptr inbounds %struct.lwan_value_t_, ptr %25, i32 0, i32 0, !dbg !10170
  %27 = load ptr, ptr %3, align 8, !dbg !10171
  %28 = getelementptr inbounds %struct.lwan_request_t_, ptr %27, i32 0, i32 6, !dbg !10172
  %29 = getelementptr inbounds %struct.lwan_value_t_, ptr %28, i32 0, i32 1, !dbg !10173
  call void @parse_urlencoded_keyvalues(ptr noundef %21, ptr noundef %23, ptr noundef %26, ptr noundef %29), !dbg !10174
  br label %30, !dbg !10175

30:                                               ; preds = %20, %19, %10
  ret void, !dbg !10175
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @parse_urlencoded_keyvalues(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 !dbg !10176 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i64, align 8
  %12 = alloca [256 x %struct.list_node], align 16
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !10180, metadata !DIExpression()), !dbg !10181
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !10182, metadata !DIExpression()), !dbg !10183
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !10184, metadata !DIExpression()), !dbg !10185
  store ptr %3, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !10186, metadata !DIExpression()), !dbg !10187
  %15 = load ptr, ptr %6, align 8, !dbg !10188
  %16 = getelementptr inbounds %struct.lwan_value_t_, ptr %15, i32 0, i32 0, !dbg !10190
  %17 = load ptr, ptr %16, align 8, !dbg !10190
  %18 = icmp ne ptr %17, null, !dbg !10188
  br i1 %18, label %20, label %19, !dbg !10191

19:                                               ; preds = %4
  br label %166, !dbg !10192

20:                                               ; preds = %4
  call void @llvm.dbg.declare(metadata ptr %9, metadata !10193, metadata !DIExpression()), !dbg !10194
  %21 = load ptr, ptr %6, align 8, !dbg !10195
  %22 = getelementptr inbounds %struct.lwan_value_t_, ptr %21, i32 0, i32 0, !dbg !10196
  %23 = load ptr, ptr %22, align 8, !dbg !10196
  store ptr %23, ptr %9, align 8, !dbg !10194
  call void @llvm.dbg.declare(metadata ptr %10, metadata !10197, metadata !DIExpression()), !dbg !10198
  store ptr null, ptr %10, align 8, !dbg !10198
  call void @llvm.dbg.declare(metadata ptr %11, metadata !10199, metadata !DIExpression()), !dbg !10200
  store i64 0, ptr %11, align 8, !dbg !10200
  call void @llvm.dbg.declare(metadata ptr %12, metadata !10201, metadata !DIExpression()), !dbg !10203
  call void @llvm.dbg.declare(metadata ptr %13, metadata !10204, metadata !DIExpression()), !dbg !10206
  %24 = load ptr, ptr %9, align 8, !dbg !10207
  store ptr %24, ptr %13, align 8, !dbg !10206
  br label %25, !dbg !10208

25:                                               ; preds = %85, %20
  %26 = load ptr, ptr %13, align 8, !dbg !10209
  %27 = load i8, ptr %26, align 1, !dbg !10211
  %28 = icmp ne i8 %27, 0, !dbg !10212
  br i1 %28, label %29, label %88, !dbg !10212

29:                                               ; preds = %25
  %30 = load ptr, ptr %13, align 8, !dbg !10213
  %31 = load i8, ptr %30, align 1, !dbg !10215
  %32 = sext i8 %31 to i32, !dbg !10215
  switch i32 %32, label %84 [
    i32 61, label %33
    i32 38, label %37
    i32 59, label %37
  ], !dbg !10216

33:                                               ; preds = %29
  %34 = load ptr, ptr %13, align 8, !dbg !10217
  store i8 0, ptr %34, align 1, !dbg !10219
  %35 = load ptr, ptr %13, align 8, !dbg !10220
  %36 = getelementptr inbounds i8, ptr %35, i64 1, !dbg !10221
  store ptr %36, ptr %10, align 8, !dbg !10222
  br label %84, !dbg !10223

37:                                               ; preds = %29, %29
  %38 = load ptr, ptr %13, align 8, !dbg !10224
  store i8 0, ptr %38, align 1, !dbg !10225
  br label %39, !dbg !10226

39:                                               ; preds = %37
  %40 = load ptr, ptr %9, align 8, !dbg !10227
  %41 = call i64 @url_decode(ptr noundef %40), !dbg !10227
  %42 = icmp ne i64 %41, 0, !dbg !10227
  %43 = xor i1 %42, true, !dbg !10227
  %44 = xor i1 %43, true, !dbg !10227
  %45 = zext i1 %44 to i32, !dbg !10227
  %46 = sext i32 %45 to i64, !dbg !10227
  %47 = icmp ne i64 %46, 0, !dbg !10227
  br i1 %47, label %48, label %80, !dbg !10230

48:                                               ; preds = %39
  %49 = load ptr, ptr %9, align 8, !dbg !10231
  %50 = load i64, ptr %11, align 8, !dbg !10231
  %51 = getelementptr inbounds [256 x %struct.list_node], ptr %12, i64 0, i64 %50, !dbg !10231
  %52 = getelementptr inbounds %struct.list_node, ptr %51, i32 0, i32 0, !dbg !10231
  store ptr %49, ptr %52, align 16, !dbg !10231
  %53 = load ptr, ptr %10, align 8, !dbg !10233
  %54 = call i64 @url_decode(ptr noundef %53), !dbg !10233
  %55 = icmp ne i64 %54, 0, !dbg !10233
  %56 = xor i1 %55, true, !dbg !10233
  %57 = xor i1 %56, true, !dbg !10233
  %58 = zext i1 %57 to i32, !dbg !10233
  %59 = sext i32 %58 to i64, !dbg !10233
  %60 = icmp ne i64 %59, 0, !dbg !10233
  br i1 %60, label %61, label %66, !dbg !10231

61:                                               ; preds = %48
  %62 = load ptr, ptr %10, align 8, !dbg !10233
  %63 = load i64, ptr %11, align 8, !dbg !10233
  %64 = getelementptr inbounds [256 x %struct.list_node], ptr %12, i64 0, i64 %63, !dbg !10233
  %65 = getelementptr inbounds %struct.list_node, ptr %64, i32 0, i32 1, !dbg !10233
  store ptr %62, ptr %65, align 8, !dbg !10233
  br label %70, !dbg !10233

66:                                               ; preds = %48
  %67 = load i64, ptr %11, align 8, !dbg !10233
  %68 = getelementptr inbounds [256 x %struct.list_node], ptr %12, i64 0, i64 %67, !dbg !10233
  %69 = getelementptr inbounds %struct.list_node, ptr %68, i32 0, i32 1, !dbg !10233
  store ptr @.str.2.84, ptr %69, align 8, !dbg !10233
  br label %70

70:                                               ; preds = %66, %61
  %71 = load i64, ptr %11, align 8, !dbg !10231
  %72 = add i64 %71, 1, !dbg !10231
  store i64 %72, ptr %11, align 8, !dbg !10231
  %73 = load i64, ptr %11, align 8, !dbg !10235
  %74 = icmp uge i64 %73, 256, !dbg !10235
  %75 = zext i1 %74 to i32, !dbg !10235
  %76 = sext i32 %75 to i64, !dbg !10235
  %77 = icmp ne i64 %76, 0, !dbg !10235
  br i1 %77, label %78, label %79, !dbg !10231

78:                                               ; preds = %70
  br label %132, !dbg !10235

79:                                               ; preds = %70
  br label %80, !dbg !10231

80:                                               ; preds = %79, %39
  br label %81, !dbg !10230

81:                                               ; preds = %80
  %82 = load ptr, ptr %13, align 8, !dbg !10237
  %83 = getelementptr inbounds i8, ptr %82, i64 1, !dbg !10238
  store ptr %83, ptr %9, align 8, !dbg !10239
  store ptr null, ptr %10, align 8, !dbg !10240
  br label %84, !dbg !10241

84:                                               ; preds = %81, %33, %29
  br label %85, !dbg !10242

85:                                               ; preds = %84
  %86 = load ptr, ptr %13, align 8, !dbg !10243
  %87 = getelementptr inbounds i8, ptr %86, i32 1, !dbg !10243
  store ptr %87, ptr %13, align 8, !dbg !10243
  br label %25, !dbg !10244, !llvm.loop !10245

88:                                               ; preds = %25
  br label %89, !dbg !10247

89:                                               ; preds = %88
  %90 = load ptr, ptr %9, align 8, !dbg !10248
  %91 = call i64 @url_decode(ptr noundef %90), !dbg !10248
  %92 = icmp ne i64 %91, 0, !dbg !10248
  %93 = xor i1 %92, true, !dbg !10248
  %94 = xor i1 %93, true, !dbg !10248
  %95 = zext i1 %94 to i32, !dbg !10248
  %96 = sext i32 %95 to i64, !dbg !10248
  %97 = icmp ne i64 %96, 0, !dbg !10248
  br i1 %97, label %98, label %130, !dbg !10251

98:                                               ; preds = %89
  %99 = load ptr, ptr %9, align 8, !dbg !10252
  %100 = load i64, ptr %11, align 8, !dbg !10252
  %101 = getelementptr inbounds [256 x %struct.list_node], ptr %12, i64 0, i64 %100, !dbg !10252
  %102 = getelementptr inbounds %struct.list_node, ptr %101, i32 0, i32 0, !dbg !10252
  store ptr %99, ptr %102, align 16, !dbg !10252
  %103 = load ptr, ptr %10, align 8, !dbg !10254
  %104 = call i64 @url_decode(ptr noundef %103), !dbg !10254
  %105 = icmp ne i64 %104, 0, !dbg !10254
  %106 = xor i1 %105, true, !dbg !10254
  %107 = xor i1 %106, true, !dbg !10254
  %108 = zext i1 %107 to i32, !dbg !10254
  %109 = sext i32 %108 to i64, !dbg !10254
  %110 = icmp ne i64 %109, 0, !dbg !10254
  br i1 %110, label %111, label %116, !dbg !10252

111:                                              ; preds = %98
  %112 = load ptr, ptr %10, align 8, !dbg !10254
  %113 = load i64, ptr %11, align 8, !dbg !10254
  %114 = getelementptr inbounds [256 x %struct.list_node], ptr %12, i64 0, i64 %113, !dbg !10254
  %115 = getelementptr inbounds %struct.list_node, ptr %114, i32 0, i32 1, !dbg !10254
  store ptr %112, ptr %115, align 8, !dbg !10254
  br label %120, !dbg !10254

116:                                              ; preds = %98
  %117 = load i64, ptr %11, align 8, !dbg !10254
  %118 = getelementptr inbounds [256 x %struct.list_node], ptr %12, i64 0, i64 %117, !dbg !10254
  %119 = getelementptr inbounds %struct.list_node, ptr %118, i32 0, i32 1, !dbg !10254
  store ptr @.str.2.84, ptr %119, align 8, !dbg !10254
  br label %120

120:                                              ; preds = %116, %111
  %121 = load i64, ptr %11, align 8, !dbg !10252
  %122 = add i64 %121, 1, !dbg !10252
  store i64 %122, ptr %11, align 8, !dbg !10252
  %123 = load i64, ptr %11, align 8, !dbg !10256
  %124 = icmp uge i64 %123, 256, !dbg !10256
  %125 = zext i1 %124 to i32, !dbg !10256
  %126 = sext i32 %125 to i64, !dbg !10256
  %127 = icmp ne i64 %126, 0, !dbg !10256
  br i1 %127, label %128, label %129, !dbg !10252

128:                                              ; preds = %120
  br label %132, !dbg !10256

129:                                              ; preds = %120
  br label %130, !dbg !10252

130:                                              ; preds = %129, %89
  br label %131, !dbg !10251

131:                                              ; preds = %130
  br label %132, !dbg !10251

132:                                              ; preds = %131, %128, %78
  call void @llvm.dbg.label(metadata !10258), !dbg !10259
  %133 = load i64, ptr %11, align 8, !dbg !10260
  %134 = getelementptr inbounds [256 x %struct.list_node], ptr %12, i64 0, i64 %133, !dbg !10261
  %135 = getelementptr inbounds %struct.list_node, ptr %134, i32 0, i32 1, !dbg !10262
  store ptr null, ptr %135, align 8, !dbg !10263
  %136 = load i64, ptr %11, align 8, !dbg !10264
  %137 = getelementptr inbounds [256 x %struct.list_node], ptr %12, i64 0, i64 %136, !dbg !10265
  %138 = getelementptr inbounds %struct.list_node, ptr %137, i32 0, i32 0, !dbg !10266
  store ptr null, ptr %138, align 16, !dbg !10267
  call void @llvm.dbg.declare(metadata ptr %14, metadata !10268, metadata !DIExpression()), !dbg !10269
  %139 = load ptr, ptr %5, align 8, !dbg !10270
  %140 = getelementptr inbounds %struct.lwan_request_t_, ptr %139, i32 0, i32 4, !dbg !10271
  %141 = load ptr, ptr %140, align 8, !dbg !10271
  %142 = getelementptr inbounds %struct.lwan_connection_t_, ptr %141, i32 0, i32 2, !dbg !10272
  %143 = load ptr, ptr %142, align 8, !dbg !10272
  %144 = load i64, ptr %11, align 8, !dbg !10273
  %145 = add i64 1, %144, !dbg !10274
  %146 = mul i64 %145, 16, !dbg !10275
  %147 = call ptr @coro_malloc(ptr noundef %143, i64 noundef %146), !dbg !10276
  store ptr %147, ptr %14, align 8, !dbg !10269
  %148 = load ptr, ptr %14, align 8, !dbg !10277
  %149 = icmp ne ptr %148, null, !dbg !10277
  %150 = xor i1 %149, true, !dbg !10277
  %151 = xor i1 %150, true, !dbg !10277
  %152 = zext i1 %151 to i32, !dbg !10277
  %153 = sext i32 %152 to i64, !dbg !10277
  %154 = icmp ne i64 %153, 0, !dbg !10277
  br i1 %154, label %155, label %166, !dbg !10279

155:                                              ; preds = %132
  %156 = getelementptr inbounds [256 x %struct.list_node], ptr %12, i64 0, i64 0, !dbg !10280
  %157 = load i64, ptr %11, align 8, !dbg !10282
  call void @qsort(ptr noundef %156, i64 noundef %157, i64 noundef 16, ptr noundef @key_value_compare_qsort_key), !dbg !10283
  %158 = load ptr, ptr %14, align 8, !dbg !10284
  %159 = getelementptr inbounds [256 x %struct.list_node], ptr %12, i64 0, i64 0, !dbg !10285
  %160 = load i64, ptr %11, align 8, !dbg !10286
  %161 = add i64 1, %160, !dbg !10287
  %162 = mul i64 %161, 16, !dbg !10288
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %158, ptr align 16 %159, i64 %162, i1 false), !dbg !10285
  %163 = load ptr, ptr %7, align 8, !dbg !10289
  store ptr %158, ptr %163, align 8, !dbg !10290
  %164 = load i64, ptr %11, align 8, !dbg !10291
  %165 = load ptr, ptr %8, align 8, !dbg !10292
  store i64 %164, ptr %165, align 8, !dbg !10293
  br label %166, !dbg !10294

166:                                              ; preds = %155, %132, %19
  ret void, !dbg !10295
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @url_decode(ptr noundef %0) #0 !dbg !10296 {
  %2 = alloca i8, align 1
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i64, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca i8, align 1
  store ptr %0, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !10299, metadata !DIExpression()), !dbg !10300
  %11 = load ptr, ptr %7, align 8, !dbg !10301
  %12 = icmp ne ptr %11, null, !dbg !10301
  %13 = xor i1 %12, true, !dbg !10301
  %14 = zext i1 %13 to i32, !dbg !10301
  %15 = sext i32 %14 to i64, !dbg !10301
  %16 = icmp ne i64 %15, 0, !dbg !10301
  br i1 %16, label %17, label %18, !dbg !10303

17:                                               ; preds = %1
  store i64 0, ptr %6, align 8, !dbg !10304
  br label %178, !dbg !10304

18:                                               ; preds = %1
  call void @llvm.dbg.declare(metadata ptr %8, metadata !10305, metadata !DIExpression()), !dbg !10306
  call void @llvm.dbg.declare(metadata ptr %9, metadata !10307, metadata !DIExpression()), !dbg !10308
  %19 = load ptr, ptr %7, align 8, !dbg !10309
  store ptr %19, ptr %8, align 8, !dbg !10311
  store ptr %19, ptr %9, align 8, !dbg !10312
  br label %20, !dbg !10313

20:                                               ; preds = %168, %18
  %21 = load ptr, ptr %8, align 8, !dbg !10314
  %22 = load i8, ptr %21, align 1, !dbg !10316
  %23 = icmp ne i8 %22, 0, !dbg !10317
  br i1 %23, label %24, label %171, !dbg !10317

24:                                               ; preds = %20
  %25 = load ptr, ptr %8, align 8, !dbg !10318
  %26 = load i8, ptr %25, align 1, !dbg !10321
  %27 = sext i8 %26 to i32, !dbg !10321
  %28 = icmp eq i32 %27, 37, !dbg !10322
  br i1 %28, label %29, label %153, !dbg !10323

29:                                               ; preds = %24
  %30 = load ptr, ptr %8, align 8, !dbg !10324
  %31 = getelementptr inbounds i8, ptr %30, i64 1, !dbg !10324
  %32 = load i8, ptr %31, align 1, !dbg !10324
  store i8 %32, ptr %4, align 1
  call void @llvm.dbg.declare(metadata ptr %4, metadata !10325, metadata !DIExpression()), !dbg !10329
  %33 = load i8, ptr %4, align 1, !dbg !10331
  %34 = sext i8 %33 to i32, !dbg !10331
  %35 = icmp sge i32 %34, 48, !dbg !10332
  br i1 %35, label %36, label %40, !dbg !10333

36:                                               ; preds = %29
  %37 = load i8, ptr %4, align 1, !dbg !10334
  %38 = sext i8 %37 to i32, !dbg !10334
  %39 = icmp sle i32 %38, 57, !dbg !10335
  br i1 %39, label %58, label %40, !dbg !10336

40:                                               ; preds = %36, %29
  %41 = load i8, ptr %4, align 1, !dbg !10337
  %42 = sext i8 %41 to i32, !dbg !10337
  %43 = icmp sge i32 %42, 97, !dbg !10338
  br i1 %43, label %44, label %48, !dbg !10339

44:                                               ; preds = %40
  %45 = load i8, ptr %4, align 1, !dbg !10340
  %46 = sext i8 %45 to i32, !dbg !10340
  %47 = icmp sle i32 %46, 102, !dbg !10341
  br i1 %47, label %58, label %48, !dbg !10342

48:                                               ; preds = %44, %40
  %49 = load i8, ptr %4, align 1, !dbg !10343
  %50 = sext i8 %49 to i32, !dbg !10343
  %51 = icmp sge i32 %50, 65, !dbg !10344
  br i1 %51, label %52, label %56, !dbg !10345

52:                                               ; preds = %48
  %53 = load i8, ptr %4, align 1, !dbg !10346
  %54 = sext i8 %53 to i32, !dbg !10346
  %55 = icmp sle i32 %54, 70, !dbg !10347
  br label %56

56:                                               ; preds = %52, %48
  %57 = phi i1 [ false, %48 ], [ %55, %52 ], !dbg !10348
  br label %58, !dbg !10342

58:                                               ; preds = %56, %44, %36
  %59 = phi i1 [ true, %44 ], [ true, %36 ], [ %57, %56 ]
  br i1 %59, label %60, label %91, !dbg !10324

60:                                               ; preds = %58
  %61 = load ptr, ptr %8, align 8, !dbg !10324
  %62 = getelementptr inbounds i8, ptr %61, i64 2, !dbg !10324
  %63 = load i8, ptr %62, align 1, !dbg !10324
  store i8 %63, ptr %5, align 1
  call void @llvm.dbg.declare(metadata ptr %5, metadata !10325, metadata !DIExpression()), !dbg !10349
  %64 = load i8, ptr %5, align 1, !dbg !10351
  %65 = sext i8 %64 to i32, !dbg !10351
  %66 = icmp sge i32 %65, 48, !dbg !10352
  br i1 %66, label %67, label %71, !dbg !10353

67:                                               ; preds = %60
  %68 = load i8, ptr %5, align 1, !dbg !10354
  %69 = sext i8 %68 to i32, !dbg !10354
  %70 = icmp sle i32 %69, 57, !dbg !10355
  br i1 %70, label %89, label %71, !dbg !10356

71:                                               ; preds = %67, %60
  %72 = load i8, ptr %5, align 1, !dbg !10357
  %73 = sext i8 %72 to i32, !dbg !10357
  %74 = icmp sge i32 %73, 97, !dbg !10358
  br i1 %74, label %75, label %79, !dbg !10359

75:                                               ; preds = %71
  %76 = load i8, ptr %5, align 1, !dbg !10360
  %77 = sext i8 %76 to i32, !dbg !10360
  %78 = icmp sle i32 %77, 102, !dbg !10361
  br i1 %78, label %89, label %79, !dbg !10362

79:                                               ; preds = %75, %71
  %80 = load i8, ptr %5, align 1, !dbg !10363
  %81 = sext i8 %80 to i32, !dbg !10363
  %82 = icmp sge i32 %81, 65, !dbg !10364
  br i1 %82, label %83, label %87, !dbg !10365

83:                                               ; preds = %79
  %84 = load i8, ptr %5, align 1, !dbg !10366
  %85 = sext i8 %84 to i32, !dbg !10366
  %86 = icmp sle i32 %85, 70, !dbg !10367
  br label %87

87:                                               ; preds = %83, %79
  %88 = phi i1 [ false, %79 ], [ %86, %83 ], !dbg !10368
  br label %89, !dbg !10362

89:                                               ; preds = %87, %75, %67
  %90 = phi i1 [ true, %75 ], [ true, %67 ], [ %88, %87 ]
  br label %91

91:                                               ; preds = %89, %58
  %92 = phi i1 [ false, %58 ], [ %90, %89 ], !dbg !10369
  %93 = xor i1 %92, true, !dbg !10324
  %94 = xor i1 %93, true, !dbg !10324
  %95 = zext i1 %94 to i32, !dbg !10324
  %96 = sext i32 %95 to i64, !dbg !10324
  %97 = icmp ne i64 %96, 0, !dbg !10324
  br i1 %97, label %98, label %153, !dbg !10370

98:                                               ; preds = %91
  call void @llvm.dbg.declare(metadata ptr %10, metadata !10371, metadata !DIExpression()), !dbg !10373
  %99 = load ptr, ptr %8, align 8, !dbg !10374
  %100 = getelementptr inbounds i8, ptr %99, i64 1, !dbg !10374
  %101 = load i8, ptr %100, align 1, !dbg !10374
  store i8 %101, ptr %2, align 1
  call void @llvm.dbg.declare(metadata ptr %2, metadata !10375, metadata !DIExpression()), !dbg !10379
  %102 = load i8, ptr %2, align 1, !dbg !10381
  %103 = sext i8 %102 to i32, !dbg !10381
  %104 = icmp sle i32 %103, 57, !dbg !10382
  br i1 %104, label %105, label %109, !dbg !10383

105:                                              ; preds = %98
  %106 = load i8, ptr %2, align 1, !dbg !10384
  %107 = sext i8 %106 to i32, !dbg !10384
  %108 = sub nsw i32 %107, 48, !dbg !10385
  br label %114, !dbg !10383

109:                                              ; preds = %98
  %110 = load i8, ptr %2, align 1, !dbg !10386
  %111 = sext i8 %110 to i32, !dbg !10386
  %112 = and i32 %111, 7, !dbg !10387
  %113 = add nsw i32 %112, 9, !dbg !10388
  br label %114, !dbg !10383

114:                                              ; preds = %109, %105
  %115 = phi i32 [ %108, %105 ], [ %113, %109 ], !dbg !10383
  %116 = trunc i32 %115 to i8, !dbg !10389
  %117 = sext i8 %116 to i32, !dbg !10390
  %118 = shl i32 %117, 4, !dbg !10391
  %119 = load ptr, ptr %8, align 8, !dbg !10392
  %120 = getelementptr inbounds i8, ptr %119, i64 2, !dbg !10392
  %121 = load i8, ptr %120, align 1, !dbg !10392
  store i8 %121, ptr %3, align 1
  call void @llvm.dbg.declare(metadata ptr %3, metadata !10375, metadata !DIExpression()), !dbg !10393
  %122 = load i8, ptr %3, align 1, !dbg !10395
  %123 = sext i8 %122 to i32, !dbg !10395
  %124 = icmp sle i32 %123, 57, !dbg !10396
  br i1 %124, label %125, label %129, !dbg !10397

125:                                              ; preds = %114
  %126 = load i8, ptr %3, align 1, !dbg !10398
  %127 = sext i8 %126 to i32, !dbg !10398
  %128 = sub nsw i32 %127, 48, !dbg !10399
  br label %134, !dbg !10397

129:                                              ; preds = %114
  %130 = load i8, ptr %3, align 1, !dbg !10400
  %131 = sext i8 %130 to i32, !dbg !10400
  %132 = and i32 %131, 7, !dbg !10401
  %133 = add nsw i32 %132, 9, !dbg !10402
  br label %134, !dbg !10397

134:                                              ; preds = %129, %125
  %135 = phi i32 [ %128, %125 ], [ %133, %129 ], !dbg !10397
  %136 = trunc i32 %135 to i8, !dbg !10403
  %137 = sext i8 %136 to i32, !dbg !10404
  %138 = or i32 %118, %137, !dbg !10405
  %139 = trunc i32 %138 to i8, !dbg !10406
  store i8 %139, ptr %10, align 1, !dbg !10373
  %140 = load i8, ptr %10, align 1, !dbg !10407
  %141 = icmp ne i8 %140, 0, !dbg !10407
  %142 = xor i1 %141, true, !dbg !10407
  %143 = zext i1 %142 to i32, !dbg !10407
  %144 = sext i32 %143 to i64, !dbg !10407
  %145 = icmp ne i64 %144, 0, !dbg !10407
  br i1 %145, label %146, label %147, !dbg !10409

146:                                              ; preds = %134
  store i64 0, ptr %6, align 8, !dbg !10410
  br label %178, !dbg !10410

147:                                              ; preds = %134
  %148 = load i8, ptr %10, align 1, !dbg !10411
  %149 = load ptr, ptr %9, align 8, !dbg !10412
  %150 = getelementptr inbounds i8, ptr %149, i32 1, !dbg !10412
  store ptr %150, ptr %9, align 8, !dbg !10412
  store i8 %148, ptr %149, align 1, !dbg !10413
  %151 = load ptr, ptr %8, align 8, !dbg !10414
  %152 = getelementptr inbounds i8, ptr %151, i64 2, !dbg !10414
  store ptr %152, ptr %8, align 8, !dbg !10414
  br label %167, !dbg !10415

153:                                              ; preds = %91, %24
  %154 = load ptr, ptr %8, align 8, !dbg !10416
  %155 = load i8, ptr %154, align 1, !dbg !10418
  %156 = sext i8 %155 to i32, !dbg !10418
  %157 = icmp eq i32 %156, 43, !dbg !10419
  br i1 %157, label %158, label %161, !dbg !10420

158:                                              ; preds = %153
  %159 = load ptr, ptr %9, align 8, !dbg !10421
  %160 = getelementptr inbounds i8, ptr %159, i32 1, !dbg !10421
  store ptr %160, ptr %9, align 8, !dbg !10421
  store i8 32, ptr %159, align 1, !dbg !10423
  br label %166, !dbg !10424

161:                                              ; preds = %153
  %162 = load ptr, ptr %8, align 8, !dbg !10425
  %163 = load i8, ptr %162, align 1, !dbg !10427
  %164 = load ptr, ptr %9, align 8, !dbg !10428
  %165 = getelementptr inbounds i8, ptr %164, i32 1, !dbg !10428
  store ptr %165, ptr %9, align 8, !dbg !10428
  store i8 %163, ptr %164, align 1, !dbg !10429
  br label %166

166:                                              ; preds = %161, %158
  br label %167

167:                                              ; preds = %166, %147
  br label %168, !dbg !10430

168:                                              ; preds = %167
  %169 = load ptr, ptr %8, align 8, !dbg !10431
  %170 = getelementptr inbounds i8, ptr %169, i32 1, !dbg !10431
  store ptr %170, ptr %8, align 8, !dbg !10431
  br label %20, !dbg !10432, !llvm.loop !10433

171:                                              ; preds = %20
  %172 = load ptr, ptr %9, align 8, !dbg !10435
  store i8 0, ptr %172, align 1, !dbg !10436
  %173 = load ptr, ptr %9, align 8, !dbg !10437
  %174 = load ptr, ptr %7, align 8, !dbg !10438
  %175 = ptrtoint ptr %173 to i64, !dbg !10439
  %176 = ptrtoint ptr %174 to i64, !dbg !10439
  %177 = sub i64 %175, %176, !dbg !10439
  store i64 %177, ptr %6, align 8, !dbg !10440
  br label %178, !dbg !10440

178:                                              ; preds = %171, %146, %17
  %179 = load i64, ptr %6, align 8, !dbg !10441
  ret i64 %179, !dbg !10441
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @key_value_compare_qsort_key(ptr noundef %0, ptr noundef %1) #0 !dbg !10442 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !10443, metadata !DIExpression()), !dbg !10444
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !10445, metadata !DIExpression()), !dbg !10446
  %5 = load ptr, ptr %3, align 8, !dbg !10447
  %6 = getelementptr inbounds %struct.list_node, ptr %5, i32 0, i32 0, !dbg !10448
  %7 = load ptr, ptr %6, align 8, !dbg !10448
  %8 = load ptr, ptr %4, align 8, !dbg !10449
  %9 = getelementptr inbounds %struct.list_node, ptr %8, i32 0, i32 0, !dbg !10450
  %10 = load ptr, ptr %9, align 8, !dbg !10450
  %11 = call i32 @strcmp(ptr noundef %7, ptr noundef %10) #22, !dbg !10451
  ret i32 %11, !dbg !10452
}

declare void @qsort(ptr noundef, i64 noundef, i64 noundef, ptr noundef) #4

; Function Attrs: nounwind
declare ptr @strptime(ptr noundef, ptr noundef, ptr noundef) #3

; Function Attrs: nounwind
declare i64 @timegm(ptr noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @identify_http_path(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !1551 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !10453, metadata !DIExpression()), !dbg !10454
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !10455, metadata !DIExpression()), !dbg !10456
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !10457, metadata !DIExpression()), !dbg !10458
  call void @llvm.dbg.declare(metadata ptr %8, metadata !10459, metadata !DIExpression()), !dbg !10460
  %12 = load ptr, ptr %6, align 8, !dbg !10461
  %13 = load ptr, ptr %7, align 8, !dbg !10462
  %14 = getelementptr inbounds %struct.request_parser_helper, ptr %13, i32 0, i32 0, !dbg !10463
  %15 = load ptr, ptr %14, align 8, !dbg !10463
  %16 = getelementptr inbounds %struct.lwan_value_t_, ptr %15, i32 0, i32 1, !dbg !10464
  %17 = load i64, ptr %16, align 8, !dbg !10464
  %18 = load ptr, ptr %6, align 8, !dbg !10465
  %19 = load ptr, ptr %7, align 8, !dbg !10466
  %20 = getelementptr inbounds %struct.request_parser_helper, ptr %19, i32 0, i32 0, !dbg !10467
  %21 = load ptr, ptr %20, align 8, !dbg !10467
  %22 = getelementptr inbounds %struct.lwan_value_t_, ptr %21, i32 0, i32 0, !dbg !10468
  %23 = load ptr, ptr %22, align 8, !dbg !10468
  %24 = ptrtoint ptr %18 to i64, !dbg !10469
  %25 = ptrtoint ptr %23 to i64, !dbg !10469
  %26 = sub i64 %24, %25, !dbg !10469
  %27 = sub i64 %17, %26, !dbg !10470
  %28 = call ptr @memchr(ptr noundef %12, i32 noundef 13, i64 noundef %27) #22, !dbg !10471
  store ptr %28, ptr %8, align 8, !dbg !10460
  %29 = load ptr, ptr %8, align 8, !dbg !10472
  %30 = icmp ne ptr %29, null, !dbg !10472
  %31 = xor i1 %30, true, !dbg !10472
  %32 = zext i1 %31 to i32, !dbg !10472
  %33 = sext i32 %32 to i64, !dbg !10472
  %34 = icmp ne i64 %33, 0, !dbg !10472
  br i1 %34, label %35, label %36, !dbg !10474

35:                                               ; preds = %3
  store ptr null, ptr %4, align 8, !dbg !10475
  br label %194, !dbg !10475

36:                                               ; preds = %3
  %37 = load ptr, ptr %8, align 8, !dbg !10476
  %38 = load ptr, ptr %6, align 8, !dbg !10476
  %39 = ptrtoint ptr %37 to i64, !dbg !10476
  %40 = ptrtoint ptr %38 to i64, !dbg !10476
  %41 = sub i64 %39, %40, !dbg !10476
  %42 = icmp ult i64 %41, 10, !dbg !10476
  %43 = zext i1 %42 to i32, !dbg !10476
  %44 = sext i32 %43 to i64, !dbg !10476
  %45 = icmp ne i64 %44, 0, !dbg !10476
  br i1 %45, label %46, label %47, !dbg !10478

46:                                               ; preds = %36
  store ptr null, ptr %4, align 8, !dbg !10479
  br label %194, !dbg !10479

47:                                               ; preds = %36
  %48 = load ptr, ptr %8, align 8, !dbg !10480
  store i8 0, ptr %48, align 1, !dbg !10481
  call void @llvm.dbg.declare(metadata ptr %9, metadata !10482, metadata !DIExpression()), !dbg !10483
  %49 = load ptr, ptr %8, align 8, !dbg !10484
  %50 = getelementptr inbounds i8, ptr %49, i64 -9, !dbg !10485
  store ptr %50, ptr %9, align 8, !dbg !10483
  %51 = load ptr, ptr %9, align 8, !dbg !10486
  %52 = getelementptr inbounds i8, ptr %51, i64 1, !dbg !10486
  %53 = load i8, ptr %52, align 1, !dbg !10486
  %54 = sext i8 %53 to i32, !dbg !10486
  %55 = icmp ne i32 %54, 72, !dbg !10486
  %56 = zext i1 %55 to i32, !dbg !10486
  %57 = sext i32 %56 to i64, !dbg !10486
  %58 = icmp ne i64 %57, 0, !dbg !10486
  br i1 %58, label %59, label %60, !dbg !10488

59:                                               ; preds = %47
  store ptr null, ptr %4, align 8, !dbg !10489
  br label %194, !dbg !10489

60:                                               ; preds = %47
  %61 = load ptr, ptr %9, align 8, !dbg !10490
  store i8 0, ptr %61, align 1, !dbg !10491
  %62 = load ptr, ptr %9, align 8, !dbg !10492
  %63 = getelementptr inbounds i8, ptr %62, i64 6, !dbg !10492
  %64 = load i8, ptr %63, align 1, !dbg !10492
  %65 = sext i8 %64 to i32, !dbg !10492
  %66 = icmp ne i32 %65, 49, !dbg !10492
  %67 = zext i1 %66 to i32, !dbg !10492
  %68 = sext i32 %67 to i64, !dbg !10492
  %69 = icmp ne i64 %68, 0, !dbg !10492
  br i1 %69, label %70, label %71, !dbg !10494

70:                                               ; preds = %60
  store ptr null, ptr %4, align 8, !dbg !10495
  br label %194, !dbg !10495

71:                                               ; preds = %60
  %72 = load ptr, ptr %9, align 8, !dbg !10496
  %73 = getelementptr inbounds i8, ptr %72, i64 8, !dbg !10498
  %74 = load i8, ptr %73, align 1, !dbg !10499
  %75 = sext i8 %74 to i32, !dbg !10499
  %76 = icmp eq i32 %75, 48, !dbg !10500
  br i1 %76, label %77, label %82, !dbg !10501

77:                                               ; preds = %71
  %78 = load ptr, ptr %5, align 8, !dbg !10502
  %79 = getelementptr inbounds %struct.lwan_request_t_, ptr %78, i32 0, i32 0, !dbg !10503
  %80 = load i32, ptr %79, align 8, !dbg !10504
  %81 = or i32 %80, 32, !dbg !10504
  store i32 %81, ptr %79, align 8, !dbg !10504
  br label %82, !dbg !10502

82:                                               ; preds = %77, %71
  %83 = load ptr, ptr %6, align 8, !dbg !10505
  %84 = load i8, ptr %83, align 1, !dbg !10505
  %85 = sext i8 %84 to i32, !dbg !10505
  %86 = icmp ne i32 %85, 47, !dbg !10505
  %87 = zext i1 %86 to i32, !dbg !10505
  %88 = sext i32 %87 to i64, !dbg !10505
  %89 = icmp ne i64 %88, 0, !dbg !10505
  br i1 %89, label %90, label %91, !dbg !10507

90:                                               ; preds = %82
  store ptr null, ptr %4, align 8, !dbg !10508
  br label %194, !dbg !10508

91:                                               ; preds = %82
  %92 = load ptr, ptr %6, align 8, !dbg !10509
  %93 = load ptr, ptr %5, align 8, !dbg !10510
  %94 = getelementptr inbounds %struct.lwan_request_t_, ptr %93, i32 0, i32 2, !dbg !10511
  %95 = getelementptr inbounds %struct.lwan_value_t_, ptr %94, i32 0, i32 0, !dbg !10512
  store ptr %92, ptr %95, align 8, !dbg !10513
  %96 = load ptr, ptr %9, align 8, !dbg !10514
  %97 = load ptr, ptr %6, align 8, !dbg !10515
  %98 = ptrtoint ptr %96 to i64, !dbg !10516
  %99 = ptrtoint ptr %97 to i64, !dbg !10516
  %100 = sub i64 %98, %99, !dbg !10516
  %101 = load ptr, ptr %5, align 8, !dbg !10517
  %102 = getelementptr inbounds %struct.lwan_request_t_, ptr %101, i32 0, i32 2, !dbg !10518
  %103 = getelementptr inbounds %struct.lwan_value_t_, ptr %102, i32 0, i32 1, !dbg !10519
  store i64 %100, ptr %103, align 8, !dbg !10520
  call void @llvm.dbg.declare(metadata ptr %10, metadata !10521, metadata !DIExpression()), !dbg !10522
  %104 = load ptr, ptr %6, align 8, !dbg !10523
  %105 = load ptr, ptr %5, align 8, !dbg !10524
  %106 = getelementptr inbounds %struct.lwan_request_t_, ptr %105, i32 0, i32 2, !dbg !10525
  %107 = getelementptr inbounds %struct.lwan_value_t_, ptr %106, i32 0, i32 1, !dbg !10526
  %108 = load i64, ptr %107, align 8, !dbg !10526
  %109 = call ptr @memrchr(ptr noundef %104, i32 noundef 35, i64 noundef %108) #22, !dbg !10527
  store ptr %109, ptr %10, align 8, !dbg !10522
  %110 = load ptr, ptr %10, align 8, !dbg !10528
  %111 = icmp ne ptr %110, null, !dbg !10528
  br i1 %111, label %112, label %138, !dbg !10530

112:                                              ; preds = %91
  %113 = load ptr, ptr %10, align 8, !dbg !10531
  store i8 0, ptr %113, align 1, !dbg !10533
  %114 = load ptr, ptr %10, align 8, !dbg !10534
  %115 = getelementptr inbounds i8, ptr %114, i64 1, !dbg !10535
  %116 = load ptr, ptr %7, align 8, !dbg !10536
  %117 = getelementptr inbounds %struct.request_parser_helper, ptr %116, i32 0, i32 6, !dbg !10537
  %118 = getelementptr inbounds %struct.lwan_value_t_, ptr %117, i32 0, i32 0, !dbg !10538
  store ptr %115, ptr %118, align 8, !dbg !10539
  %119 = load ptr, ptr %9, align 8, !dbg !10540
  %120 = load ptr, ptr %10, align 8, !dbg !10541
  %121 = ptrtoint ptr %119 to i64, !dbg !10542
  %122 = ptrtoint ptr %120 to i64, !dbg !10542
  %123 = sub i64 %121, %122, !dbg !10542
  %124 = sub nsw i64 %123, 1, !dbg !10543
  %125 = load ptr, ptr %7, align 8, !dbg !10544
  %126 = getelementptr inbounds %struct.request_parser_helper, ptr %125, i32 0, i32 6, !dbg !10545
  %127 = getelementptr inbounds %struct.lwan_value_t_, ptr %126, i32 0, i32 1, !dbg !10546
  store i64 %124, ptr %127, align 8, !dbg !10547
  %128 = load ptr, ptr %7, align 8, !dbg !10548
  %129 = getelementptr inbounds %struct.request_parser_helper, ptr %128, i32 0, i32 6, !dbg !10549
  %130 = getelementptr inbounds %struct.lwan_value_t_, ptr %129, i32 0, i32 1, !dbg !10550
  %131 = load i64, ptr %130, align 8, !dbg !10550
  %132 = add i64 %131, 1, !dbg !10551
  %133 = load ptr, ptr %5, align 8, !dbg !10552
  %134 = getelementptr inbounds %struct.lwan_request_t_, ptr %133, i32 0, i32 2, !dbg !10553
  %135 = getelementptr inbounds %struct.lwan_value_t_, ptr %134, i32 0, i32 1, !dbg !10554
  %136 = load i64, ptr %135, align 8, !dbg !10555
  %137 = sub i64 %136, %132, !dbg !10555
  store i64 %137, ptr %135, align 8, !dbg !10555
  br label %138, !dbg !10556

138:                                              ; preds = %112, %91
  call void @llvm.dbg.declare(metadata ptr %11, metadata !10557, metadata !DIExpression()), !dbg !10558
  %139 = load ptr, ptr %6, align 8, !dbg !10559
  %140 = load ptr, ptr %5, align 8, !dbg !10560
  %141 = getelementptr inbounds %struct.lwan_request_t_, ptr %140, i32 0, i32 2, !dbg !10561
  %142 = getelementptr inbounds %struct.lwan_value_t_, ptr %141, i32 0, i32 1, !dbg !10562
  %143 = load i64, ptr %142, align 8, !dbg !10562
  %144 = call ptr @memchr(ptr noundef %139, i32 noundef 63, i64 noundef %143) #22, !dbg !10563
  store ptr %144, ptr %11, align 8, !dbg !10558
  %145 = load ptr, ptr %11, align 8, !dbg !10564
  %146 = icmp ne ptr %145, null, !dbg !10564
  br i1 %146, label %147, label %180, !dbg !10566

147:                                              ; preds = %138
  %148 = load ptr, ptr %11, align 8, !dbg !10567
  store i8 0, ptr %148, align 1, !dbg !10569
  %149 = load ptr, ptr %11, align 8, !dbg !10570
  %150 = getelementptr inbounds i8, ptr %149, i64 1, !dbg !10571
  %151 = load ptr, ptr %7, align 8, !dbg !10572
  %152 = getelementptr inbounds %struct.request_parser_helper, ptr %151, i32 0, i32 5, !dbg !10573
  %153 = getelementptr inbounds %struct.lwan_value_t_, ptr %152, i32 0, i32 0, !dbg !10574
  store ptr %150, ptr %153, align 8, !dbg !10575
  %154 = load ptr, ptr %10, align 8, !dbg !10576
  %155 = icmp ne ptr %154, null, !dbg !10576
  br i1 %155, label %156, label %158, !dbg !10576

156:                                              ; preds = %147
  %157 = load ptr, ptr %10, align 8, !dbg !10577
  br label %160, !dbg !10576

158:                                              ; preds = %147
  %159 = load ptr, ptr %9, align 8, !dbg !10578
  br label %160, !dbg !10576

160:                                              ; preds = %158, %156
  %161 = phi ptr [ %157, %156 ], [ %159, %158 ], !dbg !10576
  %162 = load ptr, ptr %11, align 8, !dbg !10579
  %163 = ptrtoint ptr %161 to i64, !dbg !10580
  %164 = ptrtoint ptr %162 to i64, !dbg !10580
  %165 = sub i64 %163, %164, !dbg !10580
  %166 = sub nsw i64 %165, 1, !dbg !10581
  %167 = load ptr, ptr %7, align 8, !dbg !10582
  %168 = getelementptr inbounds %struct.request_parser_helper, ptr %167, i32 0, i32 5, !dbg !10583
  %169 = getelementptr inbounds %struct.lwan_value_t_, ptr %168, i32 0, i32 1, !dbg !10584
  store i64 %166, ptr %169, align 8, !dbg !10585
  %170 = load ptr, ptr %7, align 8, !dbg !10586
  %171 = getelementptr inbounds %struct.request_parser_helper, ptr %170, i32 0, i32 5, !dbg !10587
  %172 = getelementptr inbounds %struct.lwan_value_t_, ptr %171, i32 0, i32 1, !dbg !10588
  %173 = load i64, ptr %172, align 8, !dbg !10588
  %174 = add i64 %173, 1, !dbg !10589
  %175 = load ptr, ptr %5, align 8, !dbg !10590
  %176 = getelementptr inbounds %struct.lwan_request_t_, ptr %175, i32 0, i32 2, !dbg !10591
  %177 = getelementptr inbounds %struct.lwan_value_t_, ptr %176, i32 0, i32 1, !dbg !10592
  %178 = load i64, ptr %177, align 8, !dbg !10593
  %179 = sub i64 %178, %174, !dbg !10593
  store i64 %179, ptr %177, align 8, !dbg !10593
  br label %180, !dbg !10594

180:                                              ; preds = %160, %138
  %181 = load ptr, ptr %6, align 8, !dbg !10595
  %182 = load ptr, ptr %5, align 8, !dbg !10596
  %183 = getelementptr inbounds %struct.lwan_request_t_, ptr %182, i32 0, i32 3, !dbg !10597
  %184 = getelementptr inbounds %struct.lwan_value_t_, ptr %183, i32 0, i32 0, !dbg !10598
  store ptr %181, ptr %184, align 8, !dbg !10599
  %185 = load ptr, ptr %5, align 8, !dbg !10600
  %186 = getelementptr inbounds %struct.lwan_request_t_, ptr %185, i32 0, i32 2, !dbg !10601
  %187 = getelementptr inbounds %struct.lwan_value_t_, ptr %186, i32 0, i32 1, !dbg !10602
  %188 = load i64, ptr %187, align 8, !dbg !10602
  %189 = load ptr, ptr %5, align 8, !dbg !10603
  %190 = getelementptr inbounds %struct.lwan_request_t_, ptr %189, i32 0, i32 3, !dbg !10604
  %191 = getelementptr inbounds %struct.lwan_value_t_, ptr %190, i32 0, i32 1, !dbg !10605
  store i64 %188, ptr %191, align 8, !dbg !10606
  %192 = load ptr, ptr %8, align 8, !dbg !10607
  %193 = getelementptr inbounds i8, ptr %192, i64 1, !dbg !10608
  store ptr %193, ptr %4, align 8, !dbg !10609
  br label %194, !dbg !10609

194:                                              ; preds = %180, %90, %70, %59, %46, %35
  %195 = load ptr, ptr %4, align 8, !dbg !10610
  ret ptr %195, !dbg !10610
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @parse_headers(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !1462 {
  %4 = alloca ptr, align 8
  %5 = alloca i16, align 2
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca i64, align 8
  %15 = alloca ptr, align 8
  %16 = alloca ptr, align 8
  %17 = alloca ptr, align 8
  %18 = alloca ptr, align 8
  %19 = alloca ptr, align 8
  %20 = alloca ptr, align 8
  %21 = alloca ptr, align 8
  store ptr %0, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !10611, metadata !DIExpression()), !dbg !10612
  store ptr %1, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %10, metadata !10613, metadata !DIExpression()), !dbg !10614
  store ptr %2, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !10615, metadata !DIExpression()), !dbg !10616
  call void @llvm.dbg.declare(metadata ptr %12, metadata !10617, metadata !DIExpression()), !dbg !10619
  %22 = load ptr, ptr %10, align 8, !dbg !10620
  store ptr %22, ptr %12, align 8, !dbg !10619
  br label %23, !dbg !10621

23:                                               ; preds = %539, %3
  %24 = load ptr, ptr %12, align 8, !dbg !10622
  %25 = load i8, ptr %24, align 1, !dbg !10624
  %26 = icmp ne i8 %25, 0, !dbg !10625
  br i1 %26, label %27, label %542, !dbg !10625

27:                                               ; preds = %23
  call void @llvm.dbg.declare(metadata ptr %13, metadata !10626, metadata !DIExpression()), !dbg !10628
  call void @llvm.dbg.declare(metadata ptr %14, metadata !10629, metadata !DIExpression()), !dbg !10630
  br label %28, !dbg !10631

28:                                               ; preds = %389, %253, %27
  call void @llvm.dbg.label(metadata !10632), !dbg !10633
  %29 = load ptr, ptr %12, align 8, !dbg !10634
  %30 = getelementptr inbounds i8, ptr %29, i64 4, !dbg !10636
  %31 = load ptr, ptr %11, align 8, !dbg !10637
  %32 = icmp uge ptr %30, %31, !dbg !10638
  br i1 %32, label %33, label %34, !dbg !10639

33:                                               ; preds = %28
  br label %542, !dbg !10640

34:                                               ; preds = %28
  %35 = load ptr, ptr %12, align 8, !dbg !10641
  store ptr %35, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !10642, metadata !DIExpression()), !dbg !10648
  call void @llvm.dbg.declare(metadata ptr %5, metadata !10650, metadata !DIExpression()), !dbg !10651
  %36 = load ptr, ptr %4, align 8, !dbg !10652
  call void @llvm.memcpy.p0.p0.i64(ptr align 2 %5, ptr align 1 %36, i64 2, i1 false), !dbg !10653
  %37 = load i16, ptr %5, align 2, !dbg !10654
  %38 = sext i16 %37 to i32, !dbg !10641
  switch i32 %38, label %47 [
    i32 2573, label %39
  ], !dbg !10641

39:                                               ; preds = %34
  %40 = load ptr, ptr %12, align 8, !dbg !10655
  store i8 0, ptr %40, align 1, !dbg !10657
  %41 = load ptr, ptr %12, align 8, !dbg !10658
  %42 = getelementptr inbounds i8, ptr %41, i64 3, !dbg !10659
  %43 = getelementptr inbounds i8, ptr %42, i64 -1, !dbg !10660
  %44 = load ptr, ptr %9, align 8, !dbg !10661
  %45 = getelementptr inbounds %struct.request_parser_helper, ptr %44, i32 0, i32 1, !dbg !10662
  store ptr %43, ptr %45, align 8, !dbg !10663
  %46 = load ptr, ptr %12, align 8, !dbg !10664
  store ptr %46, ptr %8, align 8, !dbg !10665
  br label %544, !dbg !10665

47:                                               ; preds = %34
  %48 = load ptr, ptr %12, align 8, !dbg !10666
  store ptr %48, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !9480, metadata !DIExpression()), !dbg !10667
  call void @llvm.dbg.declare(metadata ptr %7, metadata !9489, metadata !DIExpression()), !dbg !10669
  %49 = load ptr, ptr %6, align 8, !dbg !10670
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %7, ptr align 1 %49, i64 4, i1 false), !dbg !10671
  %50 = load i32, ptr %7, align 4, !dbg !10672
  %51 = or i32 %50, 538976288, !dbg !10666
  switch i32 %51, label %526 [
    i32 1668179245, label %52
    i32 1887007789, label %119
    i32 1852140589, label %186
    i32 1701012321, label %253
    i32 1752462689, label %256
    i32 1852731235, label %323
    i32 1953394531, label %389
    i32 1831691881, label %392
    i32 1735287154, label %459
  ], !dbg !10666

52:                                               ; preds = %47
  br label %53, !dbg !10673

53:                                               ; preds = %52
  call void @llvm.dbg.declare(metadata ptr %15, metadata !10675, metadata !DIExpression()), !dbg !10677
  %54 = load ptr, ptr %12, align 8, !dbg !10677
  %55 = getelementptr inbounds i8, ptr %54, i64 9, !dbg !10677
  store ptr %55, ptr %12, align 8, !dbg !10677
  %56 = load ptr, ptr %12, align 8, !dbg !10678
  %57 = load ptr, ptr %11, align 8, !dbg !10678
  %58 = icmp uge ptr %56, %57, !dbg !10678
  br i1 %58, label %59, label %60, !dbg !10677

59:                                               ; preds = %53
  store ptr null, ptr %8, align 8, !dbg !10678
  br label %544, !dbg !10678

60:                                               ; preds = %53
  %61 = load ptr, ptr %12, align 8, !dbg !10680
  %62 = getelementptr inbounds i8, ptr %61, i32 1, !dbg !10680
  store ptr %62, ptr %12, align 8, !dbg !10680
  %63 = load i8, ptr %61, align 1, !dbg !10680
  %64 = sext i8 %63 to i32, !dbg !10680
  %65 = icmp ne i32 %64, 58, !dbg !10680
  %66 = zext i1 %65 to i32, !dbg !10680
  %67 = sext i32 %66 to i64, !dbg !10680
  %68 = icmp ne i64 %67, 0, !dbg !10680
  br i1 %68, label %69, label %70, !dbg !10677

69:                                               ; preds = %60
  br label %527, !dbg !10680

70:                                               ; preds = %60
  %71 = load ptr, ptr %12, align 8, !dbg !10682
  %72 = getelementptr inbounds i8, ptr %71, i32 1, !dbg !10682
  store ptr %72, ptr %12, align 8, !dbg !10682
  %73 = load i8, ptr %71, align 1, !dbg !10682
  %74 = sext i8 %73 to i32, !dbg !10682
  %75 = icmp ne i32 %74, 32, !dbg !10682
  %76 = zext i1 %75 to i32, !dbg !10682
  %77 = sext i32 %76 to i64, !dbg !10682
  %78 = icmp ne i64 %77, 0, !dbg !10682
  br i1 %78, label %79, label %80, !dbg !10677

79:                                               ; preds = %70
  br label %527, !dbg !10682

80:                                               ; preds = %70
  %81 = load ptr, ptr %12, align 8, !dbg !10684
  %82 = call ptr @strchr(ptr noundef %81, i32 noundef 13) #22, !dbg !10684
  store ptr %82, ptr %15, align 8, !dbg !10684
  %83 = icmp ne ptr %82, null, !dbg !10684
  %84 = xor i1 %83, true, !dbg !10684
  %85 = xor i1 %84, true, !dbg !10684
  %86 = zext i1 %85 to i32, !dbg !10684
  %87 = sext i32 %86 to i64, !dbg !10684
  %88 = icmp ne i64 %87, 0, !dbg !10684
  br i1 %88, label %89, label %108, !dbg !10677

89:                                               ; preds = %80
  %90 = load ptr, ptr %15, align 8, !dbg !10686
  store i8 0, ptr %90, align 1, !dbg !10686
  %91 = load ptr, ptr %12, align 8, !dbg !10686
  store ptr %91, ptr %13, align 8, !dbg !10686
  %92 = load ptr, ptr %15, align 8, !dbg !10686
  %93 = getelementptr inbounds i8, ptr %92, i64 1, !dbg !10686
  store ptr %93, ptr %12, align 8, !dbg !10686
  %94 = load ptr, ptr %15, align 8, !dbg !10686
  %95 = load ptr, ptr %13, align 8, !dbg !10686
  %96 = ptrtoint ptr %94 to i64, !dbg !10686
  %97 = ptrtoint ptr %95 to i64, !dbg !10686
  %98 = sub i64 %96, %97, !dbg !10686
  store i64 %98, ptr %14, align 8, !dbg !10686
  %99 = load ptr, ptr %12, align 8, !dbg !10688
  %100 = load i8, ptr %99, align 1, !dbg !10688
  %101 = sext i8 %100 to i32, !dbg !10688
  %102 = icmp ne i32 %101, 10, !dbg !10688
  %103 = zext i1 %102 to i32, !dbg !10688
  %104 = sext i32 %103 to i64, !dbg !10688
  %105 = icmp ne i64 %104, 0, !dbg !10688
  br i1 %105, label %106, label %107, !dbg !10686

106:                                              ; preds = %89
  br label %527, !dbg !10688

107:                                              ; preds = %89
  br label %109, !dbg !10686

108:                                              ; preds = %80
  br label %527, !dbg !10684

109:                                              ; preds = %107
  br label %110, !dbg !10677

110:                                              ; preds = %109
  %111 = load ptr, ptr %13, align 8, !dbg !10690
  %112 = load ptr, ptr %9, align 8, !dbg !10691
  %113 = getelementptr inbounds %struct.request_parser_helper, ptr %112, i32 0, i32 2, !dbg !10692
  %114 = getelementptr inbounds %struct.lwan_value_t_, ptr %113, i32 0, i32 0, !dbg !10693
  store ptr %111, ptr %114, align 8, !dbg !10694
  %115 = load i64, ptr %14, align 8, !dbg !10695
  %116 = load ptr, ptr %9, align 8, !dbg !10696
  %117 = getelementptr inbounds %struct.request_parser_helper, ptr %116, i32 0, i32 2, !dbg !10697
  %118 = getelementptr inbounds %struct.lwan_value_t_, ptr %117, i32 0, i32 1, !dbg !10698
  store i64 %115, ptr %118, align 8, !dbg !10699
  br label %526, !dbg !10700

119:                                              ; preds = %47
  br label %120, !dbg !10701

120:                                              ; preds = %119
  call void @llvm.dbg.declare(metadata ptr %16, metadata !10702, metadata !DIExpression()), !dbg !10704
  %121 = load ptr, ptr %12, align 8, !dbg !10704
  %122 = getelementptr inbounds i8, ptr %121, i64 5, !dbg !10704
  store ptr %122, ptr %12, align 8, !dbg !10704
  %123 = load ptr, ptr %12, align 8, !dbg !10705
  %124 = load ptr, ptr %11, align 8, !dbg !10705
  %125 = icmp uge ptr %123, %124, !dbg !10705
  br i1 %125, label %126, label %127, !dbg !10704

126:                                              ; preds = %120
  store ptr null, ptr %8, align 8, !dbg !10705
  br label %544, !dbg !10705

127:                                              ; preds = %120
  %128 = load ptr, ptr %12, align 8, !dbg !10707
  %129 = getelementptr inbounds i8, ptr %128, i32 1, !dbg !10707
  store ptr %129, ptr %12, align 8, !dbg !10707
  %130 = load i8, ptr %128, align 1, !dbg !10707
  %131 = sext i8 %130 to i32, !dbg !10707
  %132 = icmp ne i32 %131, 58, !dbg !10707
  %133 = zext i1 %132 to i32, !dbg !10707
  %134 = sext i32 %133 to i64, !dbg !10707
  %135 = icmp ne i64 %134, 0, !dbg !10707
  br i1 %135, label %136, label %137, !dbg !10704

136:                                              ; preds = %127
  br label %527, !dbg !10707

137:                                              ; preds = %127
  %138 = load ptr, ptr %12, align 8, !dbg !10709
  %139 = getelementptr inbounds i8, ptr %138, i32 1, !dbg !10709
  store ptr %139, ptr %12, align 8, !dbg !10709
  %140 = load i8, ptr %138, align 1, !dbg !10709
  %141 = sext i8 %140 to i32, !dbg !10709
  %142 = icmp ne i32 %141, 32, !dbg !10709
  %143 = zext i1 %142 to i32, !dbg !10709
  %144 = sext i32 %143 to i64, !dbg !10709
  %145 = icmp ne i64 %144, 0, !dbg !10709
  br i1 %145, label %146, label %147, !dbg !10704

146:                                              ; preds = %137
  br label %527, !dbg !10709

147:                                              ; preds = %137
  %148 = load ptr, ptr %12, align 8, !dbg !10711
  %149 = call ptr @strchr(ptr noundef %148, i32 noundef 13) #22, !dbg !10711
  store ptr %149, ptr %16, align 8, !dbg !10711
  %150 = icmp ne ptr %149, null, !dbg !10711
  %151 = xor i1 %150, true, !dbg !10711
  %152 = xor i1 %151, true, !dbg !10711
  %153 = zext i1 %152 to i32, !dbg !10711
  %154 = sext i32 %153 to i64, !dbg !10711
  %155 = icmp ne i64 %154, 0, !dbg !10711
  br i1 %155, label %156, label %175, !dbg !10704

156:                                              ; preds = %147
  %157 = load ptr, ptr %16, align 8, !dbg !10713
  store i8 0, ptr %157, align 1, !dbg !10713
  %158 = load ptr, ptr %12, align 8, !dbg !10713
  store ptr %158, ptr %13, align 8, !dbg !10713
  %159 = load ptr, ptr %16, align 8, !dbg !10713
  %160 = getelementptr inbounds i8, ptr %159, i64 1, !dbg !10713
  store ptr %160, ptr %12, align 8, !dbg !10713
  %161 = load ptr, ptr %16, align 8, !dbg !10713
  %162 = load ptr, ptr %13, align 8, !dbg !10713
  %163 = ptrtoint ptr %161 to i64, !dbg !10713
  %164 = ptrtoint ptr %162 to i64, !dbg !10713
  %165 = sub i64 %163, %164, !dbg !10713
  store i64 %165, ptr %14, align 8, !dbg !10713
  %166 = load ptr, ptr %12, align 8, !dbg !10715
  %167 = load i8, ptr %166, align 1, !dbg !10715
  %168 = sext i8 %167 to i32, !dbg !10715
  %169 = icmp ne i32 %168, 10, !dbg !10715
  %170 = zext i1 %169 to i32, !dbg !10715
  %171 = sext i32 %170 to i64, !dbg !10715
  %172 = icmp ne i64 %171, 0, !dbg !10715
  br i1 %172, label %173, label %174, !dbg !10713

173:                                              ; preds = %156
  br label %527, !dbg !10715

174:                                              ; preds = %156
  br label %176, !dbg !10713

175:                                              ; preds = %147
  br label %527, !dbg !10711

176:                                              ; preds = %174
  br label %177, !dbg !10704

177:                                              ; preds = %176
  %178 = load ptr, ptr %13, align 8, !dbg !10717
  %179 = load ptr, ptr %9, align 8, !dbg !10718
  %180 = getelementptr inbounds %struct.request_parser_helper, ptr %179, i32 0, i32 9, !dbg !10719
  %181 = getelementptr inbounds %struct.lwan_value_t_, ptr %180, i32 0, i32 0, !dbg !10720
  store ptr %178, ptr %181, align 8, !dbg !10721
  %182 = load i64, ptr %14, align 8, !dbg !10722
  %183 = load ptr, ptr %9, align 8, !dbg !10723
  %184 = getelementptr inbounds %struct.request_parser_helper, ptr %183, i32 0, i32 9, !dbg !10724
  %185 = getelementptr inbounds %struct.lwan_value_t_, ptr %184, i32 0, i32 1, !dbg !10725
  store i64 %182, ptr %185, align 8, !dbg !10726
  br label %526, !dbg !10727

186:                                              ; preds = %47
  br label %187, !dbg !10728

187:                                              ; preds = %186
  call void @llvm.dbg.declare(metadata ptr %17, metadata !10729, metadata !DIExpression()), !dbg !10731
  %188 = load ptr, ptr %12, align 8, !dbg !10731
  %189 = getelementptr inbounds i8, ptr %188, i64 7, !dbg !10731
  store ptr %189, ptr %12, align 8, !dbg !10731
  %190 = load ptr, ptr %12, align 8, !dbg !10732
  %191 = load ptr, ptr %11, align 8, !dbg !10732
  %192 = icmp uge ptr %190, %191, !dbg !10732
  br i1 %192, label %193, label %194, !dbg !10731

193:                                              ; preds = %187
  store ptr null, ptr %8, align 8, !dbg !10732
  br label %544, !dbg !10732

194:                                              ; preds = %187
  %195 = load ptr, ptr %12, align 8, !dbg !10734
  %196 = getelementptr inbounds i8, ptr %195, i32 1, !dbg !10734
  store ptr %196, ptr %12, align 8, !dbg !10734
  %197 = load i8, ptr %195, align 1, !dbg !10734
  %198 = sext i8 %197 to i32, !dbg !10734
  %199 = icmp ne i32 %198, 58, !dbg !10734
  %200 = zext i1 %199 to i32, !dbg !10734
  %201 = sext i32 %200 to i64, !dbg !10734
  %202 = icmp ne i64 %201, 0, !dbg !10734
  br i1 %202, label %203, label %204, !dbg !10731

203:                                              ; preds = %194
  br label %527, !dbg !10734

204:                                              ; preds = %194
  %205 = load ptr, ptr %12, align 8, !dbg !10736
  %206 = getelementptr inbounds i8, ptr %205, i32 1, !dbg !10736
  store ptr %206, ptr %12, align 8, !dbg !10736
  %207 = load i8, ptr %205, align 1, !dbg !10736
  %208 = sext i8 %207 to i32, !dbg !10736
  %209 = icmp ne i32 %208, 32, !dbg !10736
  %210 = zext i1 %209 to i32, !dbg !10736
  %211 = sext i32 %210 to i64, !dbg !10736
  %212 = icmp ne i64 %211, 0, !dbg !10736
  br i1 %212, label %213, label %214, !dbg !10731

213:                                              ; preds = %204
  br label %527, !dbg !10736

214:                                              ; preds = %204
  %215 = load ptr, ptr %12, align 8, !dbg !10738
  %216 = call ptr @strchr(ptr noundef %215, i32 noundef 13) #22, !dbg !10738
  store ptr %216, ptr %17, align 8, !dbg !10738
  %217 = icmp ne ptr %216, null, !dbg !10738
  %218 = xor i1 %217, true, !dbg !10738
  %219 = xor i1 %218, true, !dbg !10738
  %220 = zext i1 %219 to i32, !dbg !10738
  %221 = sext i32 %220 to i64, !dbg !10738
  %222 = icmp ne i64 %221, 0, !dbg !10738
  br i1 %222, label %223, label %242, !dbg !10731

223:                                              ; preds = %214
  %224 = load ptr, ptr %17, align 8, !dbg !10740
  store i8 0, ptr %224, align 1, !dbg !10740
  %225 = load ptr, ptr %12, align 8, !dbg !10740
  store ptr %225, ptr %13, align 8, !dbg !10740
  %226 = load ptr, ptr %17, align 8, !dbg !10740
  %227 = getelementptr inbounds i8, ptr %226, i64 1, !dbg !10740
  store ptr %227, ptr %12, align 8, !dbg !10740
  %228 = load ptr, ptr %17, align 8, !dbg !10740
  %229 = load ptr, ptr %13, align 8, !dbg !10740
  %230 = ptrtoint ptr %228 to i64, !dbg !10740
  %231 = ptrtoint ptr %229 to i64, !dbg !10740
  %232 = sub i64 %230, %231, !dbg !10740
  store i64 %232, ptr %14, align 8, !dbg !10740
  %233 = load ptr, ptr %12, align 8, !dbg !10742
  %234 = load i8, ptr %233, align 1, !dbg !10742
  %235 = sext i8 %234 to i32, !dbg !10742
  %236 = icmp ne i32 %235, 10, !dbg !10742
  %237 = zext i1 %236 to i32, !dbg !10742
  %238 = sext i32 %237 to i64, !dbg !10742
  %239 = icmp ne i64 %238, 0, !dbg !10742
  br i1 %239, label %240, label %241, !dbg !10740

240:                                              ; preds = %223
  br label %527, !dbg !10742

241:                                              ; preds = %223
  br label %243, !dbg !10740

242:                                              ; preds = %214
  br label %527, !dbg !10738

243:                                              ; preds = %241
  br label %244, !dbg !10731

244:                                              ; preds = %243
  %245 = load ptr, ptr %13, align 8, !dbg !10744
  %246 = load ptr, ptr %9, align 8, !dbg !10745
  %247 = getelementptr inbounds %struct.request_parser_helper, ptr %246, i32 0, i32 7, !dbg !10746
  %248 = getelementptr inbounds %struct.lwan_value_t_, ptr %247, i32 0, i32 0, !dbg !10747
  store ptr %245, ptr %248, align 8, !dbg !10748
  %249 = load i64, ptr %14, align 8, !dbg !10749
  %250 = load ptr, ptr %9, align 8, !dbg !10750
  %251 = getelementptr inbounds %struct.request_parser_helper, ptr %250, i32 0, i32 7, !dbg !10751
  %252 = getelementptr inbounds %struct.lwan_value_t_, ptr %251, i32 0, i32 1, !dbg !10752
  store i64 %249, ptr %252, align 8, !dbg !10753
  br label %526, !dbg !10754

253:                                              ; preds = %47
  %254 = load ptr, ptr %12, align 8, !dbg !10755
  %255 = getelementptr inbounds i8, ptr %254, i64 6, !dbg !10755
  store ptr %255, ptr %12, align 8, !dbg !10755
  br label %28, !dbg !10756

256:                                              ; preds = %47
  br label %257, !dbg !10757

257:                                              ; preds = %256
  call void @llvm.dbg.declare(metadata ptr %18, metadata !10758, metadata !DIExpression()), !dbg !10760
  %258 = load ptr, ptr %12, align 8, !dbg !10760
  %259 = getelementptr inbounds i8, ptr %258, i64 13, !dbg !10760
  store ptr %259, ptr %12, align 8, !dbg !10760
  %260 = load ptr, ptr %12, align 8, !dbg !10761
  %261 = load ptr, ptr %11, align 8, !dbg !10761
  %262 = icmp uge ptr %260, %261, !dbg !10761
  br i1 %262, label %263, label %264, !dbg !10760

263:                                              ; preds = %257
  store ptr null, ptr %8, align 8, !dbg !10761
  br label %544, !dbg !10761

264:                                              ; preds = %257
  %265 = load ptr, ptr %12, align 8, !dbg !10763
  %266 = getelementptr inbounds i8, ptr %265, i32 1, !dbg !10763
  store ptr %266, ptr %12, align 8, !dbg !10763
  %267 = load i8, ptr %265, align 1, !dbg !10763
  %268 = sext i8 %267 to i32, !dbg !10763
  %269 = icmp ne i32 %268, 58, !dbg !10763
  %270 = zext i1 %269 to i32, !dbg !10763
  %271 = sext i32 %270 to i64, !dbg !10763
  %272 = icmp ne i64 %271, 0, !dbg !10763
  br i1 %272, label %273, label %274, !dbg !10760

273:                                              ; preds = %264
  br label %527, !dbg !10763

274:                                              ; preds = %264
  %275 = load ptr, ptr %12, align 8, !dbg !10765
  %276 = getelementptr inbounds i8, ptr %275, i32 1, !dbg !10765
  store ptr %276, ptr %12, align 8, !dbg !10765
  %277 = load i8, ptr %275, align 1, !dbg !10765
  %278 = sext i8 %277 to i32, !dbg !10765
  %279 = icmp ne i32 %278, 32, !dbg !10765
  %280 = zext i1 %279 to i32, !dbg !10765
  %281 = sext i32 %280 to i64, !dbg !10765
  %282 = icmp ne i64 %281, 0, !dbg !10765
  br i1 %282, label %283, label %284, !dbg !10760

283:                                              ; preds = %274
  br label %527, !dbg !10765

284:                                              ; preds = %274
  %285 = load ptr, ptr %12, align 8, !dbg !10767
  %286 = call ptr @strchr(ptr noundef %285, i32 noundef 13) #22, !dbg !10767
  store ptr %286, ptr %18, align 8, !dbg !10767
  %287 = icmp ne ptr %286, null, !dbg !10767
  %288 = xor i1 %287, true, !dbg !10767
  %289 = xor i1 %288, true, !dbg !10767
  %290 = zext i1 %289 to i32, !dbg !10767
  %291 = sext i32 %290 to i64, !dbg !10767
  %292 = icmp ne i64 %291, 0, !dbg !10767
  br i1 %292, label %293, label %312, !dbg !10760

293:                                              ; preds = %284
  %294 = load ptr, ptr %18, align 8, !dbg !10769
  store i8 0, ptr %294, align 1, !dbg !10769
  %295 = load ptr, ptr %12, align 8, !dbg !10769
  store ptr %295, ptr %13, align 8, !dbg !10769
  %296 = load ptr, ptr %18, align 8, !dbg !10769
  %297 = getelementptr inbounds i8, ptr %296, i64 1, !dbg !10769
  store ptr %297, ptr %12, align 8, !dbg !10769
  %298 = load ptr, ptr %18, align 8, !dbg !10769
  %299 = load ptr, ptr %13, align 8, !dbg !10769
  %300 = ptrtoint ptr %298 to i64, !dbg !10769
  %301 = ptrtoint ptr %299 to i64, !dbg !10769
  %302 = sub i64 %300, %301, !dbg !10769
  store i64 %302, ptr %14, align 8, !dbg !10769
  %303 = load ptr, ptr %12, align 8, !dbg !10771
  %304 = load i8, ptr %303, align 1, !dbg !10771
  %305 = sext i8 %304 to i32, !dbg !10771
  %306 = icmp ne i32 %305, 10, !dbg !10771
  %307 = zext i1 %306 to i32, !dbg !10771
  %308 = sext i32 %307 to i64, !dbg !10771
  %309 = icmp ne i64 %308, 0, !dbg !10771
  br i1 %309, label %310, label %311, !dbg !10769

310:                                              ; preds = %293
  br label %527, !dbg !10771

311:                                              ; preds = %293
  br label %313, !dbg !10769

312:                                              ; preds = %284
  br label %527, !dbg !10767

313:                                              ; preds = %311
  br label %314, !dbg !10760

314:                                              ; preds = %313
  %315 = load ptr, ptr %13, align 8, !dbg !10773
  %316 = load ptr, ptr %9, align 8, !dbg !10774
  %317 = getelementptr inbounds %struct.request_parser_helper, ptr %316, i32 0, i32 10, !dbg !10775
  %318 = getelementptr inbounds %struct.lwan_value_t_, ptr %317, i32 0, i32 0, !dbg !10776
  store ptr %315, ptr %318, align 8, !dbg !10777
  %319 = load i64, ptr %14, align 8, !dbg !10778
  %320 = load ptr, ptr %9, align 8, !dbg !10779
  %321 = getelementptr inbounds %struct.request_parser_helper, ptr %320, i32 0, i32 10, !dbg !10780
  %322 = getelementptr inbounds %struct.lwan_value_t_, ptr %321, i32 0, i32 1, !dbg !10781
  store i64 %319, ptr %322, align 8, !dbg !10782
  br label %526, !dbg !10783

323:                                              ; preds = %47
  br label %324, !dbg !10784

324:                                              ; preds = %323
  call void @llvm.dbg.declare(metadata ptr %19, metadata !10785, metadata !DIExpression()), !dbg !10787
  %325 = load ptr, ptr %12, align 8, !dbg !10787
  %326 = getelementptr inbounds i8, ptr %325, i64 10, !dbg !10787
  store ptr %326, ptr %12, align 8, !dbg !10787
  %327 = load ptr, ptr %12, align 8, !dbg !10788
  %328 = load ptr, ptr %11, align 8, !dbg !10788
  %329 = icmp uge ptr %327, %328, !dbg !10788
  br i1 %329, label %330, label %331, !dbg !10787

330:                                              ; preds = %324
  store ptr null, ptr %8, align 8, !dbg !10788
  br label %544, !dbg !10788

331:                                              ; preds = %324
  %332 = load ptr, ptr %12, align 8, !dbg !10790
  %333 = getelementptr inbounds i8, ptr %332, i32 1, !dbg !10790
  store ptr %333, ptr %12, align 8, !dbg !10790
  %334 = load i8, ptr %332, align 1, !dbg !10790
  %335 = sext i8 %334 to i32, !dbg !10790
  %336 = icmp ne i32 %335, 58, !dbg !10790
  %337 = zext i1 %336 to i32, !dbg !10790
  %338 = sext i32 %337 to i64, !dbg !10790
  %339 = icmp ne i64 %338, 0, !dbg !10790
  br i1 %339, label %340, label %341, !dbg !10787

340:                                              ; preds = %331
  br label %527, !dbg !10790

341:                                              ; preds = %331
  %342 = load ptr, ptr %12, align 8, !dbg !10792
  %343 = getelementptr inbounds i8, ptr %342, i32 1, !dbg !10792
  store ptr %343, ptr %12, align 8, !dbg !10792
  %344 = load i8, ptr %342, align 1, !dbg !10792
  %345 = sext i8 %344 to i32, !dbg !10792
  %346 = icmp ne i32 %345, 32, !dbg !10792
  %347 = zext i1 %346 to i32, !dbg !10792
  %348 = sext i32 %347 to i64, !dbg !10792
  %349 = icmp ne i64 %348, 0, !dbg !10792
  br i1 %349, label %350, label %351, !dbg !10787

350:                                              ; preds = %341
  br label %527, !dbg !10792

351:                                              ; preds = %341
  %352 = load ptr, ptr %12, align 8, !dbg !10794
  %353 = call ptr @strchr(ptr noundef %352, i32 noundef 13) #22, !dbg !10794
  store ptr %353, ptr %19, align 8, !dbg !10794
  %354 = icmp ne ptr %353, null, !dbg !10794
  %355 = xor i1 %354, true, !dbg !10794
  %356 = xor i1 %355, true, !dbg !10794
  %357 = zext i1 %356 to i32, !dbg !10794
  %358 = sext i32 %357 to i64, !dbg !10794
  %359 = icmp ne i64 %358, 0, !dbg !10794
  br i1 %359, label %360, label %379, !dbg !10787

360:                                              ; preds = %351
  %361 = load ptr, ptr %19, align 8, !dbg !10796
  store i8 0, ptr %361, align 1, !dbg !10796
  %362 = load ptr, ptr %12, align 8, !dbg !10796
  store ptr %362, ptr %13, align 8, !dbg !10796
  %363 = load ptr, ptr %19, align 8, !dbg !10796
  %364 = getelementptr inbounds i8, ptr %363, i64 1, !dbg !10796
  store ptr %364, ptr %12, align 8, !dbg !10796
  %365 = load ptr, ptr %19, align 8, !dbg !10796
  %366 = load ptr, ptr %13, align 8, !dbg !10796
  %367 = ptrtoint ptr %365 to i64, !dbg !10796
  %368 = ptrtoint ptr %366 to i64, !dbg !10796
  %369 = sub i64 %367, %368, !dbg !10796
  store i64 %369, ptr %14, align 8, !dbg !10796
  %370 = load ptr, ptr %12, align 8, !dbg !10798
  %371 = load i8, ptr %370, align 1, !dbg !10798
  %372 = sext i8 %371 to i32, !dbg !10798
  %373 = icmp ne i32 %372, 10, !dbg !10798
  %374 = zext i1 %373 to i32, !dbg !10798
  %375 = sext i32 %374 to i64, !dbg !10798
  %376 = icmp ne i64 %375, 0, !dbg !10798
  br i1 %376, label %377, label %378, !dbg !10796

377:                                              ; preds = %360
  br label %527, !dbg !10798

378:                                              ; preds = %360
  br label %380, !dbg !10796

379:                                              ; preds = %351
  br label %527, !dbg !10794

380:                                              ; preds = %378
  br label %381, !dbg !10787

381:                                              ; preds = %380
  %382 = load ptr, ptr %13, align 8, !dbg !10800
  %383 = load i8, ptr %382, align 1, !dbg !10801
  %384 = sext i8 %383 to i32, !dbg !10801
  %385 = or i32 %384, 32, !dbg !10802
  %386 = trunc i32 %385 to i8, !dbg !10803
  %387 = load ptr, ptr %9, align 8, !dbg !10804
  %388 = getelementptr inbounds %struct.request_parser_helper, ptr %387, i32 0, i32 11, !dbg !10805
  store i8 %386, ptr %388, align 8, !dbg !10806
  br label %526, !dbg !10807

389:                                              ; preds = %47
  %390 = load ptr, ptr %12, align 8, !dbg !10808
  %391 = getelementptr inbounds i8, ptr %390, i64 7, !dbg !10808
  store ptr %391, ptr %12, align 8, !dbg !10808
  br label %28, !dbg !10809

392:                                              ; preds = %47
  br label %393, !dbg !10810

393:                                              ; preds = %392
  call void @llvm.dbg.declare(metadata ptr %20, metadata !10811, metadata !DIExpression()), !dbg !10813
  %394 = load ptr, ptr %12, align 8, !dbg !10813
  %395 = getelementptr inbounds i8, ptr %394, i64 17, !dbg !10813
  store ptr %395, ptr %12, align 8, !dbg !10813
  %396 = load ptr, ptr %12, align 8, !dbg !10814
  %397 = load ptr, ptr %11, align 8, !dbg !10814
  %398 = icmp uge ptr %396, %397, !dbg !10814
  br i1 %398, label %399, label %400, !dbg !10813

399:                                              ; preds = %393
  store ptr null, ptr %8, align 8, !dbg !10814
  br label %544, !dbg !10814

400:                                              ; preds = %393
  %401 = load ptr, ptr %12, align 8, !dbg !10816
  %402 = getelementptr inbounds i8, ptr %401, i32 1, !dbg !10816
  store ptr %402, ptr %12, align 8, !dbg !10816
  %403 = load i8, ptr %401, align 1, !dbg !10816
  %404 = sext i8 %403 to i32, !dbg !10816
  %405 = icmp ne i32 %404, 58, !dbg !10816
  %406 = zext i1 %405 to i32, !dbg !10816
  %407 = sext i32 %406 to i64, !dbg !10816
  %408 = icmp ne i64 %407, 0, !dbg !10816
  br i1 %408, label %409, label %410, !dbg !10813

409:                                              ; preds = %400
  br label %527, !dbg !10816

410:                                              ; preds = %400
  %411 = load ptr, ptr %12, align 8, !dbg !10818
  %412 = getelementptr inbounds i8, ptr %411, i32 1, !dbg !10818
  store ptr %412, ptr %12, align 8, !dbg !10818
  %413 = load i8, ptr %411, align 1, !dbg !10818
  %414 = sext i8 %413 to i32, !dbg !10818
  %415 = icmp ne i32 %414, 32, !dbg !10818
  %416 = zext i1 %415 to i32, !dbg !10818
  %417 = sext i32 %416 to i64, !dbg !10818
  %418 = icmp ne i64 %417, 0, !dbg !10818
  br i1 %418, label %419, label %420, !dbg !10813

419:                                              ; preds = %410
  br label %527, !dbg !10818

420:                                              ; preds = %410
  %421 = load ptr, ptr %12, align 8, !dbg !10820
  %422 = call ptr @strchr(ptr noundef %421, i32 noundef 13) #22, !dbg !10820
  store ptr %422, ptr %20, align 8, !dbg !10820
  %423 = icmp ne ptr %422, null, !dbg !10820
  %424 = xor i1 %423, true, !dbg !10820
  %425 = xor i1 %424, true, !dbg !10820
  %426 = zext i1 %425 to i32, !dbg !10820
  %427 = sext i32 %426 to i64, !dbg !10820
  %428 = icmp ne i64 %427, 0, !dbg !10820
  br i1 %428, label %429, label %448, !dbg !10813

429:                                              ; preds = %420
  %430 = load ptr, ptr %20, align 8, !dbg !10822
  store i8 0, ptr %430, align 1, !dbg !10822
  %431 = load ptr, ptr %12, align 8, !dbg !10822
  store ptr %431, ptr %13, align 8, !dbg !10822
  %432 = load ptr, ptr %20, align 8, !dbg !10822
  %433 = getelementptr inbounds i8, ptr %432, i64 1, !dbg !10822
  store ptr %433, ptr %12, align 8, !dbg !10822
  %434 = load ptr, ptr %20, align 8, !dbg !10822
  %435 = load ptr, ptr %13, align 8, !dbg !10822
  %436 = ptrtoint ptr %434 to i64, !dbg !10822
  %437 = ptrtoint ptr %435 to i64, !dbg !10822
  %438 = sub i64 %436, %437, !dbg !10822
  store i64 %438, ptr %14, align 8, !dbg !10822
  %439 = load ptr, ptr %12, align 8, !dbg !10824
  %440 = load i8, ptr %439, align 1, !dbg !10824
  %441 = sext i8 %440 to i32, !dbg !10824
  %442 = icmp ne i32 %441, 10, !dbg !10824
  %443 = zext i1 %442 to i32, !dbg !10824
  %444 = sext i32 %443 to i64, !dbg !10824
  %445 = icmp ne i64 %444, 0, !dbg !10824
  br i1 %445, label %446, label %447, !dbg !10822

446:                                              ; preds = %429
  br label %527, !dbg !10824

447:                                              ; preds = %429
  br label %449, !dbg !10822

448:                                              ; preds = %420
  br label %527, !dbg !10820

449:                                              ; preds = %447
  br label %450, !dbg !10813

450:                                              ; preds = %449
  %451 = load ptr, ptr %13, align 8, !dbg !10826
  %452 = load ptr, ptr %9, align 8, !dbg !10827
  %453 = getelementptr inbounds %struct.request_parser_helper, ptr %452, i32 0, i32 3, !dbg !10828
  %454 = getelementptr inbounds %struct.lwan_value_t_, ptr %453, i32 0, i32 0, !dbg !10829
  store ptr %451, ptr %454, align 8, !dbg !10830
  %455 = load i64, ptr %14, align 8, !dbg !10831
  %456 = load ptr, ptr %9, align 8, !dbg !10832
  %457 = getelementptr inbounds %struct.request_parser_helper, ptr %456, i32 0, i32 3, !dbg !10833
  %458 = getelementptr inbounds %struct.lwan_value_t_, ptr %457, i32 0, i32 1, !dbg !10834
  store i64 %455, ptr %458, align 8, !dbg !10835
  br label %526, !dbg !10836

459:                                              ; preds = %47
  br label %460, !dbg !10837

460:                                              ; preds = %459
  call void @llvm.dbg.declare(metadata ptr %21, metadata !10838, metadata !DIExpression()), !dbg !10840
  %461 = load ptr, ptr %12, align 8, !dbg !10840
  %462 = getelementptr inbounds i8, ptr %461, i64 5, !dbg !10840
  store ptr %462, ptr %12, align 8, !dbg !10840
  %463 = load ptr, ptr %12, align 8, !dbg !10841
  %464 = load ptr, ptr %11, align 8, !dbg !10841
  %465 = icmp uge ptr %463, %464, !dbg !10841
  br i1 %465, label %466, label %467, !dbg !10840

466:                                              ; preds = %460
  store ptr null, ptr %8, align 8, !dbg !10841
  br label %544, !dbg !10841

467:                                              ; preds = %460
  %468 = load ptr, ptr %12, align 8, !dbg !10843
  %469 = getelementptr inbounds i8, ptr %468, i32 1, !dbg !10843
  store ptr %469, ptr %12, align 8, !dbg !10843
  %470 = load i8, ptr %468, align 1, !dbg !10843
  %471 = sext i8 %470 to i32, !dbg !10843
  %472 = icmp ne i32 %471, 58, !dbg !10843
  %473 = zext i1 %472 to i32, !dbg !10843
  %474 = sext i32 %473 to i64, !dbg !10843
  %475 = icmp ne i64 %474, 0, !dbg !10843
  br i1 %475, label %476, label %477, !dbg !10840

476:                                              ; preds = %467
  br label %527, !dbg !10843

477:                                              ; preds = %467
  %478 = load ptr, ptr %12, align 8, !dbg !10845
  %479 = getelementptr inbounds i8, ptr %478, i32 1, !dbg !10845
  store ptr %479, ptr %12, align 8, !dbg !10845
  %480 = load i8, ptr %478, align 1, !dbg !10845
  %481 = sext i8 %480 to i32, !dbg !10845
  %482 = icmp ne i32 %481, 32, !dbg !10845
  %483 = zext i1 %482 to i32, !dbg !10845
  %484 = sext i32 %483 to i64, !dbg !10845
  %485 = icmp ne i64 %484, 0, !dbg !10845
  br i1 %485, label %486, label %487, !dbg !10840

486:                                              ; preds = %477
  br label %527, !dbg !10845

487:                                              ; preds = %477
  %488 = load ptr, ptr %12, align 8, !dbg !10847
  %489 = call ptr @strchr(ptr noundef %488, i32 noundef 13) #22, !dbg !10847
  store ptr %489, ptr %21, align 8, !dbg !10847
  %490 = icmp ne ptr %489, null, !dbg !10847
  %491 = xor i1 %490, true, !dbg !10847
  %492 = xor i1 %491, true, !dbg !10847
  %493 = zext i1 %492 to i32, !dbg !10847
  %494 = sext i32 %493 to i64, !dbg !10847
  %495 = icmp ne i64 %494, 0, !dbg !10847
  br i1 %495, label %496, label %515, !dbg !10840

496:                                              ; preds = %487
  %497 = load ptr, ptr %21, align 8, !dbg !10849
  store i8 0, ptr %497, align 1, !dbg !10849
  %498 = load ptr, ptr %12, align 8, !dbg !10849
  store ptr %498, ptr %13, align 8, !dbg !10849
  %499 = load ptr, ptr %21, align 8, !dbg !10849
  %500 = getelementptr inbounds i8, ptr %499, i64 1, !dbg !10849
  store ptr %500, ptr %12, align 8, !dbg !10849
  %501 = load ptr, ptr %21, align 8, !dbg !10849
  %502 = load ptr, ptr %13, align 8, !dbg !10849
  %503 = ptrtoint ptr %501 to i64, !dbg !10849
  %504 = ptrtoint ptr %502 to i64, !dbg !10849
  %505 = sub i64 %503, %504, !dbg !10849
  store i64 %505, ptr %14, align 8, !dbg !10849
  %506 = load ptr, ptr %12, align 8, !dbg !10851
  %507 = load i8, ptr %506, align 1, !dbg !10851
  %508 = sext i8 %507 to i32, !dbg !10851
  %509 = icmp ne i32 %508, 10, !dbg !10851
  %510 = zext i1 %509 to i32, !dbg !10851
  %511 = sext i32 %510 to i64, !dbg !10851
  %512 = icmp ne i64 %511, 0, !dbg !10851
  br i1 %512, label %513, label %514, !dbg !10849

513:                                              ; preds = %496
  br label %527, !dbg !10851

514:                                              ; preds = %496
  br label %516, !dbg !10849

515:                                              ; preds = %487
  br label %527, !dbg !10847

516:                                              ; preds = %514
  br label %517, !dbg !10840

517:                                              ; preds = %516
  %518 = load ptr, ptr %13, align 8, !dbg !10853
  %519 = load ptr, ptr %9, align 8, !dbg !10854
  %520 = getelementptr inbounds %struct.request_parser_helper, ptr %519, i32 0, i32 4, !dbg !10855
  %521 = getelementptr inbounds %struct.lwan_value_t_, ptr %520, i32 0, i32 0, !dbg !10856
  store ptr %518, ptr %521, align 8, !dbg !10857
  %522 = load i64, ptr %14, align 8, !dbg !10858
  %523 = load ptr, ptr %9, align 8, !dbg !10859
  %524 = getelementptr inbounds %struct.request_parser_helper, ptr %523, i32 0, i32 4, !dbg !10860
  %525 = getelementptr inbounds %struct.lwan_value_t_, ptr %524, i32 0, i32 1, !dbg !10861
  store i64 %522, ptr %525, align 8, !dbg !10862
  br label %526, !dbg !10863

526:                                              ; preds = %517, %450, %381, %314, %244, %177, %110, %47
  br label %527, !dbg !10864

527:                                              ; preds = %526, %515, %513, %486, %476, %448, %446, %419, %409, %379, %377, %350, %340, %312, %310, %283, %273, %242, %240, %213, %203, %175, %173, %146, %136, %108, %106, %79, %69
  call void @llvm.dbg.label(metadata !10865), !dbg !10866
  %528 = load ptr, ptr %12, align 8, !dbg !10867
  %529 = load ptr, ptr %11, align 8, !dbg !10868
  %530 = load ptr, ptr %12, align 8, !dbg !10869
  %531 = ptrtoint ptr %529 to i64, !dbg !10870
  %532 = ptrtoint ptr %530 to i64, !dbg !10870
  %533 = sub i64 %531, %532, !dbg !10870
  %534 = call ptr @memchr(ptr noundef %528, i32 noundef 10, i64 noundef %533) #22, !dbg !10871
  store ptr %534, ptr %12, align 8, !dbg !10872
  %535 = load ptr, ptr %12, align 8, !dbg !10873
  %536 = icmp ne ptr %535, null, !dbg !10873
  br i1 %536, label %538, label %537, !dbg !10875

537:                                              ; preds = %527
  br label %542, !dbg !10876

538:                                              ; preds = %527
  br label %539, !dbg !10877

539:                                              ; preds = %538
  %540 = load ptr, ptr %12, align 8, !dbg !10878
  %541 = getelementptr inbounds i8, ptr %540, i32 1, !dbg !10878
  store ptr %541, ptr %12, align 8, !dbg !10878
  store ptr %541, ptr %10, align 8, !dbg !10879
  br label %23, !dbg !10880, !llvm.loop !10881

542:                                              ; preds = %537, %33, %23
  %543 = load ptr, ptr %10, align 8, !dbg !10883
  store ptr %543, ptr %8, align 8, !dbg !10884
  br label %544, !dbg !10884

544:                                              ; preds = %542, %466, %399, %330, %263, %193, %126, %59, %39
  %545 = load ptr, ptr %8, align 8, !dbg !10885
  ret ptr %545, !dbg !10885
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @read_post_data(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !10886 {
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i64, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !10889, metadata !DIExpression()), !dbg !10890
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !10891, metadata !DIExpression()), !dbg !10892
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !10893, metadata !DIExpression()), !dbg !10894
  call void @llvm.dbg.declare(metadata ptr %8, metadata !10895, metadata !DIExpression()), !dbg !10896
  %12 = load ptr, ptr %6, align 8, !dbg !10897
  %13 = getelementptr inbounds %struct.request_parser_helper, ptr %12, i32 0, i32 1, !dbg !10897
  %14 = load ptr, ptr %13, align 8, !dbg !10897
  %15 = icmp ne ptr %14, null, !dbg !10897
  %16 = xor i1 %15, true, !dbg !10897
  %17 = zext i1 %16 to i32, !dbg !10897
  %18 = sext i32 %17 to i64, !dbg !10897
  %19 = icmp ne i64 %18, 0, !dbg !10897
  br i1 %19, label %20, label %21, !dbg !10899

20:                                               ; preds = %3
  store i32 400, ptr %4, align 4, !dbg !10900
  br label %96, !dbg !10900

21:                                               ; preds = %3
  %22 = load ptr, ptr %6, align 8, !dbg !10901
  %23 = getelementptr inbounds %struct.request_parser_helper, ptr %22, i32 0, i32 7, !dbg !10901
  %24 = getelementptr inbounds %struct.lwan_value_t_, ptr %23, i32 0, i32 0, !dbg !10901
  %25 = load ptr, ptr %24, align 8, !dbg !10901
  %26 = icmp ne ptr %25, null, !dbg !10901
  %27 = xor i1 %26, true, !dbg !10901
  %28 = zext i1 %27 to i32, !dbg !10901
  %29 = sext i32 %28 to i64, !dbg !10901
  %30 = icmp ne i64 %29, 0, !dbg !10901
  br i1 %30, label %31, label %32, !dbg !10903

31:                                               ; preds = %21
  store i32 400, ptr %4, align 4, !dbg !10904
  br label %96, !dbg !10904

32:                                               ; preds = %21
  %33 = load ptr, ptr %6, align 8, !dbg !10905
  %34 = getelementptr inbounds %struct.request_parser_helper, ptr %33, i32 0, i32 7, !dbg !10906
  %35 = getelementptr inbounds %struct.lwan_value_t_, ptr %34, i32 0, i32 0, !dbg !10907
  %36 = load ptr, ptr %35, align 8, !dbg !10907
  %37 = call i64 @parse_long(ptr noundef %36, i64 noundef 4096), !dbg !10908
  store i64 %37, ptr %8, align 8, !dbg !10909
  %38 = load i64, ptr %8, align 8, !dbg !10910
  %39 = icmp sgt i64 %38, 4096, !dbg !10910
  %40 = zext i1 %39 to i32, !dbg !10910
  %41 = sext i32 %40 to i64, !dbg !10910
  %42 = icmp ne i64 %41, 0, !dbg !10910
  br i1 %42, label %43, label %44, !dbg !10912

43:                                               ; preds = %32
  store i32 413, ptr %4, align 4, !dbg !10913
  br label %96, !dbg !10913

44:                                               ; preds = %32
  %45 = load i64, ptr %8, align 8, !dbg !10914
  %46 = icmp slt i64 %45, 0, !dbg !10914
  %47 = zext i1 %46 to i32, !dbg !10914
  %48 = sext i32 %47 to i64, !dbg !10914
  %49 = icmp ne i64 %48, 0, !dbg !10914
  br i1 %49, label %50, label %51, !dbg !10916

50:                                               ; preds = %44
  store i32 400, ptr %4, align 4, !dbg !10917
  br label %96, !dbg !10917

51:                                               ; preds = %44
  call void @llvm.dbg.declare(metadata ptr %9, metadata !10918, metadata !DIExpression()), !dbg !10919
  %52 = load i64, ptr %8, align 8, !dbg !10920
  store i64 %52, ptr %9, align 8, !dbg !10919
  call void @llvm.dbg.declare(metadata ptr %10, metadata !10921, metadata !DIExpression()), !dbg !10922
  %53 = load ptr, ptr %6, align 8, !dbg !10923
  %54 = getelementptr inbounds %struct.request_parser_helper, ptr %53, i32 0, i32 0, !dbg !10924
  %55 = load ptr, ptr %54, align 8, !dbg !10924
  %56 = getelementptr inbounds %struct.lwan_value_t_, ptr %55, i32 0, i32 0, !dbg !10925
  %57 = load ptr, ptr %56, align 8, !dbg !10925
  %58 = load ptr, ptr %6, align 8, !dbg !10926
  %59 = getelementptr inbounds %struct.request_parser_helper, ptr %58, i32 0, i32 0, !dbg !10927
  %60 = load ptr, ptr %59, align 8, !dbg !10927
  %61 = getelementptr inbounds %struct.lwan_value_t_, ptr %60, i32 0, i32 1, !dbg !10928
  %62 = load i64, ptr %61, align 8, !dbg !10928
  %63 = getelementptr inbounds i8, ptr %57, i64 %62, !dbg !10929
  store ptr %63, ptr %10, align 8, !dbg !10922
  call void @llvm.dbg.declare(metadata ptr %11, metadata !10930, metadata !DIExpression()), !dbg !10931
  %64 = load ptr, ptr %10, align 8, !dbg !10932
  %65 = load ptr, ptr %6, align 8, !dbg !10933
  %66 = getelementptr inbounds %struct.request_parser_helper, ptr %65, i32 0, i32 1, !dbg !10934
  %67 = load ptr, ptr %66, align 8, !dbg !10934
  %68 = ptrtoint ptr %64 to i64, !dbg !10935
  %69 = ptrtoint ptr %67 to i64, !dbg !10935
  %70 = sub i64 %68, %69, !dbg !10935
  store i64 %70, ptr %11, align 8, !dbg !10931
  %71 = load i64, ptr %11, align 8, !dbg !10936
  %72 = load i64, ptr %9, align 8, !dbg !10938
  %73 = icmp eq i64 %71, %72, !dbg !10939
  br i1 %73, label %74, label %90, !dbg !10940

74:                                               ; preds = %51
  %75 = load ptr, ptr %6, align 8, !dbg !10941
  %76 = getelementptr inbounds %struct.request_parser_helper, ptr %75, i32 0, i32 1, !dbg !10943
  %77 = load ptr, ptr %76, align 8, !dbg !10943
  %78 = load ptr, ptr %6, align 8, !dbg !10944
  %79 = getelementptr inbounds %struct.request_parser_helper, ptr %78, i32 0, i32 8, !dbg !10945
  %80 = getelementptr inbounds %struct.lwan_value_t_, ptr %79, i32 0, i32 0, !dbg !10946
  store ptr %77, ptr %80, align 8, !dbg !10947
  %81 = load i64, ptr %9, align 8, !dbg !10948
  %82 = load ptr, ptr %6, align 8, !dbg !10949
  %83 = getelementptr inbounds %struct.request_parser_helper, ptr %82, i32 0, i32 8, !dbg !10950
  %84 = getelementptr inbounds %struct.lwan_value_t_, ptr %83, i32 0, i32 1, !dbg !10951
  store i64 %81, ptr %84, align 8, !dbg !10952
  %85 = load i64, ptr %9, align 8, !dbg !10953
  %86 = load ptr, ptr %6, align 8, !dbg !10954
  %87 = getelementptr inbounds %struct.request_parser_helper, ptr %86, i32 0, i32 1, !dbg !10955
  %88 = load ptr, ptr %87, align 8, !dbg !10956
  %89 = getelementptr inbounds i8, ptr %88, i64 %85, !dbg !10956
  store ptr %89, ptr %87, align 8, !dbg !10956
  store i32 200, ptr %4, align 4, !dbg !10957
  br label %96, !dbg !10957

90:                                               ; preds = %51
  %91 = load i64, ptr %9, align 8, !dbg !10958
  %92 = load i64, ptr %11, align 8, !dbg !10960
  %93 = icmp ugt i64 %91, %92, !dbg !10961
  br i1 %93, label %94, label %95, !dbg !10962

94:                                               ; preds = %90
  store i32 413, ptr %4, align 4, !dbg !10963
  br label %96, !dbg !10963

95:                                               ; preds = %90
  store i32 501, ptr %4, align 4, !dbg !10964
  br label %96, !dbg !10964

96:                                               ; preds = %95, %94, %74, %50, %43, %31, %20
  %97 = load i32, ptr %4, align 4, !dbg !10965
  ret i32 %97, !dbg !10965
}

; Function Attrs: nounwind willreturn memory(read)
declare ptr @memrchr(ptr noundef, i32 noundef, i64 noundef) #6

; Function Attrs: nounwind willreturn memory(read)
declare i32 @memcmp(ptr noundef, ptr noundef, i64 noundef) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @lwan_request_get_query_param(ptr noundef %0, ptr noundef %1) #0 !dbg !10966 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !10969, metadata !DIExpression()), !dbg !10970
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !10971, metadata !DIExpression()), !dbg !10972
  %5 = load ptr, ptr %3, align 8, !dbg !10973
  %6 = getelementptr inbounds %struct.lwan_request_t_, ptr %5, i32 0, i32 5, !dbg !10974
  %7 = getelementptr inbounds %struct.lwan_value_t_, ptr %6, i32 0, i32 0, !dbg !10975
  %8 = load ptr, ptr %7, align 8, !dbg !10975
  %9 = load ptr, ptr %3, align 8, !dbg !10976
  %10 = getelementptr inbounds %struct.lwan_request_t_, ptr %9, i32 0, i32 5, !dbg !10977
  %11 = getelementptr inbounds %struct.lwan_value_t_, ptr %10, i32 0, i32 1, !dbg !10978
  %12 = load i64, ptr %11, align 8, !dbg !10978
  %13 = load ptr, ptr %4, align 8, !dbg !10979
  %14 = call ptr @value_array_bsearch(ptr noundef %8, i64 noundef %12, ptr noundef %13), !dbg !10980
  ret ptr %14, !dbg !10981
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @value_array_bsearch(ptr noundef %0, i64 noundef %1, ptr noundef %2) #0 !dbg !10982 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i64, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i32, align 4
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !10985, metadata !DIExpression()), !dbg !10986
  store i64 %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !10987, metadata !DIExpression()), !dbg !10988
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !10989, metadata !DIExpression()), !dbg !10990
  %14 = load i64, ptr %6, align 8, !dbg !10991
  %15 = icmp ne i64 %14, 0, !dbg !10991
  %16 = xor i1 %15, true, !dbg !10991
  %17 = zext i1 %16 to i32, !dbg !10991
  %18 = sext i32 %17 to i64, !dbg !10991
  %19 = icmp ne i64 %18, 0, !dbg !10991
  br i1 %19, label %20, label %21, !dbg !10993

20:                                               ; preds = %3
  store ptr null, ptr %4, align 8, !dbg !10994
  br label %65, !dbg !10994

21:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata ptr %8, metadata !10995, metadata !DIExpression()), !dbg !10996
  store i64 0, ptr %8, align 8, !dbg !10996
  call void @llvm.dbg.declare(metadata ptr %9, metadata !10997, metadata !DIExpression()), !dbg !10998
  %22 = load i64, ptr %6, align 8, !dbg !10999
  store i64 %22, ptr %9, align 8, !dbg !10998
  call void @llvm.dbg.declare(metadata ptr %10, metadata !11000, metadata !DIExpression()), !dbg !11001
  %23 = load ptr, ptr %7, align 8, !dbg !11002
  %24 = call i64 @strlen(ptr noundef %23) #22, !dbg !11003
  store i64 %24, ptr %10, align 8, !dbg !11001
  br label %25, !dbg !11004

25:                                               ; preds = %63, %21
  %26 = load i64, ptr %8, align 8, !dbg !11005
  %27 = load i64, ptr %9, align 8, !dbg !11006
  %28 = icmp ult i64 %26, %27, !dbg !11007
  br i1 %28, label %29, label %64, !dbg !11004

29:                                               ; preds = %25
  call void @llvm.dbg.declare(metadata ptr %11, metadata !11008, metadata !DIExpression()), !dbg !11010
  %30 = load i64, ptr %8, align 8, !dbg !11011
  %31 = load i64, ptr %9, align 8, !dbg !11012
  %32 = add i64 %30, %31, !dbg !11013
  %33 = udiv i64 %32, 2, !dbg !11014
  store i64 %33, ptr %11, align 8, !dbg !11010
  call void @llvm.dbg.declare(metadata ptr %12, metadata !11015, metadata !DIExpression()), !dbg !11016
  %34 = load ptr, ptr %5, align 8, !dbg !11017
  %35 = load i64, ptr %11, align 8, !dbg !11018
  %36 = getelementptr inbounds %struct.list_node, ptr %34, i64 %35, !dbg !11019
  store ptr %36, ptr %12, align 8, !dbg !11016
  call void @llvm.dbg.declare(metadata ptr %13, metadata !11020, metadata !DIExpression()), !dbg !11021
  %37 = load ptr, ptr %7, align 8, !dbg !11022
  %38 = load ptr, ptr %12, align 8, !dbg !11023
  %39 = getelementptr inbounds %struct.list_node, ptr %38, i32 0, i32 0, !dbg !11024
  %40 = load ptr, ptr %39, align 8, !dbg !11024
  %41 = load i64, ptr %10, align 8, !dbg !11025
  %42 = call i32 @strncmp(ptr noundef %37, ptr noundef %40, i64 noundef %41) #22, !dbg !11026
  store i32 %42, ptr %13, align 4, !dbg !11021
  %43 = load i32, ptr %13, align 4, !dbg !11027
  %44 = icmp ne i32 %43, 0, !dbg !11027
  %45 = xor i1 %44, true, !dbg !11027
  %46 = xor i1 %45, true, !dbg !11027
  %47 = xor i1 %46, true, !dbg !11027
  %48 = zext i1 %47 to i32, !dbg !11027
  %49 = sext i32 %48 to i64, !dbg !11027
  %50 = icmp ne i64 %49, 0, !dbg !11027
  br i1 %50, label %51, label %55, !dbg !11029

51:                                               ; preds = %29
  %52 = load ptr, ptr %12, align 8, !dbg !11030
  %53 = getelementptr inbounds %struct.list_node, ptr %52, i32 0, i32 1, !dbg !11031
  %54 = load ptr, ptr %53, align 8, !dbg !11031
  store ptr %54, ptr %4, align 8, !dbg !11032
  br label %65, !dbg !11032

55:                                               ; preds = %29
  %56 = load i32, ptr %13, align 4, !dbg !11033
  %57 = icmp sgt i32 %56, 0, !dbg !11035
  br i1 %57, label %58, label %61, !dbg !11036

58:                                               ; preds = %55
  %59 = load i64, ptr %11, align 8, !dbg !11037
  %60 = add i64 %59, 1, !dbg !11038
  store i64 %60, ptr %8, align 8, !dbg !11039
  br label %63, !dbg !11040

61:                                               ; preds = %55
  %62 = load i64, ptr %11, align 8, !dbg !11041
  store i64 %62, ptr %9, align 8, !dbg !11042
  br label %63

63:                                               ; preds = %61, %58
  br label %25, !dbg !11004, !llvm.loop !11043

64:                                               ; preds = %25
  store ptr null, ptr %4, align 8, !dbg !11045
  br label %65, !dbg !11045

65:                                               ; preds = %64, %51, %20
  %66 = load ptr, ptr %4, align 8, !dbg !11046
  ret ptr %66, !dbg !11046
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @lwan_request_get_post_param(ptr noundef %0, ptr noundef %1) #0 !dbg !11047 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !11048, metadata !DIExpression()), !dbg !11049
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !11050, metadata !DIExpression()), !dbg !11051
  %5 = load ptr, ptr %3, align 8, !dbg !11052
  %6 = getelementptr inbounds %struct.lwan_request_t_, ptr %5, i32 0, i32 6, !dbg !11053
  %7 = getelementptr inbounds %struct.lwan_value_t_, ptr %6, i32 0, i32 0, !dbg !11054
  %8 = load ptr, ptr %7, align 8, !dbg !11054
  %9 = load ptr, ptr %3, align 8, !dbg !11055
  %10 = getelementptr inbounds %struct.lwan_request_t_, ptr %9, i32 0, i32 6, !dbg !11056
  %11 = getelementptr inbounds %struct.lwan_value_t_, ptr %10, i32 0, i32 1, !dbg !11057
  %12 = load i64, ptr %11, align 8, !dbg !11057
  %13 = load ptr, ptr %4, align 8, !dbg !11058
  %14 = call ptr @value_array_bsearch(ptr noundef %8, i64 noundef %12, ptr noundef %13), !dbg !11059
  ret ptr %14, !dbg !11060
}

; Function Attrs: alwaysinline nounwind willreturn memory(read) uwtable
define dso_local i32 @lwan_connection_get_fd(ptr noundef %0) #13 !dbg !11061 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !11064, metadata !DIExpression()), !dbg !11065
  %3 = load ptr, ptr %2, align 8, !dbg !11066
  %4 = load ptr, ptr %2, align 8, !dbg !11067
  %5 = getelementptr inbounds %struct.lwan_connection_t_, ptr %4, i32 0, i32 3, !dbg !11068
  %6 = load ptr, ptr %5, align 8, !dbg !11068
  %7 = getelementptr inbounds %struct.lwan_thread_t_, ptr %6, i32 0, i32 0, !dbg !11069
  %8 = load ptr, ptr %7, align 8, !dbg !11069
  %9 = getelementptr inbounds %struct.lwan_t_, ptr %8, i32 0, i32 1, !dbg !11070
  %10 = load ptr, ptr %9, align 8, !dbg !11070
  %11 = ptrtoint ptr %3 to i64, !dbg !11071
  %12 = ptrtoint ptr %10 to i64, !dbg !11071
  %13 = sub i64 %11, %12, !dbg !11071
  %14 = sdiv exact i64 %13, 32, !dbg !11071
  %15 = trunc i64 %14 to i32, !dbg !11072
  ret i32 %15, !dbg !11073
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @lwan_request_get_remote_address(ptr noundef %0, ptr noundef align 1 dereferenceable(46) %1) #0 !dbg !11074 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca %struct.sockaddr_storage, align 8
  %7 = alloca i32, align 4
  %8 = alloca %union.__SOCKADDR_ARG, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !11077, metadata !DIExpression()), !dbg !11078
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !11079, metadata !DIExpression()), !dbg !11080
  call void @llvm.dbg.declare(metadata ptr %6, metadata !11081, metadata !DIExpression()), !dbg !11090
  call void @llvm.memset.p0.i64(ptr align 8 %6, i8 0, i64 128, i1 false), !dbg !11090
  call void @llvm.dbg.declare(metadata ptr %7, metadata !11091, metadata !DIExpression()), !dbg !11093
  store i32 128, ptr %7, align 4, !dbg !11093
  %9 = load ptr, ptr %4, align 8, !dbg !11094
  %10 = getelementptr inbounds %struct.lwan_request_t_, ptr %9, i32 0, i32 1, !dbg !11094
  %11 = load i32, ptr %10, align 4, !dbg !11094
  store ptr %6, ptr %8, align 8, !dbg !11094
  %12 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %8, i32 0, i32 0, !dbg !11094
  %13 = load ptr, ptr %12, align 8, !dbg !11094
  %14 = call i32 @getpeername(i32 noundef %11, ptr %13, ptr noundef %7) #18, !dbg !11094
  %15 = icmp slt i32 %14, 0, !dbg !11094
  %16 = zext i1 %15 to i32, !dbg !11094
  %17 = sext i32 %16 to i64, !dbg !11094
  %18 = icmp ne i64 %17, 0, !dbg !11094
  br i1 %18, label %19, label %20, !dbg !11096

19:                                               ; preds = %2
  store ptr null, ptr %3, align 8, !dbg !11097
  br label %33, !dbg !11097

20:                                               ; preds = %2
  %21 = getelementptr inbounds %struct.sockaddr_storage, ptr %6, i32 0, i32 0, !dbg !11098
  %22 = load i16, ptr %21, align 8, !dbg !11098
  %23 = zext i16 %22 to i32, !dbg !11100
  %24 = icmp eq i32 %23, 2, !dbg !11101
  br i1 %24, label %25, label %29, !dbg !11102

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.sockaddr_in, ptr %6, i32 0, i32 2, !dbg !11103
  %27 = load ptr, ptr %5, align 8, !dbg !11104
  %28 = call ptr @inet_ntop(i32 noundef 2, ptr noundef %26, ptr noundef %27, i32 noundef 46) #18, !dbg !11105
  store ptr %28, ptr %3, align 8, !dbg !11106
  br label %33, !dbg !11106

29:                                               ; preds = %20
  %30 = getelementptr inbounds %struct.sockaddr_in6, ptr %6, i32 0, i32 3, !dbg !11107
  %31 = load ptr, ptr %5, align 8, !dbg !11108
  %32 = call ptr @inet_ntop(i32 noundef 10, ptr noundef %30, ptr noundef %31, i32 noundef 46) #18, !dbg !11109
  store ptr %32, ptr %3, align 8, !dbg !11110
  br label %33, !dbg !11110

33:                                               ; preds = %29, %25, %19
  %34 = load ptr, ptr %3, align 8, !dbg !11111
  ret ptr %34, !dbg !11111
}

; Function Attrs: nounwind
declare i32 @getpeername(i32 noundef, ptr, ptr noundef) #3

; Function Attrs: nounwind
declare ptr @inet_ntop(i32 noundef, ptr noundef, ptr noundef, i32 noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_response_init() #0 !dbg !1576 {
  %1 = load ptr, ptr @error_template, align 8, !dbg !11112
  %2 = icmp ne ptr %1, null, !dbg !11112
  br i1 %2, label %4, label %3, !dbg !11115

3:                                                ; preds = %0
  br label %5, !dbg !11115

4:                                                ; preds = %0
  call void @__assert_fail(ptr noundef @.str.2.94, ptr noundef @.str.3.95, i32 noundef 73, ptr noundef @__PRETTY_FUNCTION__.lwan_response_init) #21, !dbg !11112
  unreachable, !dbg !11112

5:                                                ; preds = %3
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.3.95, i32 noundef 75, ptr noundef @__FUNCTION__.lwan_response_init, ptr noundef @.str.4.96), !dbg !11116
  %6 = load ptr, ptr @error_template_str, align 8, !dbg !11117
  %7 = call ptr @lwan_tpl_compile_string(ptr noundef %6, ptr noundef @lwan_response_init.error_descriptor), !dbg !11118
  store ptr %7, ptr @error_template, align 8, !dbg !11119
  %8 = load ptr, ptr @error_template, align 8, !dbg !11120
  %9 = icmp ne ptr %8, null, !dbg !11120
  %10 = xor i1 %9, true, !dbg !11120
  %11 = zext i1 %10 to i32, !dbg !11120
  %12 = sext i32 %11 to i64, !dbg !11120
  %13 = icmp ne i64 %12, 0, !dbg !11120
  br i1 %13, label %14, label %15, !dbg !11122

14:                                               ; preds = %5
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.3.95, i32 noundef 79, ptr noundef @__FUNCTION__.lwan_response_init, ptr noundef @.str.5.97) #23, !dbg !11123
  unreachable, !dbg !11123

15:                                               ; preds = %5
  ret void, !dbg !11124
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_response_shutdown() #0 !dbg !11125 {
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.3.95, i32 noundef 85, ptr noundef @__FUNCTION__.lwan_response_shutdown, ptr noundef @.str.6.103), !dbg !11126
  %1 = load ptr, ptr @error_template, align 8, !dbg !11127
  %2 = icmp ne ptr %1, null, !dbg !11127
  br i1 %2, label %3, label %4, !dbg !11130

3:                                                ; preds = %0
  br label %5, !dbg !11130

4:                                                ; preds = %0
  call void @__assert_fail(ptr noundef @.str.7.104, ptr noundef @.str.3.95, i32 noundef 86, ptr noundef @__PRETTY_FUNCTION__.lwan_response_shutdown) #21, !dbg !11127
  unreachable, !dbg !11127

5:                                                ; preds = %3
  %6 = load ptr, ptr @error_template, align 8, !dbg !11131
  call void @lwan_tpl_free(ptr noundef %6), !dbg !11132
  ret void, !dbg !11133
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_response(ptr noundef %0, i32 noundef %1) #0 !dbg !11134 {
  %3 = alloca i64, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca [25 x i8], align 16
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca ptr, align 8
  %16 = alloca i64, align 8
  %17 = alloca ptr, align 8
  %18 = alloca i64, align 8
  %19 = alloca ptr, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca ptr, align 8
  %23 = alloca i64, align 8
  %24 = alloca ptr, align 8
  %25 = alloca i32, align 4
  %26 = alloca [512 x i8], align 16
  %27 = alloca i32, align 4
  %28 = alloca i64, align 8
  %29 = alloca [2 x %struct.lwan_value_t_], align 16
  store ptr %0, ptr %24, align 8
  call void @llvm.dbg.declare(metadata ptr %24, metadata !11137, metadata !DIExpression()), !dbg !11138
  store i32 %1, ptr %25, align 4
  call void @llvm.dbg.declare(metadata ptr %25, metadata !11139, metadata !DIExpression()), !dbg !11140
  call void @llvm.dbg.declare(metadata ptr %26, metadata !11141, metadata !DIExpression()), !dbg !11145
  %30 = load ptr, ptr %24, align 8, !dbg !11146
  %31 = getelementptr inbounds %struct.lwan_request_t_, ptr %30, i32 0, i32 0, !dbg !11148
  %32 = load i32, ptr %31, align 8, !dbg !11148
  %33 = and i32 %32, 128, !dbg !11149
  %34 = icmp ne i32 %33, 0, !dbg !11149
  br i1 %34, label %35, label %56, !dbg !11150

35:                                               ; preds = %2
  %36 = load ptr, ptr %24, align 8, !dbg !11151
  %37 = getelementptr inbounds %struct.lwan_request_t_, ptr %36, i32 0, i32 8, !dbg !11151
  %38 = getelementptr inbounds %struct.lwan_response_t_, ptr %37, i32 0, i32 0, !dbg !11151
  %39 = load ptr, ptr %38, align 8, !dbg !11151
  %40 = call zeroext i1 @strbuf_reset_length(ptr noundef %39), !dbg !11151
  %41 = xor i1 %40, true, !dbg !11151
  %42 = zext i1 %41 to i32, !dbg !11151
  %43 = sext i32 %42 to i64, !dbg !11151
  %44 = icmp ne i64 %43, 0, !dbg !11151
  br i1 %44, label %45, label %52, !dbg !11154

45:                                               ; preds = %35
  %46 = load ptr, ptr %24, align 8, !dbg !11155
  %47 = getelementptr inbounds %struct.lwan_request_t_, ptr %46, i32 0, i32 4, !dbg !11156
  %48 = load ptr, ptr %47, align 8, !dbg !11156
  %49 = getelementptr inbounds %struct.lwan_connection_t_, ptr %48, i32 0, i32 2, !dbg !11157
  %50 = load ptr, ptr %49, align 8, !dbg !11157
  %51 = call i32 @coro_yield(ptr noundef %50, i32 noundef -1), !dbg !11158
  br label %52, !dbg !11158

52:                                               ; preds = %45, %35
  %53 = load ptr, ptr %24, align 8, !dbg !11159
  call void @lwan_response_send_chunk(ptr noundef %53), !dbg !11160
  %54 = load ptr, ptr %24, align 8, !dbg !11161
  %55 = load i32, ptr %25, align 4, !dbg !11162
  call void @log_request(ptr noundef %54, i32 noundef %55), !dbg !11163
  br label %604, !dbg !11164

56:                                               ; preds = %2
  %57 = load ptr, ptr %24, align 8, !dbg !11165
  %58 = getelementptr inbounds %struct.lwan_request_t_, ptr %57, i32 0, i32 0, !dbg !11165
  %59 = load i32, ptr %58, align 8, !dbg !11165
  %60 = and i32 %59, 64, !dbg !11165
  %61 = sext i32 %60 to i64, !dbg !11165
  %62 = icmp ne i64 %61, 0, !dbg !11165
  br i1 %62, label %63, label %64, !dbg !11167

63:                                               ; preds = %56
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.3.95, i32 noundef 136, ptr noundef @__FUNCTION__.lwan_response, ptr noundef @.str.8.107), !dbg !11168
  br label %604, !dbg !11170

64:                                               ; preds = %56
  %65 = load ptr, ptr %24, align 8, !dbg !11171
  %66 = getelementptr inbounds %struct.lwan_request_t_, ptr %65, i32 0, i32 8, !dbg !11171
  %67 = getelementptr inbounds %struct.lwan_response_t_, ptr %66, i32 0, i32 1, !dbg !11171
  %68 = load ptr, ptr %67, align 8, !dbg !11171
  %69 = icmp ne ptr %68, null, !dbg !11171
  %70 = xor i1 %69, true, !dbg !11171
  %71 = zext i1 %70 to i32, !dbg !11171
  %72 = sext i32 %71 to i64, !dbg !11171
  %73 = icmp ne i64 %72, 0, !dbg !11171
  br i1 %73, label %74, label %77, !dbg !11173

74:                                               ; preds = %64
  %75 = load ptr, ptr %24, align 8, !dbg !11174
  %76 = load i32, ptr %25, align 4, !dbg !11176
  call void @lwan_default_response(ptr noundef %75, i32 noundef %76), !dbg !11177
  br label %604, !dbg !11178

77:                                               ; preds = %64
  %78 = load ptr, ptr %24, align 8, !dbg !11179
  %79 = load i32, ptr %25, align 4, !dbg !11180
  call void @log_request(ptr noundef %78, i32 noundef %79), !dbg !11181
  %80 = load ptr, ptr %24, align 8, !dbg !11182
  %81 = getelementptr inbounds %struct.lwan_request_t_, ptr %80, i32 0, i32 8, !dbg !11184
  %82 = getelementptr inbounds %struct.lwan_response_t_, ptr %81, i32 0, i32 4, !dbg !11185
  %83 = getelementptr inbounds %struct.anon.1, ptr %82, i32 0, i32 0, !dbg !11186
  %84 = load ptr, ptr %83, align 8, !dbg !11186
  %85 = icmp ne ptr %84, null, !dbg !11182
  br i1 %85, label %86, label %109, !dbg !11187

86:                                               ; preds = %77
  call void @llvm.dbg.declare(metadata ptr %27, metadata !11188, metadata !DIExpression()), !dbg !11190
  %87 = load ptr, ptr %24, align 8, !dbg !11191
  %88 = getelementptr inbounds %struct.lwan_request_t_, ptr %87, i32 0, i32 8, !dbg !11192
  %89 = getelementptr inbounds %struct.lwan_response_t_, ptr %88, i32 0, i32 4, !dbg !11193
  %90 = getelementptr inbounds %struct.anon.1, ptr %89, i32 0, i32 0, !dbg !11194
  %91 = load ptr, ptr %90, align 8, !dbg !11194
  %92 = load ptr, ptr %24, align 8, !dbg !11195
  %93 = load ptr, ptr %24, align 8, !dbg !11196
  %94 = getelementptr inbounds %struct.lwan_request_t_, ptr %93, i32 0, i32 8, !dbg !11197
  %95 = getelementptr inbounds %struct.lwan_response_t_, ptr %94, i32 0, i32 4, !dbg !11198
  %96 = getelementptr inbounds %struct.anon.1, ptr %95, i32 0, i32 1, !dbg !11199
  %97 = load ptr, ptr %96, align 8, !dbg !11199
  %98 = call i32 %91(ptr noundef %92, ptr noundef %97), !dbg !11191
  store i32 %98, ptr %27, align 4, !dbg !11200
  %99 = load ptr, ptr %24, align 8, !dbg !11201
  %100 = getelementptr inbounds %struct.lwan_request_t_, ptr %99, i32 0, i32 8, !dbg !11202
  %101 = getelementptr inbounds %struct.lwan_response_t_, ptr %100, i32 0, i32 4, !dbg !11203
  %102 = getelementptr inbounds %struct.anon.1, ptr %101, i32 0, i32 0, !dbg !11204
  store ptr null, ptr %102, align 8, !dbg !11205
  %103 = load i32, ptr %27, align 4, !dbg !11206
  %104 = icmp uge i32 %103, 400, !dbg !11208
  br i1 %104, label %105, label %108, !dbg !11209

105:                                              ; preds = %86
  %106 = load ptr, ptr %24, align 8, !dbg !11210
  %107 = load i32, ptr %27, align 4, !dbg !11211
  call void @lwan_default_response(ptr noundef %106, i32 noundef %107), !dbg !11212
  br label %108, !dbg !11212

108:                                              ; preds = %105, %86
  br label %604, !dbg !11213

109:                                              ; preds = %77
  call void @llvm.dbg.declare(metadata ptr %28, metadata !11214, metadata !DIExpression()), !dbg !11215
  %110 = load ptr, ptr %24, align 8, !dbg !11216
  %111 = load i32, ptr %25, align 4, !dbg !11217
  %112 = getelementptr inbounds [512 x i8], ptr %26, i64 0, i64 0, !dbg !11218
  store ptr %110, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !11219, metadata !DIExpression()), !dbg !11223
  store i32 %111, ptr %5, align 4
  call void @llvm.dbg.declare(metadata ptr %5, metadata !11225, metadata !DIExpression()), !dbg !11226
  store ptr %112, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !11227, metadata !DIExpression()), !dbg !11228
  store i64 512, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !11229, metadata !DIExpression()), !dbg !11230
  call void @llvm.dbg.declare(metadata ptr %8, metadata !11231, metadata !DIExpression()), !dbg !11232
  call void @llvm.dbg.declare(metadata ptr %9, metadata !11233, metadata !DIExpression()), !dbg !11234
  %113 = load ptr, ptr %6, align 8, !dbg !11235
  %114 = load i64, ptr %7, align 8, !dbg !11236
  %115 = getelementptr inbounds i8, ptr %113, i64 %114, !dbg !11237
  store ptr %115, ptr %9, align 8, !dbg !11234
  call void @llvm.dbg.declare(metadata ptr %10, metadata !11238, metadata !DIExpression()), !dbg !11239
  call void @llvm.dbg.declare(metadata ptr %11, metadata !11240, metadata !DIExpression()), !dbg !11241
  store i8 0, ptr %11, align 1, !dbg !11241
  call void @llvm.dbg.declare(metadata ptr %12, metadata !11242, metadata !DIExpression()), !dbg !11243
  store i8 0, ptr %12, align 1, !dbg !11243
  %116 = load ptr, ptr %6, align 8, !dbg !11244
  store ptr %116, ptr %8, align 8, !dbg !11245
  %117 = load ptr, ptr %4, align 8, !dbg !11246
  %118 = load i32, ptr %117, align 8, !dbg !11248
  %119 = and i32 %118, 32, !dbg !11249
  %120 = icmp ne i32 %119, 0, !dbg !11249
  br i1 %120, label %121, label %132, !dbg !11250

121:                                              ; preds = %109
  %122 = load ptr, ptr %8, align 8, !dbg !11251
  %123 = getelementptr inbounds i8, ptr %122, i64 9, !dbg !11251
  %124 = load ptr, ptr %9, align 8, !dbg !11251
  %125 = icmp uge ptr %123, %124, !dbg !11251
  %126 = zext i1 %125 to i32, !dbg !11251
  %127 = sext i32 %126 to i64, !dbg !11251
  br i1 %125, label %128, label %129, !dbg !11254

128:                                              ; preds = %121
  store i64 0, ptr %3, align 8, !dbg !11251
  br label %558, !dbg !11251

129:                                              ; preds = %121
  %130 = load ptr, ptr %8, align 8, !dbg !11254
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %130, ptr align 1 @.str.10.110, i64 9, i1 false), !dbg !11254
  %131 = getelementptr inbounds i8, ptr %130, i64 9, !dbg !11254
  store ptr %131, ptr %8, align 8, !dbg !11254
  br label %143, !dbg !11254

132:                                              ; preds = %109
  %133 = load ptr, ptr %8, align 8, !dbg !11255
  %134 = getelementptr inbounds i8, ptr %133, i64 9, !dbg !11255
  %135 = load ptr, ptr %9, align 8, !dbg !11255
  %136 = icmp uge ptr %134, %135, !dbg !11255
  %137 = zext i1 %136 to i32, !dbg !11255
  %138 = sext i32 %137 to i64, !dbg !11255
  br i1 %136, label %139, label %140, !dbg !11258

139:                                              ; preds = %132
  store i64 0, ptr %3, align 8, !dbg !11255
  br label %558, !dbg !11255

140:                                              ; preds = %132
  %141 = load ptr, ptr %8, align 8, !dbg !11258
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %141, ptr align 1 @.str.11.111, i64 9, i1 false), !dbg !11258
  %142 = getelementptr inbounds i8, ptr %141, i64 9, !dbg !11258
  store ptr %142, ptr %8, align 8, !dbg !11258
  br label %143

143:                                              ; preds = %140, %129
  call void @llvm.dbg.declare(metadata ptr %13, metadata !11259, metadata !DIExpression()), !dbg !11261
  %144 = load i32, ptr %5, align 4, !dbg !11261
  %145 = call ptr @lwan_http_status_as_string_with_code(i32 noundef %144) #22, !dbg !11261
  %146 = call i64 @strlen(ptr noundef %145) #22, !dbg !11261
  store i64 %146, ptr %13, align 8, !dbg !11261
  %147 = load ptr, ptr %8, align 8, !dbg !11262
  %148 = load i64, ptr %13, align 8, !dbg !11262
  %149 = getelementptr inbounds i8, ptr %147, i64 %148, !dbg !11262
  %150 = load ptr, ptr %9, align 8, !dbg !11262
  %151 = icmp uge ptr %149, %150, !dbg !11262
  %152 = zext i1 %151 to i32, !dbg !11262
  %153 = sext i32 %152 to i64, !dbg !11262
  br i1 %151, label %154, label %155, !dbg !11265

154:                                              ; preds = %143
  store i64 0, ptr %3, align 8, !dbg !11262
  br label %558, !dbg !11262

155:                                              ; preds = %143
  %156 = load ptr, ptr %8, align 8, !dbg !11265
  %157 = load i32, ptr %5, align 4, !dbg !11265
  %158 = call ptr @lwan_http_status_as_string_with_code(i32 noundef %157) #22, !dbg !11265
  %159 = load i64, ptr %13, align 8, !dbg !11265
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %156, ptr align 1 %158, i64 %159, i1 false), !dbg !11265
  %160 = getelementptr inbounds i8, ptr %156, i64 %159, !dbg !11265
  store ptr %160, ptr %8, align 8, !dbg !11265
  %161 = load ptr, ptr %4, align 8, !dbg !11266
  %162 = load i32, ptr %161, align 8, !dbg !11268
  %163 = and i32 %162, 128, !dbg !11269
  %164 = icmp ne i32 %163, 0, !dbg !11269
  br i1 %164, label %165, label %176, !dbg !11270

165:                                              ; preds = %155
  %166 = load ptr, ptr %8, align 8, !dbg !11271
  %167 = getelementptr inbounds i8, ptr %166, i64 28, !dbg !11271
  %168 = load ptr, ptr %9, align 8, !dbg !11271
  %169 = icmp uge ptr %167, %168, !dbg !11271
  %170 = zext i1 %169 to i32, !dbg !11271
  %171 = sext i32 %170 to i64, !dbg !11271
  br i1 %169, label %172, label %173, !dbg !11275

172:                                              ; preds = %165
  store i64 0, ptr %3, align 8, !dbg !11271
  br label %558, !dbg !11271

173:                                              ; preds = %165
  %174 = load ptr, ptr %8, align 8, !dbg !11275
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %174, ptr align 1 @.str.12.112, i64 28, i1 false), !dbg !11275
  %175 = getelementptr inbounds i8, ptr %174, i64 28, !dbg !11275
  store ptr %175, ptr %8, align 8, !dbg !11275
  br label %258, !dbg !11276

176:                                              ; preds = %155
  %177 = load ptr, ptr %4, align 8, !dbg !11277
  %178 = load i32, ptr %177, align 8, !dbg !11279
  %179 = and i32 %178, 256, !dbg !11280
  %180 = icmp ne i32 %179, 0, !dbg !11280
  br i1 %180, label %181, label %182, !dbg !11281

181:                                              ; preds = %176
  br label %257, !dbg !11282

182:                                              ; preds = %176
  %183 = load ptr, ptr %8, align 8, !dbg !11284
  %184 = getelementptr inbounds i8, ptr %183, i64 18, !dbg !11284
  %185 = load ptr, ptr %9, align 8, !dbg !11284
  %186 = icmp uge ptr %184, %185, !dbg !11284
  %187 = zext i1 %186 to i32, !dbg !11284
  %188 = sext i32 %187 to i64, !dbg !11284
  br i1 %186, label %189, label %190, !dbg !11288

189:                                              ; preds = %182
  store i64 0, ptr %3, align 8, !dbg !11284
  br label %558, !dbg !11284

190:                                              ; preds = %182
  %191 = load ptr, ptr %8, align 8, !dbg !11288
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %191, ptr align 1 @.str.13.113, i64 18, i1 false), !dbg !11288
  %192 = getelementptr inbounds i8, ptr %191, i64 18, !dbg !11288
  store ptr %192, ptr %8, align 8, !dbg !11288
  %193 = load ptr, ptr %4, align 8, !dbg !11289
  %194 = getelementptr inbounds %struct.lwan_request_t_, ptr %193, i32 0, i32 8, !dbg !11291
  %195 = getelementptr inbounds %struct.lwan_response_t_, ptr %194, i32 0, i32 4, !dbg !11292
  %196 = load ptr, ptr %195, align 8, !dbg !11293
  %197 = icmp ne ptr %196, null, !dbg !11289
  br i1 %197, label %198, label %226, !dbg !11294

198:                                              ; preds = %190
  call void @llvm.dbg.declare(metadata ptr %14, metadata !11295, metadata !DIExpression()), !dbg !11297
  call void @llvm.dbg.declare(metadata ptr %15, metadata !11298, metadata !DIExpression()), !dbg !11297
  %199 = load ptr, ptr %4, align 8, !dbg !11297
  %200 = getelementptr inbounds %struct.lwan_request_t_, ptr %199, i32 0, i32 8, !dbg !11297
  %201 = getelementptr inbounds %struct.lwan_response_t_, ptr %200, i32 0, i32 2, !dbg !11297
  %202 = load i64, ptr %201, align 8, !dbg !11297
  %203 = call ptr @uint_to_string(i64 noundef %202, ptr noundef %10, ptr noundef %14) #18, !dbg !11297
  store ptr %203, ptr %15, align 8, !dbg !11297
  %204 = load ptr, ptr %8, align 8, !dbg !11299
  %205 = load i64, ptr %14, align 8, !dbg !11299
  %206 = getelementptr inbounds i8, ptr %204, i64 %205, !dbg !11299
  %207 = load ptr, ptr %9, align 8, !dbg !11299
  %208 = icmp uge ptr %206, %207, !dbg !11299
  %209 = zext i1 %208 to i32, !dbg !11299
  %210 = sext i32 %209 to i64, !dbg !11299
  br i1 %208, label %211, label %212, !dbg !11297

211:                                              ; preds = %198
  store i64 0, ptr %3, align 8, !dbg !11299
  br label %558, !dbg !11299

212:                                              ; preds = %198
  %213 = load ptr, ptr %8, align 8, !dbg !11301
  %214 = load i64, ptr %14, align 8, !dbg !11301
  %215 = getelementptr inbounds i8, ptr %213, i64 %214, !dbg !11301
  %216 = load ptr, ptr %9, align 8, !dbg !11301
  %217 = icmp uge ptr %215, %216, !dbg !11301
  %218 = zext i1 %217 to i32, !dbg !11301
  %219 = sext i32 %218 to i64, !dbg !11301
  br i1 %217, label %220, label %221, !dbg !11304

220:                                              ; preds = %212
  store i64 0, ptr %3, align 8, !dbg !11301
  br label %558, !dbg !11301

221:                                              ; preds = %212
  %222 = load ptr, ptr %8, align 8, !dbg !11304
  %223 = load ptr, ptr %15, align 8, !dbg !11304
  %224 = load i64, ptr %14, align 8, !dbg !11304
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %222, ptr align 1 %223, i64 %224, i1 false), !dbg !11304
  %225 = getelementptr inbounds i8, ptr %222, i64 %224, !dbg !11304
  store ptr %225, ptr %8, align 8, !dbg !11304
  br label %256, !dbg !11297

226:                                              ; preds = %190
  call void @llvm.dbg.declare(metadata ptr %16, metadata !11305, metadata !DIExpression()), !dbg !11307
  call void @llvm.dbg.declare(metadata ptr %17, metadata !11308, metadata !DIExpression()), !dbg !11307
  %227 = load ptr, ptr %4, align 8, !dbg !11307
  %228 = getelementptr inbounds %struct.lwan_request_t_, ptr %227, i32 0, i32 8, !dbg !11307
  %229 = load ptr, ptr %228, align 8, !dbg !11307
  %230 = getelementptr inbounds %struct.strbuf_t_, ptr %229, i32 0, i32 1, !dbg !11307
  %231 = getelementptr inbounds %struct.timespec, ptr %230, i32 0, i32 1, !dbg !11307
  %232 = load i64, ptr %231, align 8, !dbg !11307
  %233 = call ptr @uint_to_string(i64 noundef %232, ptr noundef %10, ptr noundef %16) #18, !dbg !11307
  store ptr %233, ptr %17, align 8, !dbg !11307
  %234 = load ptr, ptr %8, align 8, !dbg !11309
  %235 = load i64, ptr %16, align 8, !dbg !11309
  %236 = getelementptr inbounds i8, ptr %234, i64 %235, !dbg !11309
  %237 = load ptr, ptr %9, align 8, !dbg !11309
  %238 = icmp uge ptr %236, %237, !dbg !11309
  %239 = zext i1 %238 to i32, !dbg !11309
  %240 = sext i32 %239 to i64, !dbg !11309
  br i1 %238, label %241, label %242, !dbg !11307

241:                                              ; preds = %226
  store i64 0, ptr %3, align 8, !dbg !11309
  br label %558, !dbg !11309

242:                                              ; preds = %226
  %243 = load ptr, ptr %8, align 8, !dbg !11311
  %244 = load i64, ptr %16, align 8, !dbg !11311
  %245 = getelementptr inbounds i8, ptr %243, i64 %244, !dbg !11311
  %246 = load ptr, ptr %9, align 8, !dbg !11311
  %247 = icmp uge ptr %245, %246, !dbg !11311
  %248 = zext i1 %247 to i32, !dbg !11311
  %249 = sext i32 %248 to i64, !dbg !11311
  br i1 %247, label %250, label %251, !dbg !11314

250:                                              ; preds = %242
  store i64 0, ptr %3, align 8, !dbg !11311
  br label %558, !dbg !11311

251:                                              ; preds = %242
  %252 = load ptr, ptr %8, align 8, !dbg !11314
  %253 = load ptr, ptr %17, align 8, !dbg !11314
  %254 = load i64, ptr %16, align 8, !dbg !11314
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %252, ptr align 1 %253, i64 %254, i1 false), !dbg !11314
  %255 = getelementptr inbounds i8, ptr %252, i64 %254, !dbg !11314
  store ptr %255, ptr %8, align 8, !dbg !11314
  br label %256

256:                                              ; preds = %251, %221
  br label %257

257:                                              ; preds = %256, %181
  br label %258

258:                                              ; preds = %257, %173
  %259 = load ptr, ptr %8, align 8, !dbg !11315
  %260 = getelementptr inbounds i8, ptr %259, i64 16, !dbg !11315
  %261 = load ptr, ptr %9, align 8, !dbg !11315
  %262 = icmp uge ptr %260, %261, !dbg !11315
  %263 = zext i1 %262 to i32, !dbg !11315
  %264 = sext i32 %263 to i64, !dbg !11315
  br i1 %262, label %265, label %266, !dbg !11318

265:                                              ; preds = %258
  store i64 0, ptr %3, align 8, !dbg !11315
  br label %558, !dbg !11315

266:                                              ; preds = %258
  %267 = load ptr, ptr %8, align 8, !dbg !11318
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %267, ptr align 1 @.str.14.114, i64 16, i1 false), !dbg !11318
  %268 = getelementptr inbounds i8, ptr %267, i64 16, !dbg !11318
  store ptr %268, ptr %8, align 8, !dbg !11318
  call void @llvm.dbg.declare(metadata ptr %18, metadata !11319, metadata !DIExpression()), !dbg !11321
  %269 = load ptr, ptr %4, align 8, !dbg !11321
  %270 = getelementptr inbounds %struct.lwan_request_t_, ptr %269, i32 0, i32 8, !dbg !11321
  %271 = getelementptr inbounds %struct.lwan_response_t_, ptr %270, i32 0, i32 1, !dbg !11321
  %272 = load ptr, ptr %271, align 8, !dbg !11321
  %273 = call i64 @strlen(ptr noundef %272) #22, !dbg !11321
  store i64 %273, ptr %18, align 8, !dbg !11321
  %274 = load ptr, ptr %8, align 8, !dbg !11322
  %275 = load i64, ptr %18, align 8, !dbg !11322
  %276 = getelementptr inbounds i8, ptr %274, i64 %275, !dbg !11322
  %277 = load ptr, ptr %9, align 8, !dbg !11322
  %278 = icmp uge ptr %276, %277, !dbg !11322
  %279 = zext i1 %278 to i32, !dbg !11322
  %280 = sext i32 %279 to i64, !dbg !11322
  br i1 %278, label %281, label %282, !dbg !11325

281:                                              ; preds = %266
  store i64 0, ptr %3, align 8, !dbg !11322
  br label %558, !dbg !11322

282:                                              ; preds = %266
  %283 = load ptr, ptr %8, align 8, !dbg !11325
  %284 = load ptr, ptr %4, align 8, !dbg !11325
  %285 = getelementptr inbounds %struct.lwan_request_t_, ptr %284, i32 0, i32 8, !dbg !11325
  %286 = getelementptr inbounds %struct.lwan_response_t_, ptr %285, i32 0, i32 1, !dbg !11325
  %287 = load ptr, ptr %286, align 8, !dbg !11325
  %288 = load i64, ptr %18, align 8, !dbg !11325
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %283, ptr align 1 %287, i64 %288, i1 false), !dbg !11325
  %289 = getelementptr inbounds i8, ptr %283, i64 %288, !dbg !11325
  store ptr %289, ptr %8, align 8, !dbg !11325
  %290 = load ptr, ptr %4, align 8, !dbg !11326
  %291 = getelementptr inbounds %struct.lwan_request_t_, ptr %290, i32 0, i32 4, !dbg !11328
  %292 = load ptr, ptr %291, align 8, !dbg !11328
  %293 = load i32, ptr %292, align 8, !dbg !11329
  %294 = and i32 %293, 1, !dbg !11330
  %295 = icmp ne i32 %294, 0, !dbg !11330
  br i1 %295, label %296, label %307, !dbg !11331

296:                                              ; preds = %282
  %297 = load ptr, ptr %8, align 8, !dbg !11332
  %298 = getelementptr inbounds i8, ptr %297, i64 24, !dbg !11332
  %299 = load ptr, ptr %9, align 8, !dbg !11332
  %300 = icmp uge ptr %298, %299, !dbg !11332
  %301 = zext i1 %300 to i32, !dbg !11332
  %302 = sext i32 %301 to i64, !dbg !11332
  br i1 %300, label %303, label %304, !dbg !11335

303:                                              ; preds = %296
  store i64 0, ptr %3, align 8, !dbg !11332
  br label %558, !dbg !11332

304:                                              ; preds = %296
  %305 = load ptr, ptr %8, align 8, !dbg !11335
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %305, ptr align 1 @.str.15.115, i64 24, i1 false), !dbg !11335
  %306 = getelementptr inbounds i8, ptr %305, i64 24, !dbg !11335
  store ptr %306, ptr %8, align 8, !dbg !11335
  br label %318, !dbg !11335

307:                                              ; preds = %282
  %308 = load ptr, ptr %8, align 8, !dbg !11336
  %309 = getelementptr inbounds i8, ptr %308, i64 19, !dbg !11336
  %310 = load ptr, ptr %9, align 8, !dbg !11336
  %311 = icmp uge ptr %309, %310, !dbg !11336
  %312 = zext i1 %311 to i32, !dbg !11336
  %313 = sext i32 %312 to i64, !dbg !11336
  br i1 %311, label %314, label %315, !dbg !11339

314:                                              ; preds = %307
  store i64 0, ptr %3, align 8, !dbg !11336
  br label %558, !dbg !11336

315:                                              ; preds = %307
  %316 = load ptr, ptr %8, align 8, !dbg !11339
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %316, ptr align 1 @.str.16.116, i64 19, i1 false), !dbg !11339
  %317 = getelementptr inbounds i8, ptr %316, i64 19, !dbg !11339
  store ptr %317, ptr %8, align 8, !dbg !11339
  br label %318

318:                                              ; preds = %315, %304
  %319 = load i32, ptr %5, align 4, !dbg !11340
  %320 = icmp ult i32 %319, 400, !dbg !11342
  br i1 %320, label %321, label %420, !dbg !11343

321:                                              ; preds = %318
  %322 = load ptr, ptr %4, align 8, !dbg !11344
  %323 = getelementptr inbounds %struct.lwan_request_t_, ptr %322, i32 0, i32 8, !dbg !11345
  %324 = getelementptr inbounds %struct.lwan_response_t_, ptr %323, i32 0, i32 3, !dbg !11346
  %325 = load ptr, ptr %324, align 8, !dbg !11346
  %326 = icmp ne ptr %325, null, !dbg !11344
  br i1 %326, label %327, label %420, !dbg !11347

327:                                              ; preds = %321
  call void @llvm.dbg.declare(metadata ptr %19, metadata !11348, metadata !DIExpression()), !dbg !11350
  %328 = load ptr, ptr %4, align 8, !dbg !11351
  %329 = getelementptr inbounds %struct.lwan_request_t_, ptr %328, i32 0, i32 8, !dbg !11353
  %330 = getelementptr inbounds %struct.lwan_response_t_, ptr %329, i32 0, i32 3, !dbg !11354
  %331 = load ptr, ptr %330, align 8, !dbg !11354
  store ptr %331, ptr %19, align 8, !dbg !11355
  br label %332, !dbg !11356

332:                                              ; preds = %416, %327
  %333 = load ptr, ptr %19, align 8, !dbg !11357
  %334 = load ptr, ptr %333, align 8, !dbg !11359
  %335 = icmp ne ptr %334, null, !dbg !11360
  br i1 %335, label %336, label %419, !dbg !11360

336:                                              ; preds = %332
  %337 = load ptr, ptr %19, align 8, !dbg !11361
  %338 = load ptr, ptr %337, align 8, !dbg !11361
  %339 = call i32 @strcmp(ptr noundef %338, ptr noundef @.str.17.117) #22, !dbg !11361
  %340 = icmp ne i32 %339, 0, !dbg !11361
  %341 = xor i1 %340, true, !dbg !11361
  %342 = zext i1 %341 to i32, !dbg !11361
  %343 = sext i32 %342 to i64, !dbg !11361
  br i1 %341, label %344, label %345, !dbg !11364

344:                                              ; preds = %336
  br label %416, !dbg !11365

345:                                              ; preds = %336
  %346 = load ptr, ptr %19, align 8, !dbg !11366
  %347 = load ptr, ptr %346, align 8, !dbg !11366
  %348 = call i32 @strcmp(ptr noundef %347, ptr noundef @.str.18.118) #22, !dbg !11366
  %349 = icmp ne i32 %348, 0, !dbg !11366
  %350 = xor i1 %349, true, !dbg !11366
  %351 = zext i1 %350 to i32, !dbg !11366
  %352 = sext i32 %351 to i64, !dbg !11366
  br i1 %350, label %353, label %354, !dbg !11368

353:                                              ; preds = %345
  store i8 1, ptr %11, align 1, !dbg !11369
  br label %354, !dbg !11370

354:                                              ; preds = %353, %345
  %355 = load ptr, ptr %19, align 8, !dbg !11371
  %356 = load ptr, ptr %355, align 8, !dbg !11371
  %357 = call i32 @strcmp(ptr noundef %356, ptr noundef @.str.19.119) #22, !dbg !11371
  %358 = icmp ne i32 %357, 0, !dbg !11371
  %359 = xor i1 %358, true, !dbg !11371
  %360 = zext i1 %359 to i32, !dbg !11371
  %361 = sext i32 %360 to i64, !dbg !11371
  br i1 %359, label %362, label %363, !dbg !11373

362:                                              ; preds = %354
  store i8 1, ptr %12, align 1, !dbg !11374
  br label %363, !dbg !11375

363:                                              ; preds = %362, %354
  %364 = load ptr, ptr %8, align 8, !dbg !11376
  %365 = getelementptr inbounds i8, ptr %364, i64 4, !dbg !11376
  %366 = load ptr, ptr %9, align 8, !dbg !11376
  %367 = icmp uge ptr %365, %366, !dbg !11376
  %368 = zext i1 %367 to i32, !dbg !11376
  %369 = sext i32 %368 to i64, !dbg !11376
  br i1 %367, label %370, label %371, !dbg !11378

370:                                              ; preds = %363
  store i64 0, ptr %3, align 8, !dbg !11376
  br label %558, !dbg !11376

371:                                              ; preds = %363
  %372 = load ptr, ptr %8, align 8, !dbg !11379
  %373 = getelementptr inbounds i8, ptr %372, i32 1, !dbg !11379
  store ptr %373, ptr %8, align 8, !dbg !11379
  store i8 13, ptr %372, align 1, !dbg !11379
  %374 = load ptr, ptr %8, align 8, !dbg !11380
  %375 = getelementptr inbounds i8, ptr %374, i32 1, !dbg !11380
  store ptr %375, ptr %8, align 8, !dbg !11380
  store i8 10, ptr %374, align 1, !dbg !11380
  call void @llvm.dbg.declare(metadata ptr %20, metadata !11381, metadata !DIExpression()), !dbg !11383
  %376 = load ptr, ptr %19, align 8, !dbg !11383
  %377 = load ptr, ptr %376, align 8, !dbg !11383
  %378 = call i64 @strlen(ptr noundef %377) #22, !dbg !11383
  store i64 %378, ptr %20, align 8, !dbg !11383
  %379 = load ptr, ptr %8, align 8, !dbg !11384
  %380 = load i64, ptr %20, align 8, !dbg !11384
  %381 = getelementptr inbounds i8, ptr %379, i64 %380, !dbg !11384
  %382 = load ptr, ptr %9, align 8, !dbg !11384
  %383 = icmp uge ptr %381, %382, !dbg !11384
  %384 = zext i1 %383 to i32, !dbg !11384
  %385 = sext i32 %384 to i64, !dbg !11384
  br i1 %383, label %386, label %387, !dbg !11387

386:                                              ; preds = %371
  store i64 0, ptr %3, align 8, !dbg !11384
  br label %558, !dbg !11384

387:                                              ; preds = %371
  %388 = load ptr, ptr %8, align 8, !dbg !11387
  %389 = load ptr, ptr %19, align 8, !dbg !11387
  %390 = load ptr, ptr %389, align 8, !dbg !11387
  %391 = load i64, ptr %20, align 8, !dbg !11387
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %388, ptr align 1 %390, i64 %391, i1 false), !dbg !11387
  %392 = getelementptr inbounds i8, ptr %388, i64 %391, !dbg !11387
  store ptr %392, ptr %8, align 8, !dbg !11387
  %393 = load ptr, ptr %8, align 8, !dbg !11388
  %394 = getelementptr inbounds i8, ptr %393, i32 1, !dbg !11388
  store ptr %394, ptr %8, align 8, !dbg !11388
  store i8 58, ptr %393, align 1, !dbg !11388
  %395 = load ptr, ptr %8, align 8, !dbg !11389
  %396 = getelementptr inbounds i8, ptr %395, i32 1, !dbg !11389
  store ptr %396, ptr %8, align 8, !dbg !11389
  store i8 32, ptr %395, align 1, !dbg !11389
  call void @llvm.dbg.declare(metadata ptr %21, metadata !11390, metadata !DIExpression()), !dbg !11392
  %397 = load ptr, ptr %19, align 8, !dbg !11392
  %398 = getelementptr inbounds %struct.list_node, ptr %397, i32 0, i32 1, !dbg !11392
  %399 = load ptr, ptr %398, align 8, !dbg !11392
  %400 = call i64 @strlen(ptr noundef %399) #22, !dbg !11392
  store i64 %400, ptr %21, align 8, !dbg !11392
  %401 = load ptr, ptr %8, align 8, !dbg !11393
  %402 = load i64, ptr %21, align 8, !dbg !11393
  %403 = getelementptr inbounds i8, ptr %401, i64 %402, !dbg !11393
  %404 = load ptr, ptr %9, align 8, !dbg !11393
  %405 = icmp uge ptr %403, %404, !dbg !11393
  %406 = zext i1 %405 to i32, !dbg !11393
  %407 = sext i32 %406 to i64, !dbg !11393
  br i1 %405, label %408, label %409, !dbg !11396

408:                                              ; preds = %387
  store i64 0, ptr %3, align 8, !dbg !11393
  br label %558, !dbg !11393

409:                                              ; preds = %387
  %410 = load ptr, ptr %8, align 8, !dbg !11396
  %411 = load ptr, ptr %19, align 8, !dbg !11396
  %412 = getelementptr inbounds %struct.list_node, ptr %411, i32 0, i32 1, !dbg !11396
  %413 = load ptr, ptr %412, align 8, !dbg !11396
  %414 = load i64, ptr %21, align 8, !dbg !11396
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %410, ptr align 1 %413, i64 %414, i1 false), !dbg !11396
  %415 = getelementptr inbounds i8, ptr %410, i64 %414, !dbg !11396
  store ptr %415, ptr %8, align 8, !dbg !11396
  br label %416, !dbg !11397

416:                                              ; preds = %409, %344
  %417 = load ptr, ptr %19, align 8, !dbg !11398
  %418 = getelementptr inbounds %struct.list_node, ptr %417, i32 1, !dbg !11398
  store ptr %418, ptr %19, align 8, !dbg !11398
  br label %332, !dbg !11399, !llvm.loop !11400

419:                                              ; preds = %332
  br label %472, !dbg !11402

420:                                              ; preds = %321, %318
  %421 = load i32, ptr %5, align 4, !dbg !11403
  %422 = icmp eq i32 %421, 401, !dbg !11405
  br i1 %422, label %423, label %471, !dbg !11406

423:                                              ; preds = %420
  call void @llvm.dbg.declare(metadata ptr %22, metadata !11407, metadata !DIExpression()), !dbg !11409
  %424 = load ptr, ptr %4, align 8, !dbg !11410
  %425 = getelementptr inbounds %struct.lwan_request_t_, ptr %424, i32 0, i32 8, !dbg !11412
  %426 = getelementptr inbounds %struct.lwan_response_t_, ptr %425, i32 0, i32 3, !dbg !11413
  %427 = load ptr, ptr %426, align 8, !dbg !11413
  store ptr %427, ptr %22, align 8, !dbg !11414
  br label %428, !dbg !11415

428:                                              ; preds = %467, %423
  %429 = load ptr, ptr %22, align 8, !dbg !11416
  %430 = load ptr, ptr %429, align 8, !dbg !11418
  %431 = icmp ne ptr %430, null, !dbg !11419
  br i1 %431, label %432, label %470, !dbg !11419

432:                                              ; preds = %428
  %433 = load ptr, ptr %22, align 8, !dbg !11420
  %434 = load ptr, ptr %433, align 8, !dbg !11423
  %435 = call i32 @strcmp(ptr noundef %434, ptr noundef @.str.20.120) #22, !dbg !11424
  %436 = icmp ne i32 %435, 0, !dbg !11424
  br i1 %436, label %467, label %437, !dbg !11425

437:                                              ; preds = %432
  %438 = load ptr, ptr %8, align 8, !dbg !11426
  %439 = getelementptr inbounds i8, ptr %438, i64 20, !dbg !11426
  %440 = load ptr, ptr %9, align 8, !dbg !11426
  %441 = icmp uge ptr %439, %440, !dbg !11426
  %442 = zext i1 %441 to i32, !dbg !11426
  %443 = sext i32 %442 to i64, !dbg !11426
  br i1 %441, label %444, label %445, !dbg !11430

444:                                              ; preds = %437
  store i64 0, ptr %3, align 8, !dbg !11426
  br label %558, !dbg !11426

445:                                              ; preds = %437
  %446 = load ptr, ptr %8, align 8, !dbg !11430
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %446, ptr align 1 @.str.21.121, i64 20, i1 false), !dbg !11430
  %447 = getelementptr inbounds i8, ptr %446, i64 20, !dbg !11430
  store ptr %447, ptr %8, align 8, !dbg !11430
  call void @llvm.dbg.declare(metadata ptr %23, metadata !11431, metadata !DIExpression()), !dbg !11433
  %448 = load ptr, ptr %22, align 8, !dbg !11433
  %449 = getelementptr inbounds %struct.list_node, ptr %448, i32 0, i32 1, !dbg !11433
  %450 = load ptr, ptr %449, align 8, !dbg !11433
  %451 = call i64 @strlen(ptr noundef %450) #22, !dbg !11433
  store i64 %451, ptr %23, align 8, !dbg !11433
  %452 = load ptr, ptr %8, align 8, !dbg !11434
  %453 = load i64, ptr %23, align 8, !dbg !11434
  %454 = getelementptr inbounds i8, ptr %452, i64 %453, !dbg !11434
  %455 = load ptr, ptr %9, align 8, !dbg !11434
  %456 = icmp uge ptr %454, %455, !dbg !11434
  %457 = zext i1 %456 to i32, !dbg !11434
  %458 = sext i32 %457 to i64, !dbg !11434
  br i1 %456, label %459, label %460, !dbg !11437

459:                                              ; preds = %445
  store i64 0, ptr %3, align 8, !dbg !11434
  br label %558, !dbg !11434

460:                                              ; preds = %445
  %461 = load ptr, ptr %8, align 8, !dbg !11437
  %462 = load ptr, ptr %22, align 8, !dbg !11437
  %463 = getelementptr inbounds %struct.list_node, ptr %462, i32 0, i32 1, !dbg !11437
  %464 = load ptr, ptr %463, align 8, !dbg !11437
  %465 = load i64, ptr %23, align 8, !dbg !11437
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %461, ptr align 1 %464, i64 %465, i1 false), !dbg !11437
  %466 = getelementptr inbounds i8, ptr %461, i64 %465, !dbg !11437
  store ptr %466, ptr %8, align 8, !dbg !11437
  br label %470, !dbg !11438

467:                                              ; preds = %432
  %468 = load ptr, ptr %22, align 8, !dbg !11439
  %469 = getelementptr inbounds %struct.list_node, ptr %468, i32 1, !dbg !11439
  store ptr %469, ptr %22, align 8, !dbg !11439
  br label %428, !dbg !11440, !llvm.loop !11441

470:                                              ; preds = %460, %428
  br label %471, !dbg !11443

471:                                              ; preds = %470, %420
  br label %472

472:                                              ; preds = %471, %419
  %473 = load i8, ptr %11, align 1, !dbg !11444
  %474 = trunc i8 %473 to i1, !dbg !11444
  %475 = xor i1 %474, true, !dbg !11444
  %476 = xor i1 %474, true, !dbg !11444
  %477 = zext i1 %476 to i32, !dbg !11444
  %478 = sext i32 %477 to i64, !dbg !11444
  br i1 %476, label %479, label %506, !dbg !11446

479:                                              ; preds = %472
  %480 = load ptr, ptr %8, align 8, !dbg !11447
  %481 = getelementptr inbounds i8, ptr %480, i64 8, !dbg !11447
  %482 = load ptr, ptr %9, align 8, !dbg !11447
  %483 = icmp uge ptr %481, %482, !dbg !11447
  %484 = zext i1 %483 to i32, !dbg !11447
  %485 = sext i32 %484 to i64, !dbg !11447
  br i1 %483, label %486, label %487, !dbg !11451

486:                                              ; preds = %479
  store i64 0, ptr %3, align 8, !dbg !11447
  br label %558, !dbg !11447

487:                                              ; preds = %479
  %488 = load ptr, ptr %8, align 8, !dbg !11451
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %488, ptr align 1 @.str.22.122, i64 8, i1 false), !dbg !11451
  %489 = getelementptr inbounds i8, ptr %488, i64 8, !dbg !11451
  store ptr %489, ptr %8, align 8, !dbg !11451
  %490 = load ptr, ptr %8, align 8, !dbg !11452
  %491 = getelementptr inbounds i8, ptr %490, i64 29, !dbg !11452
  %492 = load ptr, ptr %9, align 8, !dbg !11452
  %493 = icmp uge ptr %491, %492, !dbg !11452
  %494 = zext i1 %493 to i32, !dbg !11452
  %495 = sext i32 %494 to i64, !dbg !11452
  br i1 %493, label %496, label %497, !dbg !11455

496:                                              ; preds = %487
  store i64 0, ptr %3, align 8, !dbg !11452
  br label %558, !dbg !11452

497:                                              ; preds = %487
  %498 = load ptr, ptr %8, align 8, !dbg !11455
  %499 = load ptr, ptr %4, align 8, !dbg !11455
  %500 = getelementptr inbounds %struct.lwan_request_t_, ptr %499, i32 0, i32 4, !dbg !11455
  %501 = load ptr, ptr %500, align 8, !dbg !11455
  %502 = getelementptr inbounds %struct.lwan_connection_t_, ptr %501, i32 0, i32 3, !dbg !11455
  %503 = load ptr, ptr %502, align 8, !dbg !11455
  %504 = getelementptr inbounds %struct.lwan_thread_t_, ptr %503, i32 0, i32 1, !dbg !11455
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %498, ptr align 8 %504, i64 29, i1 false), !dbg !11455
  %505 = getelementptr inbounds i8, ptr %498, i64 29, !dbg !11455
  store ptr %505, ptr %8, align 8, !dbg !11455
  br label %506, !dbg !11456

506:                                              ; preds = %497, %472
  %507 = load i8, ptr %12, align 1, !dbg !11457
  %508 = trunc i8 %507 to i1, !dbg !11457
  %509 = xor i1 %508, true, !dbg !11457
  %510 = xor i1 %508, true, !dbg !11457
  %511 = zext i1 %510 to i32, !dbg !11457
  %512 = sext i32 %511 to i64, !dbg !11457
  br i1 %510, label %513, label %541, !dbg !11459

513:                                              ; preds = %506
  %514 = load ptr, ptr %8, align 8, !dbg !11460
  %515 = getelementptr inbounds i8, ptr %514, i64 11, !dbg !11460
  %516 = load ptr, ptr %9, align 8, !dbg !11460
  %517 = icmp uge ptr %515, %516, !dbg !11460
  %518 = zext i1 %517 to i32, !dbg !11460
  %519 = sext i32 %518 to i64, !dbg !11460
  br i1 %517, label %520, label %521, !dbg !11464

520:                                              ; preds = %513
  store i64 0, ptr %3, align 8, !dbg !11460
  br label %558, !dbg !11460

521:                                              ; preds = %513
  %522 = load ptr, ptr %8, align 8, !dbg !11464
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %522, ptr align 1 @.str.23.123, i64 11, i1 false), !dbg !11464
  %523 = getelementptr inbounds i8, ptr %522, i64 11, !dbg !11464
  store ptr %523, ptr %8, align 8, !dbg !11464
  %524 = load ptr, ptr %8, align 8, !dbg !11465
  %525 = getelementptr inbounds i8, ptr %524, i64 29, !dbg !11465
  %526 = load ptr, ptr %9, align 8, !dbg !11465
  %527 = icmp uge ptr %525, %526, !dbg !11465
  %528 = zext i1 %527 to i32, !dbg !11465
  %529 = sext i32 %528 to i64, !dbg !11465
  br i1 %527, label %530, label %531, !dbg !11468

530:                                              ; preds = %521
  store i64 0, ptr %3, align 8, !dbg !11465
  br label %558, !dbg !11465

531:                                              ; preds = %521
  %532 = load ptr, ptr %8, align 8, !dbg !11468
  %533 = load ptr, ptr %4, align 8, !dbg !11468
  %534 = getelementptr inbounds %struct.lwan_request_t_, ptr %533, i32 0, i32 4, !dbg !11468
  %535 = load ptr, ptr %534, align 8, !dbg !11468
  %536 = getelementptr inbounds %struct.lwan_connection_t_, ptr %535, i32 0, i32 3, !dbg !11468
  %537 = load ptr, ptr %536, align 8, !dbg !11468
  %538 = getelementptr inbounds %struct.lwan_thread_t_, ptr %537, i32 0, i32 1, !dbg !11468
  %539 = getelementptr inbounds %struct.anon.27, ptr %538, i32 0, i32 1, !dbg !11468
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %532, ptr align 2 %539, i64 29, i1 false), !dbg !11468
  %540 = getelementptr inbounds i8, ptr %532, i64 29, !dbg !11468
  store ptr %540, ptr %8, align 8, !dbg !11468
  br label %541, !dbg !11469

541:                                              ; preds = %531, %506
  %542 = load ptr, ptr %8, align 8, !dbg !11470
  %543 = getelementptr inbounds i8, ptr %542, i64 19, !dbg !11470
  %544 = load ptr, ptr %9, align 8, !dbg !11470
  %545 = icmp uge ptr %543, %544, !dbg !11470
  %546 = zext i1 %545 to i32, !dbg !11470
  %547 = sext i32 %546 to i64, !dbg !11470
  br i1 %545, label %548, label %549, !dbg !11473

548:                                              ; preds = %541
  store i64 0, ptr %3, align 8, !dbg !11470
  br label %558, !dbg !11470

549:                                              ; preds = %541
  %550 = load ptr, ptr %8, align 8, !dbg !11473
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %550, ptr align 1 @.str.24.124, i64 19, i1 false), !dbg !11473
  %551 = getelementptr inbounds i8, ptr %550, i64 19, !dbg !11473
  store ptr %551, ptr %8, align 8, !dbg !11473
  %552 = load ptr, ptr %8, align 8, !dbg !11474
  %553 = load ptr, ptr %6, align 8, !dbg !11475
  %554 = ptrtoint ptr %552 to i64, !dbg !11476
  %555 = ptrtoint ptr %553 to i64, !dbg !11476
  %556 = sub i64 %554, %555, !dbg !11476
  %557 = sub nsw i64 %556, 1, !dbg !11477
  store i64 %557, ptr %3, align 8, !dbg !11478
  br label %558, !dbg !11478

558:                                              ; preds = %549, %548, %530, %520, %496, %486, %459, %444, %408, %386, %370, %314, %303, %281, %265, %250, %241, %220, %211, %189, %172, %154, %139, %128
  %559 = load i64, ptr %3, align 8, !dbg !11479
  store i64 %559, ptr %28, align 8, !dbg !11215
  %560 = load i64, ptr %28, align 8, !dbg !11480
  %561 = icmp ne i64 %560, 0, !dbg !11480
  %562 = xor i1 %561, true, !dbg !11480
  %563 = zext i1 %562 to i32, !dbg !11480
  %564 = sext i32 %563 to i64, !dbg !11480
  %565 = icmp ne i64 %564, 0, !dbg !11480
  br i1 %565, label %566, label %568, !dbg !11482

566:                                              ; preds = %558
  %567 = load ptr, ptr %24, align 8, !dbg !11483
  call void @lwan_default_response(ptr noundef %567, i32 noundef 500), !dbg !11485
  br label %604, !dbg !11486

568:                                              ; preds = %558
  %569 = load ptr, ptr %24, align 8, !dbg !11487
  %570 = getelementptr inbounds %struct.lwan_request_t_, ptr %569, i32 0, i32 0, !dbg !11489
  %571 = load i32, ptr %570, align 8, !dbg !11489
  %572 = and i32 %571, 2, !dbg !11490
  %573 = icmp ne i32 %572, 0, !dbg !11490
  br i1 %573, label %574, label %579, !dbg !11491

574:                                              ; preds = %568
  %575 = load ptr, ptr %24, align 8, !dbg !11492
  %576 = getelementptr inbounds [512 x i8], ptr %26, i64 0, i64 0, !dbg !11494
  %577 = load i64, ptr %28, align 8, !dbg !11495
  %578 = call i64 @lwan_write(ptr noundef %575, ptr noundef %576, i64 noundef %577), !dbg !11496
  br label %604, !dbg !11497

579:                                              ; preds = %568
  call void @llvm.dbg.declare(metadata ptr %29, metadata !11498, metadata !DIExpression()), !dbg !11504
  %580 = getelementptr inbounds [2 x %struct.lwan_value_t_], ptr %29, i64 0, i64 0, !dbg !11505
  %581 = getelementptr inbounds %struct.lwan_value_t_, ptr %580, i32 0, i32 0, !dbg !11506
  %582 = getelementptr inbounds [512 x i8], ptr %26, i64 0, i64 0, !dbg !11507
  store ptr %582, ptr %581, align 16, !dbg !11506
  %583 = getelementptr inbounds %struct.lwan_value_t_, ptr %580, i32 0, i32 1, !dbg !11506
  %584 = load i64, ptr %28, align 8, !dbg !11508
  store i64 %584, ptr %583, align 8, !dbg !11506
  %585 = getelementptr inbounds %struct.lwan_value_t_, ptr %580, i64 1, !dbg !11505
  %586 = getelementptr inbounds %struct.lwan_value_t_, ptr %585, i32 0, i32 0, !dbg !11509
  %587 = load ptr, ptr %24, align 8, !dbg !11510
  %588 = getelementptr inbounds %struct.lwan_request_t_, ptr %587, i32 0, i32 8, !dbg !11510
  %589 = getelementptr inbounds %struct.lwan_response_t_, ptr %588, i32 0, i32 0, !dbg !11510
  %590 = load ptr, ptr %589, align 8, !dbg !11510
  %591 = getelementptr inbounds %struct.strbuf_t_, ptr %590, i32 0, i32 0, !dbg !11510
  %592 = load ptr, ptr %591, align 8, !dbg !11510
  store ptr %592, ptr %586, align 16, !dbg !11509
  %593 = getelementptr inbounds %struct.lwan_value_t_, ptr %585, i32 0, i32 1, !dbg !11509
  %594 = load ptr, ptr %24, align 8, !dbg !11511
  %595 = getelementptr inbounds %struct.lwan_request_t_, ptr %594, i32 0, i32 8, !dbg !11511
  %596 = getelementptr inbounds %struct.lwan_response_t_, ptr %595, i32 0, i32 0, !dbg !11511
  %597 = load ptr, ptr %596, align 8, !dbg !11511
  %598 = getelementptr inbounds %struct.strbuf_t_, ptr %597, i32 0, i32 1, !dbg !11511
  %599 = getelementptr inbounds %struct.timespec, ptr %598, i32 0, i32 1, !dbg !11511
  %600 = load i64, ptr %599, align 8, !dbg !11511
  store i64 %600, ptr %593, align 8, !dbg !11509
  %601 = load ptr, ptr %24, align 8, !dbg !11512
  %602 = getelementptr inbounds [2 x %struct.lwan_value_t_], ptr %29, i64 0, i64 0, !dbg !11513
  %603 = call i64 @lwan_writev(ptr noundef %601, ptr noundef %602, i32 noundef 2), !dbg !11514
  br label %604, !dbg !11515

604:                                              ; preds = %579, %574, %566, %108, %74, %63, %52
  ret void, !dbg !11515
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_response_send_chunk(ptr noundef %0) #0 !dbg !1691 {
  %2 = alloca ptr, align 8
  %3 = alloca i64, align 8
  %4 = alloca [26 x i8], align 16
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca [3 x %struct.lwan_value_t_], align 16
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !11516, metadata !DIExpression()), !dbg !11517
  %8 = load ptr, ptr %2, align 8, !dbg !11518
  %9 = getelementptr inbounds %struct.lwan_request_t_, ptr %8, i32 0, i32 0, !dbg !11520
  %10 = load i32, ptr %9, align 8, !dbg !11520
  %11 = and i32 %10, 64, !dbg !11521
  %12 = icmp ne i32 %11, 0, !dbg !11521
  br i1 %12, label %22, label %13, !dbg !11522

13:                                               ; preds = %1
  %14 = load ptr, ptr %2, align 8, !dbg !11523
  %15 = call zeroext i1 @lwan_response_set_chunked(ptr noundef %14, i32 noundef 200), !dbg !11523
  %16 = xor i1 %15, true, !dbg !11523
  %17 = zext i1 %16 to i32, !dbg !11523
  %18 = sext i32 %17 to i64, !dbg !11523
  %19 = icmp ne i64 %18, 0, !dbg !11523
  br i1 %19, label %20, label %21, !dbg !11526

20:                                               ; preds = %13
  br label %98, !dbg !11527

21:                                               ; preds = %13
  br label %22, !dbg !11528

22:                                               ; preds = %21, %1
  call void @llvm.dbg.declare(metadata ptr %3, metadata !11529, metadata !DIExpression()), !dbg !11530
  %23 = load ptr, ptr %2, align 8, !dbg !11531
  %24 = getelementptr inbounds %struct.lwan_request_t_, ptr %23, i32 0, i32 8, !dbg !11531
  %25 = getelementptr inbounds %struct.lwan_response_t_, ptr %24, i32 0, i32 0, !dbg !11531
  %26 = load ptr, ptr %25, align 8, !dbg !11531
  %27 = getelementptr inbounds %struct.strbuf_t_, ptr %26, i32 0, i32 1, !dbg !11531
  %28 = getelementptr inbounds %struct.timespec, ptr %27, i32 0, i32 1, !dbg !11531
  %29 = load i64, ptr %28, align 8, !dbg !11531
  store i64 %29, ptr %3, align 8, !dbg !11530
  %30 = load i64, ptr %3, align 8, !dbg !11532
  %31 = icmp ne i64 %30, 0, !dbg !11532
  %32 = xor i1 %31, true, !dbg !11532
  %33 = zext i1 %32 to i32, !dbg !11532
  %34 = sext i32 %33 to i64, !dbg !11532
  %35 = icmp ne i64 %34, 0, !dbg !11532
  br i1 %35, label %36, label %39, !dbg !11534

36:                                               ; preds = %22
  %37 = load ptr, ptr %2, align 8, !dbg !11535
  %38 = call i64 @lwan_send(ptr noundef %37, ptr noundef @lwan_response_send_chunk.last_chunk, i64 noundef 5, i32 noundef 0), !dbg !11537
  br label %98, !dbg !11538

39:                                               ; preds = %22
  call void @llvm.dbg.declare(metadata ptr %4, metadata !11539, metadata !DIExpression()), !dbg !11540
  call void @llvm.dbg.declare(metadata ptr %5, metadata !11541, metadata !DIExpression()), !dbg !11542
  %40 = getelementptr inbounds [26 x i8], ptr %4, i64 0, i64 0, !dbg !11543
  %41 = load i64, ptr %3, align 8, !dbg !11544
  %42 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %40, i64 noundef 26, ptr noundef @.str.25.133, i64 noundef %41) #18, !dbg !11545
  store i32 %42, ptr %5, align 4, !dbg !11542
  %43 = load i32, ptr %5, align 4, !dbg !11546
  %44 = icmp slt i32 %43, 0, !dbg !11546
  %45 = zext i1 %44 to i32, !dbg !11546
  %46 = sext i32 %45 to i64, !dbg !11546
  %47 = icmp ne i64 %46, 0, !dbg !11546
  br i1 %47, label %48, label %49, !dbg !11548

48:                                               ; preds = %39
  br label %91, !dbg !11549

49:                                               ; preds = %39
  call void @llvm.dbg.declare(metadata ptr %6, metadata !11550, metadata !DIExpression()), !dbg !11551
  %50 = load i32, ptr %5, align 4, !dbg !11552
  %51 = sext i32 %50 to i64, !dbg !11553
  store i64 %51, ptr %6, align 8, !dbg !11551
  call void @llvm.dbg.declare(metadata ptr %7, metadata !11554, metadata !DIExpression()), !dbg !11556
  %52 = getelementptr inbounds [3 x %struct.lwan_value_t_], ptr %7, i64 0, i64 0, !dbg !11557
  %53 = getelementptr inbounds %struct.lwan_value_t_, ptr %52, i32 0, i32 0, !dbg !11558
  %54 = getelementptr inbounds [26 x i8], ptr %4, i64 0, i64 0, !dbg !11559
  store ptr %54, ptr %53, align 16, !dbg !11558
  %55 = getelementptr inbounds %struct.lwan_value_t_, ptr %52, i32 0, i32 1, !dbg !11558
  %56 = load i64, ptr %6, align 8, !dbg !11560
  store i64 %56, ptr %55, align 8, !dbg !11558
  %57 = getelementptr inbounds %struct.lwan_value_t_, ptr %52, i64 1, !dbg !11557
  %58 = getelementptr inbounds %struct.lwan_value_t_, ptr %57, i32 0, i32 0, !dbg !11561
  %59 = load ptr, ptr %2, align 8, !dbg !11562
  %60 = getelementptr inbounds %struct.lwan_request_t_, ptr %59, i32 0, i32 8, !dbg !11562
  %61 = getelementptr inbounds %struct.lwan_response_t_, ptr %60, i32 0, i32 0, !dbg !11562
  %62 = load ptr, ptr %61, align 8, !dbg !11562
  %63 = getelementptr inbounds %struct.strbuf_t_, ptr %62, i32 0, i32 0, !dbg !11562
  %64 = load ptr, ptr %63, align 8, !dbg !11562
  store ptr %64, ptr %58, align 16, !dbg !11561
  %65 = getelementptr inbounds %struct.lwan_value_t_, ptr %57, i32 0, i32 1, !dbg !11561
  %66 = load i64, ptr %3, align 8, !dbg !11563
  store i64 %66, ptr %65, align 8, !dbg !11561
  %67 = getelementptr inbounds %struct.lwan_value_t_, ptr %57, i64 1, !dbg !11557
  %68 = getelementptr inbounds %struct.lwan_value_t_, ptr %67, i32 0, i32 0, !dbg !11564
  store ptr @.str.26.134, ptr %68, align 16, !dbg !11564
  %69 = getelementptr inbounds %struct.lwan_value_t_, ptr %67, i32 0, i32 1, !dbg !11564
  store i64 2, ptr %69, align 8, !dbg !11564
  %70 = load ptr, ptr %2, align 8, !dbg !11565
  %71 = getelementptr inbounds [3 x %struct.lwan_value_t_], ptr %7, i64 0, i64 0, !dbg !11566
  %72 = call i64 @lwan_writev(ptr noundef %70, ptr noundef %71, i32 noundef 3), !dbg !11567
  %73 = load ptr, ptr %2, align 8, !dbg !11568
  %74 = getelementptr inbounds %struct.lwan_request_t_, ptr %73, i32 0, i32 8, !dbg !11568
  %75 = getelementptr inbounds %struct.lwan_response_t_, ptr %74, i32 0, i32 0, !dbg !11568
  %76 = load ptr, ptr %75, align 8, !dbg !11568
  %77 = call zeroext i1 @strbuf_reset_length(ptr noundef %76), !dbg !11568
  %78 = xor i1 %77, true, !dbg !11568
  %79 = xor i1 %78, true, !dbg !11568
  %80 = zext i1 %79 to i32, !dbg !11568
  %81 = sext i32 %80 to i64, !dbg !11568
  %82 = icmp ne i64 %81, 0, !dbg !11568
  br i1 %82, label %83, label %90, !dbg !11570

83:                                               ; preds = %49
  %84 = load ptr, ptr %2, align 8, !dbg !11571
  %85 = getelementptr inbounds %struct.lwan_request_t_, ptr %84, i32 0, i32 4, !dbg !11573
  %86 = load ptr, ptr %85, align 8, !dbg !11573
  %87 = getelementptr inbounds %struct.lwan_connection_t_, ptr %86, i32 0, i32 2, !dbg !11574
  %88 = load ptr, ptr %87, align 8, !dbg !11574
  %89 = call i32 @coro_yield(ptr noundef %88, i32 noundef 0), !dbg !11575
  br label %98, !dbg !11576

90:                                               ; preds = %49
  br label %91, !dbg !11568

91:                                               ; preds = %90, %48
  call void @llvm.dbg.label(metadata !11577), !dbg !11578
  %92 = load ptr, ptr %2, align 8, !dbg !11579
  %93 = getelementptr inbounds %struct.lwan_request_t_, ptr %92, i32 0, i32 4, !dbg !11580
  %94 = load ptr, ptr %93, align 8, !dbg !11580
  %95 = getelementptr inbounds %struct.lwan_connection_t_, ptr %94, i32 0, i32 2, !dbg !11581
  %96 = load ptr, ptr %95, align 8, !dbg !11581
  %97 = call i32 @coro_yield(ptr noundef %96, i32 noundef -1), !dbg !11582
  unreachable, !dbg !11583

98:                                               ; preds = %83, %36, %20
  ret void, !dbg !11584
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @log_request(ptr noundef %0, i32 noundef %1) #0 !dbg !11585 {
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca [46 x i8], align 16
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !11586, metadata !DIExpression()), !dbg !11587
  store i32 %1, ptr %4, align 4
  call void @llvm.dbg.declare(metadata ptr %4, metadata !11588, metadata !DIExpression()), !dbg !11589
  call void @llvm.dbg.declare(metadata ptr %5, metadata !11590, metadata !DIExpression()), !dbg !11591
  %6 = load ptr, ptr %3, align 8, !dbg !11592
  %7 = getelementptr inbounds [46 x i8], ptr %5, i64 0, i64 0, !dbg !11592
  %8 = call ptr @lwan_request_get_remote_address(ptr noundef %6, ptr noundef %7), !dbg !11592
  %9 = load ptr, ptr %3, align 8, !dbg !11592
  %10 = getelementptr inbounds %struct.lwan_request_t_, ptr %9, i32 0, i32 4, !dbg !11592
  %11 = load ptr, ptr %10, align 8, !dbg !11592
  %12 = getelementptr inbounds %struct.lwan_connection_t_, ptr %11, i32 0, i32 3, !dbg !11592
  %13 = load ptr, ptr %12, align 8, !dbg !11592
  %14 = getelementptr inbounds %struct.lwan_thread_t_, ptr %13, i32 0, i32 1, !dbg !11592
  %15 = getelementptr inbounds %struct.anon.27, ptr %14, i32 0, i32 0, !dbg !11592
  %16 = getelementptr inbounds [30 x i8], ptr %15, i64 0, i64 0, !dbg !11592
  %17 = load ptr, ptr %3, align 8, !dbg !11592
  %18 = call ptr @get_request_method(ptr noundef %17), !dbg !11592
  %19 = load ptr, ptr %3, align 8, !dbg !11592
  %20 = getelementptr inbounds %struct.lwan_request_t_, ptr %19, i32 0, i32 3, !dbg !11592
  %21 = getelementptr inbounds %struct.lwan_value_t_, ptr %20, i32 0, i32 0, !dbg !11592
  %22 = load ptr, ptr %21, align 8, !dbg !11592
  %23 = load ptr, ptr %3, align 8, !dbg !11592
  %24 = getelementptr inbounds %struct.lwan_request_t_, ptr %23, i32 0, i32 0, !dbg !11592
  %25 = load i32, ptr %24, align 8, !dbg !11592
  %26 = and i32 %25, 32, !dbg !11592
  %27 = icmp ne i32 %26, 0, !dbg !11592
  %28 = zext i1 %27 to i64, !dbg !11592
  %29 = select i1 %27, ptr @.str.33.126, ptr @.str.34.127, !dbg !11592
  %30 = load i32, ptr %4, align 4, !dbg !11592
  %31 = load ptr, ptr %3, align 8, !dbg !11592
  %32 = getelementptr inbounds %struct.lwan_request_t_, ptr %31, i32 0, i32 8, !dbg !11592
  %33 = getelementptr inbounds %struct.lwan_response_t_, ptr %32, i32 0, i32 1, !dbg !11592
  %34 = load ptr, ptr %33, align 8, !dbg !11592
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.3.95, i32 noundef 115, ptr noundef @__FUNCTION__.log_request, ptr noundef @.str.32.128, ptr noundef %8, ptr noundef %16, ptr noundef %18, ptr noundef %22, ptr noundef %29, i32 noundef %30, ptr noundef %34), !dbg !11592
  ret void, !dbg !11593
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_default_response(ptr noundef %0, i32 noundef %1) #0 !dbg !11594 {
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.list_node, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !11595, metadata !DIExpression()), !dbg !11596
  store i32 %1, ptr %4, align 4
  call void @llvm.dbg.declare(metadata ptr %4, metadata !11597, metadata !DIExpression()), !dbg !11598
  %6 = load ptr, ptr %3, align 8, !dbg !11599
  %7 = getelementptr inbounds %struct.lwan_request_t_, ptr %6, i32 0, i32 8, !dbg !11600
  %8 = getelementptr inbounds %struct.lwan_response_t_, ptr %7, i32 0, i32 1, !dbg !11601
  store ptr @.str.9.125, ptr %8, align 8, !dbg !11602
  %9 = load ptr, ptr @error_template, align 8, !dbg !11603
  %10 = load ptr, ptr %3, align 8, !dbg !11604
  %11 = getelementptr inbounds %struct.lwan_request_t_, ptr %10, i32 0, i32 8, !dbg !11605
  %12 = getelementptr inbounds %struct.lwan_response_t_, ptr %11, i32 0, i32 0, !dbg !11606
  %13 = load ptr, ptr %12, align 8, !dbg !11606
  %14 = getelementptr inbounds %struct.list_node, ptr %5, i32 0, i32 0, !dbg !11607
  %15 = load i32, ptr %4, align 4, !dbg !11608
  %16 = call ptr @lwan_http_status_as_string(i32 noundef %15) #22, !dbg !11609
  store ptr %16, ptr %14, align 8, !dbg !11607
  %17 = getelementptr inbounds %struct.list_node, ptr %5, i32 0, i32 1, !dbg !11607
  %18 = load i32, ptr %4, align 4, !dbg !11610
  %19 = call ptr @lwan_http_status_as_descriptive_string(i32 noundef %18) #22, !dbg !11611
  store ptr %19, ptr %17, align 8, !dbg !11607
  %20 = call ptr @lwan_tpl_apply_with_buffer(ptr noundef %9, ptr noundef %13, ptr noundef %5), !dbg !11612
  %21 = load ptr, ptr %3, align 8, !dbg !11613
  %22 = load i32, ptr %4, align 4, !dbg !11614
  call void @lwan_response(ptr noundef %21, i32 noundef %22), !dbg !11615
  ret void, !dbg !11616
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @get_request_method(ptr noundef %0) #0 !dbg !11617 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !11620, metadata !DIExpression()), !dbg !11621
  %4 = load ptr, ptr %3, align 8, !dbg !11622
  %5 = getelementptr inbounds %struct.lwan_request_t_, ptr %4, i32 0, i32 0, !dbg !11624
  %6 = load i32, ptr %5, align 8, !dbg !11624
  %7 = and i32 %6, 1, !dbg !11625
  %8 = icmp ne i32 %7, 0, !dbg !11625
  br i1 %8, label %9, label %10, !dbg !11626

9:                                                ; preds = %1
  store ptr @.str.35.129, ptr %2, align 8, !dbg !11627
  br label %25, !dbg !11627

10:                                               ; preds = %1
  %11 = load ptr, ptr %3, align 8, !dbg !11628
  %12 = getelementptr inbounds %struct.lwan_request_t_, ptr %11, i32 0, i32 0, !dbg !11630
  %13 = load i32, ptr %12, align 8, !dbg !11630
  %14 = and i32 %13, 2, !dbg !11631
  %15 = icmp ne i32 %14, 0, !dbg !11631
  br i1 %15, label %16, label %17, !dbg !11632

16:                                               ; preds = %10
  store ptr @.str.36.130, ptr %2, align 8, !dbg !11633
  br label %25, !dbg !11633

17:                                               ; preds = %10
  %18 = load ptr, ptr %3, align 8, !dbg !11634
  %19 = getelementptr inbounds %struct.lwan_request_t_, ptr %18, i32 0, i32 0, !dbg !11636
  %20 = load i32, ptr %19, align 8, !dbg !11636
  %21 = and i32 %20, 4, !dbg !11637
  %22 = icmp ne i32 %21, 0, !dbg !11637
  br i1 %22, label %23, label %24, !dbg !11638

23:                                               ; preds = %17
  store ptr @.str.37.131, ptr %2, align 8, !dbg !11639
  br label %25, !dbg !11639

24:                                               ; preds = %17
  store ptr @.str.38.132, ptr %2, align 8, !dbg !11640
  br label %25, !dbg !11640

25:                                               ; preds = %24, %23, %16, %9
  %26 = load ptr, ptr %2, align 8, !dbg !11641
  ret ptr %26, !dbg !11641
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @lwan_response_set_chunked(ptr noundef %0, i32 noundef %1) #0 !dbg !11642 {
  %3 = alloca i64, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca [25 x i8], align 16
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca ptr, align 8
  %16 = alloca i64, align 8
  %17 = alloca ptr, align 8
  %18 = alloca i64, align 8
  %19 = alloca ptr, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca ptr, align 8
  %23 = alloca i64, align 8
  %24 = alloca i1, align 1
  %25 = alloca ptr, align 8
  %26 = alloca i32, align 4
  %27 = alloca [4096 x i8], align 16
  %28 = alloca i64, align 8
  store ptr %0, ptr %25, align 8
  call void @llvm.dbg.declare(metadata ptr %25, metadata !11645, metadata !DIExpression()), !dbg !11646
  store i32 %1, ptr %26, align 4
  call void @llvm.dbg.declare(metadata ptr %26, metadata !11647, metadata !DIExpression()), !dbg !11648
  call void @llvm.dbg.declare(metadata ptr %27, metadata !11649, metadata !DIExpression()), !dbg !11650
  call void @llvm.dbg.declare(metadata ptr %28, metadata !11651, metadata !DIExpression()), !dbg !11652
  %29 = load ptr, ptr %25, align 8, !dbg !11653
  %30 = getelementptr inbounds %struct.lwan_request_t_, ptr %29, i32 0, i32 0, !dbg !11655
  %31 = load i32, ptr %30, align 8, !dbg !11655
  %32 = and i32 %31, 64, !dbg !11656
  %33 = icmp ne i32 %32, 0, !dbg !11656
  br i1 %33, label %34, label %35, !dbg !11657

34:                                               ; preds = %2
  store i1 false, ptr %24, align 1, !dbg !11658
  br label %506, !dbg !11658

35:                                               ; preds = %2
  %36 = load ptr, ptr %25, align 8, !dbg !11659
  %37 = getelementptr inbounds %struct.lwan_request_t_, ptr %36, i32 0, i32 0, !dbg !11660
  %38 = load i32, ptr %37, align 8, !dbg !11661
  %39 = or i32 %38, 128, !dbg !11661
  store i32 %39, ptr %37, align 8, !dbg !11661
  %40 = load ptr, ptr %25, align 8, !dbg !11662
  %41 = load i32, ptr %26, align 4, !dbg !11663
  %42 = getelementptr inbounds [4096 x i8], ptr %27, i64 0, i64 0, !dbg !11664
  store ptr %40, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !11219, metadata !DIExpression()), !dbg !11665
  store i32 %41, ptr %5, align 4
  call void @llvm.dbg.declare(metadata ptr %5, metadata !11225, metadata !DIExpression()), !dbg !11667
  store ptr %42, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !11227, metadata !DIExpression()), !dbg !11668
  store i64 4096, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !11229, metadata !DIExpression()), !dbg !11669
  call void @llvm.dbg.declare(metadata ptr %8, metadata !11231, metadata !DIExpression()), !dbg !11670
  call void @llvm.dbg.declare(metadata ptr %9, metadata !11233, metadata !DIExpression()), !dbg !11671
  %43 = load ptr, ptr %6, align 8, !dbg !11672
  %44 = load i64, ptr %7, align 8, !dbg !11673
  %45 = getelementptr inbounds i8, ptr %43, i64 %44, !dbg !11674
  store ptr %45, ptr %9, align 8, !dbg !11671
  call void @llvm.dbg.declare(metadata ptr %10, metadata !11238, metadata !DIExpression()), !dbg !11675
  call void @llvm.dbg.declare(metadata ptr %11, metadata !11240, metadata !DIExpression()), !dbg !11676
  store i8 0, ptr %11, align 1, !dbg !11676
  call void @llvm.dbg.declare(metadata ptr %12, metadata !11242, metadata !DIExpression()), !dbg !11677
  store i8 0, ptr %12, align 1, !dbg !11677
  %46 = load ptr, ptr %6, align 8, !dbg !11678
  store ptr %46, ptr %8, align 8, !dbg !11679
  %47 = load ptr, ptr %4, align 8, !dbg !11680
  %48 = load i32, ptr %47, align 8, !dbg !11681
  %49 = and i32 %48, 32, !dbg !11682
  %50 = icmp ne i32 %49, 0, !dbg !11682
  br i1 %50, label %51, label %62, !dbg !11683

51:                                               ; preds = %35
  %52 = load ptr, ptr %8, align 8, !dbg !11684
  %53 = getelementptr inbounds i8, ptr %52, i64 9, !dbg !11684
  %54 = load ptr, ptr %9, align 8, !dbg !11684
  %55 = icmp uge ptr %53, %54, !dbg !11684
  %56 = zext i1 %55 to i32, !dbg !11684
  %57 = sext i32 %56 to i64, !dbg !11684
  br i1 %55, label %58, label %59, !dbg !11685

58:                                               ; preds = %51
  store i64 0, ptr %3, align 8, !dbg !11684
  br label %488, !dbg !11684

59:                                               ; preds = %51
  %60 = load ptr, ptr %8, align 8, !dbg !11685
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %60, ptr align 1 @.str.10.110, i64 9, i1 false), !dbg !11685
  %61 = getelementptr inbounds i8, ptr %60, i64 9, !dbg !11685
  store ptr %61, ptr %8, align 8, !dbg !11685
  br label %73, !dbg !11685

62:                                               ; preds = %35
  %63 = load ptr, ptr %8, align 8, !dbg !11686
  %64 = getelementptr inbounds i8, ptr %63, i64 9, !dbg !11686
  %65 = load ptr, ptr %9, align 8, !dbg !11686
  %66 = icmp uge ptr %64, %65, !dbg !11686
  %67 = zext i1 %66 to i32, !dbg !11686
  %68 = sext i32 %67 to i64, !dbg !11686
  br i1 %66, label %69, label %70, !dbg !11687

69:                                               ; preds = %62
  store i64 0, ptr %3, align 8, !dbg !11686
  br label %488, !dbg !11686

70:                                               ; preds = %62
  %71 = load ptr, ptr %8, align 8, !dbg !11687
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %71, ptr align 1 @.str.11.111, i64 9, i1 false), !dbg !11687
  %72 = getelementptr inbounds i8, ptr %71, i64 9, !dbg !11687
  store ptr %72, ptr %8, align 8, !dbg !11687
  br label %73

73:                                               ; preds = %70, %59
  call void @llvm.dbg.declare(metadata ptr %13, metadata !11259, metadata !DIExpression()), !dbg !11688
  %74 = load i32, ptr %5, align 4, !dbg !11688
  %75 = call ptr @lwan_http_status_as_string_with_code(i32 noundef %74) #22, !dbg !11688
  %76 = call i64 @strlen(ptr noundef %75) #22, !dbg !11688
  store i64 %76, ptr %13, align 8, !dbg !11688
  %77 = load ptr, ptr %8, align 8, !dbg !11689
  %78 = load i64, ptr %13, align 8, !dbg !11689
  %79 = getelementptr inbounds i8, ptr %77, i64 %78, !dbg !11689
  %80 = load ptr, ptr %9, align 8, !dbg !11689
  %81 = icmp uge ptr %79, %80, !dbg !11689
  %82 = zext i1 %81 to i32, !dbg !11689
  %83 = sext i32 %82 to i64, !dbg !11689
  br i1 %81, label %84, label %85, !dbg !11690

84:                                               ; preds = %73
  store i64 0, ptr %3, align 8, !dbg !11689
  br label %488, !dbg !11689

85:                                               ; preds = %73
  %86 = load ptr, ptr %8, align 8, !dbg !11690
  %87 = load i32, ptr %5, align 4, !dbg !11690
  %88 = call ptr @lwan_http_status_as_string_with_code(i32 noundef %87) #22, !dbg !11690
  %89 = load i64, ptr %13, align 8, !dbg !11690
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %86, ptr align 1 %88, i64 %89, i1 false), !dbg !11690
  %90 = getelementptr inbounds i8, ptr %86, i64 %89, !dbg !11690
  store ptr %90, ptr %8, align 8, !dbg !11690
  %91 = load ptr, ptr %4, align 8, !dbg !11691
  %92 = load i32, ptr %91, align 8, !dbg !11692
  %93 = and i32 %92, 128, !dbg !11693
  %94 = icmp ne i32 %93, 0, !dbg !11693
  br i1 %94, label %95, label %106, !dbg !11694

95:                                               ; preds = %85
  %96 = load ptr, ptr %8, align 8, !dbg !11695
  %97 = getelementptr inbounds i8, ptr %96, i64 28, !dbg !11695
  %98 = load ptr, ptr %9, align 8, !dbg !11695
  %99 = icmp uge ptr %97, %98, !dbg !11695
  %100 = zext i1 %99 to i32, !dbg !11695
  %101 = sext i32 %100 to i64, !dbg !11695
  br i1 %99, label %102, label %103, !dbg !11696

102:                                              ; preds = %95
  store i64 0, ptr %3, align 8, !dbg !11695
  br label %488, !dbg !11695

103:                                              ; preds = %95
  %104 = load ptr, ptr %8, align 8, !dbg !11696
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %104, ptr align 1 @.str.12.112, i64 28, i1 false), !dbg !11696
  %105 = getelementptr inbounds i8, ptr %104, i64 28, !dbg !11696
  store ptr %105, ptr %8, align 8, !dbg !11696
  br label %188, !dbg !11697

106:                                              ; preds = %85
  %107 = load ptr, ptr %4, align 8, !dbg !11698
  %108 = load i32, ptr %107, align 8, !dbg !11699
  %109 = and i32 %108, 256, !dbg !11700
  %110 = icmp ne i32 %109, 0, !dbg !11700
  br i1 %110, label %111, label %112, !dbg !11701

111:                                              ; preds = %106
  br label %187, !dbg !11702

112:                                              ; preds = %106
  %113 = load ptr, ptr %8, align 8, !dbg !11703
  %114 = getelementptr inbounds i8, ptr %113, i64 18, !dbg !11703
  %115 = load ptr, ptr %9, align 8, !dbg !11703
  %116 = icmp uge ptr %114, %115, !dbg !11703
  %117 = zext i1 %116 to i32, !dbg !11703
  %118 = sext i32 %117 to i64, !dbg !11703
  br i1 %116, label %119, label %120, !dbg !11704

119:                                              ; preds = %112
  store i64 0, ptr %3, align 8, !dbg !11703
  br label %488, !dbg !11703

120:                                              ; preds = %112
  %121 = load ptr, ptr %8, align 8, !dbg !11704
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %121, ptr align 1 @.str.13.113, i64 18, i1 false), !dbg !11704
  %122 = getelementptr inbounds i8, ptr %121, i64 18, !dbg !11704
  store ptr %122, ptr %8, align 8, !dbg !11704
  %123 = load ptr, ptr %4, align 8, !dbg !11705
  %124 = getelementptr inbounds %struct.lwan_request_t_, ptr %123, i32 0, i32 8, !dbg !11706
  %125 = getelementptr inbounds %struct.lwan_response_t_, ptr %124, i32 0, i32 4, !dbg !11707
  %126 = load ptr, ptr %125, align 8, !dbg !11708
  %127 = icmp ne ptr %126, null, !dbg !11705
  br i1 %127, label %128, label %156, !dbg !11709

128:                                              ; preds = %120
  call void @llvm.dbg.declare(metadata ptr %14, metadata !11295, metadata !DIExpression()), !dbg !11710
  call void @llvm.dbg.declare(metadata ptr %15, metadata !11298, metadata !DIExpression()), !dbg !11710
  %129 = load ptr, ptr %4, align 8, !dbg !11710
  %130 = getelementptr inbounds %struct.lwan_request_t_, ptr %129, i32 0, i32 8, !dbg !11710
  %131 = getelementptr inbounds %struct.lwan_response_t_, ptr %130, i32 0, i32 2, !dbg !11710
  %132 = load i64, ptr %131, align 8, !dbg !11710
  %133 = call ptr @uint_to_string(i64 noundef %132, ptr noundef %10, ptr noundef %14) #18, !dbg !11710
  store ptr %133, ptr %15, align 8, !dbg !11710
  %134 = load ptr, ptr %8, align 8, !dbg !11711
  %135 = load i64, ptr %14, align 8, !dbg !11711
  %136 = getelementptr inbounds i8, ptr %134, i64 %135, !dbg !11711
  %137 = load ptr, ptr %9, align 8, !dbg !11711
  %138 = icmp uge ptr %136, %137, !dbg !11711
  %139 = zext i1 %138 to i32, !dbg !11711
  %140 = sext i32 %139 to i64, !dbg !11711
  br i1 %138, label %141, label %142, !dbg !11710

141:                                              ; preds = %128
  store i64 0, ptr %3, align 8, !dbg !11711
  br label %488, !dbg !11711

142:                                              ; preds = %128
  %143 = load ptr, ptr %8, align 8, !dbg !11712
  %144 = load i64, ptr %14, align 8, !dbg !11712
  %145 = getelementptr inbounds i8, ptr %143, i64 %144, !dbg !11712
  %146 = load ptr, ptr %9, align 8, !dbg !11712
  %147 = icmp uge ptr %145, %146, !dbg !11712
  %148 = zext i1 %147 to i32, !dbg !11712
  %149 = sext i32 %148 to i64, !dbg !11712
  br i1 %147, label %150, label %151, !dbg !11713

150:                                              ; preds = %142
  store i64 0, ptr %3, align 8, !dbg !11712
  br label %488, !dbg !11712

151:                                              ; preds = %142
  %152 = load ptr, ptr %8, align 8, !dbg !11713
  %153 = load ptr, ptr %15, align 8, !dbg !11713
  %154 = load i64, ptr %14, align 8, !dbg !11713
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %152, ptr align 1 %153, i64 %154, i1 false), !dbg !11713
  %155 = getelementptr inbounds i8, ptr %152, i64 %154, !dbg !11713
  store ptr %155, ptr %8, align 8, !dbg !11713
  br label %186, !dbg !11710

156:                                              ; preds = %120
  call void @llvm.dbg.declare(metadata ptr %16, metadata !11305, metadata !DIExpression()), !dbg !11714
  call void @llvm.dbg.declare(metadata ptr %17, metadata !11308, metadata !DIExpression()), !dbg !11714
  %157 = load ptr, ptr %4, align 8, !dbg !11714
  %158 = getelementptr inbounds %struct.lwan_request_t_, ptr %157, i32 0, i32 8, !dbg !11714
  %159 = load ptr, ptr %158, align 8, !dbg !11714
  %160 = getelementptr inbounds %struct.strbuf_t_, ptr %159, i32 0, i32 1, !dbg !11714
  %161 = getelementptr inbounds %struct.timespec, ptr %160, i32 0, i32 1, !dbg !11714
  %162 = load i64, ptr %161, align 8, !dbg !11714
  %163 = call ptr @uint_to_string(i64 noundef %162, ptr noundef %10, ptr noundef %16) #18, !dbg !11714
  store ptr %163, ptr %17, align 8, !dbg !11714
  %164 = load ptr, ptr %8, align 8, !dbg !11715
  %165 = load i64, ptr %16, align 8, !dbg !11715
  %166 = getelementptr inbounds i8, ptr %164, i64 %165, !dbg !11715
  %167 = load ptr, ptr %9, align 8, !dbg !11715
  %168 = icmp uge ptr %166, %167, !dbg !11715
  %169 = zext i1 %168 to i32, !dbg !11715
  %170 = sext i32 %169 to i64, !dbg !11715
  br i1 %168, label %171, label %172, !dbg !11714

171:                                              ; preds = %156
  store i64 0, ptr %3, align 8, !dbg !11715
  br label %488, !dbg !11715

172:                                              ; preds = %156
  %173 = load ptr, ptr %8, align 8, !dbg !11716
  %174 = load i64, ptr %16, align 8, !dbg !11716
  %175 = getelementptr inbounds i8, ptr %173, i64 %174, !dbg !11716
  %176 = load ptr, ptr %9, align 8, !dbg !11716
  %177 = icmp uge ptr %175, %176, !dbg !11716
  %178 = zext i1 %177 to i32, !dbg !11716
  %179 = sext i32 %178 to i64, !dbg !11716
  br i1 %177, label %180, label %181, !dbg !11717

180:                                              ; preds = %172
  store i64 0, ptr %3, align 8, !dbg !11716
  br label %488, !dbg !11716

181:                                              ; preds = %172
  %182 = load ptr, ptr %8, align 8, !dbg !11717
  %183 = load ptr, ptr %17, align 8, !dbg !11717
  %184 = load i64, ptr %16, align 8, !dbg !11717
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %182, ptr align 1 %183, i64 %184, i1 false), !dbg !11717
  %185 = getelementptr inbounds i8, ptr %182, i64 %184, !dbg !11717
  store ptr %185, ptr %8, align 8, !dbg !11717
  br label %186

186:                                              ; preds = %181, %151
  br label %187

187:                                              ; preds = %186, %111
  br label %188

188:                                              ; preds = %187, %103
  %189 = load ptr, ptr %8, align 8, !dbg !11718
  %190 = getelementptr inbounds i8, ptr %189, i64 16, !dbg !11718
  %191 = load ptr, ptr %9, align 8, !dbg !11718
  %192 = icmp uge ptr %190, %191, !dbg !11718
  %193 = zext i1 %192 to i32, !dbg !11718
  %194 = sext i32 %193 to i64, !dbg !11718
  br i1 %192, label %195, label %196, !dbg !11719

195:                                              ; preds = %188
  store i64 0, ptr %3, align 8, !dbg !11718
  br label %488, !dbg !11718

196:                                              ; preds = %188
  %197 = load ptr, ptr %8, align 8, !dbg !11719
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %197, ptr align 1 @.str.14.114, i64 16, i1 false), !dbg !11719
  %198 = getelementptr inbounds i8, ptr %197, i64 16, !dbg !11719
  store ptr %198, ptr %8, align 8, !dbg !11719
  call void @llvm.dbg.declare(metadata ptr %18, metadata !11319, metadata !DIExpression()), !dbg !11720
  %199 = load ptr, ptr %4, align 8, !dbg !11720
  %200 = getelementptr inbounds %struct.lwan_request_t_, ptr %199, i32 0, i32 8, !dbg !11720
  %201 = getelementptr inbounds %struct.lwan_response_t_, ptr %200, i32 0, i32 1, !dbg !11720
  %202 = load ptr, ptr %201, align 8, !dbg !11720
  %203 = call i64 @strlen(ptr noundef %202) #22, !dbg !11720
  store i64 %203, ptr %18, align 8, !dbg !11720
  %204 = load ptr, ptr %8, align 8, !dbg !11721
  %205 = load i64, ptr %18, align 8, !dbg !11721
  %206 = getelementptr inbounds i8, ptr %204, i64 %205, !dbg !11721
  %207 = load ptr, ptr %9, align 8, !dbg !11721
  %208 = icmp uge ptr %206, %207, !dbg !11721
  %209 = zext i1 %208 to i32, !dbg !11721
  %210 = sext i32 %209 to i64, !dbg !11721
  br i1 %208, label %211, label %212, !dbg !11722

211:                                              ; preds = %196
  store i64 0, ptr %3, align 8, !dbg !11721
  br label %488, !dbg !11721

212:                                              ; preds = %196
  %213 = load ptr, ptr %8, align 8, !dbg !11722
  %214 = load ptr, ptr %4, align 8, !dbg !11722
  %215 = getelementptr inbounds %struct.lwan_request_t_, ptr %214, i32 0, i32 8, !dbg !11722
  %216 = getelementptr inbounds %struct.lwan_response_t_, ptr %215, i32 0, i32 1, !dbg !11722
  %217 = load ptr, ptr %216, align 8, !dbg !11722
  %218 = load i64, ptr %18, align 8, !dbg !11722
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %213, ptr align 1 %217, i64 %218, i1 false), !dbg !11722
  %219 = getelementptr inbounds i8, ptr %213, i64 %218, !dbg !11722
  store ptr %219, ptr %8, align 8, !dbg !11722
  %220 = load ptr, ptr %4, align 8, !dbg !11723
  %221 = getelementptr inbounds %struct.lwan_request_t_, ptr %220, i32 0, i32 4, !dbg !11724
  %222 = load ptr, ptr %221, align 8, !dbg !11724
  %223 = load i32, ptr %222, align 8, !dbg !11725
  %224 = and i32 %223, 1, !dbg !11726
  %225 = icmp ne i32 %224, 0, !dbg !11726
  br i1 %225, label %226, label %237, !dbg !11727

226:                                              ; preds = %212
  %227 = load ptr, ptr %8, align 8, !dbg !11728
  %228 = getelementptr inbounds i8, ptr %227, i64 24, !dbg !11728
  %229 = load ptr, ptr %9, align 8, !dbg !11728
  %230 = icmp uge ptr %228, %229, !dbg !11728
  %231 = zext i1 %230 to i32, !dbg !11728
  %232 = sext i32 %231 to i64, !dbg !11728
  br i1 %230, label %233, label %234, !dbg !11729

233:                                              ; preds = %226
  store i64 0, ptr %3, align 8, !dbg !11728
  br label %488, !dbg !11728

234:                                              ; preds = %226
  %235 = load ptr, ptr %8, align 8, !dbg !11729
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %235, ptr align 1 @.str.15.115, i64 24, i1 false), !dbg !11729
  %236 = getelementptr inbounds i8, ptr %235, i64 24, !dbg !11729
  store ptr %236, ptr %8, align 8, !dbg !11729
  br label %248, !dbg !11729

237:                                              ; preds = %212
  %238 = load ptr, ptr %8, align 8, !dbg !11730
  %239 = getelementptr inbounds i8, ptr %238, i64 19, !dbg !11730
  %240 = load ptr, ptr %9, align 8, !dbg !11730
  %241 = icmp uge ptr %239, %240, !dbg !11730
  %242 = zext i1 %241 to i32, !dbg !11730
  %243 = sext i32 %242 to i64, !dbg !11730
  br i1 %241, label %244, label %245, !dbg !11731

244:                                              ; preds = %237
  store i64 0, ptr %3, align 8, !dbg !11730
  br label %488, !dbg !11730

245:                                              ; preds = %237
  %246 = load ptr, ptr %8, align 8, !dbg !11731
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %246, ptr align 1 @.str.16.116, i64 19, i1 false), !dbg !11731
  %247 = getelementptr inbounds i8, ptr %246, i64 19, !dbg !11731
  store ptr %247, ptr %8, align 8, !dbg !11731
  br label %248

248:                                              ; preds = %245, %234
  %249 = load i32, ptr %5, align 4, !dbg !11732
  %250 = icmp ult i32 %249, 400, !dbg !11733
  br i1 %250, label %251, label %350, !dbg !11734

251:                                              ; preds = %248
  %252 = load ptr, ptr %4, align 8, !dbg !11735
  %253 = getelementptr inbounds %struct.lwan_request_t_, ptr %252, i32 0, i32 8, !dbg !11736
  %254 = getelementptr inbounds %struct.lwan_response_t_, ptr %253, i32 0, i32 3, !dbg !11737
  %255 = load ptr, ptr %254, align 8, !dbg !11737
  %256 = icmp ne ptr %255, null, !dbg !11735
  br i1 %256, label %257, label %350, !dbg !11738

257:                                              ; preds = %251
  call void @llvm.dbg.declare(metadata ptr %19, metadata !11348, metadata !DIExpression()), !dbg !11739
  %258 = load ptr, ptr %4, align 8, !dbg !11740
  %259 = getelementptr inbounds %struct.lwan_request_t_, ptr %258, i32 0, i32 8, !dbg !11741
  %260 = getelementptr inbounds %struct.lwan_response_t_, ptr %259, i32 0, i32 3, !dbg !11742
  %261 = load ptr, ptr %260, align 8, !dbg !11742
  store ptr %261, ptr %19, align 8, !dbg !11743
  br label %262, !dbg !11744

262:                                              ; preds = %346, %257
  %263 = load ptr, ptr %19, align 8, !dbg !11745
  %264 = load ptr, ptr %263, align 8, !dbg !11746
  %265 = icmp ne ptr %264, null, !dbg !11747
  br i1 %265, label %266, label %349, !dbg !11747

266:                                              ; preds = %262
  %267 = load ptr, ptr %19, align 8, !dbg !11748
  %268 = load ptr, ptr %267, align 8, !dbg !11748
  %269 = call i32 @strcmp(ptr noundef %268, ptr noundef @.str.17.117) #22, !dbg !11748
  %270 = icmp ne i32 %269, 0, !dbg !11748
  %271 = xor i1 %270, true, !dbg !11748
  %272 = zext i1 %271 to i32, !dbg !11748
  %273 = sext i32 %272 to i64, !dbg !11748
  br i1 %271, label %274, label %275, !dbg !11749

274:                                              ; preds = %266
  br label %346, !dbg !11750

275:                                              ; preds = %266
  %276 = load ptr, ptr %19, align 8, !dbg !11751
  %277 = load ptr, ptr %276, align 8, !dbg !11751
  %278 = call i32 @strcmp(ptr noundef %277, ptr noundef @.str.18.118) #22, !dbg !11751
  %279 = icmp ne i32 %278, 0, !dbg !11751
  %280 = xor i1 %279, true, !dbg !11751
  %281 = zext i1 %280 to i32, !dbg !11751
  %282 = sext i32 %281 to i64, !dbg !11751
  br i1 %280, label %283, label %284, !dbg !11752

283:                                              ; preds = %275
  store i8 1, ptr %11, align 1, !dbg !11753
  br label %284, !dbg !11754

284:                                              ; preds = %283, %275
  %285 = load ptr, ptr %19, align 8, !dbg !11755
  %286 = load ptr, ptr %285, align 8, !dbg !11755
  %287 = call i32 @strcmp(ptr noundef %286, ptr noundef @.str.19.119) #22, !dbg !11755
  %288 = icmp ne i32 %287, 0, !dbg !11755
  %289 = xor i1 %288, true, !dbg !11755
  %290 = zext i1 %289 to i32, !dbg !11755
  %291 = sext i32 %290 to i64, !dbg !11755
  br i1 %289, label %292, label %293, !dbg !11756

292:                                              ; preds = %284
  store i8 1, ptr %12, align 1, !dbg !11757
  br label %293, !dbg !11758

293:                                              ; preds = %292, %284
  %294 = load ptr, ptr %8, align 8, !dbg !11759
  %295 = getelementptr inbounds i8, ptr %294, i64 4, !dbg !11759
  %296 = load ptr, ptr %9, align 8, !dbg !11759
  %297 = icmp uge ptr %295, %296, !dbg !11759
  %298 = zext i1 %297 to i32, !dbg !11759
  %299 = sext i32 %298 to i64, !dbg !11759
  br i1 %297, label %300, label %301, !dbg !11760

300:                                              ; preds = %293
  store i64 0, ptr %3, align 8, !dbg !11759
  br label %488, !dbg !11759

301:                                              ; preds = %293
  %302 = load ptr, ptr %8, align 8, !dbg !11761
  %303 = getelementptr inbounds i8, ptr %302, i32 1, !dbg !11761
  store ptr %303, ptr %8, align 8, !dbg !11761
  store i8 13, ptr %302, align 1, !dbg !11761
  %304 = load ptr, ptr %8, align 8, !dbg !11762
  %305 = getelementptr inbounds i8, ptr %304, i32 1, !dbg !11762
  store ptr %305, ptr %8, align 8, !dbg !11762
  store i8 10, ptr %304, align 1, !dbg !11762
  call void @llvm.dbg.declare(metadata ptr %20, metadata !11381, metadata !DIExpression()), !dbg !11763
  %306 = load ptr, ptr %19, align 8, !dbg !11763
  %307 = load ptr, ptr %306, align 8, !dbg !11763
  %308 = call i64 @strlen(ptr noundef %307) #22, !dbg !11763
  store i64 %308, ptr %20, align 8, !dbg !11763
  %309 = load ptr, ptr %8, align 8, !dbg !11764
  %310 = load i64, ptr %20, align 8, !dbg !11764
  %311 = getelementptr inbounds i8, ptr %309, i64 %310, !dbg !11764
  %312 = load ptr, ptr %9, align 8, !dbg !11764
  %313 = icmp uge ptr %311, %312, !dbg !11764
  %314 = zext i1 %313 to i32, !dbg !11764
  %315 = sext i32 %314 to i64, !dbg !11764
  br i1 %313, label %316, label %317, !dbg !11765

316:                                              ; preds = %301
  store i64 0, ptr %3, align 8, !dbg !11764
  br label %488, !dbg !11764

317:                                              ; preds = %301
  %318 = load ptr, ptr %8, align 8, !dbg !11765
  %319 = load ptr, ptr %19, align 8, !dbg !11765
  %320 = load ptr, ptr %319, align 8, !dbg !11765
  %321 = load i64, ptr %20, align 8, !dbg !11765
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %318, ptr align 1 %320, i64 %321, i1 false), !dbg !11765
  %322 = getelementptr inbounds i8, ptr %318, i64 %321, !dbg !11765
  store ptr %322, ptr %8, align 8, !dbg !11765
  %323 = load ptr, ptr %8, align 8, !dbg !11766
  %324 = getelementptr inbounds i8, ptr %323, i32 1, !dbg !11766
  store ptr %324, ptr %8, align 8, !dbg !11766
  store i8 58, ptr %323, align 1, !dbg !11766
  %325 = load ptr, ptr %8, align 8, !dbg !11767
  %326 = getelementptr inbounds i8, ptr %325, i32 1, !dbg !11767
  store ptr %326, ptr %8, align 8, !dbg !11767
  store i8 32, ptr %325, align 1, !dbg !11767
  call void @llvm.dbg.declare(metadata ptr %21, metadata !11390, metadata !DIExpression()), !dbg !11768
  %327 = load ptr, ptr %19, align 8, !dbg !11768
  %328 = getelementptr inbounds %struct.list_node, ptr %327, i32 0, i32 1, !dbg !11768
  %329 = load ptr, ptr %328, align 8, !dbg !11768
  %330 = call i64 @strlen(ptr noundef %329) #22, !dbg !11768
  store i64 %330, ptr %21, align 8, !dbg !11768
  %331 = load ptr, ptr %8, align 8, !dbg !11769
  %332 = load i64, ptr %21, align 8, !dbg !11769
  %333 = getelementptr inbounds i8, ptr %331, i64 %332, !dbg !11769
  %334 = load ptr, ptr %9, align 8, !dbg !11769
  %335 = icmp uge ptr %333, %334, !dbg !11769
  %336 = zext i1 %335 to i32, !dbg !11769
  %337 = sext i32 %336 to i64, !dbg !11769
  br i1 %335, label %338, label %339, !dbg !11770

338:                                              ; preds = %317
  store i64 0, ptr %3, align 8, !dbg !11769
  br label %488, !dbg !11769

339:                                              ; preds = %317
  %340 = load ptr, ptr %8, align 8, !dbg !11770
  %341 = load ptr, ptr %19, align 8, !dbg !11770
  %342 = getelementptr inbounds %struct.list_node, ptr %341, i32 0, i32 1, !dbg !11770
  %343 = load ptr, ptr %342, align 8, !dbg !11770
  %344 = load i64, ptr %21, align 8, !dbg !11770
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %340, ptr align 1 %343, i64 %344, i1 false), !dbg !11770
  %345 = getelementptr inbounds i8, ptr %340, i64 %344, !dbg !11770
  store ptr %345, ptr %8, align 8, !dbg !11770
  br label %346, !dbg !11771

346:                                              ; preds = %339, %274
  %347 = load ptr, ptr %19, align 8, !dbg !11772
  %348 = getelementptr inbounds %struct.list_node, ptr %347, i32 1, !dbg !11772
  store ptr %348, ptr %19, align 8, !dbg !11772
  br label %262, !dbg !11773, !llvm.loop !11774

349:                                              ; preds = %262
  br label %402, !dbg !11776

350:                                              ; preds = %251, %248
  %351 = load i32, ptr %5, align 4, !dbg !11777
  %352 = icmp eq i32 %351, 401, !dbg !11778
  br i1 %352, label %353, label %401, !dbg !11779

353:                                              ; preds = %350
  call void @llvm.dbg.declare(metadata ptr %22, metadata !11407, metadata !DIExpression()), !dbg !11780
  %354 = load ptr, ptr %4, align 8, !dbg !11781
  %355 = getelementptr inbounds %struct.lwan_request_t_, ptr %354, i32 0, i32 8, !dbg !11782
  %356 = getelementptr inbounds %struct.lwan_response_t_, ptr %355, i32 0, i32 3, !dbg !11783
  %357 = load ptr, ptr %356, align 8, !dbg !11783
  store ptr %357, ptr %22, align 8, !dbg !11784
  br label %358, !dbg !11785

358:                                              ; preds = %397, %353
  %359 = load ptr, ptr %22, align 8, !dbg !11786
  %360 = load ptr, ptr %359, align 8, !dbg !11787
  %361 = icmp ne ptr %360, null, !dbg !11788
  br i1 %361, label %362, label %400, !dbg !11788

362:                                              ; preds = %358
  %363 = load ptr, ptr %22, align 8, !dbg !11789
  %364 = load ptr, ptr %363, align 8, !dbg !11790
  %365 = call i32 @strcmp(ptr noundef %364, ptr noundef @.str.20.120) #22, !dbg !11791
  %366 = icmp ne i32 %365, 0, !dbg !11791
  br i1 %366, label %397, label %367, !dbg !11792

367:                                              ; preds = %362
  %368 = load ptr, ptr %8, align 8, !dbg !11793
  %369 = getelementptr inbounds i8, ptr %368, i64 20, !dbg !11793
  %370 = load ptr, ptr %9, align 8, !dbg !11793
  %371 = icmp uge ptr %369, %370, !dbg !11793
  %372 = zext i1 %371 to i32, !dbg !11793
  %373 = sext i32 %372 to i64, !dbg !11793
  br i1 %371, label %374, label %375, !dbg !11794

374:                                              ; preds = %367
  store i64 0, ptr %3, align 8, !dbg !11793
  br label %488, !dbg !11793

375:                                              ; preds = %367
  %376 = load ptr, ptr %8, align 8, !dbg !11794
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %376, ptr align 1 @.str.21.121, i64 20, i1 false), !dbg !11794
  %377 = getelementptr inbounds i8, ptr %376, i64 20, !dbg !11794
  store ptr %377, ptr %8, align 8, !dbg !11794
  call void @llvm.dbg.declare(metadata ptr %23, metadata !11431, metadata !DIExpression()), !dbg !11795
  %378 = load ptr, ptr %22, align 8, !dbg !11795
  %379 = getelementptr inbounds %struct.list_node, ptr %378, i32 0, i32 1, !dbg !11795
  %380 = load ptr, ptr %379, align 8, !dbg !11795
  %381 = call i64 @strlen(ptr noundef %380) #22, !dbg !11795
  store i64 %381, ptr %23, align 8, !dbg !11795
  %382 = load ptr, ptr %8, align 8, !dbg !11796
  %383 = load i64, ptr %23, align 8, !dbg !11796
  %384 = getelementptr inbounds i8, ptr %382, i64 %383, !dbg !11796
  %385 = load ptr, ptr %9, align 8, !dbg !11796
  %386 = icmp uge ptr %384, %385, !dbg !11796
  %387 = zext i1 %386 to i32, !dbg !11796
  %388 = sext i32 %387 to i64, !dbg !11796
  br i1 %386, label %389, label %390, !dbg !11797

389:                                              ; preds = %375
  store i64 0, ptr %3, align 8, !dbg !11796
  br label %488, !dbg !11796

390:                                              ; preds = %375
  %391 = load ptr, ptr %8, align 8, !dbg !11797
  %392 = load ptr, ptr %22, align 8, !dbg !11797
  %393 = getelementptr inbounds %struct.list_node, ptr %392, i32 0, i32 1, !dbg !11797
  %394 = load ptr, ptr %393, align 8, !dbg !11797
  %395 = load i64, ptr %23, align 8, !dbg !11797
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %391, ptr align 1 %394, i64 %395, i1 false), !dbg !11797
  %396 = getelementptr inbounds i8, ptr %391, i64 %395, !dbg !11797
  store ptr %396, ptr %8, align 8, !dbg !11797
  br label %400, !dbg !11798

397:                                              ; preds = %362
  %398 = load ptr, ptr %22, align 8, !dbg !11799
  %399 = getelementptr inbounds %struct.list_node, ptr %398, i32 1, !dbg !11799
  store ptr %399, ptr %22, align 8, !dbg !11799
  br label %358, !dbg !11800, !llvm.loop !11801

400:                                              ; preds = %390, %358
  br label %401, !dbg !11803

401:                                              ; preds = %400, %350
  br label %402

402:                                              ; preds = %401, %349
  %403 = load i8, ptr %11, align 1, !dbg !11804
  %404 = trunc i8 %403 to i1, !dbg !11804
  %405 = xor i1 %404, true, !dbg !11804
  %406 = xor i1 %404, true, !dbg !11804
  %407 = zext i1 %406 to i32, !dbg !11804
  %408 = sext i32 %407 to i64, !dbg !11804
  br i1 %406, label %409, label %436, !dbg !11805

409:                                              ; preds = %402
  %410 = load ptr, ptr %8, align 8, !dbg !11806
  %411 = getelementptr inbounds i8, ptr %410, i64 8, !dbg !11806
  %412 = load ptr, ptr %9, align 8, !dbg !11806
  %413 = icmp uge ptr %411, %412, !dbg !11806
  %414 = zext i1 %413 to i32, !dbg !11806
  %415 = sext i32 %414 to i64, !dbg !11806
  br i1 %413, label %416, label %417, !dbg !11807

416:                                              ; preds = %409
  store i64 0, ptr %3, align 8, !dbg !11806
  br label %488, !dbg !11806

417:                                              ; preds = %409
  %418 = load ptr, ptr %8, align 8, !dbg !11807
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %418, ptr align 1 @.str.22.122, i64 8, i1 false), !dbg !11807
  %419 = getelementptr inbounds i8, ptr %418, i64 8, !dbg !11807
  store ptr %419, ptr %8, align 8, !dbg !11807
  %420 = load ptr, ptr %8, align 8, !dbg !11808
  %421 = getelementptr inbounds i8, ptr %420, i64 29, !dbg !11808
  %422 = load ptr, ptr %9, align 8, !dbg !11808
  %423 = icmp uge ptr %421, %422, !dbg !11808
  %424 = zext i1 %423 to i32, !dbg !11808
  %425 = sext i32 %424 to i64, !dbg !11808
  br i1 %423, label %426, label %427, !dbg !11809

426:                                              ; preds = %417
  store i64 0, ptr %3, align 8, !dbg !11808
  br label %488, !dbg !11808

427:                                              ; preds = %417
  %428 = load ptr, ptr %8, align 8, !dbg !11809
  %429 = load ptr, ptr %4, align 8, !dbg !11809
  %430 = getelementptr inbounds %struct.lwan_request_t_, ptr %429, i32 0, i32 4, !dbg !11809
  %431 = load ptr, ptr %430, align 8, !dbg !11809
  %432 = getelementptr inbounds %struct.lwan_connection_t_, ptr %431, i32 0, i32 3, !dbg !11809
  %433 = load ptr, ptr %432, align 8, !dbg !11809
  %434 = getelementptr inbounds %struct.lwan_thread_t_, ptr %433, i32 0, i32 1, !dbg !11809
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %428, ptr align 8 %434, i64 29, i1 false), !dbg !11809
  %435 = getelementptr inbounds i8, ptr %428, i64 29, !dbg !11809
  store ptr %435, ptr %8, align 8, !dbg !11809
  br label %436, !dbg !11810

436:                                              ; preds = %427, %402
  %437 = load i8, ptr %12, align 1, !dbg !11811
  %438 = trunc i8 %437 to i1, !dbg !11811
  %439 = xor i1 %438, true, !dbg !11811
  %440 = xor i1 %438, true, !dbg !11811
  %441 = zext i1 %440 to i32, !dbg !11811
  %442 = sext i32 %441 to i64, !dbg !11811
  br i1 %440, label %443, label %471, !dbg !11812

443:                                              ; preds = %436
  %444 = load ptr, ptr %8, align 8, !dbg !11813
  %445 = getelementptr inbounds i8, ptr %444, i64 11, !dbg !11813
  %446 = load ptr, ptr %9, align 8, !dbg !11813
  %447 = icmp uge ptr %445, %446, !dbg !11813
  %448 = zext i1 %447 to i32, !dbg !11813
  %449 = sext i32 %448 to i64, !dbg !11813
  br i1 %447, label %450, label %451, !dbg !11814

450:                                              ; preds = %443
  store i64 0, ptr %3, align 8, !dbg !11813
  br label %488, !dbg !11813

451:                                              ; preds = %443
  %452 = load ptr, ptr %8, align 8, !dbg !11814
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %452, ptr align 1 @.str.23.123, i64 11, i1 false), !dbg !11814
  %453 = getelementptr inbounds i8, ptr %452, i64 11, !dbg !11814
  store ptr %453, ptr %8, align 8, !dbg !11814
  %454 = load ptr, ptr %8, align 8, !dbg !11815
  %455 = getelementptr inbounds i8, ptr %454, i64 29, !dbg !11815
  %456 = load ptr, ptr %9, align 8, !dbg !11815
  %457 = icmp uge ptr %455, %456, !dbg !11815
  %458 = zext i1 %457 to i32, !dbg !11815
  %459 = sext i32 %458 to i64, !dbg !11815
  br i1 %457, label %460, label %461, !dbg !11816

460:                                              ; preds = %451
  store i64 0, ptr %3, align 8, !dbg !11815
  br label %488, !dbg !11815

461:                                              ; preds = %451
  %462 = load ptr, ptr %8, align 8, !dbg !11816
  %463 = load ptr, ptr %4, align 8, !dbg !11816
  %464 = getelementptr inbounds %struct.lwan_request_t_, ptr %463, i32 0, i32 4, !dbg !11816
  %465 = load ptr, ptr %464, align 8, !dbg !11816
  %466 = getelementptr inbounds %struct.lwan_connection_t_, ptr %465, i32 0, i32 3, !dbg !11816
  %467 = load ptr, ptr %466, align 8, !dbg !11816
  %468 = getelementptr inbounds %struct.lwan_thread_t_, ptr %467, i32 0, i32 1, !dbg !11816
  %469 = getelementptr inbounds %struct.anon.27, ptr %468, i32 0, i32 1, !dbg !11816
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %462, ptr align 2 %469, i64 29, i1 false), !dbg !11816
  %470 = getelementptr inbounds i8, ptr %462, i64 29, !dbg !11816
  store ptr %470, ptr %8, align 8, !dbg !11816
  br label %471, !dbg !11817

471:                                              ; preds = %461, %436
  %472 = load ptr, ptr %8, align 8, !dbg !11818
  %473 = getelementptr inbounds i8, ptr %472, i64 19, !dbg !11818
  %474 = load ptr, ptr %9, align 8, !dbg !11818
  %475 = icmp uge ptr %473, %474, !dbg !11818
  %476 = zext i1 %475 to i32, !dbg !11818
  %477 = sext i32 %476 to i64, !dbg !11818
  br i1 %475, label %478, label %479, !dbg !11819

478:                                              ; preds = %471
  store i64 0, ptr %3, align 8, !dbg !11818
  br label %488, !dbg !11818

479:                                              ; preds = %471
  %480 = load ptr, ptr %8, align 8, !dbg !11819
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %480, ptr align 1 @.str.24.124, i64 19, i1 false), !dbg !11819
  %481 = getelementptr inbounds i8, ptr %480, i64 19, !dbg !11819
  store ptr %481, ptr %8, align 8, !dbg !11819
  %482 = load ptr, ptr %8, align 8, !dbg !11820
  %483 = load ptr, ptr %6, align 8, !dbg !11821
  %484 = ptrtoint ptr %482 to i64, !dbg !11822
  %485 = ptrtoint ptr %483 to i64, !dbg !11822
  %486 = sub i64 %484, %485, !dbg !11822
  %487 = sub nsw i64 %486, 1, !dbg !11823
  store i64 %487, ptr %3, align 8, !dbg !11824
  br label %488, !dbg !11824

488:                                              ; preds = %479, %478, %460, %450, %426, %416, %389, %374, %338, %316, %300, %244, %233, %211, %195, %180, %171, %150, %141, %119, %102, %84, %69, %58
  %489 = load i64, ptr %3, align 8, !dbg !11825
  store i64 %489, ptr %28, align 8, !dbg !11826
  %490 = load i64, ptr %28, align 8, !dbg !11827
  %491 = icmp ne i64 %490, 0, !dbg !11827
  %492 = xor i1 %491, true, !dbg !11827
  %493 = zext i1 %492 to i32, !dbg !11827
  %494 = sext i32 %493 to i64, !dbg !11827
  %495 = icmp ne i64 %494, 0, !dbg !11827
  br i1 %495, label %496, label %497, !dbg !11829

496:                                              ; preds = %488
  store i1 false, ptr %24, align 1, !dbg !11830
  br label %506, !dbg !11830

497:                                              ; preds = %488
  %498 = load ptr, ptr %25, align 8, !dbg !11831
  %499 = getelementptr inbounds %struct.lwan_request_t_, ptr %498, i32 0, i32 0, !dbg !11832
  %500 = load i32, ptr %499, align 8, !dbg !11833
  %501 = or i32 %500, 64, !dbg !11833
  store i32 %501, ptr %499, align 8, !dbg !11833
  %502 = load ptr, ptr %25, align 8, !dbg !11834
  %503 = getelementptr inbounds [4096 x i8], ptr %27, i64 0, i64 0, !dbg !11835
  %504 = load i64, ptr %28, align 8, !dbg !11836
  %505 = call i64 @lwan_send(ptr noundef %502, ptr noundef %503, i64 noundef %504, i32 noundef 32768), !dbg !11837
  store i1 true, ptr %24, align 1, !dbg !11838
  br label %506, !dbg !11838

506:                                              ; preds = %497, %496, %34
  %507 = load i1, ptr %24, align 1, !dbg !11839
  ret i1 %507, !dbg !11839
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local i64 @lwan_prepare_response_header(ptr noundef %0, i32 noundef %1, ptr noundef %2, i64 noundef %3) #9 !dbg !11220 {
  %5 = alloca i64, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca i64, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca [25 x i8], align 16
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca ptr, align 8
  %18 = alloca i64, align 8
  %19 = alloca ptr, align 8
  %20 = alloca i64, align 8
  %21 = alloca ptr, align 8
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  %24 = alloca ptr, align 8
  %25 = alloca i64, align 8
  store ptr %0, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !11219, metadata !DIExpression()), !dbg !11840
  store i32 %1, ptr %7, align 4
  call void @llvm.dbg.declare(metadata ptr %7, metadata !11225, metadata !DIExpression()), !dbg !11841
  store ptr %2, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !11227, metadata !DIExpression()), !dbg !11842
  store i64 %3, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !11229, metadata !DIExpression()), !dbg !11843
  call void @llvm.dbg.declare(metadata ptr %10, metadata !11231, metadata !DIExpression()), !dbg !11844
  call void @llvm.dbg.declare(metadata ptr %11, metadata !11233, metadata !DIExpression()), !dbg !11845
  %26 = load ptr, ptr %8, align 8, !dbg !11846
  %27 = load i64, ptr %9, align 8, !dbg !11847
  %28 = getelementptr inbounds i8, ptr %26, i64 %27, !dbg !11848
  store ptr %28, ptr %11, align 8, !dbg !11845
  call void @llvm.dbg.declare(metadata ptr %12, metadata !11238, metadata !DIExpression()), !dbg !11849
  call void @llvm.dbg.declare(metadata ptr %13, metadata !11240, metadata !DIExpression()), !dbg !11850
  store i8 0, ptr %13, align 1, !dbg !11850
  call void @llvm.dbg.declare(metadata ptr %14, metadata !11242, metadata !DIExpression()), !dbg !11851
  store i8 0, ptr %14, align 1, !dbg !11851
  %29 = load ptr, ptr %8, align 8, !dbg !11852
  store ptr %29, ptr %10, align 8, !dbg !11853
  %30 = load ptr, ptr %6, align 8, !dbg !11854
  %31 = getelementptr inbounds %struct.lwan_request_t_, ptr %30, i32 0, i32 0, !dbg !11855
  %32 = load i32, ptr %31, align 8, !dbg !11855
  %33 = and i32 %32, 32, !dbg !11856
  %34 = icmp ne i32 %33, 0, !dbg !11856
  br i1 %34, label %35, label %49, !dbg !11857

35:                                               ; preds = %4
  br label %36, !dbg !11858

36:                                               ; preds = %35
  %37 = load ptr, ptr %10, align 8, !dbg !11859
  %38 = getelementptr inbounds i8, ptr %37, i64 9, !dbg !11859
  %39 = load ptr, ptr %11, align 8, !dbg !11859
  %40 = icmp uge ptr %38, %39, !dbg !11859
  %41 = zext i1 %40 to i32, !dbg !11859
  %42 = sext i32 %41 to i64, !dbg !11859
  %43 = icmp ne i64 %42, 0, !dbg !11859
  br i1 %43, label %44, label %45, !dbg !11860

44:                                               ; preds = %36
  store i64 0, ptr %5, align 8, !dbg !11859
  br label %575, !dbg !11859

45:                                               ; preds = %36
  %46 = load ptr, ptr %10, align 8, !dbg !11860
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %46, ptr align 1 @.str.10.110, i64 9, i1 false), !dbg !11860
  %47 = getelementptr inbounds i8, ptr %46, i64 9, !dbg !11860
  store ptr %47, ptr %10, align 8, !dbg !11860
  br label %48, !dbg !11860

48:                                               ; preds = %45
  br label %63, !dbg !11860

49:                                               ; preds = %4
  br label %50, !dbg !11861

50:                                               ; preds = %49
  %51 = load ptr, ptr %10, align 8, !dbg !11862
  %52 = getelementptr inbounds i8, ptr %51, i64 9, !dbg !11862
  %53 = load ptr, ptr %11, align 8, !dbg !11862
  %54 = icmp uge ptr %52, %53, !dbg !11862
  %55 = zext i1 %54 to i32, !dbg !11862
  %56 = sext i32 %55 to i64, !dbg !11862
  %57 = icmp ne i64 %56, 0, !dbg !11862
  br i1 %57, label %58, label %59, !dbg !11863

58:                                               ; preds = %50
  store i64 0, ptr %5, align 8, !dbg !11862
  br label %575, !dbg !11862

59:                                               ; preds = %50
  %60 = load ptr, ptr %10, align 8, !dbg !11863
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %60, ptr align 1 @.str.11.111, i64 9, i1 false), !dbg !11863
  %61 = getelementptr inbounds i8, ptr %60, i64 9, !dbg !11863
  store ptr %61, ptr %10, align 8, !dbg !11863
  br label %62, !dbg !11863

62:                                               ; preds = %59
  br label %63

63:                                               ; preds = %62, %48
  br label %64, !dbg !11864

64:                                               ; preds = %63
  call void @llvm.dbg.declare(metadata ptr %15, metadata !11259, metadata !DIExpression()), !dbg !11865
  %65 = load i32, ptr %7, align 4, !dbg !11865
  %66 = call ptr @lwan_http_status_as_string_with_code(i32 noundef %65) #22, !dbg !11865
  %67 = call i64 @strlen(ptr noundef %66) #22, !dbg !11865
  store i64 %67, ptr %15, align 8, !dbg !11865
  br label %68, !dbg !11865

68:                                               ; preds = %64
  %69 = load ptr, ptr %10, align 8, !dbg !11866
  %70 = load i64, ptr %15, align 8, !dbg !11866
  %71 = getelementptr inbounds i8, ptr %69, i64 %70, !dbg !11866
  %72 = load ptr, ptr %11, align 8, !dbg !11866
  %73 = icmp uge ptr %71, %72, !dbg !11866
  %74 = zext i1 %73 to i32, !dbg !11866
  %75 = sext i32 %74 to i64, !dbg !11866
  %76 = icmp ne i64 %75, 0, !dbg !11866
  br i1 %76, label %77, label %78, !dbg !11867

77:                                               ; preds = %68
  store i64 0, ptr %5, align 8, !dbg !11866
  br label %575, !dbg !11866

78:                                               ; preds = %68
  %79 = load ptr, ptr %10, align 8, !dbg !11867
  %80 = load i32, ptr %7, align 4, !dbg !11867
  %81 = call ptr @lwan_http_status_as_string_with_code(i32 noundef %80) #22, !dbg !11867
  %82 = load i64, ptr %15, align 8, !dbg !11867
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %79, ptr align 1 %81, i64 %82, i1 false), !dbg !11867
  %83 = getelementptr inbounds i8, ptr %79, i64 %82, !dbg !11867
  store ptr %83, ptr %10, align 8, !dbg !11867
  br label %84, !dbg !11867

84:                                               ; preds = %78
  br label %85, !dbg !11865

85:                                               ; preds = %84
  %86 = load ptr, ptr %6, align 8, !dbg !11868
  %87 = getelementptr inbounds %struct.lwan_request_t_, ptr %86, i32 0, i32 0, !dbg !11869
  %88 = load i32, ptr %87, align 8, !dbg !11869
  %89 = and i32 %88, 128, !dbg !11870
  %90 = icmp ne i32 %89, 0, !dbg !11870
  br i1 %90, label %91, label %105, !dbg !11871

91:                                               ; preds = %85
  br label %92, !dbg !11872

92:                                               ; preds = %91
  %93 = load ptr, ptr %10, align 8, !dbg !11873
  %94 = getelementptr inbounds i8, ptr %93, i64 28, !dbg !11873
  %95 = load ptr, ptr %11, align 8, !dbg !11873
  %96 = icmp uge ptr %94, %95, !dbg !11873
  %97 = zext i1 %96 to i32, !dbg !11873
  %98 = sext i32 %97 to i64, !dbg !11873
  %99 = icmp ne i64 %98, 0, !dbg !11873
  br i1 %99, label %100, label %101, !dbg !11874

100:                                              ; preds = %92
  store i64 0, ptr %5, align 8, !dbg !11873
  br label %575, !dbg !11873

101:                                              ; preds = %92
  %102 = load ptr, ptr %10, align 8, !dbg !11874
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %102, ptr align 1 @.str.12.112, i64 28, i1 false), !dbg !11874
  %103 = getelementptr inbounds i8, ptr %102, i64 28, !dbg !11874
  store ptr %103, ptr %10, align 8, !dbg !11874
  br label %104, !dbg !11874

104:                                              ; preds = %101
  br label %207, !dbg !11875

105:                                              ; preds = %85
  %106 = load ptr, ptr %6, align 8, !dbg !11876
  %107 = getelementptr inbounds %struct.lwan_request_t_, ptr %106, i32 0, i32 0, !dbg !11877
  %108 = load i32, ptr %107, align 8, !dbg !11877
  %109 = and i32 %108, 256, !dbg !11878
  %110 = icmp ne i32 %109, 0, !dbg !11878
  br i1 %110, label %111, label %112, !dbg !11879

111:                                              ; preds = %105
  br label %206, !dbg !11880

112:                                              ; preds = %105
  br label %113, !dbg !11881

113:                                              ; preds = %112
  %114 = load ptr, ptr %10, align 8, !dbg !11882
  %115 = getelementptr inbounds i8, ptr %114, i64 18, !dbg !11882
  %116 = load ptr, ptr %11, align 8, !dbg !11882
  %117 = icmp uge ptr %115, %116, !dbg !11882
  %118 = zext i1 %117 to i32, !dbg !11882
  %119 = sext i32 %118 to i64, !dbg !11882
  %120 = icmp ne i64 %119, 0, !dbg !11882
  br i1 %120, label %121, label %122, !dbg !11883

121:                                              ; preds = %113
  store i64 0, ptr %5, align 8, !dbg !11882
  br label %575, !dbg !11882

122:                                              ; preds = %113
  %123 = load ptr, ptr %10, align 8, !dbg !11883
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %123, ptr align 1 @.str.13.113, i64 18, i1 false), !dbg !11883
  %124 = getelementptr inbounds i8, ptr %123, i64 18, !dbg !11883
  store ptr %124, ptr %10, align 8, !dbg !11883
  br label %125, !dbg !11883

125:                                              ; preds = %122
  %126 = load ptr, ptr %6, align 8, !dbg !11884
  %127 = getelementptr inbounds %struct.lwan_request_t_, ptr %126, i32 0, i32 8, !dbg !11885
  %128 = getelementptr inbounds %struct.lwan_response_t_, ptr %127, i32 0, i32 4, !dbg !11886
  %129 = getelementptr inbounds %struct.anon.1, ptr %128, i32 0, i32 0, !dbg !11887
  %130 = load ptr, ptr %129, align 8, !dbg !11887
  %131 = icmp ne ptr %130, null, !dbg !11884
  br i1 %131, label %132, label %167, !dbg !11888

132:                                              ; preds = %125
  br label %133, !dbg !11889

133:                                              ; preds = %132
  call void @llvm.dbg.declare(metadata ptr %16, metadata !11295, metadata !DIExpression()), !dbg !11890
  call void @llvm.dbg.declare(metadata ptr %17, metadata !11298, metadata !DIExpression()), !dbg !11890
  %134 = load ptr, ptr %6, align 8, !dbg !11890
  %135 = getelementptr inbounds %struct.lwan_request_t_, ptr %134, i32 0, i32 8, !dbg !11890
  %136 = getelementptr inbounds %struct.lwan_response_t_, ptr %135, i32 0, i32 2, !dbg !11890
  %137 = load i64, ptr %136, align 8, !dbg !11890
  %138 = getelementptr inbounds [25 x i8], ptr %12, i64 0, i64 0, !dbg !11890
  %139 = call ptr @uint_to_string(i64 noundef %137, ptr noundef %138, ptr noundef %16), !dbg !11890
  store ptr %139, ptr %17, align 8, !dbg !11890
  %140 = load ptr, ptr %10, align 8, !dbg !11891
  %141 = load i64, ptr %16, align 8, !dbg !11891
  %142 = getelementptr inbounds i8, ptr %140, i64 %141, !dbg !11891
  %143 = load ptr, ptr %11, align 8, !dbg !11891
  %144 = icmp uge ptr %142, %143, !dbg !11891
  %145 = zext i1 %144 to i32, !dbg !11891
  %146 = sext i32 %145 to i64, !dbg !11891
  %147 = icmp ne i64 %146, 0, !dbg !11891
  br i1 %147, label %148, label %149, !dbg !11890

148:                                              ; preds = %133
  store i64 0, ptr %5, align 8, !dbg !11891
  br label %575, !dbg !11891

149:                                              ; preds = %133
  br label %150, !dbg !11890

150:                                              ; preds = %149
  %151 = load ptr, ptr %10, align 8, !dbg !11892
  %152 = load i64, ptr %16, align 8, !dbg !11892
  %153 = getelementptr inbounds i8, ptr %151, i64 %152, !dbg !11892
  %154 = load ptr, ptr %11, align 8, !dbg !11892
  %155 = icmp uge ptr %153, %154, !dbg !11892
  %156 = zext i1 %155 to i32, !dbg !11892
  %157 = sext i32 %156 to i64, !dbg !11892
  %158 = icmp ne i64 %157, 0, !dbg !11892
  br i1 %158, label %159, label %160, !dbg !11893

159:                                              ; preds = %150
  store i64 0, ptr %5, align 8, !dbg !11892
  br label %575, !dbg !11892

160:                                              ; preds = %150
  %161 = load ptr, ptr %10, align 8, !dbg !11893
  %162 = load ptr, ptr %17, align 8, !dbg !11893
  %163 = load i64, ptr %16, align 8, !dbg !11893
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %161, ptr align 1 %162, i64 %163, i1 false), !dbg !11893
  %164 = getelementptr inbounds i8, ptr %161, i64 %163, !dbg !11893
  store ptr %164, ptr %10, align 8, !dbg !11893
  br label %165, !dbg !11893

165:                                              ; preds = %160
  br label %166, !dbg !11890

166:                                              ; preds = %165
  br label %205, !dbg !11890

167:                                              ; preds = %125
  br label %168, !dbg !11894

168:                                              ; preds = %167
  call void @llvm.dbg.declare(metadata ptr %18, metadata !11305, metadata !DIExpression()), !dbg !11895
  call void @llvm.dbg.declare(metadata ptr %19, metadata !11308, metadata !DIExpression()), !dbg !11895
  %169 = load ptr, ptr %6, align 8, !dbg !11895
  %170 = getelementptr inbounds %struct.lwan_request_t_, ptr %169, i32 0, i32 8, !dbg !11895
  %171 = getelementptr inbounds %struct.lwan_response_t_, ptr %170, i32 0, i32 0, !dbg !11895
  %172 = load ptr, ptr %171, align 8, !dbg !11895
  %173 = getelementptr inbounds %struct.strbuf_t_, ptr %172, i32 0, i32 1, !dbg !11895
  %174 = getelementptr inbounds %struct.timespec, ptr %173, i32 0, i32 1, !dbg !11895
  %175 = load i64, ptr %174, align 8, !dbg !11895
  %176 = getelementptr inbounds [25 x i8], ptr %12, i64 0, i64 0, !dbg !11895
  %177 = call ptr @uint_to_string(i64 noundef %175, ptr noundef %176, ptr noundef %18), !dbg !11895
  store ptr %177, ptr %19, align 8, !dbg !11895
  %178 = load ptr, ptr %10, align 8, !dbg !11896
  %179 = load i64, ptr %18, align 8, !dbg !11896
  %180 = getelementptr inbounds i8, ptr %178, i64 %179, !dbg !11896
  %181 = load ptr, ptr %11, align 8, !dbg !11896
  %182 = icmp uge ptr %180, %181, !dbg !11896
  %183 = zext i1 %182 to i32, !dbg !11896
  %184 = sext i32 %183 to i64, !dbg !11896
  %185 = icmp ne i64 %184, 0, !dbg !11896
  br i1 %185, label %186, label %187, !dbg !11895

186:                                              ; preds = %168
  store i64 0, ptr %5, align 8, !dbg !11896
  br label %575, !dbg !11896

187:                                              ; preds = %168
  br label %188, !dbg !11895

188:                                              ; preds = %187
  %189 = load ptr, ptr %10, align 8, !dbg !11897
  %190 = load i64, ptr %18, align 8, !dbg !11897
  %191 = getelementptr inbounds i8, ptr %189, i64 %190, !dbg !11897
  %192 = load ptr, ptr %11, align 8, !dbg !11897
  %193 = icmp uge ptr %191, %192, !dbg !11897
  %194 = zext i1 %193 to i32, !dbg !11897
  %195 = sext i32 %194 to i64, !dbg !11897
  %196 = icmp ne i64 %195, 0, !dbg !11897
  br i1 %196, label %197, label %198, !dbg !11898

197:                                              ; preds = %188
  store i64 0, ptr %5, align 8, !dbg !11897
  br label %575, !dbg !11897

198:                                              ; preds = %188
  %199 = load ptr, ptr %10, align 8, !dbg !11898
  %200 = load ptr, ptr %19, align 8, !dbg !11898
  %201 = load i64, ptr %18, align 8, !dbg !11898
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %199, ptr align 1 %200, i64 %201, i1 false), !dbg !11898
  %202 = getelementptr inbounds i8, ptr %199, i64 %201, !dbg !11898
  store ptr %202, ptr %10, align 8, !dbg !11898
  br label %203, !dbg !11898

203:                                              ; preds = %198
  br label %204, !dbg !11895

204:                                              ; preds = %203
  br label %205

205:                                              ; preds = %204, %166
  br label %206

206:                                              ; preds = %205, %111
  br label %207

207:                                              ; preds = %206, %104
  br label %208, !dbg !11899

208:                                              ; preds = %207
  %209 = load ptr, ptr %10, align 8, !dbg !11900
  %210 = getelementptr inbounds i8, ptr %209, i64 16, !dbg !11900
  %211 = load ptr, ptr %11, align 8, !dbg !11900
  %212 = icmp uge ptr %210, %211, !dbg !11900
  %213 = zext i1 %212 to i32, !dbg !11900
  %214 = sext i32 %213 to i64, !dbg !11900
  %215 = icmp ne i64 %214, 0, !dbg !11900
  br i1 %215, label %216, label %217, !dbg !11901

216:                                              ; preds = %208
  store i64 0, ptr %5, align 8, !dbg !11900
  br label %575, !dbg !11900

217:                                              ; preds = %208
  %218 = load ptr, ptr %10, align 8, !dbg !11901
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %218, ptr align 1 @.str.14.114, i64 16, i1 false), !dbg !11901
  %219 = getelementptr inbounds i8, ptr %218, i64 16, !dbg !11901
  store ptr %219, ptr %10, align 8, !dbg !11901
  br label %220, !dbg !11901

220:                                              ; preds = %217
  br label %221, !dbg !11902

221:                                              ; preds = %220
  call void @llvm.dbg.declare(metadata ptr %20, metadata !11319, metadata !DIExpression()), !dbg !11903
  %222 = load ptr, ptr %6, align 8, !dbg !11903
  %223 = getelementptr inbounds %struct.lwan_request_t_, ptr %222, i32 0, i32 8, !dbg !11903
  %224 = getelementptr inbounds %struct.lwan_response_t_, ptr %223, i32 0, i32 1, !dbg !11903
  %225 = load ptr, ptr %224, align 8, !dbg !11903
  %226 = call i64 @strlen(ptr noundef %225) #22, !dbg !11903
  store i64 %226, ptr %20, align 8, !dbg !11903
  br label %227, !dbg !11903

227:                                              ; preds = %221
  %228 = load ptr, ptr %10, align 8, !dbg !11904
  %229 = load i64, ptr %20, align 8, !dbg !11904
  %230 = getelementptr inbounds i8, ptr %228, i64 %229, !dbg !11904
  %231 = load ptr, ptr %11, align 8, !dbg !11904
  %232 = icmp uge ptr %230, %231, !dbg !11904
  %233 = zext i1 %232 to i32, !dbg !11904
  %234 = sext i32 %233 to i64, !dbg !11904
  %235 = icmp ne i64 %234, 0, !dbg !11904
  br i1 %235, label %236, label %237, !dbg !11905

236:                                              ; preds = %227
  store i64 0, ptr %5, align 8, !dbg !11904
  br label %575, !dbg !11904

237:                                              ; preds = %227
  %238 = load ptr, ptr %10, align 8, !dbg !11905
  %239 = load ptr, ptr %6, align 8, !dbg !11905
  %240 = getelementptr inbounds %struct.lwan_request_t_, ptr %239, i32 0, i32 8, !dbg !11905
  %241 = getelementptr inbounds %struct.lwan_response_t_, ptr %240, i32 0, i32 1, !dbg !11905
  %242 = load ptr, ptr %241, align 8, !dbg !11905
  %243 = load i64, ptr %20, align 8, !dbg !11905
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %238, ptr align 1 %242, i64 %243, i1 false), !dbg !11905
  %244 = getelementptr inbounds i8, ptr %238, i64 %243, !dbg !11905
  store ptr %244, ptr %10, align 8, !dbg !11905
  br label %245, !dbg !11905

245:                                              ; preds = %237
  br label %246, !dbg !11903

246:                                              ; preds = %245
  %247 = load ptr, ptr %6, align 8, !dbg !11906
  %248 = getelementptr inbounds %struct.lwan_request_t_, ptr %247, i32 0, i32 4, !dbg !11907
  %249 = load ptr, ptr %248, align 8, !dbg !11907
  %250 = getelementptr inbounds %struct.lwan_connection_t_, ptr %249, i32 0, i32 0, !dbg !11908
  %251 = load i32, ptr %250, align 8, !dbg !11908
  %252 = and i32 %251, 1, !dbg !11909
  %253 = icmp ne i32 %252, 0, !dbg !11909
  br i1 %253, label %254, label %268, !dbg !11910

254:                                              ; preds = %246
  br label %255, !dbg !11911

255:                                              ; preds = %254
  %256 = load ptr, ptr %10, align 8, !dbg !11912
  %257 = getelementptr inbounds i8, ptr %256, i64 24, !dbg !11912
  %258 = load ptr, ptr %11, align 8, !dbg !11912
  %259 = icmp uge ptr %257, %258, !dbg !11912
  %260 = zext i1 %259 to i32, !dbg !11912
  %261 = sext i32 %260 to i64, !dbg !11912
  %262 = icmp ne i64 %261, 0, !dbg !11912
  br i1 %262, label %263, label %264, !dbg !11913

263:                                              ; preds = %255
  store i64 0, ptr %5, align 8, !dbg !11912
  br label %575, !dbg !11912

264:                                              ; preds = %255
  %265 = load ptr, ptr %10, align 8, !dbg !11913
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %265, ptr align 1 @.str.15.115, i64 24, i1 false), !dbg !11913
  %266 = getelementptr inbounds i8, ptr %265, i64 24, !dbg !11913
  store ptr %266, ptr %10, align 8, !dbg !11913
  br label %267, !dbg !11913

267:                                              ; preds = %264
  br label %282, !dbg !11913

268:                                              ; preds = %246
  br label %269, !dbg !11914

269:                                              ; preds = %268
  %270 = load ptr, ptr %10, align 8, !dbg !11915
  %271 = getelementptr inbounds i8, ptr %270, i64 19, !dbg !11915
  %272 = load ptr, ptr %11, align 8, !dbg !11915
  %273 = icmp uge ptr %271, %272, !dbg !11915
  %274 = zext i1 %273 to i32, !dbg !11915
  %275 = sext i32 %274 to i64, !dbg !11915
  %276 = icmp ne i64 %275, 0, !dbg !11915
  br i1 %276, label %277, label %278, !dbg !11916

277:                                              ; preds = %269
  store i64 0, ptr %5, align 8, !dbg !11915
  br label %575, !dbg !11915

278:                                              ; preds = %269
  %279 = load ptr, ptr %10, align 8, !dbg !11916
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %279, ptr align 1 @.str.16.116, i64 19, i1 false), !dbg !11916
  %280 = getelementptr inbounds i8, ptr %279, i64 19, !dbg !11916
  store ptr %280, ptr %10, align 8, !dbg !11916
  br label %281, !dbg !11916

281:                                              ; preds = %278
  br label %282

282:                                              ; preds = %281, %267
  %283 = load i32, ptr %7, align 4, !dbg !11917
  %284 = icmp ult i32 %283, 400, !dbg !11918
  br i1 %284, label %285, label %404, !dbg !11919

285:                                              ; preds = %282
  %286 = load ptr, ptr %6, align 8, !dbg !11920
  %287 = getelementptr inbounds %struct.lwan_request_t_, ptr %286, i32 0, i32 8, !dbg !11921
  %288 = getelementptr inbounds %struct.lwan_response_t_, ptr %287, i32 0, i32 3, !dbg !11922
  %289 = load ptr, ptr %288, align 8, !dbg !11922
  %290 = icmp ne ptr %289, null, !dbg !11920
  br i1 %290, label %291, label %404, !dbg !11923

291:                                              ; preds = %285
  call void @llvm.dbg.declare(metadata ptr %21, metadata !11348, metadata !DIExpression()), !dbg !11924
  %292 = load ptr, ptr %6, align 8, !dbg !11925
  %293 = getelementptr inbounds %struct.lwan_request_t_, ptr %292, i32 0, i32 8, !dbg !11926
  %294 = getelementptr inbounds %struct.lwan_response_t_, ptr %293, i32 0, i32 3, !dbg !11927
  %295 = load ptr, ptr %294, align 8, !dbg !11927
  store ptr %295, ptr %21, align 8, !dbg !11928
  br label %296, !dbg !11929

296:                                              ; preds = %400, %291
  %297 = load ptr, ptr %21, align 8, !dbg !11930
  %298 = getelementptr inbounds %struct.list_node, ptr %297, i32 0, i32 0, !dbg !11931
  %299 = load ptr, ptr %298, align 8, !dbg !11931
  %300 = icmp ne ptr %299, null, !dbg !11932
  br i1 %300, label %301, label %403, !dbg !11932

301:                                              ; preds = %296
  %302 = load ptr, ptr %21, align 8, !dbg !11933
  %303 = getelementptr inbounds %struct.list_node, ptr %302, i32 0, i32 0, !dbg !11933
  %304 = load ptr, ptr %303, align 8, !dbg !11933
  %305 = call i32 @strcmp(ptr noundef %304, ptr noundef @.str.17.117) #22, !dbg !11933
  %306 = icmp ne i32 %305, 0, !dbg !11933
  %307 = xor i1 %306, true, !dbg !11933
  %308 = zext i1 %307 to i32, !dbg !11933
  %309 = sext i32 %308 to i64, !dbg !11933
  %310 = icmp ne i64 %309, 0, !dbg !11933
  br i1 %310, label %311, label %312, !dbg !11934

311:                                              ; preds = %301
  br label %400, !dbg !11935

312:                                              ; preds = %301
  %313 = load ptr, ptr %21, align 8, !dbg !11936
  %314 = getelementptr inbounds %struct.list_node, ptr %313, i32 0, i32 0, !dbg !11936
  %315 = load ptr, ptr %314, align 8, !dbg !11936
  %316 = call i32 @strcmp(ptr noundef %315, ptr noundef @.str.18.118) #22, !dbg !11936
  %317 = icmp ne i32 %316, 0, !dbg !11936
  %318 = xor i1 %317, true, !dbg !11936
  %319 = zext i1 %318 to i32, !dbg !11936
  %320 = sext i32 %319 to i64, !dbg !11936
  %321 = icmp ne i64 %320, 0, !dbg !11936
  br i1 %321, label %322, label %323, !dbg !11937

322:                                              ; preds = %312
  store i8 1, ptr %13, align 1, !dbg !11938
  br label %323, !dbg !11939

323:                                              ; preds = %322, %312
  %324 = load ptr, ptr %21, align 8, !dbg !11940
  %325 = getelementptr inbounds %struct.list_node, ptr %324, i32 0, i32 0, !dbg !11940
  %326 = load ptr, ptr %325, align 8, !dbg !11940
  %327 = call i32 @strcmp(ptr noundef %326, ptr noundef @.str.19.119) #22, !dbg !11940
  %328 = icmp ne i32 %327, 0, !dbg !11940
  %329 = xor i1 %328, true, !dbg !11940
  %330 = zext i1 %329 to i32, !dbg !11940
  %331 = sext i32 %330 to i64, !dbg !11940
  %332 = icmp ne i64 %331, 0, !dbg !11940
  br i1 %332, label %333, label %334, !dbg !11941

333:                                              ; preds = %323
  store i8 1, ptr %14, align 1, !dbg !11942
  br label %334, !dbg !11943

334:                                              ; preds = %333, %323
  %335 = load ptr, ptr %10, align 8, !dbg !11944
  %336 = getelementptr inbounds i8, ptr %335, i64 4, !dbg !11944
  %337 = load ptr, ptr %11, align 8, !dbg !11944
  %338 = icmp uge ptr %336, %337, !dbg !11944
  %339 = zext i1 %338 to i32, !dbg !11944
  %340 = sext i32 %339 to i64, !dbg !11944
  %341 = icmp ne i64 %340, 0, !dbg !11944
  br i1 %341, label %342, label %343, !dbg !11945

342:                                              ; preds = %334
  store i64 0, ptr %5, align 8, !dbg !11944
  br label %575, !dbg !11944

343:                                              ; preds = %334
  %344 = load ptr, ptr %10, align 8, !dbg !11946
  %345 = getelementptr inbounds i8, ptr %344, i32 1, !dbg !11946
  store ptr %345, ptr %10, align 8, !dbg !11946
  store i8 13, ptr %344, align 1, !dbg !11946
  %346 = load ptr, ptr %10, align 8, !dbg !11947
  %347 = getelementptr inbounds i8, ptr %346, i32 1, !dbg !11947
  store ptr %347, ptr %10, align 8, !dbg !11947
  store i8 10, ptr %346, align 1, !dbg !11947
  br label %348, !dbg !11948

348:                                              ; preds = %343
  call void @llvm.dbg.declare(metadata ptr %22, metadata !11381, metadata !DIExpression()), !dbg !11949
  %349 = load ptr, ptr %21, align 8, !dbg !11949
  %350 = getelementptr inbounds %struct.list_node, ptr %349, i32 0, i32 0, !dbg !11949
  %351 = load ptr, ptr %350, align 8, !dbg !11949
  %352 = call i64 @strlen(ptr noundef %351) #22, !dbg !11949
  store i64 %352, ptr %22, align 8, !dbg !11949
  br label %353, !dbg !11949

353:                                              ; preds = %348
  %354 = load ptr, ptr %10, align 8, !dbg !11950
  %355 = load i64, ptr %22, align 8, !dbg !11950
  %356 = getelementptr inbounds i8, ptr %354, i64 %355, !dbg !11950
  %357 = load ptr, ptr %11, align 8, !dbg !11950
  %358 = icmp uge ptr %356, %357, !dbg !11950
  %359 = zext i1 %358 to i32, !dbg !11950
  %360 = sext i32 %359 to i64, !dbg !11950
  %361 = icmp ne i64 %360, 0, !dbg !11950
  br i1 %361, label %362, label %363, !dbg !11951

362:                                              ; preds = %353
  store i64 0, ptr %5, align 8, !dbg !11950
  br label %575, !dbg !11950

363:                                              ; preds = %353
  %364 = load ptr, ptr %10, align 8, !dbg !11951
  %365 = load ptr, ptr %21, align 8, !dbg !11951
  %366 = getelementptr inbounds %struct.list_node, ptr %365, i32 0, i32 0, !dbg !11951
  %367 = load ptr, ptr %366, align 8, !dbg !11951
  %368 = load i64, ptr %22, align 8, !dbg !11951
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %364, ptr align 1 %367, i64 %368, i1 false), !dbg !11951
  %369 = getelementptr inbounds i8, ptr %364, i64 %368, !dbg !11951
  store ptr %369, ptr %10, align 8, !dbg !11951
  br label %370, !dbg !11951

370:                                              ; preds = %363
  br label %371, !dbg !11949

371:                                              ; preds = %370
  %372 = load ptr, ptr %10, align 8, !dbg !11952
  %373 = getelementptr inbounds i8, ptr %372, i32 1, !dbg !11952
  store ptr %373, ptr %10, align 8, !dbg !11952
  store i8 58, ptr %372, align 1, !dbg !11952
  %374 = load ptr, ptr %10, align 8, !dbg !11953
  %375 = getelementptr inbounds i8, ptr %374, i32 1, !dbg !11953
  store ptr %375, ptr %10, align 8, !dbg !11953
  store i8 32, ptr %374, align 1, !dbg !11953
  br label %376, !dbg !11954

376:                                              ; preds = %371
  call void @llvm.dbg.declare(metadata ptr %23, metadata !11390, metadata !DIExpression()), !dbg !11955
  %377 = load ptr, ptr %21, align 8, !dbg !11955
  %378 = getelementptr inbounds %struct.list_node, ptr %377, i32 0, i32 1, !dbg !11955
  %379 = load ptr, ptr %378, align 8, !dbg !11955
  %380 = call i64 @strlen(ptr noundef %379) #22, !dbg !11955
  store i64 %380, ptr %23, align 8, !dbg !11955
  br label %381, !dbg !11955

381:                                              ; preds = %376
  %382 = load ptr, ptr %10, align 8, !dbg !11956
  %383 = load i64, ptr %23, align 8, !dbg !11956
  %384 = getelementptr inbounds i8, ptr %382, i64 %383, !dbg !11956
  %385 = load ptr, ptr %11, align 8, !dbg !11956
  %386 = icmp uge ptr %384, %385, !dbg !11956
  %387 = zext i1 %386 to i32, !dbg !11956
  %388 = sext i32 %387 to i64, !dbg !11956
  %389 = icmp ne i64 %388, 0, !dbg !11956
  br i1 %389, label %390, label %391, !dbg !11957

390:                                              ; preds = %381
  store i64 0, ptr %5, align 8, !dbg !11956
  br label %575, !dbg !11956

391:                                              ; preds = %381
  %392 = load ptr, ptr %10, align 8, !dbg !11957
  %393 = load ptr, ptr %21, align 8, !dbg !11957
  %394 = getelementptr inbounds %struct.list_node, ptr %393, i32 0, i32 1, !dbg !11957
  %395 = load ptr, ptr %394, align 8, !dbg !11957
  %396 = load i64, ptr %23, align 8, !dbg !11957
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %392, ptr align 1 %395, i64 %396, i1 false), !dbg !11957
  %397 = getelementptr inbounds i8, ptr %392, i64 %396, !dbg !11957
  store ptr %397, ptr %10, align 8, !dbg !11957
  br label %398, !dbg !11957

398:                                              ; preds = %391
  br label %399, !dbg !11955

399:                                              ; preds = %398
  br label %400, !dbg !11958

400:                                              ; preds = %399, %311
  %401 = load ptr, ptr %21, align 8, !dbg !11959
  %402 = getelementptr inbounds %struct.list_node, ptr %401, i32 1, !dbg !11959
  store ptr %402, ptr %21, align 8, !dbg !11959
  br label %296, !dbg !11960, !llvm.loop !11961

403:                                              ; preds = %296
  br label %467, !dbg !11963

404:                                              ; preds = %285, %282
  %405 = load i32, ptr %7, align 4, !dbg !11964
  %406 = icmp eq i32 %405, 401, !dbg !11965
  br i1 %406, label %407, label %466, !dbg !11966

407:                                              ; preds = %404
  call void @llvm.dbg.declare(metadata ptr %24, metadata !11407, metadata !DIExpression()), !dbg !11967
  %408 = load ptr, ptr %6, align 8, !dbg !11968
  %409 = getelementptr inbounds %struct.lwan_request_t_, ptr %408, i32 0, i32 8, !dbg !11969
  %410 = getelementptr inbounds %struct.lwan_response_t_, ptr %409, i32 0, i32 3, !dbg !11970
  %411 = load ptr, ptr %410, align 8, !dbg !11970
  store ptr %411, ptr %24, align 8, !dbg !11971
  br label %412, !dbg !11972

412:                                              ; preds = %462, %407
  %413 = load ptr, ptr %24, align 8, !dbg !11973
  %414 = getelementptr inbounds %struct.list_node, ptr %413, i32 0, i32 0, !dbg !11974
  %415 = load ptr, ptr %414, align 8, !dbg !11974
  %416 = icmp ne ptr %415, null, !dbg !11975
  br i1 %416, label %417, label %465, !dbg !11975

417:                                              ; preds = %412
  %418 = load ptr, ptr %24, align 8, !dbg !11976
  %419 = getelementptr inbounds %struct.list_node, ptr %418, i32 0, i32 0, !dbg !11977
  %420 = load ptr, ptr %419, align 8, !dbg !11977
  %421 = call i32 @strcmp(ptr noundef %420, ptr noundef @.str.20.120) #22, !dbg !11978
  %422 = icmp ne i32 %421, 0, !dbg !11978
  br i1 %422, label %461, label %423, !dbg !11979

423:                                              ; preds = %417
  br label %424, !dbg !11980

424:                                              ; preds = %423
  %425 = load ptr, ptr %10, align 8, !dbg !11981
  %426 = getelementptr inbounds i8, ptr %425, i64 20, !dbg !11981
  %427 = load ptr, ptr %11, align 8, !dbg !11981
  %428 = icmp uge ptr %426, %427, !dbg !11981
  %429 = zext i1 %428 to i32, !dbg !11981
  %430 = sext i32 %429 to i64, !dbg !11981
  %431 = icmp ne i64 %430, 0, !dbg !11981
  br i1 %431, label %432, label %433, !dbg !11982

432:                                              ; preds = %424
  store i64 0, ptr %5, align 8, !dbg !11981
  br label %575, !dbg !11981

433:                                              ; preds = %424
  %434 = load ptr, ptr %10, align 8, !dbg !11982
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %434, ptr align 1 @.str.21.121, i64 20, i1 false), !dbg !11982
  %435 = getelementptr inbounds i8, ptr %434, i64 20, !dbg !11982
  store ptr %435, ptr %10, align 8, !dbg !11982
  br label %436, !dbg !11982

436:                                              ; preds = %433
  br label %437, !dbg !11983

437:                                              ; preds = %436
  call void @llvm.dbg.declare(metadata ptr %25, metadata !11431, metadata !DIExpression()), !dbg !11984
  %438 = load ptr, ptr %24, align 8, !dbg !11984
  %439 = getelementptr inbounds %struct.list_node, ptr %438, i32 0, i32 1, !dbg !11984
  %440 = load ptr, ptr %439, align 8, !dbg !11984
  %441 = call i64 @strlen(ptr noundef %440) #22, !dbg !11984
  store i64 %441, ptr %25, align 8, !dbg !11984
  br label %442, !dbg !11984

442:                                              ; preds = %437
  %443 = load ptr, ptr %10, align 8, !dbg !11985
  %444 = load i64, ptr %25, align 8, !dbg !11985
  %445 = getelementptr inbounds i8, ptr %443, i64 %444, !dbg !11985
  %446 = load ptr, ptr %11, align 8, !dbg !11985
  %447 = icmp uge ptr %445, %446, !dbg !11985
  %448 = zext i1 %447 to i32, !dbg !11985
  %449 = sext i32 %448 to i64, !dbg !11985
  %450 = icmp ne i64 %449, 0, !dbg !11985
  br i1 %450, label %451, label %452, !dbg !11986

451:                                              ; preds = %442
  store i64 0, ptr %5, align 8, !dbg !11985
  br label %575, !dbg !11985

452:                                              ; preds = %442
  %453 = load ptr, ptr %10, align 8, !dbg !11986
  %454 = load ptr, ptr %24, align 8, !dbg !11986
  %455 = getelementptr inbounds %struct.list_node, ptr %454, i32 0, i32 1, !dbg !11986
  %456 = load ptr, ptr %455, align 8, !dbg !11986
  %457 = load i64, ptr %25, align 8, !dbg !11986
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %453, ptr align 1 %456, i64 %457, i1 false), !dbg !11986
  %458 = getelementptr inbounds i8, ptr %453, i64 %457, !dbg !11986
  store ptr %458, ptr %10, align 8, !dbg !11986
  br label %459, !dbg !11986

459:                                              ; preds = %452
  br label %460, !dbg !11984

460:                                              ; preds = %459
  br label %465, !dbg !11987

461:                                              ; preds = %417
  br label %462, !dbg !11988

462:                                              ; preds = %461
  %463 = load ptr, ptr %24, align 8, !dbg !11989
  %464 = getelementptr inbounds %struct.list_node, ptr %463, i32 1, !dbg !11989
  store ptr %464, ptr %24, align 8, !dbg !11989
  br label %412, !dbg !11990, !llvm.loop !11991

465:                                              ; preds = %460, %412
  br label %466, !dbg !11993

466:                                              ; preds = %465, %404
  br label %467

467:                                              ; preds = %466, %403
  %468 = load i8, ptr %13, align 1, !dbg !11994
  %469 = trunc i8 %468 to i1, !dbg !11994
  %470 = xor i1 %469, true, !dbg !11994
  %471 = xor i1 %470, true, !dbg !11994
  %472 = xor i1 %471, true, !dbg !11994
  %473 = zext i1 %472 to i32, !dbg !11994
  %474 = sext i32 %473 to i64, !dbg !11994
  %475 = icmp ne i64 %474, 0, !dbg !11994
  br i1 %475, label %476, label %511, !dbg !11995

476:                                              ; preds = %467
  br label %477, !dbg !11996

477:                                              ; preds = %476
  %478 = load ptr, ptr %10, align 8, !dbg !11997
  %479 = getelementptr inbounds i8, ptr %478, i64 8, !dbg !11997
  %480 = load ptr, ptr %11, align 8, !dbg !11997
  %481 = icmp uge ptr %479, %480, !dbg !11997
  %482 = zext i1 %481 to i32, !dbg !11997
  %483 = sext i32 %482 to i64, !dbg !11997
  %484 = icmp ne i64 %483, 0, !dbg !11997
  br i1 %484, label %485, label %486, !dbg !11998

485:                                              ; preds = %477
  store i64 0, ptr %5, align 8, !dbg !11997
  br label %575, !dbg !11997

486:                                              ; preds = %477
  %487 = load ptr, ptr %10, align 8, !dbg !11998
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %487, ptr align 1 @.str.22.122, i64 8, i1 false), !dbg !11998
  %488 = getelementptr inbounds i8, ptr %487, i64 8, !dbg !11998
  store ptr %488, ptr %10, align 8, !dbg !11998
  br label %489, !dbg !11998

489:                                              ; preds = %486
  br label %490, !dbg !11999

490:                                              ; preds = %489
  %491 = load ptr, ptr %10, align 8, !dbg !12000
  %492 = getelementptr inbounds i8, ptr %491, i64 29, !dbg !12000
  %493 = load ptr, ptr %11, align 8, !dbg !12000
  %494 = icmp uge ptr %492, %493, !dbg !12000
  %495 = zext i1 %494 to i32, !dbg !12000
  %496 = sext i32 %495 to i64, !dbg !12000
  %497 = icmp ne i64 %496, 0, !dbg !12000
  br i1 %497, label %498, label %499, !dbg !12001

498:                                              ; preds = %490
  store i64 0, ptr %5, align 8, !dbg !12000
  br label %575, !dbg !12000

499:                                              ; preds = %490
  %500 = load ptr, ptr %10, align 8, !dbg !12001
  %501 = load ptr, ptr %6, align 8, !dbg !12001
  %502 = getelementptr inbounds %struct.lwan_request_t_, ptr %501, i32 0, i32 4, !dbg !12001
  %503 = load ptr, ptr %502, align 8, !dbg !12001
  %504 = getelementptr inbounds %struct.lwan_connection_t_, ptr %503, i32 0, i32 3, !dbg !12001
  %505 = load ptr, ptr %504, align 8, !dbg !12001
  %506 = getelementptr inbounds %struct.lwan_thread_t_, ptr %505, i32 0, i32 1, !dbg !12001
  %507 = getelementptr inbounds %struct.anon.27, ptr %506, i32 0, i32 0, !dbg !12001
  %508 = getelementptr inbounds [30 x i8], ptr %507, i64 0, i64 0, !dbg !12001
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %500, ptr align 8 %508, i64 29, i1 false), !dbg !12001
  %509 = getelementptr inbounds i8, ptr %500, i64 29, !dbg !12001
  store ptr %509, ptr %10, align 8, !dbg !12001
  br label %510, !dbg !12001

510:                                              ; preds = %499
  br label %511, !dbg !12002

511:                                              ; preds = %510, %467
  %512 = load i8, ptr %14, align 1, !dbg !12003
  %513 = trunc i8 %512 to i1, !dbg !12003
  %514 = xor i1 %513, true, !dbg !12003
  %515 = xor i1 %514, true, !dbg !12003
  %516 = xor i1 %515, true, !dbg !12003
  %517 = zext i1 %516 to i32, !dbg !12003
  %518 = sext i32 %517 to i64, !dbg !12003
  %519 = icmp ne i64 %518, 0, !dbg !12003
  br i1 %519, label %520, label %555, !dbg !12004

520:                                              ; preds = %511
  br label %521, !dbg !12005

521:                                              ; preds = %520
  %522 = load ptr, ptr %10, align 8, !dbg !12006
  %523 = getelementptr inbounds i8, ptr %522, i64 11, !dbg !12006
  %524 = load ptr, ptr %11, align 8, !dbg !12006
  %525 = icmp uge ptr %523, %524, !dbg !12006
  %526 = zext i1 %525 to i32, !dbg !12006
  %527 = sext i32 %526 to i64, !dbg !12006
  %528 = icmp ne i64 %527, 0, !dbg !12006
  br i1 %528, label %529, label %530, !dbg !12007

529:                                              ; preds = %521
  store i64 0, ptr %5, align 8, !dbg !12006
  br label %575, !dbg !12006

530:                                              ; preds = %521
  %531 = load ptr, ptr %10, align 8, !dbg !12007
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %531, ptr align 1 @.str.23.123, i64 11, i1 false), !dbg !12007
  %532 = getelementptr inbounds i8, ptr %531, i64 11, !dbg !12007
  store ptr %532, ptr %10, align 8, !dbg !12007
  br label %533, !dbg !12007

533:                                              ; preds = %530
  br label %534, !dbg !12008

534:                                              ; preds = %533
  %535 = load ptr, ptr %10, align 8, !dbg !12009
  %536 = getelementptr inbounds i8, ptr %535, i64 29, !dbg !12009
  %537 = load ptr, ptr %11, align 8, !dbg !12009
  %538 = icmp uge ptr %536, %537, !dbg !12009
  %539 = zext i1 %538 to i32, !dbg !12009
  %540 = sext i32 %539 to i64, !dbg !12009
  %541 = icmp ne i64 %540, 0, !dbg !12009
  br i1 %541, label %542, label %543, !dbg !12010

542:                                              ; preds = %534
  store i64 0, ptr %5, align 8, !dbg !12009
  br label %575, !dbg !12009

543:                                              ; preds = %534
  %544 = load ptr, ptr %10, align 8, !dbg !12010
  %545 = load ptr, ptr %6, align 8, !dbg !12010
  %546 = getelementptr inbounds %struct.lwan_request_t_, ptr %545, i32 0, i32 4, !dbg !12010
  %547 = load ptr, ptr %546, align 8, !dbg !12010
  %548 = getelementptr inbounds %struct.lwan_connection_t_, ptr %547, i32 0, i32 3, !dbg !12010
  %549 = load ptr, ptr %548, align 8, !dbg !12010
  %550 = getelementptr inbounds %struct.lwan_thread_t_, ptr %549, i32 0, i32 1, !dbg !12010
  %551 = getelementptr inbounds %struct.anon.27, ptr %550, i32 0, i32 1, !dbg !12010
  %552 = getelementptr inbounds [30 x i8], ptr %551, i64 0, i64 0, !dbg !12010
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %544, ptr align 2 %552, i64 29, i1 false), !dbg !12010
  %553 = getelementptr inbounds i8, ptr %544, i64 29, !dbg !12010
  store ptr %553, ptr %10, align 8, !dbg !12010
  br label %554, !dbg !12010

554:                                              ; preds = %543
  br label %555, !dbg !12011

555:                                              ; preds = %554, %511
  br label %556, !dbg !12012

556:                                              ; preds = %555
  %557 = load ptr, ptr %10, align 8, !dbg !12013
  %558 = getelementptr inbounds i8, ptr %557, i64 19, !dbg !12013
  %559 = load ptr, ptr %11, align 8, !dbg !12013
  %560 = icmp uge ptr %558, %559, !dbg !12013
  %561 = zext i1 %560 to i32, !dbg !12013
  %562 = sext i32 %561 to i64, !dbg !12013
  %563 = icmp ne i64 %562, 0, !dbg !12013
  br i1 %563, label %564, label %565, !dbg !12014

564:                                              ; preds = %556
  store i64 0, ptr %5, align 8, !dbg !12013
  br label %575, !dbg !12013

565:                                              ; preds = %556
  %566 = load ptr, ptr %10, align 8, !dbg !12014
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %566, ptr align 1 @.str.24.124, i64 19, i1 false), !dbg !12014
  %567 = getelementptr inbounds i8, ptr %566, i64 19, !dbg !12014
  store ptr %567, ptr %10, align 8, !dbg !12014
  br label %568, !dbg !12014

568:                                              ; preds = %565
  %569 = load ptr, ptr %10, align 8, !dbg !12015
  %570 = load ptr, ptr %8, align 8, !dbg !12016
  %571 = ptrtoint ptr %569 to i64, !dbg !12017
  %572 = ptrtoint ptr %570 to i64, !dbg !12017
  %573 = sub i64 %571, %572, !dbg !12017
  %574 = sub nsw i64 %573, 1, !dbg !12018
  store i64 %574, ptr %5, align 8, !dbg !12019
  br label %575, !dbg !12019

575:                                              ; preds = %568, %564, %542, %529, %498, %485, %451, %432, %390, %362, %342, %277, %263, %236, %216, %197, %186, %159, %148, %121, %100, %77, %58, %44
  %576 = load i64, ptr %5, align 8, !dbg !12020
  ret i64 %576, !dbg !12020
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @lwan_response_set_event_stream(ptr noundef %0, i32 noundef %1) #0 !dbg !12021 {
  %3 = alloca i64, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca [25 x i8], align 16
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca ptr, align 8
  %16 = alloca i64, align 8
  %17 = alloca ptr, align 8
  %18 = alloca i64, align 8
  %19 = alloca ptr, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca ptr, align 8
  %23 = alloca i64, align 8
  %24 = alloca i1, align 1
  %25 = alloca ptr, align 8
  %26 = alloca i32, align 4
  %27 = alloca [4096 x i8], align 16
  %28 = alloca i64, align 8
  store ptr %0, ptr %25, align 8
  call void @llvm.dbg.declare(metadata ptr %25, metadata !12022, metadata !DIExpression()), !dbg !12023
  store i32 %1, ptr %26, align 4
  call void @llvm.dbg.declare(metadata ptr %26, metadata !12024, metadata !DIExpression()), !dbg !12025
  call void @llvm.dbg.declare(metadata ptr %27, metadata !12026, metadata !DIExpression()), !dbg !12027
  call void @llvm.dbg.declare(metadata ptr %28, metadata !12028, metadata !DIExpression()), !dbg !12029
  %29 = load ptr, ptr %25, align 8, !dbg !12030
  %30 = getelementptr inbounds %struct.lwan_request_t_, ptr %29, i32 0, i32 0, !dbg !12032
  %31 = load i32, ptr %30, align 8, !dbg !12032
  %32 = and i32 %31, 64, !dbg !12033
  %33 = icmp ne i32 %32, 0, !dbg !12033
  br i1 %33, label %34, label %35, !dbg !12034

34:                                               ; preds = %2
  store i1 false, ptr %24, align 1, !dbg !12035
  br label %509, !dbg !12035

35:                                               ; preds = %2
  %36 = load ptr, ptr %25, align 8, !dbg !12036
  %37 = getelementptr inbounds %struct.lwan_request_t_, ptr %36, i32 0, i32 8, !dbg !12037
  %38 = getelementptr inbounds %struct.lwan_response_t_, ptr %37, i32 0, i32 1, !dbg !12038
  store ptr @.str.27.135, ptr %38, align 8, !dbg !12039
  %39 = load ptr, ptr %25, align 8, !dbg !12040
  %40 = getelementptr inbounds %struct.lwan_request_t_, ptr %39, i32 0, i32 0, !dbg !12041
  %41 = load i32, ptr %40, align 8, !dbg !12042
  %42 = or i32 %41, 256, !dbg !12042
  store i32 %42, ptr %40, align 8, !dbg !12042
  %43 = load ptr, ptr %25, align 8, !dbg !12043
  %44 = load i32, ptr %26, align 4, !dbg !12044
  %45 = getelementptr inbounds [4096 x i8], ptr %27, i64 0, i64 0, !dbg !12045
  store ptr %43, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !11219, metadata !DIExpression()), !dbg !12046
  store i32 %44, ptr %5, align 4
  call void @llvm.dbg.declare(metadata ptr %5, metadata !11225, metadata !DIExpression()), !dbg !12048
  store ptr %45, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !11227, metadata !DIExpression()), !dbg !12049
  store i64 4096, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !11229, metadata !DIExpression()), !dbg !12050
  call void @llvm.dbg.declare(metadata ptr %8, metadata !11231, metadata !DIExpression()), !dbg !12051
  call void @llvm.dbg.declare(metadata ptr %9, metadata !11233, metadata !DIExpression()), !dbg !12052
  %46 = load ptr, ptr %6, align 8, !dbg !12053
  %47 = load i64, ptr %7, align 8, !dbg !12054
  %48 = getelementptr inbounds i8, ptr %46, i64 %47, !dbg !12055
  store ptr %48, ptr %9, align 8, !dbg !12052
  call void @llvm.dbg.declare(metadata ptr %10, metadata !11238, metadata !DIExpression()), !dbg !12056
  call void @llvm.dbg.declare(metadata ptr %11, metadata !11240, metadata !DIExpression()), !dbg !12057
  store i8 0, ptr %11, align 1, !dbg !12057
  call void @llvm.dbg.declare(metadata ptr %12, metadata !11242, metadata !DIExpression()), !dbg !12058
  store i8 0, ptr %12, align 1, !dbg !12058
  %49 = load ptr, ptr %6, align 8, !dbg !12059
  store ptr %49, ptr %8, align 8, !dbg !12060
  %50 = load ptr, ptr %4, align 8, !dbg !12061
  %51 = load i32, ptr %50, align 8, !dbg !12062
  %52 = and i32 %51, 32, !dbg !12063
  %53 = icmp ne i32 %52, 0, !dbg !12063
  br i1 %53, label %54, label %65, !dbg !12064

54:                                               ; preds = %35
  %55 = load ptr, ptr %8, align 8, !dbg !12065
  %56 = getelementptr inbounds i8, ptr %55, i64 9, !dbg !12065
  %57 = load ptr, ptr %9, align 8, !dbg !12065
  %58 = icmp uge ptr %56, %57, !dbg !12065
  %59 = zext i1 %58 to i32, !dbg !12065
  %60 = sext i32 %59 to i64, !dbg !12065
  br i1 %58, label %61, label %62, !dbg !12066

61:                                               ; preds = %54
  store i64 0, ptr %3, align 8, !dbg !12065
  br label %491, !dbg !12065

62:                                               ; preds = %54
  %63 = load ptr, ptr %8, align 8, !dbg !12066
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %63, ptr align 1 @.str.10.110, i64 9, i1 false), !dbg !12066
  %64 = getelementptr inbounds i8, ptr %63, i64 9, !dbg !12066
  store ptr %64, ptr %8, align 8, !dbg !12066
  br label %76, !dbg !12066

65:                                               ; preds = %35
  %66 = load ptr, ptr %8, align 8, !dbg !12067
  %67 = getelementptr inbounds i8, ptr %66, i64 9, !dbg !12067
  %68 = load ptr, ptr %9, align 8, !dbg !12067
  %69 = icmp uge ptr %67, %68, !dbg !12067
  %70 = zext i1 %69 to i32, !dbg !12067
  %71 = sext i32 %70 to i64, !dbg !12067
  br i1 %69, label %72, label %73, !dbg !12068

72:                                               ; preds = %65
  store i64 0, ptr %3, align 8, !dbg !12067
  br label %491, !dbg !12067

73:                                               ; preds = %65
  %74 = load ptr, ptr %8, align 8, !dbg !12068
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %74, ptr align 1 @.str.11.111, i64 9, i1 false), !dbg !12068
  %75 = getelementptr inbounds i8, ptr %74, i64 9, !dbg !12068
  store ptr %75, ptr %8, align 8, !dbg !12068
  br label %76

76:                                               ; preds = %73, %62
  call void @llvm.dbg.declare(metadata ptr %13, metadata !11259, metadata !DIExpression()), !dbg !12069
  %77 = load i32, ptr %5, align 4, !dbg !12069
  %78 = call ptr @lwan_http_status_as_string_with_code(i32 noundef %77) #22, !dbg !12069
  %79 = call i64 @strlen(ptr noundef %78) #22, !dbg !12069
  store i64 %79, ptr %13, align 8, !dbg !12069
  %80 = load ptr, ptr %8, align 8, !dbg !12070
  %81 = load i64, ptr %13, align 8, !dbg !12070
  %82 = getelementptr inbounds i8, ptr %80, i64 %81, !dbg !12070
  %83 = load ptr, ptr %9, align 8, !dbg !12070
  %84 = icmp uge ptr %82, %83, !dbg !12070
  %85 = zext i1 %84 to i32, !dbg !12070
  %86 = sext i32 %85 to i64, !dbg !12070
  br i1 %84, label %87, label %88, !dbg !12071

87:                                               ; preds = %76
  store i64 0, ptr %3, align 8, !dbg !12070
  br label %491, !dbg !12070

88:                                               ; preds = %76
  %89 = load ptr, ptr %8, align 8, !dbg !12071
  %90 = load i32, ptr %5, align 4, !dbg !12071
  %91 = call ptr @lwan_http_status_as_string_with_code(i32 noundef %90) #22, !dbg !12071
  %92 = load i64, ptr %13, align 8, !dbg !12071
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %89, ptr align 1 %91, i64 %92, i1 false), !dbg !12071
  %93 = getelementptr inbounds i8, ptr %89, i64 %92, !dbg !12071
  store ptr %93, ptr %8, align 8, !dbg !12071
  %94 = load ptr, ptr %4, align 8, !dbg !12072
  %95 = load i32, ptr %94, align 8, !dbg !12073
  %96 = and i32 %95, 128, !dbg !12074
  %97 = icmp ne i32 %96, 0, !dbg !12074
  br i1 %97, label %98, label %109, !dbg !12075

98:                                               ; preds = %88
  %99 = load ptr, ptr %8, align 8, !dbg !12076
  %100 = getelementptr inbounds i8, ptr %99, i64 28, !dbg !12076
  %101 = load ptr, ptr %9, align 8, !dbg !12076
  %102 = icmp uge ptr %100, %101, !dbg !12076
  %103 = zext i1 %102 to i32, !dbg !12076
  %104 = sext i32 %103 to i64, !dbg !12076
  br i1 %102, label %105, label %106, !dbg !12077

105:                                              ; preds = %98
  store i64 0, ptr %3, align 8, !dbg !12076
  br label %491, !dbg !12076

106:                                              ; preds = %98
  %107 = load ptr, ptr %8, align 8, !dbg !12077
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %107, ptr align 1 @.str.12.112, i64 28, i1 false), !dbg !12077
  %108 = getelementptr inbounds i8, ptr %107, i64 28, !dbg !12077
  store ptr %108, ptr %8, align 8, !dbg !12077
  br label %191, !dbg !12078

109:                                              ; preds = %88
  %110 = load ptr, ptr %4, align 8, !dbg !12079
  %111 = load i32, ptr %110, align 8, !dbg !12080
  %112 = and i32 %111, 256, !dbg !12081
  %113 = icmp ne i32 %112, 0, !dbg !12081
  br i1 %113, label %114, label %115, !dbg !12082

114:                                              ; preds = %109
  br label %190, !dbg !12083

115:                                              ; preds = %109
  %116 = load ptr, ptr %8, align 8, !dbg !12084
  %117 = getelementptr inbounds i8, ptr %116, i64 18, !dbg !12084
  %118 = load ptr, ptr %9, align 8, !dbg !12084
  %119 = icmp uge ptr %117, %118, !dbg !12084
  %120 = zext i1 %119 to i32, !dbg !12084
  %121 = sext i32 %120 to i64, !dbg !12084
  br i1 %119, label %122, label %123, !dbg !12085

122:                                              ; preds = %115
  store i64 0, ptr %3, align 8, !dbg !12084
  br label %491, !dbg !12084

123:                                              ; preds = %115
  %124 = load ptr, ptr %8, align 8, !dbg !12085
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %124, ptr align 1 @.str.13.113, i64 18, i1 false), !dbg !12085
  %125 = getelementptr inbounds i8, ptr %124, i64 18, !dbg !12085
  store ptr %125, ptr %8, align 8, !dbg !12085
  %126 = load ptr, ptr %4, align 8, !dbg !12086
  %127 = getelementptr inbounds %struct.lwan_request_t_, ptr %126, i32 0, i32 8, !dbg !12087
  %128 = getelementptr inbounds %struct.lwan_response_t_, ptr %127, i32 0, i32 4, !dbg !12088
  %129 = load ptr, ptr %128, align 8, !dbg !12089
  %130 = icmp ne ptr %129, null, !dbg !12086
  br i1 %130, label %131, label %159, !dbg !12090

131:                                              ; preds = %123
  call void @llvm.dbg.declare(metadata ptr %14, metadata !11295, metadata !DIExpression()), !dbg !12091
  call void @llvm.dbg.declare(metadata ptr %15, metadata !11298, metadata !DIExpression()), !dbg !12091
  %132 = load ptr, ptr %4, align 8, !dbg !12091
  %133 = getelementptr inbounds %struct.lwan_request_t_, ptr %132, i32 0, i32 8, !dbg !12091
  %134 = getelementptr inbounds %struct.lwan_response_t_, ptr %133, i32 0, i32 2, !dbg !12091
  %135 = load i64, ptr %134, align 8, !dbg !12091
  %136 = call ptr @uint_to_string(i64 noundef %135, ptr noundef %10, ptr noundef %14) #18, !dbg !12091
  store ptr %136, ptr %15, align 8, !dbg !12091
  %137 = load ptr, ptr %8, align 8, !dbg !12092
  %138 = load i64, ptr %14, align 8, !dbg !12092
  %139 = getelementptr inbounds i8, ptr %137, i64 %138, !dbg !12092
  %140 = load ptr, ptr %9, align 8, !dbg !12092
  %141 = icmp uge ptr %139, %140, !dbg !12092
  %142 = zext i1 %141 to i32, !dbg !12092
  %143 = sext i32 %142 to i64, !dbg !12092
  br i1 %141, label %144, label %145, !dbg !12091

144:                                              ; preds = %131
  store i64 0, ptr %3, align 8, !dbg !12092
  br label %491, !dbg !12092

145:                                              ; preds = %131
  %146 = load ptr, ptr %8, align 8, !dbg !12093
  %147 = load i64, ptr %14, align 8, !dbg !12093
  %148 = getelementptr inbounds i8, ptr %146, i64 %147, !dbg !12093
  %149 = load ptr, ptr %9, align 8, !dbg !12093
  %150 = icmp uge ptr %148, %149, !dbg !12093
  %151 = zext i1 %150 to i32, !dbg !12093
  %152 = sext i32 %151 to i64, !dbg !12093
  br i1 %150, label %153, label %154, !dbg !12094

153:                                              ; preds = %145
  store i64 0, ptr %3, align 8, !dbg !12093
  br label %491, !dbg !12093

154:                                              ; preds = %145
  %155 = load ptr, ptr %8, align 8, !dbg !12094
  %156 = load ptr, ptr %15, align 8, !dbg !12094
  %157 = load i64, ptr %14, align 8, !dbg !12094
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %155, ptr align 1 %156, i64 %157, i1 false), !dbg !12094
  %158 = getelementptr inbounds i8, ptr %155, i64 %157, !dbg !12094
  store ptr %158, ptr %8, align 8, !dbg !12094
  br label %189, !dbg !12091

159:                                              ; preds = %123
  call void @llvm.dbg.declare(metadata ptr %16, metadata !11305, metadata !DIExpression()), !dbg !12095
  call void @llvm.dbg.declare(metadata ptr %17, metadata !11308, metadata !DIExpression()), !dbg !12095
  %160 = load ptr, ptr %4, align 8, !dbg !12095
  %161 = getelementptr inbounds %struct.lwan_request_t_, ptr %160, i32 0, i32 8, !dbg !12095
  %162 = load ptr, ptr %161, align 8, !dbg !12095
  %163 = getelementptr inbounds %struct.strbuf_t_, ptr %162, i32 0, i32 1, !dbg !12095
  %164 = getelementptr inbounds %struct.timespec, ptr %163, i32 0, i32 1, !dbg !12095
  %165 = load i64, ptr %164, align 8, !dbg !12095
  %166 = call ptr @uint_to_string(i64 noundef %165, ptr noundef %10, ptr noundef %16) #18, !dbg !12095
  store ptr %166, ptr %17, align 8, !dbg !12095
  %167 = load ptr, ptr %8, align 8, !dbg !12096
  %168 = load i64, ptr %16, align 8, !dbg !12096
  %169 = getelementptr inbounds i8, ptr %167, i64 %168, !dbg !12096
  %170 = load ptr, ptr %9, align 8, !dbg !12096
  %171 = icmp uge ptr %169, %170, !dbg !12096
  %172 = zext i1 %171 to i32, !dbg !12096
  %173 = sext i32 %172 to i64, !dbg !12096
  br i1 %171, label %174, label %175, !dbg !12095

174:                                              ; preds = %159
  store i64 0, ptr %3, align 8, !dbg !12096
  br label %491, !dbg !12096

175:                                              ; preds = %159
  %176 = load ptr, ptr %8, align 8, !dbg !12097
  %177 = load i64, ptr %16, align 8, !dbg !12097
  %178 = getelementptr inbounds i8, ptr %176, i64 %177, !dbg !12097
  %179 = load ptr, ptr %9, align 8, !dbg !12097
  %180 = icmp uge ptr %178, %179, !dbg !12097
  %181 = zext i1 %180 to i32, !dbg !12097
  %182 = sext i32 %181 to i64, !dbg !12097
  br i1 %180, label %183, label %184, !dbg !12098

183:                                              ; preds = %175
  store i64 0, ptr %3, align 8, !dbg !12097
  br label %491, !dbg !12097

184:                                              ; preds = %175
  %185 = load ptr, ptr %8, align 8, !dbg !12098
  %186 = load ptr, ptr %17, align 8, !dbg !12098
  %187 = load i64, ptr %16, align 8, !dbg !12098
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %185, ptr align 1 %186, i64 %187, i1 false), !dbg !12098
  %188 = getelementptr inbounds i8, ptr %185, i64 %187, !dbg !12098
  store ptr %188, ptr %8, align 8, !dbg !12098
  br label %189

189:                                              ; preds = %184, %154
  br label %190

190:                                              ; preds = %189, %114
  br label %191

191:                                              ; preds = %190, %106
  %192 = load ptr, ptr %8, align 8, !dbg !12099
  %193 = getelementptr inbounds i8, ptr %192, i64 16, !dbg !12099
  %194 = load ptr, ptr %9, align 8, !dbg !12099
  %195 = icmp uge ptr %193, %194, !dbg !12099
  %196 = zext i1 %195 to i32, !dbg !12099
  %197 = sext i32 %196 to i64, !dbg !12099
  br i1 %195, label %198, label %199, !dbg !12100

198:                                              ; preds = %191
  store i64 0, ptr %3, align 8, !dbg !12099
  br label %491, !dbg !12099

199:                                              ; preds = %191
  %200 = load ptr, ptr %8, align 8, !dbg !12100
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %200, ptr align 1 @.str.14.114, i64 16, i1 false), !dbg !12100
  %201 = getelementptr inbounds i8, ptr %200, i64 16, !dbg !12100
  store ptr %201, ptr %8, align 8, !dbg !12100
  call void @llvm.dbg.declare(metadata ptr %18, metadata !11319, metadata !DIExpression()), !dbg !12101
  %202 = load ptr, ptr %4, align 8, !dbg !12101
  %203 = getelementptr inbounds %struct.lwan_request_t_, ptr %202, i32 0, i32 8, !dbg !12101
  %204 = getelementptr inbounds %struct.lwan_response_t_, ptr %203, i32 0, i32 1, !dbg !12101
  %205 = load ptr, ptr %204, align 8, !dbg !12101
  %206 = call i64 @strlen(ptr noundef %205) #22, !dbg !12101
  store i64 %206, ptr %18, align 8, !dbg !12101
  %207 = load ptr, ptr %8, align 8, !dbg !12102
  %208 = load i64, ptr %18, align 8, !dbg !12102
  %209 = getelementptr inbounds i8, ptr %207, i64 %208, !dbg !12102
  %210 = load ptr, ptr %9, align 8, !dbg !12102
  %211 = icmp uge ptr %209, %210, !dbg !12102
  %212 = zext i1 %211 to i32, !dbg !12102
  %213 = sext i32 %212 to i64, !dbg !12102
  br i1 %211, label %214, label %215, !dbg !12103

214:                                              ; preds = %199
  store i64 0, ptr %3, align 8, !dbg !12102
  br label %491, !dbg !12102

215:                                              ; preds = %199
  %216 = load ptr, ptr %8, align 8, !dbg !12103
  %217 = load ptr, ptr %4, align 8, !dbg !12103
  %218 = getelementptr inbounds %struct.lwan_request_t_, ptr %217, i32 0, i32 8, !dbg !12103
  %219 = getelementptr inbounds %struct.lwan_response_t_, ptr %218, i32 0, i32 1, !dbg !12103
  %220 = load ptr, ptr %219, align 8, !dbg !12103
  %221 = load i64, ptr %18, align 8, !dbg !12103
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %216, ptr align 1 %220, i64 %221, i1 false), !dbg !12103
  %222 = getelementptr inbounds i8, ptr %216, i64 %221, !dbg !12103
  store ptr %222, ptr %8, align 8, !dbg !12103
  %223 = load ptr, ptr %4, align 8, !dbg !12104
  %224 = getelementptr inbounds %struct.lwan_request_t_, ptr %223, i32 0, i32 4, !dbg !12105
  %225 = load ptr, ptr %224, align 8, !dbg !12105
  %226 = load i32, ptr %225, align 8, !dbg !12106
  %227 = and i32 %226, 1, !dbg !12107
  %228 = icmp ne i32 %227, 0, !dbg !12107
  br i1 %228, label %229, label %240, !dbg !12108

229:                                              ; preds = %215
  %230 = load ptr, ptr %8, align 8, !dbg !12109
  %231 = getelementptr inbounds i8, ptr %230, i64 24, !dbg !12109
  %232 = load ptr, ptr %9, align 8, !dbg !12109
  %233 = icmp uge ptr %231, %232, !dbg !12109
  %234 = zext i1 %233 to i32, !dbg !12109
  %235 = sext i32 %234 to i64, !dbg !12109
  br i1 %233, label %236, label %237, !dbg !12110

236:                                              ; preds = %229
  store i64 0, ptr %3, align 8, !dbg !12109
  br label %491, !dbg !12109

237:                                              ; preds = %229
  %238 = load ptr, ptr %8, align 8, !dbg !12110
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %238, ptr align 1 @.str.15.115, i64 24, i1 false), !dbg !12110
  %239 = getelementptr inbounds i8, ptr %238, i64 24, !dbg !12110
  store ptr %239, ptr %8, align 8, !dbg !12110
  br label %251, !dbg !12110

240:                                              ; preds = %215
  %241 = load ptr, ptr %8, align 8, !dbg !12111
  %242 = getelementptr inbounds i8, ptr %241, i64 19, !dbg !12111
  %243 = load ptr, ptr %9, align 8, !dbg !12111
  %244 = icmp uge ptr %242, %243, !dbg !12111
  %245 = zext i1 %244 to i32, !dbg !12111
  %246 = sext i32 %245 to i64, !dbg !12111
  br i1 %244, label %247, label %248, !dbg !12112

247:                                              ; preds = %240
  store i64 0, ptr %3, align 8, !dbg !12111
  br label %491, !dbg !12111

248:                                              ; preds = %240
  %249 = load ptr, ptr %8, align 8, !dbg !12112
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %249, ptr align 1 @.str.16.116, i64 19, i1 false), !dbg !12112
  %250 = getelementptr inbounds i8, ptr %249, i64 19, !dbg !12112
  store ptr %250, ptr %8, align 8, !dbg !12112
  br label %251

251:                                              ; preds = %248, %237
  %252 = load i32, ptr %5, align 4, !dbg !12113
  %253 = icmp ult i32 %252, 400, !dbg !12114
  br i1 %253, label %254, label %353, !dbg !12115

254:                                              ; preds = %251
  %255 = load ptr, ptr %4, align 8, !dbg !12116
  %256 = getelementptr inbounds %struct.lwan_request_t_, ptr %255, i32 0, i32 8, !dbg !12117
  %257 = getelementptr inbounds %struct.lwan_response_t_, ptr %256, i32 0, i32 3, !dbg !12118
  %258 = load ptr, ptr %257, align 8, !dbg !12118
  %259 = icmp ne ptr %258, null, !dbg !12116
  br i1 %259, label %260, label %353, !dbg !12119

260:                                              ; preds = %254
  call void @llvm.dbg.declare(metadata ptr %19, metadata !11348, metadata !DIExpression()), !dbg !12120
  %261 = load ptr, ptr %4, align 8, !dbg !12121
  %262 = getelementptr inbounds %struct.lwan_request_t_, ptr %261, i32 0, i32 8, !dbg !12122
  %263 = getelementptr inbounds %struct.lwan_response_t_, ptr %262, i32 0, i32 3, !dbg !12123
  %264 = load ptr, ptr %263, align 8, !dbg !12123
  store ptr %264, ptr %19, align 8, !dbg !12124
  br label %265, !dbg !12125

265:                                              ; preds = %349, %260
  %266 = load ptr, ptr %19, align 8, !dbg !12126
  %267 = load ptr, ptr %266, align 8, !dbg !12127
  %268 = icmp ne ptr %267, null, !dbg !12128
  br i1 %268, label %269, label %352, !dbg !12128

269:                                              ; preds = %265
  %270 = load ptr, ptr %19, align 8, !dbg !12129
  %271 = load ptr, ptr %270, align 8, !dbg !12129
  %272 = call i32 @strcmp(ptr noundef %271, ptr noundef @.str.17.117) #22, !dbg !12129
  %273 = icmp ne i32 %272, 0, !dbg !12129
  %274 = xor i1 %273, true, !dbg !12129
  %275 = zext i1 %274 to i32, !dbg !12129
  %276 = sext i32 %275 to i64, !dbg !12129
  br i1 %274, label %277, label %278, !dbg !12130

277:                                              ; preds = %269
  br label %349, !dbg !12131

278:                                              ; preds = %269
  %279 = load ptr, ptr %19, align 8, !dbg !12132
  %280 = load ptr, ptr %279, align 8, !dbg !12132
  %281 = call i32 @strcmp(ptr noundef %280, ptr noundef @.str.18.118) #22, !dbg !12132
  %282 = icmp ne i32 %281, 0, !dbg !12132
  %283 = xor i1 %282, true, !dbg !12132
  %284 = zext i1 %283 to i32, !dbg !12132
  %285 = sext i32 %284 to i64, !dbg !12132
  br i1 %283, label %286, label %287, !dbg !12133

286:                                              ; preds = %278
  store i8 1, ptr %11, align 1, !dbg !12134
  br label %287, !dbg !12135

287:                                              ; preds = %286, %278
  %288 = load ptr, ptr %19, align 8, !dbg !12136
  %289 = load ptr, ptr %288, align 8, !dbg !12136
  %290 = call i32 @strcmp(ptr noundef %289, ptr noundef @.str.19.119) #22, !dbg !12136
  %291 = icmp ne i32 %290, 0, !dbg !12136
  %292 = xor i1 %291, true, !dbg !12136
  %293 = zext i1 %292 to i32, !dbg !12136
  %294 = sext i32 %293 to i64, !dbg !12136
  br i1 %292, label %295, label %296, !dbg !12137

295:                                              ; preds = %287
  store i8 1, ptr %12, align 1, !dbg !12138
  br label %296, !dbg !12139

296:                                              ; preds = %295, %287
  %297 = load ptr, ptr %8, align 8, !dbg !12140
  %298 = getelementptr inbounds i8, ptr %297, i64 4, !dbg !12140
  %299 = load ptr, ptr %9, align 8, !dbg !12140
  %300 = icmp uge ptr %298, %299, !dbg !12140
  %301 = zext i1 %300 to i32, !dbg !12140
  %302 = sext i32 %301 to i64, !dbg !12140
  br i1 %300, label %303, label %304, !dbg !12141

303:                                              ; preds = %296
  store i64 0, ptr %3, align 8, !dbg !12140
  br label %491, !dbg !12140

304:                                              ; preds = %296
  %305 = load ptr, ptr %8, align 8, !dbg !12142
  %306 = getelementptr inbounds i8, ptr %305, i32 1, !dbg !12142
  store ptr %306, ptr %8, align 8, !dbg !12142
  store i8 13, ptr %305, align 1, !dbg !12142
  %307 = load ptr, ptr %8, align 8, !dbg !12143
  %308 = getelementptr inbounds i8, ptr %307, i32 1, !dbg !12143
  store ptr %308, ptr %8, align 8, !dbg !12143
  store i8 10, ptr %307, align 1, !dbg !12143
  call void @llvm.dbg.declare(metadata ptr %20, metadata !11381, metadata !DIExpression()), !dbg !12144
  %309 = load ptr, ptr %19, align 8, !dbg !12144
  %310 = load ptr, ptr %309, align 8, !dbg !12144
  %311 = call i64 @strlen(ptr noundef %310) #22, !dbg !12144
  store i64 %311, ptr %20, align 8, !dbg !12144
  %312 = load ptr, ptr %8, align 8, !dbg !12145
  %313 = load i64, ptr %20, align 8, !dbg !12145
  %314 = getelementptr inbounds i8, ptr %312, i64 %313, !dbg !12145
  %315 = load ptr, ptr %9, align 8, !dbg !12145
  %316 = icmp uge ptr %314, %315, !dbg !12145
  %317 = zext i1 %316 to i32, !dbg !12145
  %318 = sext i32 %317 to i64, !dbg !12145
  br i1 %316, label %319, label %320, !dbg !12146

319:                                              ; preds = %304
  store i64 0, ptr %3, align 8, !dbg !12145
  br label %491, !dbg !12145

320:                                              ; preds = %304
  %321 = load ptr, ptr %8, align 8, !dbg !12146
  %322 = load ptr, ptr %19, align 8, !dbg !12146
  %323 = load ptr, ptr %322, align 8, !dbg !12146
  %324 = load i64, ptr %20, align 8, !dbg !12146
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %321, ptr align 1 %323, i64 %324, i1 false), !dbg !12146
  %325 = getelementptr inbounds i8, ptr %321, i64 %324, !dbg !12146
  store ptr %325, ptr %8, align 8, !dbg !12146
  %326 = load ptr, ptr %8, align 8, !dbg !12147
  %327 = getelementptr inbounds i8, ptr %326, i32 1, !dbg !12147
  store ptr %327, ptr %8, align 8, !dbg !12147
  store i8 58, ptr %326, align 1, !dbg !12147
  %328 = load ptr, ptr %8, align 8, !dbg !12148
  %329 = getelementptr inbounds i8, ptr %328, i32 1, !dbg !12148
  store ptr %329, ptr %8, align 8, !dbg !12148
  store i8 32, ptr %328, align 1, !dbg !12148
  call void @llvm.dbg.declare(metadata ptr %21, metadata !11390, metadata !DIExpression()), !dbg !12149
  %330 = load ptr, ptr %19, align 8, !dbg !12149
  %331 = getelementptr inbounds %struct.list_node, ptr %330, i32 0, i32 1, !dbg !12149
  %332 = load ptr, ptr %331, align 8, !dbg !12149
  %333 = call i64 @strlen(ptr noundef %332) #22, !dbg !12149
  store i64 %333, ptr %21, align 8, !dbg !12149
  %334 = load ptr, ptr %8, align 8, !dbg !12150
  %335 = load i64, ptr %21, align 8, !dbg !12150
  %336 = getelementptr inbounds i8, ptr %334, i64 %335, !dbg !12150
  %337 = load ptr, ptr %9, align 8, !dbg !12150
  %338 = icmp uge ptr %336, %337, !dbg !12150
  %339 = zext i1 %338 to i32, !dbg !12150
  %340 = sext i32 %339 to i64, !dbg !12150
  br i1 %338, label %341, label %342, !dbg !12151

341:                                              ; preds = %320
  store i64 0, ptr %3, align 8, !dbg !12150
  br label %491, !dbg !12150

342:                                              ; preds = %320
  %343 = load ptr, ptr %8, align 8, !dbg !12151
  %344 = load ptr, ptr %19, align 8, !dbg !12151
  %345 = getelementptr inbounds %struct.list_node, ptr %344, i32 0, i32 1, !dbg !12151
  %346 = load ptr, ptr %345, align 8, !dbg !12151
  %347 = load i64, ptr %21, align 8, !dbg !12151
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %343, ptr align 1 %346, i64 %347, i1 false), !dbg !12151
  %348 = getelementptr inbounds i8, ptr %343, i64 %347, !dbg !12151
  store ptr %348, ptr %8, align 8, !dbg !12151
  br label %349, !dbg !12152

349:                                              ; preds = %342, %277
  %350 = load ptr, ptr %19, align 8, !dbg !12153
  %351 = getelementptr inbounds %struct.list_node, ptr %350, i32 1, !dbg !12153
  store ptr %351, ptr %19, align 8, !dbg !12153
  br label %265, !dbg !12154, !llvm.loop !12155

352:                                              ; preds = %265
  br label %405, !dbg !12157

353:                                              ; preds = %254, %251
  %354 = load i32, ptr %5, align 4, !dbg !12158
  %355 = icmp eq i32 %354, 401, !dbg !12159
  br i1 %355, label %356, label %404, !dbg !12160

356:                                              ; preds = %353
  call void @llvm.dbg.declare(metadata ptr %22, metadata !11407, metadata !DIExpression()), !dbg !12161
  %357 = load ptr, ptr %4, align 8, !dbg !12162
  %358 = getelementptr inbounds %struct.lwan_request_t_, ptr %357, i32 0, i32 8, !dbg !12163
  %359 = getelementptr inbounds %struct.lwan_response_t_, ptr %358, i32 0, i32 3, !dbg !12164
  %360 = load ptr, ptr %359, align 8, !dbg !12164
  store ptr %360, ptr %22, align 8, !dbg !12165
  br label %361, !dbg !12166

361:                                              ; preds = %400, %356
  %362 = load ptr, ptr %22, align 8, !dbg !12167
  %363 = load ptr, ptr %362, align 8, !dbg !12168
  %364 = icmp ne ptr %363, null, !dbg !12169
  br i1 %364, label %365, label %403, !dbg !12169

365:                                              ; preds = %361
  %366 = load ptr, ptr %22, align 8, !dbg !12170
  %367 = load ptr, ptr %366, align 8, !dbg !12171
  %368 = call i32 @strcmp(ptr noundef %367, ptr noundef @.str.20.120) #22, !dbg !12172
  %369 = icmp ne i32 %368, 0, !dbg !12172
  br i1 %369, label %400, label %370, !dbg !12173

370:                                              ; preds = %365
  %371 = load ptr, ptr %8, align 8, !dbg !12174
  %372 = getelementptr inbounds i8, ptr %371, i64 20, !dbg !12174
  %373 = load ptr, ptr %9, align 8, !dbg !12174
  %374 = icmp uge ptr %372, %373, !dbg !12174
  %375 = zext i1 %374 to i32, !dbg !12174
  %376 = sext i32 %375 to i64, !dbg !12174
  br i1 %374, label %377, label %378, !dbg !12175

377:                                              ; preds = %370
  store i64 0, ptr %3, align 8, !dbg !12174
  br label %491, !dbg !12174

378:                                              ; preds = %370
  %379 = load ptr, ptr %8, align 8, !dbg !12175
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %379, ptr align 1 @.str.21.121, i64 20, i1 false), !dbg !12175
  %380 = getelementptr inbounds i8, ptr %379, i64 20, !dbg !12175
  store ptr %380, ptr %8, align 8, !dbg !12175
  call void @llvm.dbg.declare(metadata ptr %23, metadata !11431, metadata !DIExpression()), !dbg !12176
  %381 = load ptr, ptr %22, align 8, !dbg !12176
  %382 = getelementptr inbounds %struct.list_node, ptr %381, i32 0, i32 1, !dbg !12176
  %383 = load ptr, ptr %382, align 8, !dbg !12176
  %384 = call i64 @strlen(ptr noundef %383) #22, !dbg !12176
  store i64 %384, ptr %23, align 8, !dbg !12176
  %385 = load ptr, ptr %8, align 8, !dbg !12177
  %386 = load i64, ptr %23, align 8, !dbg !12177
  %387 = getelementptr inbounds i8, ptr %385, i64 %386, !dbg !12177
  %388 = load ptr, ptr %9, align 8, !dbg !12177
  %389 = icmp uge ptr %387, %388, !dbg !12177
  %390 = zext i1 %389 to i32, !dbg !12177
  %391 = sext i32 %390 to i64, !dbg !12177
  br i1 %389, label %392, label %393, !dbg !12178

392:                                              ; preds = %378
  store i64 0, ptr %3, align 8, !dbg !12177
  br label %491, !dbg !12177

393:                                              ; preds = %378
  %394 = load ptr, ptr %8, align 8, !dbg !12178
  %395 = load ptr, ptr %22, align 8, !dbg !12178
  %396 = getelementptr inbounds %struct.list_node, ptr %395, i32 0, i32 1, !dbg !12178
  %397 = load ptr, ptr %396, align 8, !dbg !12178
  %398 = load i64, ptr %23, align 8, !dbg !12178
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %394, ptr align 1 %397, i64 %398, i1 false), !dbg !12178
  %399 = getelementptr inbounds i8, ptr %394, i64 %398, !dbg !12178
  store ptr %399, ptr %8, align 8, !dbg !12178
  br label %403, !dbg !12179

400:                                              ; preds = %365
  %401 = load ptr, ptr %22, align 8, !dbg !12180
  %402 = getelementptr inbounds %struct.list_node, ptr %401, i32 1, !dbg !12180
  store ptr %402, ptr %22, align 8, !dbg !12180
  br label %361, !dbg !12181, !llvm.loop !12182

403:                                              ; preds = %393, %361
  br label %404, !dbg !12184

404:                                              ; preds = %403, %353
  br label %405

405:                                              ; preds = %404, %352
  %406 = load i8, ptr %11, align 1, !dbg !12185
  %407 = trunc i8 %406 to i1, !dbg !12185
  %408 = xor i1 %407, true, !dbg !12185
  %409 = xor i1 %407, true, !dbg !12185
  %410 = zext i1 %409 to i32, !dbg !12185
  %411 = sext i32 %410 to i64, !dbg !12185
  br i1 %409, label %412, label %439, !dbg !12186

412:                                              ; preds = %405
  %413 = load ptr, ptr %8, align 8, !dbg !12187
  %414 = getelementptr inbounds i8, ptr %413, i64 8, !dbg !12187
  %415 = load ptr, ptr %9, align 8, !dbg !12187
  %416 = icmp uge ptr %414, %415, !dbg !12187
  %417 = zext i1 %416 to i32, !dbg !12187
  %418 = sext i32 %417 to i64, !dbg !12187
  br i1 %416, label %419, label %420, !dbg !12188

419:                                              ; preds = %412
  store i64 0, ptr %3, align 8, !dbg !12187
  br label %491, !dbg !12187

420:                                              ; preds = %412
  %421 = load ptr, ptr %8, align 8, !dbg !12188
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %421, ptr align 1 @.str.22.122, i64 8, i1 false), !dbg !12188
  %422 = getelementptr inbounds i8, ptr %421, i64 8, !dbg !12188
  store ptr %422, ptr %8, align 8, !dbg !12188
  %423 = load ptr, ptr %8, align 8, !dbg !12189
  %424 = getelementptr inbounds i8, ptr %423, i64 29, !dbg !12189
  %425 = load ptr, ptr %9, align 8, !dbg !12189
  %426 = icmp uge ptr %424, %425, !dbg !12189
  %427 = zext i1 %426 to i32, !dbg !12189
  %428 = sext i32 %427 to i64, !dbg !12189
  br i1 %426, label %429, label %430, !dbg !12190

429:                                              ; preds = %420
  store i64 0, ptr %3, align 8, !dbg !12189
  br label %491, !dbg !12189

430:                                              ; preds = %420
  %431 = load ptr, ptr %8, align 8, !dbg !12190
  %432 = load ptr, ptr %4, align 8, !dbg !12190
  %433 = getelementptr inbounds %struct.lwan_request_t_, ptr %432, i32 0, i32 4, !dbg !12190
  %434 = load ptr, ptr %433, align 8, !dbg !12190
  %435 = getelementptr inbounds %struct.lwan_connection_t_, ptr %434, i32 0, i32 3, !dbg !12190
  %436 = load ptr, ptr %435, align 8, !dbg !12190
  %437 = getelementptr inbounds %struct.lwan_thread_t_, ptr %436, i32 0, i32 1, !dbg !12190
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %431, ptr align 8 %437, i64 29, i1 false), !dbg !12190
  %438 = getelementptr inbounds i8, ptr %431, i64 29, !dbg !12190
  store ptr %438, ptr %8, align 8, !dbg !12190
  br label %439, !dbg !12191

439:                                              ; preds = %430, %405
  %440 = load i8, ptr %12, align 1, !dbg !12192
  %441 = trunc i8 %440 to i1, !dbg !12192
  %442 = xor i1 %441, true, !dbg !12192
  %443 = xor i1 %441, true, !dbg !12192
  %444 = zext i1 %443 to i32, !dbg !12192
  %445 = sext i32 %444 to i64, !dbg !12192
  br i1 %443, label %446, label %474, !dbg !12193

446:                                              ; preds = %439
  %447 = load ptr, ptr %8, align 8, !dbg !12194
  %448 = getelementptr inbounds i8, ptr %447, i64 11, !dbg !12194
  %449 = load ptr, ptr %9, align 8, !dbg !12194
  %450 = icmp uge ptr %448, %449, !dbg !12194
  %451 = zext i1 %450 to i32, !dbg !12194
  %452 = sext i32 %451 to i64, !dbg !12194
  br i1 %450, label %453, label %454, !dbg !12195

453:                                              ; preds = %446
  store i64 0, ptr %3, align 8, !dbg !12194
  br label %491, !dbg !12194

454:                                              ; preds = %446
  %455 = load ptr, ptr %8, align 8, !dbg !12195
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %455, ptr align 1 @.str.23.123, i64 11, i1 false), !dbg !12195
  %456 = getelementptr inbounds i8, ptr %455, i64 11, !dbg !12195
  store ptr %456, ptr %8, align 8, !dbg !12195
  %457 = load ptr, ptr %8, align 8, !dbg !12196
  %458 = getelementptr inbounds i8, ptr %457, i64 29, !dbg !12196
  %459 = load ptr, ptr %9, align 8, !dbg !12196
  %460 = icmp uge ptr %458, %459, !dbg !12196
  %461 = zext i1 %460 to i32, !dbg !12196
  %462 = sext i32 %461 to i64, !dbg !12196
  br i1 %460, label %463, label %464, !dbg !12197

463:                                              ; preds = %454
  store i64 0, ptr %3, align 8, !dbg !12196
  br label %491, !dbg !12196

464:                                              ; preds = %454
  %465 = load ptr, ptr %8, align 8, !dbg !12197
  %466 = load ptr, ptr %4, align 8, !dbg !12197
  %467 = getelementptr inbounds %struct.lwan_request_t_, ptr %466, i32 0, i32 4, !dbg !12197
  %468 = load ptr, ptr %467, align 8, !dbg !12197
  %469 = getelementptr inbounds %struct.lwan_connection_t_, ptr %468, i32 0, i32 3, !dbg !12197
  %470 = load ptr, ptr %469, align 8, !dbg !12197
  %471 = getelementptr inbounds %struct.lwan_thread_t_, ptr %470, i32 0, i32 1, !dbg !12197
  %472 = getelementptr inbounds %struct.anon.27, ptr %471, i32 0, i32 1, !dbg !12197
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %465, ptr align 2 %472, i64 29, i1 false), !dbg !12197
  %473 = getelementptr inbounds i8, ptr %465, i64 29, !dbg !12197
  store ptr %473, ptr %8, align 8, !dbg !12197
  br label %474, !dbg !12198

474:                                              ; preds = %464, %439
  %475 = load ptr, ptr %8, align 8, !dbg !12199
  %476 = getelementptr inbounds i8, ptr %475, i64 19, !dbg !12199
  %477 = load ptr, ptr %9, align 8, !dbg !12199
  %478 = icmp uge ptr %476, %477, !dbg !12199
  %479 = zext i1 %478 to i32, !dbg !12199
  %480 = sext i32 %479 to i64, !dbg !12199
  br i1 %478, label %481, label %482, !dbg !12200

481:                                              ; preds = %474
  store i64 0, ptr %3, align 8, !dbg !12199
  br label %491, !dbg !12199

482:                                              ; preds = %474
  %483 = load ptr, ptr %8, align 8, !dbg !12200
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %483, ptr align 1 @.str.24.124, i64 19, i1 false), !dbg !12200
  %484 = getelementptr inbounds i8, ptr %483, i64 19, !dbg !12200
  store ptr %484, ptr %8, align 8, !dbg !12200
  %485 = load ptr, ptr %8, align 8, !dbg !12201
  %486 = load ptr, ptr %6, align 8, !dbg !12202
  %487 = ptrtoint ptr %485 to i64, !dbg !12203
  %488 = ptrtoint ptr %486 to i64, !dbg !12203
  %489 = sub i64 %487, %488, !dbg !12203
  %490 = sub nsw i64 %489, 1, !dbg !12204
  store i64 %490, ptr %3, align 8, !dbg !12205
  br label %491, !dbg !12205

491:                                              ; preds = %482, %481, %463, %453, %429, %419, %392, %377, %341, %319, %303, %247, %236, %214, %198, %183, %174, %153, %144, %122, %105, %87, %72, %61
  %492 = load i64, ptr %3, align 8, !dbg !12206
  store i64 %492, ptr %28, align 8, !dbg !12207
  %493 = load i64, ptr %28, align 8, !dbg !12208
  %494 = icmp ne i64 %493, 0, !dbg !12208
  %495 = xor i1 %494, true, !dbg !12208
  %496 = zext i1 %495 to i32, !dbg !12208
  %497 = sext i32 %496 to i64, !dbg !12208
  %498 = icmp ne i64 %497, 0, !dbg !12208
  br i1 %498, label %499, label %500, !dbg !12210

499:                                              ; preds = %491
  store i1 false, ptr %24, align 1, !dbg !12211
  br label %509, !dbg !12211

500:                                              ; preds = %491
  %501 = load ptr, ptr %25, align 8, !dbg !12212
  %502 = getelementptr inbounds %struct.lwan_request_t_, ptr %501, i32 0, i32 0, !dbg !12213
  %503 = load i32, ptr %502, align 8, !dbg !12214
  %504 = or i32 %503, 64, !dbg !12214
  store i32 %504, ptr %502, align 8, !dbg !12214
  %505 = load ptr, ptr %25, align 8, !dbg !12215
  %506 = getelementptr inbounds [4096 x i8], ptr %27, i64 0, i64 0, !dbg !12216
  %507 = load i64, ptr %28, align 8, !dbg !12217
  %508 = call i64 @lwan_send(ptr noundef %505, ptr noundef %506, i64 noundef %507, i32 noundef 32768), !dbg !12218
  store i1 true, ptr %24, align 1, !dbg !12219
  br label %509, !dbg !12219

509:                                              ; preds = %500, %499, %34
  %510 = load i1, ptr %24, align 1, !dbg !12220
  ret i1 %510, !dbg !12220
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_response_send_event(ptr noundef %0, ptr noundef %1) #0 !dbg !12221 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca [6 x %struct.lwan_value_t_], align 16
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !12224, metadata !DIExpression()), !dbg !12225
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !12226, metadata !DIExpression()), !dbg !12227
  %8 = load ptr, ptr %3, align 8, !dbg !12228
  %9 = getelementptr inbounds %struct.lwan_request_t_, ptr %8, i32 0, i32 0, !dbg !12230
  %10 = load i32, ptr %9, align 8, !dbg !12230
  %11 = and i32 %10, 64, !dbg !12231
  %12 = icmp ne i32 %11, 0, !dbg !12231
  br i1 %12, label %22, label %13, !dbg !12232

13:                                               ; preds = %2
  %14 = load ptr, ptr %3, align 8, !dbg !12233
  %15 = call zeroext i1 @lwan_response_set_event_stream(ptr noundef %14, i32 noundef 200), !dbg !12233
  %16 = xor i1 %15, true, !dbg !12233
  %17 = zext i1 %16 to i32, !dbg !12233
  %18 = sext i32 %17 to i64, !dbg !12233
  %19 = icmp ne i64 %18, 0, !dbg !12233
  br i1 %19, label %20, label %21, !dbg !12236

20:                                               ; preds = %13
  br label %135, !dbg !12237

21:                                               ; preds = %13
  br label %22, !dbg !12238

22:                                               ; preds = %21, %2
  call void @llvm.dbg.declare(metadata ptr %5, metadata !12239, metadata !DIExpression()), !dbg !12241
  call void @llvm.dbg.declare(metadata ptr %6, metadata !12242, metadata !DIExpression()), !dbg !12243
  store i32 0, ptr %6, align 4, !dbg !12243
  %23 = load ptr, ptr %4, align 8, !dbg !12244
  %24 = icmp ne ptr %23, null, !dbg !12244
  br i1 %24, label %25, label %59, !dbg !12246

25:                                               ; preds = %22
  %26 = load i32, ptr %6, align 4, !dbg !12247
  %27 = sext i32 %26 to i64, !dbg !12249
  %28 = getelementptr inbounds [6 x %struct.lwan_value_t_], ptr %5, i64 0, i64 %27, !dbg !12249
  %29 = getelementptr inbounds %struct.lwan_value_t_, ptr %28, i32 0, i32 0, !dbg !12250
  store ptr @.str.28.136, ptr %29, align 16, !dbg !12251
  %30 = load i32, ptr %6, align 4, !dbg !12252
  %31 = sext i32 %30 to i64, !dbg !12253
  %32 = getelementptr inbounds [6 x %struct.lwan_value_t_], ptr %5, i64 0, i64 %31, !dbg !12253
  %33 = getelementptr inbounds %struct.lwan_value_t_, ptr %32, i32 0, i32 1, !dbg !12254
  store i64 7, ptr %33, align 8, !dbg !12255
  %34 = load i32, ptr %6, align 4, !dbg !12256
  %35 = add nsw i32 %34, 1, !dbg !12256
  store i32 %35, ptr %6, align 4, !dbg !12256
  %36 = load ptr, ptr %4, align 8, !dbg !12257
  %37 = load i32, ptr %6, align 4, !dbg !12258
  %38 = sext i32 %37 to i64, !dbg !12259
  %39 = getelementptr inbounds [6 x %struct.lwan_value_t_], ptr %5, i64 0, i64 %38, !dbg !12259
  %40 = getelementptr inbounds %struct.lwan_value_t_, ptr %39, i32 0, i32 0, !dbg !12260
  store ptr %36, ptr %40, align 16, !dbg !12261
  %41 = load ptr, ptr %4, align 8, !dbg !12262
  %42 = call i64 @strlen(ptr noundef %41) #22, !dbg !12263
  %43 = load i32, ptr %6, align 4, !dbg !12264
  %44 = sext i32 %43 to i64, !dbg !12265
  %45 = getelementptr inbounds [6 x %struct.lwan_value_t_], ptr %5, i64 0, i64 %44, !dbg !12265
  %46 = getelementptr inbounds %struct.lwan_value_t_, ptr %45, i32 0, i32 1, !dbg !12266
  store i64 %42, ptr %46, align 8, !dbg !12267
  %47 = load i32, ptr %6, align 4, !dbg !12268
  %48 = add nsw i32 %47, 1, !dbg !12268
  store i32 %48, ptr %6, align 4, !dbg !12268
  %49 = load i32, ptr %6, align 4, !dbg !12269
  %50 = sext i32 %49 to i64, !dbg !12270
  %51 = getelementptr inbounds [6 x %struct.lwan_value_t_], ptr %5, i64 0, i64 %50, !dbg !12270
  %52 = getelementptr inbounds %struct.lwan_value_t_, ptr %51, i32 0, i32 0, !dbg !12271
  store ptr @.str.26.134, ptr %52, align 16, !dbg !12272
  %53 = load i32, ptr %6, align 4, !dbg !12273
  %54 = sext i32 %53 to i64, !dbg !12274
  %55 = getelementptr inbounds [6 x %struct.lwan_value_t_], ptr %5, i64 0, i64 %54, !dbg !12274
  %56 = getelementptr inbounds %struct.lwan_value_t_, ptr %55, i32 0, i32 1, !dbg !12275
  store i64 2, ptr %56, align 8, !dbg !12276
  %57 = load i32, ptr %6, align 4, !dbg !12277
  %58 = add nsw i32 %57, 1, !dbg !12277
  store i32 %58, ptr %6, align 4, !dbg !12277
  br label %59, !dbg !12278

59:                                               ; preds = %25, %22
  call void @llvm.dbg.declare(metadata ptr %7, metadata !12279, metadata !DIExpression()), !dbg !12280
  %60 = load ptr, ptr %3, align 8, !dbg !12281
  %61 = getelementptr inbounds %struct.lwan_request_t_, ptr %60, i32 0, i32 8, !dbg !12281
  %62 = getelementptr inbounds %struct.lwan_response_t_, ptr %61, i32 0, i32 0, !dbg !12281
  %63 = load ptr, ptr %62, align 8, !dbg !12281
  %64 = getelementptr inbounds %struct.strbuf_t_, ptr %63, i32 0, i32 1, !dbg !12281
  %65 = getelementptr inbounds %struct.timespec, ptr %64, i32 0, i32 1, !dbg !12281
  %66 = load i64, ptr %65, align 8, !dbg !12281
  store i64 %66, ptr %7, align 8, !dbg !12280
  %67 = load i64, ptr %7, align 8, !dbg !12282
  %68 = icmp ne i64 %67, 0, !dbg !12282
  br i1 %68, label %69, label %97, !dbg !12284

69:                                               ; preds = %59
  %70 = load i32, ptr %6, align 4, !dbg !12285
  %71 = sext i32 %70 to i64, !dbg !12287
  %72 = getelementptr inbounds [6 x %struct.lwan_value_t_], ptr %5, i64 0, i64 %71, !dbg !12287
  %73 = getelementptr inbounds %struct.lwan_value_t_, ptr %72, i32 0, i32 0, !dbg !12288
  store ptr @.str.29.137, ptr %73, align 16, !dbg !12289
  %74 = load i32, ptr %6, align 4, !dbg !12290
  %75 = sext i32 %74 to i64, !dbg !12291
  %76 = getelementptr inbounds [6 x %struct.lwan_value_t_], ptr %5, i64 0, i64 %75, !dbg !12291
  %77 = getelementptr inbounds %struct.lwan_value_t_, ptr %76, i32 0, i32 1, !dbg !12292
  store i64 6, ptr %77, align 8, !dbg !12293
  %78 = load i32, ptr %6, align 4, !dbg !12294
  %79 = add nsw i32 %78, 1, !dbg !12294
  store i32 %79, ptr %6, align 4, !dbg !12294
  %80 = load ptr, ptr %3, align 8, !dbg !12295
  %81 = getelementptr inbounds %struct.lwan_request_t_, ptr %80, i32 0, i32 8, !dbg !12295
  %82 = getelementptr inbounds %struct.lwan_response_t_, ptr %81, i32 0, i32 0, !dbg !12295
  %83 = load ptr, ptr %82, align 8, !dbg !12295
  %84 = getelementptr inbounds %struct.strbuf_t_, ptr %83, i32 0, i32 0, !dbg !12295
  %85 = load ptr, ptr %84, align 8, !dbg !12295
  %86 = load i32, ptr %6, align 4, !dbg !12296
  %87 = sext i32 %86 to i64, !dbg !12297
  %88 = getelementptr inbounds [6 x %struct.lwan_value_t_], ptr %5, i64 0, i64 %87, !dbg !12297
  %89 = getelementptr inbounds %struct.lwan_value_t_, ptr %88, i32 0, i32 0, !dbg !12298
  store ptr %85, ptr %89, align 16, !dbg !12299
  %90 = load i64, ptr %7, align 8, !dbg !12300
  %91 = load i32, ptr %6, align 4, !dbg !12301
  %92 = sext i32 %91 to i64, !dbg !12302
  %93 = getelementptr inbounds [6 x %struct.lwan_value_t_], ptr %5, i64 0, i64 %92, !dbg !12302
  %94 = getelementptr inbounds %struct.lwan_value_t_, ptr %93, i32 0, i32 1, !dbg !12303
  store i64 %90, ptr %94, align 8, !dbg !12304
  %95 = load i32, ptr %6, align 4, !dbg !12305
  %96 = add nsw i32 %95, 1, !dbg !12305
  store i32 %96, ptr %6, align 4, !dbg !12305
  br label %97, !dbg !12306

97:                                               ; preds = %69, %59
  %98 = load i32, ptr %6, align 4, !dbg !12307
  %99 = sext i32 %98 to i64, !dbg !12308
  %100 = getelementptr inbounds [6 x %struct.lwan_value_t_], ptr %5, i64 0, i64 %99, !dbg !12308
  %101 = getelementptr inbounds %struct.lwan_value_t_, ptr %100, i32 0, i32 0, !dbg !12309
  store ptr @.str.30.138, ptr %101, align 16, !dbg !12310
  %102 = load i32, ptr %6, align 4, !dbg !12311
  %103 = sext i32 %102 to i64, !dbg !12312
  %104 = getelementptr inbounds [6 x %struct.lwan_value_t_], ptr %5, i64 0, i64 %103, !dbg !12312
  %105 = getelementptr inbounds %struct.lwan_value_t_, ptr %104, i32 0, i32 1, !dbg !12313
  store i64 4, ptr %105, align 8, !dbg !12314
  %106 = load i32, ptr %6, align 4, !dbg !12315
  %107 = add nsw i32 %106, 1, !dbg !12315
  store i32 %107, ptr %6, align 4, !dbg !12315
  %108 = load ptr, ptr %3, align 8, !dbg !12316
  %109 = getelementptr inbounds [6 x %struct.lwan_value_t_], ptr %5, i64 0, i64 0, !dbg !12317
  %110 = load i32, ptr %6, align 4, !dbg !12318
  %111 = call i64 @lwan_writev(ptr noundef %108, ptr noundef %109, i32 noundef %110), !dbg !12319
  %112 = load ptr, ptr %3, align 8, !dbg !12320
  %113 = getelementptr inbounds %struct.lwan_request_t_, ptr %112, i32 0, i32 8, !dbg !12320
  %114 = getelementptr inbounds %struct.lwan_response_t_, ptr %113, i32 0, i32 0, !dbg !12320
  %115 = load ptr, ptr %114, align 8, !dbg !12320
  %116 = call zeroext i1 @strbuf_reset_length(ptr noundef %115), !dbg !12320
  %117 = xor i1 %116, true, !dbg !12320
  %118 = zext i1 %117 to i32, !dbg !12320
  %119 = sext i32 %118 to i64, !dbg !12320
  %120 = icmp ne i64 %119, 0, !dbg !12320
  br i1 %120, label %121, label %128, !dbg !12322

121:                                              ; preds = %97
  %122 = load ptr, ptr %3, align 8, !dbg !12323
  %123 = getelementptr inbounds %struct.lwan_request_t_, ptr %122, i32 0, i32 4, !dbg !12325
  %124 = load ptr, ptr %123, align 8, !dbg !12325
  %125 = getelementptr inbounds %struct.lwan_connection_t_, ptr %124, i32 0, i32 2, !dbg !12326
  %126 = load ptr, ptr %125, align 8, !dbg !12326
  %127 = call i32 @coro_yield(ptr noundef %126, i32 noundef -1), !dbg !12327
  unreachable, !dbg !12328

128:                                              ; preds = %97
  %129 = load ptr, ptr %3, align 8, !dbg !12329
  %130 = getelementptr inbounds %struct.lwan_request_t_, ptr %129, i32 0, i32 4, !dbg !12330
  %131 = load ptr, ptr %130, align 8, !dbg !12330
  %132 = getelementptr inbounds %struct.lwan_connection_t_, ptr %131, i32 0, i32 2, !dbg !12331
  %133 = load ptr, ptr %132, align 8, !dbg !12331
  %134 = call i32 @coro_yield(ptr noundef %133, i32 noundef 0), !dbg !12332
  br label %135, !dbg !12333

135:                                              ; preds = %128, %20
  ret void, !dbg !12333
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @lwan_module_serve_files() #0 !dbg !1881 {
  ret ptr @lwan_module_serve_files.serve_files, !dbg !12334
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @serve_files_init(ptr noundef %0) #0 !dbg !12335 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !12336, metadata !DIExpression()), !dbg !12337
  call void @llvm.dbg.declare(metadata ptr %4, metadata !12338, metadata !DIExpression()), !dbg !12346
  %9 = load ptr, ptr %3, align 8, !dbg !12347
  store ptr %9, ptr %4, align 8, !dbg !12346
  call void @llvm.dbg.declare(metadata ptr %5, metadata !12348, metadata !DIExpression()), !dbg !12349
  call void @llvm.dbg.declare(metadata ptr %6, metadata !12350, metadata !DIExpression()), !dbg !12351
  call void @llvm.dbg.declare(metadata ptr %7, metadata !12352, metadata !DIExpression()), !dbg !12353
  call void @llvm.dbg.declare(metadata ptr %8, metadata !12354, metadata !DIExpression()), !dbg !12355
  %10 = load ptr, ptr %4, align 8, !dbg !12356
  %11 = getelementptr inbounds %struct.lwan_serve_files_settings_t, ptr %10, i32 0, i32 0, !dbg !12358
  %12 = load ptr, ptr %11, align 8, !dbg !12358
  %13 = icmp ne ptr %12, null, !dbg !12356
  br i1 %13, label %15, label %14, !dbg !12359

14:                                               ; preds = %1
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_error_debug(ptr noundef @.str.1.142, i32 noundef 646, ptr noundef @__FUNCTION__.serve_files_init, ptr noundef @.str.2.147), !dbg !12360
  store ptr null, ptr %2, align 8, !dbg !12362
  br label %108, !dbg !12362

15:                                               ; preds = %1
  %16 = load ptr, ptr %4, align 8, !dbg !12363
  %17 = getelementptr inbounds %struct.lwan_serve_files_settings_t, ptr %16, i32 0, i32 0, !dbg !12364
  %18 = load ptr, ptr %17, align 8, !dbg !12364
  %19 = call ptr @realpath(ptr noundef %18, ptr noundef null) #18, !dbg !12365
  store ptr %19, ptr %5, align 8, !dbg !12366
  %20 = load ptr, ptr %5, align 8, !dbg !12367
  %21 = icmp ne ptr %20, null, !dbg !12367
  br i1 %21, label %26, label %22, !dbg !12369

22:                                               ; preds = %15
  %23 = load ptr, ptr %4, align 8, !dbg !12370
  %24 = getelementptr inbounds %struct.lwan_serve_files_settings_t, ptr %23, i32 0, i32 0, !dbg !12370
  %25 = load ptr, ptr %24, align 8, !dbg !12370
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.1.142, i32 noundef 653, ptr noundef @__FUNCTION__.serve_files_init, ptr noundef @.str.3.148, ptr noundef %25), !dbg !12370
  br label %107, !dbg !12372

26:                                               ; preds = %15
  %27 = load ptr, ptr %5, align 8, !dbg !12373
  %28 = call i32 @try_open_directory(ptr noundef %27, ptr noundef %8), !dbg !12374
  store i32 %28, ptr %6, align 4, !dbg !12375
  %29 = load i32, ptr %6, align 4, !dbg !12376
  %30 = icmp slt i32 %29, 0, !dbg !12378
  br i1 %30, label %31, label %33, !dbg !12379

31:                                               ; preds = %26
  %32 = load ptr, ptr %5, align 8, !dbg !12380
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.1.142, i32 noundef 660, ptr noundef @__FUNCTION__.serve_files_init, ptr noundef @.str.4.149, ptr noundef %32), !dbg !12380
  br label %105, !dbg !12382

33:                                               ; preds = %26
  %34 = call noalias ptr @malloc(i64 noundef 64) #17, !dbg !12383
  store ptr %34, ptr %7, align 8, !dbg !12384
  %35 = load ptr, ptr %7, align 8, !dbg !12385
  %36 = icmp ne ptr %35, null, !dbg !12385
  br i1 %36, label %38, label %37, !dbg !12387

37:                                               ; preds = %33
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.1.142, i32 noundef 666, ptr noundef @__FUNCTION__.serve_files_init, ptr noundef @.str.5.150), !dbg !12388
  br label %102, !dbg !12390

38:                                               ; preds = %33
  %39 = load ptr, ptr %7, align 8, !dbg !12391
  %40 = call ptr @cache_create(ptr noundef @create_cache_entry, ptr noundef @destroy_cache_entry, ptr noundef %39, i64 noundef 5), !dbg !12392
  %41 = load ptr, ptr %7, align 8, !dbg !12393
  %42 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %41, i32 0, i32 0, !dbg !12394
  store ptr %40, ptr %42, align 8, !dbg !12395
  %43 = load ptr, ptr %7, align 8, !dbg !12396
  %44 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %43, i32 0, i32 0, !dbg !12398
  %45 = load ptr, ptr %44, align 8, !dbg !12398
  %46 = icmp ne ptr %45, null, !dbg !12396
  br i1 %46, label %48, label %47, !dbg !12399

47:                                               ; preds = %38
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_error_debug(ptr noundef @.str.1.142, i32 noundef 673, ptr noundef @__FUNCTION__.serve_files_init, ptr noundef @.str.6.151), !dbg !12400
  br label %100, !dbg !12402

48:                                               ; preds = %38
  %49 = load ptr, ptr @directory_list_tpl_str, align 8, !dbg !12403
  %50 = call ptr @lwan_tpl_compile_string(ptr noundef %49, ptr noundef @file_list_desc), !dbg !12404
  %51 = load ptr, ptr %7, align 8, !dbg !12405
  %52 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %51, i32 0, i32 4, !dbg !12406
  store ptr %50, ptr %52, align 8, !dbg !12407
  %53 = load ptr, ptr %7, align 8, !dbg !12408
  %54 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %53, i32 0, i32 4, !dbg !12410
  %55 = load ptr, ptr %54, align 8, !dbg !12410
  %56 = icmp ne ptr %55, null, !dbg !12408
  br i1 %56, label %58, label %57, !dbg !12411

57:                                               ; preds = %48
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_error_debug(ptr noundef @.str.1.142, i32 noundef 680, ptr noundef @__FUNCTION__.serve_files_init, ptr noundef @.str.7.152), !dbg !12412
  br label %96, !dbg !12414

58:                                               ; preds = %48
  %59 = load ptr, ptr %5, align 8, !dbg !12415
  %60 = load ptr, ptr %7, align 8, !dbg !12416
  %61 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %60, i32 0, i32 1, !dbg !12417
  %62 = getelementptr inbounds %struct.anon.6, ptr %61, i32 0, i32 0, !dbg !12418
  store ptr %59, ptr %62, align 8, !dbg !12419
  %63 = load ptr, ptr %5, align 8, !dbg !12420
  %64 = call i64 @strlen(ptr noundef %63) #22, !dbg !12421
  %65 = load ptr, ptr %7, align 8, !dbg !12422
  %66 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %65, i32 0, i32 1, !dbg !12423
  %67 = getelementptr inbounds %struct.anon.6, ptr %66, i32 0, i32 1, !dbg !12424
  store i64 %64, ptr %67, align 8, !dbg !12425
  %68 = load i32, ptr %6, align 4, !dbg !12426
  %69 = load ptr, ptr %7, align 8, !dbg !12427
  %70 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %69, i32 0, i32 1, !dbg !12428
  %71 = getelementptr inbounds %struct.anon.6, ptr %70, i32 0, i32 2, !dbg !12429
  store i32 %68, ptr %71, align 8, !dbg !12430
  %72 = load i32, ptr %8, align 4, !dbg !12431
  %73 = load ptr, ptr %7, align 8, !dbg !12432
  %74 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %73, i32 0, i32 2, !dbg !12433
  store i32 %72, ptr %74, align 8, !dbg !12434
  %75 = load ptr, ptr %4, align 8, !dbg !12435
  %76 = getelementptr inbounds %struct.lwan_serve_files_settings_t, ptr %75, i32 0, i32 1, !dbg !12436
  %77 = load ptr, ptr %76, align 8, !dbg !12436
  %78 = icmp ne ptr %77, null, !dbg !12435
  br i1 %78, label %79, label %83, !dbg !12435

79:                                               ; preds = %58
  %80 = load ptr, ptr %4, align 8, !dbg !12437
  %81 = getelementptr inbounds %struct.lwan_serve_files_settings_t, ptr %80, i32 0, i32 1, !dbg !12438
  %82 = load ptr, ptr %81, align 8, !dbg !12438
  br label %84, !dbg !12435

83:                                               ; preds = %58
  br label %84, !dbg !12435

84:                                               ; preds = %83, %79
  %85 = phi ptr [ %82, %79 ], [ @.str.8.153, %83 ], !dbg !12435
  %86 = load ptr, ptr %7, align 8, !dbg !12439
  %87 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %86, i32 0, i32 3, !dbg !12440
  store ptr %85, ptr %87, align 8, !dbg !12441
  %88 = load ptr, ptr %4, align 8, !dbg !12442
  %89 = getelementptr inbounds %struct.lwan_serve_files_settings_t, ptr %88, i32 0, i32 2, !dbg !12443
  %90 = load i8, ptr %89, align 8, !dbg !12443
  %91 = trunc i8 %90 to i1, !dbg !12443
  %92 = load ptr, ptr %7, align 8, !dbg !12444
  %93 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %92, i32 0, i32 5, !dbg !12445
  %94 = zext i1 %91 to i8, !dbg !12446
  store i8 %94, ptr %93, align 8, !dbg !12446
  %95 = load ptr, ptr %7, align 8, !dbg !12447
  store ptr %95, ptr %2, align 8, !dbg !12448
  br label %108, !dbg !12448

96:                                               ; preds = %57
  call void @llvm.dbg.label(metadata !12449), !dbg !12450
  %97 = load ptr, ptr %7, align 8, !dbg !12451
  %98 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %97, i32 0, i32 0, !dbg !12452
  %99 = load ptr, ptr %98, align 8, !dbg !12452
  call void @cache_destroy(ptr noundef %99), !dbg !12453
  br label %100, !dbg !12453

100:                                              ; preds = %96, %47
  call void @llvm.dbg.label(metadata !12454), !dbg !12455
  %101 = load ptr, ptr %7, align 8, !dbg !12456
  call void @free(ptr noundef %101) #18, !dbg !12457
  br label %102, !dbg !12457

102:                                              ; preds = %100, %37
  call void @llvm.dbg.label(metadata !12458), !dbg !12459
  %103 = load i32, ptr %6, align 4, !dbg !12460
  %104 = call i32 @close(i32 noundef %103), !dbg !12461
  br label %105, !dbg !12461

105:                                              ; preds = %102, %31
  call void @llvm.dbg.label(metadata !12462), !dbg !12463
  %106 = load ptr, ptr %5, align 8, !dbg !12464
  call void @free(ptr noundef %106) #18, !dbg !12465
  br label %107, !dbg !12465

107:                                              ; preds = %105, %22
  call void @llvm.dbg.label(metadata !12466), !dbg !12467
  store ptr null, ptr %2, align 8, !dbg !12468
  br label %108, !dbg !12468

108:                                              ; preds = %107, %84, %14
  %109 = load ptr, ptr %2, align 8, !dbg !12469
  ret ptr %109, !dbg !12469
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @serve_files_init_from_hash(ptr noundef %0) #0 !dbg !12470 {
  %2 = alloca ptr, align 8
  %3 = alloca %struct.lwan_serve_files_settings_t, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !12471, metadata !DIExpression()), !dbg !12472
  call void @llvm.dbg.declare(metadata ptr %3, metadata !12473, metadata !DIExpression()), !dbg !12474
  %4 = getelementptr inbounds %struct.lwan_serve_files_settings_t, ptr %3, i32 0, i32 0, !dbg !12475
  %5 = load ptr, ptr %2, align 8, !dbg !12476
  %6 = call ptr @hash_find(ptr noundef %5, ptr noundef @.str.39.144), !dbg !12477
  store ptr %6, ptr %4, align 8, !dbg !12475
  %7 = getelementptr inbounds %struct.lwan_serve_files_settings_t, ptr %3, i32 0, i32 1, !dbg !12475
  %8 = load ptr, ptr %2, align 8, !dbg !12478
  %9 = call ptr @hash_find(ptr noundef %8, ptr noundef @.str.40.145), !dbg !12479
  store ptr %9, ptr %7, align 8, !dbg !12475
  %10 = getelementptr inbounds %struct.lwan_serve_files_settings_t, ptr %3, i32 0, i32 2, !dbg !12475
  %11 = load ptr, ptr %2, align 8, !dbg !12480
  %12 = call ptr @hash_find(ptr noundef %11, ptr noundef @.str.41.146), !dbg !12481
  %13 = call zeroext i1 @parse_bool(ptr noundef %12, i1 noundef zeroext true), !dbg !12482
  %14 = zext i1 %13 to i8, !dbg !12475
  store i8 %14, ptr %10, align 8, !dbg !12475
  %15 = call ptr @serve_files_init(ptr noundef %3), !dbg !12483
  ret ptr %15, !dbg !12484
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @serve_files_shutdown(ptr noundef %0) #0 !dbg !12485 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !12486, metadata !DIExpression()), !dbg !12487
  call void @llvm.dbg.declare(metadata ptr %3, metadata !12488, metadata !DIExpression()), !dbg !12489
  %4 = load ptr, ptr %2, align 8, !dbg !12490
  store ptr %4, ptr %3, align 8, !dbg !12489
  %5 = load ptr, ptr %3, align 8, !dbg !12491
  %6 = icmp ne ptr %5, null, !dbg !12491
  br i1 %6, label %8, label %7, !dbg !12493

7:                                                ; preds = %1
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_warning_debug(ptr noundef @.str.1.142, i32 noundef 723, ptr noundef @__FUNCTION__.serve_files_shutdown, ptr noundef @.str.42.143), !dbg !12494
  br label %25, !dbg !12496

8:                                                ; preds = %1
  %9 = load ptr, ptr %3, align 8, !dbg !12497
  %10 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %9, i32 0, i32 4, !dbg !12498
  %11 = load ptr, ptr %10, align 8, !dbg !12498
  call void @lwan_tpl_free(ptr noundef %11), !dbg !12499
  %12 = load ptr, ptr %3, align 8, !dbg !12500
  %13 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %12, i32 0, i32 0, !dbg !12501
  %14 = load ptr, ptr %13, align 8, !dbg !12501
  call void @cache_destroy(ptr noundef %14), !dbg !12502
  %15 = load ptr, ptr %3, align 8, !dbg !12503
  %16 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %15, i32 0, i32 1, !dbg !12504
  %17 = getelementptr inbounds %struct.anon.6, ptr %16, i32 0, i32 2, !dbg !12505
  %18 = load i32, ptr %17, align 8, !dbg !12505
  %19 = call i32 @close(i32 noundef %18), !dbg !12506
  %20 = load ptr, ptr %3, align 8, !dbg !12507
  %21 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %20, i32 0, i32 1, !dbg !12508
  %22 = getelementptr inbounds %struct.anon.6, ptr %21, i32 0, i32 0, !dbg !12509
  %23 = load ptr, ptr %22, align 8, !dbg !12509
  call void @free(ptr noundef %23) #18, !dbg !12510
  %24 = load ptr, ptr %3, align 8, !dbg !12511
  call void @free(ptr noundef %24) #18, !dbg !12512
  br label %25, !dbg !12513

25:                                               ; preds = %8, %7
  ret void, !dbg !12513
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @serve_files_handle_cb(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !12514 {
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !12515, metadata !DIExpression()), !dbg !12516
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !12517, metadata !DIExpression()), !dbg !12518
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !12519, metadata !DIExpression()), !dbg !12520
  call void @llvm.dbg.declare(metadata ptr %8, metadata !12521, metadata !DIExpression()), !dbg !12522
  store i32 404, ptr %8, align 4, !dbg !12522
  call void @llvm.dbg.declare(metadata ptr %9, metadata !12523, metadata !DIExpression()), !dbg !12524
  %12 = load ptr, ptr %7, align 8, !dbg !12525
  store ptr %12, ptr %9, align 8, !dbg !12524
  call void @llvm.dbg.declare(metadata ptr %10, metadata !12526, metadata !DIExpression()), !dbg !12527
  %13 = load ptr, ptr %9, align 8, !dbg !12528
  %14 = icmp ne ptr %13, null, !dbg !12528
  %15 = xor i1 %14, true, !dbg !12528
  %16 = zext i1 %15 to i32, !dbg !12528
  %17 = sext i32 %16 to i64, !dbg !12528
  %18 = icmp ne i64 %17, 0, !dbg !12528
  br i1 %18, label %19, label %20, !dbg !12530

19:                                               ; preds = %3
  store i32 500, ptr %8, align 4, !dbg !12531
  br label %65, !dbg !12533

20:                                               ; preds = %3
  %21 = load ptr, ptr %9, align 8, !dbg !12534
  %22 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %21, i32 0, i32 0, !dbg !12535
  %23 = load ptr, ptr %22, align 8, !dbg !12535
  %24 = load ptr, ptr %5, align 8, !dbg !12536
  %25 = getelementptr inbounds %struct.lwan_request_t_, ptr %24, i32 0, i32 4, !dbg !12537
  %26 = load ptr, ptr %25, align 8, !dbg !12537
  %27 = getelementptr inbounds %struct.lwan_connection_t_, ptr %26, i32 0, i32 2, !dbg !12538
  %28 = load ptr, ptr %27, align 8, !dbg !12538
  %29 = load ptr, ptr %5, align 8, !dbg !12539
  %30 = getelementptr inbounds %struct.lwan_request_t_, ptr %29, i32 0, i32 2, !dbg !12540
  %31 = getelementptr inbounds %struct.lwan_value_t_, ptr %30, i32 0, i32 0, !dbg !12541
  %32 = load ptr, ptr %31, align 8, !dbg !12541
  %33 = call ptr @cache_coro_get_and_ref_entry(ptr noundef %23, ptr noundef %28, ptr noundef %32), !dbg !12542
  store ptr %33, ptr %10, align 8, !dbg !12543
  %34 = load ptr, ptr %10, align 8, !dbg !12544
  %35 = icmp ne ptr %34, null, !dbg !12544
  %36 = xor i1 %35, true, !dbg !12544
  %37 = xor i1 %36, true, !dbg !12544
  %38 = zext i1 %37 to i32, !dbg !12544
  %39 = sext i32 %38 to i64, !dbg !12544
  %40 = icmp ne i64 %39, 0, !dbg !12544
  br i1 %40, label %41, label %64, !dbg !12546

41:                                               ; preds = %20
  call void @llvm.dbg.declare(metadata ptr %11, metadata !12547, metadata !DIExpression()), !dbg !12549
  %42 = load ptr, ptr %10, align 8, !dbg !12550
  store ptr %42, ptr %11, align 8, !dbg !12549
  %43 = load ptr, ptr %11, align 8, !dbg !12551
  %44 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %43, i32 0, i32 2, !dbg !12552
  %45 = load ptr, ptr %44, align 8, !dbg !12552
  %46 = load ptr, ptr %6, align 8, !dbg !12553
  %47 = getelementptr inbounds %struct.lwan_response_t_, ptr %46, i32 0, i32 1, !dbg !12554
  store ptr %45, ptr %47, align 8, !dbg !12555
  %48 = load ptr, ptr %11, align 8, !dbg !12556
  %49 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %48, i32 0, i32 3, !dbg !12557
  %50 = load ptr, ptr %49, align 8, !dbg !12557
  %51 = getelementptr inbounds %struct.cache_funcs_t_, ptr %50, i32 0, i32 0, !dbg !12558
  %52 = load ptr, ptr %51, align 8, !dbg !12558
  %53 = load ptr, ptr %6, align 8, !dbg !12559
  %54 = getelementptr inbounds %struct.lwan_response_t_, ptr %53, i32 0, i32 4, !dbg !12560
  %55 = getelementptr inbounds %struct.anon.1, ptr %54, i32 0, i32 0, !dbg !12561
  store ptr %52, ptr %55, align 8, !dbg !12562
  %56 = load ptr, ptr %10, align 8, !dbg !12563
  %57 = load ptr, ptr %6, align 8, !dbg !12564
  %58 = getelementptr inbounds %struct.lwan_response_t_, ptr %57, i32 0, i32 4, !dbg !12565
  %59 = getelementptr inbounds %struct.anon.1, ptr %58, i32 0, i32 1, !dbg !12566
  store ptr %56, ptr %59, align 8, !dbg !12567
  %60 = load ptr, ptr %9, align 8, !dbg !12568
  %61 = load ptr, ptr %6, align 8, !dbg !12569
  %62 = getelementptr inbounds %struct.lwan_response_t_, ptr %61, i32 0, i32 4, !dbg !12570
  %63 = getelementptr inbounds %struct.anon.1, ptr %62, i32 0, i32 2, !dbg !12571
  store ptr %60, ptr %63, align 8, !dbg !12572
  store i32 200, ptr %4, align 4, !dbg !12573
  br label %70, !dbg !12573

64:                                               ; preds = %20
  br label %65, !dbg !12544

65:                                               ; preds = %64, %19
  call void @llvm.dbg.label(metadata !12574), !dbg !12575
  %66 = load ptr, ptr %6, align 8, !dbg !12576
  %67 = getelementptr inbounds %struct.lwan_response_t_, ptr %66, i32 0, i32 4, !dbg !12577
  %68 = getelementptr inbounds %struct.anon.1, ptr %67, i32 0, i32 0, !dbg !12578
  store ptr null, ptr %68, align 8, !dbg !12579
  %69 = load i32, ptr %8, align 4, !dbg !12580
  store i32 %69, ptr %4, align 4, !dbg !12581
  br label %70, !dbg !12581

70:                                               ; preds = %65, %41
  %71 = load i32, ptr %4, align 4, !dbg !12582
  ret i32 %71, !dbg !12582
}

; Function Attrs: nounwind
declare ptr @realpath(ptr noundef, ptr noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_open_directory(ptr noundef %0, ptr noundef %1) #0 !dbg !12583 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !12586, metadata !DIExpression()), !dbg !12587
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !12588, metadata !DIExpression()), !dbg !12589
  call void @llvm.dbg.declare(metadata ptr %6, metadata !12590, metadata !DIExpression()), !dbg !12591
  %7 = load ptr, ptr %5, align 8, !dbg !12592
  store i32 788480, ptr %7, align 4, !dbg !12593
  %8 = load ptr, ptr %4, align 8, !dbg !12594
  %9 = load ptr, ptr %5, align 8, !dbg !12595
  %10 = load i32, ptr %9, align 4, !dbg !12596
  %11 = or i32 %10, 65536, !dbg !12597
  %12 = call i32 (ptr, i32, ...) @open(ptr noundef %8, i32 noundef %11), !dbg !12598
  store i32 %12, ptr %6, align 4, !dbg !12599
  %13 = load i32, ptr %6, align 4, !dbg !12600
  %14 = icmp slt i32 %13, 0, !dbg !12602
  br i1 %14, label %15, label %36, !dbg !12603

15:                                               ; preds = %2
  %16 = load ptr, ptr %5, align 8, !dbg !12604
  %17 = load i32, ptr %16, align 4, !dbg !12606
  %18 = and i32 %17, -262145, !dbg !12606
  store i32 %18, ptr %16, align 4, !dbg !12606
  %19 = load ptr, ptr %4, align 8, !dbg !12607
  %20 = load ptr, ptr %5, align 8, !dbg !12608
  %21 = load i32, ptr %20, align 4, !dbg !12609
  %22 = or i32 %21, 65536, !dbg !12610
  %23 = call i32 (ptr, i32, ...) @open(ptr noundef %19, i32 noundef %22), !dbg !12611
  store i32 %23, ptr %6, align 4, !dbg !12612
  %24 = load i32, ptr %6, align 4, !dbg !12613
  %25 = icmp slt i32 %24, 0, !dbg !12615
  br i1 %25, label %26, label %35, !dbg !12616

26:                                               ; preds = %15
  %27 = load ptr, ptr %5, align 8, !dbg !12617
  %28 = load i32, ptr %27, align 4, !dbg !12619
  %29 = and i32 %28, -2049, !dbg !12619
  store i32 %29, ptr %27, align 4, !dbg !12619
  %30 = load ptr, ptr %4, align 8, !dbg !12620
  %31 = load ptr, ptr %5, align 8, !dbg !12621
  %32 = load i32, ptr %31, align 4, !dbg !12622
  %33 = or i32 %32, 65536, !dbg !12623
  %34 = call i32 (ptr, i32, ...) @open(ptr noundef %30, i32 noundef %33), !dbg !12624
  store i32 %34, ptr %6, align 4, !dbg !12625
  br label %35, !dbg !12626

35:                                               ; preds = %26, %15
  br label %36, !dbg !12627

36:                                               ; preds = %35, %2
  %37 = load i32, ptr %6, align 4, !dbg !12628
  %38 = icmp slt i32 %37, 0, !dbg !12630
  br i1 %38, label %39, label %40, !dbg !12631

39:                                               ; preds = %36
  store i32 -1, ptr %3, align 4, !dbg !12632
  br label %49, !dbg !12632

40:                                               ; preds = %36
  %41 = load i32, ptr %6, align 4, !dbg !12633
  %42 = call i32 @close(i32 noundef %41), !dbg !12634
  %43 = load ptr, ptr %4, align 8, !dbg !12635
  %44 = load ptr, ptr %5, align 8, !dbg !12636
  %45 = load i32, ptr %44, align 4, !dbg !12637
  %46 = or i32 %45, 65536, !dbg !12638
  %47 = or i32 %46, 2097152, !dbg !12639
  %48 = call i32 (ptr, i32, ...) @open(ptr noundef %43, i32 noundef %47), !dbg !12640
  store i32 %48, ptr %3, align 4, !dbg !12641
  br label %49, !dbg !12641

49:                                               ; preds = %40, %39
  %50 = load i32, ptr %3, align 4, !dbg !12642
  ret i32 %50, !dbg !12642
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @create_cache_entry(ptr noundef %0, ptr noundef %1) #0 !dbg !12643 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca %struct.stat, align 8
  %9 = alloca ptr, align 8
  %10 = alloca [4096 x i8], align 16
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !12646, metadata !DIExpression()), !dbg !12647
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !12648, metadata !DIExpression()), !dbg !12649
  call void @llvm.dbg.declare(metadata ptr %6, metadata !12650, metadata !DIExpression()), !dbg !12651
  %11 = load ptr, ptr %5, align 8, !dbg !12652
  store ptr %11, ptr %6, align 8, !dbg !12651
  call void @llvm.dbg.declare(metadata ptr %7, metadata !12653, metadata !DIExpression()), !dbg !12654
  call void @llvm.dbg.declare(metadata ptr %8, metadata !12655, metadata !DIExpression()), !dbg !12656
  call void @llvm.dbg.declare(metadata ptr %9, metadata !12657, metadata !DIExpression()), !dbg !12658
  call void @llvm.dbg.declare(metadata ptr %10, metadata !12659, metadata !DIExpression()), !dbg !12660
  %12 = load ptr, ptr %6, align 8, !dbg !12661
  %13 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %12, i32 0, i32 1, !dbg !12661
  %14 = getelementptr inbounds %struct.anon.6, ptr %13, i32 0, i32 2, !dbg !12661
  %15 = load i32, ptr %14, align 8, !dbg !12661
  %16 = load ptr, ptr %6, align 8, !dbg !12661
  %17 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %16, i32 0, i32 1, !dbg !12661
  %18 = getelementptr inbounds %struct.anon.6, ptr %17, i32 0, i32 0, !dbg !12661
  %19 = load ptr, ptr %18, align 8, !dbg !12661
  %20 = load ptr, ptr %4, align 8, !dbg !12661
  %21 = getelementptr inbounds [4096 x i8], ptr %10, i64 0, i64 0, !dbg !12661
  %22 = call ptr @realpathat2(i32 noundef %15, ptr noundef %19, ptr noundef %20, ptr noundef %21, ptr noundef %8), !dbg !12661
  %23 = icmp ne ptr %22, null, !dbg !12661
  %24 = xor i1 %23, true, !dbg !12661
  %25 = zext i1 %24 to i32, !dbg !12661
  %26 = sext i32 %25 to i64, !dbg !12661
  %27 = icmp ne i64 %26, 0, !dbg !12661
  br i1 %27, label %28, label %29, !dbg !12663

28:                                               ; preds = %2
  store ptr null, ptr %3, align 8, !dbg !12664
  br label %82, !dbg !12664

29:                                               ; preds = %2
  %30 = getelementptr inbounds [4096 x i8], ptr %10, i64 0, i64 0, !dbg !12665
  %31 = load ptr, ptr %6, align 8, !dbg !12665
  %32 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %31, i32 0, i32 1, !dbg !12665
  %33 = getelementptr inbounds %struct.anon.6, ptr %32, i32 0, i32 0, !dbg !12665
  %34 = load ptr, ptr %33, align 8, !dbg !12665
  %35 = load ptr, ptr %6, align 8, !dbg !12665
  %36 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %35, i32 0, i32 1, !dbg !12665
  %37 = getelementptr inbounds %struct.anon.6, ptr %36, i32 0, i32 1, !dbg !12665
  %38 = load i64, ptr %37, align 8, !dbg !12665
  %39 = call i32 @strncmp(ptr noundef %30, ptr noundef %34, i64 noundef %38) #22, !dbg !12665
  %40 = sext i32 %39 to i64, !dbg !12665
  %41 = icmp ne i64 %40, 0, !dbg !12665
  br i1 %41, label %42, label %43, !dbg !12667

42:                                               ; preds = %29
  store ptr null, ptr %3, align 8, !dbg !12668
  br label %82, !dbg !12668

43:                                               ; preds = %29
  %44 = load ptr, ptr %6, align 8, !dbg !12669
  %45 = load ptr, ptr %4, align 8, !dbg !12670
  %46 = getelementptr inbounds [4096 x i8], ptr %10, i64 0, i64 0, !dbg !12671
  %47 = call ptr @get_funcs(ptr noundef %44, ptr noundef %45, ptr noundef %46, ptr noundef %8), !dbg !12672
  store ptr %47, ptr %9, align 8, !dbg !12673
  %48 = load ptr, ptr %9, align 8, !dbg !12674
  %49 = icmp ne ptr %48, null, !dbg !12674
  %50 = xor i1 %49, true, !dbg !12674
  %51 = zext i1 %50 to i32, !dbg !12674
  %52 = sext i32 %51 to i64, !dbg !12674
  %53 = icmp ne i64 %52, 0, !dbg !12674
  br i1 %53, label %54, label %55, !dbg !12676

54:                                               ; preds = %43
  store ptr null, ptr %3, align 8, !dbg !12677
  br label %82, !dbg !12677

55:                                               ; preds = %43
  %56 = load ptr, ptr %6, align 8, !dbg !12678
  %57 = getelementptr inbounds [4096 x i8], ptr %10, i64 0, i64 0, !dbg !12679
  %58 = load ptr, ptr %9, align 8, !dbg !12680
  %59 = call ptr @create_cache_entry_from_funcs(ptr noundef %56, ptr noundef %57, ptr noundef %8, ptr noundef %58), !dbg !12681
  store ptr %59, ptr %7, align 8, !dbg !12682
  %60 = load ptr, ptr %7, align 8, !dbg !12683
  %61 = icmp ne ptr %60, null, !dbg !12683
  %62 = xor i1 %61, true, !dbg !12683
  %63 = zext i1 %62 to i32, !dbg !12683
  %64 = sext i32 %63 to i64, !dbg !12683
  %65 = icmp ne i64 %64, 0, !dbg !12683
  br i1 %65, label %66, label %67, !dbg !12685

66:                                               ; preds = %55
  store ptr null, ptr %3, align 8, !dbg !12686
  br label %82, !dbg !12686

67:                                               ; preds = %55
  %68 = getelementptr inbounds %struct.stat, ptr %8, i32 0, i32 12, !dbg !12687
  %69 = getelementptr inbounds %struct.timespec, ptr %68, i32 0, i32 0, !dbg !12687
  %70 = load i64, ptr %69, align 8, !dbg !12687
  %71 = load ptr, ptr %7, align 8, !dbg !12688
  %72 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %71, i32 0, i32 1, !dbg !12689
  %73 = getelementptr inbounds %struct.anon.7, ptr %72, i32 0, i32 0, !dbg !12690
  %74 = getelementptr inbounds [31 x i8], ptr %73, i64 0, i64 0, !dbg !12688
  call void @lwan_format_rfc_time(i64 noundef %70, ptr noundef %74), !dbg !12691
  %75 = getelementptr inbounds %struct.stat, ptr %8, i32 0, i32 12, !dbg !12692
  %76 = getelementptr inbounds %struct.timespec, ptr %75, i32 0, i32 0, !dbg !12692
  %77 = load i64, ptr %76, align 8, !dbg !12692
  %78 = load ptr, ptr %7, align 8, !dbg !12693
  %79 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %78, i32 0, i32 1, !dbg !12694
  %80 = getelementptr inbounds %struct.anon.7, ptr %79, i32 0, i32 1, !dbg !12695
  store i64 %77, ptr %80, align 8, !dbg !12696
  %81 = load ptr, ptr %7, align 8, !dbg !12697
  store ptr %81, ptr %3, align 8, !dbg !12698
  br label %82, !dbg !12698

82:                                               ; preds = %67, %66, %54, %42, %28
  %83 = load ptr, ptr %3, align 8, !dbg !12699
  ret ptr %83, !dbg !12699
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @destroy_cache_entry(ptr noundef %0, ptr noundef %1) #0 !dbg !12700 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !12703, metadata !DIExpression()), !dbg !12704
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !12705, metadata !DIExpression()), !dbg !12706
  call void @llvm.dbg.declare(metadata ptr %5, metadata !12707, metadata !DIExpression()), !dbg !12708
  %6 = load ptr, ptr %3, align 8, !dbg !12709
  store ptr %6, ptr %5, align 8, !dbg !12708
  %7 = load ptr, ptr %5, align 8, !dbg !12710
  %8 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %7, i32 0, i32 3, !dbg !12711
  %9 = load ptr, ptr %8, align 8, !dbg !12711
  %10 = getelementptr inbounds %struct.cache_funcs_t_, ptr %9, i32 0, i32 2, !dbg !12712
  %11 = load ptr, ptr %10, align 8, !dbg !12712
  %12 = load ptr, ptr %5, align 8, !dbg !12713
  %13 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %12, i64 1, !dbg !12714
  call void %11(ptr noundef %13), !dbg !12710
  %14 = load ptr, ptr %5, align 8, !dbg !12715
  call void @free(ptr noundef %14) #18, !dbg !12716
  ret void, !dbg !12717
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @directory_list_generator(ptr noundef %0) #0 !dbg !12718 {
  %2 = alloca i32, align 4
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca %struct.dirent, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.stat, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !12719, metadata !DIExpression()), !dbg !12720
  call void @llvm.dbg.declare(metadata ptr %4, metadata !12721, metadata !DIExpression()), !dbg !12726
  call void @llvm.dbg.declare(metadata ptr %5, metadata !12727, metadata !DIExpression()), !dbg !12737
  call void @llvm.dbg.declare(metadata ptr %6, metadata !12738, metadata !DIExpression()), !dbg !12740
  call void @llvm.dbg.declare(metadata ptr %7, metadata !12741, metadata !DIExpression()), !dbg !12757
  %10 = load ptr, ptr %3, align 8, !dbg !12758
  %11 = call ptr @coro_get_data(ptr noundef %10), !dbg !12759
  store ptr %11, ptr %7, align 8, !dbg !12757
  call void @llvm.dbg.declare(metadata ptr %8, metadata !12760, metadata !DIExpression()), !dbg !12761
  %12 = load ptr, ptr %7, align 8, !dbg !12762
  %13 = getelementptr inbounds %struct.file_list_t, ptr %12, i32 0, i32 0, !dbg !12763
  %14 = load ptr, ptr %13, align 8, !dbg !12763
  %15 = call ptr @opendir(ptr noundef %14), !dbg !12764
  store ptr %15, ptr %4, align 8, !dbg !12765
  %16 = load ptr, ptr %4, align 8, !dbg !12766
  %17 = icmp ne ptr %16, null, !dbg !12766
  br i1 %17, label %19, label %18, !dbg !12768

18:                                               ; preds = %1
  store i32 0, ptr %2, align 4, !dbg !12769
  br label %156, !dbg !12769

19:                                               ; preds = %1
  %20 = load ptr, ptr %4, align 8, !dbg !12770
  %21 = call i32 @dirfd(ptr noundef %20) #18, !dbg !12771
  store i32 %21, ptr %8, align 4, !dbg !12772
  %22 = load i32, ptr %8, align 4, !dbg !12773
  %23 = icmp slt i32 %22, 0, !dbg !12775
  br i1 %23, label %24, label %25, !dbg !12776

24:                                               ; preds = %19
  br label %153, !dbg !12777

25:                                               ; preds = %19
  br label %26, !dbg !12778

26:                                               ; preds = %151, %82, %48, %41, %25
  %27 = load ptr, ptr %4, align 8, !dbg !12779
  %28 = call i32 @readdir_r(ptr noundef %27, ptr noundef %5, ptr noundef %6), !dbg !12780
  %29 = icmp ne i32 %28, 0, !dbg !12781
  %30 = xor i1 %29, true, !dbg !12781
  br i1 %30, label %31, label %152, !dbg !12778

31:                                               ; preds = %26
  call void @llvm.dbg.declare(metadata ptr %9, metadata !12782, metadata !DIExpression()), !dbg !12784
  %32 = load ptr, ptr %6, align 8, !dbg !12785
  %33 = icmp ne ptr %32, null, !dbg !12785
  br i1 %33, label %35, label %34, !dbg !12787

34:                                               ; preds = %31
  br label %152, !dbg !12788

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.dirent, ptr %5, i32 0, i32 4, !dbg !12789
  %37 = getelementptr inbounds [256 x i8], ptr %36, i64 0, i64 0, !dbg !12791
  %38 = load i8, ptr %37, align 1, !dbg !12791
  %39 = sext i8 %38 to i32, !dbg !12791
  %40 = icmp eq i32 %39, 46, !dbg !12792
  br i1 %40, label %41, label %42, !dbg !12793

41:                                               ; preds = %35
  br label %26, !dbg !12794, !llvm.loop !12795

42:                                               ; preds = %35
  %43 = load i32, ptr %8, align 4, !dbg !12797
  %44 = getelementptr inbounds %struct.dirent, ptr %5, i32 0, i32 4, !dbg !12799
  %45 = getelementptr inbounds [256 x i8], ptr %44, i64 0, i64 0, !dbg !12800
  %46 = call i32 @fstatat(i32 noundef %43, ptr noundef %45, ptr noundef %9, i32 noundef 0) #18, !dbg !12801
  %47 = icmp slt i32 %46, 0, !dbg !12802
  br i1 %47, label %48, label %49, !dbg !12803

48:                                               ; preds = %42
  br label %26, !dbg !12804, !llvm.loop !12795

49:                                               ; preds = %42
  %50 = getelementptr inbounds %struct.stat, ptr %9, i32 0, i32 3, !dbg !12805
  %51 = load i32, ptr %50, align 8, !dbg !12805
  %52 = and i32 %51, 61440, !dbg !12805
  %53 = icmp eq i32 %52, 16384, !dbg !12805
  br i1 %53, label %54, label %64, !dbg !12807

54:                                               ; preds = %49
  %55 = load ptr, ptr %7, align 8, !dbg !12808
  %56 = getelementptr inbounds %struct.file_list_t, ptr %55, i32 0, i32 2, !dbg !12810
  %57 = getelementptr inbounds %struct.anon.8, ptr %56, i32 0, i32 1, !dbg !12811
  store ptr @.str.24.163, ptr %57, align 8, !dbg !12812
  %58 = load ptr, ptr %7, align 8, !dbg !12813
  %59 = getelementptr inbounds %struct.file_list_t, ptr %58, i32 0, i32 2, !dbg !12814
  %60 = getelementptr inbounds %struct.anon.8, ptr %59, i32 0, i32 2, !dbg !12815
  store ptr @.str.25.164, ptr %60, align 8, !dbg !12816
  %61 = load ptr, ptr %7, align 8, !dbg !12817
  %62 = getelementptr inbounds %struct.file_list_t, ptr %61, i32 0, i32 2, !dbg !12818
  %63 = getelementptr inbounds %struct.anon.8, ptr %62, i32 0, i32 4, !dbg !12819
  store ptr @.str.26.165, ptr %63, align 8, !dbg !12820
  br label %84, !dbg !12821

64:                                               ; preds = %49
  %65 = getelementptr inbounds %struct.stat, ptr %9, i32 0, i32 3, !dbg !12822
  %66 = load i32, ptr %65, align 8, !dbg !12822
  %67 = and i32 %66, 61440, !dbg !12822
  %68 = icmp eq i32 %67, 32768, !dbg !12822
  br i1 %68, label %69, label %82, !dbg !12824

69:                                               ; preds = %64
  %70 = load ptr, ptr %7, align 8, !dbg !12825
  %71 = getelementptr inbounds %struct.file_list_t, ptr %70, i32 0, i32 2, !dbg !12827
  %72 = getelementptr inbounds %struct.anon.8, ptr %71, i32 0, i32 1, !dbg !12828
  store ptr @.str.27.166, ptr %72, align 8, !dbg !12829
  %73 = load ptr, ptr %7, align 8, !dbg !12830
  %74 = getelementptr inbounds %struct.file_list_t, ptr %73, i32 0, i32 2, !dbg !12831
  %75 = getelementptr inbounds %struct.anon.8, ptr %74, i32 0, i32 2, !dbg !12832
  store ptr @.str.28.167, ptr %75, align 8, !dbg !12833
  %76 = getelementptr inbounds %struct.dirent, ptr %5, i32 0, i32 4, !dbg !12834
  %77 = getelementptr inbounds [256 x i8], ptr %76, i64 0, i64 0, !dbg !12835
  %78 = call ptr @lwan_determine_mime_type_for_file_name(ptr noundef %77) #22, !dbg !12836
  %79 = load ptr, ptr %7, align 8, !dbg !12837
  %80 = getelementptr inbounds %struct.file_list_t, ptr %79, i32 0, i32 2, !dbg !12838
  %81 = getelementptr inbounds %struct.anon.8, ptr %80, i32 0, i32 4, !dbg !12839
  store ptr %78, ptr %81, align 8, !dbg !12840
  br label %83, !dbg !12841

82:                                               ; preds = %64
  br label %26, !dbg !12842, !llvm.loop !12795

83:                                               ; preds = %69
  br label %84

84:                                               ; preds = %83, %54
  %85 = getelementptr inbounds %struct.stat, ptr %9, i32 0, i32 8, !dbg !12844
  %86 = load i64, ptr %85, align 8, !dbg !12844
  %87 = icmp slt i64 %86, 1024, !dbg !12846
  br i1 %87, label %88, label %98, !dbg !12847

88:                                               ; preds = %84
  %89 = getelementptr inbounds %struct.stat, ptr %9, i32 0, i32 8, !dbg !12848
  %90 = load i64, ptr %89, align 8, !dbg !12848
  %91 = trunc i64 %90 to i32, !dbg !12850
  %92 = load ptr, ptr %7, align 8, !dbg !12851
  %93 = getelementptr inbounds %struct.file_list_t, ptr %92, i32 0, i32 2, !dbg !12852
  %94 = getelementptr inbounds %struct.anon.8, ptr %93, i32 0, i32 5, !dbg !12853
  store i32 %91, ptr %94, align 8, !dbg !12854
  %95 = load ptr, ptr %7, align 8, !dbg !12855
  %96 = getelementptr inbounds %struct.file_list_t, ptr %95, i32 0, i32 2, !dbg !12856
  %97 = getelementptr inbounds %struct.anon.8, ptr %96, i32 0, i32 6, !dbg !12857
  store ptr @.str.29.168, ptr %97, align 8, !dbg !12858
  br label %141, !dbg !12859

98:                                               ; preds = %84
  %99 = getelementptr inbounds %struct.stat, ptr %9, i32 0, i32 8, !dbg !12860
  %100 = load i64, ptr %99, align 8, !dbg !12860
  %101 = icmp slt i64 %100, 1048576, !dbg !12862
  br i1 %101, label %102, label %113, !dbg !12863

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.stat, ptr %9, i32 0, i32 8, !dbg !12864
  %104 = load i64, ptr %103, align 8, !dbg !12864
  %105 = sdiv i64 %104, 1024, !dbg !12866
  %106 = trunc i64 %105 to i32, !dbg !12867
  %107 = load ptr, ptr %7, align 8, !dbg !12868
  %108 = getelementptr inbounds %struct.file_list_t, ptr %107, i32 0, i32 2, !dbg !12869
  %109 = getelementptr inbounds %struct.anon.8, ptr %108, i32 0, i32 5, !dbg !12870
  store i32 %106, ptr %109, align 8, !dbg !12871
  %110 = load ptr, ptr %7, align 8, !dbg !12872
  %111 = getelementptr inbounds %struct.file_list_t, ptr %110, i32 0, i32 2, !dbg !12873
  %112 = getelementptr inbounds %struct.anon.8, ptr %111, i32 0, i32 6, !dbg !12874
  store ptr @.str.30.169, ptr %112, align 8, !dbg !12875
  br label %140, !dbg !12876

113:                                              ; preds = %98
  %114 = getelementptr inbounds %struct.stat, ptr %9, i32 0, i32 8, !dbg !12877
  %115 = load i64, ptr %114, align 8, !dbg !12877
  %116 = icmp slt i64 %115, 1073741824, !dbg !12879
  br i1 %116, label %117, label %128, !dbg !12880

117:                                              ; preds = %113
  %118 = getelementptr inbounds %struct.stat, ptr %9, i32 0, i32 8, !dbg !12881
  %119 = load i64, ptr %118, align 8, !dbg !12881
  %120 = sdiv i64 %119, 1048576, !dbg !12883
  %121 = trunc i64 %120 to i32, !dbg !12884
  %122 = load ptr, ptr %7, align 8, !dbg !12885
  %123 = getelementptr inbounds %struct.file_list_t, ptr %122, i32 0, i32 2, !dbg !12886
  %124 = getelementptr inbounds %struct.anon.8, ptr %123, i32 0, i32 5, !dbg !12887
  store i32 %121, ptr %124, align 8, !dbg !12888
  %125 = load ptr, ptr %7, align 8, !dbg !12889
  %126 = getelementptr inbounds %struct.file_list_t, ptr %125, i32 0, i32 2, !dbg !12890
  %127 = getelementptr inbounds %struct.anon.8, ptr %126, i32 0, i32 6, !dbg !12891
  store ptr @.str.31.170, ptr %127, align 8, !dbg !12892
  br label %139, !dbg !12893

128:                                              ; preds = %113
  %129 = getelementptr inbounds %struct.stat, ptr %9, i32 0, i32 8, !dbg !12894
  %130 = load i64, ptr %129, align 8, !dbg !12894
  %131 = sdiv i64 %130, 1073741824, !dbg !12896
  %132 = trunc i64 %131 to i32, !dbg !12897
  %133 = load ptr, ptr %7, align 8, !dbg !12898
  %134 = getelementptr inbounds %struct.file_list_t, ptr %133, i32 0, i32 2, !dbg !12899
  %135 = getelementptr inbounds %struct.anon.8, ptr %134, i32 0, i32 5, !dbg !12900
  store i32 %132, ptr %135, align 8, !dbg !12901
  %136 = load ptr, ptr %7, align 8, !dbg !12902
  %137 = getelementptr inbounds %struct.file_list_t, ptr %136, i32 0, i32 2, !dbg !12903
  %138 = getelementptr inbounds %struct.anon.8, ptr %137, i32 0, i32 6, !dbg !12904
  store ptr @.str.32.171, ptr %138, align 8, !dbg !12905
  br label %139

139:                                              ; preds = %128, %117
  br label %140

140:                                              ; preds = %139, %102
  br label %141

141:                                              ; preds = %140, %88
  %142 = getelementptr inbounds %struct.dirent, ptr %5, i32 0, i32 4, !dbg !12906
  %143 = getelementptr inbounds [256 x i8], ptr %142, i64 0, i64 0, !dbg !12907
  %144 = load ptr, ptr %7, align 8, !dbg !12908
  %145 = getelementptr inbounds %struct.file_list_t, ptr %144, i32 0, i32 2, !dbg !12909
  %146 = getelementptr inbounds %struct.anon.8, ptr %145, i32 0, i32 3, !dbg !12910
  store ptr %143, ptr %146, align 8, !dbg !12911
  %147 = load ptr, ptr %3, align 8, !dbg !12912
  %148 = call i32 @coro_yield(ptr noundef %147, i32 noundef 1), !dbg !12914
  %149 = icmp ne i32 %148, 0, !dbg !12914
  br i1 %149, label %150, label %151, !dbg !12915

150:                                              ; preds = %141
  br label %152, !dbg !12916

151:                                              ; preds = %141
  br label %26, !dbg !12778, !llvm.loop !12795

152:                                              ; preds = %150, %34, %26
  br label %153, !dbg !12778

153:                                              ; preds = %152, %24
  call void @llvm.dbg.label(metadata !12917), !dbg !12918
  %154 = load ptr, ptr %4, align 8, !dbg !12919
  %155 = call i32 @closedir(ptr noundef %154), !dbg !12920
  store i32 0, ptr %2, align 4, !dbg !12921
  br label %156, !dbg !12921

156:                                              ; preds = %153, %18
  %157 = load i32, ptr %2, align 4, !dbg !12922
  ret i32 %157, !dbg !12922
}

declare ptr @opendir(ptr noundef) #4

; Function Attrs: nounwind
declare i32 @dirfd(ptr noundef) #3

declare i32 @readdir_r(ptr noundef, ptr noundef, ptr noundef) #4

; Function Attrs: nounwind
declare i32 @fstatat(i32 noundef, ptr noundef, ptr noundef, i32 noundef) #3

declare i32 @closedir(ptr noundef) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @get_funcs(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 !dbg !12923 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca [4096 x i8], align 16
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i32, align 4
  store ptr %0, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !12926, metadata !DIExpression()), !dbg !12927
  store ptr %1, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !12928, metadata !DIExpression()), !dbg !12929
  store ptr %2, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !12930, metadata !DIExpression()), !dbg !12931
  store ptr %3, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !12932, metadata !DIExpression()), !dbg !12933
  call void @llvm.dbg.declare(metadata ptr %10, metadata !12934, metadata !DIExpression()), !dbg !12935
  call void @llvm.dbg.declare(metadata ptr %11, metadata !12936, metadata !DIExpression()), !dbg !12937
  %14 = getelementptr inbounds [4096 x i8], ptr %10, i64 0, i64 0, !dbg !12938
  store ptr %14, ptr %11, align 8, !dbg !12937
  %15 = load ptr, ptr %9, align 8, !dbg !12939
  %16 = getelementptr inbounds %struct.stat, ptr %15, i32 0, i32 3, !dbg !12939
  %17 = load i32, ptr %16, align 8, !dbg !12939
  %18 = and i32 %17, 61440, !dbg !12939
  %19 = icmp eq i32 %18, 16384, !dbg !12939
  br i1 %19, label %20, label %112, !dbg !12941

20:                                               ; preds = %4
  %21 = load ptr, ptr %7, align 8, !dbg !12942
  %22 = load i8, ptr %21, align 1, !dbg !12945
  %23 = sext i8 %22 to i32, !dbg !12945
  %24 = icmp eq i32 %23, 0, !dbg !12946
  br i1 %24, label %25, label %29, !dbg !12947

25:                                               ; preds = %20
  %26 = load ptr, ptr %6, align 8, !dbg !12948
  %27 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %26, i32 0, i32 3, !dbg !12950
  %28 = load ptr, ptr %27, align 8, !dbg !12950
  store ptr %28, ptr %11, align 8, !dbg !12951
  br label %57, !dbg !12952

29:                                               ; preds = %20
  call void @llvm.dbg.declare(metadata ptr %12, metadata !12953, metadata !DIExpression()), !dbg !12955
  %30 = load ptr, ptr %7, align 8, !dbg !12956
  %31 = call ptr @rawmemchr(ptr noundef %30, i32 noundef 0) #22, !dbg !12957
  store ptr %31, ptr %12, align 8, !dbg !12955
  %32 = load ptr, ptr %12, align 8, !dbg !12958
  %33 = getelementptr inbounds i8, ptr %32, i64 -1, !dbg !12960
  %34 = load i8, ptr %33, align 1, !dbg !12961
  %35 = sext i8 %34 to i32, !dbg !12961
  %36 = icmp ne i32 %35, 47, !dbg !12962
  br i1 %36, label %37, label %38, !dbg !12963

37:                                               ; preds = %29
  store ptr @redir_funcs, ptr %5, align 8, !dbg !12964
  br label %119, !dbg !12964

38:                                               ; preds = %29
  call void @llvm.dbg.declare(metadata ptr %13, metadata !12965, metadata !DIExpression()), !dbg !12966
  %39 = load ptr, ptr %11, align 8, !dbg !12967
  %40 = load ptr, ptr %7, align 8, !dbg !12968
  %41 = load ptr, ptr %6, align 8, !dbg !12969
  %42 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %41, i32 0, i32 3, !dbg !12970
  %43 = load ptr, ptr %42, align 8, !dbg !12970
  %44 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %39, i64 noundef 4096, ptr noundef @.str.9.179, ptr noundef %40, ptr noundef %43) #18, !dbg !12971
  store i32 %44, ptr %13, align 4, !dbg !12966
  %45 = load i32, ptr %13, align 4, !dbg !12972
  %46 = icmp slt i32 %45, 0, !dbg !12972
  br i1 %46, label %50, label %47, !dbg !12972

47:                                               ; preds = %38
  %48 = load i32, ptr %13, align 4, !dbg !12972
  %49 = icmp sge i32 %48, 4096, !dbg !12972
  br label %50, !dbg !12972

50:                                               ; preds = %47, %38
  %51 = phi i1 [ true, %38 ], [ %49, %47 ]
  %52 = zext i1 %51 to i32, !dbg !12972
  %53 = sext i32 %52 to i64, !dbg !12972
  %54 = icmp ne i64 %53, 0, !dbg !12972
  br i1 %54, label %55, label %56, !dbg !12974

55:                                               ; preds = %50
  store ptr null, ptr %5, align 8, !dbg !12975
  br label %119, !dbg !12975

56:                                               ; preds = %50
  br label %57

57:                                               ; preds = %56, %25
  %58 = load ptr, ptr %6, align 8, !dbg !12976
  %59 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %58, i32 0, i32 1, !dbg !12978
  %60 = getelementptr inbounds %struct.anon.6, ptr %59, i32 0, i32 2, !dbg !12979
  %61 = load i32, ptr %60, align 8, !dbg !12979
  %62 = load ptr, ptr %11, align 8, !dbg !12980
  %63 = load ptr, ptr %9, align 8, !dbg !12981
  %64 = call i32 @fstatat(i32 noundef %61, ptr noundef %62, ptr noundef %63, i32 noundef 0) #18, !dbg !12982
  %65 = icmp slt i32 %64, 0, !dbg !12983
  br i1 %65, label %66, label %75, !dbg !12984

66:                                               ; preds = %57
  %67 = call ptr @__errno_location() #20, !dbg !12985
  %68 = load i32, ptr %67, align 4, !dbg !12985
  %69 = icmp ne i32 %68, 2, !dbg !12985
  %70 = zext i1 %69 to i32, !dbg !12985
  %71 = sext i32 %70 to i64, !dbg !12985
  %72 = icmp ne i64 %71, 0, !dbg !12985
  br i1 %72, label %73, label %74, !dbg !12988

73:                                               ; preds = %66
  store ptr null, ptr %5, align 8, !dbg !12989
  br label %119, !dbg !12989

74:                                               ; preds = %66
  store ptr @dirlist_funcs, ptr %5, align 8, !dbg !12990
  br label %119, !dbg !12990

75:                                               ; preds = %57
  %76 = load ptr, ptr %6, align 8, !dbg !12991
  %77 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %76, i32 0, i32 1, !dbg !12991
  %78 = getelementptr inbounds %struct.anon.6, ptr %77, i32 0, i32 1, !dbg !12991
  %79 = load i64, ptr %78, align 8, !dbg !12991
  %80 = add i64 %79, 1, !dbg !12991
  %81 = load ptr, ptr %11, align 8, !dbg !12991
  %82 = call i64 @strlen(ptr noundef %81) #22, !dbg !12991
  %83 = add i64 %80, %82, !dbg !12991
  %84 = add i64 %83, 1, !dbg !12991
  %85 = icmp uge i64 %84, 4096, !dbg !12991
  %86 = zext i1 %85 to i32, !dbg !12991
  %87 = sext i32 %86 to i64, !dbg !12991
  %88 = icmp ne i64 %87, 0, !dbg !12991
  br i1 %88, label %89, label %90, !dbg !12993

89:                                               ; preds = %75
  store ptr null, ptr %5, align 8, !dbg !12994
  br label %119, !dbg !12994

90:                                               ; preds = %75
  %91 = load ptr, ptr %8, align 8, !dbg !12995
  %92 = load ptr, ptr %6, align 8, !dbg !12996
  %93 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %92, i32 0, i32 1, !dbg !12997
  %94 = getelementptr inbounds %struct.anon.6, ptr %93, i32 0, i32 1, !dbg !12998
  %95 = load i64, ptr %94, align 8, !dbg !12998
  %96 = getelementptr inbounds i8, ptr %91, i64 %95, !dbg !12995
  store i8 47, ptr %96, align 1, !dbg !12999
  %97 = load ptr, ptr %8, align 8, !dbg !13000
  %98 = load ptr, ptr %6, align 8, !dbg !13001
  %99 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %98, i32 0, i32 1, !dbg !13002
  %100 = getelementptr inbounds %struct.anon.6, ptr %99, i32 0, i32 1, !dbg !13003
  %101 = load i64, ptr %100, align 8, !dbg !13003
  %102 = getelementptr inbounds i8, ptr %97, i64 %101, !dbg !13004
  %103 = getelementptr inbounds i8, ptr %102, i64 1, !dbg !13005
  %104 = load ptr, ptr %11, align 8, !dbg !13006
  %105 = load ptr, ptr %6, align 8, !dbg !13007
  %106 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %105, i32 0, i32 1, !dbg !13008
  %107 = getelementptr inbounds %struct.anon.6, ptr %106, i32 0, i32 1, !dbg !13009
  %108 = load i64, ptr %107, align 8, !dbg !13009
  %109 = sub i64 4096, %108, !dbg !13010
  %110 = sub i64 %109, 1, !dbg !13011
  %111 = call ptr @strncpy(ptr noundef %103, ptr noundef %104, i64 noundef %110) #18, !dbg !13012
  br label %112, !dbg !13013

112:                                              ; preds = %90, %4
  %113 = load ptr, ptr %9, align 8, !dbg !13014
  %114 = getelementptr inbounds %struct.stat, ptr %113, i32 0, i32 8, !dbg !13016
  %115 = load i64, ptr %114, align 8, !dbg !13016
  %116 = icmp slt i64 %115, 16384, !dbg !13017
  br i1 %116, label %117, label %118, !dbg !13018

117:                                              ; preds = %112
  store ptr @mmap_funcs, ptr %5, align 8, !dbg !13019
  br label %119, !dbg !13019

118:                                              ; preds = %112
  store ptr @sendfile_funcs, ptr %5, align 8, !dbg !13020
  br label %119, !dbg !13020

119:                                              ; preds = %118, %117, %89, %74, %73, %55, %37
  %120 = load ptr, ptr %5, align 8, !dbg !13021
  ret ptr %120, !dbg !13021
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @create_cache_entry_from_funcs(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 !dbg !13022 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  store ptr %0, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !13025, metadata !DIExpression()), !dbg !13026
  store ptr %1, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !13027, metadata !DIExpression()), !dbg !13028
  store ptr %2, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !13029, metadata !DIExpression()), !dbg !13030
  store ptr %3, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !13031, metadata !DIExpression()), !dbg !13032
  call void @llvm.dbg.declare(metadata ptr %10, metadata !13033, metadata !DIExpression()), !dbg !13034
  %11 = load ptr, ptr %9, align 8, !dbg !13035
  %12 = getelementptr inbounds %struct.cache_funcs_t_, ptr %11, i32 0, i32 3, !dbg !13036
  %13 = load i64, ptr %12, align 8, !dbg !13036
  %14 = add i64 96, %13, !dbg !13037
  %15 = call noalias ptr @malloc(i64 noundef %14) #17, !dbg !13038
  store ptr %15, ptr %10, align 8, !dbg !13039
  %16 = load ptr, ptr %10, align 8, !dbg !13040
  %17 = icmp ne ptr %16, null, !dbg !13040
  %18 = xor i1 %17, true, !dbg !13040
  %19 = zext i1 %18 to i32, !dbg !13040
  %20 = sext i32 %19 to i64, !dbg !13040
  %21 = icmp ne i64 %20, 0, !dbg !13040
  br i1 %21, label %22, label %23, !dbg !13042

22:                                               ; preds = %4
  store ptr null, ptr %5, align 8, !dbg !13043
  br label %52, !dbg !13043

23:                                               ; preds = %4
  %24 = load ptr, ptr %9, align 8, !dbg !13044
  %25 = getelementptr inbounds %struct.cache_funcs_t_, ptr %24, i32 0, i32 1, !dbg !13044
  %26 = load ptr, ptr %25, align 8, !dbg !13044
  %27 = load ptr, ptr %10, align 8, !dbg !13044
  %28 = load ptr, ptr %6, align 8, !dbg !13044
  %29 = load ptr, ptr %7, align 8, !dbg !13044
  %30 = load ptr, ptr %8, align 8, !dbg !13044
  %31 = call zeroext i1 %26(ptr noundef %27, ptr noundef %28, ptr noundef %29, ptr noundef %30), !dbg !13044
  %32 = xor i1 %31, true, !dbg !13044
  %33 = xor i1 %32, true, !dbg !13044
  %34 = zext i1 %33 to i32, !dbg !13044
  %35 = sext i32 %34 to i64, !dbg !13044
  %36 = icmp ne i64 %35, 0, !dbg !13044
  br i1 %36, label %37, label %42, !dbg !13046

37:                                               ; preds = %23
  %38 = load ptr, ptr %9, align 8, !dbg !13047
  %39 = load ptr, ptr %10, align 8, !dbg !13049
  %40 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %39, i32 0, i32 3, !dbg !13050
  store ptr %38, ptr %40, align 8, !dbg !13051
  %41 = load ptr, ptr %10, align 8, !dbg !13052
  store ptr %41, ptr %5, align 8, !dbg !13053
  br label %52, !dbg !13053

42:                                               ; preds = %23
  %43 = load ptr, ptr %10, align 8, !dbg !13054
  call void @free(ptr noundef %43) #18, !dbg !13055
  %44 = load ptr, ptr %9, align 8, !dbg !13056
  %45 = icmp ne ptr %44, @mmap_funcs, !dbg !13058
  br i1 %45, label %46, label %47, !dbg !13059

46:                                               ; preds = %42
  store ptr null, ptr %5, align 8, !dbg !13060
  br label %52, !dbg !13060

47:                                               ; preds = %42
  %48 = load ptr, ptr %6, align 8, !dbg !13061
  %49 = load ptr, ptr %7, align 8, !dbg !13062
  %50 = load ptr, ptr %8, align 8, !dbg !13063
  %51 = call ptr @create_cache_entry_from_funcs(ptr noundef %48, ptr noundef %49, ptr noundef %50, ptr noundef @sendfile_funcs), !dbg !13064
  store ptr %51, ptr %5, align 8, !dbg !13065
  br label %52, !dbg !13065

52:                                               ; preds = %47, %46, %37, %22
  %53 = load ptr, ptr %5, align 8, !dbg !13066
  ret ptr %53, !dbg !13066
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @sendfile_serve(ptr noundef %0, ptr noundef %1) #0 !dbg !13067 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %15 = alloca ptr, align 8
  %16 = alloca ptr, align 8
  %17 = alloca [4096 x i8], align 16
  %18 = alloca i64, align 8
  %19 = alloca i32, align 4
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca ptr, align 8
  %23 = alloca ptr, align 8
  %24 = alloca i64, align 8
  %25 = alloca ptr, align 8
  %26 = alloca i32, align 4
  store ptr %0, ptr %13, align 8
  call void @llvm.dbg.declare(metadata ptr %13, metadata !13068, metadata !DIExpression()), !dbg !13069
  store ptr %1, ptr %14, align 8
  call void @llvm.dbg.declare(metadata ptr %14, metadata !13070, metadata !DIExpression()), !dbg !13071
  call void @llvm.dbg.declare(metadata ptr %15, metadata !13072, metadata !DIExpression()), !dbg !13073
  %27 = load ptr, ptr %14, align 8, !dbg !13074
  store ptr %27, ptr %15, align 8, !dbg !13073
  call void @llvm.dbg.declare(metadata ptr %16, metadata !13075, metadata !DIExpression()), !dbg !13076
  %28 = load ptr, ptr %15, align 8, !dbg !13077
  %29 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %28, i64 1, !dbg !13078
  store ptr %29, ptr %16, align 8, !dbg !13076
  call void @llvm.dbg.declare(metadata ptr %17, metadata !13079, metadata !DIExpression()), !dbg !13080
  call void @llvm.dbg.declare(metadata ptr %18, metadata !13081, metadata !DIExpression()), !dbg !13082
  call void @llvm.dbg.declare(metadata ptr %19, metadata !13083, metadata !DIExpression()), !dbg !13084
  call void @llvm.dbg.declare(metadata ptr %20, metadata !13085, metadata !DIExpression()), !dbg !13086
  call void @llvm.dbg.declare(metadata ptr %21, metadata !13087, metadata !DIExpression()), !dbg !13088
  call void @llvm.dbg.declare(metadata ptr %22, metadata !13089, metadata !DIExpression()), !dbg !13090
  call void @llvm.dbg.declare(metadata ptr %23, metadata !13091, metadata !DIExpression()), !dbg !13092
  call void @llvm.dbg.declare(metadata ptr %24, metadata !13093, metadata !DIExpression()), !dbg !13094
  %30 = load ptr, ptr %16, align 8, !dbg !13095
  %31 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %30, i32 0, i32 0, !dbg !13097
  %32 = getelementptr inbounds %struct.lwan_value_t_, ptr %31, i32 0, i32 1, !dbg !13098
  %33 = load i64, ptr %32, align 8, !dbg !13098
  %34 = icmp ne i64 %33, 0, !dbg !13095
  br i1 %34, label %35, label %55, !dbg !13099

35:                                               ; preds = %2
  %36 = load ptr, ptr %13, align 8, !dbg !13100
  %37 = getelementptr inbounds %struct.lwan_request_t_, ptr %36, i32 0, i32 0, !dbg !13101
  %38 = load i32, ptr %37, align 8, !dbg !13101
  %39 = and i32 %38, 16, !dbg !13102
  %40 = icmp ne i32 %39, 0, !dbg !13102
  br i1 %40, label %41, label %55, !dbg !13103

41:                                               ; preds = %35
  store i64 0, ptr %20, align 8, !dbg !13104
  %42 = load ptr, ptr %16, align 8, !dbg !13106
  %43 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %42, i32 0, i32 0, !dbg !13107
  %44 = getelementptr inbounds %struct.lwan_value_t_, ptr %43, i32 0, i32 1, !dbg !13108
  %45 = load i64, ptr %44, align 8, !dbg !13108
  store i64 %45, ptr %21, align 8, !dbg !13109
  %46 = load ptr, ptr @compression_gzip, align 8, !dbg !13110
  store ptr %46, ptr %22, align 8, !dbg !13111
  %47 = load ptr, ptr %16, align 8, !dbg !13112
  %48 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %47, i32 0, i32 0, !dbg !13113
  %49 = getelementptr inbounds %struct.lwan_value_t_, ptr %48, i32 0, i32 0, !dbg !13114
  %50 = load ptr, ptr %49, align 8, !dbg !13114
  store ptr %50, ptr %23, align 8, !dbg !13115
  %51 = load ptr, ptr %16, align 8, !dbg !13116
  %52 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %51, i32 0, i32 0, !dbg !13117
  %53 = getelementptr inbounds %struct.lwan_value_t_, ptr %52, i32 0, i32 1, !dbg !13118
  %54 = load i64, ptr %53, align 8, !dbg !13118
  store i64 %54, ptr %24, align 8, !dbg !13119
  store i32 200, ptr %19, align 4, !dbg !13120
  br label %144, !dbg !13121

55:                                               ; preds = %35, %2
  %56 = load ptr, ptr %13, align 8, !dbg !13122
  %57 = load ptr, ptr %16, align 8, !dbg !13124
  %58 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %57, i32 0, i32 1, !dbg !13125
  %59 = getelementptr inbounds %struct.lwan_value_t_, ptr %58, i32 0, i32 1, !dbg !13126
  %60 = load i64, ptr %59, align 8, !dbg !13126
  store ptr %56, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !13127, metadata !DIExpression()), !dbg !13132
  store ptr %20, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !13134, metadata !DIExpression()), !dbg !13135
  store ptr %21, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !13136, metadata !DIExpression()), !dbg !13137
  store i64 %60, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !13138, metadata !DIExpression()), !dbg !13139
  call void @llvm.dbg.declare(metadata ptr %8, metadata !13140, metadata !DIExpression()), !dbg !13141
  call void @llvm.dbg.declare(metadata ptr %9, metadata !13142, metadata !DIExpression()), !dbg !13143
  %61 = load ptr, ptr %4, align 8, !dbg !13144
  %62 = getelementptr inbounds %struct.lwan_request_t_, ptr %61, i32 0, i32 7, !dbg !13145
  %63 = getelementptr inbounds %struct.anon.2.12, ptr %62, i32 0, i32 1, !dbg !13146
  %64 = load i64, ptr %63, align 8, !dbg !13147
  store i64 %64, ptr %8, align 8, !dbg !13148
  %65 = load ptr, ptr %4, align 8, !dbg !13149
  %66 = getelementptr inbounds %struct.lwan_request_t_, ptr %65, i32 0, i32 7, !dbg !13150
  %67 = getelementptr inbounds %struct.anon.2.12, ptr %66, i32 0, i32 1, !dbg !13151
  %68 = getelementptr inbounds %struct.timespec, ptr %67, i32 0, i32 1, !dbg !13152
  %69 = load i64, ptr %68, align 8, !dbg !13152
  store i64 %69, ptr %9, align 8, !dbg !13153
  %70 = load i64, ptr %9, align 8, !dbg !13154
  %71 = icmp sle i64 %70, 0, !dbg !13154
  br i1 %71, label %72, label %75, !dbg !13154

72:                                               ; preds = %55
  %73 = load i64, ptr %8, align 8, !dbg !13154
  %74 = icmp sle i64 %73, 0, !dbg !13154
  br label %75

75:                                               ; preds = %72, %55
  %76 = phi i1 [ false, %55 ], [ %74, %72 ], !dbg !13156
  %77 = xor i1 %76, true, !dbg !13154
  %78 = zext i1 %76 to i32, !dbg !13154
  %79 = sext i32 %78 to i64, !dbg !13154
  br i1 %76, label %80, label %84, !dbg !13157

80:                                               ; preds = %75
  %81 = load ptr, ptr %5, align 8, !dbg !13158
  store i64 0, ptr %81, align 8, !dbg !13160
  %82 = load i64, ptr %7, align 8, !dbg !13161
  %83 = load ptr, ptr %6, align 8, !dbg !13162
  store i64 %82, ptr %83, align 8, !dbg !13163
  store i32 200, ptr %3, align 4, !dbg !13164
  br label %126, !dbg !13164

84:                                               ; preds = %75
  %85 = load i64, ptr %9, align 8, !dbg !13165
  %86 = load i64, ptr %8, align 8, !dbg !13165
  %87 = icmp sge i64 %85, %86, !dbg !13165
  %88 = zext i1 %87 to i32, !dbg !13165
  %89 = sext i32 %88 to i64, !dbg !13165
  br i1 %87, label %90, label %91, !dbg !13167

90:                                               ; preds = %84
  store i32 416, ptr %3, align 4, !dbg !13168
  br label %126, !dbg !13168

91:                                               ; preds = %84
  %92 = load i64, ptr %8, align 8, !dbg !13169
  %93 = load i64, ptr %7, align 8, !dbg !13169
  %94 = icmp sge i64 %92, %93, !dbg !13169
  br i1 %94, label %99, label %95, !dbg !13169

95:                                               ; preds = %91
  %96 = load i64, ptr %9, align 8, !dbg !13169
  %97 = load i64, ptr %7, align 8, !dbg !13169
  %98 = icmp sge i64 %96, %97, !dbg !13169
  br label %99, !dbg !13169

99:                                               ; preds = %95, %91
  %100 = phi i1 [ true, %91 ], [ %98, %95 ]
  %101 = zext i1 %100 to i32, !dbg !13169
  %102 = sext i32 %101 to i64, !dbg !13169
  br i1 %100, label %103, label %104, !dbg !13171

103:                                              ; preds = %99
  store i32 416, ptr %3, align 4, !dbg !13172
  br label %126, !dbg !13172

104:                                              ; preds = %99
  %105 = load i64, ptr %9, align 8, !dbg !13173
  %106 = icmp slt i64 %105, 0, !dbg !13175
  br i1 %106, label %107, label %111, !dbg !13176

107:                                              ; preds = %104
  %108 = load i64, ptr %7, align 8, !dbg !13177
  %109 = load i64, ptr %8, align 8, !dbg !13178
  %110 = sub nsw i64 %108, %109, !dbg !13179
  store i64 %110, ptr %9, align 8, !dbg !13180
  br label %115, !dbg !13181

111:                                              ; preds = %104
  %112 = load i64, ptr %8, align 8, !dbg !13182
  %113 = load i64, ptr %9, align 8, !dbg !13183
  %114 = sub nsw i64 %113, %112, !dbg !13183
  store i64 %114, ptr %9, align 8, !dbg !13183
  br label %115

115:                                              ; preds = %111, %107
  %116 = load i64, ptr %9, align 8, !dbg !13184
  %117 = icmp sle i64 %116, 0, !dbg !13184
  %118 = zext i1 %117 to i32, !dbg !13184
  %119 = sext i32 %118 to i64, !dbg !13184
  br i1 %117, label %120, label %121, !dbg !13186

120:                                              ; preds = %115
  store i32 416, ptr %3, align 4, !dbg !13187
  br label %126, !dbg !13187

121:                                              ; preds = %115
  %122 = load i64, ptr %8, align 8, !dbg !13188
  %123 = load ptr, ptr %5, align 8, !dbg !13189
  store i64 %122, ptr %123, align 8, !dbg !13190
  %124 = load i64, ptr %9, align 8, !dbg !13191
  %125 = load ptr, ptr %6, align 8, !dbg !13192
  store i64 %124, ptr %125, align 8, !dbg !13193
  store i32 206, ptr %3, align 4, !dbg !13194
  br label %126, !dbg !13194

126:                                              ; preds = %121, %120, %103, %90, %80
  %127 = load i32, ptr %3, align 4, !dbg !13195
  store i32 %127, ptr %19, align 4, !dbg !13196
  %128 = load i32, ptr %19, align 4, !dbg !13197
  %129 = icmp eq i32 %128, 416, !dbg !13197
  %130 = zext i1 %129 to i32, !dbg !13197
  %131 = sext i32 %130 to i64, !dbg !13197
  %132 = icmp ne i64 %131, 0, !dbg !13197
  br i1 %132, label %133, label %134, !dbg !13199

133:                                              ; preds = %126
  store i32 416, ptr %12, align 4, !dbg !13200
  br label %230, !dbg !13200

134:                                              ; preds = %126
  %135 = load ptr, ptr @compression_none, align 8, !dbg !13201
  store ptr %135, ptr %22, align 8, !dbg !13202
  %136 = load ptr, ptr %16, align 8, !dbg !13203
  %137 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %136, i32 0, i32 1, !dbg !13204
  %138 = getelementptr inbounds %struct.lwan_value_t_, ptr %137, i32 0, i32 0, !dbg !13205
  %139 = load ptr, ptr %138, align 8, !dbg !13205
  store ptr %139, ptr %23, align 8, !dbg !13206
  %140 = load ptr, ptr %16, align 8, !dbg !13207
  %141 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %140, i32 0, i32 1, !dbg !13208
  %142 = getelementptr inbounds %struct.lwan_value_t_, ptr %141, i32 0, i32 1, !dbg !13209
  %143 = load i64, ptr %142, align 8, !dbg !13209
  store i64 %143, ptr %24, align 8, !dbg !13210
  br label %144

144:                                              ; preds = %134, %41
  %145 = load ptr, ptr %13, align 8, !dbg !13211
  %146 = load ptr, ptr %15, align 8, !dbg !13213
  %147 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %146, i32 0, i32 1, !dbg !13214
  %148 = getelementptr inbounds %struct.anon.7, ptr %147, i32 0, i32 1, !dbg !13215
  %149 = load i64, ptr %148, align 8, !dbg !13215
  store ptr %145, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %10, metadata !13216, metadata !DIExpression()), !dbg !13220
  store i64 %149, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !13222, metadata !DIExpression()), !dbg !13223
  %150 = load ptr, ptr %10, align 8, !dbg !13224
  %151 = getelementptr inbounds %struct.lwan_request_t_, ptr %150, i32 0, i32 7, !dbg !13225
  %152 = load i64, ptr %151, align 8, !dbg !13226
  %153 = icmp ne i64 %152, 0, !dbg !13224
  br i1 %153, label %154, label %160, !dbg !13227

154:                                              ; preds = %144
  %155 = load i64, ptr %11, align 8, !dbg !13228
  %156 = load ptr, ptr %10, align 8, !dbg !13229
  %157 = getelementptr inbounds %struct.lwan_request_t_, ptr %156, i32 0, i32 7, !dbg !13230
  %158 = load i64, ptr %157, align 8, !dbg !13231
  %159 = icmp sle i64 %155, %158, !dbg !13232
  br label %160

160:                                              ; preds = %154, %144
  %161 = phi i1 [ false, %144 ], [ %159, %154 ], !dbg !13233
  br i1 %161, label %162, label %163, !dbg !13234

162:                                              ; preds = %160
  store i32 304, ptr %19, align 4, !dbg !13235
  br label %163, !dbg !13236

163:                                              ; preds = %162, %160
  %164 = load ptr, ptr %13, align 8, !dbg !13237
  %165 = load i32, ptr %19, align 4, !dbg !13238
  %166 = load ptr, ptr %15, align 8, !dbg !13239
  %167 = load i64, ptr %24, align 8, !dbg !13240
  %168 = load ptr, ptr %22, align 8, !dbg !13241
  %169 = getelementptr inbounds [4096 x i8], ptr %17, i64 0, i64 0, !dbg !13242
  %170 = call i64 @prepare_headers(ptr noundef %164, i32 noundef %165, ptr noundef %166, i64 noundef %167, ptr noundef %168, ptr noundef %169, i64 noundef 512), !dbg !13243
  store i64 %170, ptr %18, align 8, !dbg !13244
  %171 = load i64, ptr %18, align 8, !dbg !13245
  %172 = icmp ne i64 %171, 0, !dbg !13245
  %173 = xor i1 %172, true, !dbg !13245
  %174 = zext i1 %173 to i32, !dbg !13245
  %175 = sext i32 %174 to i64, !dbg !13245
  %176 = icmp ne i64 %175, 0, !dbg !13245
  br i1 %176, label %177, label %178, !dbg !13247

177:                                              ; preds = %163
  store i32 500, ptr %12, align 4, !dbg !13248
  br label %230, !dbg !13248

178:                                              ; preds = %163
  %179 = load ptr, ptr %13, align 8, !dbg !13249
  %180 = getelementptr inbounds %struct.lwan_request_t_, ptr %179, i32 0, i32 0, !dbg !13251
  %181 = load i32, ptr %180, align 8, !dbg !13251
  %182 = and i32 %181, 2, !dbg !13252
  %183 = icmp ne i32 %182, 0, !dbg !13252
  br i1 %183, label %187, label %184, !dbg !13253

184:                                              ; preds = %178
  %185 = load i32, ptr %19, align 4, !dbg !13254
  %186 = icmp eq i32 %185, 304, !dbg !13255
  br i1 %186, label %187, label %192, !dbg !13256

187:                                              ; preds = %184, %178
  %188 = load ptr, ptr %13, align 8, !dbg !13257
  %189 = getelementptr inbounds [4096 x i8], ptr %17, i64 0, i64 0, !dbg !13259
  %190 = load i64, ptr %18, align 8, !dbg !13260
  %191 = call i64 @lwan_write(ptr noundef %188, ptr noundef %189, i64 noundef %190), !dbg !13261
  br label %228, !dbg !13262

192:                                              ; preds = %184
  call void @llvm.dbg.declare(metadata ptr %25, metadata !13263, metadata !DIExpression()), !dbg !13265
  %193 = load ptr, ptr %13, align 8, !dbg !13266
  %194 = getelementptr inbounds %struct.lwan_request_t_, ptr %193, i32 0, i32 8, !dbg !13267
  %195 = getelementptr inbounds %struct.lwan_response_t_, ptr %194, i32 0, i32 4, !dbg !13268
  %196 = getelementptr inbounds %struct.anon.1, ptr %195, i32 0, i32 2, !dbg !13269
  %197 = load ptr, ptr %196, align 8, !dbg !13269
  store ptr %197, ptr %25, align 8, !dbg !13265
  call void @llvm.dbg.declare(metadata ptr %26, metadata !13270, metadata !DIExpression()), !dbg !13271
  %198 = load ptr, ptr %13, align 8, !dbg !13272
  %199 = load ptr, ptr %25, align 8, !dbg !13273
  %200 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %199, i32 0, i32 1, !dbg !13274
  %201 = getelementptr inbounds %struct.anon.6, ptr %200, i32 0, i32 2, !dbg !13275
  %202 = load i32, ptr %201, align 8, !dbg !13275
  %203 = load ptr, ptr %23, align 8, !dbg !13276
  %204 = load ptr, ptr %25, align 8, !dbg !13277
  %205 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %204, i32 0, i32 2, !dbg !13278
  %206 = load i32, ptr %205, align 8, !dbg !13278
  %207 = call i32 @lwan_openat(ptr noundef %198, i32 noundef %202, ptr noundef %203, i32 noundef %206), !dbg !13279
  store i32 %207, ptr %26, align 4, !dbg !13271
  %208 = load i32, ptr %26, align 4, !dbg !13280
  %209 = icmp slt i32 %208, 0, !dbg !13280
  %210 = zext i1 %209 to i32, !dbg !13280
  %211 = sext i32 %210 to i64, !dbg !13280
  %212 = icmp ne i64 %211, 0, !dbg !13280
  br i1 %212, label %213, label %218, !dbg !13282

213:                                              ; preds = %192
  %214 = load i32, ptr %26, align 4, !dbg !13283
  switch i32 %214, label %217 [
    i32 -13, label %215
    i32 -23, label %216
  ], !dbg !13285

215:                                              ; preds = %213
  store i32 403, ptr %12, align 4, !dbg !13286
  br label %230, !dbg !13286

216:                                              ; preds = %213
  store i32 503, ptr %12, align 4, !dbg !13288
  br label %230, !dbg !13288

217:                                              ; preds = %213
  store i32 404, ptr %12, align 4, !dbg !13289
  br label %230, !dbg !13289

218:                                              ; preds = %192
  %219 = load ptr, ptr %13, align 8, !dbg !13290
  %220 = getelementptr inbounds [4096 x i8], ptr %17, i64 0, i64 0, !dbg !13291
  %221 = load i64, ptr %18, align 8, !dbg !13292
  %222 = call i64 @lwan_send(ptr noundef %219, ptr noundef %220, i64 noundef %221, i32 noundef 32768), !dbg !13293
  %223 = load ptr, ptr %13, align 8, !dbg !13294
  %224 = load i32, ptr %26, align 4, !dbg !13295
  %225 = load i64, ptr %20, align 8, !dbg !13296
  %226 = load i64, ptr %21, align 8, !dbg !13297
  %227 = call i64 @lwan_sendfile(ptr noundef %223, i32 noundef %224, i64 noundef %225, i64 noundef %226), !dbg !13298
  br label %228

228:                                              ; preds = %218, %187
  %229 = load i32, ptr %19, align 4, !dbg !13299
  store i32 %229, ptr %12, align 4, !dbg !13300
  br label %230, !dbg !13300

230:                                              ; preds = %228, %217, %216, %215, %177, %133
  %231 = load i32, ptr %12, align 4, !dbg !13301
  ret i32 %231, !dbg !13301
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @sendfile_init(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 !dbg !13302 {
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i1, align 1
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca %struct.stat, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store ptr %0, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !13303, metadata !DIExpression()), !dbg !13304
  store ptr %1, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !13305, metadata !DIExpression()), !dbg !13306
  store ptr %2, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %10, metadata !13307, metadata !DIExpression()), !dbg !13308
  store ptr %3, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !13309, metadata !DIExpression()), !dbg !13310
  call void @llvm.dbg.declare(metadata ptr %12, metadata !13311, metadata !DIExpression()), !dbg !13312
  %16 = load ptr, ptr %8, align 8, !dbg !13313
  %17 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %16, i64 1, !dbg !13314
  store ptr %17, ptr %12, align 8, !dbg !13312
  call void @llvm.dbg.declare(metadata ptr %13, metadata !13315, metadata !DIExpression()), !dbg !13316
  %18 = load ptr, ptr %10, align 8, !dbg !13317
  %19 = load ptr, ptr %9, align 8, !dbg !13318
  %20 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %19, i32 0, i32 1, !dbg !13319
  %21 = getelementptr inbounds %struct.anon.6, ptr %20, i32 0, i32 1, !dbg !13320
  %22 = load i64, ptr %21, align 8, !dbg !13320
  %23 = getelementptr inbounds i8, ptr %18, i64 %22, !dbg !13321
  %24 = call ptr @lwan_determine_mime_type_for_file_name(ptr noundef %23) #22, !dbg !13322
  %25 = load ptr, ptr %8, align 8, !dbg !13323
  %26 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %25, i32 0, i32 2, !dbg !13324
  store ptr %24, ptr %26, align 8, !dbg !13325
  %27 = load ptr, ptr %9, align 8, !dbg !13326
  %28 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %27, i32 0, i32 5, !dbg !13326
  %29 = load i8, ptr %28, align 8, !dbg !13326
  %30 = trunc i8 %29 to i1, !dbg !13326
  %31 = xor i1 %30, true, !dbg !13326
  %32 = zext i1 %31 to i32, !dbg !13326
  %33 = sext i32 %32 to i64, !dbg !13326
  %34 = icmp ne i64 %33, 0, !dbg !13326
  br i1 %34, label %35, label %36, !dbg !13328

35:                                               ; preds = %4
  br label %108, !dbg !13329

36:                                               ; preds = %4
  call void @llvm.dbg.declare(metadata ptr %14, metadata !13330, metadata !DIExpression()), !dbg !13331
  %37 = load ptr, ptr %12, align 8, !dbg !13332
  %38 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %37, i32 0, i32 0, !dbg !13333
  %39 = getelementptr inbounds %struct.lwan_value_t_, ptr %38, i32 0, i32 0, !dbg !13334
  %40 = load ptr, ptr %10, align 8, !dbg !13335
  %41 = load ptr, ptr %9, align 8, !dbg !13336
  %42 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %41, i32 0, i32 1, !dbg !13337
  %43 = getelementptr inbounds %struct.anon.6, ptr %42, i32 0, i32 1, !dbg !13338
  %44 = load i64, ptr %43, align 8, !dbg !13338
  %45 = getelementptr inbounds i8, ptr %40, i64 %44, !dbg !13339
  %46 = getelementptr inbounds i8, ptr %45, i64 1, !dbg !13340
  %47 = call i32 (ptr, ptr, ...) @asprintf(ptr noundef %39, ptr noundef @.str.19.173, ptr noundef %46) #18, !dbg !13341
  store i32 %47, ptr %14, align 4, !dbg !13331
  %48 = load i32, ptr %14, align 4, !dbg !13342
  %49 = icmp slt i32 %48, 0, !dbg !13342
  br i1 %49, label %53, label %50, !dbg !13342

50:                                               ; preds = %36
  %51 = load i32, ptr %14, align 4, !dbg !13342
  %52 = icmp sge i32 %51, 4096, !dbg !13342
  br label %53, !dbg !13342

53:                                               ; preds = %50, %36
  %54 = phi i1 [ true, %36 ], [ %52, %50 ]
  %55 = zext i1 %54 to i32, !dbg !13342
  %56 = sext i32 %55 to i64, !dbg !13342
  %57 = icmp ne i64 %56, 0, !dbg !13342
  br i1 %57, label %58, label %59, !dbg !13344

58:                                               ; preds = %53
  br label %108, !dbg !13345

59:                                               ; preds = %53
  call void @llvm.dbg.declare(metadata ptr %15, metadata !13346, metadata !DIExpression()), !dbg !13347
  %60 = load ptr, ptr %9, align 8, !dbg !13348
  %61 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %60, i32 0, i32 1, !dbg !13349
  %62 = getelementptr inbounds %struct.anon.6, ptr %61, i32 0, i32 2, !dbg !13350
  %63 = load i32, ptr %62, align 8, !dbg !13350
  %64 = load ptr, ptr %12, align 8, !dbg !13351
  %65 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %64, i32 0, i32 0, !dbg !13352
  %66 = getelementptr inbounds %struct.lwan_value_t_, ptr %65, i32 0, i32 0, !dbg !13353
  %67 = load ptr, ptr %66, align 8, !dbg !13353
  %68 = call i32 @fstatat(i32 noundef %63, ptr noundef %67, ptr noundef %13, i32 noundef 0) #18, !dbg !13354
  store i32 %68, ptr %15, align 4, !dbg !13347
  %69 = load i32, ptr %15, align 4, !dbg !13355
  %70 = icmp sge i32 %69, 0, !dbg !13355
  br i1 %70, label %71, label %90, !dbg !13355

71:                                               ; preds = %59
  %72 = getelementptr inbounds %struct.stat, ptr %13, i32 0, i32 12, !dbg !13355
  %73 = getelementptr inbounds %struct.timespec, ptr %72, i32 0, i32 0, !dbg !13355
  %74 = load i64, ptr %73, align 8, !dbg !13355
  %75 = load ptr, ptr %11, align 8, !dbg !13355
  %76 = getelementptr inbounds %struct.stat, ptr %75, i32 0, i32 12, !dbg !13355
  %77 = getelementptr inbounds %struct.timespec, ptr %76, i32 0, i32 0, !dbg !13355
  %78 = load i64, ptr %77, align 8, !dbg !13355
  %79 = icmp sge i64 %74, %78, !dbg !13355
  br i1 %79, label %80, label %90, !dbg !13355

80:                                               ; preds = %71
  %81 = getelementptr inbounds %struct.stat, ptr %13, i32 0, i32 8, !dbg !13355
  %82 = load i64, ptr %81, align 8, !dbg !13355
  %83 = load ptr, ptr %11, align 8, !dbg !13355
  %84 = getelementptr inbounds %struct.stat, ptr %83, i32 0, i32 8, !dbg !13355
  %85 = load i64, ptr %84, align 8, !dbg !13355
  store i64 %82, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !13357, metadata !DIExpression()), !dbg !13358
  store i64 %85, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !13360, metadata !DIExpression()), !dbg !13361
  %86 = load i64, ptr %5, align 8, !dbg !13362
  %87 = add i64 %86, 27, !dbg !13363
  %88 = load i64, ptr %6, align 8, !dbg !13364
  %89 = icmp ult i64 %87, %88, !dbg !13365
  br label %90

90:                                               ; preds = %80, %71, %59
  %91 = phi i1 [ false, %71 ], [ false, %59 ], [ %89, %80 ], !dbg !13366
  %92 = xor i1 %91, true, !dbg !13355
  %93 = xor i1 %92, true, !dbg !13355
  %94 = zext i1 %93 to i32, !dbg !13355
  %95 = sext i32 %94 to i64, !dbg !13355
  %96 = icmp ne i64 %95, 0, !dbg !13355
  br i1 %96, label %97, label %103, !dbg !13367

97:                                               ; preds = %90
  %98 = getelementptr inbounds %struct.stat, ptr %13, i32 0, i32 8, !dbg !13368
  %99 = load i64, ptr %98, align 8, !dbg !13368
  %100 = load ptr, ptr %12, align 8, !dbg !13370
  %101 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %100, i32 0, i32 0, !dbg !13371
  %102 = getelementptr inbounds %struct.lwan_value_t_, ptr %101, i32 0, i32 1, !dbg !13372
  store i64 %99, ptr %102, align 8, !dbg !13373
  br label %115, !dbg !13374

103:                                              ; preds = %90
  %104 = load ptr, ptr %12, align 8, !dbg !13375
  %105 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %104, i32 0, i32 0, !dbg !13377
  %106 = getelementptr inbounds %struct.lwan_value_t_, ptr %105, i32 0, i32 0, !dbg !13378
  %107 = load ptr, ptr %106, align 8, !dbg !13378
  call void @free(ptr noundef %107) #18, !dbg !13379
  br label %108, !dbg !13379

108:                                              ; preds = %103, %58, %35
  call void @llvm.dbg.label(metadata !13380), !dbg !13381
  %109 = load ptr, ptr %12, align 8, !dbg !13382
  %110 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %109, i32 0, i32 0, !dbg !13383
  %111 = getelementptr inbounds %struct.lwan_value_t_, ptr %110, i32 0, i32 0, !dbg !13384
  store ptr null, ptr %111, align 8, !dbg !13385
  %112 = load ptr, ptr %12, align 8, !dbg !13386
  %113 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %112, i32 0, i32 0, !dbg !13387
  %114 = getelementptr inbounds %struct.lwan_value_t_, ptr %113, i32 0, i32 1, !dbg !13388
  store i64 0, ptr %114, align 8, !dbg !13389
  br label %115

115:                                              ; preds = %108, %97
  %116 = load ptr, ptr %11, align 8, !dbg !13390
  %117 = getelementptr inbounds %struct.stat, ptr %116, i32 0, i32 8, !dbg !13391
  %118 = load i64, ptr %117, align 8, !dbg !13391
  %119 = load ptr, ptr %12, align 8, !dbg !13392
  %120 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %119, i32 0, i32 1, !dbg !13393
  %121 = getelementptr inbounds %struct.lwan_value_t_, ptr %120, i32 0, i32 1, !dbg !13394
  store i64 %118, ptr %121, align 8, !dbg !13395
  %122 = load ptr, ptr %10, align 8, !dbg !13396
  %123 = load ptr, ptr %9, align 8, !dbg !13397
  %124 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %123, i32 0, i32 1, !dbg !13398
  %125 = getelementptr inbounds %struct.anon.6, ptr %124, i32 0, i32 1, !dbg !13399
  %126 = load i64, ptr %125, align 8, !dbg !13399
  %127 = getelementptr inbounds i8, ptr %122, i64 %126, !dbg !13400
  %128 = getelementptr inbounds i8, ptr %127, i64 1, !dbg !13401
  %129 = call noalias ptr @strdup(ptr noundef %128) #18, !dbg !13402
  %130 = load ptr, ptr %12, align 8, !dbg !13403
  %131 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %130, i32 0, i32 1, !dbg !13404
  %132 = getelementptr inbounds %struct.lwan_value_t_, ptr %131, i32 0, i32 0, !dbg !13405
  store ptr %129, ptr %132, align 8, !dbg !13406
  %133 = load ptr, ptr %12, align 8, !dbg !13407
  %134 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %133, i32 0, i32 1, !dbg !13407
  %135 = getelementptr inbounds %struct.lwan_value_t_, ptr %134, i32 0, i32 0, !dbg !13407
  %136 = load ptr, ptr %135, align 8, !dbg !13407
  %137 = icmp ne ptr %136, null, !dbg !13407
  %138 = xor i1 %137, true, !dbg !13407
  %139 = zext i1 %138 to i32, !dbg !13407
  %140 = sext i32 %139 to i64, !dbg !13407
  %141 = icmp ne i64 %140, 0, !dbg !13407
  br i1 %141, label %142, label %147, !dbg !13409

142:                                              ; preds = %115
  %143 = load ptr, ptr %12, align 8, !dbg !13410
  %144 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %143, i32 0, i32 0, !dbg !13412
  %145 = getelementptr inbounds %struct.lwan_value_t_, ptr %144, i32 0, i32 0, !dbg !13413
  %146 = load ptr, ptr %145, align 8, !dbg !13413
  call void @free(ptr noundef %146) #18, !dbg !13414
  store i1 false, ptr %7, align 1, !dbg !13415
  br label %148, !dbg !13415

147:                                              ; preds = %115
  store i1 true, ptr %7, align 1, !dbg !13416
  br label %148, !dbg !13416

148:                                              ; preds = %147, %142
  %149 = load i1, ptr %7, align 1, !dbg !13417
  ret i1 %149, !dbg !13417
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @sendfile_free(ptr noundef %0) #0 !dbg !13418 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !13419, metadata !DIExpression()), !dbg !13420
  call void @llvm.dbg.declare(metadata ptr %3, metadata !13421, metadata !DIExpression()), !dbg !13422
  %4 = load ptr, ptr %2, align 8, !dbg !13423
  store ptr %4, ptr %3, align 8, !dbg !13422
  %5 = load ptr, ptr %3, align 8, !dbg !13424
  %6 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %5, i32 0, i32 0, !dbg !13425
  %7 = getelementptr inbounds %struct.lwan_value_t_, ptr %6, i32 0, i32 0, !dbg !13426
  %8 = load ptr, ptr %7, align 8, !dbg !13426
  call void @free(ptr noundef %8) #18, !dbg !13427
  %9 = load ptr, ptr %3, align 8, !dbg !13428
  %10 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %9, i32 0, i32 1, !dbg !13429
  %11 = getelementptr inbounds %struct.lwan_value_t_, ptr %10, i32 0, i32 0, !dbg !13430
  %12 = load ptr, ptr %11, align 8, !dbg !13430
  call void @free(ptr noundef %12) #18, !dbg !13431
  ret void, !dbg !13432
}

; Function Attrs: nounwind
declare i32 @asprintf(ptr noundef, ptr noundef, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @prepare_headers(ptr noundef %0, i32 noundef %1, ptr noundef %2, i64 noundef %3, ptr noundef %4, ptr noundef %5, i64 noundef %6) #0 !dbg !13433 {
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca i64, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca i64, align 8
  %15 = alloca [3 x %struct.list_node], align 16
  store ptr %0, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !13436, metadata !DIExpression()), !dbg !13437
  store i32 %1, ptr %9, align 4
  call void @llvm.dbg.declare(metadata ptr %9, metadata !13438, metadata !DIExpression()), !dbg !13439
  store ptr %2, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %10, metadata !13440, metadata !DIExpression()), !dbg !13441
  store i64 %3, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !13442, metadata !DIExpression()), !dbg !13443
  store ptr %4, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %12, metadata !13444, metadata !DIExpression()), !dbg !13445
  store ptr %5, ptr %13, align 8
  call void @llvm.dbg.declare(metadata ptr %13, metadata !13446, metadata !DIExpression()), !dbg !13447
  store i64 %6, ptr %14, align 8
  call void @llvm.dbg.declare(metadata ptr %14, metadata !13448, metadata !DIExpression()), !dbg !13449
  call void @llvm.dbg.declare(metadata ptr %15, metadata !13450, metadata !DIExpression()), !dbg !13452
  %16 = getelementptr inbounds [3 x %struct.list_node], ptr %15, i64 0, i64 0, !dbg !13453
  %17 = load ptr, ptr %8, align 8, !dbg !13454
  %18 = getelementptr inbounds %struct.lwan_request_t_, ptr %17, i32 0, i32 8, !dbg !13455
  %19 = getelementptr inbounds %struct.lwan_response_t_, ptr %18, i32 0, i32 3, !dbg !13456
  store ptr %16, ptr %19, align 8, !dbg !13457
  %20 = load i64, ptr %11, align 8, !dbg !13458
  %21 = load ptr, ptr %8, align 8, !dbg !13459
  %22 = getelementptr inbounds %struct.lwan_request_t_, ptr %21, i32 0, i32 8, !dbg !13460
  %23 = getelementptr inbounds %struct.lwan_response_t_, ptr %22, i32 0, i32 2, !dbg !13461
  store i64 %20, ptr %23, align 8, !dbg !13462
  br label %24, !dbg !13463

24:                                               ; preds = %7
  %25 = getelementptr inbounds [3 x %struct.list_node], ptr %15, i64 0, i64 0, !dbg !13464
  %26 = getelementptr inbounds %struct.list_node, ptr %25, i32 0, i32 0, !dbg !13464
  store ptr @.str.13.174, ptr %26, align 16, !dbg !13464
  %27 = load ptr, ptr %10, align 8, !dbg !13464
  %28 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %27, i32 0, i32 1, !dbg !13464
  %29 = getelementptr inbounds %struct.anon.7, ptr %28, i32 0, i32 0, !dbg !13464
  %30 = getelementptr inbounds [31 x i8], ptr %29, i64 0, i64 0, !dbg !13464
  %31 = getelementptr inbounds [3 x %struct.list_node], ptr %15, i64 0, i64 0, !dbg !13464
  %32 = getelementptr inbounds %struct.list_node, ptr %31, i32 0, i32 1, !dbg !13464
  store ptr %30, ptr %32, align 8, !dbg !13464
  br label %33, !dbg !13464

33:                                               ; preds = %24
  %34 = load ptr, ptr %12, align 8, !dbg !13466
  %35 = icmp ne ptr %34, null, !dbg !13466
  br i1 %35, label %36, label %50, !dbg !13468

36:                                               ; preds = %33
  br label %37, !dbg !13469

37:                                               ; preds = %36
  %38 = getelementptr inbounds [3 x %struct.list_node], ptr %15, i64 0, i64 1, !dbg !13471
  %39 = getelementptr inbounds %struct.list_node, ptr %38, i32 0, i32 0, !dbg !13471
  store ptr @.str.14.175, ptr %39, align 16, !dbg !13471
  %40 = load ptr, ptr %12, align 8, !dbg !13471
  %41 = getelementptr inbounds [3 x %struct.list_node], ptr %15, i64 0, i64 1, !dbg !13471
  %42 = getelementptr inbounds %struct.list_node, ptr %41, i32 0, i32 1, !dbg !13471
  store ptr %40, ptr %42, align 8, !dbg !13471
  br label %43, !dbg !13471

43:                                               ; preds = %37
  br label %44, !dbg !13473

44:                                               ; preds = %43
  %45 = getelementptr inbounds [3 x %struct.list_node], ptr %15, i64 0, i64 2, !dbg !13474
  %46 = getelementptr inbounds %struct.list_node, ptr %45, i32 0, i32 0, !dbg !13474
  store ptr null, ptr %46, align 16, !dbg !13474
  %47 = getelementptr inbounds [3 x %struct.list_node], ptr %15, i64 0, i64 2, !dbg !13474
  %48 = getelementptr inbounds %struct.list_node, ptr %47, i32 0, i32 1, !dbg !13474
  store ptr null, ptr %48, align 8, !dbg !13474
  br label %49, !dbg !13474

49:                                               ; preds = %44
  br label %57, !dbg !13476

50:                                               ; preds = %33
  br label %51, !dbg !13477

51:                                               ; preds = %50
  %52 = getelementptr inbounds [3 x %struct.list_node], ptr %15, i64 0, i64 1, !dbg !13479
  %53 = getelementptr inbounds %struct.list_node, ptr %52, i32 0, i32 0, !dbg !13479
  store ptr null, ptr %53, align 16, !dbg !13479
  %54 = getelementptr inbounds [3 x %struct.list_node], ptr %15, i64 0, i64 1, !dbg !13479
  %55 = getelementptr inbounds %struct.list_node, ptr %54, i32 0, i32 1, !dbg !13479
  store ptr null, ptr %55, align 8, !dbg !13479
  br label %56, !dbg !13479

56:                                               ; preds = %51
  br label %57

57:                                               ; preds = %56, %49
  %58 = load ptr, ptr %8, align 8, !dbg !13481
  %59 = load i32, ptr %9, align 4, !dbg !13482
  %60 = load ptr, ptr %13, align 8, !dbg !13483
  %61 = load i64, ptr %14, align 8, !dbg !13484
  %62 = call i64 @lwan_prepare_response_header(ptr noundef %58, i32 noundef %59, ptr noundef %60, i64 noundef %61), !dbg !13485
  ret i64 %62, !dbg !13486
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @mmap_serve(ptr noundef %0, ptr noundef %1) #0 !dbg !13487 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  %9 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !13488, metadata !DIExpression()), !dbg !13489
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !13490, metadata !DIExpression()), !dbg !13491
  call void @llvm.dbg.declare(metadata ptr %5, metadata !13492, metadata !DIExpression()), !dbg !13493
  %10 = load ptr, ptr %4, align 8, !dbg !13494
  store ptr %10, ptr %5, align 8, !dbg !13493
  call void @llvm.dbg.declare(metadata ptr %6, metadata !13495, metadata !DIExpression()), !dbg !13496
  %11 = load ptr, ptr %5, align 8, !dbg !13497
  %12 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %11, i64 1, !dbg !13498
  store ptr %12, ptr %6, align 8, !dbg !13496
  call void @llvm.dbg.declare(metadata ptr %7, metadata !13499, metadata !DIExpression()), !dbg !13500
  call void @llvm.dbg.declare(metadata ptr %8, metadata !13501, metadata !DIExpression()), !dbg !13502
  call void @llvm.dbg.declare(metadata ptr %9, metadata !13503, metadata !DIExpression()), !dbg !13504
  %13 = load ptr, ptr %6, align 8, !dbg !13505
  %14 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %13, i32 0, i32 0, !dbg !13507
  %15 = getelementptr inbounds %struct.lwan_value_t_, ptr %14, i32 0, i32 1, !dbg !13508
  %16 = load i64, ptr %15, align 8, !dbg !13508
  %17 = icmp ne i64 %16, 0, !dbg !13505
  br i1 %17, label %18, label %34, !dbg !13509

18:                                               ; preds = %2
  %19 = load ptr, ptr %3, align 8, !dbg !13510
  %20 = getelementptr inbounds %struct.lwan_request_t_, ptr %19, i32 0, i32 0, !dbg !13511
  %21 = load i32, ptr %20, align 8, !dbg !13511
  %22 = and i32 %21, 8, !dbg !13512
  %23 = icmp ne i32 %22, 0, !dbg !13512
  br i1 %23, label %24, label %34, !dbg !13513

24:                                               ; preds = %18
  %25 = load ptr, ptr %6, align 8, !dbg !13514
  %26 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %25, i32 0, i32 0, !dbg !13516
  %27 = getelementptr inbounds %struct.lwan_value_t_, ptr %26, i32 0, i32 0, !dbg !13517
  %28 = load ptr, ptr %27, align 8, !dbg !13517
  store ptr %28, ptr %7, align 8, !dbg !13518
  %29 = load ptr, ptr %6, align 8, !dbg !13519
  %30 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %29, i32 0, i32 0, !dbg !13520
  %31 = getelementptr inbounds %struct.lwan_value_t_, ptr %30, i32 0, i32 1, !dbg !13521
  %32 = load i64, ptr %31, align 8, !dbg !13521
  store i64 %32, ptr %8, align 8, !dbg !13522
  %33 = load ptr, ptr @compression_deflate, align 8, !dbg !13523
  store ptr %33, ptr %9, align 8, !dbg !13524
  br label %44, !dbg !13525

34:                                               ; preds = %18, %2
  %35 = load ptr, ptr %6, align 8, !dbg !13526
  %36 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %35, i32 0, i32 1, !dbg !13528
  %37 = getelementptr inbounds %struct.lwan_value_t_, ptr %36, i32 0, i32 0, !dbg !13529
  %38 = load ptr, ptr %37, align 8, !dbg !13529
  store ptr %38, ptr %7, align 8, !dbg !13530
  %39 = load ptr, ptr %6, align 8, !dbg !13531
  %40 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %39, i32 0, i32 1, !dbg !13532
  %41 = getelementptr inbounds %struct.lwan_value_t_, ptr %40, i32 0, i32 1, !dbg !13533
  %42 = load i64, ptr %41, align 8, !dbg !13533
  store i64 %42, ptr %8, align 8, !dbg !13534
  %43 = load ptr, ptr @compression_none, align 8, !dbg !13535
  store ptr %43, ptr %9, align 8, !dbg !13536
  br label %44

44:                                               ; preds = %34, %24
  %45 = load ptr, ptr %3, align 8, !dbg !13537
  %46 = load ptr, ptr %5, align 8, !dbg !13538
  %47 = load ptr, ptr %9, align 8, !dbg !13539
  %48 = load ptr, ptr %7, align 8, !dbg !13540
  %49 = load i64, ptr %8, align 8, !dbg !13541
  %50 = call i32 @serve_contents_and_size(ptr noundef %45, ptr noundef %46, ptr noundef %47, ptr noundef %48, i64 noundef %49), !dbg !13542
  ret i32 %50, !dbg !13543
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @mmap_init(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 !dbg !13544 {
  %5 = alloca i1, align 1
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  store ptr %0, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !13545, metadata !DIExpression()), !dbg !13546
  store ptr %1, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !13547, metadata !DIExpression()), !dbg !13548
  store ptr %2, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !13549, metadata !DIExpression()), !dbg !13550
  store ptr %3, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !13551, metadata !DIExpression()), !dbg !13552
  call void @llvm.dbg.declare(metadata ptr %10, metadata !13553, metadata !DIExpression()), !dbg !13554
  %13 = load ptr, ptr %6, align 8, !dbg !13555
  %14 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %13, i64 1, !dbg !13556
  store ptr %14, ptr %10, align 8, !dbg !13554
  call void @llvm.dbg.declare(metadata ptr %11, metadata !13557, metadata !DIExpression()), !dbg !13558
  call void @llvm.dbg.declare(metadata ptr %12, metadata !13559, metadata !DIExpression()), !dbg !13560
  %15 = load ptr, ptr %7, align 8, !dbg !13561
  %16 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %15, i32 0, i32 1, !dbg !13562
  %17 = getelementptr inbounds %struct.anon.6, ptr %16, i32 0, i32 2, !dbg !13563
  %18 = load i32, ptr %17, align 8, !dbg !13563
  %19 = load ptr, ptr %8, align 8, !dbg !13564
  %20 = load ptr, ptr %7, align 8, !dbg !13565
  %21 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %20, i32 0, i32 1, !dbg !13566
  %22 = getelementptr inbounds %struct.anon.6, ptr %21, i32 0, i32 1, !dbg !13567
  %23 = load i64, ptr %22, align 8, !dbg !13567
  %24 = getelementptr inbounds i8, ptr %19, i64 %23, !dbg !13568
  %25 = getelementptr inbounds i8, ptr %24, i64 1, !dbg !13569
  %26 = load ptr, ptr %7, align 8, !dbg !13570
  %27 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %26, i32 0, i32 2, !dbg !13571
  %28 = load i32, ptr %27, align 8, !dbg !13571
  %29 = call i32 (i32, ptr, i32, ...) @openat(i32 noundef %18, ptr noundef %25, i32 noundef %28), !dbg !13572
  store i32 %29, ptr %11, align 4, !dbg !13573
  %30 = load i32, ptr %11, align 4, !dbg !13574
  %31 = icmp slt i32 %30, 0, !dbg !13574
  %32 = zext i1 %31 to i32, !dbg !13574
  %33 = sext i32 %32 to i64, !dbg !13574
  %34 = icmp ne i64 %33, 0, !dbg !13574
  br i1 %34, label %35, label %36, !dbg !13576

35:                                               ; preds = %4
  store i1 false, ptr %5, align 1, !dbg !13577
  br label %90, !dbg !13577

36:                                               ; preds = %4
  %37 = load ptr, ptr %9, align 8, !dbg !13578
  %38 = getelementptr inbounds %struct.stat, ptr %37, i32 0, i32 8, !dbg !13579
  %39 = load i64, ptr %38, align 8, !dbg !13579
  %40 = load i32, ptr %11, align 4, !dbg !13580
  %41 = call ptr @mmap(ptr noundef null, i64 noundef %39, i32 noundef 1, i32 noundef 1, i32 noundef %40, i64 noundef 0) #18, !dbg !13581
  %42 = load ptr, ptr %10, align 8, !dbg !13582
  %43 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %42, i32 0, i32 1, !dbg !13583
  %44 = getelementptr inbounds %struct.lwan_value_t_, ptr %43, i32 0, i32 0, !dbg !13584
  store ptr %41, ptr %44, align 8, !dbg !13585
  %45 = load ptr, ptr %10, align 8, !dbg !13586
  %46 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %45, i32 0, i32 1, !dbg !13586
  %47 = getelementptr inbounds %struct.lwan_value_t_, ptr %46, i32 0, i32 0, !dbg !13586
  %48 = load ptr, ptr %47, align 8, !dbg !13586
  %49 = icmp eq ptr %48, inttoptr (i64 -1 to ptr), !dbg !13586
  %50 = zext i1 %49 to i32, !dbg !13586
  %51 = sext i32 %50 to i64, !dbg !13586
  %52 = icmp ne i64 %51, 0, !dbg !13586
  br i1 %52, label %53, label %54, !dbg !13588

53:                                               ; preds = %36
  store i8 0, ptr %12, align 1, !dbg !13589
  br label %85, !dbg !13591

54:                                               ; preds = %36
  %55 = load ptr, ptr %10, align 8, !dbg !13592
  %56 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %55, i32 0, i32 1, !dbg !13592
  %57 = getelementptr inbounds %struct.lwan_value_t_, ptr %56, i32 0, i32 0, !dbg !13592
  %58 = load ptr, ptr %57, align 8, !dbg !13592
  %59 = load ptr, ptr %9, align 8, !dbg !13592
  %60 = getelementptr inbounds %struct.stat, ptr %59, i32 0, i32 8, !dbg !13592
  %61 = load i64, ptr %60, align 8, !dbg !13592
  %62 = call i32 @madvise(ptr noundef %58, i64 noundef %61, i32 noundef 3) #18, !dbg !13592
  %63 = icmp slt i32 %62, 0, !dbg !13592
  %64 = zext i1 %63 to i32, !dbg !13592
  %65 = sext i32 %64 to i64, !dbg !13592
  %66 = icmp ne i64 %65, 0, !dbg !13592
  br i1 %66, label %67, label %68, !dbg !13594

67:                                               ; preds = %54
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.1.142, i32 noundef 361, ptr noundef @__FUNCTION__.mmap_init, ptr noundef @.str.17.177), !dbg !13595
  br label %68, !dbg !13595

68:                                               ; preds = %67, %54
  %69 = load ptr, ptr %9, align 8, !dbg !13596
  %70 = getelementptr inbounds %struct.stat, ptr %69, i32 0, i32 8, !dbg !13597
  %71 = load i64, ptr %70, align 8, !dbg !13597
  %72 = load ptr, ptr %10, align 8, !dbg !13598
  %73 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %72, i32 0, i32 1, !dbg !13599
  %74 = getelementptr inbounds %struct.lwan_value_t_, ptr %73, i32 0, i32 1, !dbg !13600
  store i64 %71, ptr %74, align 8, !dbg !13601
  %75 = load ptr, ptr %10, align 8, !dbg !13602
  call void @compress_cached_entry(ptr noundef %75), !dbg !13603
  %76 = load ptr, ptr %8, align 8, !dbg !13604
  %77 = load ptr, ptr %7, align 8, !dbg !13605
  %78 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %77, i32 0, i32 1, !dbg !13606
  %79 = getelementptr inbounds %struct.anon.6, ptr %78, i32 0, i32 1, !dbg !13607
  %80 = load i64, ptr %79, align 8, !dbg !13607
  %81 = getelementptr inbounds i8, ptr %76, i64 %80, !dbg !13608
  %82 = call ptr @lwan_determine_mime_type_for_file_name(ptr noundef %81) #22, !dbg !13609
  %83 = load ptr, ptr %6, align 8, !dbg !13610
  %84 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %83, i32 0, i32 2, !dbg !13611
  store ptr %82, ptr %84, align 8, !dbg !13612
  store i8 1, ptr %12, align 1, !dbg !13613
  br label %85, !dbg !13614

85:                                               ; preds = %68, %53
  call void @llvm.dbg.label(metadata !13615), !dbg !13616
  %86 = load i32, ptr %11, align 4, !dbg !13617
  %87 = call i32 @close(i32 noundef %86), !dbg !13618
  %88 = load i8, ptr %12, align 1, !dbg !13619
  %89 = trunc i8 %88 to i1, !dbg !13619
  store i1 %89, ptr %5, align 1, !dbg !13620
  br label %90, !dbg !13620

90:                                               ; preds = %85, %35
  %91 = load i1, ptr %5, align 1, !dbg !13621
  ret i1 %91, !dbg !13621
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mmap_free(ptr noundef %0) #0 !dbg !13622 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !13623, metadata !DIExpression()), !dbg !13624
  call void @llvm.dbg.declare(metadata ptr %3, metadata !13625, metadata !DIExpression()), !dbg !13626
  %4 = load ptr, ptr %2, align 8, !dbg !13627
  store ptr %4, ptr %3, align 8, !dbg !13626
  %5 = load ptr, ptr %3, align 8, !dbg !13628
  %6 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %5, i32 0, i32 1, !dbg !13629
  %7 = getelementptr inbounds %struct.lwan_value_t_, ptr %6, i32 0, i32 0, !dbg !13630
  %8 = load ptr, ptr %7, align 8, !dbg !13630
  %9 = load ptr, ptr %3, align 8, !dbg !13631
  %10 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %9, i32 0, i32 1, !dbg !13632
  %11 = getelementptr inbounds %struct.lwan_value_t_, ptr %10, i32 0, i32 1, !dbg !13633
  %12 = load i64, ptr %11, align 8, !dbg !13633
  %13 = call i32 @munmap(ptr noundef %8, i64 noundef %12) #18, !dbg !13634
  %14 = load ptr, ptr %3, align 8, !dbg !13635
  %15 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %14, i32 0, i32 0, !dbg !13636
  %16 = getelementptr inbounds %struct.lwan_value_t_, ptr %15, i32 0, i32 0, !dbg !13637
  %17 = load ptr, ptr %16, align 8, !dbg !13637
  call void @free(ptr noundef %17) #18, !dbg !13638
  ret void, !dbg !13639
}

; Function Attrs: nounwind
declare i32 @munmap(ptr noundef, i64 noundef) #3

; Function Attrs: nounwind
declare ptr @mmap(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef, i64 noundef) #3

; Function Attrs: nounwind
declare i32 @madvise(ptr noundef, i64 noundef, i32 noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @compress_cached_entry(ptr noundef %0) #0 !dbg !13640 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !13643, metadata !DIExpression()), !dbg !13644
  %5 = load ptr, ptr %4, align 8, !dbg !13645
  %6 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %5, i32 0, i32 1, !dbg !13646
  %7 = getelementptr inbounds %struct.lwan_value_t_, ptr %6, i32 0, i32 1, !dbg !13647
  %8 = load i64, ptr %7, align 8, !dbg !13647
  %9 = call i64 @compressBound(i64 noundef %8), !dbg !13648
  %10 = load ptr, ptr %4, align 8, !dbg !13649
  %11 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %10, i32 0, i32 0, !dbg !13650
  %12 = getelementptr inbounds %struct.lwan_value_t_, ptr %11, i32 0, i32 1, !dbg !13651
  store i64 %9, ptr %12, align 8, !dbg !13652
  %13 = load ptr, ptr %4, align 8, !dbg !13653
  %14 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %13, i32 0, i32 0, !dbg !13653
  %15 = getelementptr inbounds %struct.lwan_value_t_, ptr %14, i32 0, i32 1, !dbg !13653
  %16 = load i64, ptr %15, align 8, !dbg !13653
  %17 = call noalias ptr @malloc(i64 noundef %16) #17, !dbg !13653
  %18 = load ptr, ptr %4, align 8, !dbg !13653
  %19 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %18, i32 0, i32 0, !dbg !13653
  %20 = getelementptr inbounds %struct.lwan_value_t_, ptr %19, i32 0, i32 0, !dbg !13653
  store ptr %17, ptr %20, align 8, !dbg !13653
  %21 = icmp ne ptr %17, null, !dbg !13653
  %22 = xor i1 %21, true, !dbg !13653
  %23 = zext i1 %22 to i32, !dbg !13653
  %24 = sext i32 %23 to i64, !dbg !13653
  %25 = icmp ne i64 %24, 0, !dbg !13653
  br i1 %25, label %26, label %27, !dbg !13655

26:                                               ; preds = %1
  br label %72, !dbg !13656

27:                                               ; preds = %1
  %28 = load ptr, ptr %4, align 8, !dbg !13657
  %29 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %28, i32 0, i32 0, !dbg !13657
  %30 = getelementptr inbounds %struct.lwan_value_t_, ptr %29, i32 0, i32 0, !dbg !13657
  %31 = load ptr, ptr %30, align 8, !dbg !13657
  %32 = load ptr, ptr %4, align 8, !dbg !13657
  %33 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %32, i32 0, i32 0, !dbg !13657
  %34 = getelementptr inbounds %struct.lwan_value_t_, ptr %33, i32 0, i32 1, !dbg !13657
  %35 = load ptr, ptr %4, align 8, !dbg !13657
  %36 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %35, i32 0, i32 1, !dbg !13657
  %37 = getelementptr inbounds %struct.lwan_value_t_, ptr %36, i32 0, i32 0, !dbg !13657
  %38 = load ptr, ptr %37, align 8, !dbg !13657
  %39 = load ptr, ptr %4, align 8, !dbg !13657
  %40 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %39, i32 0, i32 1, !dbg !13657
  %41 = getelementptr inbounds %struct.lwan_value_t_, ptr %40, i32 0, i32 1, !dbg !13657
  %42 = load i64, ptr %41, align 8, !dbg !13657
  %43 = call i32 @compress(ptr noundef %31, ptr noundef %34, ptr noundef %38, i64 noundef %42), !dbg !13657
  %44 = icmp ne i32 %43, 0, !dbg !13657
  %45 = zext i1 %44 to i32, !dbg !13657
  %46 = sext i32 %45 to i64, !dbg !13657
  %47 = icmp ne i64 %46, 0, !dbg !13657
  br i1 %47, label %48, label %49, !dbg !13659

48:                                               ; preds = %27
  br label %64, !dbg !13660

49:                                               ; preds = %27
  %50 = load ptr, ptr %4, align 8, !dbg !13661
  %51 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %50, i32 0, i32 0, !dbg !13663
  %52 = getelementptr inbounds %struct.lwan_value_t_, ptr %51, i32 0, i32 1, !dbg !13664
  %53 = load i64, ptr %52, align 8, !dbg !13664
  %54 = load ptr, ptr %4, align 8, !dbg !13665
  %55 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %54, i32 0, i32 1, !dbg !13666
  %56 = getelementptr inbounds %struct.lwan_value_t_, ptr %55, i32 0, i32 1, !dbg !13667
  %57 = load i64, ptr %56, align 8, !dbg !13667
  store i64 %53, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !13357, metadata !DIExpression()), !dbg !13668
  store i64 %57, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !13360, metadata !DIExpression()), !dbg !13670
  %58 = load i64, ptr %2, align 8, !dbg !13671
  %59 = add i64 %58, 27, !dbg !13672
  %60 = load i64, ptr %3, align 8, !dbg !13673
  %61 = icmp ult i64 %59, %60, !dbg !13674
  br i1 %61, label %62, label %63, !dbg !13675

62:                                               ; preds = %49
  br label %76, !dbg !13676

63:                                               ; preds = %49
  br label %64, !dbg !13677

64:                                               ; preds = %63, %48
  call void @llvm.dbg.label(metadata !13678), !dbg !13679
  %65 = load ptr, ptr %4, align 8, !dbg !13680
  %66 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %65, i32 0, i32 0, !dbg !13681
  %67 = getelementptr inbounds %struct.lwan_value_t_, ptr %66, i32 0, i32 0, !dbg !13682
  %68 = load ptr, ptr %67, align 8, !dbg !13682
  call void @free(ptr noundef %68) #18, !dbg !13683
  %69 = load ptr, ptr %4, align 8, !dbg !13684
  %70 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %69, i32 0, i32 0, !dbg !13685
  %71 = getelementptr inbounds %struct.lwan_value_t_, ptr %70, i32 0, i32 0, !dbg !13686
  store ptr null, ptr %71, align 8, !dbg !13687
  br label %72, !dbg !13684

72:                                               ; preds = %64, %26
  call void @llvm.dbg.label(metadata !13688), !dbg !13689
  %73 = load ptr, ptr %4, align 8, !dbg !13690
  %74 = getelementptr inbounds %struct.sendfile_cache_data_t_, ptr %73, i32 0, i32 0, !dbg !13691
  %75 = getelementptr inbounds %struct.lwan_value_t_, ptr %74, i32 0, i32 1, !dbg !13692
  store i64 0, ptr %75, align 8, !dbg !13693
  br label %76, !dbg !13694

76:                                               ; preds = %72, %62
  ret void, !dbg !13694
}

declare i64 @compressBound(i64 noundef) #4

declare i32 @compress(ptr noundef, ptr noundef, ptr noundef, i64 noundef) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @serve_contents_and_size(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, i64 noundef %4) #0 !dbg !13695 {
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i64, align 8
  %14 = alloca [4096 x i8], align 16
  %15 = alloca i64, align 8
  %16 = alloca i32, align 4
  %17 = alloca [2 x %struct.lwan_value_t_], align 16
  store ptr %0, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !13698, metadata !DIExpression()), !dbg !13699
  store ptr %1, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %10, metadata !13700, metadata !DIExpression()), !dbg !13701
  store ptr %2, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !13702, metadata !DIExpression()), !dbg !13703
  store ptr %3, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %12, metadata !13704, metadata !DIExpression()), !dbg !13705
  store i64 %4, ptr %13, align 8
  call void @llvm.dbg.declare(metadata ptr %13, metadata !13706, metadata !DIExpression()), !dbg !13707
  call void @llvm.dbg.declare(metadata ptr %14, metadata !13708, metadata !DIExpression()), !dbg !13709
  call void @llvm.dbg.declare(metadata ptr %15, metadata !13710, metadata !DIExpression()), !dbg !13711
  call void @llvm.dbg.declare(metadata ptr %16, metadata !13712, metadata !DIExpression()), !dbg !13713
  store i32 200, ptr %16, align 4, !dbg !13713
  %18 = load ptr, ptr %9, align 8, !dbg !13714
  %19 = load ptr, ptr %10, align 8, !dbg !13716
  %20 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %19, i32 0, i32 1, !dbg !13717
  %21 = getelementptr inbounds %struct.anon.7, ptr %20, i32 0, i32 1, !dbg !13718
  %22 = load i64, ptr %21, align 8, !dbg !13718
  store ptr %18, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !13216, metadata !DIExpression()), !dbg !13719
  store i64 %22, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !13222, metadata !DIExpression()), !dbg !13721
  %23 = load ptr, ptr %6, align 8, !dbg !13722
  %24 = getelementptr inbounds %struct.lwan_request_t_, ptr %23, i32 0, i32 7, !dbg !13723
  %25 = load i64, ptr %24, align 8, !dbg !13724
  %26 = icmp ne i64 %25, 0, !dbg !13722
  br i1 %26, label %27, label %33, !dbg !13725

27:                                               ; preds = %5
  %28 = load i64, ptr %7, align 8, !dbg !13726
  %29 = load ptr, ptr %6, align 8, !dbg !13727
  %30 = getelementptr inbounds %struct.lwan_request_t_, ptr %29, i32 0, i32 7, !dbg !13728
  %31 = load i64, ptr %30, align 8, !dbg !13729
  %32 = icmp sle i64 %28, %31, !dbg !13730
  br label %33

33:                                               ; preds = %27, %5
  %34 = phi i1 [ false, %5 ], [ %32, %27 ], !dbg !13731
  br i1 %34, label %35, label %36, !dbg !13732

35:                                               ; preds = %33
  store i32 304, ptr %16, align 4, !dbg !13733
  br label %36, !dbg !13734

36:                                               ; preds = %35, %33
  %37 = load ptr, ptr %9, align 8, !dbg !13735
  %38 = load i32, ptr %16, align 4, !dbg !13736
  %39 = load ptr, ptr %10, align 8, !dbg !13737
  %40 = load i64, ptr %13, align 8, !dbg !13738
  %41 = load ptr, ptr %11, align 8, !dbg !13739
  %42 = getelementptr inbounds [4096 x i8], ptr %14, i64 0, i64 0, !dbg !13740
  %43 = call i64 @prepare_headers(ptr noundef %37, i32 noundef %38, ptr noundef %39, i64 noundef %40, ptr noundef %41, ptr noundef %42, i64 noundef 512), !dbg !13741
  store i64 %43, ptr %15, align 8, !dbg !13742
  %44 = load i64, ptr %15, align 8, !dbg !13743
  %45 = icmp ne i64 %44, 0, !dbg !13743
  %46 = xor i1 %45, true, !dbg !13743
  %47 = zext i1 %46 to i32, !dbg !13743
  %48 = sext i32 %47 to i64, !dbg !13743
  %49 = icmp ne i64 %48, 0, !dbg !13743
  br i1 %49, label %50, label %51, !dbg !13745

50:                                               ; preds = %36
  store i32 500, ptr %8, align 4, !dbg !13746
  br label %81, !dbg !13746

51:                                               ; preds = %36
  %52 = load ptr, ptr %9, align 8, !dbg !13747
  %53 = getelementptr inbounds %struct.lwan_request_t_, ptr %52, i32 0, i32 0, !dbg !13749
  %54 = load i32, ptr %53, align 8, !dbg !13749
  %55 = and i32 %54, 2, !dbg !13750
  %56 = icmp ne i32 %55, 0, !dbg !13750
  br i1 %56, label %60, label %57, !dbg !13751

57:                                               ; preds = %51
  %58 = load i32, ptr %16, align 4, !dbg !13752
  %59 = icmp eq i32 %58, 304, !dbg !13753
  br i1 %59, label %60, label %65, !dbg !13754

60:                                               ; preds = %57, %51
  %61 = load ptr, ptr %9, align 8, !dbg !13755
  %62 = getelementptr inbounds [4096 x i8], ptr %14, i64 0, i64 0, !dbg !13757
  %63 = load i64, ptr %15, align 8, !dbg !13758
  %64 = call i64 @lwan_write(ptr noundef %61, ptr noundef %62, i64 noundef %63), !dbg !13759
  br label %79, !dbg !13760

65:                                               ; preds = %57
  call void @llvm.dbg.declare(metadata ptr %17, metadata !13761, metadata !DIExpression()), !dbg !13768
  %66 = getelementptr inbounds [2 x %struct.lwan_value_t_], ptr %17, i64 0, i64 0, !dbg !13769
  %67 = getelementptr inbounds %struct.lwan_value_t_, ptr %66, i32 0, i32 0, !dbg !13770
  %68 = getelementptr inbounds [4096 x i8], ptr %14, i64 0, i64 0, !dbg !13771
  store ptr %68, ptr %67, align 16, !dbg !13770
  %69 = getelementptr inbounds %struct.lwan_value_t_, ptr %66, i32 0, i32 1, !dbg !13770
  %70 = load i64, ptr %15, align 8, !dbg !13772
  store i64 %70, ptr %69, align 8, !dbg !13770
  %71 = getelementptr inbounds %struct.lwan_value_t_, ptr %66, i64 1, !dbg !13769
  %72 = getelementptr inbounds %struct.lwan_value_t_, ptr %71, i32 0, i32 0, !dbg !13773
  %73 = load ptr, ptr %12, align 8, !dbg !13774
  store ptr %73, ptr %72, align 16, !dbg !13773
  %74 = getelementptr inbounds %struct.lwan_value_t_, ptr %71, i32 0, i32 1, !dbg !13773
  %75 = load i64, ptr %13, align 8, !dbg !13775
  store i64 %75, ptr %74, align 8, !dbg !13773
  %76 = load ptr, ptr %9, align 8, !dbg !13776
  %77 = getelementptr inbounds [2 x %struct.lwan_value_t_], ptr %17, i64 0, i64 0, !dbg !13777
  %78 = call i64 @lwan_writev(ptr noundef %76, ptr noundef %77, i32 noundef 2), !dbg !13778
  br label %79

79:                                               ; preds = %65, %60
  %80 = load i32, ptr %16, align 4, !dbg !13779
  store i32 %80, ptr %8, align 4, !dbg !13780
  br label %81, !dbg !13780

81:                                               ; preds = %79, %50
  %82 = load i32, ptr %8, align 4, !dbg !13781
  ret i32 %82, !dbg !13781
}

; Function Attrs: nounwind
declare ptr @strncpy(ptr noundef, ptr noundef, i64 noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @dirlist_serve(ptr noundef %0, ptr noundef %1) #0 !dbg !13782 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !13783, metadata !DIExpression()), !dbg !13784
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !13785, metadata !DIExpression()), !dbg !13786
  call void @llvm.dbg.declare(metadata ptr %5, metadata !13787, metadata !DIExpression()), !dbg !13788
  %7 = load ptr, ptr %4, align 8, !dbg !13789
  store ptr %7, ptr %5, align 8, !dbg !13788
  call void @llvm.dbg.declare(metadata ptr %6, metadata !13790, metadata !DIExpression()), !dbg !13791
  %8 = load ptr, ptr %5, align 8, !dbg !13792
  %9 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %8, i64 1, !dbg !13793
  store ptr %9, ptr %6, align 8, !dbg !13791
  %10 = load ptr, ptr %3, align 8, !dbg !13794
  %11 = load ptr, ptr %5, align 8, !dbg !13795
  %12 = load ptr, ptr @compression_none, align 8, !dbg !13796
  %13 = load ptr, ptr %6, align 8, !dbg !13797
  %14 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %13, i32 0, i32 0, !dbg !13797
  %15 = load ptr, ptr %14, align 8, !dbg !13797
  %16 = getelementptr inbounds %struct.strbuf_t_, ptr %15, i32 0, i32 0, !dbg !13797
  %17 = load ptr, ptr %16, align 8, !dbg !13797
  %18 = load ptr, ptr %6, align 8, !dbg !13798
  %19 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %18, i32 0, i32 0, !dbg !13798
  %20 = load ptr, ptr %19, align 8, !dbg !13798
  %21 = getelementptr inbounds %struct.strbuf_t_, ptr %20, i32 0, i32 1, !dbg !13798
  %22 = getelementptr inbounds %struct.timespec, ptr %21, i32 0, i32 1, !dbg !13798
  %23 = load i64, ptr %22, align 8, !dbg !13798
  %24 = call i32 @serve_contents_and_size(ptr noundef %10, ptr noundef %11, ptr noundef %12, ptr noundef %17, i64 noundef %23), !dbg !13799
  ret i32 %24, !dbg !13800
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dirlist_init(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 !dbg !13801 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca %struct.file_list_t, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !13802, metadata !DIExpression()), !dbg !13803
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !13804, metadata !DIExpression()), !dbg !13805
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !13806, metadata !DIExpression()), !dbg !13807
  store ptr %3, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !13808, metadata !DIExpression()), !dbg !13809
  call void @llvm.dbg.declare(metadata ptr %9, metadata !13810, metadata !DIExpression()), !dbg !13811
  %11 = load ptr, ptr %5, align 8, !dbg !13812
  %12 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %11, i64 1, !dbg !13813
  store ptr %12, ptr %9, align 8, !dbg !13811
  call void @llvm.dbg.declare(metadata ptr %10, metadata !13814, metadata !DIExpression()), !dbg !13815
  call void @llvm.memset.p0.i64(ptr align 8 %10, i8 0, i64 72, i1 false), !dbg !13815
  %13 = getelementptr inbounds %struct.file_list_t, ptr %10, i32 0, i32 0, !dbg !13816
  %14 = load ptr, ptr %7, align 8, !dbg !13817
  store ptr %14, ptr %13, align 8, !dbg !13816
  %15 = getelementptr inbounds %struct.file_list_t, ptr %10, i32 0, i32 1, !dbg !13816
  %16 = load ptr, ptr %7, align 8, !dbg !13818
  %17 = load ptr, ptr %6, align 8, !dbg !13819
  %18 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %17, i32 0, i32 1, !dbg !13820
  %19 = getelementptr inbounds %struct.anon.6, ptr %18, i32 0, i32 1, !dbg !13821
  %20 = load i64, ptr %19, align 8, !dbg !13821
  %21 = getelementptr inbounds i8, ptr %16, i64 %20, !dbg !13822
  store ptr %21, ptr %15, align 8, !dbg !13816
  %22 = load ptr, ptr %6, align 8, !dbg !13823
  %23 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %22, i32 0, i32 4, !dbg !13824
  %24 = load ptr, ptr %23, align 8, !dbg !13824
  %25 = call ptr @lwan_tpl_apply(ptr noundef %24, ptr noundef %10), !dbg !13825
  %26 = load ptr, ptr %9, align 8, !dbg !13826
  %27 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %26, i32 0, i32 0, !dbg !13827
  store ptr %25, ptr %27, align 8, !dbg !13828
  %28 = load ptr, ptr %5, align 8, !dbg !13829
  %29 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %28, i32 0, i32 2, !dbg !13830
  store ptr @.str.15.180, ptr %29, align 8, !dbg !13831
  %30 = load ptr, ptr %9, align 8, !dbg !13832
  %31 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %30, i32 0, i32 0, !dbg !13833
  %32 = load ptr, ptr %31, align 8, !dbg !13833
  %33 = icmp ne ptr %32, null, !dbg !13834
  %34 = xor i1 %33, true, !dbg !13834
  %35 = xor i1 %34, true, !dbg !13835
  ret i1 %35, !dbg !13836
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @dirlist_free(ptr noundef %0) #0 !dbg !13837 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !13838, metadata !DIExpression()), !dbg !13839
  call void @llvm.dbg.declare(metadata ptr %3, metadata !13840, metadata !DIExpression()), !dbg !13841
  %4 = load ptr, ptr %2, align 8, !dbg !13842
  store ptr %4, ptr %3, align 8, !dbg !13841
  %5 = load ptr, ptr %3, align 8, !dbg !13843
  %6 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %5, i32 0, i32 0, !dbg !13844
  %7 = load ptr, ptr %6, align 8, !dbg !13844
  call void @strbuf_free(ptr noundef %7), !dbg !13845
  ret void, !dbg !13846
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @redir_serve(ptr noundef %0, ptr noundef %1) #0 !dbg !13847 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca [4096 x i8], align 16
  %9 = alloca i64, align 8
  %10 = alloca [2 x %struct.list_node], align 16
  %11 = alloca [2 x %struct.lwan_value_t_], align 16
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !13848, metadata !DIExpression()), !dbg !13849
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !13850, metadata !DIExpression()), !dbg !13851
  call void @llvm.dbg.declare(metadata ptr %6, metadata !13852, metadata !DIExpression()), !dbg !13853
  %12 = load ptr, ptr %5, align 8, !dbg !13854
  store ptr %12, ptr %6, align 8, !dbg !13853
  call void @llvm.dbg.declare(metadata ptr %7, metadata !13855, metadata !DIExpression()), !dbg !13856
  %13 = load ptr, ptr %6, align 8, !dbg !13857
  %14 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %13, i64 1, !dbg !13858
  store ptr %14, ptr %7, align 8, !dbg !13856
  call void @llvm.dbg.declare(metadata ptr %8, metadata !13859, metadata !DIExpression()), !dbg !13860
  call void @llvm.dbg.declare(metadata ptr %9, metadata !13861, metadata !DIExpression()), !dbg !13862
  call void @llvm.dbg.declare(metadata ptr %10, metadata !13863, metadata !DIExpression()), !dbg !13865
  %15 = getelementptr inbounds [2 x %struct.list_node], ptr %10, i64 0, i64 0, !dbg !13866
  %16 = load ptr, ptr %4, align 8, !dbg !13867
  %17 = getelementptr inbounds %struct.lwan_request_t_, ptr %16, i32 0, i32 8, !dbg !13868
  %18 = getelementptr inbounds %struct.lwan_response_t_, ptr %17, i32 0, i32 3, !dbg !13869
  store ptr %15, ptr %18, align 8, !dbg !13870
  %19 = load ptr, ptr %7, align 8, !dbg !13871
  %20 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %19, i32 0, i32 0, !dbg !13872
  %21 = load ptr, ptr %20, align 8, !dbg !13872
  %22 = call i64 @strlen(ptr noundef %21) #22, !dbg !13873
  %23 = load ptr, ptr %4, align 8, !dbg !13874
  %24 = getelementptr inbounds %struct.lwan_request_t_, ptr %23, i32 0, i32 8, !dbg !13875
  %25 = getelementptr inbounds %struct.lwan_response_t_, ptr %24, i32 0, i32 2, !dbg !13876
  store i64 %22, ptr %25, align 8, !dbg !13877
  br label %26, !dbg !13878

26:                                               ; preds = %2
  %27 = getelementptr inbounds [2 x %struct.list_node], ptr %10, i64 0, i64 0, !dbg !13879
  %28 = getelementptr inbounds %struct.list_node, ptr %27, i32 0, i32 0, !dbg !13879
  store ptr @.str.10.183, ptr %28, align 16, !dbg !13879
  %29 = load ptr, ptr %7, align 8, !dbg !13879
  %30 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %29, i32 0, i32 0, !dbg !13879
  %31 = load ptr, ptr %30, align 8, !dbg !13879
  %32 = getelementptr inbounds [2 x %struct.list_node], ptr %10, i64 0, i64 0, !dbg !13879
  %33 = getelementptr inbounds %struct.list_node, ptr %32, i32 0, i32 1, !dbg !13879
  store ptr %31, ptr %33, align 8, !dbg !13879
  br label %34, !dbg !13879

34:                                               ; preds = %26
  br label %35, !dbg !13881

35:                                               ; preds = %34
  %36 = getelementptr inbounds [2 x %struct.list_node], ptr %10, i64 0, i64 1, !dbg !13882
  %37 = getelementptr inbounds %struct.list_node, ptr %36, i32 0, i32 0, !dbg !13882
  store ptr null, ptr %37, align 16, !dbg !13882
  %38 = getelementptr inbounds [2 x %struct.list_node], ptr %10, i64 0, i64 1, !dbg !13882
  %39 = getelementptr inbounds %struct.list_node, ptr %38, i32 0, i32 1, !dbg !13882
  store ptr null, ptr %39, align 8, !dbg !13882
  br label %40, !dbg !13882

40:                                               ; preds = %35
  %41 = load ptr, ptr %4, align 8, !dbg !13884
  %42 = getelementptr inbounds [4096 x i8], ptr %8, i64 0, i64 0, !dbg !13885
  %43 = call i64 @lwan_prepare_response_header(ptr noundef %41, i32 noundef 301, ptr noundef %42, i64 noundef 4096), !dbg !13886
  store i64 %43, ptr %9, align 8, !dbg !13887
  %44 = load i64, ptr %9, align 8, !dbg !13888
  %45 = icmp ne i64 %44, 0, !dbg !13888
  %46 = xor i1 %45, true, !dbg !13888
  %47 = zext i1 %46 to i32, !dbg !13888
  %48 = sext i32 %47 to i64, !dbg !13888
  %49 = icmp ne i64 %48, 0, !dbg !13888
  br i1 %49, label %50, label %51, !dbg !13890

50:                                               ; preds = %40
  store i32 500, ptr %3, align 4, !dbg !13891
  br label %70, !dbg !13891

51:                                               ; preds = %40
  call void @llvm.dbg.declare(metadata ptr %11, metadata !13892, metadata !DIExpression()), !dbg !13893
  %52 = getelementptr inbounds [2 x %struct.lwan_value_t_], ptr %11, i64 0, i64 0, !dbg !13894
  %53 = getelementptr inbounds %struct.lwan_value_t_, ptr %52, i32 0, i32 0, !dbg !13895
  %54 = getelementptr inbounds [4096 x i8], ptr %8, i64 0, i64 0, !dbg !13896
  store ptr %54, ptr %53, align 16, !dbg !13895
  %55 = getelementptr inbounds %struct.lwan_value_t_, ptr %52, i32 0, i32 1, !dbg !13895
  %56 = load i64, ptr %9, align 8, !dbg !13897
  store i64 %56, ptr %55, align 8, !dbg !13895
  %57 = getelementptr inbounds %struct.lwan_value_t_, ptr %52, i64 1, !dbg !13894
  %58 = getelementptr inbounds %struct.lwan_value_t_, ptr %57, i32 0, i32 0, !dbg !13898
  %59 = load ptr, ptr %7, align 8, !dbg !13899
  %60 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %59, i32 0, i32 0, !dbg !13900
  %61 = load ptr, ptr %60, align 8, !dbg !13900
  store ptr %61, ptr %58, align 16, !dbg !13898
  %62 = getelementptr inbounds %struct.lwan_value_t_, ptr %57, i32 0, i32 1, !dbg !13898
  %63 = load ptr, ptr %4, align 8, !dbg !13901
  %64 = getelementptr inbounds %struct.lwan_request_t_, ptr %63, i32 0, i32 8, !dbg !13902
  %65 = getelementptr inbounds %struct.lwan_response_t_, ptr %64, i32 0, i32 2, !dbg !13903
  %66 = load i64, ptr %65, align 8, !dbg !13903
  store i64 %66, ptr %62, align 8, !dbg !13898
  %67 = load ptr, ptr %4, align 8, !dbg !13904
  %68 = getelementptr inbounds [2 x %struct.lwan_value_t_], ptr %11, i64 0, i64 0, !dbg !13905
  %69 = call i64 @lwan_writev(ptr noundef %67, ptr noundef %68, i32 noundef 2), !dbg !13906
  store i32 301, ptr %3, align 4, !dbg !13907
  br label %70, !dbg !13907

70:                                               ; preds = %51, %50
  %71 = load i32, ptr %3, align 4, !dbg !13908
  ret i32 %71, !dbg !13908
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @redir_init(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 !dbg !13909 {
  %5 = alloca i1, align 1
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  store ptr %0, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !13910, metadata !DIExpression()), !dbg !13911
  store ptr %1, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !13912, metadata !DIExpression()), !dbg !13913
  store ptr %2, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !13914, metadata !DIExpression()), !dbg !13915
  store ptr %3, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !13916, metadata !DIExpression()), !dbg !13917
  call void @llvm.dbg.declare(metadata ptr %10, metadata !13918, metadata !DIExpression()), !dbg !13919
  %11 = load ptr, ptr %6, align 8, !dbg !13920
  %12 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %11, i64 1, !dbg !13921
  store ptr %12, ptr %10, align 8, !dbg !13919
  %13 = load ptr, ptr %10, align 8, !dbg !13922
  %14 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %13, i32 0, i32 0, !dbg !13924
  %15 = load ptr, ptr %8, align 8, !dbg !13925
  %16 = load ptr, ptr %7, align 8, !dbg !13926
  %17 = getelementptr inbounds %struct.serve_files_priv_t_, ptr %16, i32 0, i32 1, !dbg !13927
  %18 = getelementptr inbounds %struct.anon.6, ptr %17, i32 0, i32 1, !dbg !13928
  %19 = load i64, ptr %18, align 8, !dbg !13928
  %20 = getelementptr inbounds i8, ptr %15, i64 %19, !dbg !13929
  %21 = call i32 (ptr, ptr, ...) @asprintf(ptr noundef %14, ptr noundef @.str.11.181, ptr noundef %20) #18, !dbg !13930
  %22 = icmp slt i32 %21, 0, !dbg !13931
  br i1 %22, label %23, label %24, !dbg !13932

23:                                               ; preds = %4
  store i1 false, ptr %5, align 1, !dbg !13933
  br label %27, !dbg !13933

24:                                               ; preds = %4
  %25 = load ptr, ptr %6, align 8, !dbg !13934
  %26 = getelementptr inbounds %struct.file_cache_entry_t_, ptr %25, i32 0, i32 2, !dbg !13935
  store ptr @.str.12.182, ptr %26, align 8, !dbg !13936
  store i1 true, ptr %5, align 1, !dbg !13937
  br label %27, !dbg !13937

27:                                               ; preds = %24, %23
  %28 = load i1, ptr %5, align 1, !dbg !13938
  ret i1 %28, !dbg !13938
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @redir_free(ptr noundef %0) #0 !dbg !13939 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !13940, metadata !DIExpression()), !dbg !13941
  call void @llvm.dbg.declare(metadata ptr %3, metadata !13942, metadata !DIExpression()), !dbg !13943
  %4 = load ptr, ptr %2, align 8, !dbg !13944
  store ptr %4, ptr %3, align 8, !dbg !13943
  %5 = load ptr, ptr %3, align 8, !dbg !13945
  %6 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %5, i32 0, i32 0, !dbg !13946
  %7 = load ptr, ptr %6, align 8, !dbg !13946
  call void @free(ptr noundef %7) #18, !dbg !13947
  ret void, !dbg !13948
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_socket_init(ptr noundef %0) #0 !dbg !13949 {
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.linger, align 4
  %6 = alloca [1 x i32], align 4
  %7 = alloca [1 x i32], align 4
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !14020, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.declare(metadata ptr %3, metadata !14022, metadata !DIExpression()), !dbg !14023
  call void @llvm.dbg.declare(metadata ptr %4, metadata !14024, metadata !DIExpression()), !dbg !14025
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.186, i32 noundef 233, ptr noundef @__FUNCTION__.lwan_socket_init, ptr noundef @.str.1.187), !dbg !14026
  %8 = call i32 @sd_listen_fds(i32 noundef 1), !dbg !14027
  store i32 %8, ptr %4, align 4, !dbg !14028
  %9 = load i32, ptr %4, align 4, !dbg !14029
  %10 = icmp sgt i32 %9, 1, !dbg !14031
  br i1 %10, label %11, label %12, !dbg !14032

11:                                               ; preds = %1
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_debug(ptr noundef @.str.186, i32 noundef 237, ptr noundef @__FUNCTION__.lwan_socket_init, ptr noundef @.str.2.188) #23, !dbg !14033
  unreachable, !dbg !14033

12:                                               ; preds = %1
  %13 = load i32, ptr %4, align 4, !dbg !14035
  %14 = icmp eq i32 %13, 1, !dbg !14037
  br i1 %14, label %15, label %17, !dbg !14038

15:                                               ; preds = %12
  %16 = call i32 @setup_socket_from_systemd(), !dbg !14039
  store i32 %16, ptr %3, align 4, !dbg !14041
  br label %20, !dbg !14042

17:                                               ; preds = %12
  %18 = load ptr, ptr %2, align 8, !dbg !14043
  %19 = call i32 @setup_socket_normally(ptr noundef %18), !dbg !14045
  store i32 %19, ptr %3, align 4, !dbg !14046
  br label %20

20:                                               ; preds = %17, %15
  br label %21

21:                                               ; preds = %20
  br label %22, !dbg !14047

22:                                               ; preds = %21
  %23 = load i32, ptr %3, align 4, !dbg !14048
  %24 = getelementptr inbounds %struct.linger, ptr %5, i32 0, i32 0, !dbg !14048
  store i32 1, ptr %24, align 4, !dbg !14048
  %25 = getelementptr inbounds %struct.linger, ptr %5, i32 0, i32 1, !dbg !14048
  store i32 1, ptr %25, align 4, !dbg !14048
  %26 = call i32 @setsockopt(i32 noundef %23, i32 noundef 1, i32 noundef 13, ptr noundef %5, i32 noundef 8) #18, !dbg !14048
  %27 = icmp slt i32 %26, 0, !dbg !14048
  br i1 %27, label %28, label %29, !dbg !14051

28:                                               ; preds = %22
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.186, i32 noundef 245, ptr noundef @__FUNCTION__.lwan_socket_init, ptr noundef @.str.3.189) #23, !dbg !14048
  unreachable, !dbg !14048

29:                                               ; preds = %22
  br label %30, !dbg !14051

30:                                               ; preds = %29
  br label %31, !dbg !14052

31:                                               ; preds = %30
  %32 = load i32, ptr %3, align 4, !dbg !14053
  %33 = getelementptr inbounds [1 x i32], ptr %6, i64 0, i64 0, !dbg !14053
  store i32 5, ptr %33, align 4, !dbg !14053
  %34 = getelementptr inbounds [1 x i32], ptr %6, i64 0, i64 0, !dbg !14053
  %35 = call i32 @setsockopt(i32 noundef %32, i32 noundef 6, i32 noundef 23, ptr noundef %34, i32 noundef 4) #18, !dbg !14053
  %36 = icmp slt i32 %35, 0, !dbg !14053
  br i1 %36, label %37, label %38, !dbg !14056

37:                                               ; preds = %31
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_warning_debug(ptr noundef @.str.186, i32 noundef 248, ptr noundef @__FUNCTION__.lwan_socket_init, ptr noundef @.str.4.190, ptr noundef @.str.5.191), !dbg !14053
  br label %38, !dbg !14053

38:                                               ; preds = %37, %31
  br label %39, !dbg !14056

39:                                               ; preds = %38
  br label %40, !dbg !14057

40:                                               ; preds = %39
  %41 = load i32, ptr %3, align 4, !dbg !14058
  %42 = getelementptr inbounds [1 x i32], ptr %7, i64 0, i64 0, !dbg !14058
  store i32 0, ptr %42, align 4, !dbg !14058
  %43 = getelementptr inbounds [1 x i32], ptr %7, i64 0, i64 0, !dbg !14058
  %44 = call i32 @setsockopt(i32 noundef %41, i32 noundef 6, i32 noundef 12, ptr noundef %43, i32 noundef 4) #18, !dbg !14058
  %45 = icmp slt i32 %44, 0, !dbg !14058
  br i1 %45, label %46, label %47, !dbg !14061

46:                                               ; preds = %40
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_warning_debug(ptr noundef @.str.186, i32 noundef 250, ptr noundef @__FUNCTION__.lwan_socket_init, ptr noundef @.str.4.190, ptr noundef @.str.6.192), !dbg !14058
  br label %47, !dbg !14058

47:                                               ; preds = %46, %40
  br label %48, !dbg !14061

48:                                               ; preds = %47
  %49 = load i32, ptr %3, align 4, !dbg !14062
  %50 = load ptr, ptr %2, align 8, !dbg !14063
  %51 = getelementptr inbounds %struct.lwan_t_, ptr %50, i32 0, i32 5, !dbg !14064
  store i32 %49, ptr %51, align 8, !dbg !14065
  ret void, !dbg !14066
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setup_socket_from_systemd() #0 !dbg !14067 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata ptr %1, metadata !14070, metadata !DIExpression()), !dbg !14071
  store i32 3, ptr %1, align 4, !dbg !14071
  %3 = load i32, ptr %1, align 4, !dbg !14072
  %4 = call i32 @sd_is_socket_inet(i32 noundef %3, i32 noundef 0, i32 noundef 1, i32 noundef 1, i16 noundef zeroext 0), !dbg !14074
  %5 = icmp ne i32 %4, 0, !dbg !14074
  br i1 %5, label %7, label %6, !dbg !14075

6:                                                ; preds = %0
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_debug(ptr noundef @.str.186, i32 noundef 65, ptr noundef @__FUNCTION__.setup_socket_from_systemd, ptr noundef @.str.7.208) #23, !dbg !14076
  unreachable, !dbg !14076

7:                                                ; preds = %0
  call void @llvm.dbg.declare(metadata ptr %2, metadata !14077, metadata !DIExpression()), !dbg !14078
  %8 = load i32, ptr %1, align 4, !dbg !14079
  %9 = call i32 (i32, i32, ...) @fcntl(i32 noundef %8, i32 noundef 1), !dbg !14080
  store i32 %9, ptr %2, align 4, !dbg !14078
  %10 = load i32, ptr %2, align 4, !dbg !14081
  %11 = icmp slt i32 %10, 0, !dbg !14083
  br i1 %11, label %12, label %13, !dbg !14084

12:                                               ; preds = %7
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.186, i32 noundef 69, ptr noundef @__FUNCTION__.setup_socket_from_systemd, ptr noundef @.str.8.209) #23, !dbg !14085
  unreachable, !dbg !14085

13:                                               ; preds = %7
  %14 = load i32, ptr %1, align 4, !dbg !14086
  %15 = load i32, ptr %2, align 4, !dbg !14088
  %16 = or i32 %15, 1, !dbg !14089
  %17 = call i32 (i32, i32, ...) @fcntl(i32 noundef %14, i32 noundef 2, i32 noundef %16), !dbg !14090
  %18 = icmp slt i32 %17, 0, !dbg !14091
  br i1 %18, label %19, label %20, !dbg !14092

19:                                               ; preds = %13
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.186, i32 noundef 71, ptr noundef @__FUNCTION__.setup_socket_from_systemd, ptr noundef @.str.9.210) #23, !dbg !14093
  unreachable, !dbg !14093

20:                                               ; preds = %13
  %21 = load i32, ptr %1, align 4, !dbg !14094
  ret i32 %21, !dbg !14095
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setup_socket_normally(ptr noundef %0) #0 !dbg !14096 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca i16, align 2
  %11 = alloca ptr, align 8
  %12 = alloca %struct.addrinfo, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !14099, metadata !DIExpression()), !dbg !14100
  call void @llvm.dbg.declare(metadata ptr %3, metadata !14101, metadata !DIExpression()), !dbg !14102
  call void @llvm.dbg.declare(metadata ptr %4, metadata !14103, metadata !DIExpression()), !dbg !14104
  call void @llvm.dbg.declare(metadata ptr %5, metadata !14105, metadata !DIExpression()), !dbg !14106
  call void @llvm.dbg.declare(metadata ptr %6, metadata !14107, metadata !DIExpression()), !dbg !14109
  %15 = load ptr, ptr %2, align 8, !dbg !14109
  %16 = getelementptr inbounds %struct.lwan_t_, ptr %15, i32 0, i32 4, !dbg !14109
  %17 = getelementptr inbounds %struct.lwan_config_t_, ptr %16, i32 0, i32 0, !dbg !14109
  %18 = load ptr, ptr %17, align 8, !dbg !14109
  store ptr %18, ptr %6, align 8, !dbg !14109
  call void @llvm.dbg.declare(metadata ptr %7, metadata !14110, metadata !DIExpression()), !dbg !14109
  %19 = load ptr, ptr %6, align 8, !dbg !14109
  %20 = call i64 @strlen(ptr noundef %19) #22, !dbg !14109
  %21 = add i64 %20, 1, !dbg !14109
  store i64 %21, ptr %7, align 8, !dbg !14109
  call void @llvm.dbg.declare(metadata ptr %8, metadata !14111, metadata !DIExpression()), !dbg !14109
  %22 = load i64, ptr %7, align 8, !dbg !14109
  %23 = alloca i8, i64 %22, align 16, !dbg !14109
  store ptr %23, ptr %8, align 8, !dbg !14109
  %24 = load ptr, ptr %8, align 8, !dbg !14109
  %25 = load ptr, ptr %6, align 8, !dbg !14109
  %26 = load i64, ptr %7, align 8, !dbg !14109
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %24, ptr align 1 %25, i64 %26, i1 false), !dbg !14109
  store ptr %24, ptr %9, align 8, !dbg !14109
  %27 = load ptr, ptr %9, align 8, !dbg !14109
  store ptr %27, ptr %5, align 8, !dbg !14106
  call void @llvm.dbg.declare(metadata ptr %10, metadata !14112, metadata !DIExpression()), !dbg !14113
  %28 = load ptr, ptr %5, align 8, !dbg !14114
  %29 = call zeroext i16 @parse_listener.193(ptr noundef %28, ptr noundef %3, ptr noundef %4), !dbg !14115
  store i16 %29, ptr %10, align 2, !dbg !14113
  %30 = load i16, ptr %10, align 2, !dbg !14116
  %31 = zext i16 %30 to i32, !dbg !14116
  %32 = icmp eq i32 %31, 0, !dbg !14118
  br i1 %32, label %33, label %38, !dbg !14119

33:                                               ; preds = %1
  %34 = load ptr, ptr %2, align 8, !dbg !14120
  %35 = getelementptr inbounds %struct.lwan_t_, ptr %34, i32 0, i32 4, !dbg !14120
  %36 = getelementptr inbounds %struct.lwan_config_t_, ptr %35, i32 0, i32 0, !dbg !14120
  %37 = load ptr, ptr %36, align 8, !dbg !14120
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_debug(ptr noundef @.str.186, i32 noundef 206, ptr noundef @__FUNCTION__.setup_socket_normally, ptr noundef @.str.10.194, ptr noundef %37) #23, !dbg !14120
  unreachable, !dbg !14120

38:                                               ; preds = %1
  call void @llvm.dbg.declare(metadata ptr %11, metadata !14121, metadata !DIExpression()), !dbg !14139
  call void @llvm.dbg.declare(metadata ptr %12, metadata !14140, metadata !DIExpression()), !dbg !14141
  call void @llvm.memset.p0.i64(ptr align 8 %12, i8 0, i64 48, i1 false), !dbg !14141
  %39 = getelementptr inbounds %struct.addrinfo, ptr %12, i32 0, i32 0, !dbg !14142
  store i32 1, ptr %39, align 8, !dbg !14142
  %40 = getelementptr inbounds %struct.addrinfo, ptr %12, i32 0, i32 1, !dbg !14142
  %41 = load i16, ptr %10, align 2, !dbg !14143
  %42 = zext i16 %41 to i32, !dbg !14143
  store i32 %42, ptr %40, align 4, !dbg !14142
  %43 = getelementptr inbounds %struct.addrinfo, ptr %12, i32 0, i32 2, !dbg !14142
  store i32 1, ptr %43, align 8, !dbg !14142
  call void @llvm.dbg.declare(metadata ptr %13, metadata !14144, metadata !DIExpression()), !dbg !14145
  %44 = load ptr, ptr %3, align 8, !dbg !14146
  %45 = load ptr, ptr %4, align 8, !dbg !14147
  %46 = call i32 @getaddrinfo(ptr noundef %44, ptr noundef %45, ptr noundef %12, ptr noundef %11), !dbg !14148
  store i32 %46, ptr %13, align 4, !dbg !14145
  %47 = load i32, ptr %13, align 4, !dbg !14149
  %48 = icmp ne i32 %47, 0, !dbg !14149
  br i1 %48, label %49, label %52, !dbg !14151

49:                                               ; preds = %38
  %50 = load i32, ptr %13, align 4, !dbg !14152
  %51 = call ptr @gai_strerror(i32 noundef %50) #18, !dbg !14152
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_debug(ptr noundef @.str.186, i32 noundef 217, ptr noundef @__FUNCTION__.setup_socket_normally, ptr noundef @.str.11.195, ptr noundef %51) #23, !dbg !14152
  unreachable, !dbg !14152

52:                                               ; preds = %38
  call void @llvm.dbg.declare(metadata ptr %14, metadata !14153, metadata !DIExpression()), !dbg !14154
  %53 = load ptr, ptr %11, align 8, !dbg !14155
  %54 = load ptr, ptr %2, align 8, !dbg !14156
  %55 = getelementptr inbounds %struct.lwan_t_, ptr %54, i32 0, i32 4, !dbg !14157
  %56 = getelementptr inbounds %struct.lwan_config_t_, ptr %55, i32 0, i32 3, !dbg !14158
  %57 = load i8, ptr %56, align 1, !dbg !14158
  %58 = trunc i8 %57 to i1, !dbg !14158
  %59 = call i32 @bind_and_listen_addrinfos(ptr noundef %53, i1 noundef zeroext %58), !dbg !14159
  store i32 %59, ptr %14, align 4, !dbg !14154
  %60 = load ptr, ptr %11, align 8, !dbg !14160
  call void @freeaddrinfo(ptr noundef %60) #18, !dbg !14161
  %61 = load i32, ptr %14, align 4, !dbg !14162
  ret i32 %61, !dbg !14163
}

; Function Attrs: nounwind
declare i32 @setsockopt(i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i16 @parse_listener.193(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !14164 {
  %4 = alloca i16, align 2
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !14167, metadata !DIExpression()), !dbg !14168
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !14169, metadata !DIExpression()), !dbg !14170
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !14171, metadata !DIExpression()), !dbg !14172
  %8 = load ptr, ptr %5, align 8, !dbg !14173
  %9 = load i8, ptr %8, align 1, !dbg !14175
  %10 = sext i8 %9 to i32, !dbg !14175
  %11 = icmp eq i32 %10, 91, !dbg !14176
  br i1 %11, label %12, label %17, !dbg !14177

12:                                               ; preds = %3
  %13 = load ptr, ptr %5, align 8, !dbg !14178
  %14 = load ptr, ptr %6, align 8, !dbg !14179
  %15 = load ptr, ptr %7, align 8, !dbg !14180
  %16 = call zeroext i16 @parse_listener_ipv6(ptr noundef %13, ptr noundef %14, ptr noundef %15), !dbg !14181
  store i16 %16, ptr %4, align 2, !dbg !14182
  br label %22, !dbg !14182

17:                                               ; preds = %3
  %18 = load ptr, ptr %5, align 8, !dbg !14183
  %19 = load ptr, ptr %6, align 8, !dbg !14184
  %20 = load ptr, ptr %7, align 8, !dbg !14185
  %21 = call zeroext i16 @parse_listener_ipv4(ptr noundef %18, ptr noundef %19, ptr noundef %20), !dbg !14186
  store i16 %21, ptr %4, align 2, !dbg !14187
  br label %22, !dbg !14187

22:                                               ; preds = %17, %12
  %23 = load i16, ptr %4, align 2, !dbg !14188
  ret i16 %23, !dbg !14188
}

declare i32 @getaddrinfo(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #4

; Function Attrs: nounwind
declare ptr @gai_strerror(i32 noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bind_and_listen_addrinfos(ptr noundef %0, i1 noundef zeroext %1) #0 !dbg !14189 {
  %3 = alloca ptr, align 8
  %4 = alloca i8, align 1
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca [1 x i32], align 4
  %8 = alloca [1 x i32], align 4
  %9 = alloca %union.__SOCKADDR_ARG, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !14192, metadata !DIExpression()), !dbg !14193
  %10 = zext i1 %1 to i8
  store i8 %10, ptr %4, align 1
  call void @llvm.dbg.declare(metadata ptr %4, metadata !14194, metadata !DIExpression()), !dbg !14195
  call void @llvm.dbg.declare(metadata ptr %5, metadata !14196, metadata !DIExpression()), !dbg !14199
  %11 = load ptr, ptr %3, align 8, !dbg !14200
  store ptr %11, ptr %5, align 8, !dbg !14202
  br label %12, !dbg !14203

12:                                               ; preds = %70, %2
  %13 = load ptr, ptr %5, align 8, !dbg !14204
  %14 = icmp ne ptr %13, null, !dbg !14206
  br i1 %14, label %15, label %74, !dbg !14206

15:                                               ; preds = %12
  call void @llvm.dbg.declare(metadata ptr %6, metadata !14207, metadata !DIExpression()), !dbg !14209
  %16 = load ptr, ptr %5, align 8, !dbg !14210
  %17 = getelementptr inbounds %struct.addrinfo, ptr %16, i32 0, i32 1, !dbg !14211
  %18 = load i32, ptr %17, align 4, !dbg !14211
  %19 = load ptr, ptr %5, align 8, !dbg !14212
  %20 = getelementptr inbounds %struct.addrinfo, ptr %19, i32 0, i32 2, !dbg !14213
  %21 = load i32, ptr %20, align 8, !dbg !14213
  %22 = or i32 %21, 524288, !dbg !14214
  %23 = load ptr, ptr %5, align 8, !dbg !14215
  %24 = getelementptr inbounds %struct.addrinfo, ptr %23, i32 0, i32 3, !dbg !14216
  %25 = load i32, ptr %24, align 4, !dbg !14216
  %26 = call i32 @socket(i32 noundef %18, i32 noundef %22, i32 noundef %25) #18, !dbg !14217
  store i32 %26, ptr %6, align 4, !dbg !14209
  %27 = load i32, ptr %6, align 4, !dbg !14218
  %28 = icmp slt i32 %27, 0, !dbg !14220
  br i1 %28, label %29, label %30, !dbg !14221

29:                                               ; preds = %15
  br label %70, !dbg !14222

30:                                               ; preds = %15
  br label %31, !dbg !14223

31:                                               ; preds = %30
  %32 = load i32, ptr %6, align 4, !dbg !14224
  %33 = getelementptr inbounds [1 x i32], ptr %7, i64 0, i64 0, !dbg !14224
  store i32 1, ptr %33, align 4, !dbg !14224
  %34 = getelementptr inbounds [1 x i32], ptr %7, i64 0, i64 0, !dbg !14224
  %35 = call i32 @setsockopt(i32 noundef %32, i32 noundef 1, i32 noundef 2, ptr noundef %34, i32 noundef 4) #18, !dbg !14224
  %36 = icmp slt i32 %35, 0, !dbg !14224
  br i1 %36, label %37, label %38, !dbg !14227

37:                                               ; preds = %31
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.186, i32 noundef 186, ptr noundef @__FUNCTION__.bind_and_listen_addrinfos, ptr noundef @.str.3.189) #23, !dbg !14224
  unreachable, !dbg !14224

38:                                               ; preds = %31
  br label %39, !dbg !14227

39:                                               ; preds = %38
  br label %40, !dbg !14228

40:                                               ; preds = %39
  %41 = load i32, ptr %6, align 4, !dbg !14229
  %42 = getelementptr inbounds [1 x i32], ptr %8, i64 0, i64 0, !dbg !14229
  %43 = load i8, ptr %4, align 1, !dbg !14229
  %44 = trunc i8 %43 to i1, !dbg !14229
  %45 = zext i1 %44 to i32, !dbg !14229
  store i32 %45, ptr %42, align 4, !dbg !14229
  %46 = getelementptr inbounds [1 x i32], ptr %8, i64 0, i64 0, !dbg !14229
  %47 = call i32 @setsockopt(i32 noundef %41, i32 noundef 1, i32 noundef 15, ptr noundef %46, i32 noundef 4) #18, !dbg !14229
  %48 = icmp slt i32 %47, 0, !dbg !14229
  br i1 %48, label %49, label %50, !dbg !14232

49:                                               ; preds = %40
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_warning_debug(ptr noundef @.str.186, i32 noundef 188, ptr noundef @__FUNCTION__.bind_and_listen_addrinfos, ptr noundef @.str.4.190, ptr noundef @.str.15.196), !dbg !14229
  br label %50, !dbg !14229

50:                                               ; preds = %49, %40
  br label %51, !dbg !14232

51:                                               ; preds = %50
  %52 = load i32, ptr %6, align 4, !dbg !14233
  %53 = load ptr, ptr %5, align 8, !dbg !14235
  %54 = getelementptr inbounds %struct.addrinfo, ptr %53, i32 0, i32 5, !dbg !14236
  %55 = load ptr, ptr %54, align 8, !dbg !14236
  store ptr %55, ptr %9, align 8, !dbg !14235
  %56 = load ptr, ptr %5, align 8, !dbg !14237
  %57 = getelementptr inbounds %struct.addrinfo, ptr %56, i32 0, i32 4, !dbg !14238
  %58 = load i32, ptr %57, align 8, !dbg !14238
  %59 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %9, i32 0, i32 0, !dbg !14239
  %60 = load ptr, ptr %59, align 8, !dbg !14239
  %61 = call i32 @bind(i32 noundef %52, ptr %60, i32 noundef %58) #18, !dbg !14239
  %62 = icmp ne i32 %61, 0, !dbg !14239
  br i1 %62, label %67, label %63, !dbg !14240

63:                                               ; preds = %51
  %64 = load i32, ptr %6, align 4, !dbg !14241
  %65 = load ptr, ptr %5, align 8, !dbg !14242
  %66 = call i32 @listen_addrinfo(i32 noundef %64, ptr noundef %65), !dbg !14243
  ret i32 %66, !dbg !14244

67:                                               ; preds = %51
  %68 = load i32, ptr %6, align 4, !dbg !14245
  %69 = call i32 @close(i32 noundef %68), !dbg !14246
  br label %70, !dbg !14247

70:                                               ; preds = %67, %29
  %71 = load ptr, ptr %5, align 8, !dbg !14248
  %72 = getelementptr inbounds %struct.addrinfo, ptr %71, i32 0, i32 7, !dbg !14249
  %73 = load ptr, ptr %72, align 8, !dbg !14249
  store ptr %73, ptr %5, align 8, !dbg !14250
  br label %12, !dbg !14251, !llvm.loop !14252

74:                                               ; preds = %12
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_debug(ptr noundef @.str.186, i32 noundef 196, ptr noundef @__FUNCTION__.bind_and_listen_addrinfos, ptr noundef @.str.16.197) #23, !dbg !14254
  unreachable, !dbg !14254
}

; Function Attrs: nounwind
declare void @freeaddrinfo(ptr noundef) #3

; Function Attrs: nounwind
declare i32 @socket(i32 noundef, i32 noundef, i32 noundef) #3

; Function Attrs: nounwind
declare i32 @bind(i32 noundef, ptr, i32 noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @listen_addrinfo(i32 noundef %0, ptr noundef %1) #0 !dbg !14255 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca [1025 x i8], align 16
  %6 = alloca [32 x i8], align 16
  %7 = alloca i32, align 4
  store i32 %0, ptr %3, align 4
  call void @llvm.dbg.declare(metadata ptr %3, metadata !14258, metadata !DIExpression()), !dbg !14259
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !14260, metadata !DIExpression()), !dbg !14261
  %8 = load i32, ptr %3, align 4, !dbg !14262
  %9 = call i32 @get_backlog_size(), !dbg !14264
  %10 = call i32 @listen(i32 noundef %8, i32 noundef %9) #18, !dbg !14265
  %11 = icmp slt i32 %10, 0, !dbg !14266
  br i1 %11, label %12, label %13, !dbg !14267

12:                                               ; preds = %2
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.186, i32 noundef 141, ptr noundef @__FUNCTION__.listen_addrinfo, ptr noundef @.str.17.198) #23, !dbg !14268
  unreachable, !dbg !14268

13:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata ptr %5, metadata !14269, metadata !DIExpression()), !dbg !14273
  call void @llvm.dbg.declare(metadata ptr %6, metadata !14274, metadata !DIExpression()), !dbg !14275
  call void @llvm.dbg.declare(metadata ptr %7, metadata !14276, metadata !DIExpression()), !dbg !14277
  %14 = load ptr, ptr %4, align 8, !dbg !14278
  %15 = getelementptr inbounds %struct.addrinfo, ptr %14, i32 0, i32 5, !dbg !14279
  %16 = load ptr, ptr %15, align 8, !dbg !14279
  %17 = load ptr, ptr %4, align 8, !dbg !14280
  %18 = getelementptr inbounds %struct.addrinfo, ptr %17, i32 0, i32 4, !dbg !14281
  %19 = load i32, ptr %18, align 8, !dbg !14281
  %20 = getelementptr inbounds [1025 x i8], ptr %5, i64 0, i64 0, !dbg !14282
  %21 = getelementptr inbounds [32 x i8], ptr %6, i64 0, i64 0, !dbg !14283
  %22 = call i32 @getnameinfo(ptr noundef %16, i32 noundef %19, ptr noundef %20, i32 noundef 1025, ptr noundef %21, i32 noundef 32, i32 noundef 3), !dbg !14284
  store i32 %22, ptr %7, align 4, !dbg !14277
  %23 = load i32, ptr %7, align 4, !dbg !14285
  %24 = icmp ne i32 %23, 0, !dbg !14285
  br i1 %24, label %25, label %28, !dbg !14287

25:                                               ; preds = %13
  %26 = load i32, ptr %7, align 4, !dbg !14288
  %27 = call ptr @gai_strerror(i32 noundef %26) #18, !dbg !14288
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_debug(ptr noundef @.str.186, i32 noundef 147, ptr noundef @__FUNCTION__.listen_addrinfo, ptr noundef @.str.18.199, ptr noundef %27) #23, !dbg !14288
  unreachable, !dbg !14288

28:                                               ; preds = %13
  %29 = load ptr, ptr %4, align 8, !dbg !14289
  %30 = getelementptr inbounds %struct.addrinfo, ptr %29, i32 0, i32 1, !dbg !14291
  %31 = load i32, ptr %30, align 4, !dbg !14291
  %32 = icmp eq i32 %31, 10, !dbg !14292
  br i1 %32, label %33, label %36, !dbg !14293

33:                                               ; preds = %28
  %34 = getelementptr inbounds [1025 x i8], ptr %5, i64 0, i64 0, !dbg !14294
  %35 = getelementptr inbounds [32 x i8], ptr %6, i64 0, i64 0, !dbg !14294
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_info_debug(ptr noundef @.str.186, i32 noundef 150, ptr noundef @__FUNCTION__.listen_addrinfo, ptr noundef @.str.19.200, ptr noundef %34, ptr noundef %35), !dbg !14294
  br label %39, !dbg !14294

36:                                               ; preds = %28
  %37 = getelementptr inbounds [1025 x i8], ptr %5, i64 0, i64 0, !dbg !14295
  %38 = getelementptr inbounds [32 x i8], ptr %6, i64 0, i64 0, !dbg !14295
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_info_debug(ptr noundef @.str.186, i32 noundef 152, ptr noundef @__FUNCTION__.listen_addrinfo, ptr noundef @.str.20.201, ptr noundef %37, ptr noundef %38), !dbg !14295
  br label %39

39:                                               ; preds = %36, %33
  %40 = load i32, ptr %3, align 4, !dbg !14296
  ret i32 %40, !dbg !14297
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @get_backlog_size() #0 !dbg !14298 {
  %1 = alloca i32, align 4
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata ptr %1, metadata !14299, metadata !DIExpression()), !dbg !14300
  store i32 4096, ptr %1, align 4, !dbg !14300
  call void @llvm.dbg.declare(metadata ptr %2, metadata !14301, metadata !DIExpression()), !dbg !14336
  %4 = call noalias ptr @fopen(ptr noundef @.str.21.202, ptr noundef @.str.22.203), !dbg !14337
  store ptr %4, ptr %2, align 8, !dbg !14338
  %5 = load ptr, ptr %2, align 8, !dbg !14339
  %6 = icmp ne ptr %5, null, !dbg !14339
  br i1 %6, label %7, label %16, !dbg !14341

7:                                                ; preds = %0
  call void @llvm.dbg.declare(metadata ptr %3, metadata !14342, metadata !DIExpression()), !dbg !14344
  %8 = load ptr, ptr %2, align 8, !dbg !14345
  %9 = call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %8, ptr noundef @.str.23.204, ptr noundef %3), !dbg !14347
  %10 = icmp eq i32 %9, 1, !dbg !14348
  br i1 %10, label %11, label %13, !dbg !14349

11:                                               ; preds = %7
  %12 = load i32, ptr %3, align 4, !dbg !14350
  store i32 %12, ptr %1, align 4, !dbg !14351
  br label %13, !dbg !14352

13:                                               ; preds = %11, %7
  %14 = load ptr, ptr %2, align 8, !dbg !14353
  %15 = call i32 @fclose(ptr noundef %14), !dbg !14354
  br label %16, !dbg !14355

16:                                               ; preds = %13, %0
  %17 = load i32, ptr %1, align 4, !dbg !14356
  ret i32 %17, !dbg !14357
}

; Function Attrs: nounwind
declare i32 @listen(i32 noundef, i32 noundef) #3

declare i32 @getnameinfo(ptr noundef, i32 noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef) #4

declare i32 @__isoc99_fscanf(ptr noundef, ptr noundef, ...) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i16 @parse_listener_ipv6(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !14358 {
  %4 = alloca i16, align 2
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !14359, metadata !DIExpression()), !dbg !14360
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !14361, metadata !DIExpression()), !dbg !14362
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !14363, metadata !DIExpression()), !dbg !14364
  call void @llvm.dbg.declare(metadata ptr %8, metadata !14365, metadata !DIExpression()), !dbg !14366
  %9 = load ptr, ptr %5, align 8, !dbg !14367
  %10 = call ptr @strrchr(ptr noundef %9, i32 noundef 58) #22, !dbg !14368
  store ptr %10, ptr %8, align 8, !dbg !14366
  %11 = load ptr, ptr %8, align 8, !dbg !14369
  %12 = icmp ne ptr %11, null, !dbg !14369
  br i1 %12, label %14, label %13, !dbg !14371

13:                                               ; preds = %3
  store i16 0, ptr %4, align 2, !dbg !14372
  br label %40, !dbg !14372

14:                                               ; preds = %3
  %15 = load ptr, ptr %8, align 8, !dbg !14373
  %16 = getelementptr inbounds i8, ptr %15, i64 -1, !dbg !14375
  %17 = load i8, ptr %16, align 1, !dbg !14376
  %18 = sext i8 %17 to i32, !dbg !14376
  %19 = icmp eq i32 %18, 93, !dbg !14377
  br i1 %19, label %20, label %29, !dbg !14378

20:                                               ; preds = %14
  %21 = load ptr, ptr %8, align 8, !dbg !14379
  %22 = getelementptr inbounds i8, ptr %21, i64 -1, !dbg !14381
  store i8 0, ptr %22, align 1, !dbg !14382
  %23 = load ptr, ptr %5, align 8, !dbg !14383
  %24 = getelementptr inbounds i8, ptr %23, i64 1, !dbg !14384
  %25 = load ptr, ptr %6, align 8, !dbg !14385
  store ptr %24, ptr %25, align 8, !dbg !14386
  %26 = load ptr, ptr %8, align 8, !dbg !14387
  %27 = getelementptr inbounds i8, ptr %26, i64 1, !dbg !14388
  %28 = load ptr, ptr %7, align 8, !dbg !14389
  store ptr %27, ptr %28, align 8, !dbg !14390
  br label %39, !dbg !14391

29:                                               ; preds = %14
  %30 = load ptr, ptr %5, align 8, !dbg !14392
  %31 = load ptr, ptr %5, align 8, !dbg !14394
  %32 = call i64 @strlen(ptr noundef %31) #22, !dbg !14395
  %33 = sub i64 %32, 1, !dbg !14396
  %34 = getelementptr inbounds i8, ptr %30, i64 %33, !dbg !14392
  store i8 0, ptr %34, align 1, !dbg !14397
  %35 = load ptr, ptr %5, align 8, !dbg !14398
  %36 = getelementptr inbounds i8, ptr %35, i64 1, !dbg !14399
  %37 = load ptr, ptr %6, align 8, !dbg !14400
  store ptr %36, ptr %37, align 8, !dbg !14401
  %38 = load ptr, ptr %7, align 8, !dbg !14402
  store ptr @.str.12.205, ptr %38, align 8, !dbg !14403
  br label %39

39:                                               ; preds = %29, %20
  store i16 10, ptr %4, align 2, !dbg !14404
  br label %40, !dbg !14404

40:                                               ; preds = %39, %13
  %41 = load i16, ptr %4, align 2, !dbg !14405
  ret i16 %41, !dbg !14405
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i16 @parse_listener_ipv4(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !14406 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !14407, metadata !DIExpression()), !dbg !14408
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !14409, metadata !DIExpression()), !dbg !14410
  store ptr %2, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !14411, metadata !DIExpression()), !dbg !14412
  call void @llvm.dbg.declare(metadata ptr %7, metadata !14413, metadata !DIExpression()), !dbg !14414
  %8 = load ptr, ptr %4, align 8, !dbg !14415
  %9 = call ptr @strrchr(ptr noundef %8, i32 noundef 58) #22, !dbg !14416
  store ptr %9, ptr %7, align 8, !dbg !14414
  %10 = load ptr, ptr %7, align 8, !dbg !14417
  %11 = icmp ne ptr %10, null, !dbg !14417
  br i1 %11, label %23, label %12, !dbg !14419

12:                                               ; preds = %3
  %13 = load ptr, ptr %6, align 8, !dbg !14420
  store ptr @.str.12.205, ptr %13, align 8, !dbg !14422
  %14 = load ptr, ptr %4, align 8, !dbg !14423
  %15 = call ptr @strchr(ptr noundef %14, i32 noundef 46) #22, !dbg !14425
  %16 = icmp ne ptr %15, null, !dbg !14425
  br i1 %16, label %19, label %17, !dbg !14426

17:                                               ; preds = %12
  %18 = load ptr, ptr %5, align 8, !dbg !14427
  store ptr @.str.13.206, ptr %18, align 8, !dbg !14429
  br label %22, !dbg !14430

19:                                               ; preds = %12
  %20 = load ptr, ptr %4, align 8, !dbg !14431
  %21 = load ptr, ptr %5, align 8, !dbg !14433
  store ptr %20, ptr %21, align 8, !dbg !14434
  br label %22

22:                                               ; preds = %19, %17
  br label %37, !dbg !14435

23:                                               ; preds = %3
  %24 = load ptr, ptr %7, align 8, !dbg !14436
  store i8 0, ptr %24, align 1, !dbg !14438
  %25 = load ptr, ptr %4, align 8, !dbg !14439
  %26 = load ptr, ptr %5, align 8, !dbg !14440
  store ptr %25, ptr %26, align 8, !dbg !14441
  %27 = load ptr, ptr %7, align 8, !dbg !14442
  %28 = getelementptr inbounds i8, ptr %27, i64 1, !dbg !14443
  %29 = load ptr, ptr %6, align 8, !dbg !14444
  store ptr %28, ptr %29, align 8, !dbg !14445
  %30 = load ptr, ptr %5, align 8, !dbg !14446
  %31 = load ptr, ptr %30, align 8, !dbg !14448
  %32 = call i32 @strcmp(ptr noundef %31, ptr noundef @.str.14.207) #22, !dbg !14449
  %33 = icmp ne i32 %32, 0, !dbg !14449
  br i1 %33, label %36, label %34, !dbg !14450

34:                                               ; preds = %23
  %35 = load ptr, ptr %5, align 8, !dbg !14451
  store ptr @.str.13.206, ptr %35, align 8, !dbg !14453
  br label %36, !dbg !14454

36:                                               ; preds = %34, %23
  br label %37

37:                                               ; preds = %36, %22
  ret i16 2, !dbg !14455
}

declare i32 @fcntl(i32 noundef, i32 noundef, ...) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_status_init(ptr noundef %0) #0 !dbg !14456 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !14527, metadata !DIExpression()), !dbg !14528
  store volatile i8 0, ptr @quiet, align 1, !dbg !14529
  %3 = load ptr, ptr %2, align 8, !dbg !14530
  ret void, !dbg !14531
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_status_shutdown(ptr noundef %0) #0 !dbg !14532 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !14533, metadata !DIExpression()), !dbg !14534
  ret void, !dbg !14535
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_status_debug_debug(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3, ...) #0 !dbg !14536 {
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca [1 x %struct.__va_list_tag], align 16
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !14539, metadata !DIExpression()), !dbg !14540
  store i32 %1, ptr %6, align 4
  call void @llvm.dbg.declare(metadata ptr %6, metadata !14541, metadata !DIExpression()), !dbg !14540
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !14542, metadata !DIExpression()), !dbg !14540
  store ptr %3, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !14543, metadata !DIExpression()), !dbg !14540
  %10 = load volatile i8, ptr @quiet, align 1, !dbg !14544
  %11 = trunc i8 %10 to i1, !dbg !14544
  br i1 %11, label %20, label %12, !dbg !14540

12:                                               ; preds = %4
  call void @llvm.dbg.declare(metadata ptr %9, metadata !14546, metadata !DIExpression()), !dbg !14559
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !14559
  call void @llvm.va_start(ptr %13), !dbg !14559
  %14 = load ptr, ptr %5, align 8, !dbg !14559
  %15 = load i32, ptr %6, align 4, !dbg !14559
  %16 = load ptr, ptr %7, align 8, !dbg !14559
  %17 = load ptr, ptr %8, align 8, !dbg !14559
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !14559
  call void @status_out(ptr noundef %14, i32 noundef %15, ptr noundef %16, i32 noundef 32, ptr noundef %17, ptr noundef %18), !dbg !14559
  %19 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !14559
  call void @llvm.va_end(ptr %19), !dbg !14559
  br label %20, !dbg !14559

20:                                               ; preds = %12, %4
  ret void, !dbg !14540
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @status_out(ptr noundef %0, i32 noundef %1, ptr noundef %2, i32 noundef %3, ptr noundef %4, ptr noundef %5) #0 !dbg !14560 {
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  %10 = alloca i32, align 4
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca i32, align 4
  store ptr %0, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !14564, metadata !DIExpression()), !dbg !14565
  store i32 %1, ptr %8, align 4
  call void @llvm.dbg.declare(metadata ptr %8, metadata !14566, metadata !DIExpression()), !dbg !14567
  store ptr %2, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !14568, metadata !DIExpression()), !dbg !14569
  store i32 %3, ptr %10, align 4
  call void @llvm.dbg.declare(metadata ptr %10, metadata !14570, metadata !DIExpression()), !dbg !14571
  store ptr %4, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !14572, metadata !DIExpression()), !dbg !14573
  store ptr %5, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %12, metadata !14574, metadata !DIExpression()), !dbg !14575
  call void @llvm.dbg.declare(metadata ptr %13, metadata !14576, metadata !DIExpression()), !dbg !14577
  call void @llvm.dbg.declare(metadata ptr %14, metadata !14578, metadata !DIExpression()), !dbg !14579
  %15 = load ptr, ptr %11, align 8, !dbg !14580
  %16 = load ptr, ptr %12, align 8, !dbg !14581
  %17 = call i32 @vasprintf(ptr noundef %13, ptr noundef %15, ptr noundef %16) #18, !dbg !14582
  store i32 %17, ptr %14, align 4, !dbg !14583
  %18 = load i32, ptr %14, align 4, !dbg !14584
  %19 = icmp sge i32 %18, 0, !dbg !14586
  br i1 %19, label %20, label %29, !dbg !14587

20:                                               ; preds = %6
  %21 = load ptr, ptr %7, align 8, !dbg !14588
  %22 = load i32, ptr %8, align 4, !dbg !14590
  %23 = load ptr, ptr %9, align 8, !dbg !14591
  %24 = load i32, ptr %10, align 4, !dbg !14592
  %25 = load ptr, ptr %13, align 8, !dbg !14593
  %26 = load i32, ptr %14, align 4, !dbg !14594
  %27 = sext i32 %26 to i64, !dbg !14595
  call void @status_out_msg(ptr noundef %21, i32 noundef %22, ptr noundef %23, i32 noundef %24, ptr noundef %25, i64 noundef %27), !dbg !14596
  %28 = load ptr, ptr %13, align 8, !dbg !14597
  call void @free(ptr noundef %28) #18, !dbg !14598
  br label %29, !dbg !14599

29:                                               ; preds = %20, %6
  ret void, !dbg !14600
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @status_out_msg(ptr noundef %0, i32 noundef %1, ptr noundef %2, i32 noundef %3, ptr noundef %4, i64 noundef %5) #0 !dbg !14601 {
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  %10 = alloca i32, align 4
  %11 = alloca ptr, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca ptr, align 8
  %17 = alloca ptr, align 8
  %18 = alloca [512 x i8], align 16
  %19 = alloca ptr, align 8
  store ptr %0, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !14604, metadata !DIExpression()), !dbg !14605
  store i32 %1, ptr %8, align 4
  call void @llvm.dbg.declare(metadata ptr %8, metadata !14606, metadata !DIExpression()), !dbg !14607
  store ptr %2, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !14608, metadata !DIExpression()), !dbg !14609
  store i32 %3, ptr %10, align 4
  call void @llvm.dbg.declare(metadata ptr %10, metadata !14610, metadata !DIExpression()), !dbg !14611
  store ptr %4, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !14612, metadata !DIExpression()), !dbg !14613
  store i64 %5, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %12, metadata !14614, metadata !DIExpression()), !dbg !14615
  call void @llvm.dbg.declare(metadata ptr %13, metadata !14616, metadata !DIExpression()), !dbg !14617
  %20 = call ptr @__errno_location() #20, !dbg !14618
  %21 = load i32, ptr %20, align 4, !dbg !14618
  store i32 %21, ptr %13, align 4, !dbg !14617
  call void @llvm.dbg.declare(metadata ptr %14, metadata !14619, metadata !DIExpression()), !dbg !14620
  call void @llvm.dbg.declare(metadata ptr %15, metadata !14621, metadata !DIExpression()), !dbg !14622
  call void @llvm.dbg.declare(metadata ptr %16, metadata !14623, metadata !DIExpression()), !dbg !14624
  %22 = load i32, ptr %10, align 4, !dbg !14625
  %23 = call ptr @get_color_start_for_type(i32 noundef %22, ptr noundef %14), !dbg !14626
  store ptr %23, ptr %16, align 8, !dbg !14624
  call void @llvm.dbg.declare(metadata ptr %17, metadata !14627, metadata !DIExpression()), !dbg !14628
  %24 = load i32, ptr %10, align 4, !dbg !14629
  %25 = call ptr @get_color_end_for_type(i32 noundef %24, ptr noundef %15), !dbg !14630
  store ptr %25, ptr %17, align 8, !dbg !14628
  %26 = call i32 @pthread_mutex_lock(ptr noundef @mutex) #18, !dbg !14631
  %27 = icmp slt i32 %26, 0, !dbg !14631
  %28 = zext i1 %27 to i32, !dbg !14631
  %29 = sext i32 %28 to i64, !dbg !14631
  %30 = icmp ne i64 %29, 0, !dbg !14631
  br i1 %30, label %31, label %32, !dbg !14633

31:                                               ; preds = %6
  call void @perror(ptr noundef @.str.217), !dbg !14634
  br label %32, !dbg !14634

32:                                               ; preds = %31, %6
  %33 = load ptr, ptr @stdout, align 8, !dbg !14635
  %34 = call i64 (i64, ...) @syscall(i64 noundef 186) #18, !dbg !14636
  %35 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %33, ptr noundef @.str.1.218, i64 noundef %34), !dbg !14637
  %36 = load ptr, ptr @stdout, align 8, !dbg !14638
  %37 = load ptr, ptr %7, align 8, !dbg !14639
  %38 = call ptr @basename(ptr noundef %37) #18, !dbg !14640
  %39 = load i32, ptr %8, align 4, !dbg !14641
  %40 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %36, ptr noundef @.str.2.219, ptr noundef %38, i32 noundef %39), !dbg !14642
  %41 = load ptr, ptr @stdout, align 8, !dbg !14643
  %42 = load ptr, ptr %9, align 8, !dbg !14644
  %43 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %41, ptr noundef @.str.3.220, ptr noundef %42), !dbg !14645
  %44 = load ptr, ptr @stdout, align 8, !dbg !14646
  %45 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %44, ptr noundef @.str.4.221), !dbg !14647
  %46 = load ptr, ptr %16, align 8, !dbg !14648
  %47 = load i64, ptr %14, align 8, !dbg !14649
  %48 = load ptr, ptr @stdout, align 8, !dbg !14650
  %49 = call i64 @fwrite(ptr noundef %46, i64 noundef %47, i64 noundef 1, ptr noundef %48), !dbg !14651
  %50 = load ptr, ptr %11, align 8, !dbg !14652
  %51 = load i64, ptr %12, align 8, !dbg !14653
  %52 = load ptr, ptr @stdout, align 8, !dbg !14654
  %53 = call i64 @fwrite(ptr noundef %50, i64 noundef %51, i64 noundef 1, ptr noundef %52), !dbg !14655
  %54 = load i32, ptr %10, align 4, !dbg !14656
  %55 = and i32 %54, 8, !dbg !14658
  %56 = icmp ne i32 %55, 0, !dbg !14658
  br i1 %56, label %57, label %70, !dbg !14659

57:                                               ; preds = %32
  call void @llvm.dbg.declare(metadata ptr %18, metadata !14660, metadata !DIExpression()), !dbg !14662
  call void @llvm.dbg.declare(metadata ptr %19, metadata !14663, metadata !DIExpression()), !dbg !14664
  %58 = load i32, ptr %13, align 4, !dbg !14665
  %59 = getelementptr inbounds [512 x i8], ptr %18, i64 0, i64 0, !dbg !14666
  %60 = call ptr @strerror_r(i32 noundef %58, ptr noundef %59, i64 noundef 511) #18, !dbg !14667
  store ptr %60, ptr %19, align 8, !dbg !14664
  %61 = load ptr, ptr @stdout, align 8, !dbg !14668
  %62 = call i32 @fputc(i32 noundef 58, ptr noundef %61), !dbg !14669
  %63 = load ptr, ptr @stdout, align 8, !dbg !14670
  %64 = call i32 @fputc(i32 noundef 32, ptr noundef %63), !dbg !14671
  %65 = load ptr, ptr %19, align 8, !dbg !14672
  %66 = load ptr, ptr %19, align 8, !dbg !14673
  %67 = call i64 @strlen(ptr noundef %66) #22, !dbg !14674
  %68 = load ptr, ptr @stdout, align 8, !dbg !14675
  %69 = call i64 @fwrite(ptr noundef %65, i64 noundef %67, i64 noundef 1, ptr noundef %68), !dbg !14676
  br label %70, !dbg !14677

70:                                               ; preds = %57, %32
  %71 = load ptr, ptr @stdout, align 8, !dbg !14678
  %72 = call i32 @fputc(i32 noundef 46, ptr noundef %71), !dbg !14679
  %73 = load ptr, ptr %17, align 8, !dbg !14680
  %74 = load i64, ptr %15, align 8, !dbg !14681
  %75 = load ptr, ptr @stdout, align 8, !dbg !14682
  %76 = call i64 @fwrite(ptr noundef %73, i64 noundef %74, i64 noundef 1, ptr noundef %75), !dbg !14683
  %77 = load ptr, ptr @stdout, align 8, !dbg !14684
  %78 = call i32 @fputc(i32 noundef 10, ptr noundef %77), !dbg !14685
  %79 = call i32 @pthread_mutex_unlock(ptr noundef @mutex) #18, !dbg !14686
  %80 = icmp slt i32 %79, 0, !dbg !14686
  %81 = zext i1 %80 to i32, !dbg !14686
  %82 = sext i32 %81 to i64, !dbg !14686
  %83 = icmp ne i64 %82, 0, !dbg !14686
  br i1 %83, label %84, label %85, !dbg !14688

84:                                               ; preds = %70
  call void @perror(ptr noundef @.str.5.222), !dbg !14689
  br label %85, !dbg !14689

85:                                               ; preds = %84, %70
  ret void, !dbg !14690
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @get_color_start_for_type(i32 noundef %0, ptr noundef %1) #0 !dbg !14691 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store i32 %0, ptr %3, align 4
  call void @llvm.dbg.declare(metadata ptr %3, metadata !14692, metadata !DIExpression()), !dbg !14693
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !14694, metadata !DIExpression()), !dbg !14695
  call void @llvm.dbg.declare(metadata ptr %5, metadata !14696, metadata !DIExpression()), !dbg !14697
  %6 = load i32, ptr %3, align 4, !dbg !14698
  %7 = and i32 %6, 1, !dbg !14700
  %8 = icmp ne i32 %7, 0, !dbg !14700
  br i1 %8, label %9, label %10, !dbg !14701

9:                                                ; preds = %2
  store ptr @.str.6.224, ptr %5, align 8, !dbg !14702
  br label %35, !dbg !14703

10:                                               ; preds = %2
  %11 = load i32, ptr %3, align 4, !dbg !14704
  %12 = and i32 %11, 2, !dbg !14706
  %13 = icmp ne i32 %12, 0, !dbg !14706
  br i1 %13, label %14, label %15, !dbg !14707

14:                                               ; preds = %10
  store ptr @.str.7.225, ptr %5, align 8, !dbg !14708
  br label %34, !dbg !14709

15:                                               ; preds = %10
  %16 = load i32, ptr %3, align 4, !dbg !14710
  %17 = and i32 %16, 16, !dbg !14712
  %18 = icmp ne i32 %17, 0, !dbg !14712
  br i1 %18, label %19, label %20, !dbg !14713

19:                                               ; preds = %15
  store ptr @.str.8.226, ptr %5, align 8, !dbg !14714
  br label %33, !dbg !14715

20:                                               ; preds = %15
  %21 = load i32, ptr %3, align 4, !dbg !14716
  %22 = and i32 %21, 32, !dbg !14718
  %23 = icmp ne i32 %22, 0, !dbg !14718
  br i1 %23, label %24, label %25, !dbg !14719

24:                                               ; preds = %20
  store ptr @.str.9.227, ptr %5, align 8, !dbg !14720
  br label %32, !dbg !14721

25:                                               ; preds = %20
  %26 = load i32, ptr %3, align 4, !dbg !14722
  %27 = and i32 %26, 8, !dbg !14724
  %28 = icmp ne i32 %27, 0, !dbg !14724
  br i1 %28, label %29, label %30, !dbg !14725

29:                                               ; preds = %25
  store ptr @.str.10.228, ptr %5, align 8, !dbg !14726
  br label %31, !dbg !14727

30:                                               ; preds = %25
  store ptr @.str.11.229, ptr %5, align 8, !dbg !14728
  br label %31

31:                                               ; preds = %30, %29
  br label %32

32:                                               ; preds = %31, %24
  br label %33

33:                                               ; preds = %32, %19
  br label %34

34:                                               ; preds = %33, %14
  br label %35

35:                                               ; preds = %34, %9
  %36 = load ptr, ptr %5, align 8, !dbg !14729
  %37 = call i64 @strlen(ptr noundef %36) #22, !dbg !14730
  %38 = load ptr, ptr %4, align 8, !dbg !14731
  store i64 %37, ptr %38, align 8, !dbg !14732
  %39 = load ptr, ptr %5, align 8, !dbg !14733
  ret ptr %39, !dbg !14734
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @get_color_end_for_type(i32 noundef %0, ptr noundef %1) #0 !dbg !2403 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  store i32 %0, ptr %3, align 4
  call void @llvm.dbg.declare(metadata ptr %3, metadata !14735, metadata !DIExpression()), !dbg !14736
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !14737, metadata !DIExpression()), !dbg !14738
  %5 = load ptr, ptr @get_color_end_for_type.retval, align 8, !dbg !14739
  %6 = call i64 @strlen(ptr noundef %5) #22, !dbg !14740
  %7 = load ptr, ptr %4, align 8, !dbg !14741
  store i64 %6, ptr %7, align 8, !dbg !14742
  %8 = load ptr, ptr @get_color_end_for_type.retval, align 8, !dbg !14743
  ret ptr %8, !dbg !14744
}

declare void @perror(ptr noundef) #4

; Function Attrs: nounwind
declare ptr @basename(ptr noundef) #3

declare i64 @fwrite(ptr noundef, i64 noundef, i64 noundef, ptr noundef) #4

; Function Attrs: nounwind
declare ptr @strerror_r(i32 noundef, ptr noundef, i64 noundef) #3

declare i32 @fputc(i32 noundef, ptr noundef) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_status_info_debug(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3, ...) #0 !dbg !14745 {
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca [1 x %struct.__va_list_tag], align 16
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !14746, metadata !DIExpression()), !dbg !14747
  store i32 %1, ptr %6, align 4
  call void @llvm.dbg.declare(metadata ptr %6, metadata !14748, metadata !DIExpression()), !dbg !14747
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !14749, metadata !DIExpression()), !dbg !14747
  store ptr %3, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !14750, metadata !DIExpression()), !dbg !14747
  %10 = load volatile i8, ptr @quiet, align 1, !dbg !14751
  %11 = trunc i8 %10 to i1, !dbg !14751
  br i1 %11, label %20, label %12, !dbg !14747

12:                                               ; preds = %4
  call void @llvm.dbg.declare(metadata ptr %9, metadata !14753, metadata !DIExpression()), !dbg !14755
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !14755
  call void @llvm.va_start(ptr %13), !dbg !14755
  %14 = load ptr, ptr %5, align 8, !dbg !14755
  %15 = load i32, ptr %6, align 4, !dbg !14755
  %16 = load ptr, ptr %7, align 8, !dbg !14755
  %17 = load ptr, ptr %8, align 8, !dbg !14755
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !14755
  call void @status_out(ptr noundef %14, i32 noundef %15, ptr noundef %16, i32 noundef 1, ptr noundef %17, ptr noundef %18), !dbg !14755
  %19 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !14755
  call void @llvm.va_end(ptr %19), !dbg !14755
  br label %20, !dbg !14755

20:                                               ; preds = %12, %4
  ret void, !dbg !14747
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_status_warning_debug(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3, ...) #0 !dbg !14756 {
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca [1 x %struct.__va_list_tag], align 16
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !14757, metadata !DIExpression()), !dbg !14758
  store i32 %1, ptr %6, align 4
  call void @llvm.dbg.declare(metadata ptr %6, metadata !14759, metadata !DIExpression()), !dbg !14758
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !14760, metadata !DIExpression()), !dbg !14758
  store ptr %3, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !14761, metadata !DIExpression()), !dbg !14758
  %10 = load volatile i8, ptr @quiet, align 1, !dbg !14762
  %11 = trunc i8 %10 to i1, !dbg !14762
  br i1 %11, label %20, label %12, !dbg !14758

12:                                               ; preds = %4
  call void @llvm.dbg.declare(metadata ptr %9, metadata !14764, metadata !DIExpression()), !dbg !14766
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !14766
  call void @llvm.va_start(ptr %13), !dbg !14766
  %14 = load ptr, ptr %5, align 8, !dbg !14766
  %15 = load i32, ptr %6, align 4, !dbg !14766
  %16 = load ptr, ptr %7, align 8, !dbg !14766
  %17 = load ptr, ptr %8, align 8, !dbg !14766
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !14766
  call void @status_out(ptr noundef %14, i32 noundef %15, ptr noundef %16, i32 noundef 2, ptr noundef %17, ptr noundef %18), !dbg !14766
  %19 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !14766
  call void @llvm.va_end(ptr %19), !dbg !14766
  br label %20, !dbg !14766

20:                                               ; preds = %12, %4
  ret void, !dbg !14758
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_status_error_debug(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3, ...) #0 !dbg !14767 {
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca [1 x %struct.__va_list_tag], align 16
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !14768, metadata !DIExpression()), !dbg !14769
  store i32 %1, ptr %6, align 4
  call void @llvm.dbg.declare(metadata ptr %6, metadata !14770, metadata !DIExpression()), !dbg !14769
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !14771, metadata !DIExpression()), !dbg !14769
  store ptr %3, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !14772, metadata !DIExpression()), !dbg !14769
  %10 = load volatile i8, ptr @quiet, align 1, !dbg !14773
  %11 = trunc i8 %10 to i1, !dbg !14773
  br i1 %11, label %20, label %12, !dbg !14769

12:                                               ; preds = %4
  call void @llvm.dbg.declare(metadata ptr %9, metadata !14775, metadata !DIExpression()), !dbg !14777
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !14777
  call void @llvm.va_start(ptr %13), !dbg !14777
  %14 = load ptr, ptr %5, align 8, !dbg !14777
  %15 = load i32, ptr %6, align 4, !dbg !14777
  %16 = load ptr, ptr %7, align 8, !dbg !14777
  %17 = load ptr, ptr %8, align 8, !dbg !14777
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !14777
  call void @status_out(ptr noundef %14, i32 noundef %15, ptr noundef %16, i32 noundef 4, ptr noundef %17, ptr noundef %18), !dbg !14777
  %19 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !14777
  call void @llvm.va_end(ptr %19), !dbg !14777
  br label %20, !dbg !14777

20:                                               ; preds = %12, %4
  ret void, !dbg !14769
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_status_perror_debug(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3, ...) #0 !dbg !14778 {
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca [1 x %struct.__va_list_tag], align 16
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !14779, metadata !DIExpression()), !dbg !14780
  store i32 %1, ptr %6, align 4
  call void @llvm.dbg.declare(metadata ptr %6, metadata !14781, metadata !DIExpression()), !dbg !14780
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !14782, metadata !DIExpression()), !dbg !14780
  store ptr %3, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !14783, metadata !DIExpression()), !dbg !14780
  %10 = load volatile i8, ptr @quiet, align 1, !dbg !14784
  %11 = trunc i8 %10 to i1, !dbg !14784
  br i1 %11, label %20, label %12, !dbg !14780

12:                                               ; preds = %4
  call void @llvm.dbg.declare(metadata ptr %9, metadata !14786, metadata !DIExpression()), !dbg !14788
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !14788
  call void @llvm.va_start(ptr %13), !dbg !14788
  %14 = load ptr, ptr %5, align 8, !dbg !14788
  %15 = load i32, ptr %6, align 4, !dbg !14788
  %16 = load ptr, ptr %7, align 8, !dbg !14788
  %17 = load ptr, ptr %8, align 8, !dbg !14788
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !14788
  call void @status_out(ptr noundef %14, i32 noundef %15, ptr noundef %16, i32 noundef 8, ptr noundef %17, ptr noundef %18), !dbg !14788
  %19 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !14788
  call void @llvm.va_end(ptr %19), !dbg !14788
  br label %20, !dbg !14788

20:                                               ; preds = %12, %4
  ret void, !dbg !14780
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @lwan_status_critical_debug(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3, ...) #14 !dbg !14789 {
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca [1 x %struct.__va_list_tag], align 16
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !14790, metadata !DIExpression()), !dbg !14791
  store i32 %1, ptr %6, align 4
  call void @llvm.dbg.declare(metadata ptr %6, metadata !14792, metadata !DIExpression()), !dbg !14791
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !14793, metadata !DIExpression()), !dbg !14791
  store ptr %3, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !14794, metadata !DIExpression()), !dbg !14791
  %10 = load volatile i8, ptr @quiet, align 1, !dbg !14795
  %11 = trunc i8 %10 to i1, !dbg !14795
  br i1 %11, label %20, label %12, !dbg !14791

12:                                               ; preds = %4
  call void @llvm.dbg.declare(metadata ptr %9, metadata !14797, metadata !DIExpression()), !dbg !14799
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !14799
  call void @llvm.va_start(ptr %13), !dbg !14799
  %14 = load ptr, ptr %5, align 8, !dbg !14799
  %15 = load i32, ptr %6, align 4, !dbg !14799
  %16 = load ptr, ptr %7, align 8, !dbg !14799
  %17 = load ptr, ptr %8, align 8, !dbg !14799
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !14799
  call void @status_out(ptr noundef %14, i32 noundef %15, ptr noundef %16, i32 noundef 16, ptr noundef %17, ptr noundef %18), !dbg !14799
  %19 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !14799
  call void @llvm.va_end(ptr %19), !dbg !14799
  br label %20, !dbg !14799

20:                                               ; preds = %12, %4
  call void @abort() #21, !dbg !14800
  unreachable, !dbg !14800
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @lwan_status_critical_perror_debug(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3, ...) #14 !dbg !14802 {
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca [1 x %struct.__va_list_tag], align 16
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !14803, metadata !DIExpression()), !dbg !14804
  store i32 %1, ptr %6, align 4
  call void @llvm.dbg.declare(metadata ptr %6, metadata !14805, metadata !DIExpression()), !dbg !14804
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !14806, metadata !DIExpression()), !dbg !14804
  store ptr %3, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !14807, metadata !DIExpression()), !dbg !14804
  %10 = load volatile i8, ptr @quiet, align 1, !dbg !14808
  %11 = trunc i8 %10 to i1, !dbg !14808
  br i1 %11, label %20, label %12, !dbg !14804

12:                                               ; preds = %4
  call void @llvm.dbg.declare(metadata ptr %9, metadata !14810, metadata !DIExpression()), !dbg !14812
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !14812
  call void @llvm.va_start(ptr %13), !dbg !14812
  %14 = load ptr, ptr %5, align 8, !dbg !14812
  %15 = load i32, ptr %6, align 4, !dbg !14812
  %16 = load ptr, ptr %7, align 8, !dbg !14812
  %17 = load ptr, ptr %8, align 8, !dbg !14812
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !14812
  call void @status_out(ptr noundef %14, i32 noundef %15, ptr noundef %16, i32 noundef 24, ptr noundef %17, ptr noundef %18), !dbg !14812
  %19 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %9, i64 0, i64 0, !dbg !14812
  call void @llvm.va_end(ptr %19), !dbg !14812
  br label %20, !dbg !14812

20:                                               ; preds = %12, %4
  call void @abort() #21, !dbg !14813
  unreachable, !dbg !14813
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_tables_init() #0 !dbg !14815 {
  %1 = alloca i64, align 8
  %2 = alloca i32, align 4
  %3 = alloca ptr, align 8
  %4 = alloca i64, align 8
  %5 = load i8, ptr @mime_entries_initialized, align 1, !dbg !14816
  %6 = trunc i8 %5 to i1, !dbg !14816
  br i1 %6, label %7, label %8, !dbg !14818

7:                                                ; preds = %0
  br label %44, !dbg !14819

8:                                                ; preds = %0
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.244, i32 noundef 40, ptr noundef @__FUNCTION__.lwan_tables_init, ptr noundef @.str.1.245), !dbg !14820
  call void @llvm.dbg.declare(metadata ptr %1, metadata !14821, metadata !DIExpression()), !dbg !14824
  store i64 28534, ptr %1, align 8, !dbg !14824
  call void @llvm.dbg.declare(metadata ptr %2, metadata !14825, metadata !DIExpression()), !dbg !14826
  %9 = call i32 @uncompress(ptr noundef @uncompressed_mime_entries, ptr noundef %1, ptr noundef @mime_entries_compressed, i64 noundef 7514), !dbg !14827
  store i32 %9, ptr %2, align 4, !dbg !14826
  %10 = load i32, ptr %2, align 4, !dbg !14828
  %11 = icmp ne i32 %10, 0, !dbg !14830
  br i1 %11, label %12, label %14, !dbg !14831

12:                                               ; preds = %8
  %13 = load i32, ptr %2, align 4, !dbg !14832
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_debug(ptr noundef @.str.244, i32 noundef 47, ptr noundef @__FUNCTION__.lwan_tables_init, ptr noundef @.str.2.246, i32 noundef %13) #23, !dbg !14832
  unreachable, !dbg !14832

14:                                               ; preds = %8
  %15 = load i64, ptr %1, align 8, !dbg !14833
  %16 = icmp ne i64 %15, 28534, !dbg !14835
  br i1 %16, label %17, label %19, !dbg !14836

17:                                               ; preds = %14
  %18 = load i64, ptr %1, align 8, !dbg !14837
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_debug(ptr noundef @.str.244, i32 noundef 51, ptr noundef @__FUNCTION__.lwan_tables_init, ptr noundef @.str.3.247, i32 noundef 28534, i64 noundef %18) #23, !dbg !14837
  unreachable, !dbg !14837

19:                                               ; preds = %14
  call void @llvm.dbg.declare(metadata ptr %3, metadata !14838, metadata !DIExpression()), !dbg !14839
  store ptr @uncompressed_mime_entries, ptr %3, align 8, !dbg !14839
  call void @llvm.dbg.declare(metadata ptr %4, metadata !14840, metadata !DIExpression()), !dbg !14842
  store i64 0, ptr %4, align 8, !dbg !14842
  br label %20, !dbg !14843

20:                                               ; preds = %40, %19
  %21 = load i64, ptr %4, align 8, !dbg !14844
  %22 = icmp ult i64 %21, 981, !dbg !14846
  br i1 %22, label %23, label %43, !dbg !14847

23:                                               ; preds = %20
  %24 = load ptr, ptr %3, align 8, !dbg !14848
  %25 = load i64, ptr %4, align 8, !dbg !14850
  %26 = getelementptr inbounds [981 x %struct.list_node], ptr @mime_entries, i64 0, i64 %25, !dbg !14851
  %27 = getelementptr inbounds %struct.list_node, ptr %26, i32 0, i32 0, !dbg !14852
  store ptr %24, ptr %27, align 16, !dbg !14853
  %28 = load ptr, ptr %3, align 8, !dbg !14854
  %29 = getelementptr inbounds i8, ptr %28, i64 1, !dbg !14855
  %30 = call ptr @rawmemchr(ptr noundef %29, i32 noundef 0) #22, !dbg !14856
  %31 = getelementptr inbounds i8, ptr %30, i64 1, !dbg !14857
  store ptr %31, ptr %3, align 8, !dbg !14858
  %32 = load ptr, ptr %3, align 8, !dbg !14859
  %33 = load i64, ptr %4, align 8, !dbg !14860
  %34 = getelementptr inbounds [981 x %struct.list_node], ptr @mime_entries, i64 0, i64 %33, !dbg !14861
  %35 = getelementptr inbounds %struct.list_node, ptr %34, i32 0, i32 1, !dbg !14862
  store ptr %32, ptr %35, align 8, !dbg !14863
  %36 = load ptr, ptr %3, align 8, !dbg !14864
  %37 = getelementptr inbounds i8, ptr %36, i64 1, !dbg !14865
  %38 = call ptr @rawmemchr(ptr noundef %37, i32 noundef 0) #22, !dbg !14866
  %39 = getelementptr inbounds i8, ptr %38, i64 1, !dbg !14867
  store ptr %39, ptr %3, align 8, !dbg !14868
  br label %40, !dbg !14869

40:                                               ; preds = %23
  %41 = load i64, ptr %4, align 8, !dbg !14870
  %42 = add i64 %41, 1, !dbg !14870
  store i64 %42, ptr %4, align 8, !dbg !14870
  br label %20, !dbg !14871, !llvm.loop !14872

43:                                               ; preds = %20
  store i8 1, ptr @mime_entries_initialized, align 1, !dbg !14874
  br label %44, !dbg !14875

44:                                               ; preds = %43, %7
  ret void, !dbg !14875
}

declare i32 @uncompress(ptr noundef, ptr noundef, ptr noundef, i64 noundef) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_tables_shutdown() #0 !dbg !14876 {
  ret void, !dbg !14877
}

; Function Attrs: noinline nounwind optnone willreturn memory(read) uwtable
define dso_local ptr @lwan_determine_mime_type_for_file_name(ptr noundef %0) #15 !dbg !2439 {
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca %struct.list_node, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !14878, metadata !DIExpression()), !dbg !14879
  call void @llvm.dbg.declare(metadata ptr %6, metadata !14880, metadata !DIExpression()), !dbg !14881
  %9 = load ptr, ptr %5, align 8, !dbg !14882
  %10 = call ptr @strrchr(ptr noundef %9, i32 noundef 46) #22, !dbg !14883
  store ptr %10, ptr %6, align 8, !dbg !14881
  %11 = load ptr, ptr %6, align 8, !dbg !14884
  %12 = icmp ne ptr %11, null, !dbg !14884
  %13 = xor i1 %12, true, !dbg !14884
  %14 = zext i1 %13 to i32, !dbg !14884
  %15 = sext i32 %14 to i64, !dbg !14884
  %16 = icmp ne i64 %15, 0, !dbg !14884
  br i1 %16, label %17, label %18, !dbg !14886

17:                                               ; preds = %1
  br label %57, !dbg !14887

18:                                               ; preds = %1
  %19 = load ptr, ptr %6, align 8, !dbg !14888
  store ptr %19, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !14889, metadata !DIExpression()), !dbg !14891
  call void @llvm.dbg.declare(metadata ptr %3, metadata !14893, metadata !DIExpression()), !dbg !14894
  %20 = load ptr, ptr %2, align 8, !dbg !14895
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %3, ptr align 1 %20, i64 4, i1 false), !dbg !14896
  %21 = load i32, ptr %3, align 4, !dbg !14897
  %22 = or i32 %21, 538976288, !dbg !14888
  switch i32 %22, label %29 [
    i32 1936941870, label %23
    i32 1836345390, label %24
    i32 1735420462, label %25
    i32 544434734, label %26
    i32 1735290926, label %27
    i32 1954051118, label %28
  ], !dbg !14888

23:                                               ; preds = %18
  store ptr @.str.4.252, ptr %4, align 8, !dbg !14898
  br label %58, !dbg !14898

24:                                               ; preds = %18
  store ptr @.str.5.253, ptr %4, align 8, !dbg !14900
  br label %58, !dbg !14900

25:                                               ; preds = %18
  store ptr @.str.6.254, ptr %4, align 8, !dbg !14901
  br label %58, !dbg !14901

26:                                               ; preds = %18
  store ptr @.str.7.255, ptr %4, align 8, !dbg !14902
  br label %58, !dbg !14902

27:                                               ; preds = %18
  store ptr @.str.8.256, ptr %4, align 8, !dbg !14903
  br label %58, !dbg !14903

28:                                               ; preds = %18
  store ptr @.str.9.257, ptr %4, align 8, !dbg !14904
  br label %58, !dbg !14904

29:                                               ; preds = %18
  %30 = load ptr, ptr %6, align 8, !dbg !14905
  %31 = load i8, ptr %30, align 1, !dbg !14905
  %32 = icmp ne i8 %31, 0, !dbg !14905
  %33 = xor i1 %32, true, !dbg !14905
  %34 = xor i1 %33, true, !dbg !14905
  %35 = zext i1 %34 to i32, !dbg !14905
  %36 = sext i32 %35 to i64, !dbg !14905
  %37 = icmp ne i64 %36, 0, !dbg !14905
  br i1 %37, label %38, label %56, !dbg !14907

38:                                               ; preds = %29
  call void @llvm.dbg.declare(metadata ptr %7, metadata !14908, metadata !DIExpression()), !dbg !14911
  call void @llvm.dbg.declare(metadata ptr %8, metadata !14912, metadata !DIExpression()), !dbg !14913
  %39 = getelementptr inbounds %struct.list_node, ptr %8, i32 0, i32 0, !dbg !14914
  %40 = load ptr, ptr %6, align 8, !dbg !14915
  %41 = getelementptr inbounds i8, ptr %40, i64 1, !dbg !14916
  store ptr %41, ptr %39, align 8, !dbg !14914
  %42 = getelementptr inbounds %struct.list_node, ptr %8, i32 0, i32 1, !dbg !14914
  store ptr null, ptr %42, align 8, !dbg !14914
  %43 = call ptr @bsearch(ptr noundef %8, ptr noundef @mime_entries, i64 noundef 981, i64 noundef 16, ptr noundef @compare_mime_entry), !dbg !14917
  store ptr %43, ptr %7, align 8, !dbg !14918
  %44 = load ptr, ptr %7, align 8, !dbg !14919
  %45 = icmp ne ptr %44, null, !dbg !14919
  %46 = xor i1 %45, true, !dbg !14919
  %47 = xor i1 %46, true, !dbg !14919
  %48 = zext i1 %47 to i32, !dbg !14919
  %49 = sext i32 %48 to i64, !dbg !14919
  %50 = icmp ne i64 %49, 0, !dbg !14919
  br i1 %50, label %51, label %55, !dbg !14921

51:                                               ; preds = %38
  %52 = load ptr, ptr %7, align 8, !dbg !14922
  %53 = getelementptr inbounds %struct.list_node, ptr %52, i32 0, i32 1, !dbg !14923
  %54 = load ptr, ptr %53, align 8, !dbg !14923
  store ptr %54, ptr %4, align 8, !dbg !14924
  br label %58, !dbg !14924

55:                                               ; preds = %38
  br label %56, !dbg !14925

56:                                               ; preds = %55, %29
  br label %57, !dbg !14905

57:                                               ; preds = %56, %17
  call void @llvm.dbg.label(metadata !14926), !dbg !14927
  store ptr @.str.10.258, ptr %4, align 8, !dbg !14928
  br label %58, !dbg !14928

58:                                               ; preds = %57, %51, %28, %27, %26, %25, %24, %23
  %59 = load ptr, ptr %4, align 8, !dbg !14929
  ret ptr %59, !dbg !14929
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @compare_mime_entry(ptr noundef %0, ptr noundef %1) #0 !dbg !14930 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !14931, metadata !DIExpression()), !dbg !14932
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !14933, metadata !DIExpression()), !dbg !14934
  call void @llvm.dbg.declare(metadata ptr %5, metadata !14935, metadata !DIExpression()), !dbg !14938
  %7 = load ptr, ptr %3, align 8, !dbg !14939
  store ptr %7, ptr %5, align 8, !dbg !14938
  call void @llvm.dbg.declare(metadata ptr %6, metadata !14940, metadata !DIExpression()), !dbg !14941
  %8 = load ptr, ptr %4, align 8, !dbg !14942
  store ptr %8, ptr %6, align 8, !dbg !14941
  %9 = load ptr, ptr %5, align 8, !dbg !14943
  %10 = getelementptr inbounds %struct.list_node, ptr %9, i32 0, i32 0, !dbg !14944
  %11 = load ptr, ptr %10, align 8, !dbg !14944
  %12 = load ptr, ptr %6, align 8, !dbg !14945
  %13 = getelementptr inbounds %struct.list_node, ptr %12, i32 0, i32 0, !dbg !14946
  %14 = load ptr, ptr %13, align 8, !dbg !14946
  %15 = call i32 @strcmp(ptr noundef %11, ptr noundef %14) #22, !dbg !14947
  ret i32 %15, !dbg !14948
}

declare ptr @bsearch(ptr noundef, ptr noundef, i64 noundef, i64 noundef, ptr noundef) #4

; Function Attrs: noinline nounwind optnone willreturn memory(read) uwtable
define dso_local ptr @lwan_http_status_as_string_with_code(i32 noundef %0) #15 !dbg !14949 {
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  store i32 %0, ptr %3, align 4
  call void @llvm.dbg.declare(metadata ptr %3, metadata !14952, metadata !DIExpression()), !dbg !14953
  %4 = load i32, ptr %3, align 4, !dbg !14954
  switch i32 %4, label %21 [
    i32 200, label %5
    i32 206, label %6
    i32 301, label %7
    i32 304, label %8
    i32 400, label %9
    i32 401, label %10
    i32 403, label %11
    i32 404, label %12
    i32 405, label %13
    i32 408, label %14
    i32 413, label %15
    i32 416, label %16
    i32 418, label %17
    i32 500, label %18
    i32 501, label %19
    i32 503, label %20
  ], !dbg !14955

5:                                                ; preds = %1
  store ptr @.str.11.261, ptr %2, align 8, !dbg !14956
  br label %22, !dbg !14956

6:                                                ; preds = %1
  store ptr @.str.12.262, ptr %2, align 8, !dbg !14958
  br label %22, !dbg !14958

7:                                                ; preds = %1
  store ptr @.str.13.263, ptr %2, align 8, !dbg !14959
  br label %22, !dbg !14959

8:                                                ; preds = %1
  store ptr @.str.14.264, ptr %2, align 8, !dbg !14960
  br label %22, !dbg !14960

9:                                                ; preds = %1
  store ptr @.str.15.265, ptr %2, align 8, !dbg !14961
  br label %22, !dbg !14961

10:                                               ; preds = %1
  store ptr @.str.16.266, ptr %2, align 8, !dbg !14962
  br label %22, !dbg !14962

11:                                               ; preds = %1
  store ptr @.str.17.267, ptr %2, align 8, !dbg !14963
  br label %22, !dbg !14963

12:                                               ; preds = %1
  store ptr @.str.18.268, ptr %2, align 8, !dbg !14964
  br label %22, !dbg !14964

13:                                               ; preds = %1
  store ptr @.str.19.269, ptr %2, align 8, !dbg !14965
  br label %22, !dbg !14965

14:                                               ; preds = %1
  store ptr @.str.20.270, ptr %2, align 8, !dbg !14966
  br label %22, !dbg !14966

15:                                               ; preds = %1
  store ptr @.str.21.271, ptr %2, align 8, !dbg !14967
  br label %22, !dbg !14967

16:                                               ; preds = %1
  store ptr @.str.22.272, ptr %2, align 8, !dbg !14968
  br label %22, !dbg !14968

17:                                               ; preds = %1
  store ptr @.str.23.273, ptr %2, align 8, !dbg !14969
  br label %22, !dbg !14969

18:                                               ; preds = %1
  store ptr @.str.24.274, ptr %2, align 8, !dbg !14970
  br label %22, !dbg !14970

19:                                               ; preds = %1
  store ptr @.str.25.275, ptr %2, align 8, !dbg !14971
  br label %22, !dbg !14971

20:                                               ; preds = %1
  store ptr @.str.26.276, ptr %2, align 8, !dbg !14972
  br label %22, !dbg !14972

21:                                               ; preds = %1
  store ptr @.str.27.277, ptr %2, align 8, !dbg !14973
  br label %22, !dbg !14973

22:                                               ; preds = %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5
  %23 = load ptr, ptr %2, align 8, !dbg !14974
  ret ptr %23, !dbg !14974
}

; Function Attrs: alwaysinline nounwind willreturn memory(read) uwtable
define dso_local ptr @lwan_http_status_as_string(i32 noundef %0) #13 !dbg !14975 {
  %2 = alloca i32, align 4
  store i32 %0, ptr %2, align 4
  call void @llvm.dbg.declare(metadata ptr %2, metadata !14976, metadata !DIExpression()), !dbg !14977
  %3 = load i32, ptr %2, align 4, !dbg !14978
  %4 = call ptr @lwan_http_status_as_string_with_code(i32 noundef %3) #22, !dbg !14979
  %5 = getelementptr inbounds i8, ptr %4, i64 4, !dbg !14980
  ret ptr %5, !dbg !14981
}

; Function Attrs: noinline nounwind optnone willreturn memory(read) uwtable
define dso_local ptr @lwan_http_status_as_descriptive_string(i32 noundef %0) #15 !dbg !14982 {
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  store i32 %0, ptr %3, align 4
  call void @llvm.dbg.declare(metadata ptr %3, metadata !14983, metadata !DIExpression()), !dbg !14984
  %4 = load i32, ptr %3, align 4, !dbg !14985
  switch i32 %4, label %21 [
    i32 200, label %5
    i32 206, label %6
    i32 301, label %7
    i32 304, label %8
    i32 400, label %9
    i32 401, label %10
    i32 403, label %11
    i32 404, label %12
    i32 405, label %13
    i32 408, label %14
    i32 413, label %15
    i32 416, label %16
    i32 418, label %17
    i32 500, label %18
    i32 501, label %19
    i32 503, label %20
  ], !dbg !14986

5:                                                ; preds = %1
  store ptr @.str.28.282, ptr %2, align 8, !dbg !14987
  br label %22, !dbg !14987

6:                                                ; preds = %1
  store ptr @.str.29.283, ptr %2, align 8, !dbg !14989
  br label %22, !dbg !14989

7:                                                ; preds = %1
  store ptr @.str.30.284, ptr %2, align 8, !dbg !14990
  br label %22, !dbg !14990

8:                                                ; preds = %1
  store ptr @.str.31.285, ptr %2, align 8, !dbg !14991
  br label %22, !dbg !14991

9:                                                ; preds = %1
  store ptr @.str.32.286, ptr %2, align 8, !dbg !14992
  br label %22, !dbg !14992

10:                                               ; preds = %1
  store ptr @.str.33.287, ptr %2, align 8, !dbg !14993
  br label %22, !dbg !14993

11:                                               ; preds = %1
  store ptr @.str.34.288, ptr %2, align 8, !dbg !14994
  br label %22, !dbg !14994

12:                                               ; preds = %1
  store ptr @.str.35.289, ptr %2, align 8, !dbg !14995
  br label %22, !dbg !14995

13:                                               ; preds = %1
  store ptr @.str.36.290, ptr %2, align 8, !dbg !14996
  br label %22, !dbg !14996

14:                                               ; preds = %1
  store ptr @.str.37.291, ptr %2, align 8, !dbg !14997
  br label %22, !dbg !14997

15:                                               ; preds = %1
  store ptr @.str.38.292, ptr %2, align 8, !dbg !14998
  br label %22, !dbg !14998

16:                                               ; preds = %1
  store ptr @.str.39.293, ptr %2, align 8, !dbg !14999
  br label %22, !dbg !14999

17:                                               ; preds = %1
  store ptr @.str.40.294, ptr %2, align 8, !dbg !15000
  br label %22, !dbg !15000

18:                                               ; preds = %1
  store ptr @.str.41.295, ptr %2, align 8, !dbg !15001
  br label %22, !dbg !15001

19:                                               ; preds = %1
  store ptr @.str.42.296, ptr %2, align 8, !dbg !15002
  br label %22, !dbg !15002

20:                                               ; preds = %1
  store ptr @.str.43.297, ptr %2, align 8, !dbg !15003
  br label %22, !dbg !15003

21:                                               ; preds = %1
  store ptr @.str.44.298, ptr %2, align 8, !dbg !15004
  br label %22, !dbg !15004

22:                                               ; preds = %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5
  %23 = load ptr, ptr %2, align 8, !dbg !15005
  ret ptr %23, !dbg !15005
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_append_int_to_strbuf(ptr noundef %0, ptr noundef %1) #0 !dbg !15006 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca [25 x i8], align 16
  %6 = alloca i64, align 8
  %7 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !15009, metadata !DIExpression()), !dbg !15010
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !15011, metadata !DIExpression()), !dbg !15012
  call void @llvm.dbg.declare(metadata ptr %5, metadata !15013, metadata !DIExpression()), !dbg !15014
  call void @llvm.dbg.declare(metadata ptr %6, metadata !15015, metadata !DIExpression()), !dbg !15016
  call void @llvm.dbg.declare(metadata ptr %7, metadata !15017, metadata !DIExpression()), !dbg !15018
  %8 = load ptr, ptr %4, align 8, !dbg !15019
  %9 = load i32, ptr %8, align 4, !dbg !15020
  %10 = sext i32 %9 to i64, !dbg !15020
  %11 = getelementptr inbounds [25 x i8], ptr %5, i64 0, i64 0, !dbg !15021
  %12 = call ptr @int_to_string(i64 noundef %10, ptr noundef %11, ptr noundef %6), !dbg !15022
  store ptr %12, ptr %7, align 8, !dbg !15023
  %13 = load ptr, ptr %3, align 8, !dbg !15024
  %14 = load ptr, ptr %7, align 8, !dbg !15025
  %15 = load i64, ptr %6, align 8, !dbg !15026
  %16 = call zeroext i1 @strbuf_append_str(ptr noundef %13, ptr noundef %14, i64 noundef %15), !dbg !15027
  ret void, !dbg !15028
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @lwan_tpl_int_is_empty(ptr noundef %0) #0 !dbg !15029 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !15030, metadata !DIExpression()), !dbg !15031
  %3 = load ptr, ptr %2, align 8, !dbg !15032
  %4 = load i32, ptr %3, align 4, !dbg !15033
  %5 = icmp eq i32 %4, 0, !dbg !15034
  ret i1 %5, !dbg !15035
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_append_double_to_strbuf(ptr noundef %0, ptr noundef %1) #0 !dbg !15036 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !15037, metadata !DIExpression()), !dbg !15038
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !15039, metadata !DIExpression()), !dbg !15040
  %5 = load ptr, ptr %3, align 8, !dbg !15041
  %6 = load ptr, ptr %4, align 8, !dbg !15042
  %7 = load double, ptr %6, align 8, !dbg !15043
  %8 = call zeroext i1 (ptr, ptr, ...) @strbuf_append_printf(ptr noundef %5, ptr noundef @.str.303, double noundef %7), !dbg !15044
  ret void, !dbg !15045
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @lwan_tpl_double_is_empty(ptr noundef %0) #0 !dbg !15046 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !15047, metadata !DIExpression()), !dbg !15048
  %3 = load ptr, ptr %2, align 8, !dbg !15049
  %4 = load double, ptr %3, align 8, !dbg !15050
  %5 = fcmp oeq double %4, 0.000000e+00, !dbg !15051
  ret i1 %5, !dbg !15052
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_append_str_to_strbuf(ptr noundef %0, ptr noundef %1) #0 !dbg !15053 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !15054, metadata !DIExpression()), !dbg !15055
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !15056, metadata !DIExpression()), !dbg !15057
  call void @llvm.dbg.declare(metadata ptr %5, metadata !15058, metadata !DIExpression()), !dbg !15059
  %6 = load ptr, ptr %4, align 8, !dbg !15060
  %7 = load ptr, ptr %6, align 8, !dbg !15061
  store ptr %7, ptr %5, align 8, !dbg !15059
  %8 = load ptr, ptr %5, align 8, !dbg !15062
  %9 = icmp ne ptr %8, null, !dbg !15062
  %10 = xor i1 %9, true, !dbg !15062
  %11 = xor i1 %10, true, !dbg !15062
  %12 = zext i1 %11 to i32, !dbg !15062
  %13 = sext i32 %12 to i64, !dbg !15062
  %14 = icmp ne i64 %13, 0, !dbg !15062
  br i1 %14, label %15, label %19, !dbg !15064

15:                                               ; preds = %2
  %16 = load ptr, ptr %3, align 8, !dbg !15065
  %17 = load ptr, ptr %5, align 8, !dbg !15066
  %18 = call zeroext i1 @strbuf_append_str(ptr noundef %16, ptr noundef %17, i64 noundef 0), !dbg !15067
  br label %19, !dbg !15067

19:                                               ; preds = %15, %2
  ret void, !dbg !15068
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_append_str_escaped_to_strbuf(ptr noundef %0, ptr noundef %1) #0 !dbg !15069 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !15070, metadata !DIExpression()), !dbg !15071
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !15072, metadata !DIExpression()), !dbg !15073
  %7 = load ptr, ptr %4, align 8, !dbg !15074
  %8 = icmp ne ptr %7, null, !dbg !15074
  %9 = xor i1 %8, true, !dbg !15074
  %10 = zext i1 %9 to i32, !dbg !15074
  %11 = sext i32 %10 to i64, !dbg !15074
  %12 = icmp ne i64 %11, 0, !dbg !15074
  br i1 %12, label %13, label %14, !dbg !15076

13:                                               ; preds = %2
  br label %92, !dbg !15077

14:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata ptr %5, metadata !15078, metadata !DIExpression()), !dbg !15079
  %15 = load ptr, ptr %4, align 8, !dbg !15080
  %16 = load ptr, ptr %15, align 8, !dbg !15081
  store ptr %16, ptr %5, align 8, !dbg !15079
  %17 = load ptr, ptr %5, align 8, !dbg !15082
  %18 = icmp ne ptr %17, null, !dbg !15082
  %19 = xor i1 %18, true, !dbg !15082
  %20 = zext i1 %19 to i32, !dbg !15082
  %21 = sext i32 %20 to i64, !dbg !15082
  %22 = icmp ne i64 %21, 0, !dbg !15082
  br i1 %22, label %23, label %24, !dbg !15084

23:                                               ; preds = %14
  br label %92, !dbg !15085

24:                                               ; preds = %14
  call void @llvm.dbg.declare(metadata ptr %6, metadata !15086, metadata !DIExpression()), !dbg !15088
  %25 = load ptr, ptr %5, align 8, !dbg !15089
  store ptr %25, ptr %6, align 8, !dbg !15088
  br label %26, !dbg !15090

26:                                               ; preds = %89, %24
  %27 = load ptr, ptr %6, align 8, !dbg !15091
  %28 = load i8, ptr %27, align 1, !dbg !15093
  %29 = icmp ne i8 %28, 0, !dbg !15094
  br i1 %29, label %30, label %92, !dbg !15094

30:                                               ; preds = %26
  %31 = load ptr, ptr %6, align 8, !dbg !15095
  %32 = load i8, ptr %31, align 1, !dbg !15098
  %33 = sext i8 %32 to i32, !dbg !15098
  %34 = icmp eq i32 %33, 60, !dbg !15099
  br i1 %34, label %35, label %38, !dbg !15100

35:                                               ; preds = %30
  %36 = load ptr, ptr %3, align 8, !dbg !15101
  %37 = call zeroext i1 @strbuf_append_str(ptr noundef %36, ptr noundef @.str.1.308, i64 noundef 4), !dbg !15102
  br label %88, !dbg !15102

38:                                               ; preds = %30
  %39 = load ptr, ptr %6, align 8, !dbg !15103
  %40 = load i8, ptr %39, align 1, !dbg !15105
  %41 = sext i8 %40 to i32, !dbg !15105
  %42 = icmp eq i32 %41, 62, !dbg !15106
  br i1 %42, label %43, label %46, !dbg !15107

43:                                               ; preds = %38
  %44 = load ptr, ptr %3, align 8, !dbg !15108
  %45 = call zeroext i1 @strbuf_append_str(ptr noundef %44, ptr noundef @.str.2.309, i64 noundef 4), !dbg !15109
  br label %87, !dbg !15109

46:                                               ; preds = %38
  %47 = load ptr, ptr %6, align 8, !dbg !15110
  %48 = load i8, ptr %47, align 1, !dbg !15112
  %49 = sext i8 %48 to i32, !dbg !15112
  %50 = icmp eq i32 %49, 38, !dbg !15113
  br i1 %50, label %51, label %54, !dbg !15114

51:                                               ; preds = %46
  %52 = load ptr, ptr %3, align 8, !dbg !15115
  %53 = call zeroext i1 @strbuf_append_str(ptr noundef %52, ptr noundef @.str.3.310, i64 noundef 5), !dbg !15116
  br label %86, !dbg !15116

54:                                               ; preds = %46
  %55 = load ptr, ptr %6, align 8, !dbg !15117
  %56 = load i8, ptr %55, align 1, !dbg !15119
  %57 = sext i8 %56 to i32, !dbg !15119
  %58 = icmp eq i32 %57, 34, !dbg !15120
  br i1 %58, label %59, label %62, !dbg !15121

59:                                               ; preds = %54
  %60 = load ptr, ptr %3, align 8, !dbg !15122
  %61 = call zeroext i1 @strbuf_append_str(ptr noundef %60, ptr noundef @.str.4.311, i64 noundef 6), !dbg !15123
  br label %85, !dbg !15123

62:                                               ; preds = %54
  %63 = load ptr, ptr %6, align 8, !dbg !15124
  %64 = load i8, ptr %63, align 1, !dbg !15126
  %65 = sext i8 %64 to i32, !dbg !15126
  %66 = icmp eq i32 %65, 39, !dbg !15127
  br i1 %66, label %67, label %70, !dbg !15128

67:                                               ; preds = %62
  %68 = load ptr, ptr %3, align 8, !dbg !15129
  %69 = call zeroext i1 @strbuf_append_str(ptr noundef %68, ptr noundef @.str.5.312, i64 noundef 6), !dbg !15130
  br label %84, !dbg !15130

70:                                               ; preds = %62
  %71 = load ptr, ptr %6, align 8, !dbg !15131
  %72 = load i8, ptr %71, align 1, !dbg !15133
  %73 = sext i8 %72 to i32, !dbg !15133
  %74 = icmp eq i32 %73, 47, !dbg !15134
  br i1 %74, label %75, label %78, !dbg !15135

75:                                               ; preds = %70
  %76 = load ptr, ptr %3, align 8, !dbg !15136
  %77 = call zeroext i1 @strbuf_append_str(ptr noundef %76, ptr noundef @.str.6.313, i64 noundef 6), !dbg !15137
  br label %83, !dbg !15137

78:                                               ; preds = %70
  %79 = load ptr, ptr %3, align 8, !dbg !15138
  %80 = load ptr, ptr %6, align 8, !dbg !15139
  %81 = load i8, ptr %80, align 1, !dbg !15140
  %82 = call zeroext i1 @strbuf_append_char(ptr noundef %79, i8 noundef signext %81), !dbg !15141
  br label %83

83:                                               ; preds = %78, %75
  br label %84

84:                                               ; preds = %83, %67
  br label %85

85:                                               ; preds = %84, %59
  br label %86

86:                                               ; preds = %85, %51
  br label %87

87:                                               ; preds = %86, %43
  br label %88

88:                                               ; preds = %87, %35
  br label %89, !dbg !15142

89:                                               ; preds = %88
  %90 = load ptr, ptr %6, align 8, !dbg !15143
  %91 = getelementptr inbounds i8, ptr %90, i32 1, !dbg !15143
  store ptr %91, ptr %6, align 8, !dbg !15143
  br label %26, !dbg !15144, !llvm.loop !15145

92:                                               ; preds = %26, %23, %13
  ret void, !dbg !15147
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @lwan_tpl_str_is_empty(ptr noundef %0) #0 !dbg !15148 {
  %2 = alloca i1, align 1
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !15149, metadata !DIExpression()), !dbg !15150
  %5 = load ptr, ptr %3, align 8, !dbg !15151
  %6 = icmp ne ptr %5, null, !dbg !15151
  %7 = xor i1 %6, true, !dbg !15151
  %8 = zext i1 %7 to i32, !dbg !15151
  %9 = sext i32 %8 to i64, !dbg !15151
  %10 = icmp ne i64 %9, 0, !dbg !15151
  br i1 %10, label %11, label %12, !dbg !15153

11:                                               ; preds = %1
  store i1 true, ptr %2, align 1, !dbg !15154
  br label %29, !dbg !15154

12:                                               ; preds = %1
  call void @llvm.dbg.declare(metadata ptr %4, metadata !15155, metadata !DIExpression()), !dbg !15156
  %13 = load ptr, ptr %3, align 8, !dbg !15157
  %14 = load ptr, ptr %13, align 8, !dbg !15158
  store ptr %14, ptr %4, align 8, !dbg !15156
  %15 = load ptr, ptr %4, align 8, !dbg !15159
  %16 = icmp ne ptr %15, null, !dbg !15159
  %17 = xor i1 %16, true, !dbg !15159
  %18 = xor i1 %17, true, !dbg !15159
  %19 = zext i1 %18 to i32, !dbg !15159
  %20 = sext i32 %19 to i64, !dbg !15159
  %21 = icmp ne i64 %20, 0, !dbg !15159
  br i1 %21, label %22, label %27, !dbg !15160

22:                                               ; preds = %12
  %23 = load ptr, ptr %4, align 8, !dbg !15161
  %24 = load i8, ptr %23, align 1, !dbg !15162
  %25 = sext i8 %24 to i32, !dbg !15162
  %26 = icmp ne i32 %25, 0, !dbg !15160
  br label %27

27:                                               ; preds = %22, %12
  %28 = phi i1 [ false, %12 ], [ %26, %22 ], !dbg !15163
  store i1 %28, ptr %2, align 1, !dbg !15164
  br label %29, !dbg !15164

29:                                               ; preds = %27, %11
  %30 = load i1, ptr %2, align 1, !dbg !15165
  ret i1 %30, !dbg !15165
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_tpl_free(ptr noundef %0) #0 !dbg !15166 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !15169, metadata !DIExpression()), !dbg !15170
  call void @llvm.dbg.declare(metadata ptr %3, metadata !15171, metadata !DIExpression()), !dbg !15172
  %4 = load ptr, ptr %2, align 8, !dbg !15173
  %5 = icmp ne ptr %4, null, !dbg !15173
  br i1 %5, label %7, label %6, !dbg !15175

6:                                                ; preds = %1
  br label %32, !dbg !15176

7:                                                ; preds = %1
  %8 = load ptr, ptr %2, align 8, !dbg !15177
  %9 = getelementptr inbounds %struct.lwan_value_t_, ptr %8, i32 0, i32 0, !dbg !15179
  %10 = load ptr, ptr %9, align 8, !dbg !15179
  %11 = icmp ne ptr %10, null, !dbg !15177
  br i1 %11, label %12, label %30, !dbg !15180

12:                                               ; preds = %7
  %13 = load ptr, ptr %2, align 8, !dbg !15181
  %14 = getelementptr inbounds %struct.lwan_value_t_, ptr %13, i32 0, i32 0, !dbg !15184
  %15 = load ptr, ptr %14, align 8, !dbg !15184
  store ptr %15, ptr %3, align 8, !dbg !15185
  br label %16, !dbg !15186

16:                                               ; preds = %23, %12
  %17 = load ptr, ptr %3, align 8, !dbg !15187
  %18 = getelementptr inbounds %struct.chunk, ptr %17, i32 0, i32 0, !dbg !15189
  %19 = load i32, ptr %18, align 8, !dbg !15189
  %20 = icmp ne i32 %19, 10, !dbg !15190
  br i1 %20, label %21, label %26, !dbg !15191

21:                                               ; preds = %16
  %22 = load ptr, ptr %3, align 8, !dbg !15192
  call void @free_chunk(ptr noundef %22), !dbg !15193
  br label %23, !dbg !15193

23:                                               ; preds = %21
  %24 = load ptr, ptr %3, align 8, !dbg !15194
  %25 = getelementptr inbounds %struct.chunk, ptr %24, i32 1, !dbg !15194
  store ptr %25, ptr %3, align 8, !dbg !15194
  br label %16, !dbg !15195, !llvm.loop !15196

26:                                               ; preds = %16
  %27 = load ptr, ptr %2, align 8, !dbg !15198
  %28 = getelementptr inbounds %struct.lwan_value_t_, ptr %27, i32 0, i32 0, !dbg !15199
  %29 = load ptr, ptr %28, align 8, !dbg !15199
  call void @free(ptr noundef %29) #18, !dbg !15200
  br label %30, !dbg !15201

30:                                               ; preds = %26, %7
  %31 = load ptr, ptr %2, align 8, !dbg !15202
  call void @free(ptr noundef %31) #18, !dbg !15203
  br label %32, !dbg !15204

32:                                               ; preds = %30, %6
  ret void, !dbg !15204
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_chunk(ptr noundef %0) #0 !dbg !15205 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !15208, metadata !DIExpression()), !dbg !15209
  %3 = load ptr, ptr %2, align 8, !dbg !15210
  %4 = icmp ne ptr %3, null, !dbg !15210
  br i1 %4, label %6, label %5, !dbg !15212

5:                                                ; preds = %1
  br label %30, !dbg !15213

6:                                                ; preds = %1
  %7 = load ptr, ptr %2, align 8, !dbg !15214
  %8 = getelementptr inbounds %struct.chunk, ptr %7, i32 0, i32 2, !dbg !15216
  %9 = load i32, ptr %8, align 8, !dbg !15216
  %10 = and i32 %9, 4, !dbg !15217
  %11 = icmp ne i32 %10, 0, !dbg !15217
  br i1 %11, label %12, label %13, !dbg !15218

12:                                               ; preds = %6
  br label %30, !dbg !15219

13:                                               ; preds = %6
  %14 = load ptr, ptr %2, align 8, !dbg !15220
  %15 = getelementptr inbounds %struct.chunk, ptr %14, i32 0, i32 0, !dbg !15221
  %16 = load i32, ptr %15, align 8, !dbg !15221
  switch i32 %16, label %30 [
    i32 10, label %17
    i32 1, label %17
    i32 2, label %17
    i32 3, label %17
    i32 4, label %17
    i32 8, label %17
    i32 6, label %17
    i32 7, label %18
    i32 5, label %18
    i32 0, label %22
    i32 9, label %26
  ], !dbg !15222

17:                                               ; preds = %13, %13, %13, %13, %13, %13, %13
  br label %30, !dbg !15223

18:                                               ; preds = %13, %13
  %19 = load ptr, ptr %2, align 8, !dbg !15225
  %20 = getelementptr inbounds %struct.chunk, ptr %19, i32 0, i32 1, !dbg !15226
  %21 = load ptr, ptr %20, align 8, !dbg !15226
  call void @free(ptr noundef %21) #18, !dbg !15227
  br label %30, !dbg !15228

22:                                               ; preds = %13
  %23 = load ptr, ptr %2, align 8, !dbg !15229
  %24 = getelementptr inbounds %struct.chunk, ptr %23, i32 0, i32 1, !dbg !15230
  %25 = load ptr, ptr %24, align 8, !dbg !15230
  call void @strbuf_free(ptr noundef %25), !dbg !15231
  br label %30, !dbg !15232

26:                                               ; preds = %13
  %27 = load ptr, ptr %2, align 8, !dbg !15233
  %28 = getelementptr inbounds %struct.chunk, ptr %27, i32 0, i32 1, !dbg !15234
  %29 = load ptr, ptr %28, align 8, !dbg !15234
  call void @lwan_tpl_free(ptr noundef %29), !dbg !15235
  br label %30, !dbg !15236

30:                                               ; preds = %26, %22, %18, %17, %13, %12, %5
  ret void, !dbg !15237
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @lwan_tpl_compile_string(ptr noundef %0, ptr noundef %1) #0 !dbg !15238 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !15253, metadata !DIExpression()), !dbg !15254
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !15255, metadata !DIExpression()), !dbg !15256
  call void @llvm.dbg.declare(metadata ptr %6, metadata !15257, metadata !DIExpression()), !dbg !15258
  %7 = call noalias ptr @calloc(i64 noundef 1, i64 noundef 16) #19, !dbg !15259
  store ptr %7, ptr %6, align 8, !dbg !15260
  %8 = load ptr, ptr %6, align 8, !dbg !15261
  %9 = icmp ne ptr %8, null, !dbg !15261
  br i1 %9, label %10, label %18, !dbg !15263

10:                                               ; preds = %2
  %11 = load ptr, ptr %6, align 8, !dbg !15264
  %12 = load ptr, ptr %4, align 8, !dbg !15267
  %13 = load ptr, ptr %5, align 8, !dbg !15268
  %14 = call zeroext i1 @parse_string(ptr noundef %11, ptr noundef %12, ptr noundef %13), !dbg !15269
  br i1 %14, label %15, label %17, !dbg !15270

15:                                               ; preds = %10
  %16 = load ptr, ptr %6, align 8, !dbg !15271
  store ptr %16, ptr %3, align 8, !dbg !15272
  br label %20, !dbg !15272

17:                                               ; preds = %10
  br label %18, !dbg !15273

18:                                               ; preds = %17, %2
  %19 = load ptr, ptr %6, align 8, !dbg !15274
  call void @lwan_tpl_free(ptr noundef %19), !dbg !15275
  store ptr null, ptr %3, align 8, !dbg !15276
  br label %20, !dbg !15276

20:                                               ; preds = %18, %15
  %21 = load ptr, ptr %3, align 8, !dbg !15277
  ret ptr %21, !dbg !15277
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @parse_string(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !15278 {
  %4 = alloca i1, align 1
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca %struct.parser, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !15281, metadata !DIExpression()), !dbg !15282
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !15283, metadata !DIExpression()), !dbg !15284
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !15285, metadata !DIExpression()), !dbg !15286
  call void @llvm.dbg.declare(metadata ptr %8, metadata !15287, metadata !DIExpression()), !dbg !15328
  call void @llvm.memset.p0.i64(ptr align 8 %8, i8 0, i64 224, i1 false), !dbg !15328
  %11 = getelementptr inbounds %struct.parser, ptr %8, i32 0, i32 0, !dbg !15329
  %12 = load ptr, ptr %5, align 8, !dbg !15330
  store ptr %12, ptr %11, align 8, !dbg !15329
  %13 = getelementptr inbounds %struct.parser, ptr %8, i32 0, i32 1, !dbg !15329
  %14 = load ptr, ptr %7, align 8, !dbg !15331
  store ptr %14, ptr %13, align 8, !dbg !15329
  %15 = getelementptr inbounds %struct.parser, ptr %8, i32 0, i32 6, !dbg !15329
  %16 = getelementptr inbounds %struct.anon.2.79, ptr %15, i32 0, i32 2, !dbg !15332
  store i64 16, ptr %16, align 8, !dbg !15332
  call void @llvm.dbg.declare(metadata ptr %9, metadata !15333, metadata !DIExpression()), !dbg !15339
  store ptr @parser_text, ptr %9, align 8, !dbg !15339
  call void @llvm.dbg.declare(metadata ptr %10, metadata !15340, metadata !DIExpression()), !dbg !15341
  store ptr null, ptr %10, align 8, !dbg !15341
  %17 = load ptr, ptr %7, align 8, !dbg !15342
  %18 = load ptr, ptr %6, align 8, !dbg !15344
  %19 = call zeroext i1 @parser_init(ptr noundef %8, ptr noundef %17, ptr noundef %18), !dbg !15345
  br i1 %19, label %21, label %20, !dbg !15346

20:                                               ; preds = %3
  store i1 false, ptr %4, align 1, !dbg !15347
  br label %42, !dbg !15347

21:                                               ; preds = %3
  br label %22, !dbg !15348

22:                                               ; preds = %35, %21
  %23 = load ptr, ptr %9, align 8, !dbg !15349
  %24 = icmp ne ptr %23, null, !dbg !15349
  br i1 %24, label %25, label %33, !dbg !15350

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.parser, ptr %8, i32 0, i32 3, !dbg !15351
  %27 = call zeroext i1 @lex_next(ptr noundef %26, ptr noundef %10), !dbg !15352
  br i1 %27, label %28, label %33, !dbg !15353

28:                                               ; preds = %25
  %29 = load ptr, ptr %10, align 8, !dbg !15354
  %30 = getelementptr inbounds %struct.item, ptr %29, i32 0, i32 0, !dbg !15355
  %31 = load i32, ptr %30, align 8, !dbg !15355
  %32 = icmp ne i32 %31, 0, !dbg !15356
  br label %33

33:                                               ; preds = %28, %25, %22
  %34 = phi i1 [ false, %25 ], [ false, %22 ], [ %32, %28 ], !dbg !15357
  br i1 %34, label %35, label %39, !dbg !15348

35:                                               ; preds = %33
  %36 = load ptr, ptr %9, align 8, !dbg !15358
  %37 = load ptr, ptr %10, align 8, !dbg !15359
  %38 = call ptr %36(ptr noundef %8, ptr noundef %37), !dbg !15358
  store ptr %38, ptr %9, align 8, !dbg !15360
  br label %22, !dbg !15348, !llvm.loop !15361

39:                                               ; preds = %33
  %40 = load ptr, ptr %10, align 8, !dbg !15363
  %41 = call zeroext i1 @parser_shutdown(ptr noundef %8, ptr noundef %40), !dbg !15364
  store i1 %41, ptr %4, align 1, !dbg !15365
  br label %42, !dbg !15365

42:                                               ; preds = %39, %20
  %43 = load i1, ptr %4, align 1, !dbg !15366
  ret i1 %43, !dbg !15366
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @parser_text(ptr noundef %0, ptr noundef %1) #0 !dbg !15367 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !15368, metadata !DIExpression()), !dbg !15369
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !15370, metadata !DIExpression()), !dbg !15371
  %7 = load ptr, ptr %5, align 8, !dbg !15372
  %8 = getelementptr inbounds %struct.item, ptr %7, i32 0, i32 0, !dbg !15374
  %9 = load i32, ptr %8, align 8, !dbg !15374
  %10 = icmp eq i32 %9, 3, !dbg !15375
  br i1 %10, label %11, label %12, !dbg !15376

11:                                               ; preds = %2
  store ptr @parser_meta, ptr %3, align 8, !dbg !15377
  br label %77, !dbg !15377

12:                                               ; preds = %2
  %13 = load ptr, ptr %5, align 8, !dbg !15378
  %14 = getelementptr inbounds %struct.item, ptr %13, i32 0, i32 0, !dbg !15380
  %15 = load i32, ptr %14, align 8, !dbg !15380
  %16 = icmp eq i32 %15, 6, !dbg !15381
  br i1 %16, label %17, label %67, !dbg !15382

17:                                               ; preds = %12
  %18 = load ptr, ptr %5, align 8, !dbg !15383
  %19 = getelementptr inbounds %struct.item, ptr %18, i32 0, i32 1, !dbg !15386
  %20 = getelementptr inbounds %struct.lwan_value_t_, ptr %19, i32 0, i32 1, !dbg !15387
  %21 = load i64, ptr %20, align 8, !dbg !15387
  %22 = icmp eq i64 %21, 1, !dbg !15388
  br i1 %22, label %23, label %32, !dbg !15389

23:                                               ; preds = %17
  %24 = load ptr, ptr %4, align 8, !dbg !15390
  %25 = load ptr, ptr %5, align 8, !dbg !15392
  %26 = getelementptr inbounds %struct.item, ptr %25, i32 0, i32 1, !dbg !15393
  %27 = getelementptr inbounds %struct.lwan_value_t_, ptr %26, i32 0, i32 0, !dbg !15394
  %28 = load ptr, ptr %27, align 8, !dbg !15394
  %29 = load i8, ptr %28, align 1, !dbg !15395
  %30 = sext i8 %29 to i64, !dbg !15396
  %31 = inttoptr i64 %30 to ptr, !dbg !15397
  call void @emit_chunk(ptr noundef %24, i32 noundef 1, i32 noundef 0, ptr noundef %31), !dbg !15398
  br label %56, !dbg !15399

32:                                               ; preds = %17
  call void @llvm.dbg.declare(metadata ptr %6, metadata !15400, metadata !DIExpression()), !dbg !15402
  %33 = load ptr, ptr %5, align 8, !dbg !15403
  %34 = getelementptr inbounds %struct.item, ptr %33, i32 0, i32 1, !dbg !15404
  %35 = getelementptr inbounds %struct.lwan_value_t_, ptr %34, i32 0, i32 1, !dbg !15405
  %36 = load i64, ptr %35, align 8, !dbg !15405
  %37 = call ptr @strbuf_new_with_size(i64 noundef %36), !dbg !15406
  store ptr %37, ptr %6, align 8, !dbg !15402
  %38 = load ptr, ptr %6, align 8, !dbg !15407
  %39 = icmp ne ptr %38, null, !dbg !15407
  br i1 %39, label %43, label %40, !dbg !15409

40:                                               ; preds = %32
  %41 = load ptr, ptr %5, align 8, !dbg !15410
  %42 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %41, ptr noundef @.str.9.343), !dbg !15411
  store ptr %42, ptr %3, align 8, !dbg !15412
  br label %77, !dbg !15412

43:                                               ; preds = %32
  %44 = load ptr, ptr %6, align 8, !dbg !15413
  %45 = load ptr, ptr %5, align 8, !dbg !15414
  %46 = getelementptr inbounds %struct.item, ptr %45, i32 0, i32 1, !dbg !15415
  %47 = getelementptr inbounds %struct.lwan_value_t_, ptr %46, i32 0, i32 0, !dbg !15416
  %48 = load ptr, ptr %47, align 8, !dbg !15416
  %49 = load ptr, ptr %5, align 8, !dbg !15417
  %50 = getelementptr inbounds %struct.item, ptr %49, i32 0, i32 1, !dbg !15418
  %51 = getelementptr inbounds %struct.lwan_value_t_, ptr %50, i32 0, i32 1, !dbg !15419
  %52 = load i64, ptr %51, align 8, !dbg !15419
  %53 = call zeroext i1 @strbuf_set(ptr noundef %44, ptr noundef %48, i64 noundef %52), !dbg !15420
  %54 = load ptr, ptr %4, align 8, !dbg !15421
  %55 = load ptr, ptr %6, align 8, !dbg !15422
  call void @emit_chunk(ptr noundef %54, i32 noundef 0, i32 noundef 0, ptr noundef %55), !dbg !15423
  br label %56

56:                                               ; preds = %43, %23
  %57 = load ptr, ptr %5, align 8, !dbg !15424
  %58 = getelementptr inbounds %struct.item, ptr %57, i32 0, i32 1, !dbg !15425
  %59 = getelementptr inbounds %struct.lwan_value_t_, ptr %58, i32 0, i32 1, !dbg !15426
  %60 = load i64, ptr %59, align 8, !dbg !15426
  %61 = load ptr, ptr %4, align 8, !dbg !15427
  %62 = getelementptr inbounds %struct.parser, ptr %61, i32 0, i32 0, !dbg !15428
  %63 = load ptr, ptr %62, align 8, !dbg !15428
  %64 = getelementptr inbounds %struct.lwan_value_t_, ptr %63, i32 0, i32 1, !dbg !15429
  %65 = load i64, ptr %64, align 8, !dbg !15430
  %66 = add i64 %65, %60, !dbg !15430
  store i64 %66, ptr %64, align 8, !dbg !15430
  store ptr @parser_text, ptr %3, align 8, !dbg !15431
  br label %77, !dbg !15431

67:                                               ; preds = %12
  %68 = load ptr, ptr %5, align 8, !dbg !15432
  %69 = getelementptr inbounds %struct.item, ptr %68, i32 0, i32 0, !dbg !15434
  %70 = load i32, ptr %69, align 8, !dbg !15434
  %71 = icmp eq i32 %70, 1, !dbg !15435
  br i1 %71, label %72, label %74, !dbg !15436

72:                                               ; preds = %67
  %73 = load ptr, ptr %4, align 8, !dbg !15437
  call void @emit_chunk(ptr noundef %73, i32 noundef 10, i32 noundef 0, ptr noundef null), !dbg !15439
  store ptr null, ptr %3, align 8, !dbg !15440
  br label %77, !dbg !15440

74:                                               ; preds = %67
  %75 = load ptr, ptr %5, align 8, !dbg !15441
  %76 = call ptr @unexpected_lexeme(ptr noundef %75), !dbg !15442
  store ptr %76, ptr %3, align 8, !dbg !15443
  br label %77, !dbg !15443

77:                                               ; preds = %74, %72, %56, %40, %11
  %78 = load ptr, ptr %3, align 8, !dbg !15444
  ret ptr %78, !dbg !15444
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @parser_init(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !15445 {
  %4 = alloca i1, align 1
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !15448, metadata !DIExpression()), !dbg !15449
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !15450, metadata !DIExpression()), !dbg !15451
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !15452, metadata !DIExpression()), !dbg !15453
  call void @llvm.dbg.declare(metadata ptr %8, metadata !15454, metadata !DIExpression()), !dbg !15455
  %9 = load ptr, ptr %5, align 8, !dbg !15456
  %10 = load ptr, ptr %6, align 8, !dbg !15458
  %11 = call i32 @symtab_push(ptr noundef %9, ptr noundef %10), !dbg !15459
  %12 = icmp slt i32 %11, 0, !dbg !15460
  br i1 %12, label %13, label %14, !dbg !15461

13:                                               ; preds = %3
  store i1 false, ptr %4, align 1, !dbg !15462
  br label %38, !dbg !15462

14:                                               ; preds = %3
  %15 = load ptr, ptr %5, align 8, !dbg !15463
  %16 = getelementptr inbounds %struct.parser, ptr %15, i32 0, i32 6, !dbg !15464
  %17 = getelementptr inbounds %struct.anon.2.79, ptr %16, i32 0, i32 2, !dbg !15465
  %18 = load i64, ptr %17, align 8, !dbg !15465
  %19 = call ptr @reallocarray(ptr noundef null, i64 noundef %18, i64 noundef 24) #18, !dbg !15466
  store ptr %19, ptr %8, align 8, !dbg !15467
  %20 = load ptr, ptr %8, align 8, !dbg !15468
  %21 = load ptr, ptr %5, align 8, !dbg !15469
  %22 = getelementptr inbounds %struct.parser, ptr %21, i32 0, i32 6, !dbg !15470
  %23 = getelementptr inbounds %struct.anon.2.79, ptr %22, i32 0, i32 0, !dbg !15471
  store ptr %20, ptr %23, align 8, !dbg !15472
  %24 = load ptr, ptr %5, align 8, !dbg !15473
  %25 = getelementptr inbounds %struct.parser, ptr %24, i32 0, i32 0, !dbg !15474
  %26 = load ptr, ptr %25, align 8, !dbg !15474
  %27 = getelementptr inbounds %struct.lwan_value_t_, ptr %26, i32 0, i32 0, !dbg !15475
  store ptr %20, ptr %27, align 8, !dbg !15476
  %28 = load ptr, ptr %8, align 8, !dbg !15477
  %29 = icmp ne ptr %28, null, !dbg !15477
  br i1 %29, label %32, label %30, !dbg !15479

30:                                               ; preds = %14
  %31 = load ptr, ptr %5, align 8, !dbg !15480
  call void @symtab_pop(ptr noundef %31), !dbg !15482
  store i1 false, ptr %4, align 1, !dbg !15483
  br label %38, !dbg !15483

32:                                               ; preds = %14
  %33 = load ptr, ptr %5, align 8, !dbg !15484
  %34 = getelementptr inbounds %struct.parser, ptr %33, i32 0, i32 3, !dbg !15485
  %35 = load ptr, ptr %7, align 8, !dbg !15486
  call void @lex_init(ptr noundef %34, ptr noundef %35), !dbg !15487
  %36 = load ptr, ptr %5, align 8, !dbg !15488
  %37 = getelementptr inbounds %struct.parser, ptr %36, i32 0, i32 5, !dbg !15489
  call void @list_head_init.336(ptr noundef %37), !dbg !15490
  store i1 true, ptr %4, align 1, !dbg !15491
  br label %38, !dbg !15491

38:                                               ; preds = %32, %30, %13
  %39 = load i1, ptr %4, align 1, !dbg !15492
  ret i1 %39, !dbg !15492
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @lex_next(ptr noundef %0, ptr noundef %1) #0 !dbg !15493 {
  %3 = alloca i1, align 1
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !15497, metadata !DIExpression()), !dbg !15498
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !15499, metadata !DIExpression()), !dbg !15500
  br label %6, !dbg !15501

6:                                                ; preds = %16, %2
  %7 = load ptr, ptr %4, align 8, !dbg !15502
  %8 = getelementptr inbounds %struct.lexer, ptr %7, i32 0, i32 0, !dbg !15503
  %9 = load ptr, ptr %8, align 8, !dbg !15503
  %10 = icmp ne ptr %9, null, !dbg !15501
  br i1 %10, label %11, label %24, !dbg !15501

11:                                               ; preds = %6
  %12 = load ptr, ptr %4, align 8, !dbg !15504
  %13 = load ptr, ptr %5, align 8, !dbg !15507
  %14 = call zeroext i1 @consume_item(ptr noundef %12, ptr noundef %13), !dbg !15508
  br i1 %14, label %15, label %16, !dbg !15509

15:                                               ; preds = %11
  store i1 true, ptr %3, align 1, !dbg !15510
  br label %28, !dbg !15510

16:                                               ; preds = %11
  %17 = load ptr, ptr %4, align 8, !dbg !15511
  %18 = getelementptr inbounds %struct.lexer, ptr %17, i32 0, i32 0, !dbg !15512
  %19 = load ptr, ptr %18, align 8, !dbg !15512
  %20 = load ptr, ptr %4, align 8, !dbg !15513
  %21 = call ptr %19(ptr noundef %20), !dbg !15511
  %22 = load ptr, ptr %4, align 8, !dbg !15514
  %23 = getelementptr inbounds %struct.lexer, ptr %22, i32 0, i32 0, !dbg !15515
  store ptr %21, ptr %23, align 8, !dbg !15516
  br label %6, !dbg !15501, !llvm.loop !15517

24:                                               ; preds = %6
  %25 = load ptr, ptr %4, align 8, !dbg !15519
  %26 = load ptr, ptr %5, align 8, !dbg !15520
  %27 = call zeroext i1 @consume_item(ptr noundef %25, ptr noundef %26), !dbg !15521
  store i1 %27, ptr %3, align 1, !dbg !15522
  br label %28, !dbg !15522

28:                                               ; preds = %24, %15
  %29 = load i1, ptr %3, align 1, !dbg !15523
  ret i1 %29, !dbg !15523
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @parser_shutdown(ptr noundef %0, ptr noundef %1) #0 !dbg !15524 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i8, align 1
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !15527, metadata !DIExpression()), !dbg !15528
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !15529, metadata !DIExpression()), !dbg !15530
  call void @llvm.dbg.declare(metadata ptr %5, metadata !15531, metadata !DIExpression()), !dbg !15532
  store i8 1, ptr %5, align 1, !dbg !15532
  %8 = load ptr, ptr %4, align 8, !dbg !15533
  %9 = getelementptr inbounds %struct.item, ptr %8, i32 0, i32 0, !dbg !15535
  %10 = load i32, ptr %9, align 8, !dbg !15535
  %11 = icmp eq i32 %10, 0, !dbg !15536
  br i1 %11, label %12, label %32, !dbg !15537

12:                                               ; preds = %2
  %13 = load ptr, ptr %4, align 8, !dbg !15538
  %14 = getelementptr inbounds %struct.item, ptr %13, i32 0, i32 1, !dbg !15539
  %15 = getelementptr inbounds %struct.lwan_value_t_, ptr %14, i32 0, i32 0, !dbg !15540
  %16 = load ptr, ptr %15, align 8, !dbg !15540
  %17 = icmp ne ptr %16, null, !dbg !15538
  br i1 %17, label %18, label %32, !dbg !15541

18:                                               ; preds = %12
  %19 = load ptr, ptr %4, align 8, !dbg !15542
  %20 = getelementptr inbounds %struct.item, ptr %19, i32 0, i32 1, !dbg !15542
  %21 = getelementptr inbounds %struct.lwan_value_t_, ptr %20, i32 0, i32 1, !dbg !15542
  %22 = load i64, ptr %21, align 8, !dbg !15542
  %23 = trunc i64 %22 to i32, !dbg !15542
  %24 = load ptr, ptr %4, align 8, !dbg !15542
  %25 = getelementptr inbounds %struct.item, ptr %24, i32 0, i32 1, !dbg !15542
  %26 = getelementptr inbounds %struct.lwan_value_t_, ptr %25, i32 0, i32 0, !dbg !15542
  %27 = load ptr, ptr %26, align 8, !dbg !15542
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_error_debug(ptr noundef @.str.7.320, i32 noundef 1041, ptr noundef @__FUNCTION__.parser_shutdown, ptr noundef @.str.44.321, i32 noundef %23, ptr noundef %27), !dbg !15542
  %28 = load ptr, ptr %4, align 8, !dbg !15544
  %29 = getelementptr inbounds %struct.item, ptr %28, i32 0, i32 1, !dbg !15545
  %30 = getelementptr inbounds %struct.lwan_value_t_, ptr %29, i32 0, i32 0, !dbg !15546
  %31 = load ptr, ptr %30, align 8, !dbg !15546
  call void @free(ptr noundef %31) #18, !dbg !15547
  store i8 0, ptr %5, align 1, !dbg !15548
  br label %32, !dbg !15549

32:                                               ; preds = %18, %12, %2
  %33 = load ptr, ptr %3, align 8, !dbg !15550
  %34 = getelementptr inbounds %struct.parser, ptr %33, i32 0, i32 5, !dbg !15552
  %35 = call zeroext i1 @list_empty.322(ptr noundef %34), !dbg !15553
  br i1 %35, label %78, label %36, !dbg !15554

36:                                               ; preds = %32
  call void @llvm.dbg.declare(metadata ptr %6, metadata !15555, metadata !DIExpression()), !dbg !15557
  call void @llvm.dbg.declare(metadata ptr %7, metadata !15558, metadata !DIExpression()), !dbg !15559
  %37 = load ptr, ptr %3, align 8, !dbg !15560
  %38 = getelementptr inbounds %struct.parser, ptr %37, i32 0, i32 5, !dbg !15560
  %39 = getelementptr inbounds %struct.list_head, ptr %38, i32 0, i32 0, !dbg !15560
  %40 = getelementptr inbounds %struct.list_node, ptr %39, i32 0, i32 0, !dbg !15560
  %41 = load ptr, ptr %40, align 8, !dbg !15560
  %42 = call ptr @list_node_to_off_.323(ptr noundef %41, i64 noundef 0), !dbg !15560
  store ptr %42, ptr %6, align 8, !dbg !15560
  %43 = load ptr, ptr %6, align 8, !dbg !15560
  %44 = call ptr @list_node_from_off_.324(ptr noundef %43, i64 noundef 0), !dbg !15560
  %45 = getelementptr inbounds %struct.list_node, ptr %44, i32 0, i32 0, !dbg !15560
  %46 = load ptr, ptr %45, align 8, !dbg !15560
  %47 = call ptr @list_node_to_off_.323(ptr noundef %46, i64 noundef 0), !dbg !15560
  store ptr %47, ptr %7, align 8, !dbg !15560
  br label %48, !dbg !15560

48:                                               ; preds = %70, %36
  %49 = load ptr, ptr %6, align 8, !dbg !15562
  %50 = call ptr @list_node_from_off_.324(ptr noundef %49, i64 noundef 0), !dbg !15562
  %51 = load ptr, ptr %3, align 8, !dbg !15562
  %52 = getelementptr inbounds %struct.parser, ptr %51, i32 0, i32 5, !dbg !15562
  %53 = getelementptr inbounds %struct.list_head, ptr %52, i32 0, i32 0, !dbg !15562
  %54 = icmp ne ptr %50, %53, !dbg !15562
  br i1 %54, label %55, label %77, !dbg !15560

55:                                               ; preds = %48
  %56 = load ptr, ptr %6, align 8, !dbg !15564
  %57 = getelementptr inbounds %struct.stacked_item, ptr %56, i32 0, i32 1, !dbg !15564
  %58 = getelementptr inbounds %struct.item, ptr %57, i32 0, i32 1, !dbg !15564
  %59 = getelementptr inbounds %struct.lwan_value_t_, ptr %58, i32 0, i32 1, !dbg !15564
  %60 = load i64, ptr %59, align 8, !dbg !15564
  %61 = trunc i64 %60 to i32, !dbg !15564
  %62 = load ptr, ptr %6, align 8, !dbg !15564
  %63 = getelementptr inbounds %struct.stacked_item, ptr %62, i32 0, i32 1, !dbg !15564
  %64 = getelementptr inbounds %struct.item, ptr %63, i32 0, i32 1, !dbg !15564
  %65 = getelementptr inbounds %struct.lwan_value_t_, ptr %64, i32 0, i32 0, !dbg !15564
  %66 = load ptr, ptr %65, align 8, !dbg !15564
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_error_debug(ptr noundef @.str.7.320, i32 noundef 1052, ptr noundef @__FUNCTION__.parser_shutdown, ptr noundef @.str.45.325, i32 noundef %61, ptr noundef %66), !dbg !15564
  %67 = load ptr, ptr %6, align 8, !dbg !15566
  %68 = getelementptr inbounds %struct.stacked_item, ptr %67, i32 0, i32 0, !dbg !15567
  call void @list_del.326(ptr noundef %68), !dbg !15568
  %69 = load ptr, ptr %6, align 8, !dbg !15569
  call void @free(ptr noundef %69) #18, !dbg !15570
  br label %70, !dbg !15571

70:                                               ; preds = %55
  %71 = load ptr, ptr %7, align 8, !dbg !15562
  store ptr %71, ptr %6, align 8, !dbg !15562
  %72 = load ptr, ptr %6, align 8, !dbg !15562
  %73 = call ptr @list_node_from_off_.324(ptr noundef %72, i64 noundef 0), !dbg !15562
  %74 = getelementptr inbounds %struct.list_node, ptr %73, i32 0, i32 0, !dbg !15562
  %75 = load ptr, ptr %74, align 8, !dbg !15562
  %76 = call ptr @list_node_to_off_.323(ptr noundef %75, i64 noundef 0), !dbg !15562
  store ptr %76, ptr %7, align 8, !dbg !15562
  br label %48, !dbg !15562, !llvm.loop !15572

77:                                               ; preds = %48
  store i8 0, ptr %5, align 1, !dbg !15574
  br label %78, !dbg !15575

78:                                               ; preds = %77, %32
  %79 = load ptr, ptr %3, align 8, !dbg !15576
  call void @symtab_pop(ptr noundef %79), !dbg !15577
  %80 = load ptr, ptr %3, align 8, !dbg !15578
  %81 = getelementptr inbounds %struct.parser, ptr %80, i32 0, i32 2, !dbg !15580
  %82 = load ptr, ptr %81, align 8, !dbg !15580
  %83 = icmp ne ptr %82, null, !dbg !15578
  br i1 %83, label %84, label %93, !dbg !15581

84:                                               ; preds = %78
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_error_debug(ptr noundef @.str.7.320, i32 noundef 1062, ptr noundef @__FUNCTION__.parser_shutdown, ptr noundef @.str.46.327), !dbg !15582
  br label %85, !dbg !15584

85:                                               ; preds = %90, %84
  %86 = load ptr, ptr %3, align 8, !dbg !15585
  %87 = getelementptr inbounds %struct.parser, ptr %86, i32 0, i32 2, !dbg !15586
  %88 = load ptr, ptr %87, align 8, !dbg !15586
  %89 = icmp ne ptr %88, null, !dbg !15584
  br i1 %89, label %90, label %92, !dbg !15584

90:                                               ; preds = %85
  %91 = load ptr, ptr %3, align 8, !dbg !15587
  call void @symtab_pop(ptr noundef %91), !dbg !15588
  br label %85, !dbg !15584, !llvm.loop !15589

92:                                               ; preds = %85
  store i8 0, ptr %5, align 1, !dbg !15591
  br label %93, !dbg !15592

93:                                               ; preds = %92, %78
  %94 = load ptr, ptr %3, align 8, !dbg !15593
  %95 = getelementptr inbounds %struct.parser, ptr %94, i32 0, i32 4, !dbg !15595
  %96 = load i32, ptr %95, align 8, !dbg !15595
  %97 = and i32 %96, 1, !dbg !15596
  %98 = icmp ne i32 %97, 0, !dbg !15596
  br i1 %98, label %99, label %100, !dbg !15597

99:                                               ; preds = %93
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_error_debug(ptr noundef @.str.7.320, i32 noundef 1071, ptr noundef @__FUNCTION__.parser_shutdown, ptr noundef @.str.47.328), !dbg !15598
  store i8 0, ptr %5, align 1, !dbg !15600
  br label %100, !dbg !15601

100:                                              ; preds = %99, %93
  %101 = load ptr, ptr %3, align 8, !dbg !15602
  %102 = getelementptr inbounds %struct.parser, ptr %101, i32 0, i32 4, !dbg !15604
  %103 = load i32, ptr %102, align 8, !dbg !15604
  %104 = and i32 %103, 2, !dbg !15605
  %105 = icmp ne i32 %104, 0, !dbg !15605
  br i1 %105, label %106, label %107, !dbg !15606

106:                                              ; preds = %100
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_error_debug(ptr noundef @.str.7.320, i32 noundef 1075, ptr noundef @__FUNCTION__.parser_shutdown, ptr noundef @.str.48.329), !dbg !15607
  store i8 0, ptr %5, align 1, !dbg !15609
  br label %107, !dbg !15610

107:                                              ; preds = %106, %100
  %108 = load i8, ptr %5, align 1, !dbg !15611
  %109 = trunc i8 %108 to i1, !dbg !15611
  br i1 %109, label %110, label %114, !dbg !15613

110:                                              ; preds = %107
  %111 = load ptr, ptr %3, align 8, !dbg !15614
  %112 = call zeroext i1 @post_process_template(ptr noundef %111), !dbg !15615
  %113 = zext i1 %112 to i8, !dbg !15616
  store i8 %113, ptr %5, align 1, !dbg !15616
  br label %114, !dbg !15617

114:                                              ; preds = %110, %107
  %115 = load i8, ptr %5, align 1, !dbg !15618
  %116 = trunc i8 %115 to i1, !dbg !15618
  br i1 %116, label %119, label %117, !dbg !15620

117:                                              ; preds = %114
  %118 = load ptr, ptr %3, align 8, !dbg !15621
  call void @emit_chunk(ptr noundef %118, i32 noundef 10, i32 noundef 0, ptr noundef null), !dbg !15623
  br label %119, !dbg !15624

119:                                              ; preds = %117, %114
  %120 = load i8, ptr %5, align 1, !dbg !15625
  %121 = trunc i8 %120 to i1, !dbg !15625
  ret i1 %121, !dbg !15626
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @list_empty.322(ptr noundef %0) #0 !dbg !15627 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !15632, metadata !DIExpression()), !dbg !15633
  %3 = load ptr, ptr %2, align 8, !dbg !15634
  %4 = load ptr, ptr %2, align 8, !dbg !15635
  %5 = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 0, !dbg !15636
  %6 = getelementptr inbounds %struct.list_node, ptr %5, i32 0, i32 0, !dbg !15637
  %7 = load ptr, ptr %6, align 8, !dbg !15637
  %8 = load ptr, ptr %2, align 8, !dbg !15638
  %9 = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 0, !dbg !15639
  %10 = icmp eq ptr %7, %9, !dbg !15640
  ret i1 %10, !dbg !15641
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @list_node_to_off_.323(ptr noundef %0, i64 noundef %1) #0 !dbg !15642 {
  %3 = alloca ptr, align 8
  %4 = alloca i64, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !15645, metadata !DIExpression()), !dbg !15646
  store i64 %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !15647, metadata !DIExpression()), !dbg !15648
  %5 = load ptr, ptr %3, align 8, !dbg !15649
  %6 = load i64, ptr %4, align 8, !dbg !15650
  %7 = sub i64 0, %6, !dbg !15651
  %8 = getelementptr inbounds i8, ptr %5, i64 %7, !dbg !15651
  ret ptr %8, !dbg !15652
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @list_node_from_off_.324(ptr noundef %0, i64 noundef %1) #0 !dbg !15653 {
  %3 = alloca ptr, align 8
  %4 = alloca i64, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !15656, metadata !DIExpression()), !dbg !15657
  store i64 %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !15658, metadata !DIExpression()), !dbg !15659
  %5 = load ptr, ptr %3, align 8, !dbg !15660
  %6 = load i64, ptr %4, align 8, !dbg !15661
  %7 = getelementptr inbounds i8, ptr %5, i64 %6, !dbg !15662
  ret ptr %7, !dbg !15663
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @list_del.326(ptr noundef %0) #0 !dbg !15664 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !15667, metadata !DIExpression()), !dbg !15668
  %3 = load ptr, ptr %2, align 8, !dbg !15669
  %4 = load ptr, ptr %2, align 8, !dbg !15670
  %5 = getelementptr inbounds %struct.list_node, ptr %4, i32 0, i32 1, !dbg !15671
  %6 = load ptr, ptr %5, align 8, !dbg !15671
  %7 = load ptr, ptr %2, align 8, !dbg !15672
  %8 = getelementptr inbounds %struct.list_node, ptr %7, i32 0, i32 0, !dbg !15673
  %9 = load ptr, ptr %8, align 8, !dbg !15673
  %10 = getelementptr inbounds %struct.list_node, ptr %9, i32 0, i32 1, !dbg !15674
  store ptr %6, ptr %10, align 8, !dbg !15675
  %11 = load ptr, ptr %2, align 8, !dbg !15676
  %12 = getelementptr inbounds %struct.list_node, ptr %11, i32 0, i32 0, !dbg !15677
  %13 = load ptr, ptr %12, align 8, !dbg !15677
  %14 = load ptr, ptr %2, align 8, !dbg !15678
  %15 = getelementptr inbounds %struct.list_node, ptr %14, i32 0, i32 1, !dbg !15679
  %16 = load ptr, ptr %15, align 8, !dbg !15679
  %17 = getelementptr inbounds %struct.list_node, ptr %16, i32 0, i32 0, !dbg !15680
  store ptr %13, ptr %17, align 8, !dbg !15681
  ret void, !dbg !15682
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @symtab_pop(ptr noundef %0) #0 !dbg !15683 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !15686, metadata !DIExpression()), !dbg !15687
  call void @llvm.dbg.declare(metadata ptr %3, metadata !15688, metadata !DIExpression()), !dbg !15689
  %4 = load ptr, ptr %2, align 8, !dbg !15690
  %5 = getelementptr inbounds %struct.parser, ptr %4, i32 0, i32 2, !dbg !15691
  %6 = load ptr, ptr %5, align 8, !dbg !15691
  store ptr %6, ptr %3, align 8, !dbg !15689
  %7 = load ptr, ptr %3, align 8, !dbg !15692
  %8 = icmp ne ptr %7, null, !dbg !15692
  br i1 %8, label %9, label %10, !dbg !15695

9:                                                ; preds = %1
  br label %11, !dbg !15695

10:                                               ; preds = %1
  call void @__assert_fail(ptr noundef @.str.34.335, ptr noundef @.str.7.320, i32 noundef 236, ptr noundef @__PRETTY_FUNCTION__.symtab_pop) #21, !dbg !15692
  unreachable, !dbg !15692

11:                                               ; preds = %9
  %12 = load ptr, ptr %3, align 8, !dbg !15696
  %13 = getelementptr inbounds %struct.list_node, ptr %12, i32 0, i32 0, !dbg !15697
  %14 = load ptr, ptr %13, align 8, !dbg !15697
  call void @hash_free(ptr noundef %14), !dbg !15698
  %15 = load ptr, ptr %3, align 8, !dbg !15699
  %16 = getelementptr inbounds %struct.list_node, ptr %15, i32 0, i32 1, !dbg !15700
  %17 = load ptr, ptr %16, align 8, !dbg !15700
  %18 = load ptr, ptr %2, align 8, !dbg !15701
  %19 = getelementptr inbounds %struct.parser, ptr %18, i32 0, i32 2, !dbg !15702
  store ptr %17, ptr %19, align 8, !dbg !15703
  %20 = load ptr, ptr %3, align 8, !dbg !15704
  call void @free(ptr noundef %20) #18, !dbg !15705
  ret void, !dbg !15706
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @post_process_template(ptr noundef %0) #0 !dbg !15707 {
  %2 = alloca i1, align 1
  %3 = alloca ptr, align 8
  %4 = alloca i64, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca i8, align 1
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !15710, metadata !DIExpression()), !dbg !15711
  call void @llvm.dbg.declare(metadata ptr %4, metadata !15712, metadata !DIExpression()), !dbg !15713
  call void @llvm.dbg.declare(metadata ptr %5, metadata !15714, metadata !DIExpression()), !dbg !15715
  call void @llvm.dbg.declare(metadata ptr %6, metadata !15716, metadata !DIExpression()), !dbg !15717
  store i64 0, ptr %4, align 8, !dbg !15718
  br label %13, !dbg !15720

13:                                               ; preds = %225, %1
  %14 = load i64, ptr %4, align 8, !dbg !15721
  %15 = load ptr, ptr %3, align 8, !dbg !15723
  %16 = getelementptr inbounds %struct.parser, ptr %15, i32 0, i32 6, !dbg !15724
  %17 = getelementptr inbounds %struct.anon.2.79, ptr %16, i32 0, i32 1, !dbg !15725
  %18 = load i64, ptr %17, align 8, !dbg !15725
  %19 = icmp ult i64 %14, %18, !dbg !15726
  br i1 %19, label %20, label %228, !dbg !15727

20:                                               ; preds = %13
  call void @llvm.dbg.declare(metadata ptr %7, metadata !15728, metadata !DIExpression()), !dbg !15730
  %21 = load ptr, ptr %3, align 8, !dbg !15731
  %22 = getelementptr inbounds %struct.parser, ptr %21, i32 0, i32 6, !dbg !15732
  %23 = getelementptr inbounds %struct.anon.2.79, ptr %22, i32 0, i32 0, !dbg !15733
  %24 = load ptr, ptr %23, align 8, !dbg !15733
  %25 = load i64, ptr %4, align 8, !dbg !15734
  %26 = getelementptr inbounds %struct.chunk, ptr %24, i64 %25, !dbg !15731
  store ptr %26, ptr %7, align 8, !dbg !15730
  %27 = load ptr, ptr %7, align 8, !dbg !15735
  %28 = getelementptr inbounds %struct.chunk, ptr %27, i32 0, i32 0, !dbg !15737
  %29 = load i32, ptr %28, align 8, !dbg !15737
  %30 = icmp eq i32 %29, 7, !dbg !15738
  br i1 %30, label %31, label %88, !dbg !15739

31:                                               ; preds = %20
  %32 = load ptr, ptr %7, align 8, !dbg !15740
  store ptr %32, ptr %5, align 8, !dbg !15743
  br label %33, !dbg !15744

33:                                               ; preds = %54, %31
  %34 = load ptr, ptr %7, align 8, !dbg !15745
  %35 = getelementptr inbounds %struct.chunk, ptr %34, i32 0, i32 0, !dbg !15749
  %36 = load i32, ptr %35, align 8, !dbg !15749
  %37 = icmp eq i32 %36, 10, !dbg !15750
  br i1 %37, label %38, label %39, !dbg !15751

38:                                               ; preds = %33
  br label %57, !dbg !15752

39:                                               ; preds = %33
  %40 = load ptr, ptr %7, align 8, !dbg !15753
  %41 = getelementptr inbounds %struct.chunk, ptr %40, i32 0, i32 0, !dbg !15755
  %42 = load i32, ptr %41, align 8, !dbg !15755
  %43 = icmp eq i32 %42, 8, !dbg !15756
  br i1 %43, label %44, label %53, !dbg !15757

44:                                               ; preds = %39
  %45 = load ptr, ptr %7, align 8, !dbg !15758
  %46 = getelementptr inbounds %struct.chunk, ptr %45, i32 0, i32 1, !dbg !15759
  %47 = load ptr, ptr %46, align 8, !dbg !15759
  %48 = load ptr, ptr %5, align 8, !dbg !15760
  %49 = getelementptr inbounds %struct.chunk, ptr %48, i32 0, i32 1, !dbg !15761
  %50 = load ptr, ptr %49, align 8, !dbg !15761
  %51 = icmp eq ptr %47, %50, !dbg !15762
  br i1 %51, label %52, label %53, !dbg !15763

52:                                               ; preds = %44
  br label %57, !dbg !15764

53:                                               ; preds = %44, %39
  br label %54, !dbg !15765

54:                                               ; preds = %53
  %55 = load ptr, ptr %7, align 8, !dbg !15766
  %56 = getelementptr inbounds %struct.chunk, ptr %55, i32 1, !dbg !15766
  store ptr %56, ptr %7, align 8, !dbg !15766
  br label %33, !dbg !15767, !llvm.loop !15768

57:                                               ; preds = %52, %38
  call void @llvm.dbg.declare(metadata ptr %8, metadata !15771, metadata !DIExpression()), !dbg !15778
  %58 = call noalias ptr @malloc(i64 noundef 16) #17, !dbg !15779
  store ptr %58, ptr %8, align 8, !dbg !15778
  %59 = load ptr, ptr %8, align 8, !dbg !15780
  %60 = icmp ne ptr %59, null, !dbg !15780
  br i1 %60, label %62, label %61, !dbg !15782

61:                                               ; preds = %57
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.7.320, i32 noundef 944, ptr noundef @__FUNCTION__.post_process_template, ptr noundef @.str.49.331) #23, !dbg !15783
  unreachable, !dbg !15783

62:                                               ; preds = %57
  %63 = load ptr, ptr %5, align 8, !dbg !15784
  %64 = getelementptr inbounds %struct.chunk, ptr %63, i32 0, i32 1, !dbg !15785
  %65 = load ptr, ptr %64, align 8, !dbg !15785
  %66 = load ptr, ptr %8, align 8, !dbg !15786
  %67 = getelementptr inbounds %struct.list_node, ptr %66, i32 0, i32 1, !dbg !15787
  store ptr %65, ptr %67, align 8, !dbg !15788
  %68 = load ptr, ptr %7, align 8, !dbg !15789
  %69 = load ptr, ptr %8, align 8, !dbg !15790
  %70 = getelementptr inbounds %struct.list_node, ptr %69, i32 0, i32 0, !dbg !15791
  store ptr %68, ptr %70, align 8, !dbg !15792
  %71 = load ptr, ptr %8, align 8, !dbg !15793
  %72 = load ptr, ptr %5, align 8, !dbg !15794
  %73 = getelementptr inbounds %struct.chunk, ptr %72, i32 0, i32 1, !dbg !15795
  store ptr %71, ptr %73, align 8, !dbg !15796
  %74 = load ptr, ptr %5, align 8, !dbg !15797
  %75 = getelementptr inbounds %struct.chunk, ptr %74, i32 0, i32 2, !dbg !15798
  %76 = load i32, ptr %75, align 8, !dbg !15799
  %77 = and i32 %76, -5, !dbg !15799
  store i32 %77, ptr %75, align 8, !dbg !15799
  %78 = load ptr, ptr %5, align 8, !dbg !15800
  %79 = load ptr, ptr %3, align 8, !dbg !15800
  %80 = getelementptr inbounds %struct.parser, ptr %79, i32 0, i32 6, !dbg !15800
  %81 = getelementptr inbounds %struct.anon.2.79, ptr %80, i32 0, i32 0, !dbg !15800
  %82 = load ptr, ptr %81, align 8, !dbg !15800
  %83 = ptrtoint ptr %78 to i64, !dbg !15800
  %84 = ptrtoint ptr %82 to i64, !dbg !15800
  %85 = sub i64 %83, %84, !dbg !15800
  %86 = sdiv exact i64 %85, 24, !dbg !15800
  %87 = add i64 %86, 1, !dbg !15801
  store i64 %87, ptr %4, align 8, !dbg !15802
  br label %224, !dbg !15803

88:                                               ; preds = %20
  %89 = load ptr, ptr %7, align 8, !dbg !15804
  %90 = getelementptr inbounds %struct.chunk, ptr %89, i32 0, i32 0, !dbg !15806
  %91 = load i32, ptr %90, align 8, !dbg !15806
  %92 = icmp eq i32 %91, 5, !dbg !15807
  br i1 %92, label %93, label %167, !dbg !15808

93:                                               ; preds = %88
  call void @llvm.dbg.declare(metadata ptr %9, metadata !15809, metadata !DIExpression()), !dbg !15811
  %94 = load ptr, ptr %7, align 8, !dbg !15812
  %95 = getelementptr inbounds %struct.chunk, ptr %94, i32 0, i32 2, !dbg !15813
  %96 = load i32, ptr %95, align 8, !dbg !15813
  store i32 %96, ptr %9, align 4, !dbg !15811
  %97 = load ptr, ptr %7, align 8, !dbg !15814
  store ptr %97, ptr %5, align 8, !dbg !15816
  br label %98, !dbg !15817

98:                                               ; preds = %122, %93
  %99 = load ptr, ptr %7, align 8, !dbg !15818
  %100 = getelementptr inbounds %struct.chunk, ptr %99, i32 0, i32 0, !dbg !15822
  %101 = load i32, ptr %100, align 8, !dbg !15822
  %102 = icmp eq i32 %101, 10, !dbg !15823
  br i1 %102, label %103, label %104, !dbg !15824

103:                                              ; preds = %98
  br label %125, !dbg !15825

104:                                              ; preds = %98
  %105 = load ptr, ptr %7, align 8, !dbg !15826
  %106 = getelementptr inbounds %struct.chunk, ptr %105, i32 0, i32 0, !dbg !15828
  %107 = load i32, ptr %106, align 8, !dbg !15828
  %108 = icmp eq i32 %107, 6, !dbg !15829
  br i1 %108, label %109, label %121, !dbg !15830

109:                                              ; preds = %104
  %110 = load ptr, ptr %7, align 8, !dbg !15831
  %111 = getelementptr inbounds %struct.chunk, ptr %110, i32 0, i32 1, !dbg !15832
  %112 = load ptr, ptr %111, align 8, !dbg !15832
  %113 = load ptr, ptr %5, align 8, !dbg !15833
  %114 = icmp eq ptr %112, %113, !dbg !15834
  br i1 %114, label %115, label %121, !dbg !15835

115:                                              ; preds = %109
  %116 = load i32, ptr %9, align 4, !dbg !15836
  %117 = load ptr, ptr %7, align 8, !dbg !15838
  %118 = getelementptr inbounds %struct.chunk, ptr %117, i32 0, i32 2, !dbg !15839
  %119 = load i32, ptr %118, align 8, !dbg !15840
  %120 = or i32 %119, %116, !dbg !15840
  store i32 %120, ptr %118, align 8, !dbg !15840
  br label %125, !dbg !15841

121:                                              ; preds = %109, %104
  br label %122, !dbg !15842

122:                                              ; preds = %121
  %123 = load ptr, ptr %7, align 8, !dbg !15843
  %124 = getelementptr inbounds %struct.chunk, ptr %123, i32 1, !dbg !15843
  store ptr %124, ptr %7, align 8, !dbg !15843
  br label %98, !dbg !15844, !llvm.loop !15845

125:                                              ; preds = %115, %103
  call void @llvm.dbg.declare(metadata ptr %10, metadata !15848, metadata !DIExpression()), !dbg !15849
  %126 = call noalias ptr @malloc(i64 noundef 16) #17, !dbg !15850
  store ptr %126, ptr %10, align 8, !dbg !15849
  %127 = load ptr, ptr %10, align 8, !dbg !15851
  %128 = icmp ne ptr %127, null, !dbg !15851
  br i1 %128, label %130, label %129, !dbg !15853

129:                                              ; preds = %125
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.7.320, i32 noundef 966, ptr noundef @__FUNCTION__.post_process_template, ptr noundef @.str.49.331) #23, !dbg !15854
  unreachable, !dbg !15854

130:                                              ; preds = %125
  %131 = load ptr, ptr %5, align 8, !dbg !15855
  %132 = getelementptr inbounds %struct.chunk, ptr %131, i32 0, i32 1, !dbg !15856
  %133 = load ptr, ptr %132, align 8, !dbg !15856
  %134 = load ptr, ptr %10, align 8, !dbg !15857
  %135 = getelementptr inbounds %struct.list_node, ptr %134, i32 0, i32 1, !dbg !15858
  store ptr %133, ptr %135, align 8, !dbg !15859
  %136 = load ptr, ptr %10, align 8, !dbg !15860
  %137 = load ptr, ptr %5, align 8, !dbg !15861
  %138 = getelementptr inbounds %struct.chunk, ptr %137, i32 0, i32 1, !dbg !15862
  store ptr %136, ptr %138, align 8, !dbg !15863
  %139 = load ptr, ptr %5, align 8, !dbg !15864
  %140 = getelementptr inbounds %struct.chunk, ptr %139, i32 0, i32 2, !dbg !15865
  %141 = load i32, ptr %140, align 8, !dbg !15866
  %142 = and i32 %141, -5, !dbg !15866
  store i32 %142, ptr %140, align 8, !dbg !15866
  %143 = load ptr, ptr %7, align 8, !dbg !15867
  %144 = getelementptr inbounds %struct.chunk, ptr %143, i32 0, i32 0, !dbg !15869
  %145 = load i32, ptr %144, align 8, !dbg !15869
  %146 = icmp eq i32 %145, 10, !dbg !15870
  br i1 %146, label %147, label %151, !dbg !15871

147:                                              ; preds = %130
  %148 = load ptr, ptr %7, align 8, !dbg !15872
  %149 = load ptr, ptr %10, align 8, !dbg !15873
  %150 = getelementptr inbounds %struct.list_node, ptr %149, i32 0, i32 0, !dbg !15874
  store ptr %148, ptr %150, align 8, !dbg !15875
  br label %156, !dbg !15873

151:                                              ; preds = %130
  %152 = load ptr, ptr %7, align 8, !dbg !15876
  %153 = getelementptr inbounds %struct.chunk, ptr %152, i64 1, !dbg !15877
  %154 = load ptr, ptr %10, align 8, !dbg !15878
  %155 = getelementptr inbounds %struct.list_node, ptr %154, i32 0, i32 0, !dbg !15879
  store ptr %153, ptr %155, align 8, !dbg !15880
  br label %156

156:                                              ; preds = %151, %147
  %157 = load ptr, ptr %5, align 8, !dbg !15881
  %158 = load ptr, ptr %3, align 8, !dbg !15881
  %159 = getelementptr inbounds %struct.parser, ptr %158, i32 0, i32 6, !dbg !15881
  %160 = getelementptr inbounds %struct.anon.2.79, ptr %159, i32 0, i32 0, !dbg !15881
  %161 = load ptr, ptr %160, align 8, !dbg !15881
  %162 = ptrtoint ptr %157 to i64, !dbg !15881
  %163 = ptrtoint ptr %161 to i64, !dbg !15881
  %164 = sub i64 %162, %163, !dbg !15881
  %165 = sdiv exact i64 %164, 24, !dbg !15881
  %166 = add i64 %165, 1, !dbg !15882
  store i64 %166, ptr %4, align 8, !dbg !15883
  br label %223, !dbg !15884

167:                                              ; preds = %88
  %168 = load ptr, ptr %7, align 8, !dbg !15885
  %169 = getelementptr inbounds %struct.chunk, ptr %168, i32 0, i32 0, !dbg !15887
  %170 = load i32, ptr %169, align 8, !dbg !15887
  %171 = icmp eq i32 %170, 2, !dbg !15888
  br i1 %171, label %172, label %215, !dbg !15889

172:                                              ; preds = %167
  call void @llvm.dbg.declare(metadata ptr %11, metadata !15890, metadata !DIExpression()), !dbg !15892
  %173 = load ptr, ptr %7, align 8, !dbg !15893
  %174 = getelementptr inbounds %struct.chunk, ptr %173, i32 0, i32 1, !dbg !15894
  %175 = load ptr, ptr %174, align 8, !dbg !15894
  store ptr %175, ptr %11, align 8, !dbg !15892
  call void @llvm.dbg.declare(metadata ptr %12, metadata !15895, metadata !DIExpression()), !dbg !15896
  %176 = load ptr, ptr %7, align 8, !dbg !15897
  %177 = getelementptr inbounds %struct.chunk, ptr %176, i32 0, i32 2, !dbg !15898
  %178 = load i32, ptr %177, align 8, !dbg !15898
  %179 = and i32 %178, 2, !dbg !15899
  %180 = icmp ne i32 %179, 0, !dbg !15897
  %181 = zext i1 %180 to i8, !dbg !15896
  store i8 %181, ptr %12, align 1, !dbg !15896
  %182 = load ptr, ptr %11, align 8, !dbg !15900
  %183 = getelementptr inbounds %struct.lwan_var_descriptor_t_, ptr %182, i32 0, i32 2, !dbg !15902
  %184 = load ptr, ptr %183, align 8, !dbg !15902
  %185 = icmp eq ptr %184, @lwan_append_str_to_strbuf, !dbg !15903
  br i1 %185, label %186, label %202, !dbg !15904

186:                                              ; preds = %172
  %187 = load i8, ptr %12, align 1, !dbg !15905
  %188 = trunc i8 %187 to i1, !dbg !15905
  br i1 %188, label %189, label %192, !dbg !15908

189:                                              ; preds = %186
  %190 = load ptr, ptr %7, align 8, !dbg !15909
  %191 = getelementptr inbounds %struct.chunk, ptr %190, i32 0, i32 0, !dbg !15910
  store i32 4, ptr %191, align 8, !dbg !15911
  br label %195, !dbg !15909

192:                                              ; preds = %186
  %193 = load ptr, ptr %7, align 8, !dbg !15912
  %194 = getelementptr inbounds %struct.chunk, ptr %193, i32 0, i32 0, !dbg !15913
  store i32 3, ptr %194, align 8, !dbg !15914
  br label %195

195:                                              ; preds = %192, %189
  %196 = load ptr, ptr %11, align 8, !dbg !15915
  %197 = getelementptr inbounds %struct.lwan_var_descriptor_t_, ptr %196, i32 0, i32 1, !dbg !15916
  %198 = load i64, ptr %197, align 8, !dbg !15916
  %199 = inttoptr i64 %198 to ptr, !dbg !15917
  %200 = load ptr, ptr %7, align 8, !dbg !15918
  %201 = getelementptr inbounds %struct.chunk, ptr %200, i32 0, i32 1, !dbg !15919
  store ptr %199, ptr %201, align 8, !dbg !15920
  br label %214, !dbg !15921

202:                                              ; preds = %172
  %203 = load i8, ptr %12, align 1, !dbg !15922
  %204 = trunc i8 %203 to i1, !dbg !15922
  br i1 %204, label %205, label %206, !dbg !15924

205:                                              ; preds = %202
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_error_debug(ptr noundef @.str.7.320, i32 noundef 989, ptr noundef @__FUNCTION__.post_process_template, ptr noundef @.str.50.332), !dbg !15925
  store i1 false, ptr %2, align 1, !dbg !15927
  br label %273, !dbg !15927

206:                                              ; preds = %202
  %207 = load ptr, ptr %11, align 8, !dbg !15928
  %208 = getelementptr inbounds %struct.lwan_var_descriptor_t_, ptr %207, i32 0, i32 2, !dbg !15930
  %209 = load ptr, ptr %208, align 8, !dbg !15930
  %210 = icmp ne ptr %209, null, !dbg !15928
  br i1 %210, label %212, label %211, !dbg !15931

211:                                              ; preds = %206
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_error_debug(ptr noundef @.str.7.320, i32 noundef 992, ptr noundef @__FUNCTION__.post_process_template, ptr noundef @.str.51.333), !dbg !15932
  store i1 false, ptr %2, align 1, !dbg !15934
  br label %273, !dbg !15934

212:                                              ; preds = %206
  br label %213

213:                                              ; preds = %212
  br label %214

214:                                              ; preds = %213, %195
  br label %222, !dbg !15935

215:                                              ; preds = %167
  %216 = load ptr, ptr %7, align 8, !dbg !15936
  %217 = getelementptr inbounds %struct.chunk, ptr %216, i32 0, i32 0, !dbg !15938
  %218 = load i32, ptr %217, align 8, !dbg !15938
  %219 = icmp eq i32 %218, 10, !dbg !15939
  br i1 %219, label %220, label %221, !dbg !15940

220:                                              ; preds = %215
  br label %228, !dbg !15941

221:                                              ; preds = %215
  br label %222

222:                                              ; preds = %221, %214
  br label %223

223:                                              ; preds = %222, %156
  br label %224

224:                                              ; preds = %223, %62
  br label %225, !dbg !15943

225:                                              ; preds = %224
  %226 = load i64, ptr %4, align 8, !dbg !15944
  %227 = add i64 %226, 1, !dbg !15944
  store i64 %227, ptr %4, align 8, !dbg !15944
  br label %13, !dbg !15945, !llvm.loop !15946

228:                                              ; preds = %220, %13
  %229 = load ptr, ptr %3, align 8, !dbg !15948
  %230 = getelementptr inbounds %struct.parser, ptr %229, i32 0, i32 6, !dbg !15950
  %231 = getelementptr inbounds %struct.anon.2.79, ptr %230, i32 0, i32 2, !dbg !15951
  %232 = load i64, ptr %231, align 8, !dbg !15951
  %233 = load ptr, ptr %3, align 8, !dbg !15952
  %234 = getelementptr inbounds %struct.parser, ptr %233, i32 0, i32 6, !dbg !15953
  %235 = getelementptr inbounds %struct.anon.2.79, ptr %234, i32 0, i32 1, !dbg !15954
  %236 = load i64, ptr %235, align 8, !dbg !15954
  %237 = icmp ne i64 %232, %236, !dbg !15955
  br i1 %237, label %238, label %264, !dbg !15956

238:                                              ; preds = %228
  %239 = load ptr, ptr %3, align 8, !dbg !15957
  %240 = getelementptr inbounds %struct.parser, ptr %239, i32 0, i32 6, !dbg !15957
  %241 = getelementptr inbounds %struct.anon.2.79, ptr %240, i32 0, i32 2, !dbg !15957
  %242 = load i64, ptr %241, align 8, !dbg !15957
  %243 = load ptr, ptr %3, align 8, !dbg !15957
  %244 = getelementptr inbounds %struct.parser, ptr %243, i32 0, i32 6, !dbg !15957
  %245 = getelementptr inbounds %struct.anon.2.79, ptr %244, i32 0, i32 1, !dbg !15957
  %246 = load i64, ptr %245, align 8, !dbg !15957
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.7.320, i32 noundef 1002, ptr noundef @__FUNCTION__.post_process_template, ptr noundef @.str.52.334, i64 noundef %242, i64 noundef %246), !dbg !15957
  %247 = load ptr, ptr %3, align 8, !dbg !15959
  %248 = getelementptr inbounds %struct.parser, ptr %247, i32 0, i32 6, !dbg !15960
  %249 = getelementptr inbounds %struct.anon.2.79, ptr %248, i32 0, i32 0, !dbg !15961
  %250 = load ptr, ptr %249, align 8, !dbg !15961
  %251 = load ptr, ptr %3, align 8, !dbg !15962
  %252 = getelementptr inbounds %struct.parser, ptr %251, i32 0, i32 6, !dbg !15963
  %253 = getelementptr inbounds %struct.anon.2.79, ptr %252, i32 0, i32 1, !dbg !15964
  %254 = load i64, ptr %253, align 8, !dbg !15964
  %255 = call ptr @reallocarray(ptr noundef %250, i64 noundef %254, i64 noundef 24) #18, !dbg !15965
  store ptr %255, ptr %6, align 8, !dbg !15966
  %256 = load ptr, ptr %6, align 8, !dbg !15967
  %257 = icmp ne ptr %256, null, !dbg !15967
  br i1 %257, label %258, label %263, !dbg !15969

258:                                              ; preds = %238
  %259 = load ptr, ptr %6, align 8, !dbg !15970
  %260 = load ptr, ptr %3, align 8, !dbg !15971
  %261 = getelementptr inbounds %struct.parser, ptr %260, i32 0, i32 6, !dbg !15972
  %262 = getelementptr inbounds %struct.anon.2.79, ptr %261, i32 0, i32 0, !dbg !15973
  store ptr %259, ptr %262, align 8, !dbg !15974
  br label %263, !dbg !15971

263:                                              ; preds = %258, %238
  br label %264, !dbg !15975

264:                                              ; preds = %263, %228
  %265 = load ptr, ptr %3, align 8, !dbg !15976
  %266 = getelementptr inbounds %struct.parser, ptr %265, i32 0, i32 6, !dbg !15977
  %267 = getelementptr inbounds %struct.anon.2.79, ptr %266, i32 0, i32 0, !dbg !15978
  %268 = load ptr, ptr %267, align 8, !dbg !15978
  %269 = load ptr, ptr %3, align 8, !dbg !15979
  %270 = getelementptr inbounds %struct.parser, ptr %269, i32 0, i32 0, !dbg !15980
  %271 = load ptr, ptr %270, align 8, !dbg !15980
  %272 = getelementptr inbounds %struct.lwan_value_t_, ptr %271, i32 0, i32 0, !dbg !15981
  store ptr %268, ptr %272, align 8, !dbg !15982
  store i1 true, ptr %2, align 1, !dbg !15983
  br label %273, !dbg !15983

273:                                              ; preds = %264, %211, %205
  %274 = load i1, ptr %2, align 1, !dbg !15984
  ret i1 %274, !dbg !15984
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_chunk(ptr noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef %3) #0 !dbg !15985 {
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !15988, metadata !DIExpression()), !dbg !15989
  store i32 %1, ptr %6, align 4
  call void @llvm.dbg.declare(metadata ptr %6, metadata !15990, metadata !DIExpression()), !dbg !15991
  store i32 %2, ptr %7, align 4
  call void @llvm.dbg.declare(metadata ptr %7, metadata !15992, metadata !DIExpression()), !dbg !15993
  store ptr %3, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !15994, metadata !DIExpression()), !dbg !15995
  call void @llvm.dbg.declare(metadata ptr %9, metadata !15996, metadata !DIExpression()), !dbg !15997
  %10 = load ptr, ptr %5, align 8, !dbg !15998
  %11 = getelementptr inbounds %struct.parser, ptr %10, i32 0, i32 6, !dbg !16000
  %12 = getelementptr inbounds %struct.anon.2.79, ptr %11, i32 0, i32 1, !dbg !16001
  %13 = load i64, ptr %12, align 8, !dbg !16001
  %14 = load ptr, ptr %5, align 8, !dbg !16002
  %15 = getelementptr inbounds %struct.parser, ptr %14, i32 0, i32 6, !dbg !16003
  %16 = getelementptr inbounds %struct.anon.2.79, ptr %15, i32 0, i32 2, !dbg !16004
  %17 = load i64, ptr %16, align 8, !dbg !16004
  %18 = icmp uge i64 %13, %17, !dbg !16005
  br i1 %18, label %19, label %46, !dbg !16006

19:                                               ; preds = %4
  %20 = load ptr, ptr %5, align 8, !dbg !16007
  %21 = getelementptr inbounds %struct.parser, ptr %20, i32 0, i32 6, !dbg !16009
  %22 = getelementptr inbounds %struct.anon.2.79, ptr %21, i32 0, i32 2, !dbg !16010
  %23 = load i64, ptr %22, align 8, !dbg !16011
  %24 = add i64 %23, 16, !dbg !16011
  store i64 %24, ptr %22, align 8, !dbg !16011
  %25 = load ptr, ptr %5, align 8, !dbg !16012
  %26 = getelementptr inbounds %struct.parser, ptr %25, i32 0, i32 6, !dbg !16013
  %27 = getelementptr inbounds %struct.anon.2.79, ptr %26, i32 0, i32 0, !dbg !16014
  %28 = load ptr, ptr %27, align 8, !dbg !16014
  %29 = load ptr, ptr %5, align 8, !dbg !16015
  %30 = getelementptr inbounds %struct.parser, ptr %29, i32 0, i32 6, !dbg !16016
  %31 = getelementptr inbounds %struct.anon.2.79, ptr %30, i32 0, i32 2, !dbg !16017
  %32 = load i64, ptr %31, align 8, !dbg !16017
  %33 = call ptr @reallocarray(ptr noundef %28, i64 noundef %32, i64 noundef 24) #18, !dbg !16018
  store ptr %33, ptr %9, align 8, !dbg !16019
  %34 = load ptr, ptr %9, align 8, !dbg !16020
  %35 = icmp ne ptr %34, null, !dbg !16020
  br i1 %35, label %37, label %36, !dbg !16022

36:                                               ; preds = %19
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.7.320, i32 noundef 521, ptr noundef @__FUNCTION__.emit_chunk, ptr noundef @.str.36.330) #23, !dbg !16023
  unreachable, !dbg !16023

37:                                               ; preds = %19
  %38 = load ptr, ptr %9, align 8, !dbg !16024
  %39 = load ptr, ptr %5, align 8, !dbg !16025
  %40 = getelementptr inbounds %struct.parser, ptr %39, i32 0, i32 6, !dbg !16026
  %41 = getelementptr inbounds %struct.anon.2.79, ptr %40, i32 0, i32 0, !dbg !16027
  store ptr %38, ptr %41, align 8, !dbg !16028
  %42 = load ptr, ptr %5, align 8, !dbg !16029
  %43 = getelementptr inbounds %struct.parser, ptr %42, i32 0, i32 0, !dbg !16030
  %44 = load ptr, ptr %43, align 8, !dbg !16030
  %45 = getelementptr inbounds %struct.lwan_value_t_, ptr %44, i32 0, i32 0, !dbg !16031
  store ptr %38, ptr %45, align 8, !dbg !16032
  br label %46, !dbg !16033

46:                                               ; preds = %37, %4
  %47 = load ptr, ptr %5, align 8, !dbg !16034
  %48 = getelementptr inbounds %struct.parser, ptr %47, i32 0, i32 6, !dbg !16035
  %49 = getelementptr inbounds %struct.anon.2.79, ptr %48, i32 0, i32 0, !dbg !16036
  %50 = load ptr, ptr %49, align 8, !dbg !16036
  %51 = load ptr, ptr %5, align 8, !dbg !16037
  %52 = getelementptr inbounds %struct.parser, ptr %51, i32 0, i32 6, !dbg !16038
  %53 = getelementptr inbounds %struct.anon.2.79, ptr %52, i32 0, i32 1, !dbg !16039
  %54 = load i64, ptr %53, align 8, !dbg !16040
  %55 = add i64 %54, 1, !dbg !16040
  store i64 %55, ptr %53, align 8, !dbg !16040
  %56 = getelementptr inbounds %struct.chunk, ptr %50, i64 %54, !dbg !16034
  store ptr %56, ptr %9, align 8, !dbg !16041
  %57 = load i32, ptr %6, align 4, !dbg !16042
  %58 = load ptr, ptr %9, align 8, !dbg !16043
  %59 = getelementptr inbounds %struct.chunk, ptr %58, i32 0, i32 0, !dbg !16044
  store i32 %57, ptr %59, align 8, !dbg !16045
  %60 = load i32, ptr %7, align 4, !dbg !16046
  %61 = load ptr, ptr %9, align 8, !dbg !16047
  %62 = getelementptr inbounds %struct.chunk, ptr %61, i32 0, i32 2, !dbg !16048
  store i32 %60, ptr %62, align 8, !dbg !16049
  %63 = load ptr, ptr %8, align 8, !dbg !16050
  %64 = load ptr, ptr %9, align 8, !dbg !16051
  %65 = getelementptr inbounds %struct.chunk, ptr %64, i32 0, i32 1, !dbg !16052
  store ptr %63, ptr %65, align 8, !dbg !16053
  ret void, !dbg !16054
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @consume_item(ptr noundef %0, ptr noundef %1) #0 !dbg !16055 {
  %3 = alloca i1, align 1
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !16056, metadata !DIExpression()), !dbg !16057
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !16058, metadata !DIExpression()), !dbg !16059
  %6 = load ptr, ptr %4, align 8, !dbg !16060
  %7 = getelementptr inbounds %struct.lexer, ptr %6, i32 0, i32 4, !dbg !16062
  %8 = getelementptr inbounds %struct.anon.0.80, ptr %7, i32 0, i32 3, !dbg !16063
  %9 = load i64, ptr %8, align 8, !dbg !16063
  %10 = icmp ne i64 %9, 0, !dbg !16060
  br i1 %10, label %12, label %11, !dbg !16064

11:                                               ; preds = %2
  store i1 false, ptr %3, align 1, !dbg !16065
  br label %36, !dbg !16065

12:                                               ; preds = %2
  %13 = load ptr, ptr %4, align 8, !dbg !16066
  %14 = getelementptr inbounds %struct.lexer, ptr %13, i32 0, i32 4, !dbg !16067
  %15 = getelementptr inbounds %struct.anon.0.80, ptr %14, i32 0, i32 0, !dbg !16068
  %16 = load ptr, ptr %4, align 8, !dbg !16069
  %17 = getelementptr inbounds %struct.lexer, ptr %16, i32 0, i32 4, !dbg !16070
  %18 = getelementptr inbounds %struct.anon.0.80, ptr %17, i32 0, i32 1, !dbg !16071
  %19 = load i64, ptr %18, align 8, !dbg !16071
  %20 = getelementptr inbounds [4 x %struct.item], ptr %15, i64 0, i64 %19, !dbg !16066
  %21 = load ptr, ptr %5, align 8, !dbg !16072
  store ptr %20, ptr %21, align 8, !dbg !16073
  %22 = load ptr, ptr %4, align 8, !dbg !16074
  %23 = getelementptr inbounds %struct.lexer, ptr %22, i32 0, i32 4, !dbg !16075
  %24 = getelementptr inbounds %struct.anon.0.80, ptr %23, i32 0, i32 1, !dbg !16076
  %25 = load i64, ptr %24, align 8, !dbg !16076
  %26 = add i64 %25, 1, !dbg !16077
  %27 = urem i64 %26, 4, !dbg !16078
  %28 = load ptr, ptr %4, align 8, !dbg !16079
  %29 = getelementptr inbounds %struct.lexer, ptr %28, i32 0, i32 4, !dbg !16080
  %30 = getelementptr inbounds %struct.anon.0.80, ptr %29, i32 0, i32 1, !dbg !16081
  store i64 %27, ptr %30, align 8, !dbg !16082
  %31 = load ptr, ptr %4, align 8, !dbg !16083
  %32 = getelementptr inbounds %struct.lexer, ptr %31, i32 0, i32 4, !dbg !16084
  %33 = getelementptr inbounds %struct.anon.0.80, ptr %32, i32 0, i32 3, !dbg !16085
  %34 = load i64, ptr %33, align 8, !dbg !16086
  %35 = add i64 %34, -1, !dbg !16086
  store i64 %35, ptr %33, align 8, !dbg !16086
  store i1 true, ptr %3, align 1, !dbg !16087
  br label %36, !dbg !16087

36:                                               ; preds = %12, %11
  %37 = load i1, ptr %3, align 1, !dbg !16088
  ret i1 %37, !dbg !16088
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @symtab_push(ptr noundef %0, ptr noundef %1) #0 !dbg !16089 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !16092, metadata !DIExpression()), !dbg !16093
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !16094, metadata !DIExpression()), !dbg !16095
  call void @llvm.dbg.declare(metadata ptr %6, metadata !16096, metadata !DIExpression()), !dbg !16097
  %7 = load ptr, ptr %5, align 8, !dbg !16098
  %8 = icmp ne ptr %7, null, !dbg !16098
  br i1 %8, label %10, label %9, !dbg !16100

9:                                                ; preds = %2
  store i32 -19, ptr %3, align 4, !dbg !16101
  br label %57, !dbg !16101

10:                                               ; preds = %2
  %11 = call noalias ptr @malloc(i64 noundef 16) #17, !dbg !16102
  store ptr %11, ptr %6, align 8, !dbg !16103
  %12 = load ptr, ptr %6, align 8, !dbg !16104
  %13 = icmp ne ptr %12, null, !dbg !16104
  br i1 %13, label %18, label %14, !dbg !16106

14:                                               ; preds = %10
  %15 = call ptr @__errno_location() #20, !dbg !16107
  %16 = load i32, ptr %15, align 4, !dbg !16107
  %17 = sub nsw i32 0, %16, !dbg !16108
  store i32 %17, ptr %3, align 4, !dbg !16109
  br label %57, !dbg !16109

18:                                               ; preds = %10
  %19 = call ptr @hash_str_new(ptr noundef null, ptr noundef null), !dbg !16110
  %20 = load ptr, ptr %6, align 8, !dbg !16111
  %21 = getelementptr inbounds %struct.list_node, ptr %20, i32 0, i32 0, !dbg !16112
  store ptr %19, ptr %21, align 8, !dbg !16113
  %22 = load ptr, ptr %6, align 8, !dbg !16114
  %23 = getelementptr inbounds %struct.list_node, ptr %22, i32 0, i32 0, !dbg !16116
  %24 = load ptr, ptr %23, align 8, !dbg !16116
  %25 = icmp ne ptr %24, null, !dbg !16114
  br i1 %25, label %28, label %26, !dbg !16117

26:                                               ; preds = %18
  %27 = load ptr, ptr %6, align 8, !dbg !16118
  call void @free(ptr noundef %27) #18, !dbg !16120
  store i32 -12, ptr %3, align 4, !dbg !16121
  br label %57, !dbg !16121

28:                                               ; preds = %18
  %29 = load ptr, ptr %4, align 8, !dbg !16122
  %30 = getelementptr inbounds %struct.parser, ptr %29, i32 0, i32 2, !dbg !16123
  %31 = load ptr, ptr %30, align 8, !dbg !16123
  %32 = load ptr, ptr %6, align 8, !dbg !16124
  %33 = getelementptr inbounds %struct.list_node, ptr %32, i32 0, i32 1, !dbg !16125
  store ptr %31, ptr %33, align 8, !dbg !16126
  %34 = load ptr, ptr %6, align 8, !dbg !16127
  %35 = load ptr, ptr %4, align 8, !dbg !16128
  %36 = getelementptr inbounds %struct.parser, ptr %35, i32 0, i32 2, !dbg !16129
  store ptr %34, ptr %36, align 8, !dbg !16130
  br label %37, !dbg !16131

37:                                               ; preds = %53, %28
  %38 = load ptr, ptr %5, align 8, !dbg !16132
  %39 = getelementptr inbounds %struct.lwan_var_descriptor_t_, ptr %38, i32 0, i32 0, !dbg !16135
  %40 = load ptr, ptr %39, align 8, !dbg !16135
  %41 = icmp ne ptr %40, null, !dbg !16136
  br i1 %41, label %42, label %56, !dbg !16136

42:                                               ; preds = %37
  %43 = load ptr, ptr %4, align 8, !dbg !16137
  %44 = getelementptr inbounds %struct.parser, ptr %43, i32 0, i32 2, !dbg !16138
  %45 = load ptr, ptr %44, align 8, !dbg !16138
  %46 = getelementptr inbounds %struct.list_node, ptr %45, i32 0, i32 0, !dbg !16139
  %47 = load ptr, ptr %46, align 8, !dbg !16139
  %48 = load ptr, ptr %5, align 8, !dbg !16140
  %49 = getelementptr inbounds %struct.lwan_var_descriptor_t_, ptr %48, i32 0, i32 0, !dbg !16141
  %50 = load ptr, ptr %49, align 8, !dbg !16141
  %51 = load ptr, ptr %5, align 8, !dbg !16142
  %52 = call i32 @hash_add(ptr noundef %47, ptr noundef %50, ptr noundef %51), !dbg !16143
  br label %53, !dbg !16143

53:                                               ; preds = %42
  %54 = load ptr, ptr %5, align 8, !dbg !16144
  %55 = getelementptr inbounds %struct.lwan_var_descriptor_t_, ptr %54, i32 1, !dbg !16144
  store ptr %55, ptr %5, align 8, !dbg !16144
  br label %37, !dbg !16145, !llvm.loop !16146

56:                                               ; preds = %37
  store i32 0, ptr %3, align 4, !dbg !16148
  br label %57, !dbg !16148

57:                                               ; preds = %56, %26, %14, %9
  %58 = load i32, ptr %3, align 4, !dbg !16149
  ret i32 %58, !dbg !16149
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @lex_init(ptr noundef %0, ptr noundef %1) #0 !dbg !16150 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !16153, metadata !DIExpression()), !dbg !16154
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !16155, metadata !DIExpression()), !dbg !16156
  %5 = load ptr, ptr %3, align 8, !dbg !16157
  %6 = getelementptr inbounds %struct.lexer, ptr %5, i32 0, i32 0, !dbg !16158
  store ptr @lex_text, ptr %6, align 8, !dbg !16159
  %7 = load ptr, ptr %4, align 8, !dbg !16160
  %8 = load ptr, ptr %3, align 8, !dbg !16161
  %9 = getelementptr inbounds %struct.lexer, ptr %8, i32 0, i32 1, !dbg !16162
  store ptr %7, ptr %9, align 8, !dbg !16163
  %10 = load ptr, ptr %3, align 8, !dbg !16164
  %11 = getelementptr inbounds %struct.lexer, ptr %10, i32 0, i32 2, !dbg !16165
  store ptr %7, ptr %11, align 8, !dbg !16166
  %12 = load ptr, ptr %4, align 8, !dbg !16167
  %13 = call ptr @rawmemchr(ptr noundef %12, i32 noundef 0) #22, !dbg !16168
  %14 = load ptr, ptr %3, align 8, !dbg !16169
  %15 = getelementptr inbounds %struct.lexer, ptr %14, i32 0, i32 3, !dbg !16170
  store ptr %13, ptr %15, align 8, !dbg !16171
  ret void, !dbg !16172
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @list_head_init.336(ptr noundef %0) #0 !dbg !16173 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !16177, metadata !DIExpression()), !dbg !16178
  %3 = load ptr, ptr %2, align 8, !dbg !16179
  %4 = getelementptr inbounds %struct.list_head, ptr %3, i32 0, i32 0, !dbg !16180
  %5 = load ptr, ptr %2, align 8, !dbg !16181
  %6 = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 0, !dbg !16182
  %7 = getelementptr inbounds %struct.list_node, ptr %6, i32 0, i32 1, !dbg !16183
  store ptr %4, ptr %7, align 8, !dbg !16184
  %8 = load ptr, ptr %2, align 8, !dbg !16185
  %9 = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 0, !dbg !16186
  %10 = getelementptr inbounds %struct.list_node, ptr %9, i32 0, i32 0, !dbg !16187
  store ptr %4, ptr %10, align 8, !dbg !16188
  ret void, !dbg !16189
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @lex_text(ptr noundef %0) #0 !dbg !16190 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !16191, metadata !DIExpression()), !dbg !16192
  br label %4, !dbg !16193

4:                                                ; preds = %33, %1
  %5 = load ptr, ptr %3, align 8, !dbg !16194
  %6 = getelementptr inbounds %struct.lexer, ptr %5, i32 0, i32 2, !dbg !16197
  %7 = load ptr, ptr %6, align 8, !dbg !16197
  %8 = call i64 @strlen(ptr noundef @left_meta) #22, !dbg !16198
  %9 = call i32 @strncmp(ptr noundef %7, ptr noundef @left_meta, i64 noundef %8) #22, !dbg !16199
  %10 = icmp ne i32 %9, 0, !dbg !16199
  br i1 %10, label %22, label %11, !dbg !16200

11:                                               ; preds = %4
  %12 = load ptr, ptr %3, align 8, !dbg !16201
  %13 = getelementptr inbounds %struct.lexer, ptr %12, i32 0, i32 2, !dbg !16204
  %14 = load ptr, ptr %13, align 8, !dbg !16204
  %15 = load ptr, ptr %3, align 8, !dbg !16205
  %16 = getelementptr inbounds %struct.lexer, ptr %15, i32 0, i32 1, !dbg !16206
  %17 = load ptr, ptr %16, align 8, !dbg !16206
  %18 = icmp ugt ptr %14, %17, !dbg !16207
  br i1 %18, label %19, label %21, !dbg !16208

19:                                               ; preds = %11
  %20 = load ptr, ptr %3, align 8, !dbg !16209
  call void @emit(ptr noundef %20, i32 noundef 6), !dbg !16210
  br label %21, !dbg !16210

21:                                               ; preds = %19, %11
  store ptr @lex_left_meta, ptr %2, align 8, !dbg !16211
  br label %49, !dbg !16211

22:                                               ; preds = %4
  %23 = load ptr, ptr %3, align 8, !dbg !16212
  %24 = getelementptr inbounds %struct.lexer, ptr %23, i32 0, i32 2, !dbg !16214
  %25 = load ptr, ptr %24, align 8, !dbg !16214
  %26 = call i64 @strlen(ptr noundef @right_meta) #22, !dbg !16215
  %27 = call i32 @strncmp(ptr noundef %25, ptr noundef @right_meta, i64 noundef %26) #22, !dbg !16216
  %28 = icmp ne i32 %27, 0, !dbg !16216
  br i1 %28, label %32, label %29, !dbg !16217

29:                                               ; preds = %22
  %30 = load ptr, ptr %3, align 8, !dbg !16218
  %31 = call ptr (ptr, ptr, ...) @lex_error(ptr noundef %30, ptr noundef @.str.38.337), !dbg !16219
  store ptr %31, ptr %2, align 8, !dbg !16220
  br label %49, !dbg !16220

32:                                               ; preds = %22
  br label %33, !dbg !16221

33:                                               ; preds = %32
  %34 = load ptr, ptr %3, align 8, !dbg !16222
  %35 = call i32 @next(ptr noundef %34), !dbg !16223
  %36 = icmp ne i32 %35, -1, !dbg !16224
  br i1 %36, label %4, label %37, !dbg !16221, !llvm.loop !16225

37:                                               ; preds = %33
  %38 = load ptr, ptr %3, align 8, !dbg !16227
  %39 = getelementptr inbounds %struct.lexer, ptr %38, i32 0, i32 2, !dbg !16229
  %40 = load ptr, ptr %39, align 8, !dbg !16229
  %41 = load ptr, ptr %3, align 8, !dbg !16230
  %42 = getelementptr inbounds %struct.lexer, ptr %41, i32 0, i32 1, !dbg !16231
  %43 = load ptr, ptr %42, align 8, !dbg !16231
  %44 = icmp ugt ptr %40, %43, !dbg !16232
  br i1 %44, label %45, label %47, !dbg !16233

45:                                               ; preds = %37
  %46 = load ptr, ptr %3, align 8, !dbg !16234
  call void @emit(ptr noundef %46, i32 noundef 6), !dbg !16235
  br label %47, !dbg !16235

47:                                               ; preds = %45, %37
  %48 = load ptr, ptr %3, align 8, !dbg !16236
  call void @emit(ptr noundef %48, i32 noundef 1), !dbg !16237
  store ptr null, ptr %2, align 8, !dbg !16238
  br label %49, !dbg !16238

49:                                               ; preds = %47, %29, %21
  %50 = load ptr, ptr %2, align 8, !dbg !16239
  ret ptr %50, !dbg !16239
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit(ptr noundef %0, i32 noundef %1) #0 !dbg !16240 {
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.item, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !16243, metadata !DIExpression()), !dbg !16244
  store i32 %1, ptr %4, align 4
  call void @llvm.dbg.declare(metadata ptr %4, metadata !16245, metadata !DIExpression()), !dbg !16246
  call void @llvm.dbg.declare(metadata ptr %5, metadata !16247, metadata !DIExpression()), !dbg !16248
  %6 = getelementptr inbounds %struct.item, ptr %5, i32 0, i32 0, !dbg !16249
  %7 = load i32, ptr %4, align 4, !dbg !16250
  store i32 %7, ptr %6, align 8, !dbg !16249
  %8 = getelementptr inbounds %struct.item, ptr %5, i32 0, i32 1, !dbg !16249
  %9 = getelementptr inbounds %struct.lwan_value_t_, ptr %8, i32 0, i32 0, !dbg !16251
  %10 = load ptr, ptr %3, align 8, !dbg !16252
  %11 = getelementptr inbounds %struct.lexer, ptr %10, i32 0, i32 1, !dbg !16253
  %12 = load ptr, ptr %11, align 8, !dbg !16253
  store ptr %12, ptr %9, align 8, !dbg !16251
  %13 = getelementptr inbounds %struct.lwan_value_t_, ptr %8, i32 0, i32 1, !dbg !16251
  %14 = load ptr, ptr %3, align 8, !dbg !16254
  %15 = getelementptr inbounds %struct.lexer, ptr %14, i32 0, i32 2, !dbg !16255
  %16 = load ptr, ptr %15, align 8, !dbg !16255
  %17 = load ptr, ptr %3, align 8, !dbg !16256
  %18 = getelementptr inbounds %struct.lexer, ptr %17, i32 0, i32 1, !dbg !16257
  %19 = load ptr, ptr %18, align 8, !dbg !16257
  %20 = ptrtoint ptr %16 to i64, !dbg !16258
  %21 = ptrtoint ptr %19 to i64, !dbg !16258
  %22 = sub i64 %20, %21, !dbg !16258
  store i64 %22, ptr %13, align 8, !dbg !16251
  %23 = load ptr, ptr %3, align 8, !dbg !16259
  call void @emit_item(ptr noundef %23, ptr noundef %5), !dbg !16260
  ret void, !dbg !16261
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @lex_left_meta(ptr noundef %0) #0 !dbg !16262 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !16263, metadata !DIExpression()), !dbg !16264
  %5 = call i64 @strlen(ptr noundef @left_meta) #22, !dbg !16265
  %6 = load ptr, ptr %3, align 8, !dbg !16266
  %7 = getelementptr inbounds %struct.lexer, ptr %6, i32 0, i32 2, !dbg !16267
  %8 = load ptr, ptr %7, align 8, !dbg !16268
  %9 = getelementptr inbounds i8, ptr %8, i64 %5, !dbg !16268
  store ptr %9, ptr %7, align 8, !dbg !16268
  call void @llvm.dbg.declare(metadata ptr %4, metadata !16269, metadata !DIExpression()), !dbg !16270
  %10 = load ptr, ptr %3, align 8, !dbg !16271
  %11 = call i32 @next(ptr noundef %10), !dbg !16272
  store i32 %11, ptr %4, align 4, !dbg !16270
  %12 = load i32, ptr %4, align 4, !dbg !16273
  %13 = icmp eq i32 %12, 33, !dbg !16275
  br i1 %13, label %14, label %15, !dbg !16276

14:                                               ; preds = %1
  store ptr @lex_comment, ptr %2, align 8, !dbg !16277
  br label %18, !dbg !16277

15:                                               ; preds = %1
  %16 = load ptr, ptr %3, align 8, !dbg !16278
  call void @backup(ptr noundef %16), !dbg !16279
  %17 = load ptr, ptr %3, align 8, !dbg !16280
  call void @emit(ptr noundef %17, i32 noundef 3), !dbg !16281
  store ptr @lex_inside_action, ptr %2, align 8, !dbg !16282
  br label %18, !dbg !16282

18:                                               ; preds = %15, %14
  %19 = load ptr, ptr %2, align 8, !dbg !16283
  ret ptr %19, !dbg !16283
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @lex_error(ptr noundef %0, ptr noundef %1, ...) #0 !dbg !16284 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca %struct.item, align 8
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !16287, metadata !DIExpression()), !dbg !16288
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !16289, metadata !DIExpression()), !dbg !16290
  call void @llvm.dbg.declare(metadata ptr %5, metadata !16291, metadata !DIExpression()), !dbg !16292
  call void @llvm.dbg.declare(metadata ptr %6, metadata !16293, metadata !DIExpression()), !dbg !16305
  %7 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %6, i64 0, i64 0, !dbg !16306
  call void @llvm.va_start(ptr %7), !dbg !16306
  %8 = load ptr, ptr %4, align 8, !dbg !16307
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %6, i64 0, i64 0, !dbg !16308
  %10 = call ptr @error_vitem(ptr noundef %5, ptr noundef %8, ptr noundef %9), !dbg !16309
  %11 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %6, i64 0, i64 0, !dbg !16310
  call void @llvm.va_end(ptr %11), !dbg !16310
  %12 = load ptr, ptr %3, align 8, !dbg !16311
  call void @emit_item(ptr noundef %12, ptr noundef %5), !dbg !16312
  ret ptr null, !dbg !16313
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @next(ptr noundef %0) #0 !dbg !16314 {
  %2 = alloca i32, align 4
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !16317, metadata !DIExpression()), !dbg !16318
  %5 = load ptr, ptr %3, align 8, !dbg !16319
  %6 = getelementptr inbounds %struct.lexer, ptr %5, i32 0, i32 2, !dbg !16321
  %7 = load ptr, ptr %6, align 8, !dbg !16321
  %8 = load ptr, ptr %3, align 8, !dbg !16322
  %9 = getelementptr inbounds %struct.lexer, ptr %8, i32 0, i32 3, !dbg !16323
  %10 = load ptr, ptr %9, align 8, !dbg !16323
  %11 = icmp uge ptr %7, %10, !dbg !16324
  br i1 %11, label %12, label %13, !dbg !16325

12:                                               ; preds = %1
  store i32 -1, ptr %2, align 4, !dbg !16326
  br label %24, !dbg !16326

13:                                               ; preds = %1
  call void @llvm.dbg.declare(metadata ptr %4, metadata !16327, metadata !DIExpression()), !dbg !16328
  %14 = load ptr, ptr %3, align 8, !dbg !16329
  %15 = getelementptr inbounds %struct.lexer, ptr %14, i32 0, i32 2, !dbg !16330
  %16 = load ptr, ptr %15, align 8, !dbg !16330
  %17 = load i8, ptr %16, align 1, !dbg !16331
  %18 = sext i8 %17 to i32, !dbg !16331
  store i32 %18, ptr %4, align 4, !dbg !16328
  %19 = load ptr, ptr %3, align 8, !dbg !16332
  %20 = getelementptr inbounds %struct.lexer, ptr %19, i32 0, i32 2, !dbg !16333
  %21 = load ptr, ptr %20, align 8, !dbg !16334
  %22 = getelementptr inbounds i8, ptr %21, i32 1, !dbg !16334
  store ptr %22, ptr %20, align 8, !dbg !16334
  %23 = load i32, ptr %4, align 4, !dbg !16335
  store i32 %23, ptr %2, align 4, !dbg !16336
  br label %24, !dbg !16336

24:                                               ; preds = %13, %12
  %25 = load i32, ptr %2, align 4, !dbg !16337
  ret i32 %25, !dbg !16337
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @error_vitem(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !16338 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !16342, metadata !DIExpression()), !dbg !16343
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !16344, metadata !DIExpression()), !dbg !16345
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !16346, metadata !DIExpression()), !dbg !16347
  call void @llvm.dbg.declare(metadata ptr %8, metadata !16348, metadata !DIExpression()), !dbg !16349
  %9 = load ptr, ptr %5, align 8, !dbg !16350
  %10 = getelementptr inbounds %struct.item, ptr %9, i32 0, i32 0, !dbg !16351
  store i32 0, ptr %10, align 8, !dbg !16352
  %11 = load ptr, ptr %5, align 8, !dbg !16353
  %12 = getelementptr inbounds %struct.item, ptr %11, i32 0, i32 1, !dbg !16354
  %13 = getelementptr inbounds %struct.lwan_value_t_, ptr %12, i32 0, i32 0, !dbg !16355
  %14 = load ptr, ptr %6, align 8, !dbg !16356
  %15 = load ptr, ptr %7, align 8, !dbg !16357
  %16 = call i32 @vasprintf(ptr noundef %13, ptr noundef %14, ptr noundef %15) #18, !dbg !16358
  store i32 %16, ptr %8, align 4, !dbg !16359
  %17 = load i32, ptr %8, align 4, !dbg !16360
  %18 = icmp slt i32 %17, 0, !dbg !16362
  br i1 %18, label %19, label %42, !dbg !16363

19:                                               ; preds = %3
  %20 = call ptr @__errno_location() #20, !dbg !16364
  %21 = load i32, ptr %20, align 4, !dbg !16364
  %22 = call ptr @strerror(i32 noundef %21) #18, !dbg !16366
  %23 = call noalias ptr @strdup(ptr noundef %22) #18, !dbg !16367
  %24 = load ptr, ptr %5, align 8, !dbg !16368
  %25 = getelementptr inbounds %struct.item, ptr %24, i32 0, i32 1, !dbg !16369
  %26 = getelementptr inbounds %struct.lwan_value_t_, ptr %25, i32 0, i32 0, !dbg !16370
  store ptr %23, ptr %26, align 8, !dbg !16371
  %27 = load ptr, ptr %5, align 8, !dbg !16372
  %28 = getelementptr inbounds %struct.item, ptr %27, i32 0, i32 1, !dbg !16374
  %29 = getelementptr inbounds %struct.lwan_value_t_, ptr %28, i32 0, i32 0, !dbg !16375
  %30 = load ptr, ptr %29, align 8, !dbg !16375
  %31 = icmp ne ptr %30, null, !dbg !16372
  br i1 %31, label %33, label %32, !dbg !16376

32:                                               ; preds = %19
  store ptr null, ptr %4, align 8, !dbg !16377
  br label %49, !dbg !16377

33:                                               ; preds = %19
  %34 = load ptr, ptr %5, align 8, !dbg !16378
  %35 = getelementptr inbounds %struct.item, ptr %34, i32 0, i32 1, !dbg !16379
  %36 = getelementptr inbounds %struct.lwan_value_t_, ptr %35, i32 0, i32 0, !dbg !16380
  %37 = load ptr, ptr %36, align 8, !dbg !16380
  %38 = call i64 @strlen(ptr noundef %37) #22, !dbg !16381
  %39 = load ptr, ptr %5, align 8, !dbg !16382
  %40 = getelementptr inbounds %struct.item, ptr %39, i32 0, i32 1, !dbg !16383
  %41 = getelementptr inbounds %struct.lwan_value_t_, ptr %40, i32 0, i32 1, !dbg !16384
  store i64 %38, ptr %41, align 8, !dbg !16385
  br label %48, !dbg !16386

42:                                               ; preds = %3
  %43 = load i32, ptr %8, align 4, !dbg !16387
  %44 = sext i32 %43 to i64, !dbg !16389
  %45 = load ptr, ptr %5, align 8, !dbg !16390
  %46 = getelementptr inbounds %struct.item, ptr %45, i32 0, i32 1, !dbg !16391
  %47 = getelementptr inbounds %struct.lwan_value_t_, ptr %46, i32 0, i32 1, !dbg !16392
  store i64 %44, ptr %47, align 8, !dbg !16393
  br label %48

48:                                               ; preds = %42, %33
  store ptr null, ptr %4, align 8, !dbg !16394
  br label %49, !dbg !16394

49:                                               ; preds = %48, %32
  %50 = load ptr, ptr %4, align 8, !dbg !16395
  ret ptr %50, !dbg !16395
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_item(ptr noundef %0, ptr noundef %1) #0 !dbg !16396 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !16399, metadata !DIExpression()), !dbg !16400
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !16401, metadata !DIExpression()), !dbg !16402
  %5 = load ptr, ptr %3, align 8, !dbg !16403
  %6 = getelementptr inbounds %struct.lexer, ptr %5, i32 0, i32 4, !dbg !16404
  %7 = getelementptr inbounds %struct.anon.0.80, ptr %6, i32 0, i32 0, !dbg !16405
  %8 = load ptr, ptr %3, align 8, !dbg !16406
  %9 = getelementptr inbounds %struct.lexer, ptr %8, i32 0, i32 4, !dbg !16407
  %10 = getelementptr inbounds %struct.anon.0.80, ptr %9, i32 0, i32 2, !dbg !16408
  %11 = load i64, ptr %10, align 8, !dbg !16408
  %12 = getelementptr inbounds [4 x %struct.item], ptr %7, i64 0, i64 %11, !dbg !16403
  %13 = load ptr, ptr %4, align 8, !dbg !16409
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %13, i64 24, i1 false), !dbg !16410
  %14 = load ptr, ptr %3, align 8, !dbg !16411
  %15 = getelementptr inbounds %struct.lexer, ptr %14, i32 0, i32 4, !dbg !16412
  %16 = getelementptr inbounds %struct.anon.0.80, ptr %15, i32 0, i32 2, !dbg !16413
  %17 = load i64, ptr %16, align 8, !dbg !16413
  %18 = add i64 %17, 1, !dbg !16414
  %19 = urem i64 %18, 4, !dbg !16415
  %20 = load ptr, ptr %3, align 8, !dbg !16416
  %21 = getelementptr inbounds %struct.lexer, ptr %20, i32 0, i32 4, !dbg !16417
  %22 = getelementptr inbounds %struct.anon.0.80, ptr %21, i32 0, i32 2, !dbg !16418
  store i64 %19, ptr %22, align 8, !dbg !16419
  %23 = load ptr, ptr %3, align 8, !dbg !16420
  %24 = getelementptr inbounds %struct.lexer, ptr %23, i32 0, i32 4, !dbg !16421
  %25 = getelementptr inbounds %struct.anon.0.80, ptr %24, i32 0, i32 3, !dbg !16422
  %26 = load i64, ptr %25, align 8, !dbg !16423
  %27 = add i64 %26, 1, !dbg !16423
  store i64 %27, ptr %25, align 8, !dbg !16423
  %28 = load ptr, ptr %3, align 8, !dbg !16424
  %29 = getelementptr inbounds %struct.lexer, ptr %28, i32 0, i32 2, !dbg !16425
  %30 = load ptr, ptr %29, align 8, !dbg !16425
  %31 = load ptr, ptr %3, align 8, !dbg !16426
  %32 = getelementptr inbounds %struct.lexer, ptr %31, i32 0, i32 1, !dbg !16427
  store ptr %30, ptr %32, align 8, !dbg !16428
  ret void, !dbg !16429
}

; Function Attrs: nounwind
declare ptr @strerror(i32 noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @lex_comment(ptr noundef %0) #0 !dbg !16430 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !16431, metadata !DIExpression()), !dbg !16432
  call void @llvm.dbg.declare(metadata ptr %4, metadata !16433, metadata !DIExpression()), !dbg !16434
  %6 = call i64 @strlen(ptr noundef @left_meta) #22, !dbg !16435
  store i64 %6, ptr %4, align 8, !dbg !16434
  br label %7, !dbg !16436

7:                                                ; preds = %30, %1
  call void @llvm.dbg.declare(metadata ptr %5, metadata !16437, metadata !DIExpression()), !dbg !16439
  %8 = load ptr, ptr %3, align 8, !dbg !16440
  %9 = call i32 @next(ptr noundef %8), !dbg !16441
  store i32 %9, ptr %5, align 4, !dbg !16439
  %10 = load i32, ptr %5, align 4, !dbg !16442
  %11 = icmp eq i32 %10, 123, !dbg !16444
  br i1 %11, label %12, label %15, !dbg !16445

12:                                               ; preds = %7
  %13 = load i64, ptr %4, align 8, !dbg !16446
  %14 = add i64 %13, 1, !dbg !16446
  store i64 %14, ptr %4, align 8, !dbg !16446
  br label %29, !dbg !16447

15:                                               ; preds = %7
  %16 = load i32, ptr %5, align 4, !dbg !16448
  %17 = icmp eq i32 %16, 125, !dbg !16450
  br i1 %17, label %18, label %21, !dbg !16451

18:                                               ; preds = %15
  %19 = load i64, ptr %4, align 8, !dbg !16452
  %20 = add i64 %19, -1, !dbg !16452
  store i64 %20, ptr %4, align 8, !dbg !16452
  br label %28, !dbg !16453

21:                                               ; preds = %15
  %22 = load i32, ptr %5, align 4, !dbg !16454
  %23 = icmp eq i32 %22, -1, !dbg !16456
  br i1 %23, label %24, label %27, !dbg !16457

24:                                               ; preds = %21
  %25 = load ptr, ptr %3, align 8, !dbg !16458
  %26 = call ptr (ptr, ptr, ...) @lex_error(ptr noundef %25, ptr noundef @.str.39.342), !dbg !16459
  store ptr %26, ptr %2, align 8, !dbg !16460
  br label %35, !dbg !16460

27:                                               ; preds = %21
  br label %28

28:                                               ; preds = %27, %18
  br label %29

29:                                               ; preds = %28, %12
  br label %30, !dbg !16461

30:                                               ; preds = %29
  %31 = load i64, ptr %4, align 8, !dbg !16462
  %32 = icmp ne i64 %31, 0, !dbg !16461
  br i1 %32, label %7, label %33, !dbg !16461, !llvm.loop !16463

33:                                               ; preds = %30
  %34 = load ptr, ptr %3, align 8, !dbg !16465
  call void @ignore(ptr noundef %34), !dbg !16466
  store ptr @lex_text, ptr %2, align 8, !dbg !16467
  br label %35, !dbg !16467

35:                                               ; preds = %33, %24
  %36 = load ptr, ptr %2, align 8, !dbg !16468
  ret ptr %36, !dbg !16468
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @backup(ptr noundef %0) #0 !dbg !16469 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !16472, metadata !DIExpression()), !dbg !16473
  %3 = load ptr, ptr %2, align 8, !dbg !16474
  %4 = getelementptr inbounds %struct.lexer, ptr %3, i32 0, i32 2, !dbg !16475
  %5 = load ptr, ptr %4, align 8, !dbg !16476
  %6 = getelementptr inbounds i8, ptr %5, i32 -1, !dbg !16476
  store ptr %6, ptr %4, align 8, !dbg !16476
  ret void, !dbg !16477
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @lex_inside_action(ptr noundef %0) #0 !dbg !16478 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !16479, metadata !DIExpression()), !dbg !16480
  br label %5, !dbg !16481

5:                                                ; preds = %92, %1
  call void @llvm.dbg.declare(metadata ptr %4, metadata !16482, metadata !DIExpression()), !dbg !16484
  %6 = load ptr, ptr %3, align 8, !dbg !16485
  %7 = getelementptr inbounds %struct.lexer, ptr %6, i32 0, i32 2, !dbg !16487
  %8 = load ptr, ptr %7, align 8, !dbg !16487
  %9 = call i64 @strlen(ptr noundef @right_meta) #22, !dbg !16488
  %10 = call i32 @strncmp(ptr noundef %8, ptr noundef @right_meta, i64 noundef %9) #22, !dbg !16489
  %11 = icmp ne i32 %10, 0, !dbg !16489
  br i1 %11, label %13, label %12, !dbg !16490

12:                                               ; preds = %5
  store ptr @lex_right_meta, ptr %2, align 8, !dbg !16491
  br label %93, !dbg !16491

13:                                               ; preds = %5
  %14 = load ptr, ptr %3, align 8, !dbg !16492
  %15 = call i32 @next(ptr noundef %14), !dbg !16493
  store i32 %15, ptr %4, align 4, !dbg !16494
  %16 = load i32, ptr %4, align 4, !dbg !16495
  %17 = icmp eq i32 %16, -1, !dbg !16497
  br i1 %17, label %18, label %21, !dbg !16498

18:                                               ; preds = %13
  %19 = load ptr, ptr %3, align 8, !dbg !16499
  %20 = call ptr (ptr, ptr, ...) @lex_error(ptr noundef %19, ptr noundef @.str.40.338), !dbg !16500
  store ptr %20, ptr %2, align 8, !dbg !16501
  br label %93, !dbg !16501

21:                                               ; preds = %13
  %22 = load i32, ptr %4, align 4, !dbg !16502
  %23 = icmp eq i32 %22, 10, !dbg !16504
  br i1 %23, label %24, label %27, !dbg !16505

24:                                               ; preds = %21
  %25 = load ptr, ptr %3, align 8, !dbg !16506
  %26 = call ptr (ptr, ptr, ...) @lex_error(ptr noundef %25, ptr noundef @.str.41.339), !dbg !16507
  store ptr %26, ptr %2, align 8, !dbg !16508
  br label %93, !dbg !16508

27:                                               ; preds = %21
  %28 = call ptr @__ctype_b_loc() #20, !dbg !16509
  %29 = load ptr, ptr %28, align 8, !dbg !16509
  %30 = load i32, ptr %4, align 4, !dbg !16509
  %31 = sext i32 %30 to i64, !dbg !16509
  %32 = getelementptr inbounds i16, ptr %29, i64 %31, !dbg !16509
  %33 = load i16, ptr %32, align 2, !dbg !16509
  %34 = zext i16 %33 to i32, !dbg !16509
  %35 = and i32 %34, 8192, !dbg !16509
  %36 = icmp ne i32 %35, 0, !dbg !16509
  br i1 %36, label %37, label %39, !dbg !16511

37:                                               ; preds = %27
  %38 = load ptr, ptr %3, align 8, !dbg !16512
  call void @ignore(ptr noundef %38), !dbg !16514
  br label %92, !dbg !16515

39:                                               ; preds = %27
  %40 = load i32, ptr %4, align 4, !dbg !16516
  %41 = icmp eq i32 %40, 35, !dbg !16518
  br i1 %41, label %42, label %44, !dbg !16519

42:                                               ; preds = %39
  %43 = load ptr, ptr %3, align 8, !dbg !16520
  call void @emit(ptr noundef %43, i32 noundef 4), !dbg !16522
  br label %91, !dbg !16523

44:                                               ; preds = %39
  %45 = load i32, ptr %4, align 4, !dbg !16524
  %46 = icmp eq i32 %45, 47, !dbg !16526
  br i1 %46, label %47, label %49, !dbg !16527

47:                                               ; preds = %44
  %48 = load ptr, ptr %3, align 8, !dbg !16528
  call void @emit(ptr noundef %48, i32 noundef 7), !dbg !16530
  br label %90, !dbg !16531

49:                                               ; preds = %44
  %50 = load i32, ptr %4, align 4, !dbg !16532
  %51 = icmp eq i32 %50, 63, !dbg !16534
  br i1 %51, label %52, label %54, !dbg !16535

52:                                               ; preds = %49
  %53 = load ptr, ptr %3, align 8, !dbg !16536
  call void @emit(ptr noundef %53, i32 noundef 8), !dbg !16538
  br label %89, !dbg !16539

54:                                               ; preds = %49
  %55 = load i32, ptr %4, align 4, !dbg !16540
  %56 = icmp eq i32 %55, 94, !dbg !16542
  br i1 %56, label %57, label %59, !dbg !16543

57:                                               ; preds = %54
  %58 = load ptr, ptr %3, align 8, !dbg !16544
  call void @emit(ptr noundef %58, i32 noundef 9), !dbg !16546
  br label %88, !dbg !16547

59:                                               ; preds = %54
  %60 = load i32, ptr %4, align 4, !dbg !16548
  %61 = icmp eq i32 %60, 62, !dbg !16550
  br i1 %61, label %62, label %64, !dbg !16551

62:                                               ; preds = %59
  %63 = load ptr, ptr %3, align 8, !dbg !16552
  call void @emit(ptr noundef %63, i32 noundef 10), !dbg !16554
  br label %87, !dbg !16555

64:                                               ; preds = %59
  %65 = load i32, ptr %4, align 4, !dbg !16556
  %66 = icmp eq i32 %65, 123, !dbg !16558
  br i1 %66, label %67, label %68, !dbg !16559

67:                                               ; preds = %64
  store ptr @lex_quoted_identifier, ptr %2, align 8, !dbg !16560
  br label %93, !dbg !16560

68:                                               ; preds = %64
  %69 = call ptr @__ctype_b_loc() #20, !dbg !16562
  %70 = load ptr, ptr %69, align 8, !dbg !16562
  %71 = load i32, ptr %4, align 4, !dbg !16562
  %72 = sext i32 %71 to i64, !dbg !16562
  %73 = getelementptr inbounds i16, ptr %70, i64 %72, !dbg !16562
  %74 = load i16, ptr %73, align 2, !dbg !16562
  %75 = zext i16 %74 to i32, !dbg !16562
  %76 = and i32 %75, 8, !dbg !16562
  %77 = icmp ne i32 %76, 0, !dbg !16562
  br i1 %77, label %81, label %78, !dbg !16564

78:                                               ; preds = %68
  %79 = load i32, ptr %4, align 4, !dbg !16565
  %80 = icmp eq i32 %79, 95, !dbg !16566
  br i1 %80, label %81, label %83, !dbg !16567

81:                                               ; preds = %78, %68
  %82 = load ptr, ptr %3, align 8, !dbg !16568
  call void @backup(ptr noundef %82), !dbg !16570
  store ptr @lex_identifier, ptr %2, align 8, !dbg !16571
  br label %93, !dbg !16571

83:                                               ; preds = %78
  %84 = load ptr, ptr %3, align 8, !dbg !16572
  %85 = load i32, ptr %4, align 4, !dbg !16574
  %86 = call ptr (ptr, ptr, ...) @lex_error(ptr noundef %84, ptr noundef @.str.42.340, i32 noundef %85), !dbg !16575
  store ptr %86, ptr %2, align 8, !dbg !16576
  br label %93, !dbg !16576

87:                                               ; preds = %62
  br label %88

88:                                               ; preds = %87, %57
  br label %89

89:                                               ; preds = %88, %52
  br label %90

90:                                               ; preds = %89, %47
  br label %91

91:                                               ; preds = %90, %42
  br label %92

92:                                               ; preds = %91, %37
  br label %5, !dbg !16481, !llvm.loop !16577

93:                                               ; preds = %83, %81, %67, %24, %18, %12
  %94 = load ptr, ptr %2, align 8, !dbg !16579
  ret ptr %94, !dbg !16579
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @lex_right_meta(ptr noundef %0) #0 !dbg !16580 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !16581, metadata !DIExpression()), !dbg !16582
  %3 = call i64 @strlen(ptr noundef @right_meta) #22, !dbg !16583
  %4 = load ptr, ptr %2, align 8, !dbg !16584
  %5 = getelementptr inbounds %struct.lexer, ptr %4, i32 0, i32 2, !dbg !16585
  %6 = load ptr, ptr %5, align 8, !dbg !16586
  %7 = getelementptr inbounds i8, ptr %6, i64 %3, !dbg !16586
  store ptr %7, ptr %5, align 8, !dbg !16586
  %8 = load ptr, ptr %2, align 8, !dbg !16587
  call void @emit(ptr noundef %8, i32 noundef 5), !dbg !16588
  ret ptr @lex_text, !dbg !16589
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @ignore(ptr noundef %0) #0 !dbg !16590 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !16591, metadata !DIExpression()), !dbg !16592
  %3 = load ptr, ptr %2, align 8, !dbg !16593
  %4 = getelementptr inbounds %struct.lexer, ptr %3, i32 0, i32 2, !dbg !16594
  %5 = load ptr, ptr %4, align 8, !dbg !16594
  %6 = load ptr, ptr %2, align 8, !dbg !16595
  %7 = getelementptr inbounds %struct.lexer, ptr %6, i32 0, i32 1, !dbg !16596
  store ptr %5, ptr %7, align 8, !dbg !16597
  ret void, !dbg !16598
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @lex_quoted_identifier(ptr noundef %0) #0 !dbg !16599 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !16600, metadata !DIExpression()), !dbg !16601
  call void @llvm.dbg.declare(metadata ptr %4, metadata !16602, metadata !DIExpression()), !dbg !16603
  %5 = load ptr, ptr %3, align 8, !dbg !16604
  call void @emit(ptr noundef %5, i32 noundef 11), !dbg !16605
  %6 = load ptr, ptr %3, align 8, !dbg !16606
  %7 = call ptr @lex_identifier(ptr noundef %6), !dbg !16607
  %8 = load ptr, ptr %3, align 8, !dbg !16608
  %9 = call i32 @next(ptr noundef %8), !dbg !16609
  store i32 %9, ptr %4, align 4, !dbg !16610
  %10 = load i32, ptr %4, align 4, !dbg !16611
  %11 = icmp ne i32 %10, 125, !dbg !16613
  br i1 %11, label %12, label %16, !dbg !16614

12:                                               ; preds = %1
  %13 = load ptr, ptr %3, align 8, !dbg !16615
  %14 = load i32, ptr %4, align 4, !dbg !16616
  %15 = call ptr (ptr, ptr, ...) @lex_error(ptr noundef %13, ptr noundef @.str.43.341, i32 noundef %14), !dbg !16617
  store ptr %15, ptr %2, align 8, !dbg !16618
  br label %18, !dbg !16618

16:                                               ; preds = %1
  %17 = load ptr, ptr %3, align 8, !dbg !16619
  call void @emit(ptr noundef %17, i32 noundef 12), !dbg !16620
  store ptr @lex_inside_action, ptr %2, align 8, !dbg !16621
  br label %18, !dbg !16621

18:                                               ; preds = %16, %12
  %19 = load ptr, ptr %2, align 8, !dbg !16622
  ret ptr %19, !dbg !16622
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @lex_identifier(ptr noundef %0) #0 !dbg !16623 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !16624, metadata !DIExpression()), !dbg !16625
  br label %3, !dbg !16626

3:                                                ; preds = %7, %1
  %4 = load ptr, ptr %2, align 8, !dbg !16627
  %5 = call i32 @next(ptr noundef %4), !dbg !16628
  %6 = call zeroext i1 @isident(i32 noundef %5), !dbg !16629
  br i1 %6, label %7, label %8, !dbg !16626

7:                                                ; preds = %3
  br label %3, !dbg !16626, !llvm.loop !16630

8:                                                ; preds = %3
  %9 = load ptr, ptr %2, align 8, !dbg !16632
  call void @backup(ptr noundef %9), !dbg !16633
  %10 = load ptr, ptr %2, align 8, !dbg !16634
  call void @emit(ptr noundef %10, i32 noundef 2), !dbg !16635
  ret ptr @lex_inside_action, !dbg !16636
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @isident(i32 noundef %0) #0 !dbg !16637 {
  %2 = alloca i32, align 4
  store i32 %0, ptr %2, align 4
  call void @llvm.dbg.declare(metadata ptr %2, metadata !16640, metadata !DIExpression()), !dbg !16641
  %3 = call ptr @__ctype_b_loc() #20, !dbg !16642
  %4 = load ptr, ptr %3, align 8, !dbg !16642
  %5 = load i32, ptr %2, align 4, !dbg !16642
  %6 = sext i32 %5 to i64, !dbg !16642
  %7 = getelementptr inbounds i16, ptr %4, i64 %6, !dbg !16642
  %8 = load i16, ptr %7, align 2, !dbg !16642
  %9 = zext i16 %8 to i32, !dbg !16642
  %10 = and i32 %9, 8, !dbg !16642
  %11 = icmp ne i32 %10, 0, !dbg !16642
  br i1 %11, label %18, label %12, !dbg !16643

12:                                               ; preds = %1
  %13 = load i32, ptr %2, align 4, !dbg !16644
  %14 = icmp eq i32 %13, 95, !dbg !16645
  br i1 %14, label %18, label %15, !dbg !16646

15:                                               ; preds = %12
  %16 = load i32, ptr %2, align 4, !dbg !16647
  %17 = icmp eq i32 %16, 46, !dbg !16648
  br label %18, !dbg !16646

18:                                               ; preds = %15, %12, %1
  %19 = phi i1 [ true, %12 ], [ true, %1 ], [ %17, %15 ]
  ret i1 %19, !dbg !16649
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @parser_meta(ptr noundef %0, ptr noundef %1) #0 !dbg !16650 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !16651, metadata !DIExpression()), !dbg !16652
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !16653, metadata !DIExpression()), !dbg !16654
  %6 = load ptr, ptr %5, align 8, !dbg !16655
  %7 = getelementptr inbounds %struct.item, ptr %6, i32 0, i32 0, !dbg !16657
  %8 = load i32, ptr %7, align 8, !dbg !16657
  %9 = icmp eq i32 %8, 11, !dbg !16658
  br i1 %9, label %10, label %15, !dbg !16659

10:                                               ; preds = %2
  %11 = load ptr, ptr %4, align 8, !dbg !16660
  %12 = getelementptr inbounds %struct.parser, ptr %11, i32 0, i32 4, !dbg !16662
  %13 = load i32, ptr %12, align 8, !dbg !16663
  %14 = or i32 %13, 2, !dbg !16663
  store i32 %14, ptr %12, align 8, !dbg !16663
  store ptr @parser_meta, ptr %3, align 8, !dbg !16664
  br label %51, !dbg !16664

15:                                               ; preds = %2
  %16 = load ptr, ptr %5, align 8, !dbg !16665
  %17 = getelementptr inbounds %struct.item, ptr %16, i32 0, i32 0, !dbg !16667
  %18 = load i32, ptr %17, align 8, !dbg !16667
  %19 = icmp eq i32 %18, 2, !dbg !16668
  br i1 %19, label %20, label %24, !dbg !16669

20:                                               ; preds = %15
  %21 = load ptr, ptr %4, align 8, !dbg !16670
  %22 = load ptr, ptr %5, align 8, !dbg !16671
  %23 = call ptr @parser_identifier(ptr noundef %21, ptr noundef %22), !dbg !16672
  store ptr %23, ptr %3, align 8, !dbg !16673
  br label %51, !dbg !16673

24:                                               ; preds = %15
  %25 = load ptr, ptr %5, align 8, !dbg !16674
  %26 = getelementptr inbounds %struct.item, ptr %25, i32 0, i32 0, !dbg !16676
  %27 = load i32, ptr %26, align 8, !dbg !16676
  %28 = icmp eq i32 %27, 10, !dbg !16677
  br i1 %28, label %29, label %30, !dbg !16678

29:                                               ; preds = %24
  store ptr @parser_partial, ptr %3, align 8, !dbg !16679
  br label %51, !dbg !16679

30:                                               ; preds = %24
  %31 = load ptr, ptr %5, align 8, !dbg !16680
  %32 = getelementptr inbounds %struct.item, ptr %31, i32 0, i32 0, !dbg !16682
  %33 = load i32, ptr %32, align 8, !dbg !16682
  %34 = icmp eq i32 %33, 4, !dbg !16683
  br i1 %34, label %35, label %36, !dbg !16684

35:                                               ; preds = %30
  store ptr @parser_iter, ptr %3, align 8, !dbg !16685
  br label %51, !dbg !16685

36:                                               ; preds = %30
  %37 = load ptr, ptr %5, align 8, !dbg !16686
  %38 = getelementptr inbounds %struct.item, ptr %37, i32 0, i32 0, !dbg !16688
  %39 = load i32, ptr %38, align 8, !dbg !16688
  %40 = icmp eq i32 %39, 9, !dbg !16689
  br i1 %40, label %41, label %42, !dbg !16690

41:                                               ; preds = %36
  store ptr @parser_negate_iter, ptr %3, align 8, !dbg !16691
  br label %51, !dbg !16691

42:                                               ; preds = %36
  %43 = load ptr, ptr %5, align 8, !dbg !16692
  %44 = getelementptr inbounds %struct.item, ptr %43, i32 0, i32 0, !dbg !16694
  %45 = load i32, ptr %44, align 8, !dbg !16694
  %46 = icmp eq i32 %45, 7, !dbg !16695
  br i1 %46, label %47, label %48, !dbg !16696

47:                                               ; preds = %42
  store ptr @parser_slash, ptr %3, align 8, !dbg !16697
  br label %51, !dbg !16697

48:                                               ; preds = %42
  %49 = load ptr, ptr %5, align 8, !dbg !16698
  %50 = call ptr @unexpected_lexeme(ptr noundef %49), !dbg !16699
  store ptr %50, ptr %3, align 8, !dbg !16700
  br label %51, !dbg !16700

51:                                               ; preds = %48, %47, %41, %35, %29, %20, %10
  %52 = load ptr, ptr %3, align 8, !dbg !16701
  ret ptr %52, !dbg !16701
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @error_item(ptr noundef %0, ptr noundef %1, ...) #0 !dbg !16702 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !16705, metadata !DIExpression()), !dbg !16706
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !16707, metadata !DIExpression()), !dbg !16708
  call void @llvm.dbg.declare(metadata ptr %5, metadata !16709, metadata !DIExpression()), !dbg !16710
  call void @llvm.dbg.declare(metadata ptr %6, metadata !16711, metadata !DIExpression()), !dbg !16712
  %7 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %6, i64 0, i64 0, !dbg !16713
  call void @llvm.va_start(ptr %7), !dbg !16713
  %8 = load ptr, ptr %3, align 8, !dbg !16714
  %9 = load ptr, ptr %4, align 8, !dbg !16715
  %10 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %6, i64 0, i64 0, !dbg !16716
  %11 = call ptr @error_vitem(ptr noundef %8, ptr noundef %9, ptr noundef %10), !dbg !16717
  store ptr %11, ptr %5, align 8, !dbg !16718
  %12 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %6, i64 0, i64 0, !dbg !16719
  call void @llvm.va_end(ptr %12), !dbg !16719
  %13 = load ptr, ptr %5, align 8, !dbg !16720
  ret ptr %13, !dbg !16721
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @unexpected_lexeme(ptr noundef %0) #0 !dbg !16722 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !16725, metadata !DIExpression()), !dbg !16726
  %3 = load ptr, ptr %2, align 8, !dbg !16727
  %4 = load ptr, ptr %2, align 8, !dbg !16728
  %5 = getelementptr inbounds %struct.item, ptr %4, i32 0, i32 0, !dbg !16729
  %6 = load i32, ptr %5, align 8, !dbg !16729
  %7 = zext i32 %6 to i64, !dbg !16730
  %8 = getelementptr inbounds [13 x ptr], ptr @item_type_str, i64 0, i64 %7, !dbg !16730
  %9 = load ptr, ptr %8, align 8, !dbg !16730
  %10 = load ptr, ptr %2, align 8, !dbg !16731
  %11 = getelementptr inbounds %struct.item, ptr %10, i32 0, i32 1, !dbg !16732
  %12 = getelementptr inbounds %struct.lwan_value_t_, ptr %11, i32 0, i32 1, !dbg !16733
  %13 = load i64, ptr %12, align 8, !dbg !16733
  %14 = trunc i64 %13 to i32, !dbg !16734
  %15 = load ptr, ptr %2, align 8, !dbg !16735
  %16 = getelementptr inbounds %struct.item, ptr %15, i32 0, i32 1, !dbg !16736
  %17 = getelementptr inbounds %struct.lwan_value_t_, ptr %16, i32 0, i32 0, !dbg !16737
  %18 = load ptr, ptr %17, align 8, !dbg !16737
  %19 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %3, ptr noundef @.str.37.344, ptr noundef %9, i32 noundef %14, ptr noundef %18), !dbg !16738
  ret ptr %19, !dbg !16739
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @parser_identifier(ptr noundef %0, ptr noundef %1) #0 !dbg !16740 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i64, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca i64, align 8
  %15 = alloca ptr, align 8
  %16 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !16741, metadata !DIExpression()), !dbg !16742
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !16743, metadata !DIExpression()), !dbg !16744
  call void @llvm.dbg.declare(metadata ptr %6, metadata !16745, metadata !DIExpression()), !dbg !16746
  store ptr null, ptr %6, align 8, !dbg !16746
  %17 = load ptr, ptr %4, align 8, !dbg !16747
  %18 = getelementptr inbounds %struct.parser, ptr %17, i32 0, i32 3, !dbg !16749
  %19 = call zeroext i1 @lex_next(ptr noundef %18, ptr noundef %6), !dbg !16750
  br i1 %19, label %27, label %20, !dbg !16751

20:                                               ; preds = %2
  %21 = load ptr, ptr %6, align 8, !dbg !16752
  %22 = icmp ne ptr %21, null, !dbg !16752
  br i1 %22, label %23, label %26, !dbg !16755

23:                                               ; preds = %20
  %24 = load ptr, ptr %5, align 8, !dbg !16756
  %25 = load ptr, ptr %6, align 8, !dbg !16757
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %24, ptr align 8 %25, i64 24, i1 false), !dbg !16758
  br label %26, !dbg !16759

26:                                               ; preds = %23, %20
  store ptr null, ptr %3, align 8, !dbg !16760
  br label %171, !dbg !16760

27:                                               ; preds = %2
  %28 = load ptr, ptr %4, align 8, !dbg !16761
  %29 = getelementptr inbounds %struct.parser, ptr %28, i32 0, i32 4, !dbg !16763
  %30 = load i32, ptr %29, align 8, !dbg !16763
  %31 = and i32 %30, 2, !dbg !16764
  %32 = icmp ne i32 %31, 0, !dbg !16764
  br i1 %32, label %33, label %50, !dbg !16765

33:                                               ; preds = %27
  %34 = load ptr, ptr %6, align 8, !dbg !16766
  %35 = getelementptr inbounds %struct.item, ptr %34, i32 0, i32 0, !dbg !16769
  %36 = load i32, ptr %35, align 8, !dbg !16769
  %37 = icmp ne i32 %36, 12, !dbg !16770
  br i1 %37, label %38, label %41, !dbg !16771

38:                                               ; preds = %33
  %39 = load ptr, ptr %5, align 8, !dbg !16772
  %40 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %39, ptr noundef @.str.10.371), !dbg !16773
  store ptr %40, ptr %3, align 8, !dbg !16774
  br label %171, !dbg !16774

41:                                               ; preds = %33
  %42 = load ptr, ptr %4, align 8, !dbg !16775
  %43 = getelementptr inbounds %struct.parser, ptr %42, i32 0, i32 3, !dbg !16777
  %44 = call zeroext i1 @lex_next(ptr noundef %43, ptr noundef %6), !dbg !16778
  br i1 %44, label %49, label %45, !dbg !16779

45:                                               ; preds = %41
  %46 = load ptr, ptr %5, align 8, !dbg !16780
  %47 = load ptr, ptr %6, align 8, !dbg !16781
  %48 = call ptr @unexpected_lexeme_or_lex_error(ptr noundef %46, ptr noundef %47), !dbg !16782
  store ptr %48, ptr %3, align 8, !dbg !16783
  br label %171, !dbg !16783

49:                                               ; preds = %41
  br label %50, !dbg !16784

50:                                               ; preds = %49, %27
  %51 = load ptr, ptr %6, align 8, !dbg !16785
  %52 = getelementptr inbounds %struct.item, ptr %51, i32 0, i32 0, !dbg !16787
  %53 = load i32, ptr %52, align 8, !dbg !16787
  %54 = icmp eq i32 %53, 5, !dbg !16788
  br i1 %54, label %55, label %113, !dbg !16789

55:                                               ; preds = %50
  call void @llvm.dbg.declare(metadata ptr %7, metadata !16790, metadata !DIExpression()), !dbg !16792
  %56 = load ptr, ptr %4, align 8, !dbg !16793
  call void @llvm.dbg.declare(metadata ptr %8, metadata !16794, metadata !DIExpression()), !dbg !16796
  %57 = load ptr, ptr %5, align 8, !dbg !16796
  %58 = getelementptr inbounds %struct.item, ptr %57, i32 0, i32 1, !dbg !16796
  %59 = getelementptr inbounds %struct.lwan_value_t_, ptr %58, i32 0, i32 0, !dbg !16796
  %60 = load ptr, ptr %59, align 8, !dbg !16796
  store ptr %60, ptr %8, align 8, !dbg !16796
  call void @llvm.dbg.declare(metadata ptr %9, metadata !16797, metadata !DIExpression()), !dbg !16796
  %61 = load ptr, ptr %8, align 8, !dbg !16796
  %62 = load ptr, ptr %5, align 8, !dbg !16796
  %63 = getelementptr inbounds %struct.item, ptr %62, i32 0, i32 1, !dbg !16796
  %64 = getelementptr inbounds %struct.lwan_value_t_, ptr %63, i32 0, i32 1, !dbg !16796
  %65 = load i64, ptr %64, align 8, !dbg !16796
  %66 = call i64 @strnlen(ptr noundef %61, i64 noundef %65) #22, !dbg !16796
  store i64 %66, ptr %9, align 8, !dbg !16796
  call void @llvm.dbg.declare(metadata ptr %10, metadata !16798, metadata !DIExpression()), !dbg !16796
  %67 = load i64, ptr %9, align 8, !dbg !16796
  %68 = add i64 %67, 1, !dbg !16796
  %69 = alloca i8, i64 %68, align 16, !dbg !16796
  store ptr %69, ptr %10, align 8, !dbg !16796
  %70 = load ptr, ptr %10, align 8, !dbg !16796
  %71 = load i64, ptr %9, align 8, !dbg !16796
  %72 = getelementptr inbounds i8, ptr %70, i64 %71, !dbg !16796
  store i8 0, ptr %72, align 1, !dbg !16796
  %73 = load ptr, ptr %10, align 8, !dbg !16796
  %74 = load ptr, ptr %8, align 8, !dbg !16796
  %75 = load i64, ptr %9, align 8, !dbg !16796
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %73, ptr align 1 %74, i64 %75, i1 false), !dbg !16796
  store ptr %73, ptr %11, align 8, !dbg !16796
  %76 = load ptr, ptr %11, align 8, !dbg !16796
  %77 = call ptr @symtab_lookup(ptr noundef %56, ptr noundef %76), !dbg !16799
  store ptr %77, ptr %7, align 8, !dbg !16792
  %78 = load ptr, ptr %7, align 8, !dbg !16800
  %79 = icmp ne ptr %78, null, !dbg !16800
  br i1 %79, label %92, label %80, !dbg !16802

80:                                               ; preds = %55
  %81 = load ptr, ptr %5, align 8, !dbg !16803
  %82 = load ptr, ptr %5, align 8, !dbg !16805
  %83 = getelementptr inbounds %struct.item, ptr %82, i32 0, i32 1, !dbg !16806
  %84 = getelementptr inbounds %struct.lwan_value_t_, ptr %83, i32 0, i32 1, !dbg !16807
  %85 = load i64, ptr %84, align 8, !dbg !16807
  %86 = trunc i64 %85 to i32, !dbg !16808
  %87 = load ptr, ptr %5, align 8, !dbg !16809
  %88 = getelementptr inbounds %struct.item, ptr %87, i32 0, i32 1, !dbg !16810
  %89 = getelementptr inbounds %struct.lwan_value_t_, ptr %88, i32 0, i32 0, !dbg !16811
  %90 = load ptr, ptr %89, align 8, !dbg !16811
  %91 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %81, ptr noundef @.str.11.358, i32 noundef %86, ptr noundef %90), !dbg !16812
  store ptr %91, ptr %3, align 8, !dbg !16813
  br label %171, !dbg !16813

92:                                               ; preds = %55
  %93 = load ptr, ptr %4, align 8, !dbg !16814
  %94 = load ptr, ptr %4, align 8, !dbg !16815
  %95 = getelementptr inbounds %struct.parser, ptr %94, i32 0, i32 4, !dbg !16816
  %96 = load i32, ptr %95, align 8, !dbg !16816
  %97 = load ptr, ptr %7, align 8, !dbg !16817
  call void @emit_chunk(ptr noundef %93, i32 noundef 2, i32 noundef %96, ptr noundef %97), !dbg !16818
  %98 = load ptr, ptr %4, align 8, !dbg !16819
  %99 = getelementptr inbounds %struct.parser, ptr %98, i32 0, i32 4, !dbg !16820
  %100 = load i32, ptr %99, align 8, !dbg !16821
  %101 = and i32 %100, -3, !dbg !16821
  store i32 %101, ptr %99, align 8, !dbg !16821
  %102 = load ptr, ptr %5, align 8, !dbg !16822
  %103 = getelementptr inbounds %struct.item, ptr %102, i32 0, i32 1, !dbg !16823
  %104 = getelementptr inbounds %struct.lwan_value_t_, ptr %103, i32 0, i32 1, !dbg !16824
  %105 = load i64, ptr %104, align 8, !dbg !16824
  %106 = add i64 %105, 1, !dbg !16825
  %107 = load ptr, ptr %4, align 8, !dbg !16826
  %108 = getelementptr inbounds %struct.parser, ptr %107, i32 0, i32 0, !dbg !16827
  %109 = load ptr, ptr %108, align 8, !dbg !16827
  %110 = getelementptr inbounds %struct.lwan_value_t_, ptr %109, i32 0, i32 1, !dbg !16828
  %111 = load i64, ptr %110, align 8, !dbg !16829
  %112 = add i64 %111, %106, !dbg !16829
  store i64 %112, ptr %110, align 8, !dbg !16829
  store ptr @parser_text, ptr %3, align 8, !dbg !16830
  br label %171, !dbg !16830

113:                                              ; preds = %50
  %114 = load ptr, ptr %6, align 8, !dbg !16831
  %115 = getelementptr inbounds %struct.item, ptr %114, i32 0, i32 0, !dbg !16833
  %116 = load i32, ptr %115, align 8, !dbg !16833
  %117 = icmp eq i32 %116, 8, !dbg !16834
  br i1 %117, label %118, label %167, !dbg !16835

118:                                              ; preds = %113
  call void @llvm.dbg.declare(metadata ptr %12, metadata !16836, metadata !DIExpression()), !dbg !16838
  %119 = load ptr, ptr %4, align 8, !dbg !16839
  call void @llvm.dbg.declare(metadata ptr %13, metadata !16840, metadata !DIExpression()), !dbg !16842
  %120 = load ptr, ptr %5, align 8, !dbg !16842
  %121 = getelementptr inbounds %struct.item, ptr %120, i32 0, i32 1, !dbg !16842
  %122 = getelementptr inbounds %struct.lwan_value_t_, ptr %121, i32 0, i32 0, !dbg !16842
  %123 = load ptr, ptr %122, align 8, !dbg !16842
  store ptr %123, ptr %13, align 8, !dbg !16842
  call void @llvm.dbg.declare(metadata ptr %14, metadata !16843, metadata !DIExpression()), !dbg !16842
  %124 = load ptr, ptr %13, align 8, !dbg !16842
  %125 = load ptr, ptr %5, align 8, !dbg !16842
  %126 = getelementptr inbounds %struct.item, ptr %125, i32 0, i32 1, !dbg !16842
  %127 = getelementptr inbounds %struct.lwan_value_t_, ptr %126, i32 0, i32 1, !dbg !16842
  %128 = load i64, ptr %127, align 8, !dbg !16842
  %129 = call i64 @strnlen(ptr noundef %124, i64 noundef %128) #22, !dbg !16842
  store i64 %129, ptr %14, align 8, !dbg !16842
  call void @llvm.dbg.declare(metadata ptr %15, metadata !16844, metadata !DIExpression()), !dbg !16842
  %130 = load i64, ptr %14, align 8, !dbg !16842
  %131 = add i64 %130, 1, !dbg !16842
  %132 = alloca i8, i64 %131, align 16, !dbg !16842
  store ptr %132, ptr %15, align 8, !dbg !16842
  %133 = load ptr, ptr %15, align 8, !dbg !16842
  %134 = load i64, ptr %14, align 8, !dbg !16842
  %135 = getelementptr inbounds i8, ptr %133, i64 %134, !dbg !16842
  store i8 0, ptr %135, align 1, !dbg !16842
  %136 = load ptr, ptr %15, align 8, !dbg !16842
  %137 = load ptr, ptr %13, align 8, !dbg !16842
  %138 = load i64, ptr %14, align 8, !dbg !16842
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %136, ptr align 1 %137, i64 %138, i1 false), !dbg !16842
  store ptr %136, ptr %16, align 8, !dbg !16842
  %139 = load ptr, ptr %16, align 8, !dbg !16842
  %140 = call ptr @symtab_lookup(ptr noundef %119, ptr noundef %139), !dbg !16845
  store ptr %140, ptr %12, align 8, !dbg !16838
  %141 = load ptr, ptr %12, align 8, !dbg !16846
  %142 = icmp ne ptr %141, null, !dbg !16846
  br i1 %142, label %155, label %143, !dbg !16848

143:                                              ; preds = %118
  %144 = load ptr, ptr %5, align 8, !dbg !16849
  %145 = load ptr, ptr %5, align 8, !dbg !16851
  %146 = getelementptr inbounds %struct.item, ptr %145, i32 0, i32 1, !dbg !16852
  %147 = getelementptr inbounds %struct.lwan_value_t_, ptr %146, i32 0, i32 1, !dbg !16853
  %148 = load i64, ptr %147, align 8, !dbg !16853
  %149 = trunc i64 %148 to i32, !dbg !16854
  %150 = load ptr, ptr %5, align 8, !dbg !16855
  %151 = getelementptr inbounds %struct.item, ptr %150, i32 0, i32 1, !dbg !16856
  %152 = getelementptr inbounds %struct.lwan_value_t_, ptr %151, i32 0, i32 0, !dbg !16857
  %153 = load ptr, ptr %152, align 8, !dbg !16857
  %154 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %144, ptr noundef @.str.11.358, i32 noundef %149, ptr noundef %153), !dbg !16858
  store ptr %154, ptr %3, align 8, !dbg !16859
  br label %171, !dbg !16859

155:                                              ; preds = %118
  %156 = load ptr, ptr %4, align 8, !dbg !16860
  %157 = call zeroext i1 @parser_next_is(ptr noundef %156, i32 noundef 5), !dbg !16862
  br i1 %157, label %162, label %158, !dbg !16863

158:                                              ; preds = %155
  %159 = load ptr, ptr %5, align 8, !dbg !16864
  %160 = load ptr, ptr %6, align 8, !dbg !16865
  %161 = call ptr @unexpected_lexeme_or_lex_error(ptr noundef %159, ptr noundef %160), !dbg !16866
  store ptr %161, ptr %3, align 8, !dbg !16867
  br label %171, !dbg !16867

162:                                              ; preds = %155
  %163 = load ptr, ptr %4, align 8, !dbg !16868
  %164 = load ptr, ptr %12, align 8, !dbg !16869
  call void @emit_chunk(ptr noundef %163, i32 noundef 7, i32 noundef 4, ptr noundef %164), !dbg !16870
  %165 = load ptr, ptr %4, align 8, !dbg !16871
  %166 = load ptr, ptr %5, align 8, !dbg !16872
  call void @parser_push_item(ptr noundef %165, ptr noundef %166), !dbg !16873
  store ptr @parser_text, ptr %3, align 8, !dbg !16874
  br label %171, !dbg !16874

167:                                              ; preds = %113
  %168 = load ptr, ptr %5, align 8, !dbg !16875
  %169 = load ptr, ptr %6, align 8, !dbg !16876
  %170 = call ptr @unexpected_lexeme_or_lex_error(ptr noundef %168, ptr noundef %169), !dbg !16877
  store ptr %170, ptr %3, align 8, !dbg !16878
  br label %171, !dbg !16878

171:                                              ; preds = %167, %162, %158, %143, %92, %80, %45, %38, %26
  %172 = load ptr, ptr %3, align 8, !dbg !16879
  ret ptr %172, !dbg !16879
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @parser_partial(ptr noundef %0, ptr noundef %1) #0 !dbg !16880 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i64, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !16881, metadata !DIExpression()), !dbg !16882
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !16883, metadata !DIExpression()), !dbg !16884
  call void @llvm.dbg.declare(metadata ptr %6, metadata !16885, metadata !DIExpression()), !dbg !16886
  call void @llvm.dbg.declare(metadata ptr %7, metadata !16887, metadata !DIExpression()), !dbg !16888
  call void @llvm.dbg.declare(metadata ptr %8, metadata !16889, metadata !DIExpression()), !dbg !16891
  %12 = load ptr, ptr %5, align 8, !dbg !16891
  %13 = getelementptr inbounds %struct.item, ptr %12, i32 0, i32 1, !dbg !16891
  %14 = getelementptr inbounds %struct.lwan_value_t_, ptr %13, i32 0, i32 0, !dbg !16891
  %15 = load ptr, ptr %14, align 8, !dbg !16891
  store ptr %15, ptr %8, align 8, !dbg !16891
  call void @llvm.dbg.declare(metadata ptr %9, metadata !16892, metadata !DIExpression()), !dbg !16891
  %16 = load ptr, ptr %8, align 8, !dbg !16891
  %17 = load ptr, ptr %5, align 8, !dbg !16891
  %18 = getelementptr inbounds %struct.item, ptr %17, i32 0, i32 1, !dbg !16891
  %19 = getelementptr inbounds %struct.lwan_value_t_, ptr %18, i32 0, i32 1, !dbg !16891
  %20 = load i64, ptr %19, align 8, !dbg !16891
  %21 = call i64 @strnlen(ptr noundef %16, i64 noundef %20) #22, !dbg !16891
  store i64 %21, ptr %9, align 8, !dbg !16891
  call void @llvm.dbg.declare(metadata ptr %10, metadata !16893, metadata !DIExpression()), !dbg !16891
  %22 = load i64, ptr %9, align 8, !dbg !16891
  %23 = add i64 %22, 1, !dbg !16891
  %24 = alloca i8, i64 %23, align 16, !dbg !16891
  store ptr %24, ptr %10, align 8, !dbg !16891
  %25 = load ptr, ptr %10, align 8, !dbg !16891
  %26 = load i64, ptr %9, align 8, !dbg !16891
  %27 = getelementptr inbounds i8, ptr %25, i64 %26, !dbg !16891
  store i8 0, ptr %27, align 1, !dbg !16891
  %28 = load ptr, ptr %10, align 8, !dbg !16891
  %29 = load ptr, ptr %8, align 8, !dbg !16891
  %30 = load i64, ptr %9, align 8, !dbg !16891
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %28, ptr align 1 %29, i64 %30, i1 false), !dbg !16891
  store ptr %28, ptr %11, align 8, !dbg !16891
  %31 = load ptr, ptr %11, align 8, !dbg !16891
  store ptr %31, ptr %7, align 8, !dbg !16888
  %32 = load ptr, ptr %5, align 8, !dbg !16894
  %33 = getelementptr inbounds %struct.item, ptr %32, i32 0, i32 0, !dbg !16896
  %34 = load i32, ptr %33, align 8, !dbg !16896
  %35 = icmp ne i32 %34, 2, !dbg !16897
  br i1 %35, label %36, label %39, !dbg !16898

36:                                               ; preds = %2
  %37 = load ptr, ptr %5, align 8, !dbg !16899
  %38 = call ptr @unexpected_lexeme(ptr noundef %37), !dbg !16900
  store ptr %38, ptr %3, align 8, !dbg !16901
  br label %60, !dbg !16901

39:                                               ; preds = %2
  %40 = load ptr, ptr %4, align 8, !dbg !16902
  %41 = call zeroext i1 @parser_next_is(ptr noundef %40, i32 noundef 5), !dbg !16904
  br i1 %41, label %45, label %42, !dbg !16905

42:                                               ; preds = %39
  %43 = load ptr, ptr %5, align 8, !dbg !16906
  %44 = call ptr @unexpected_lexeme(ptr noundef %43), !dbg !16907
  store ptr %44, ptr %3, align 8, !dbg !16908
  br label %60, !dbg !16908

45:                                               ; preds = %39
  %46 = load ptr, ptr %7, align 8, !dbg !16909
  %47 = load ptr, ptr %4, align 8, !dbg !16910
  %48 = getelementptr inbounds %struct.parser, ptr %47, i32 0, i32 1, !dbg !16911
  %49 = load ptr, ptr %48, align 8, !dbg !16911
  %50 = call ptr @lwan_tpl_compile_file(ptr noundef %46, ptr noundef %49), !dbg !16912
  store ptr %50, ptr %6, align 8, !dbg !16913
  %51 = load ptr, ptr %6, align 8, !dbg !16914
  %52 = icmp ne ptr %51, null, !dbg !16914
  br i1 %52, label %53, label %56, !dbg !16916

53:                                               ; preds = %45
  %54 = load ptr, ptr %4, align 8, !dbg !16917
  %55 = load ptr, ptr %6, align 8, !dbg !16919
  call void @emit_chunk(ptr noundef %54, i32 noundef 9, i32 noundef 0, ptr noundef %55), !dbg !16920
  store ptr @parser_text, ptr %3, align 8, !dbg !16921
  br label %60, !dbg !16921

56:                                               ; preds = %45
  %57 = load ptr, ptr %5, align 8, !dbg !16922
  %58 = load ptr, ptr %7, align 8, !dbg !16923
  %59 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %57, ptr noundef @.str.13.369, ptr noundef %58), !dbg !16924
  store ptr %59, ptr %3, align 8, !dbg !16925
  br label %60, !dbg !16925

60:                                               ; preds = %56, %53, %42, %36
  %61 = load ptr, ptr %3, align 8, !dbg !16926
  ret ptr %61, !dbg !16926
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @parser_iter(ptr noundef %0, ptr noundef %1) #0 !dbg !16927 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i64, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i32, align 4
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !16928, metadata !DIExpression()), !dbg !16929
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !16930, metadata !DIExpression()), !dbg !16931
  %14 = load ptr, ptr %5, align 8, !dbg !16932
  %15 = getelementptr inbounds %struct.item, ptr %14, i32 0, i32 0, !dbg !16934
  %16 = load i32, ptr %15, align 8, !dbg !16934
  %17 = icmp eq i32 %16, 2, !dbg !16935
  br i1 %17, label %18, label %95, !dbg !16936

18:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata ptr %6, metadata !16937, metadata !DIExpression()), !dbg !16939
  %19 = load ptr, ptr %4, align 8, !dbg !16940
  %20 = getelementptr inbounds %struct.parser, ptr %19, i32 0, i32 4, !dbg !16941
  %21 = load i32, ptr %20, align 8, !dbg !16941
  %22 = and i32 %21, 1, !dbg !16942
  store i32 %22, ptr %6, align 4, !dbg !16939
  call void @llvm.dbg.declare(metadata ptr %7, metadata !16943, metadata !DIExpression()), !dbg !16944
  call void @llvm.dbg.declare(metadata ptr %8, metadata !16945, metadata !DIExpression()), !dbg !16947
  %23 = load ptr, ptr %5, align 8, !dbg !16947
  %24 = getelementptr inbounds %struct.item, ptr %23, i32 0, i32 1, !dbg !16947
  %25 = getelementptr inbounds %struct.lwan_value_t_, ptr %24, i32 0, i32 0, !dbg !16947
  %26 = load ptr, ptr %25, align 8, !dbg !16947
  store ptr %26, ptr %8, align 8, !dbg !16947
  call void @llvm.dbg.declare(metadata ptr %9, metadata !16948, metadata !DIExpression()), !dbg !16947
  %27 = load ptr, ptr %8, align 8, !dbg !16947
  %28 = load ptr, ptr %5, align 8, !dbg !16947
  %29 = getelementptr inbounds %struct.item, ptr %28, i32 0, i32 1, !dbg !16947
  %30 = getelementptr inbounds %struct.lwan_value_t_, ptr %29, i32 0, i32 1, !dbg !16947
  %31 = load i64, ptr %30, align 8, !dbg !16947
  %32 = call i64 @strnlen(ptr noundef %27, i64 noundef %31) #22, !dbg !16947
  store i64 %32, ptr %9, align 8, !dbg !16947
  call void @llvm.dbg.declare(metadata ptr %10, metadata !16949, metadata !DIExpression()), !dbg !16947
  %33 = load i64, ptr %9, align 8, !dbg !16947
  %34 = add i64 %33, 1, !dbg !16947
  %35 = alloca i8, i64 %34, align 16, !dbg !16947
  store ptr %35, ptr %10, align 8, !dbg !16947
  %36 = load ptr, ptr %10, align 8, !dbg !16947
  %37 = load i64, ptr %9, align 8, !dbg !16947
  %38 = getelementptr inbounds i8, ptr %36, i64 %37, !dbg !16947
  store i8 0, ptr %38, align 1, !dbg !16947
  %39 = load ptr, ptr %10, align 8, !dbg !16947
  %40 = load ptr, ptr %8, align 8, !dbg !16947
  %41 = load i64, ptr %9, align 8, !dbg !16947
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %39, ptr align 1 %40, i64 %41, i1 false), !dbg !16947
  store ptr %39, ptr %11, align 8, !dbg !16947
  %42 = load ptr, ptr %11, align 8, !dbg !16947
  store ptr %42, ptr %7, align 8, !dbg !16944
  call void @llvm.dbg.declare(metadata ptr %12, metadata !16950, metadata !DIExpression()), !dbg !16951
  %43 = load ptr, ptr %4, align 8, !dbg !16952
  %44 = load ptr, ptr %7, align 8, !dbg !16953
  %45 = call ptr @symtab_lookup(ptr noundef %43, ptr noundef %44), !dbg !16954
  store ptr %45, ptr %12, align 8, !dbg !16951
  %46 = load ptr, ptr %12, align 8, !dbg !16955
  %47 = icmp ne ptr %46, null, !dbg !16955
  br i1 %47, label %60, label %48, !dbg !16957

48:                                               ; preds = %18
  %49 = load ptr, ptr %5, align 8, !dbg !16958
  %50 = load ptr, ptr %5, align 8, !dbg !16960
  %51 = getelementptr inbounds %struct.item, ptr %50, i32 0, i32 1, !dbg !16961
  %52 = getelementptr inbounds %struct.lwan_value_t_, ptr %51, i32 0, i32 1, !dbg !16962
  %53 = load i64, ptr %52, align 8, !dbg !16962
  %54 = trunc i64 %53 to i32, !dbg !16963
  %55 = load ptr, ptr %5, align 8, !dbg !16964
  %56 = getelementptr inbounds %struct.item, ptr %55, i32 0, i32 1, !dbg !16965
  %57 = getelementptr inbounds %struct.lwan_value_t_, ptr %56, i32 0, i32 0, !dbg !16966
  %58 = load ptr, ptr %57, align 8, !dbg !16966
  %59 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %49, ptr noundef @.str.11.358, i32 noundef %54, ptr noundef %58), !dbg !16967
  store ptr %59, ptr %3, align 8, !dbg !16968
  br label %98, !dbg !16968

60:                                               ; preds = %18
  %61 = load ptr, ptr %4, align 8, !dbg !16969
  %62 = call zeroext i1 @parser_next_is(ptr noundef %61, i32 noundef 5), !dbg !16971
  br i1 %62, label %66, label %63, !dbg !16972

63:                                               ; preds = %60
  %64 = load ptr, ptr %5, align 8, !dbg !16973
  %65 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %64, ptr noundef @.str.14.364), !dbg !16974
  store ptr %65, ptr %3, align 8, !dbg !16975
  br label %98, !dbg !16975

66:                                               ; preds = %60
  call void @llvm.dbg.declare(metadata ptr %13, metadata !16976, metadata !DIExpression()), !dbg !16977
  %67 = load ptr, ptr %4, align 8, !dbg !16978
  %68 = load ptr, ptr %12, align 8, !dbg !16979
  %69 = getelementptr inbounds %struct.lwan_var_descriptor_t_, ptr %68, i32 0, i32 5, !dbg !16980
  %70 = load ptr, ptr %69, align 8, !dbg !16980
  %71 = call i32 @symtab_push(ptr noundef %67, ptr noundef %70), !dbg !16981
  store i32 %71, ptr %13, align 4, !dbg !16977
  %72 = load i32, ptr %13, align 4, !dbg !16982
  %73 = icmp slt i32 %72, 0, !dbg !16984
  br i1 %73, label %74, label %84, !dbg !16985

74:                                               ; preds = %66
  %75 = load i32, ptr %13, align 4, !dbg !16986
  %76 = icmp eq i32 %75, -19, !dbg !16989
  br i1 %76, label %77, label %81, !dbg !16990

77:                                               ; preds = %74
  %78 = load ptr, ptr %5, align 8, !dbg !16991
  %79 = load ptr, ptr %7, align 8, !dbg !16992
  %80 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %78, ptr noundef @.str.15.365, ptr noundef %79), !dbg !16993
  store ptr %80, ptr %3, align 8, !dbg !16994
  br label %98, !dbg !16994

81:                                               ; preds = %74
  %82 = load ptr, ptr %5, align 8, !dbg !16995
  %83 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %82, ptr noundef @.str.16.366), !dbg !16996
  store ptr %83, ptr %3, align 8, !dbg !16997
  br label %98, !dbg !16997

84:                                               ; preds = %66
  %85 = load ptr, ptr %4, align 8, !dbg !16998
  %86 = load i32, ptr %6, align 4, !dbg !16999
  %87 = or i32 %86, 4, !dbg !17000
  %88 = load ptr, ptr %12, align 8, !dbg !17001
  call void @emit_chunk(ptr noundef %85, i32 noundef 5, i32 noundef %87, ptr noundef %88), !dbg !17002
  %89 = load ptr, ptr %4, align 8, !dbg !17003
  %90 = load ptr, ptr %5, align 8, !dbg !17004
  call void @parser_push_item(ptr noundef %89, ptr noundef %90), !dbg !17005
  %91 = load ptr, ptr %4, align 8, !dbg !17006
  %92 = getelementptr inbounds %struct.parser, ptr %91, i32 0, i32 4, !dbg !17007
  %93 = load i32, ptr %92, align 8, !dbg !17008
  %94 = and i32 %93, -2, !dbg !17008
  store i32 %94, ptr %92, align 8, !dbg !17008
  store ptr @parser_text, ptr %3, align 8, !dbg !17009
  br label %98, !dbg !17009

95:                                               ; preds = %2
  %96 = load ptr, ptr %5, align 8, !dbg !17010
  %97 = call ptr @unexpected_lexeme(ptr noundef %96), !dbg !17011
  store ptr %97, ptr %3, align 8, !dbg !17012
  br label %98, !dbg !17012

98:                                               ; preds = %95, %84, %81, %77, %63, %48
  %99 = load ptr, ptr %3, align 8, !dbg !17013
  ret ptr %99, !dbg !17013
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @parser_negate_iter(ptr noundef %0, ptr noundef %1) #0 !dbg !17014 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !17015, metadata !DIExpression()), !dbg !17016
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !17017, metadata !DIExpression()), !dbg !17018
  %6 = load ptr, ptr %5, align 8, !dbg !17019
  %7 = getelementptr inbounds %struct.item, ptr %6, i32 0, i32 0, !dbg !17021
  %8 = load i32, ptr %7, align 8, !dbg !17021
  %9 = icmp ne i32 %8, 4, !dbg !17022
  br i1 %9, label %10, label %13, !dbg !17023

10:                                               ; preds = %2
  %11 = load ptr, ptr %5, align 8, !dbg !17024
  %12 = call ptr @unexpected_lexeme(ptr noundef %11), !dbg !17025
  store ptr %12, ptr %3, align 8, !dbg !17026
  br label %18, !dbg !17026

13:                                               ; preds = %2
  %14 = load ptr, ptr %4, align 8, !dbg !17027
  %15 = getelementptr inbounds %struct.parser, ptr %14, i32 0, i32 4, !dbg !17028
  %16 = load i32, ptr %15, align 8, !dbg !17029
  %17 = xor i32 %16, 1, !dbg !17029
  store i32 %17, ptr %15, align 8, !dbg !17029
  store ptr @parser_iter, ptr %3, align 8, !dbg !17030
  br label %18, !dbg !17030

18:                                               ; preds = %13, %10
  %19 = load ptr, ptr %3, align 8, !dbg !17031
  ret ptr %19, !dbg !17031
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @parser_slash(ptr noundef %0, ptr noundef %1) #0 !dbg !17032 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !17033, metadata !DIExpression()), !dbg !17034
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !17035, metadata !DIExpression()), !dbg !17036
  %7 = load ptr, ptr %5, align 8, !dbg !17037
  %8 = getelementptr inbounds %struct.item, ptr %7, i32 0, i32 0, !dbg !17039
  %9 = load i32, ptr %8, align 8, !dbg !17039
  %10 = icmp eq i32 %9, 2, !dbg !17040
  br i1 %10, label %11, label %41, !dbg !17041

11:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata ptr %6, metadata !17042, metadata !DIExpression()), !dbg !17044
  store ptr null, ptr %6, align 8, !dbg !17044
  %12 = load ptr, ptr %4, align 8, !dbg !17045
  %13 = getelementptr inbounds %struct.parser, ptr %12, i32 0, i32 3, !dbg !17047
  %14 = call zeroext i1 @lex_next(ptr noundef %13, ptr noundef %6), !dbg !17048
  br i1 %14, label %19, label %15, !dbg !17049

15:                                               ; preds = %11
  %16 = load ptr, ptr %5, align 8, !dbg !17050
  %17 = load ptr, ptr %6, align 8, !dbg !17051
  %18 = call ptr @unexpected_lexeme_or_lex_error(ptr noundef %16, ptr noundef %17), !dbg !17052
  store ptr %18, ptr %3, align 8, !dbg !17053
  br label %44, !dbg !17053

19:                                               ; preds = %11
  %20 = load ptr, ptr %6, align 8, !dbg !17054
  %21 = getelementptr inbounds %struct.item, ptr %20, i32 0, i32 0, !dbg !17056
  %22 = load i32, ptr %21, align 8, !dbg !17056
  %23 = icmp eq i32 %22, 5, !dbg !17057
  br i1 %23, label %24, label %28, !dbg !17058

24:                                               ; preds = %19
  %25 = load ptr, ptr %4, align 8, !dbg !17059
  %26 = load ptr, ptr %5, align 8, !dbg !17060
  %27 = call ptr @parser_end_iter(ptr noundef %25, ptr noundef %26), !dbg !17061
  store ptr %27, ptr %3, align 8, !dbg !17062
  br label %44, !dbg !17062

28:                                               ; preds = %19
  %29 = load ptr, ptr %6, align 8, !dbg !17063
  %30 = getelementptr inbounds %struct.item, ptr %29, i32 0, i32 0, !dbg !17065
  %31 = load i32, ptr %30, align 8, !dbg !17065
  %32 = icmp eq i32 %31, 8, !dbg !17066
  br i1 %32, label %33, label %37, !dbg !17067

33:                                               ; preds = %28
  %34 = load ptr, ptr %4, align 8, !dbg !17068
  %35 = load ptr, ptr %5, align 8, !dbg !17069
  %36 = call ptr @parser_end_var_not_empty(ptr noundef %34, ptr noundef %35), !dbg !17070
  store ptr %36, ptr %3, align 8, !dbg !17071
  br label %44, !dbg !17071

37:                                               ; preds = %28
  %38 = load ptr, ptr %5, align 8, !dbg !17072
  %39 = load ptr, ptr %6, align 8, !dbg !17073
  %40 = call ptr @unexpected_lexeme_or_lex_error(ptr noundef %38, ptr noundef %39), !dbg !17074
  store ptr %40, ptr %3, align 8, !dbg !17075
  br label %44, !dbg !17075

41:                                               ; preds = %2
  %42 = load ptr, ptr %5, align 8, !dbg !17076
  %43 = call ptr @unexpected_lexeme(ptr noundef %42), !dbg !17077
  store ptr %43, ptr %3, align 8, !dbg !17078
  br label %44, !dbg !17078

44:                                               ; preds = %41, %37, %33, %24, %15
  %45 = load ptr, ptr %3, align 8, !dbg !17079
  ret ptr %45, !dbg !17079
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @unexpected_lexeme_or_lex_error(ptr noundef %0, ptr noundef %1) #0 !dbg !17080 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !17083, metadata !DIExpression()), !dbg !17084
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !17085, metadata !DIExpression()), !dbg !17086
  %6 = load ptr, ptr %5, align 8, !dbg !17087
  %7 = icmp ne ptr %6, null, !dbg !17087
  br i1 %7, label %8, label %21, !dbg !17089

8:                                                ; preds = %2
  %9 = load ptr, ptr %5, align 8, !dbg !17090
  %10 = getelementptr inbounds %struct.item, ptr %9, i32 0, i32 0, !dbg !17091
  %11 = load i32, ptr %10, align 8, !dbg !17091
  %12 = icmp eq i32 %11, 0, !dbg !17092
  br i1 %12, label %18, label %13, !dbg !17093

13:                                               ; preds = %8
  %14 = load ptr, ptr %5, align 8, !dbg !17094
  %15 = getelementptr inbounds %struct.item, ptr %14, i32 0, i32 0, !dbg !17095
  %16 = load i32, ptr %15, align 8, !dbg !17095
  %17 = icmp eq i32 %16, 1, !dbg !17096
  br i1 %17, label %18, label %21, !dbg !17097

18:                                               ; preds = %13, %8
  %19 = load ptr, ptr %4, align 8, !dbg !17098
  %20 = load ptr, ptr %5, align 8, !dbg !17100
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %19, ptr align 8 %20, i64 24, i1 false), !dbg !17101
  store ptr null, ptr %3, align 8, !dbg !17102
  br label %24, !dbg !17102

21:                                               ; preds = %13, %2
  %22 = load ptr, ptr %4, align 8, !dbg !17103
  %23 = call ptr @unexpected_lexeme(ptr noundef %22), !dbg !17104
  store ptr %23, ptr %3, align 8, !dbg !17105
  br label %24, !dbg !17105

24:                                               ; preds = %21, %18
  %25 = load ptr, ptr %3, align 8, !dbg !17106
  ret ptr %25, !dbg !17106
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @parser_end_iter(ptr noundef %0, ptr noundef %1) #0 !dbg !17107 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  %9 = alloca ptr, align 8
  %10 = alloca i64, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !17108, metadata !DIExpression()), !dbg !17109
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !17110, metadata !DIExpression()), !dbg !17111
  call void @llvm.dbg.declare(metadata ptr %6, metadata !17112, metadata !DIExpression()), !dbg !17113
  call void @llvm.dbg.declare(metadata ptr %7, metadata !17114, metadata !DIExpression()), !dbg !17115
  call void @llvm.dbg.declare(metadata ptr %8, metadata !17116, metadata !DIExpression()), !dbg !17117
  %13 = load ptr, ptr %4, align 8, !dbg !17118
  %14 = load ptr, ptr %5, align 8, !dbg !17120
  %15 = call zeroext i1 @parser_stack_top_matches(ptr noundef %13, ptr noundef %14, i32 noundef 2), !dbg !17121
  br i1 %15, label %17, label %16, !dbg !17122

16:                                               ; preds = %2
  store ptr null, ptr %3, align 8, !dbg !17123
  br label %110, !dbg !17123

17:                                               ; preds = %2
  %18 = load ptr, ptr %4, align 8, !dbg !17124
  call void @llvm.dbg.declare(metadata ptr %9, metadata !17125, metadata !DIExpression()), !dbg !17127
  %19 = load ptr, ptr %5, align 8, !dbg !17127
  %20 = getelementptr inbounds %struct.item, ptr %19, i32 0, i32 1, !dbg !17127
  %21 = getelementptr inbounds %struct.lwan_value_t_, ptr %20, i32 0, i32 0, !dbg !17127
  %22 = load ptr, ptr %21, align 8, !dbg !17127
  store ptr %22, ptr %9, align 8, !dbg !17127
  call void @llvm.dbg.declare(metadata ptr %10, metadata !17128, metadata !DIExpression()), !dbg !17127
  %23 = load ptr, ptr %9, align 8, !dbg !17127
  %24 = load ptr, ptr %5, align 8, !dbg !17127
  %25 = getelementptr inbounds %struct.item, ptr %24, i32 0, i32 1, !dbg !17127
  %26 = getelementptr inbounds %struct.lwan_value_t_, ptr %25, i32 0, i32 1, !dbg !17127
  %27 = load i64, ptr %26, align 8, !dbg !17127
  %28 = call i64 @strnlen(ptr noundef %23, i64 noundef %27) #22, !dbg !17127
  store i64 %28, ptr %10, align 8, !dbg !17127
  call void @llvm.dbg.declare(metadata ptr %11, metadata !17129, metadata !DIExpression()), !dbg !17127
  %29 = load i64, ptr %10, align 8, !dbg !17127
  %30 = add i64 %29, 1, !dbg !17127
  %31 = alloca i8, i64 %30, align 16, !dbg !17127
  store ptr %31, ptr %11, align 8, !dbg !17127
  %32 = load ptr, ptr %11, align 8, !dbg !17127
  %33 = load i64, ptr %10, align 8, !dbg !17127
  %34 = getelementptr inbounds i8, ptr %32, i64 %33, !dbg !17127
  store i8 0, ptr %34, align 1, !dbg !17127
  %35 = load ptr, ptr %11, align 8, !dbg !17127
  %36 = load ptr, ptr %9, align 8, !dbg !17127
  %37 = load i64, ptr %10, align 8, !dbg !17127
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %35, ptr align 1 %36, i64 %37, i1 false), !dbg !17127
  store ptr %35, ptr %12, align 8, !dbg !17127
  %38 = load ptr, ptr %12, align 8, !dbg !17127
  %39 = call ptr @symtab_lookup(ptr noundef %18, ptr noundef %38), !dbg !17130
  store ptr %39, ptr %7, align 8, !dbg !17131
  %40 = load ptr, ptr %7, align 8, !dbg !17132
  %41 = icmp ne ptr %40, null, !dbg !17132
  br i1 %41, label %54, label %42, !dbg !17134

42:                                               ; preds = %17
  %43 = load ptr, ptr %5, align 8, !dbg !17135
  %44 = load ptr, ptr %5, align 8, !dbg !17137
  %45 = getelementptr inbounds %struct.item, ptr %44, i32 0, i32 1, !dbg !17138
  %46 = getelementptr inbounds %struct.lwan_value_t_, ptr %45, i32 0, i32 1, !dbg !17139
  %47 = load i64, ptr %46, align 8, !dbg !17139
  %48 = trunc i64 %47 to i32, !dbg !17140
  %49 = load ptr, ptr %5, align 8, !dbg !17141
  %50 = getelementptr inbounds %struct.item, ptr %49, i32 0, i32 1, !dbg !17142
  %51 = getelementptr inbounds %struct.lwan_value_t_, ptr %50, i32 0, i32 0, !dbg !17143
  %52 = load ptr, ptr %51, align 8, !dbg !17143
  %53 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %43, ptr noundef @.str.11.358, i32 noundef %48, ptr noundef %52), !dbg !17144
  store ptr %53, ptr %3, align 8, !dbg !17145
  br label %110, !dbg !17145

54:                                               ; preds = %17
  %55 = load ptr, ptr %4, align 8, !dbg !17146
  %56 = getelementptr inbounds %struct.parser, ptr %55, i32 0, i32 6, !dbg !17148
  %57 = getelementptr inbounds %struct.anon.2.79, ptr %56, i32 0, i32 1, !dbg !17149
  %58 = load i64, ptr %57, align 8, !dbg !17149
  %59 = icmp ne i64 %58, 0, !dbg !17146
  br i1 %59, label %63, label %60, !dbg !17150

60:                                               ; preds = %54
  %61 = load ptr, ptr %5, align 8, !dbg !17151
  %62 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %61, ptr noundef @.str.17.362), !dbg !17152
  store ptr %62, ptr %3, align 8, !dbg !17153
  br label %110, !dbg !17153

63:                                               ; preds = %54
  %64 = load ptr, ptr %4, align 8, !dbg !17154
  %65 = getelementptr inbounds %struct.parser, ptr %64, i32 0, i32 6, !dbg !17156
  %66 = getelementptr inbounds %struct.anon.2.79, ptr %65, i32 0, i32 1, !dbg !17157
  %67 = load i64, ptr %66, align 8, !dbg !17157
  %68 = sub nsw i64 %67, 1, !dbg !17158
  store i64 %68, ptr %8, align 8, !dbg !17159
  br label %69, !dbg !17160

69:                                               ; preds = %95, %63
  %70 = load i64, ptr %8, align 8, !dbg !17161
  %71 = icmp sge i64 %70, 0, !dbg !17163
  br i1 %71, label %72, label %98, !dbg !17164

72:                                               ; preds = %69
  %73 = load ptr, ptr %4, align 8, !dbg !17165
  %74 = getelementptr inbounds %struct.parser, ptr %73, i32 0, i32 6, !dbg !17167
  %75 = getelementptr inbounds %struct.anon.2.79, ptr %74, i32 0, i32 0, !dbg !17168
  %76 = load ptr, ptr %75, align 8, !dbg !17168
  %77 = load i64, ptr %8, align 8, !dbg !17169
  %78 = getelementptr inbounds %struct.chunk, ptr %76, i64 %77, !dbg !17165
  store ptr %78, ptr %6, align 8, !dbg !17170
  %79 = load ptr, ptr %6, align 8, !dbg !17171
  %80 = getelementptr inbounds %struct.chunk, ptr %79, i32 0, i32 0, !dbg !17173
  %81 = load i32, ptr %80, align 8, !dbg !17173
  %82 = icmp ne i32 %81, 5, !dbg !17174
  br i1 %82, label %83, label %84, !dbg !17175

83:                                               ; preds = %72
  br label %95, !dbg !17176

84:                                               ; preds = %72
  %85 = load ptr, ptr %6, align 8, !dbg !17177
  %86 = getelementptr inbounds %struct.chunk, ptr %85, i32 0, i32 1, !dbg !17179
  %87 = load ptr, ptr %86, align 8, !dbg !17179
  %88 = load ptr, ptr %7, align 8, !dbg !17180
  %89 = icmp eq ptr %87, %88, !dbg !17181
  br i1 %89, label %90, label %94, !dbg !17182

90:                                               ; preds = %84
  %91 = load ptr, ptr %4, align 8, !dbg !17183
  %92 = load ptr, ptr %6, align 8, !dbg !17185
  call void @emit_chunk(ptr noundef %91, i32 noundef 6, i32 noundef 0, ptr noundef %92), !dbg !17186
  %93 = load ptr, ptr %4, align 8, !dbg !17187
  call void @symtab_pop(ptr noundef %93), !dbg !17188
  store ptr @parser_text, ptr %3, align 8, !dbg !17189
  br label %110, !dbg !17189

94:                                               ; preds = %84
  br label %95, !dbg !17190

95:                                               ; preds = %94, %83
  %96 = load i64, ptr %8, align 8, !dbg !17191
  %97 = add nsw i64 %96, -1, !dbg !17191
  store i64 %97, ptr %8, align 8, !dbg !17191
  br label %69, !dbg !17192, !llvm.loop !17193

98:                                               ; preds = %69
  %99 = load ptr, ptr %5, align 8, !dbg !17195
  %100 = load ptr, ptr %5, align 8, !dbg !17196
  %101 = getelementptr inbounds %struct.item, ptr %100, i32 0, i32 1, !dbg !17197
  %102 = getelementptr inbounds %struct.lwan_value_t_, ptr %101, i32 0, i32 1, !dbg !17198
  %103 = load i64, ptr %102, align 8, !dbg !17198
  %104 = trunc i64 %103 to i32, !dbg !17199
  %105 = load ptr, ptr %5, align 8, !dbg !17200
  %106 = getelementptr inbounds %struct.item, ptr %105, i32 0, i32 1, !dbg !17201
  %107 = getelementptr inbounds %struct.lwan_value_t_, ptr %106, i32 0, i32 0, !dbg !17202
  %108 = load ptr, ptr %107, align 8, !dbg !17202
  %109 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %99, ptr noundef @.str.18.363, i32 noundef %104, ptr noundef %108), !dbg !17203
  store ptr %109, ptr %3, align 8, !dbg !17204
  br label %110, !dbg !17204

110:                                              ; preds = %98, %90, %60, %42, %16
  %111 = load ptr, ptr %3, align 8, !dbg !17205
  ret ptr %111, !dbg !17205
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @parser_end_var_not_empty(ptr noundef %0, ptr noundef %1) #0 !dbg !17206 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  %9 = alloca ptr, align 8
  %10 = alloca i64, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !17207, metadata !DIExpression()), !dbg !17208
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !17209, metadata !DIExpression()), !dbg !17210
  call void @llvm.dbg.declare(metadata ptr %6, metadata !17211, metadata !DIExpression()), !dbg !17212
  call void @llvm.dbg.declare(metadata ptr %7, metadata !17213, metadata !DIExpression()), !dbg !17214
  call void @llvm.dbg.declare(metadata ptr %8, metadata !17215, metadata !DIExpression()), !dbg !17216
  %13 = load ptr, ptr %4, align 8, !dbg !17217
  %14 = call zeroext i1 @parser_next_is(ptr noundef %13, i32 noundef 5), !dbg !17219
  br i1 %14, label %18, label %15, !dbg !17220

15:                                               ; preds = %2
  %16 = load ptr, ptr %5, align 8, !dbg !17221
  %17 = call ptr @unexpected_lexeme(ptr noundef %16), !dbg !17222
  store ptr %17, ptr %3, align 8, !dbg !17223
  br label %106, !dbg !17223

18:                                               ; preds = %2
  %19 = load ptr, ptr %4, align 8, !dbg !17224
  %20 = load ptr, ptr %5, align 8, !dbg !17226
  %21 = call zeroext i1 @parser_stack_top_matches(ptr noundef %19, ptr noundef %20, i32 noundef 2), !dbg !17227
  br i1 %21, label %23, label %22, !dbg !17228

22:                                               ; preds = %18
  store ptr null, ptr %3, align 8, !dbg !17229
  br label %106, !dbg !17229

23:                                               ; preds = %18
  %24 = load ptr, ptr %4, align 8, !dbg !17230
  call void @llvm.dbg.declare(metadata ptr %9, metadata !17231, metadata !DIExpression()), !dbg !17233
  %25 = load ptr, ptr %5, align 8, !dbg !17233
  %26 = getelementptr inbounds %struct.item, ptr %25, i32 0, i32 1, !dbg !17233
  %27 = getelementptr inbounds %struct.lwan_value_t_, ptr %26, i32 0, i32 0, !dbg !17233
  %28 = load ptr, ptr %27, align 8, !dbg !17233
  store ptr %28, ptr %9, align 8, !dbg !17233
  call void @llvm.dbg.declare(metadata ptr %10, metadata !17234, metadata !DIExpression()), !dbg !17233
  %29 = load ptr, ptr %9, align 8, !dbg !17233
  %30 = load ptr, ptr %5, align 8, !dbg !17233
  %31 = getelementptr inbounds %struct.item, ptr %30, i32 0, i32 1, !dbg !17233
  %32 = getelementptr inbounds %struct.lwan_value_t_, ptr %31, i32 0, i32 1, !dbg !17233
  %33 = load i64, ptr %32, align 8, !dbg !17233
  %34 = call i64 @strnlen(ptr noundef %29, i64 noundef %33) #22, !dbg !17233
  store i64 %34, ptr %10, align 8, !dbg !17233
  call void @llvm.dbg.declare(metadata ptr %11, metadata !17235, metadata !DIExpression()), !dbg !17233
  %35 = load i64, ptr %10, align 8, !dbg !17233
  %36 = add i64 %35, 1, !dbg !17233
  %37 = alloca i8, i64 %36, align 16, !dbg !17233
  store ptr %37, ptr %11, align 8, !dbg !17233
  %38 = load ptr, ptr %11, align 8, !dbg !17233
  %39 = load i64, ptr %10, align 8, !dbg !17233
  %40 = getelementptr inbounds i8, ptr %38, i64 %39, !dbg !17233
  store i8 0, ptr %40, align 1, !dbg !17233
  %41 = load ptr, ptr %11, align 8, !dbg !17233
  %42 = load ptr, ptr %9, align 8, !dbg !17233
  %43 = load i64, ptr %10, align 8, !dbg !17233
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %41, ptr align 1 %42, i64 %43, i1 false), !dbg !17233
  store ptr %41, ptr %12, align 8, !dbg !17233
  %44 = load ptr, ptr %12, align 8, !dbg !17233
  %45 = call ptr @symtab_lookup(ptr noundef %24, ptr noundef %44), !dbg !17236
  store ptr %45, ptr %7, align 8, !dbg !17237
  %46 = load ptr, ptr %7, align 8, !dbg !17238
  %47 = icmp ne ptr %46, null, !dbg !17238
  br i1 %47, label %60, label %48, !dbg !17240

48:                                               ; preds = %23
  %49 = load ptr, ptr %5, align 8, !dbg !17241
  %50 = load ptr, ptr %5, align 8, !dbg !17243
  %51 = getelementptr inbounds %struct.item, ptr %50, i32 0, i32 1, !dbg !17244
  %52 = getelementptr inbounds %struct.lwan_value_t_, ptr %51, i32 0, i32 1, !dbg !17245
  %53 = load i64, ptr %52, align 8, !dbg !17245
  %54 = trunc i64 %53 to i32, !dbg !17246
  %55 = load ptr, ptr %5, align 8, !dbg !17247
  %56 = getelementptr inbounds %struct.item, ptr %55, i32 0, i32 1, !dbg !17248
  %57 = getelementptr inbounds %struct.lwan_value_t_, ptr %56, i32 0, i32 0, !dbg !17249
  %58 = load ptr, ptr %57, align 8, !dbg !17249
  %59 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %49, ptr noundef @.str.11.358, i32 noundef %54, ptr noundef %58), !dbg !17250
  store ptr %59, ptr %3, align 8, !dbg !17251
  br label %106, !dbg !17251

60:                                               ; preds = %23
  %61 = load ptr, ptr %4, align 8, !dbg !17252
  %62 = getelementptr inbounds %struct.parser, ptr %61, i32 0, i32 6, !dbg !17254
  %63 = getelementptr inbounds %struct.anon.2.79, ptr %62, i32 0, i32 1, !dbg !17255
  %64 = load i64, ptr %63, align 8, !dbg !17255
  %65 = sub nsw i64 %64, 1, !dbg !17256
  store i64 %65, ptr %8, align 8, !dbg !17257
  br label %66, !dbg !17258

66:                                               ; preds = %91, %60
  %67 = load i64, ptr %8, align 8, !dbg !17259
  %68 = icmp sge i64 %67, 0, !dbg !17261
  br i1 %68, label %69, label %94, !dbg !17262

69:                                               ; preds = %66
  %70 = load ptr, ptr %4, align 8, !dbg !17263
  %71 = getelementptr inbounds %struct.parser, ptr %70, i32 0, i32 6, !dbg !17265
  %72 = getelementptr inbounds %struct.anon.2.79, ptr %71, i32 0, i32 0, !dbg !17266
  %73 = load ptr, ptr %72, align 8, !dbg !17266
  %74 = load i64, ptr %8, align 8, !dbg !17267
  %75 = getelementptr inbounds %struct.chunk, ptr %73, i64 %74, !dbg !17263
  store ptr %75, ptr %6, align 8, !dbg !17268
  %76 = load ptr, ptr %6, align 8, !dbg !17269
  %77 = getelementptr inbounds %struct.chunk, ptr %76, i32 0, i32 0, !dbg !17271
  %78 = load i32, ptr %77, align 8, !dbg !17271
  %79 = icmp ne i32 %78, 7, !dbg !17272
  br i1 %79, label %80, label %81, !dbg !17273

80:                                               ; preds = %69
  br label %91, !dbg !17274

81:                                               ; preds = %69
  %82 = load ptr, ptr %6, align 8, !dbg !17275
  %83 = getelementptr inbounds %struct.chunk, ptr %82, i32 0, i32 1, !dbg !17277
  %84 = load ptr, ptr %83, align 8, !dbg !17277
  %85 = load ptr, ptr %7, align 8, !dbg !17278
  %86 = icmp eq ptr %84, %85, !dbg !17279
  br i1 %86, label %87, label %90, !dbg !17280

87:                                               ; preds = %81
  %88 = load ptr, ptr %4, align 8, !dbg !17281
  %89 = load ptr, ptr %7, align 8, !dbg !17283
  call void @emit_chunk(ptr noundef %88, i32 noundef 8, i32 noundef 0, ptr noundef %89), !dbg !17284
  store ptr @parser_text, ptr %3, align 8, !dbg !17285
  br label %106, !dbg !17285

90:                                               ; preds = %81
  br label %91, !dbg !17286

91:                                               ; preds = %90, %80
  %92 = load i64, ptr %8, align 8, !dbg !17287
  %93 = add nsw i64 %92, -1, !dbg !17287
  store i64 %93, ptr %8, align 8, !dbg !17287
  br label %66, !dbg !17288, !llvm.loop !17289

94:                                               ; preds = %66
  %95 = load ptr, ptr %5, align 8, !dbg !17291
  %96 = load ptr, ptr %5, align 8, !dbg !17292
  %97 = getelementptr inbounds %struct.item, ptr %96, i32 0, i32 1, !dbg !17293
  %98 = getelementptr inbounds %struct.lwan_value_t_, ptr %97, i32 0, i32 1, !dbg !17294
  %99 = load i64, ptr %98, align 8, !dbg !17294
  %100 = trunc i64 %99 to i32, !dbg !17295
  %101 = load ptr, ptr %5, align 8, !dbg !17296
  %102 = getelementptr inbounds %struct.item, ptr %101, i32 0, i32 1, !dbg !17297
  %103 = getelementptr inbounds %struct.lwan_value_t_, ptr %102, i32 0, i32 0, !dbg !17298
  %104 = load ptr, ptr %103, align 8, !dbg !17298
  %105 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %95, ptr noundef @.str.35.359, i32 noundef %100, ptr noundef %104), !dbg !17299
  store ptr %105, ptr %3, align 8, !dbg !17300
  br label %106, !dbg !17300

106:                                              ; preds = %94, %87, %48, %22, %15
  %107 = load ptr, ptr %3, align 8, !dbg !17301
  ret ptr %107, !dbg !17301
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @parser_next_is(ptr noundef %0, i32 noundef %1) #0 !dbg !17302 {
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !17305, metadata !DIExpression()), !dbg !17306
  store i32 %1, ptr %4, align 4
  call void @llvm.dbg.declare(metadata ptr %4, metadata !17307, metadata !DIExpression()), !dbg !17308
  call void @llvm.dbg.declare(metadata ptr %5, metadata !17309, metadata !DIExpression()), !dbg !17310
  %6 = load ptr, ptr %3, align 8, !dbg !17311
  %7 = getelementptr inbounds %struct.parser, ptr %6, i32 0, i32 3, !dbg !17312
  %8 = call zeroext i1 @lex_next(ptr noundef %7, ptr noundef %5), !dbg !17313
  br i1 %8, label %9, label %16, !dbg !17313

9:                                                ; preds = %2
  %10 = load ptr, ptr %5, align 8, !dbg !17314
  %11 = getelementptr inbounds %struct.item, ptr %10, i32 0, i32 0, !dbg !17315
  %12 = load i32, ptr %11, align 8, !dbg !17315
  %13 = load i32, ptr %4, align 4, !dbg !17316
  %14 = icmp eq i32 %12, %13, !dbg !17317
  %15 = zext i1 %14 to i32, !dbg !17317
  br label %17, !dbg !17313

16:                                               ; preds = %2
  br label %17, !dbg !17313

17:                                               ; preds = %16, %9
  %18 = phi i32 [ %15, %9 ], [ 0, %16 ], !dbg !17313
  %19 = icmp ne i32 %18, 0, !dbg !17313
  ret i1 %19, !dbg !17318
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @parser_stack_top_matches(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 !dbg !17319 {
  %4 = alloca i1, align 1
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca i8, align 1
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !17322, metadata !DIExpression()), !dbg !17323
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !17324, metadata !DIExpression()), !dbg !17325
  store i32 %2, ptr %7, align 4
  call void @llvm.dbg.declare(metadata ptr %7, metadata !17326, metadata !DIExpression()), !dbg !17327
  %10 = load ptr, ptr %5, align 8, !dbg !17328
  %11 = getelementptr inbounds %struct.parser, ptr %10, i32 0, i32 5, !dbg !17330
  %12 = call zeroext i1 @list_empty.322(ptr noundef %11), !dbg !17331
  br i1 %12, label %13, label %25, !dbg !17332

13:                                               ; preds = %3
  %14 = load ptr, ptr %6, align 8, !dbg !17333
  %15 = load ptr, ptr %6, align 8, !dbg !17335
  %16 = getelementptr inbounds %struct.item, ptr %15, i32 0, i32 1, !dbg !17336
  %17 = getelementptr inbounds %struct.lwan_value_t_, ptr %16, i32 0, i32 1, !dbg !17337
  %18 = load i64, ptr %17, align 8, !dbg !17337
  %19 = trunc i64 %18 to i32, !dbg !17338
  %20 = load ptr, ptr %6, align 8, !dbg !17339
  %21 = getelementptr inbounds %struct.item, ptr %20, i32 0, i32 1, !dbg !17340
  %22 = getelementptr inbounds %struct.lwan_value_t_, ptr %21, i32 0, i32 0, !dbg !17341
  %23 = load ptr, ptr %22, align 8, !dbg !17341
  %24 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %14, ptr noundef @.str.19.360, i32 noundef %19, ptr noundef %23), !dbg !17342
  store i1 false, ptr %4, align 1, !dbg !17343
  br label %104, !dbg !17343

25:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata ptr %8, metadata !17344, metadata !DIExpression()), !dbg !17345
  %26 = load ptr, ptr %5, align 8, !dbg !17346
  %27 = getelementptr inbounds %struct.parser, ptr %26, i32 0, i32 5, !dbg !17347
  %28 = getelementptr inbounds %struct.list_head, ptr %27, i32 0, i32 0, !dbg !17348
  %29 = getelementptr inbounds %struct.list_node, ptr %28, i32 0, i32 0, !dbg !17349
  %30 = load ptr, ptr %29, align 8, !dbg !17349
  store ptr %30, ptr %8, align 8, !dbg !17345
  call void @llvm.dbg.declare(metadata ptr %9, metadata !17350, metadata !DIExpression()), !dbg !17351
  %31 = load ptr, ptr %8, align 8, !dbg !17352
  %32 = getelementptr inbounds %struct.stacked_item, ptr %31, i32 0, i32 1, !dbg !17353
  %33 = getelementptr inbounds %struct.item, ptr %32, i32 0, i32 0, !dbg !17354
  %34 = load i32, ptr %33, align 8, !dbg !17354
  %35 = load i32, ptr %7, align 4, !dbg !17355
  %36 = icmp eq i32 %34, %35, !dbg !17356
  br i1 %36, label %37, label %65, !dbg !17357

37:                                               ; preds = %25
  %38 = load ptr, ptr %6, align 8, !dbg !17358
  %39 = getelementptr inbounds %struct.item, ptr %38, i32 0, i32 1, !dbg !17359
  %40 = getelementptr inbounds %struct.lwan_value_t_, ptr %39, i32 0, i32 1, !dbg !17360
  %41 = load i64, ptr %40, align 8, !dbg !17360
  %42 = load ptr, ptr %8, align 8, !dbg !17361
  %43 = getelementptr inbounds %struct.stacked_item, ptr %42, i32 0, i32 1, !dbg !17362
  %44 = getelementptr inbounds %struct.item, ptr %43, i32 0, i32 1, !dbg !17363
  %45 = getelementptr inbounds %struct.lwan_value_t_, ptr %44, i32 0, i32 1, !dbg !17364
  %46 = load i64, ptr %45, align 8, !dbg !17364
  %47 = icmp eq i64 %41, %46, !dbg !17365
  br i1 %47, label %48, label %65, !dbg !17366

48:                                               ; preds = %37
  %49 = load ptr, ptr %8, align 8, !dbg !17367
  %50 = getelementptr inbounds %struct.stacked_item, ptr %49, i32 0, i32 1, !dbg !17368
  %51 = getelementptr inbounds %struct.item, ptr %50, i32 0, i32 1, !dbg !17369
  %52 = getelementptr inbounds %struct.lwan_value_t_, ptr %51, i32 0, i32 0, !dbg !17370
  %53 = load ptr, ptr %52, align 8, !dbg !17370
  %54 = load ptr, ptr %6, align 8, !dbg !17371
  %55 = getelementptr inbounds %struct.item, ptr %54, i32 0, i32 1, !dbg !17372
  %56 = getelementptr inbounds %struct.lwan_value_t_, ptr %55, i32 0, i32 0, !dbg !17373
  %57 = load ptr, ptr %56, align 8, !dbg !17373
  %58 = load ptr, ptr %6, align 8, !dbg !17374
  %59 = getelementptr inbounds %struct.item, ptr %58, i32 0, i32 1, !dbg !17375
  %60 = getelementptr inbounds %struct.lwan_value_t_, ptr %59, i32 0, i32 1, !dbg !17376
  %61 = load i64, ptr %60, align 8, !dbg !17376
  %62 = call i32 @memcmp(ptr noundef %53, ptr noundef %57, i64 noundef %61) #22, !dbg !17377
  %63 = icmp ne i32 %62, 0, !dbg !17378
  %64 = xor i1 %63, true, !dbg !17378
  br label %65

65:                                               ; preds = %48, %37, %25
  %66 = phi i1 [ false, %37 ], [ false, %25 ], [ %64, %48 ], !dbg !17379
  %67 = zext i1 %66 to i8, !dbg !17351
  store i8 %67, ptr %9, align 1, !dbg !17351
  %68 = load i8, ptr %9, align 1, !dbg !17380
  %69 = trunc i8 %68 to i1, !dbg !17380
  br i1 %69, label %70, label %74, !dbg !17382

70:                                               ; preds = %65
  %71 = load ptr, ptr %8, align 8, !dbg !17383
  %72 = getelementptr inbounds %struct.stacked_item, ptr %71, i32 0, i32 0, !dbg !17385
  call void @list_del.326(ptr noundef %72), !dbg !17386
  %73 = load ptr, ptr %8, align 8, !dbg !17387
  call void @free(ptr noundef %73) #18, !dbg !17388
  store i1 true, ptr %4, align 1, !dbg !17389
  br label %104, !dbg !17389

74:                                               ; preds = %65
  %75 = load ptr, ptr %6, align 8, !dbg !17390
  %76 = load ptr, ptr %8, align 8, !dbg !17391
  %77 = getelementptr inbounds %struct.stacked_item, ptr %76, i32 0, i32 1, !dbg !17392
  %78 = getelementptr inbounds %struct.item, ptr %77, i32 0, i32 0, !dbg !17393
  %79 = load i32, ptr %78, align 8, !dbg !17393
  %80 = zext i32 %79 to i64, !dbg !17394
  %81 = getelementptr inbounds [13 x ptr], ptr @item_type_str, i64 0, i64 %80, !dbg !17394
  %82 = load ptr, ptr %81, align 8, !dbg !17394
  %83 = load ptr, ptr %8, align 8, !dbg !17395
  %84 = getelementptr inbounds %struct.stacked_item, ptr %83, i32 0, i32 1, !dbg !17396
  %85 = getelementptr inbounds %struct.item, ptr %84, i32 0, i32 1, !dbg !17397
  %86 = getelementptr inbounds %struct.lwan_value_t_, ptr %85, i32 0, i32 1, !dbg !17398
  %87 = load i64, ptr %86, align 8, !dbg !17398
  %88 = trunc i64 %87 to i32, !dbg !17399
  %89 = load ptr, ptr %8, align 8, !dbg !17400
  %90 = getelementptr inbounds %struct.stacked_item, ptr %89, i32 0, i32 1, !dbg !17401
  %91 = getelementptr inbounds %struct.item, ptr %90, i32 0, i32 1, !dbg !17402
  %92 = getelementptr inbounds %struct.lwan_value_t_, ptr %91, i32 0, i32 0, !dbg !17403
  %93 = load ptr, ptr %92, align 8, !dbg !17403
  %94 = load ptr, ptr %6, align 8, !dbg !17404
  %95 = getelementptr inbounds %struct.item, ptr %94, i32 0, i32 1, !dbg !17405
  %96 = getelementptr inbounds %struct.lwan_value_t_, ptr %95, i32 0, i32 1, !dbg !17406
  %97 = load i64, ptr %96, align 8, !dbg !17406
  %98 = trunc i64 %97 to i32, !dbg !17407
  %99 = load ptr, ptr %6, align 8, !dbg !17408
  %100 = getelementptr inbounds %struct.item, ptr %99, i32 0, i32 1, !dbg !17409
  %101 = getelementptr inbounds %struct.lwan_value_t_, ptr %100, i32 0, i32 0, !dbg !17410
  %102 = load ptr, ptr %101, align 8, !dbg !17410
  %103 = call ptr (ptr, ptr, ...) @error_item(ptr noundef %75, ptr noundef @.str.20.361, ptr noundef %82, i32 noundef %88, ptr noundef %93, i32 noundef %98, ptr noundef %102), !dbg !17411
  store i1 false, ptr %4, align 1, !dbg !17412
  br label %104, !dbg !17412

104:                                              ; preds = %74, %70, %13
  %105 = load i1, ptr %4, align 1, !dbg !17413
  ret i1 %105, !dbg !17413
}

; Function Attrs: nounwind willreturn memory(read)
declare i64 @strnlen(ptr noundef, i64 noundef) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @symtab_lookup(ptr noundef %0, ptr noundef %1) #0 !dbg !17414 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !17417, metadata !DIExpression()), !dbg !17418
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !17419, metadata !DIExpression()), !dbg !17420
  call void @llvm.dbg.declare(metadata ptr %6, metadata !17421, metadata !DIExpression()), !dbg !17423
  %8 = load ptr, ptr %4, align 8, !dbg !17424
  %9 = getelementptr inbounds %struct.parser, ptr %8, i32 0, i32 2, !dbg !17425
  %10 = load ptr, ptr %9, align 8, !dbg !17425
  store ptr %10, ptr %6, align 8, !dbg !17423
  br label %11, !dbg !17426

11:                                               ; preds = %25, %2
  %12 = load ptr, ptr %6, align 8, !dbg !17427
  %13 = icmp ne ptr %12, null, !dbg !17429
  br i1 %13, label %14, label %29, !dbg !17429

14:                                               ; preds = %11
  call void @llvm.dbg.declare(metadata ptr %7, metadata !17430, metadata !DIExpression()), !dbg !17432
  %15 = load ptr, ptr %6, align 8, !dbg !17433
  %16 = getelementptr inbounds %struct.list_node, ptr %15, i32 0, i32 0, !dbg !17434
  %17 = load ptr, ptr %16, align 8, !dbg !17434
  %18 = load ptr, ptr %5, align 8, !dbg !17435
  %19 = call ptr @hash_find(ptr noundef %17, ptr noundef %18), !dbg !17436
  store ptr %19, ptr %7, align 8, !dbg !17432
  %20 = load ptr, ptr %7, align 8, !dbg !17437
  %21 = icmp ne ptr %20, null, !dbg !17437
  br i1 %21, label %22, label %24, !dbg !17439

22:                                               ; preds = %14
  %23 = load ptr, ptr %7, align 8, !dbg !17440
  store ptr %23, ptr %3, align 8, !dbg !17441
  br label %30, !dbg !17441

24:                                               ; preds = %14
  br label %25, !dbg !17442

25:                                               ; preds = %24
  %26 = load ptr, ptr %6, align 8, !dbg !17443
  %27 = getelementptr inbounds %struct.list_node, ptr %26, i32 0, i32 1, !dbg !17444
  %28 = load ptr, ptr %27, align 8, !dbg !17444
  store ptr %28, ptr %6, align 8, !dbg !17445
  br label %11, !dbg !17446, !llvm.loop !17447

29:                                               ; preds = %11
  store ptr null, ptr %3, align 8, !dbg !17449
  br label %30, !dbg !17449

30:                                               ; preds = %29, %22
  %31 = load ptr, ptr %3, align 8, !dbg !17450
  ret ptr %31, !dbg !17450
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @parser_push_item(ptr noundef %0, ptr noundef %1) #0 !dbg !17451 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !17454, metadata !DIExpression()), !dbg !17455
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !17456, metadata !DIExpression()), !dbg !17457
  call void @llvm.dbg.declare(metadata ptr %5, metadata !17458, metadata !DIExpression()), !dbg !17459
  %6 = call noalias ptr @malloc(i64 noundef 40) #17, !dbg !17460
  store ptr %6, ptr %5, align 8, !dbg !17459
  %7 = load ptr, ptr %5, align 8, !dbg !17461
  %8 = icmp ne ptr %7, null, !dbg !17461
  br i1 %8, label %10, label %9, !dbg !17463

9:                                                ; preds = %2
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.7.320, i32 noundef 504, ptr noundef @__FUNCTION__.parser_push_item, ptr noundef @.str.12.367) #23, !dbg !17464
  unreachable, !dbg !17464

10:                                               ; preds = %2
  %11 = load ptr, ptr %5, align 8, !dbg !17465
  %12 = getelementptr inbounds %struct.stacked_item, ptr %11, i32 0, i32 1, !dbg !17466
  %13 = load ptr, ptr %4, align 8, !dbg !17467
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %13, i64 24, i1 false), !dbg !17468
  %14 = load ptr, ptr %3, align 8, !dbg !17469
  %15 = getelementptr inbounds %struct.parser, ptr %14, i32 0, i32 5, !dbg !17470
  %16 = load ptr, ptr %5, align 8, !dbg !17471
  %17 = getelementptr inbounds %struct.stacked_item, ptr %16, i32 0, i32 0, !dbg !17472
  call void @list_add.368(ptr noundef %15, ptr noundef %17), !dbg !17473
  ret void, !dbg !17474
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @list_add.368(ptr noundef %0, ptr noundef %1) #0 !dbg !17475 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !17478, metadata !DIExpression()), !dbg !17479
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !17480, metadata !DIExpression()), !dbg !17481
  %5 = load ptr, ptr %3, align 8, !dbg !17482
  %6 = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 0, !dbg !17483
  %7 = getelementptr inbounds %struct.list_node, ptr %6, i32 0, i32 0, !dbg !17484
  %8 = load ptr, ptr %7, align 8, !dbg !17484
  %9 = load ptr, ptr %4, align 8, !dbg !17485
  %10 = getelementptr inbounds %struct.list_node, ptr %9, i32 0, i32 0, !dbg !17486
  store ptr %8, ptr %10, align 8, !dbg !17487
  %11 = load ptr, ptr %3, align 8, !dbg !17488
  %12 = getelementptr inbounds %struct.list_head, ptr %11, i32 0, i32 0, !dbg !17489
  %13 = load ptr, ptr %4, align 8, !dbg !17490
  %14 = getelementptr inbounds %struct.list_node, ptr %13, i32 0, i32 1, !dbg !17491
  store ptr %12, ptr %14, align 8, !dbg !17492
  %15 = load ptr, ptr %4, align 8, !dbg !17493
  %16 = load ptr, ptr %3, align 8, !dbg !17494
  %17 = getelementptr inbounds %struct.list_head, ptr %16, i32 0, i32 0, !dbg !17495
  %18 = getelementptr inbounds %struct.list_node, ptr %17, i32 0, i32 0, !dbg !17496
  %19 = load ptr, ptr %18, align 8, !dbg !17496
  %20 = getelementptr inbounds %struct.list_node, ptr %19, i32 0, i32 1, !dbg !17497
  store ptr %15, ptr %20, align 8, !dbg !17498
  %21 = load ptr, ptr %4, align 8, !dbg !17499
  %22 = load ptr, ptr %3, align 8, !dbg !17500
  %23 = getelementptr inbounds %struct.list_head, ptr %22, i32 0, i32 0, !dbg !17501
  %24 = getelementptr inbounds %struct.list_node, ptr %23, i32 0, i32 0, !dbg !17502
  store ptr %21, ptr %24, align 8, !dbg !17503
  %25 = load ptr, ptr %3, align 8, !dbg !17504
  ret void, !dbg !17505
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @lwan_tpl_compile_file(ptr noundef %0, ptr noundef %1) #0 !dbg !17506 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.stat, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !17507, metadata !DIExpression()), !dbg !17508
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !17509, metadata !DIExpression()), !dbg !17510
  call void @llvm.dbg.declare(metadata ptr %5, metadata !17511, metadata !DIExpression()), !dbg !17512
  call void @llvm.dbg.declare(metadata ptr %6, metadata !17513, metadata !DIExpression()), !dbg !17535
  call void @llvm.dbg.declare(metadata ptr %7, metadata !17536, metadata !DIExpression()), !dbg !17537
  call void @llvm.dbg.declare(metadata ptr %8, metadata !17538, metadata !DIExpression()), !dbg !17539
  store ptr null, ptr %8, align 8, !dbg !17539
  %9 = load ptr, ptr %3, align 8, !dbg !17540
  %10 = call i32 (ptr, i32, ...) @open(ptr noundef %9, i32 noundef 524288), !dbg !17541
  store i32 %10, ptr %5, align 4, !dbg !17542
  %11 = load i32, ptr %5, align 4, !dbg !17543
  %12 = icmp slt i32 %11, 0, !dbg !17545
  br i1 %12, label %13, label %14, !dbg !17546

13:                                               ; preds = %2
  br label %41, !dbg !17547

14:                                               ; preds = %2
  %15 = load i32, ptr %5, align 4, !dbg !17548
  %16 = call i32 @fstat(i32 noundef %15, ptr noundef %6) #18, !dbg !17550
  %17 = icmp slt i32 %16, 0, !dbg !17551
  br i1 %17, label %18, label %19, !dbg !17552

18:                                               ; preds = %14
  br label %38, !dbg !17553

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.stat, ptr %6, i32 0, i32 8, !dbg !17554
  %21 = load i64, ptr %20, align 8, !dbg !17554
  %22 = load i32, ptr %5, align 4, !dbg !17555
  %23 = call ptr @mmap(ptr noundef null, i64 noundef %21, i32 noundef 1, i32 noundef 1, i32 noundef %22, i64 noundef 0) #18, !dbg !17556
  store ptr %23, ptr %7, align 8, !dbg !17557
  %24 = load ptr, ptr %7, align 8, !dbg !17558
  %25 = icmp eq ptr %24, inttoptr (i64 -1 to ptr), !dbg !17560
  br i1 %25, label %26, label %27, !dbg !17561

26:                                               ; preds = %19
  br label %38, !dbg !17562

27:                                               ; preds = %19
  %28 = load ptr, ptr %7, align 8, !dbg !17563
  %29 = load ptr, ptr %4, align 8, !dbg !17564
  %30 = call ptr @lwan_tpl_compile_string(ptr noundef %28, ptr noundef %29), !dbg !17565
  store ptr %30, ptr %8, align 8, !dbg !17566
  %31 = load ptr, ptr %7, align 8, !dbg !17567
  %32 = getelementptr inbounds %struct.stat, ptr %6, i32 0, i32 8, !dbg !17569
  %33 = load i64, ptr %32, align 8, !dbg !17569
  %34 = call i32 @munmap(ptr noundef %31, i64 noundef %33) #18, !dbg !17570
  %35 = icmp slt i32 %34, 0, !dbg !17571
  br i1 %35, label %36, label %37, !dbg !17572

36:                                               ; preds = %27
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.7.320, i32 noundef 1147, ptr noundef @__FUNCTION__.lwan_tpl_compile_file, ptr noundef @.str.8.370), !dbg !17573
  br label %37, !dbg !17573

37:                                               ; preds = %36, %27
  br label %38, !dbg !17574

38:                                               ; preds = %37, %26, %18
  call void @llvm.dbg.label(metadata !17575), !dbg !17576
  %39 = load i32, ptr %5, align 4, !dbg !17577
  %40 = call i32 @close(i32 noundef %39), !dbg !17578
  br label %41, !dbg !17578

41:                                               ; preds = %38, %13
  call void @llvm.dbg.label(metadata !17579), !dbg !17580
  %42 = load ptr, ptr %8, align 8, !dbg !17581
  ret ptr %42, !dbg !17582
}

; Function Attrs: nounwind
declare i32 @fstat(i32 noundef, ptr noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @lwan_tpl_apply_with_buffer(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !17583 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !17586, metadata !DIExpression()), !dbg !17587
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !17588, metadata !DIExpression()), !dbg !17589
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !17590, metadata !DIExpression()), !dbg !17591
  %8 = load ptr, ptr %6, align 8, !dbg !17592
  %9 = call zeroext i1 @strbuf_reset_length(ptr noundef %8), !dbg !17592
  %10 = xor i1 %9, true, !dbg !17592
  %11 = zext i1 %10 to i32, !dbg !17592
  %12 = sext i32 %11 to i64, !dbg !17592
  %13 = icmp ne i64 %12, 0, !dbg !17592
  br i1 %13, label %14, label %15, !dbg !17594

14:                                               ; preds = %3
  store ptr null, ptr %4, align 8, !dbg !17595
  br label %35, !dbg !17595

15:                                               ; preds = %3
  %16 = load ptr, ptr %6, align 8, !dbg !17596
  %17 = load ptr, ptr %5, align 8, !dbg !17596
  %18 = getelementptr inbounds %struct.lwan_value_t_, ptr %17, i32 0, i32 1, !dbg !17596
  %19 = load i64, ptr %18, align 8, !dbg !17596
  %20 = call zeroext i1 @strbuf_grow_to(ptr noundef %16, i64 noundef %19), !dbg !17596
  %21 = xor i1 %20, true, !dbg !17596
  %22 = zext i1 %21 to i32, !dbg !17596
  %23 = sext i32 %22 to i64, !dbg !17596
  %24 = icmp ne i64 %23, 0, !dbg !17596
  br i1 %24, label %25, label %26, !dbg !17598

25:                                               ; preds = %15
  store ptr null, ptr %4, align 8, !dbg !17599
  br label %35, !dbg !17599

26:                                               ; preds = %15
  %27 = load ptr, ptr %5, align 8, !dbg !17600
  %28 = load ptr, ptr %5, align 8, !dbg !17601
  %29 = getelementptr inbounds %struct.lwan_value_t_, ptr %28, i32 0, i32 0, !dbg !17602
  %30 = load ptr, ptr %29, align 8, !dbg !17602
  %31 = load ptr, ptr %6, align 8, !dbg !17603
  %32 = load ptr, ptr %7, align 8, !dbg !17604
  %33 = call ptr @apply_until(ptr noundef %27, ptr noundef %30, ptr noundef %31, ptr noundef %32, ptr noundef null), !dbg !17605
  %34 = load ptr, ptr %6, align 8, !dbg !17606
  store ptr %34, ptr %4, align 8, !dbg !17607
  br label %35, !dbg !17607

35:                                               ; preds = %26, %25, %14
  %36 = load ptr, ptr %4, align 8, !dbg !17608
  ret ptr %36, !dbg !17608
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @apply_until(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4) #0 !dbg !2832 {
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca %struct.coro_switcher_t_, align 8
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %15 = alloca ptr, align 8
  %16 = alloca ptr, align 8
  %17 = alloca i8, align 1
  %18 = alloca ptr, align 8
  %19 = alloca ptr, align 8
  %20 = alloca i8, align 1
  %21 = alloca i32, align 4
  store ptr %0, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !17609, metadata !DIExpression()), !dbg !17610
  store ptr %1, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !17611, metadata !DIExpression()), !dbg !17612
  store ptr %2, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !17613, metadata !DIExpression()), !dbg !17614
  store ptr %3, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %10, metadata !17615, metadata !DIExpression()), !dbg !17616
  store ptr %4, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !17617, metadata !DIExpression()), !dbg !17618
  call void @llvm.dbg.declare(metadata ptr %12, metadata !17619, metadata !DIExpression()), !dbg !17625
  call void @llvm.dbg.declare(metadata ptr %13, metadata !17626, metadata !DIExpression()), !dbg !17627
  store ptr null, ptr %13, align 8, !dbg !17627
  call void @llvm.dbg.declare(metadata ptr %14, metadata !17628, metadata !DIExpression()), !dbg !17629
  %22 = load ptr, ptr %8, align 8, !dbg !17630
  store ptr %22, ptr %14, align 8, !dbg !17629
  %23 = load ptr, ptr %14, align 8, !dbg !17631
  %24 = icmp ne ptr %23, null, !dbg !17631
  %25 = xor i1 %24, true, !dbg !17631
  %26 = zext i1 %25 to i32, !dbg !17631
  %27 = sext i32 %26 to i64, !dbg !17631
  %28 = icmp ne i64 %27, 0, !dbg !17631
  br i1 %28, label %29, label %30, !dbg !17633

29:                                               ; preds = %5
  store ptr null, ptr %6, align 8, !dbg !17634
  br label %431, !dbg !17634

30:                                               ; preds = %5
  br label %31, !dbg !17635

31:                                               ; preds = %30
  %32 = load ptr, ptr %14, align 8, !dbg !17636
  %33 = getelementptr inbounds %struct.chunk, ptr %32, i32 0, i32 0, !dbg !17636
  %34 = load i32, ptr %33, align 8, !dbg !17636
  %35 = zext i32 %34 to i64, !dbg !17636
  %36 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %35, !dbg !17636
  %37 = load ptr, ptr %36, align 8, !dbg !17636
  br label %433, !dbg !17636

38:                                               ; No predecessors!
  br label %39, !dbg !17636

39:                                               ; preds = %433, %38
  call void @llvm.dbg.label(metadata !17638), !dbg !17639
  %40 = load ptr, ptr %9, align 8, !dbg !17640
  %41 = load ptr, ptr %14, align 8, !dbg !17641
  %42 = getelementptr inbounds %struct.chunk, ptr %41, i32 0, i32 1, !dbg !17641
  %43 = load ptr, ptr %42, align 8, !dbg !17641
  %44 = getelementptr inbounds %struct.strbuf_t_, ptr %43, i32 0, i32 0, !dbg !17641
  %45 = load ptr, ptr %44, align 8, !dbg !17641
  %46 = load ptr, ptr %14, align 8, !dbg !17642
  %47 = getelementptr inbounds %struct.chunk, ptr %46, i32 0, i32 1, !dbg !17642
  %48 = load ptr, ptr %47, align 8, !dbg !17642
  %49 = getelementptr inbounds %struct.strbuf_t_, ptr %48, i32 0, i32 1, !dbg !17642
  %50 = getelementptr inbounds %struct.timespec, ptr %49, i32 0, i32 1, !dbg !17642
  %51 = load i64, ptr %50, align 8, !dbg !17642
  %52 = call zeroext i1 @strbuf_append_str(ptr noundef %40, ptr noundef %45, i64 noundef %51), !dbg !17643
  br label %53, !dbg !17644

53:                                               ; preds = %39
  %54 = load ptr, ptr %14, align 8, !dbg !17645
  %55 = getelementptr inbounds %struct.chunk, ptr %54, i32 1, !dbg !17645
  store ptr %55, ptr %14, align 8, !dbg !17645
  br label %56, !dbg !17645

56:                                               ; preds = %53
  %57 = load ptr, ptr %14, align 8, !dbg !17647
  %58 = getelementptr inbounds %struct.chunk, ptr %57, i32 0, i32 0, !dbg !17647
  %59 = load i32, ptr %58, align 8, !dbg !17647
  %60 = zext i32 %59 to i64, !dbg !17647
  %61 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %60, !dbg !17647
  %62 = load ptr, ptr %61, align 8, !dbg !17647
  br label %433, !dbg !17647

63:                                               ; No predecessors!
  br label %64, !dbg !17645

64:                                               ; preds = %63
  br label %65, !dbg !17645

65:                                               ; preds = %433, %64
  call void @llvm.dbg.label(metadata !17649), !dbg !17650
  %66 = load ptr, ptr %9, align 8, !dbg !17651
  %67 = load ptr, ptr %14, align 8, !dbg !17652
  %68 = getelementptr inbounds %struct.chunk, ptr %67, i32 0, i32 1, !dbg !17653
  %69 = load ptr, ptr %68, align 8, !dbg !17653
  %70 = ptrtoint ptr %69 to i64, !dbg !17654
  %71 = trunc i64 %70 to i8, !dbg !17655
  %72 = call zeroext i1 @strbuf_append_char(ptr noundef %66, i8 noundef signext %71), !dbg !17656
  br label %73, !dbg !17657

73:                                               ; preds = %65
  %74 = load ptr, ptr %14, align 8, !dbg !17658
  %75 = getelementptr inbounds %struct.chunk, ptr %74, i32 1, !dbg !17658
  store ptr %75, ptr %14, align 8, !dbg !17658
  br label %76, !dbg !17658

76:                                               ; preds = %73
  %77 = load ptr, ptr %14, align 8, !dbg !17660
  %78 = getelementptr inbounds %struct.chunk, ptr %77, i32 0, i32 0, !dbg !17660
  %79 = load i32, ptr %78, align 8, !dbg !17660
  %80 = zext i32 %79 to i64, !dbg !17660
  %81 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %80, !dbg !17660
  %82 = load ptr, ptr %81, align 8, !dbg !17660
  br label %433, !dbg !17660

83:                                               ; No predecessors!
  br label %84, !dbg !17658

84:                                               ; preds = %83
  br label %85, !dbg !17658

85:                                               ; preds = %433, %84
  call void @llvm.dbg.label(metadata !17662), !dbg !17663
  call void @llvm.dbg.declare(metadata ptr %15, metadata !17664, metadata !DIExpression()), !dbg !17666
  %86 = load ptr, ptr %14, align 8, !dbg !17667
  %87 = getelementptr inbounds %struct.chunk, ptr %86, i32 0, i32 1, !dbg !17668
  %88 = load ptr, ptr %87, align 8, !dbg !17668
  store ptr %88, ptr %15, align 8, !dbg !17666
  %89 = load ptr, ptr %15, align 8, !dbg !17669
  %90 = getelementptr inbounds %struct.lwan_var_descriptor_t_, ptr %89, i32 0, i32 2, !dbg !17670
  %91 = load ptr, ptr %90, align 8, !dbg !17670
  %92 = load ptr, ptr %9, align 8, !dbg !17671
  %93 = load ptr, ptr %10, align 8, !dbg !17672
  %94 = load ptr, ptr %15, align 8, !dbg !17673
  %95 = getelementptr inbounds %struct.lwan_var_descriptor_t_, ptr %94, i32 0, i32 1, !dbg !17674
  %96 = load i64, ptr %95, align 8, !dbg !17674
  %97 = getelementptr inbounds i8, ptr %93, i64 %96, !dbg !17675
  call void %91(ptr noundef %92, ptr noundef %97), !dbg !17669
  br label %98, !dbg !17676

98:                                               ; preds = %85
  %99 = load ptr, ptr %14, align 8, !dbg !17677
  %100 = getelementptr inbounds %struct.chunk, ptr %99, i32 1, !dbg !17677
  store ptr %100, ptr %14, align 8, !dbg !17677
  br label %101, !dbg !17677

101:                                              ; preds = %98
  %102 = load ptr, ptr %14, align 8, !dbg !17679
  %103 = getelementptr inbounds %struct.chunk, ptr %102, i32 0, i32 0, !dbg !17679
  %104 = load i32, ptr %103, align 8, !dbg !17679
  %105 = zext i32 %104 to i64, !dbg !17679
  %106 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %105, !dbg !17679
  %107 = load ptr, ptr %106, align 8, !dbg !17679
  br label %433, !dbg !17679

108:                                              ; No predecessors!
  br label %109, !dbg !17677

109:                                              ; preds = %108
  br label %110, !dbg !17681

110:                                              ; preds = %433, %109
  call void @llvm.dbg.label(metadata !17682), !dbg !17683
  %111 = load ptr, ptr %9, align 8, !dbg !17684
  %112 = load ptr, ptr %10, align 8, !dbg !17685
  %113 = load ptr, ptr %14, align 8, !dbg !17686
  %114 = getelementptr inbounds %struct.chunk, ptr %113, i32 0, i32 1, !dbg !17687
  %115 = load ptr, ptr %114, align 8, !dbg !17687
  %116 = ptrtoint ptr %115 to i64, !dbg !17688
  %117 = getelementptr inbounds i8, ptr %112, i64 %116, !dbg !17689
  call void @lwan_append_str_to_strbuf(ptr noundef %111, ptr noundef %117), !dbg !17690
  br label %118, !dbg !17691

118:                                              ; preds = %110
  %119 = load ptr, ptr %14, align 8, !dbg !17692
  %120 = getelementptr inbounds %struct.chunk, ptr %119, i32 1, !dbg !17692
  store ptr %120, ptr %14, align 8, !dbg !17692
  br label %121, !dbg !17692

121:                                              ; preds = %118
  %122 = load ptr, ptr %14, align 8, !dbg !17694
  %123 = getelementptr inbounds %struct.chunk, ptr %122, i32 0, i32 0, !dbg !17694
  %124 = load i32, ptr %123, align 8, !dbg !17694
  %125 = zext i32 %124 to i64, !dbg !17694
  %126 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %125, !dbg !17694
  %127 = load ptr, ptr %126, align 8, !dbg !17694
  br label %433, !dbg !17694

128:                                              ; No predecessors!
  br label %129, !dbg !17692

129:                                              ; preds = %128
  br label %130, !dbg !17692

130:                                              ; preds = %433, %129
  call void @llvm.dbg.label(metadata !17696), !dbg !17697
  %131 = load ptr, ptr %9, align 8, !dbg !17698
  %132 = load ptr, ptr %10, align 8, !dbg !17699
  %133 = load ptr, ptr %14, align 8, !dbg !17700
  %134 = getelementptr inbounds %struct.chunk, ptr %133, i32 0, i32 1, !dbg !17701
  %135 = load ptr, ptr %134, align 8, !dbg !17701
  %136 = ptrtoint ptr %135 to i64, !dbg !17702
  %137 = getelementptr inbounds i8, ptr %132, i64 %136, !dbg !17703
  call void @lwan_append_str_escaped_to_strbuf(ptr noundef %131, ptr noundef %137), !dbg !17704
  br label %138, !dbg !17705

138:                                              ; preds = %130
  %139 = load ptr, ptr %14, align 8, !dbg !17706
  %140 = getelementptr inbounds %struct.chunk, ptr %139, i32 1, !dbg !17706
  store ptr %140, ptr %14, align 8, !dbg !17706
  br label %141, !dbg !17706

141:                                              ; preds = %138
  %142 = load ptr, ptr %14, align 8, !dbg !17708
  %143 = getelementptr inbounds %struct.chunk, ptr %142, i32 0, i32 0, !dbg !17708
  %144 = load i32, ptr %143, align 8, !dbg !17708
  %145 = zext i32 %144 to i64, !dbg !17708
  %146 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %145, !dbg !17708
  %147 = load ptr, ptr %146, align 8, !dbg !17708
  br label %433, !dbg !17708

148:                                              ; No predecessors!
  br label %149, !dbg !17706

149:                                              ; preds = %148
  br label %150, !dbg !17706

150:                                              ; preds = %433, %149
  call void @llvm.dbg.label(metadata !17710), !dbg !17711
  call void @llvm.dbg.declare(metadata ptr %16, metadata !17712, metadata !DIExpression()), !dbg !17714
  %151 = load ptr, ptr %14, align 8, !dbg !17715
  %152 = getelementptr inbounds %struct.chunk, ptr %151, i32 0, i32 1, !dbg !17716
  %153 = load ptr, ptr %152, align 8, !dbg !17716
  store ptr %153, ptr %16, align 8, !dbg !17714
  call void @llvm.dbg.declare(metadata ptr %17, metadata !17717, metadata !DIExpression()), !dbg !17718
  %154 = load ptr, ptr %16, align 8, !dbg !17719
  %155 = getelementptr inbounds %struct.list_node, ptr %154, i32 0, i32 1, !dbg !17720
  %156 = load ptr, ptr %155, align 8, !dbg !17720
  %157 = getelementptr inbounds %struct.lwan_var_descriptor_t_, ptr %156, i32 0, i32 3, !dbg !17721
  %158 = load ptr, ptr %157, align 8, !dbg !17721
  %159 = load ptr, ptr %10, align 8, !dbg !17722
  %160 = load ptr, ptr %16, align 8, !dbg !17723
  %161 = getelementptr inbounds %struct.list_node, ptr %160, i32 0, i32 1, !dbg !17724
  %162 = load ptr, ptr %161, align 8, !dbg !17724
  %163 = getelementptr inbounds %struct.lwan_var_descriptor_t_, ptr %162, i32 0, i32 1, !dbg !17725
  %164 = load i64, ptr %163, align 8, !dbg !17725
  %165 = getelementptr inbounds i8, ptr %159, i64 %164, !dbg !17726
  %166 = call zeroext i1 %158(ptr noundef %165), !dbg !17719
  %167 = zext i1 %166 to i8, !dbg !17718
  store i8 %167, ptr %17, align 1, !dbg !17718
  %168 = load ptr, ptr %14, align 8, !dbg !17727
  %169 = getelementptr inbounds %struct.chunk, ptr %168, i32 0, i32 2, !dbg !17729
  %170 = load i32, ptr %169, align 8, !dbg !17729
  %171 = and i32 %170, 1, !dbg !17730
  %172 = icmp ne i32 %171, 0, !dbg !17730
  br i1 %172, label %173, label %178, !dbg !17731

173:                                              ; preds = %150
  %174 = load i8, ptr %17, align 1, !dbg !17732
  %175 = trunc i8 %174 to i1, !dbg !17732
  %176 = xor i1 %175, true, !dbg !17733
  %177 = zext i1 %176 to i8, !dbg !17734
  store i8 %177, ptr %17, align 1, !dbg !17734
  br label %178, !dbg !17735

178:                                              ; preds = %173, %150
  %179 = load i8, ptr %17, align 1, !dbg !17736
  %180 = trunc i8 %179 to i1, !dbg !17736
  br i1 %180, label %181, label %185, !dbg !17738

181:                                              ; preds = %178
  %182 = load ptr, ptr %16, align 8, !dbg !17739
  %183 = getelementptr inbounds %struct.list_node, ptr %182, i32 0, i32 0, !dbg !17741
  %184 = load ptr, ptr %183, align 8, !dbg !17741
  store ptr %184, ptr %14, align 8, !dbg !17742
  br label %195, !dbg !17743

185:                                              ; preds = %178
  %186 = load ptr, ptr %7, align 8, !dbg !17744
  %187 = load ptr, ptr %14, align 8, !dbg !17746
  %188 = getelementptr inbounds %struct.chunk, ptr %187, i64 1, !dbg !17747
  %189 = load ptr, ptr %9, align 8, !dbg !17748
  %190 = load ptr, ptr %10, align 8, !dbg !17749
  %191 = load ptr, ptr %16, align 8, !dbg !17750
  %192 = getelementptr inbounds %struct.list_node, ptr %191, i32 0, i32 0, !dbg !17751
  %193 = load ptr, ptr %192, align 8, !dbg !17751
  %194 = call ptr @apply_until(ptr noundef %186, ptr noundef %188, ptr noundef %189, ptr noundef %190, ptr noundef %193), !dbg !17752
  store ptr %194, ptr %14, align 8, !dbg !17753
  br label %195

195:                                              ; preds = %185, %181
  br label %196, !dbg !17754

196:                                              ; preds = %195
  %197 = load ptr, ptr %14, align 8, !dbg !17755
  %198 = getelementptr inbounds %struct.chunk, ptr %197, i32 1, !dbg !17755
  store ptr %198, ptr %14, align 8, !dbg !17755
  br label %199, !dbg !17755

199:                                              ; preds = %196
  %200 = load ptr, ptr %14, align 8, !dbg !17757
  %201 = getelementptr inbounds %struct.chunk, ptr %200, i32 0, i32 0, !dbg !17757
  %202 = load i32, ptr %201, align 8, !dbg !17757
  %203 = zext i32 %202 to i64, !dbg !17757
  %204 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %203, !dbg !17757
  %205 = load ptr, ptr %204, align 8, !dbg !17757
  br label %433, !dbg !17757

206:                                              ; No predecessors!
  br label %207, !dbg !17755

207:                                              ; preds = %206
  br label %208, !dbg !17759

208:                                              ; preds = %433, %207
  call void @llvm.dbg.label(metadata !17760), !dbg !17761
  %209 = load ptr, ptr %11, align 8, !dbg !17762
  %210 = load ptr, ptr %14, align 8, !dbg !17762
  %211 = icmp eq ptr %209, %210, !dbg !17762
  %212 = xor i1 %211, true, !dbg !17762
  %213 = xor i1 %212, true, !dbg !17762
  %214 = zext i1 %213 to i32, !dbg !17762
  %215 = sext i32 %214 to i64, !dbg !17762
  %216 = icmp ne i64 %215, 0, !dbg !17762
  br i1 %216, label %217, label %218, !dbg !17764

217:                                              ; preds = %208
  br label %429, !dbg !17765

218:                                              ; preds = %208
  br label %219, !dbg !17766

219:                                              ; preds = %218
  %220 = load ptr, ptr %14, align 8, !dbg !17767
  %221 = getelementptr inbounds %struct.chunk, ptr %220, i32 1, !dbg !17767
  store ptr %221, ptr %14, align 8, !dbg !17767
  br label %222, !dbg !17767

222:                                              ; preds = %219
  %223 = load ptr, ptr %14, align 8, !dbg !17769
  %224 = getelementptr inbounds %struct.chunk, ptr %223, i32 0, i32 0, !dbg !17769
  %225 = load i32, ptr %224, align 8, !dbg !17769
  %226 = zext i32 %225 to i64, !dbg !17769
  %227 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %226, !dbg !17769
  %228 = load ptr, ptr %227, align 8, !dbg !17769
  br label %433, !dbg !17769

229:                                              ; No predecessors!
  br label %230, !dbg !17767

230:                                              ; preds = %229
  br label %231, !dbg !17767

231:                                              ; preds = %433, %230
  call void @llvm.dbg.label(metadata !17771), !dbg !17772
  call void @llvm.dbg.declare(metadata ptr %18, metadata !17773, metadata !DIExpression()), !dbg !17775
  %232 = load ptr, ptr %14, align 8, !dbg !17776
  %233 = getelementptr inbounds %struct.chunk, ptr %232, i32 0, i32 1, !dbg !17777
  %234 = load ptr, ptr %233, align 8, !dbg !17777
  %235 = load ptr, ptr %10, align 8, !dbg !17778
  %236 = call ptr @lwan_tpl_apply(ptr noundef %234, ptr noundef %235), !dbg !17779
  store ptr %236, ptr %18, align 8, !dbg !17775
  %237 = load ptr, ptr %9, align 8, !dbg !17780
  %238 = load ptr, ptr %18, align 8, !dbg !17781
  %239 = getelementptr inbounds %struct.strbuf_t_, ptr %238, i32 0, i32 0, !dbg !17781
  %240 = load ptr, ptr %239, align 8, !dbg !17781
  %241 = load ptr, ptr %18, align 8, !dbg !17782
  %242 = getelementptr inbounds %struct.strbuf_t_, ptr %241, i32 0, i32 1, !dbg !17782
  %243 = getelementptr inbounds %struct.timespec, ptr %242, i32 0, i32 1, !dbg !17782
  %244 = load i64, ptr %243, align 8, !dbg !17782
  %245 = call zeroext i1 @strbuf_append_str(ptr noundef %237, ptr noundef %240, i64 noundef %244), !dbg !17783
  %246 = load ptr, ptr %18, align 8, !dbg !17784
  call void @strbuf_free(ptr noundef %246), !dbg !17785
  br label %247, !dbg !17786

247:                                              ; preds = %231
  %248 = load ptr, ptr %14, align 8, !dbg !17787
  %249 = getelementptr inbounds %struct.chunk, ptr %248, i32 1, !dbg !17787
  store ptr %249, ptr %14, align 8, !dbg !17787
  br label %250, !dbg !17787

250:                                              ; preds = %247
  %251 = load ptr, ptr %14, align 8, !dbg !17789
  %252 = getelementptr inbounds %struct.chunk, ptr %251, i32 0, i32 0, !dbg !17789
  %253 = load i32, ptr %252, align 8, !dbg !17789
  %254 = zext i32 %253 to i64, !dbg !17789
  %255 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %254, !dbg !17789
  %256 = load ptr, ptr %255, align 8, !dbg !17789
  br label %433, !dbg !17789

257:                                              ; No predecessors!
  br label %258, !dbg !17787

258:                                              ; preds = %257
  br label %259, !dbg !17791

259:                                              ; preds = %433, %258
  call void @llvm.dbg.label(metadata !17792), !dbg !17793
  %260 = load ptr, ptr %13, align 8, !dbg !17794
  %261 = icmp ne ptr %260, null, !dbg !17794
  %262 = zext i1 %261 to i32, !dbg !17794
  %263 = sext i32 %262 to i64, !dbg !17794
  %264 = icmp ne i64 %263, 0, !dbg !17794
  br i1 %264, label %265, label %278, !dbg !17796

265:                                              ; preds = %259
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_warning_debug(ptr noundef @.str.7.320, i32 noundef 1234, ptr noundef @__FUNCTION__.apply_until, ptr noundef @.str.53.376), !dbg !17797
  br label %266, !dbg !17799

266:                                              ; preds = %265
  %267 = load ptr, ptr %14, align 8, !dbg !17800
  %268 = getelementptr inbounds %struct.chunk, ptr %267, i32 1, !dbg !17800
  store ptr %268, ptr %14, align 8, !dbg !17800
  br label %269, !dbg !17800

269:                                              ; preds = %266
  %270 = load ptr, ptr %14, align 8, !dbg !17802
  %271 = getelementptr inbounds %struct.chunk, ptr %270, i32 0, i32 0, !dbg !17802
  %272 = load i32, ptr %271, align 8, !dbg !17802
  %273 = zext i32 %272 to i64, !dbg !17802
  %274 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %273, !dbg !17802
  %275 = load ptr, ptr %274, align 8, !dbg !17802
  br label %433, !dbg !17802

276:                                              ; No predecessors!
  br label %277, !dbg !17800

277:                                              ; preds = %276
  br label %278, !dbg !17804

278:                                              ; preds = %277, %259
  call void @llvm.dbg.declare(metadata ptr %19, metadata !17805, metadata !DIExpression()), !dbg !17806
  %279 = load ptr, ptr %14, align 8, !dbg !17807
  %280 = getelementptr inbounds %struct.chunk, ptr %279, i32 0, i32 1, !dbg !17808
  %281 = load ptr, ptr %280, align 8, !dbg !17808
  store ptr %281, ptr %19, align 8, !dbg !17806
  %282 = load ptr, ptr %19, align 8, !dbg !17809
  %283 = getelementptr inbounds %struct.list_node, ptr %282, i32 0, i32 1, !dbg !17810
  %284 = load ptr, ptr %283, align 8, !dbg !17810
  %285 = getelementptr inbounds %struct.lwan_var_descriptor_t_, ptr %284, i32 0, i32 4, !dbg !17811
  %286 = load ptr, ptr %285, align 8, !dbg !17811
  %287 = load ptr, ptr %10, align 8, !dbg !17812
  %288 = call ptr @coro_new(ptr noundef %12, ptr noundef %286, ptr noundef %287), !dbg !17813
  store ptr %288, ptr %13, align 8, !dbg !17814
  call void @llvm.dbg.declare(metadata ptr %20, metadata !17815, metadata !DIExpression()), !dbg !17816
  %289 = load ptr, ptr %13, align 8, !dbg !17817
  %290 = call i32 @coro_resume_value(ptr noundef %289, i32 noundef 0), !dbg !17818
  %291 = icmp ne i32 %290, 0, !dbg !17818
  %292 = zext i1 %291 to i8, !dbg !17816
  store i8 %292, ptr %20, align 1, !dbg !17816
  call void @llvm.dbg.declare(metadata ptr %21, metadata !17819, metadata !DIExpression()), !dbg !17820
  %293 = load ptr, ptr %14, align 8, !dbg !17821
  %294 = getelementptr inbounds %struct.chunk, ptr %293, i32 0, i32 2, !dbg !17822
  %295 = load i32, ptr %294, align 8, !dbg !17822
  %296 = and i32 %295, 1, !dbg !17823
  store i32 %296, ptr %21, align 4, !dbg !17820
  %297 = load i32, ptr %21, align 4, !dbg !17824
  %298 = icmp ne i32 %297, 0, !dbg !17824
  br i1 %298, label %299, label %304, !dbg !17826

299:                                              ; preds = %278
  %300 = load i8, ptr %20, align 1, !dbg !17827
  %301 = trunc i8 %300 to i1, !dbg !17827
  %302 = xor i1 %301, true, !dbg !17828
  %303 = zext i1 %302 to i8, !dbg !17829
  store i8 %303, ptr %20, align 1, !dbg !17829
  br label %304, !dbg !17830

304:                                              ; preds = %299, %278
  %305 = load i8, ptr %20, align 1, !dbg !17831
  %306 = trunc i8 %305 to i1, !dbg !17831
  br i1 %306, label %342, label %307, !dbg !17833

307:                                              ; preds = %304
  %308 = load ptr, ptr %19, align 8, !dbg !17834
  %309 = getelementptr inbounds %struct.list_node, ptr %308, i32 0, i32 0, !dbg !17836
  %310 = load ptr, ptr %309, align 8, !dbg !17836
  store ptr %310, ptr %14, align 8, !dbg !17837
  %311 = load i32, ptr %21, align 4, !dbg !17838
  %312 = icmp ne i32 %311, 0, !dbg !17838
  br i1 %312, label %313, label %316, !dbg !17840

313:                                              ; preds = %307
  %314 = load ptr, ptr %13, align 8, !dbg !17841
  %315 = call i32 @coro_resume_value(ptr noundef %314, i32 noundef 1), !dbg !17842
  br label %316, !dbg !17842

316:                                              ; preds = %313, %307
  %317 = load ptr, ptr %13, align 8, !dbg !17843
  call void @coro_free(ptr noundef %317), !dbg !17844
  store ptr null, ptr %13, align 8, !dbg !17845
  %318 = load i32, ptr %21, align 4, !dbg !17846
  %319 = icmp ne i32 %318, 0, !dbg !17846
  br i1 %319, label %320, label %329, !dbg !17848

320:                                              ; preds = %316
  br label %321, !dbg !17849

321:                                              ; preds = %320
  %322 = load ptr, ptr %14, align 8, !dbg !17850
  %323 = getelementptr inbounds %struct.chunk, ptr %322, i32 0, i32 0, !dbg !17850
  %324 = load i32, ptr %323, align 8, !dbg !17850
  %325 = zext i32 %324 to i64, !dbg !17850
  %326 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %325, !dbg !17850
  %327 = load ptr, ptr %326, align 8, !dbg !17850
  br label %433, !dbg !17850

328:                                              ; No predecessors!
  br label %329, !dbg !17850

329:                                              ; preds = %328, %316
  br label %330, !dbg !17852

330:                                              ; preds = %329
  %331 = load ptr, ptr %14, align 8, !dbg !17853
  %332 = getelementptr inbounds %struct.chunk, ptr %331, i32 1, !dbg !17853
  store ptr %332, ptr %14, align 8, !dbg !17853
  br label %333, !dbg !17853

333:                                              ; preds = %330
  %334 = load ptr, ptr %14, align 8, !dbg !17855
  %335 = getelementptr inbounds %struct.chunk, ptr %334, i32 0, i32 0, !dbg !17855
  %336 = load i32, ptr %335, align 8, !dbg !17855
  %337 = zext i32 %336 to i64, !dbg !17855
  %338 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %337, !dbg !17855
  %339 = load ptr, ptr %338, align 8, !dbg !17855
  br label %433, !dbg !17855

340:                                              ; No predecessors!
  br label %341, !dbg !17853

341:                                              ; preds = %340
  br label %342, !dbg !17857

342:                                              ; preds = %341, %304
  %343 = load ptr, ptr %7, align 8, !dbg !17858
  %344 = load ptr, ptr %14, align 8, !dbg !17859
  %345 = getelementptr inbounds %struct.chunk, ptr %344, i64 1, !dbg !17860
  %346 = load ptr, ptr %9, align 8, !dbg !17861
  %347 = load ptr, ptr %10, align 8, !dbg !17862
  %348 = load ptr, ptr %14, align 8, !dbg !17863
  %349 = call ptr @apply_until(ptr noundef %343, ptr noundef %345, ptr noundef %346, ptr noundef %347, ptr noundef %348), !dbg !17864
  store ptr %349, ptr %14, align 8, !dbg !17865
  br label %350, !dbg !17866

350:                                              ; preds = %342
  %351 = load ptr, ptr %14, align 8, !dbg !17867
  %352 = getelementptr inbounds %struct.chunk, ptr %351, i32 0, i32 0, !dbg !17867
  %353 = load i32, ptr %352, align 8, !dbg !17867
  %354 = zext i32 %353 to i64, !dbg !17867
  %355 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %354, !dbg !17867
  %356 = load ptr, ptr %355, align 8, !dbg !17867
  br label %433, !dbg !17867

357:                                              ; No predecessors!
  br label %358, !dbg !17867

358:                                              ; preds = %433, %357
  call void @llvm.dbg.label(metadata !17869), !dbg !17870
  %359 = load ptr, ptr %11, align 8, !dbg !17871
  %360 = load ptr, ptr %14, align 8, !dbg !17873
  %361 = getelementptr inbounds %struct.chunk, ptr %360, i32 0, i32 1, !dbg !17874
  %362 = load ptr, ptr %361, align 8, !dbg !17874
  %363 = icmp eq ptr %359, %362, !dbg !17875
  br i1 %363, label %364, label %365, !dbg !17876

364:                                              ; preds = %358
  br label %429, !dbg !17877

365:                                              ; preds = %358
  %366 = load ptr, ptr %13, align 8, !dbg !17878
  %367 = icmp ne ptr %366, null, !dbg !17878
  %368 = xor i1 %367, true, !dbg !17878
  %369 = zext i1 %368 to i32, !dbg !17878
  %370 = sext i32 %369 to i64, !dbg !17878
  %371 = icmp ne i64 %370, 0, !dbg !17878
  br i1 %371, label %372, label %391, !dbg !17880

372:                                              ; preds = %365
  %373 = load ptr, ptr %14, align 8, !dbg !17881
  %374 = getelementptr inbounds %struct.chunk, ptr %373, i32 0, i32 2, !dbg !17884
  %375 = load i32, ptr %374, align 8, !dbg !17884
  %376 = icmp ne i32 %375, 0, !dbg !17881
  br i1 %376, label %378, label %377, !dbg !17885

377:                                              ; preds = %372
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_warning_debug(ptr noundef @.str.7.320, i32 noundef 1268, ptr noundef @__FUNCTION__.apply_until, ptr noundef @.str.54.377), !dbg !17886
  br label %378, !dbg !17886

378:                                              ; preds = %377, %372
  br label %379, !dbg !17887

379:                                              ; preds = %378
  %380 = load ptr, ptr %14, align 8, !dbg !17888
  %381 = getelementptr inbounds %struct.chunk, ptr %380, i32 1, !dbg !17888
  store ptr %381, ptr %14, align 8, !dbg !17888
  br label %382, !dbg !17888

382:                                              ; preds = %379
  %383 = load ptr, ptr %14, align 8, !dbg !17890
  %384 = getelementptr inbounds %struct.chunk, ptr %383, i32 0, i32 0, !dbg !17890
  %385 = load i32, ptr %384, align 8, !dbg !17890
  %386 = zext i32 %385 to i64, !dbg !17890
  %387 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %386, !dbg !17890
  %388 = load ptr, ptr %387, align 8, !dbg !17890
  br label %433, !dbg !17890

389:                                              ; No predecessors!
  br label %390, !dbg !17888

390:                                              ; preds = %389
  br label %391, !dbg !17892

391:                                              ; preds = %390, %365
  %392 = load ptr, ptr %13, align 8, !dbg !17893
  %393 = call i32 @coro_resume_value(ptr noundef %392, i32 noundef 0), !dbg !17895
  %394 = icmp ne i32 %393, 0, !dbg !17895
  br i1 %394, label %409, label %395, !dbg !17896

395:                                              ; preds = %391
  %396 = load ptr, ptr %13, align 8, !dbg !17897
  call void @coro_free(ptr noundef %396), !dbg !17899
  store ptr null, ptr %13, align 8, !dbg !17900
  br label %397, !dbg !17901

397:                                              ; preds = %395
  %398 = load ptr, ptr %14, align 8, !dbg !17902
  %399 = getelementptr inbounds %struct.chunk, ptr %398, i32 1, !dbg !17902
  store ptr %399, ptr %14, align 8, !dbg !17902
  br label %400, !dbg !17902

400:                                              ; preds = %397
  %401 = load ptr, ptr %14, align 8, !dbg !17904
  %402 = getelementptr inbounds %struct.chunk, ptr %401, i32 0, i32 0, !dbg !17904
  %403 = load i32, ptr %402, align 8, !dbg !17904
  %404 = zext i32 %403 to i64, !dbg !17904
  %405 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %404, !dbg !17904
  %406 = load ptr, ptr %405, align 8, !dbg !17904
  br label %433, !dbg !17904

407:                                              ; No predecessors!
  br label %408, !dbg !17902

408:                                              ; preds = %407
  br label %409, !dbg !17906

409:                                              ; preds = %408, %391
  %410 = load ptr, ptr %7, align 8, !dbg !17907
  %411 = load ptr, ptr %14, align 8, !dbg !17908
  %412 = getelementptr inbounds %struct.chunk, ptr %411, i32 0, i32 1, !dbg !17909
  %413 = load ptr, ptr %412, align 8, !dbg !17909
  %414 = getelementptr inbounds %struct.chunk, ptr %413, i64 1, !dbg !17910
  %415 = load ptr, ptr %9, align 8, !dbg !17911
  %416 = load ptr, ptr %10, align 8, !dbg !17912
  %417 = load ptr, ptr %14, align 8, !dbg !17913
  %418 = getelementptr inbounds %struct.chunk, ptr %417, i32 0, i32 1, !dbg !17914
  %419 = load ptr, ptr %418, align 8, !dbg !17914
  %420 = call ptr @apply_until(ptr noundef %410, ptr noundef %414, ptr noundef %415, ptr noundef %416, ptr noundef %419), !dbg !17915
  store ptr %420, ptr %14, align 8, !dbg !17916
  br label %421, !dbg !17917

421:                                              ; preds = %409
  %422 = load ptr, ptr %14, align 8, !dbg !17918
  %423 = getelementptr inbounds %struct.chunk, ptr %422, i32 0, i32 0, !dbg !17918
  %424 = load i32, ptr %423, align 8, !dbg !17918
  %425 = zext i32 %424 to i64, !dbg !17918
  %426 = getelementptr inbounds [11 x ptr], ptr @apply_until.dispatch_table, i64 0, i64 %425, !dbg !17918
  %427 = load ptr, ptr %426, align 8, !dbg !17918
  br label %433, !dbg !17918

428:                                              ; No predecessors!
  br label %429, !dbg !17918

429:                                              ; preds = %433, %428, %364, %217
  call void @llvm.dbg.label(metadata !17920), !dbg !17921
  %430 = load ptr, ptr %14, align 8, !dbg !17922
  store ptr %430, ptr %6, align 8, !dbg !17923
  br label %431, !dbg !17923

431:                                              ; preds = %429, %29
  %432 = load ptr, ptr %6, align 8, !dbg !17924
  ret ptr %432, !dbg !17924

433:                                              ; preds = %421, %400, %382, %350, %333, %321, %269, %250, %222, %199, %141, %121, %101, %76, %56, %31
  %434 = phi ptr [ %37, %31 ], [ %62, %56 ], [ %82, %76 ], [ %107, %101 ], [ %127, %121 ], [ %147, %141 ], [ %205, %199 ], [ %228, %222 ], [ %256, %250 ], [ %275, %269 ], [ %327, %321 ], [ %339, %333 ], [ %356, %350 ], [ %388, %382 ], [ %406, %400 ], [ %427, %421 ]
  indirectbr ptr %434, [label %39, label %65, label %85, label %110, label %130, label %259, label %358, label %150, label %208, label %231, label %429]
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @lwan_tpl_apply(ptr noundef %0, ptr noundef %1) #0 !dbg !17925 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !17928, metadata !DIExpression()), !dbg !17929
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !17930, metadata !DIExpression()), !dbg !17931
  call void @llvm.dbg.declare(metadata ptr %5, metadata !17932, metadata !DIExpression()), !dbg !17933
  %6 = load ptr, ptr %3, align 8, !dbg !17934
  %7 = getelementptr inbounds %struct.lwan_value_t_, ptr %6, i32 0, i32 1, !dbg !17935
  %8 = load i64, ptr %7, align 8, !dbg !17935
  %9 = call ptr @strbuf_new_with_size(i64 noundef %8), !dbg !17936
  store ptr %9, ptr %5, align 8, !dbg !17933
  %10 = load ptr, ptr %3, align 8, !dbg !17937
  %11 = load ptr, ptr %5, align 8, !dbg !17938
  %12 = load ptr, ptr %4, align 8, !dbg !17939
  %13 = call ptr @lwan_tpl_apply_with_buffer(ptr noundef %10, ptr noundef %11, ptr noundef %12), !dbg !17940
  ret ptr %13, !dbg !17941
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_format_rfc_time(i64 noundef %0, ptr noundef %1) #0 !dbg !17942 {
  %3 = alloca i64, align 8
  %4 = alloca ptr, align 8
  %5 = alloca %struct.tm, align 8
  store i64 %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !17945, metadata !DIExpression()), !dbg !17946
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !17947, metadata !DIExpression()), !dbg !17948
  call void @llvm.dbg.declare(metadata ptr %5, metadata !17949, metadata !DIExpression()), !dbg !17963
  %6 = call ptr @gmtime_r(ptr noundef %3, ptr noundef %5) #18, !dbg !17964
  %7 = icmp ne ptr %6, null, !dbg !17964
  %8 = xor i1 %7, true, !dbg !17964
  %9 = zext i1 %8 to i32, !dbg !17964
  %10 = sext i32 %9 to i64, !dbg !17964
  %11 = icmp ne i64 %10, 0, !dbg !17964
  br i1 %11, label %12, label %13, !dbg !17966

12:                                               ; preds = %2
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.380, i32 noundef 241, ptr noundef @__FUNCTION__.lwan_format_rfc_time, ptr noundef @.str.1.381), !dbg !17967
  br label %22, !dbg !17969

13:                                               ; preds = %2
  %14 = load ptr, ptr %4, align 8, !dbg !17970
  %15 = call i64 @strftime(ptr noundef %14, i64 noundef 30, ptr noundef @.str.2.382, ptr noundef %5) #18, !dbg !17970
  %16 = icmp ne i64 %15, 0, !dbg !17970
  %17 = xor i1 %16, true, !dbg !17970
  %18 = zext i1 %17 to i32, !dbg !17970
  %19 = sext i32 %18 to i64, !dbg !17970
  %20 = icmp ne i64 %19, 0, !dbg !17970
  br i1 %20, label %21, label %22, !dbg !17972

21:                                               ; preds = %13
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.380, i32 noundef 246, ptr noundef @__FUNCTION__.lwan_format_rfc_time, ptr noundef @.str.3.383), !dbg !17973
  br label %22, !dbg !17973

22:                                               ; preds = %21, %13, %12
  ret void, !dbg !17974
}

; Function Attrs: nounwind
declare ptr @gmtime_r(ptr noundef, ptr noundef) #3

; Function Attrs: nounwind
declare i64 @strftime(ptr noundef, i64 noundef, ptr noundef, ptr noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_thread_add_client(ptr noundef %0, i32 noundef %1) #0 !dbg !17975 {
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !18046, metadata !DIExpression()), !dbg !18047
  store i32 %1, ptr %4, align 4
  call void @llvm.dbg.declare(metadata ptr %4, metadata !18048, metadata !DIExpression()), !dbg !18049
  %5 = load ptr, ptr %3, align 8, !dbg !18050
  %6 = getelementptr inbounds %struct.lwan_thread_t_, ptr %5, i32 0, i32 0, !dbg !18051
  %7 = load ptr, ptr %6, align 8, !dbg !18051
  %8 = getelementptr inbounds %struct.lwan_t_, ptr %7, i32 0, i32 1, !dbg !18052
  %9 = load ptr, ptr %8, align 8, !dbg !18052
  %10 = load i32, ptr %4, align 4, !dbg !18053
  %11 = sext i32 %10 to i64, !dbg !18050
  %12 = getelementptr inbounds %struct.lwan_connection_t_, ptr %9, i64 %11, !dbg !18050
  %13 = getelementptr inbounds %struct.lwan_connection_t_, ptr %12, i32 0, i32 0, !dbg !18054
  store i32 0, ptr %13, align 8, !dbg !18055
  %14 = load ptr, ptr %3, align 8, !dbg !18056
  %15 = load ptr, ptr %3, align 8, !dbg !18057
  %16 = getelementptr inbounds %struct.lwan_thread_t_, ptr %15, i32 0, i32 0, !dbg !18058
  %17 = load ptr, ptr %16, align 8, !dbg !18058
  %18 = getelementptr inbounds %struct.lwan_t_, ptr %17, i32 0, i32 1, !dbg !18059
  %19 = load ptr, ptr %18, align 8, !dbg !18059
  %20 = load i32, ptr %4, align 4, !dbg !18060
  %21 = sext i32 %20 to i64, !dbg !18057
  %22 = getelementptr inbounds %struct.lwan_connection_t_, ptr %19, i64 %21, !dbg !18057
  %23 = getelementptr inbounds %struct.lwan_connection_t_, ptr %22, i32 0, i32 3, !dbg !18061
  store ptr %14, ptr %23, align 8, !dbg !18062
  %24 = load ptr, ptr %3, align 8, !dbg !18063
  %25 = getelementptr inbounds %struct.lwan_thread_t_, ptr %24, i32 0, i32 3, !dbg !18063
  %26 = getelementptr inbounds [2 x i32], ptr %25, i64 0, i64 1, !dbg !18063
  %27 = load i32, ptr %26, align 4, !dbg !18063
  %28 = call i64 @write(i32 noundef %27, ptr noundef %4, i64 noundef 4), !dbg !18063
  %29 = icmp slt i64 %28, 0, !dbg !18063
  %30 = zext i1 %29 to i32, !dbg !18063
  %31 = sext i32 %30 to i64, !dbg !18063
  %32 = icmp ne i64 %31, 0, !dbg !18063
  br i1 %32, label %33, label %34, !dbg !18065

33:                                               ; preds = %2
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.380, i32 noundef 408, ptr noundef @__FUNCTION__.lwan_thread_add_client, ptr noundef @.str.4.386), !dbg !18066
  br label %34, !dbg !18066

34:                                               ; preds = %33, %2
  ret void, !dbg !18067
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_thread_init(ptr noundef %0) #0 !dbg !18068 {
  %2 = alloca ptr, align 8
  %3 = alloca i16, align 2
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !18071, metadata !DIExpression()), !dbg !18072
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.380, i32 noundef 414, ptr noundef @__FUNCTION__.lwan_thread_init, ptr noundef @.str.5.389), !dbg !18073
  %4 = load ptr, ptr %2, align 8, !dbg !18074
  %5 = getelementptr inbounds %struct.lwan_t_, ptr %4, i32 0, i32 2, !dbg !18075
  %6 = getelementptr inbounds %struct.anon.0.24, ptr %5, i32 0, i32 2, !dbg !18076
  %7 = load i16, ptr %6, align 4, !dbg !18076
  %8 = zext i16 %7 to i64, !dbg !18077
  %9 = call noalias ptr @calloc(i64 noundef %8, i64 noundef 104) #19, !dbg !18078
  %10 = load ptr, ptr %2, align 8, !dbg !18079
  %11 = getelementptr inbounds %struct.lwan_t_, ptr %10, i32 0, i32 2, !dbg !18080
  %12 = getelementptr inbounds %struct.anon.0.24, ptr %11, i32 0, i32 0, !dbg !18081
  store ptr %9, ptr %12, align 8, !dbg !18082
  %13 = load ptr, ptr %2, align 8, !dbg !18083
  %14 = getelementptr inbounds %struct.lwan_t_, ptr %13, i32 0, i32 2, !dbg !18085
  %15 = getelementptr inbounds %struct.anon.0.24, ptr %14, i32 0, i32 0, !dbg !18086
  %16 = load ptr, ptr %15, align 8, !dbg !18086
  %17 = icmp ne ptr %16, null, !dbg !18083
  br i1 %17, label %19, label %18, !dbg !18087

18:                                               ; preds = %1
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_debug(ptr noundef @.str.380, i32 noundef 418, ptr noundef @__FUNCTION__.lwan_thread_init, ptr noundef @.str.6.390) #23, !dbg !18088
  unreachable, !dbg !18088

19:                                               ; preds = %1
  call void @llvm.dbg.declare(metadata ptr %3, metadata !18089, metadata !DIExpression()), !dbg !18091
  store i16 0, ptr %3, align 2, !dbg !18091
  br label %20, !dbg !18092

20:                                               ; preds = %38, %19
  %21 = load i16, ptr %3, align 2, !dbg !18093
  %22 = sext i16 %21 to i32, !dbg !18093
  %23 = load ptr, ptr %2, align 8, !dbg !18095
  %24 = getelementptr inbounds %struct.lwan_t_, ptr %23, i32 0, i32 2, !dbg !18096
  %25 = getelementptr inbounds %struct.anon.0.24, ptr %24, i32 0, i32 2, !dbg !18097
  %26 = load i16, ptr %25, align 4, !dbg !18097
  %27 = zext i16 %26 to i32, !dbg !18095
  %28 = icmp slt i32 %22, %27, !dbg !18098
  br i1 %28, label %29, label %41, !dbg !18099

29:                                               ; preds = %20
  %30 = load ptr, ptr %2, align 8, !dbg !18100
  %31 = load ptr, ptr %2, align 8, !dbg !18101
  %32 = getelementptr inbounds %struct.lwan_t_, ptr %31, i32 0, i32 2, !dbg !18102
  %33 = getelementptr inbounds %struct.anon.0.24, ptr %32, i32 0, i32 0, !dbg !18103
  %34 = load ptr, ptr %33, align 8, !dbg !18103
  %35 = load i16, ptr %3, align 2, !dbg !18104
  %36 = sext i16 %35 to i64, !dbg !18101
  %37 = getelementptr inbounds %struct.lwan_thread_t_, ptr %34, i64 %36, !dbg !18101
  call void @create_thread(ptr noundef %30, ptr noundef %37), !dbg !18105
  br label %38, !dbg !18105

38:                                               ; preds = %29
  %39 = load i16, ptr %3, align 2, !dbg !18106
  %40 = add i16 %39, 1, !dbg !18106
  store i16 %40, ptr %3, align 2, !dbg !18106
  br label %20, !dbg !18107, !llvm.loop !18108

41:                                               ; preds = %20
  ret void, !dbg !18110
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @create_thread(ptr noundef %0, ptr noundef %1) #0 !dbg !18111 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca %union.pthread_attr_t, align 8
  %6 = alloca %struct.epoll_event, align 1
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !18114, metadata !DIExpression()), !dbg !18115
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !18116, metadata !DIExpression()), !dbg !18117
  call void @llvm.dbg.declare(metadata ptr %5, metadata !18118, metadata !DIExpression()), !dbg !18124
  %7 = load ptr, ptr %4, align 8, !dbg !18125
  call void @llvm.memset.p0.i64(ptr align 8 %7, i8 0, i64 104, i1 false), !dbg !18126
  %8 = load ptr, ptr %3, align 8, !dbg !18127
  %9 = load ptr, ptr %4, align 8, !dbg !18128
  %10 = getelementptr inbounds %struct.lwan_thread_t_, ptr %9, i32 0, i32 0, !dbg !18129
  store ptr %8, ptr %10, align 8, !dbg !18130
  %11 = call i32 @epoll_create1(i32 noundef 524288) #18, !dbg !18131
  %12 = load ptr, ptr %4, align 8, !dbg !18133
  %13 = getelementptr inbounds %struct.lwan_thread_t_, ptr %12, i32 0, i32 2, !dbg !18134
  store i32 %11, ptr %13, align 8, !dbg !18135
  %14 = icmp slt i32 %11, 0, !dbg !18136
  br i1 %14, label %15, label %16, !dbg !18137

15:                                               ; preds = %2
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.380, i32 noundef 376, ptr noundef @__FUNCTION__.create_thread, ptr noundef @.str.8.391) #23, !dbg !18138
  unreachable, !dbg !18138

16:                                               ; preds = %2
  %17 = call i32 @pthread_attr_init(ptr noundef %5) #18, !dbg !18139
  %18 = icmp ne i32 %17, 0, !dbg !18139
  br i1 %18, label %19, label %20, !dbg !18141

19:                                               ; preds = %16
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.380, i32 noundef 379, ptr noundef @__FUNCTION__.create_thread, ptr noundef @.str.9.392) #23, !dbg !18142
  unreachable, !dbg !18142

20:                                               ; preds = %16
  %21 = call i32 @pthread_attr_setscope(ptr noundef %5, i32 noundef 0) #18, !dbg !18143
  %22 = icmp ne i32 %21, 0, !dbg !18143
  br i1 %22, label %23, label %24, !dbg !18145

23:                                               ; preds = %20
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.380, i32 noundef 382, ptr noundef @__FUNCTION__.create_thread, ptr noundef @.str.10.393) #23, !dbg !18146
  unreachable, !dbg !18146

24:                                               ; preds = %20
  %25 = call i32 @pthread_attr_setdetachstate(ptr noundef %5, i32 noundef 0) #18, !dbg !18147
  %26 = icmp ne i32 %25, 0, !dbg !18147
  br i1 %26, label %27, label %28, !dbg !18149

27:                                               ; preds = %24
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.380, i32 noundef 385, ptr noundef @__FUNCTION__.create_thread, ptr noundef @.str.11.394) #23, !dbg !18150
  unreachable, !dbg !18150

28:                                               ; preds = %24
  %29 = load ptr, ptr %4, align 8, !dbg !18151
  %30 = getelementptr inbounds %struct.lwan_thread_t_, ptr %29, i32 0, i32 3, !dbg !18153
  %31 = getelementptr inbounds [2 x i32], ptr %30, i64 0, i64 0, !dbg !18151
  %32 = call i32 @pipe2(ptr noundef %31, i32 noundef 526336) #18, !dbg !18154
  %33 = icmp slt i32 %32, 0, !dbg !18155
  br i1 %33, label %34, label %35, !dbg !18156

34:                                               ; preds = %28
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.380, i32 noundef 388, ptr noundef @__FUNCTION__.create_thread, ptr noundef @.str.12.395) #23, !dbg !18157
  unreachable, !dbg !18157

35:                                               ; preds = %28
  call void @llvm.dbg.declare(metadata ptr %6, metadata !18158, metadata !DIExpression()), !dbg !18170
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %6, ptr align 1 @__const.create_thread.event, i64 12, i1 false), !dbg !18170
  %36 = load ptr, ptr %4, align 8, !dbg !18171
  %37 = getelementptr inbounds %struct.lwan_thread_t_, ptr %36, i32 0, i32 2, !dbg !18173
  %38 = load i32, ptr %37, align 8, !dbg !18173
  %39 = load ptr, ptr %4, align 8, !dbg !18174
  %40 = getelementptr inbounds %struct.lwan_thread_t_, ptr %39, i32 0, i32 3, !dbg !18175
  %41 = getelementptr inbounds [2 x i32], ptr %40, i64 0, i64 0, !dbg !18174
  %42 = load i32, ptr %41, align 4, !dbg !18174
  %43 = call i32 @epoll_ctl(i32 noundef %38, i32 noundef 1, i32 noundef %42, ptr noundef %6) #18, !dbg !18176
  %44 = icmp slt i32 %43, 0, !dbg !18177
  br i1 %44, label %45, label %46, !dbg !18178

45:                                               ; preds = %35
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.380, i32 noundef 392, ptr noundef @__FUNCTION__.create_thread, ptr noundef @.str.13.396) #23, !dbg !18179
  unreachable, !dbg !18179

46:                                               ; preds = %35
  %47 = load ptr, ptr %4, align 8, !dbg !18180
  %48 = getelementptr inbounds %struct.lwan_thread_t_, ptr %47, i32 0, i32 4, !dbg !18182
  %49 = load ptr, ptr %4, align 8, !dbg !18183
  %50 = call i32 @pthread_create(ptr noundef %48, ptr noundef %5, ptr noundef @thread_io_loop, ptr noundef %49) #18, !dbg !18184
  %51 = icmp ne i32 %50, 0, !dbg !18184
  br i1 %51, label %52, label %53, !dbg !18185

52:                                               ; preds = %46
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.380, i32 noundef 395, ptr noundef @__FUNCTION__.create_thread, ptr noundef @.str.14.397) #23, !dbg !18186
  unreachable, !dbg !18186

53:                                               ; preds = %46
  %54 = call i32 @pthread_attr_destroy(ptr noundef %5) #18, !dbg !18187
  %55 = icmp ne i32 %54, 0, !dbg !18187
  br i1 %55, label %56, label %57, !dbg !18189

56:                                               ; preds = %53
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.380, i32 noundef 398, ptr noundef @__FUNCTION__.create_thread, ptr noundef @.str.15.398) #23, !dbg !18190
  unreachable, !dbg !18190

57:                                               ; preds = %53
  ret void, !dbg !18191
}

; Function Attrs: nounwind
declare i32 @epoll_create1(i32 noundef) #3

; Function Attrs: nounwind
declare i32 @pthread_attr_init(ptr noundef) #3

; Function Attrs: nounwind
declare i32 @pthread_attr_setscope(ptr noundef, i32 noundef) #3

; Function Attrs: nounwind
declare i32 @pthread_attr_setdetachstate(ptr noundef, i32 noundef) #3

; Function Attrs: nounwind
declare i32 @pipe2(ptr noundef, i32 noundef) #3

; Function Attrs: nounwind
declare i32 @epoll_ctl(i32 noundef, i32 noundef, i32 noundef, ptr noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @thread_io_loop(ptr noundef %0) #0 !dbg !18192 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca %struct.epoll_event, align 1
  %11 = alloca i32, align 4
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %15 = alloca ptr, align 8
  %16 = alloca ptr, align 8
  %17 = alloca ptr, align 8
  %18 = alloca ptr, align 8
  %19 = alloca ptr, align 8
  %20 = alloca ptr, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca ptr, align 8
  %24 = alloca ptr, align 8
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca ptr, align 8
  %29 = alloca ptr, align 8
  %30 = alloca %struct.coro_switcher_t_, align 8
  %31 = alloca %struct.death_queue_t, align 8
  %32 = alloca i32, align 4
  %33 = alloca ptr, align 8
  %34 = alloca ptr, align 8
  store ptr %0, ptr %23, align 8
  call void @llvm.dbg.declare(metadata ptr %23, metadata !18193, metadata !DIExpression()), !dbg !18194
  call void @llvm.dbg.declare(metadata ptr %24, metadata !18195, metadata !DIExpression()), !dbg !18196
  %35 = load ptr, ptr %23, align 8, !dbg !18197
  store ptr %35, ptr %24, align 8, !dbg !18196
  call void @llvm.dbg.declare(metadata ptr %25, metadata !18198, metadata !DIExpression()), !dbg !18199
  %36 = load ptr, ptr %24, align 8, !dbg !18200
  %37 = getelementptr inbounds %struct.lwan_thread_t_, ptr %36, i32 0, i32 2, !dbg !18201
  %38 = load i32, ptr %37, align 8, !dbg !18201
  store i32 %38, ptr %25, align 4, !dbg !18199
  call void @llvm.dbg.declare(metadata ptr %26, metadata !18202, metadata !DIExpression()), !dbg !18203
  %39 = load ptr, ptr %24, align 8, !dbg !18204
  %40 = getelementptr inbounds %struct.lwan_thread_t_, ptr %39, i32 0, i32 3, !dbg !18205
  %41 = getelementptr inbounds [2 x i32], ptr %40, i64 0, i64 0, !dbg !18204
  %42 = load i32, ptr %41, align 4, !dbg !18204
  store i32 %42, ptr %26, align 4, !dbg !18203
  call void @llvm.dbg.declare(metadata ptr %27, metadata !18206, metadata !DIExpression()), !dbg !18207
  %43 = load ptr, ptr %24, align 8, !dbg !18208
  %44 = getelementptr inbounds %struct.lwan_thread_t_, ptr %43, i32 0, i32 0, !dbg !18209
  %45 = load ptr, ptr %44, align 8, !dbg !18209
  %46 = getelementptr inbounds %struct.lwan_t_, ptr %45, i32 0, i32 2, !dbg !18210
  %47 = getelementptr inbounds %struct.anon.0.24, ptr %46, i32 0, i32 1, !dbg !18211
  %48 = load i32, ptr %47, align 8, !dbg !18211
  store i32 %48, ptr %21, align 4
  call void @llvm.dbg.declare(metadata ptr %21, metadata !18212, metadata !DIExpression()), !dbg !18216
  store i32 1024, ptr %22, align 4
  call void @llvm.dbg.declare(metadata ptr %22, metadata !18218, metadata !DIExpression()), !dbg !18219
  %49 = load i32, ptr %21, align 4, !dbg !18220
  %50 = load i32, ptr %22, align 4, !dbg !18221
  %51 = icmp slt i32 %49, %50, !dbg !18222
  br i1 %51, label %52, label %54, !dbg !18220

52:                                               ; preds = %1
  %53 = load i32, ptr %21, align 4, !dbg !18223
  br label %56, !dbg !18220

54:                                               ; preds = %1
  %55 = load i32, ptr %22, align 4, !dbg !18224
  br label %56, !dbg !18220

56:                                               ; preds = %54, %52
  %57 = phi i32 [ %53, %52 ], [ %55, %54 ], !dbg !18220
  store i32 %57, ptr %27, align 4, !dbg !18207
  call void @llvm.dbg.declare(metadata ptr %28, metadata !18225, metadata !DIExpression()), !dbg !18226
  %58 = load ptr, ptr %24, align 8, !dbg !18227
  %59 = getelementptr inbounds %struct.lwan_thread_t_, ptr %58, i32 0, i32 0, !dbg !18228
  %60 = load ptr, ptr %59, align 8, !dbg !18228
  %61 = getelementptr inbounds %struct.lwan_t_, ptr %60, i32 0, i32 1, !dbg !18229
  %62 = load ptr, ptr %61, align 8, !dbg !18229
  store ptr %62, ptr %28, align 8, !dbg !18226
  call void @llvm.dbg.declare(metadata ptr %29, metadata !18230, metadata !DIExpression()), !dbg !18232
  call void @llvm.dbg.declare(metadata ptr %30, metadata !18233, metadata !DIExpression()), !dbg !18239
  call void @llvm.dbg.declare(metadata ptr %31, metadata !18240, metadata !DIExpression()), !dbg !18247
  call void @llvm.dbg.declare(metadata ptr %32, metadata !18248, metadata !DIExpression()), !dbg !18249
  %63 = load ptr, ptr %24, align 8, !dbg !18250
  %64 = load ptr, ptr %24, align 8, !dbg !18250
  %65 = getelementptr inbounds %struct.lwan_thread_t_, ptr %64, i32 0, i32 0, !dbg !18250
  %66 = load ptr, ptr %65, align 8, !dbg !18250
  %67 = getelementptr inbounds %struct.lwan_t_, ptr %66, i32 0, i32 2, !dbg !18250
  %68 = getelementptr inbounds %struct.anon.0.24, ptr %67, i32 0, i32 0, !dbg !18250
  %69 = load ptr, ptr %68, align 8, !dbg !18250
  %70 = ptrtoint ptr %63 to i64, !dbg !18250
  %71 = ptrtoint ptr %69 to i64, !dbg !18250
  %72 = sub i64 %70, %71, !dbg !18250
  %73 = sdiv exact i64 %72, 104, !dbg !18250
  %74 = trunc i64 %73 to i16, !dbg !18250
  %75 = zext i16 %74 to i32, !dbg !18250
  %76 = add nsw i32 %75, 1, !dbg !18250
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.380, i32 noundef 313, ptr noundef @__FUNCTION__.thread_io_loop, ptr noundef @.str.16.399, i32 noundef %76), !dbg !18250
  %77 = load i32, ptr %27, align 4, !dbg !18251
  %78 = sext i32 %77 to i64, !dbg !18252
  %79 = call noalias ptr @calloc(i64 noundef %78, i64 noundef 12) #19, !dbg !18253
  store ptr %79, ptr %29, align 8, !dbg !18254
  %80 = load ptr, ptr %29, align 8, !dbg !18255
  %81 = icmp ne ptr %80, null, !dbg !18255
  %82 = xor i1 %81, true, !dbg !18255
  %83 = zext i1 %82 to i32, !dbg !18255
  %84 = sext i32 %83 to i64, !dbg !18255
  %85 = icmp ne i64 %84, 0, !dbg !18255
  br i1 %85, label %86, label %87, !dbg !18257

86:                                               ; preds = %56
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_debug(ptr noundef @.str.380, i32 noundef 317, ptr noundef @__FUNCTION__.thread_io_loop, ptr noundef @.str.17.400) #23, !dbg !18258
  unreachable, !dbg !18258

87:                                               ; preds = %56
  %88 = load ptr, ptr %28, align 8, !dbg !18259
  %89 = load ptr, ptr %24, align 8, !dbg !18260
  %90 = getelementptr inbounds %struct.lwan_thread_t_, ptr %89, i32 0, i32 0, !dbg !18261
  %91 = load ptr, ptr %90, align 8, !dbg !18261
  %92 = getelementptr inbounds %struct.lwan_t_, ptr %91, i32 0, i32 4, !dbg !18262
  %93 = getelementptr inbounds %struct.lwan_config_t_, ptr %92, i32 0, i32 1, !dbg !18263
  %94 = load i16, ptr %93, align 8, !dbg !18263
  call void @death_queue_init(ptr noundef %31, ptr noundef %88, i16 noundef zeroext %94), !dbg !18264
  br label %95, !dbg !18265

95:                                               ; preds = %360, %108, %87
  %96 = load i32, ptr %25, align 4, !dbg !18266
  %97 = load ptr, ptr %29, align 8, !dbg !18270
  %98 = load i32, ptr %27, align 4, !dbg !18271
  store ptr %31, ptr %20, align 8
  call void @llvm.dbg.declare(metadata ptr %20, metadata !18272, metadata !DIExpression()), !dbg !18277
  %99 = load ptr, ptr %20, align 8, !dbg !18279
  %100 = call zeroext i1 @death_queue_empty(ptr noundef %99), !dbg !18280
  %101 = zext i1 %100 to i64, !dbg !18280
  %102 = select i1 %100, i32 -1, i32 1000, !dbg !18280
  %103 = call i32 @epoll_wait(i32 noundef %96, ptr noundef %97, i32 noundef %98, i32 noundef %102), !dbg !18281
  store i32 %103, ptr %32, align 4, !dbg !18282
  switch i32 %103, label %110 [
    i32 -1, label %104
    i32 0, label %109
  ], !dbg !18283

104:                                              ; preds = %95
  %105 = call ptr @__errno_location() #20, !dbg !18284
  %106 = load i32, ptr %105, align 4, !dbg !18284
  switch i32 %106, label %108 [
    i32 9, label %107
    i32 22, label %107
  ], !dbg !18286

107:                                              ; preds = %104, %104
  br label %361, !dbg !18287

108:                                              ; preds = %104
  br label %95, !dbg !18289, !llvm.loop !18290

109:                                              ; preds = %95
  call void @death_queue_kill_waiting(ptr noundef %31), !dbg !18293
  br label %360, !dbg !18294

110:                                              ; preds = %95
  %111 = load ptr, ptr %24, align 8, !dbg !18295
  call void @update_date_cache(ptr noundef %111), !dbg !18296
  call void @llvm.dbg.declare(metadata ptr %33, metadata !18297, metadata !DIExpression()), !dbg !18299
  %112 = load ptr, ptr %29, align 8, !dbg !18300
  store ptr %112, ptr %33, align 8, !dbg !18299
  br label %113, !dbg !18301

113:                                              ; preds = %356, %110
  %114 = load i32, ptr %32, align 4, !dbg !18302
  %115 = add nsw i32 %114, -1, !dbg !18302
  store i32 %115, ptr %32, align 4, !dbg !18302
  %116 = icmp ne i32 %114, 0, !dbg !18304
  br i1 %116, label %117, label %359, !dbg !18304

117:                                              ; preds = %113
  call void @llvm.dbg.declare(metadata ptr %34, metadata !18305, metadata !DIExpression()), !dbg !18307
  %118 = load ptr, ptr %33, align 8, !dbg !18308
  %119 = getelementptr inbounds %struct.epoll_event, ptr %118, i32 0, i32 1, !dbg !18310
  %120 = load ptr, ptr %119, align 1, !dbg !18311
  %121 = icmp ne ptr %120, null, !dbg !18308
  br i1 %121, label %170, label %122, !dbg !18312

122:                                              ; preds = %117
  %123 = load i32, ptr %25, align 4, !dbg !18313
  %124 = load i32, ptr %26, align 4, !dbg !18315
  %125 = load ptr, ptr %28, align 8, !dbg !18316
  %126 = call ptr @grab_and_watch_client(i32 noundef %123, i32 noundef %124, ptr noundef %125), !dbg !18317
  store ptr %126, ptr %34, align 8, !dbg !18318
  %127 = load ptr, ptr %34, align 8, !dbg !18319
  %128 = icmp ne ptr %127, null, !dbg !18319
  %129 = xor i1 %128, true, !dbg !18319
  %130 = zext i1 %129 to i32, !dbg !18319
  %131 = sext i32 %130 to i64, !dbg !18319
  %132 = icmp ne i64 %131, 0, !dbg !18319
  br i1 %132, label %133, label %134, !dbg !18321

133:                                              ; preds = %122
  br label %356, !dbg !18322

134:                                              ; preds = %122
  %135 = load ptr, ptr %34, align 8, !dbg !18323
  store ptr %135, ptr %14, align 8
  call void @llvm.dbg.declare(metadata ptr %14, metadata !18324, metadata !DIExpression()), !dbg !18329
  store ptr %30, ptr %15, align 8
  call void @llvm.dbg.declare(metadata ptr %15, metadata !18331, metadata !DIExpression()), !dbg !18332
  store ptr %31, ptr %16, align 8
  call void @llvm.dbg.declare(metadata ptr %16, metadata !18333, metadata !DIExpression()), !dbg !18334
  %136 = load ptr, ptr %14, align 8, !dbg !18335
  %137 = getelementptr inbounds %struct.lwan_connection_t_, ptr %136, i32 0, i32 2, !dbg !18337
  %138 = load ptr, ptr %137, align 8, !dbg !18337
  %139 = icmp ne ptr %138, null, !dbg !18335
  br i1 %139, label %140, label %151, !dbg !18338

140:                                              ; preds = %134
  %141 = load ptr, ptr %14, align 8, !dbg !18339
  %142 = load i32, ptr %141, align 8, !dbg !18342
  %143 = and i32 %142, 4, !dbg !18343
  %144 = icmp ne i32 %143, 0, !dbg !18343
  br i1 %144, label %145, label %146, !dbg !18344

145:                                              ; preds = %140
  br label %169, !dbg !18345

146:                                              ; preds = %140
  %147 = load ptr, ptr %14, align 8, !dbg !18346
  %148 = getelementptr inbounds %struct.lwan_connection_t_, ptr %147, i32 0, i32 2, !dbg !18347
  %149 = load ptr, ptr %148, align 8, !dbg !18347
  %150 = load ptr, ptr %14, align 8, !dbg !18348
  call void @coro_reset(ptr noundef %149, ptr noundef @process_request_coro, ptr noundef %150) #18, !dbg !18349
  br label %162, !dbg !18350

151:                                              ; preds = %134
  %152 = load ptr, ptr %15, align 8, !dbg !18351
  %153 = load ptr, ptr %14, align 8, !dbg !18353
  %154 = call ptr @coro_new(ptr noundef %152, ptr noundef @process_request_coro, ptr noundef %153) #18, !dbg !18354
  %155 = load ptr, ptr %14, align 8, !dbg !18355
  %156 = getelementptr inbounds %struct.lwan_connection_t_, ptr %155, i32 0, i32 2, !dbg !18356
  store ptr %154, ptr %156, align 8, !dbg !18357
  %157 = load ptr, ptr %16, align 8, !dbg !18358
  %158 = load ptr, ptr %14, align 8, !dbg !18359
  call void @death_queue_insert(ptr noundef %157, ptr noundef %158), !dbg !18360
  %159 = load ptr, ptr %14, align 8, !dbg !18361
  %160 = load i32, ptr %159, align 8, !dbg !18362
  %161 = or i32 %160, 2, !dbg !18362
  store i32 %161, ptr %159, align 8, !dbg !18362
  br label %162

162:                                              ; preds = %151, %146
  %163 = load ptr, ptr %14, align 8, !dbg !18363
  %164 = load i32, ptr %163, align 8, !dbg !18364
  %165 = or i32 %164, 4, !dbg !18364
  store i32 %165, ptr %163, align 8, !dbg !18364
  %166 = load ptr, ptr %14, align 8, !dbg !18365
  %167 = load i32, ptr %166, align 8, !dbg !18366
  %168 = and i32 %167, -9, !dbg !18366
  store i32 %168, ptr %166, align 8, !dbg !18366
  br label %169, !dbg !18367

169:                                              ; preds = %162, %145
  br label %354, !dbg !18368

170:                                              ; preds = %117
  %171 = load ptr, ptr %33, align 8, !dbg !18369
  %172 = getelementptr inbounds %struct.epoll_event, ptr %171, i32 0, i32 1, !dbg !18371
  %173 = load ptr, ptr %172, align 1, !dbg !18372
  store ptr %173, ptr %34, align 8, !dbg !18373
  %174 = load ptr, ptr %33, align 8, !dbg !18374
  %175 = getelementptr inbounds %struct.epoll_event, ptr %174, i32 0, i32 0, !dbg !18374
  %176 = load i32, ptr %175, align 1, !dbg !18374
  %177 = and i32 %176, 8208, !dbg !18374
  %178 = zext i32 %177 to i64, !dbg !18374
  %179 = icmp ne i64 %178, 0, !dbg !18374
  br i1 %179, label %180, label %210, !dbg !18376

180:                                              ; preds = %170
  %181 = load ptr, ptr %34, align 8, !dbg !18377
  store ptr %31, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %12, metadata !18379, metadata !DIExpression()), !dbg !18383
  store ptr %181, ptr %13, align 8
  call void @llvm.dbg.declare(metadata ptr %13, metadata !18385, metadata !DIExpression()), !dbg !18386
  %182 = load ptr, ptr %12, align 8, !dbg !18387
  %183 = load ptr, ptr %13, align 8, !dbg !18388
  call void @death_queue_remove(ptr noundef %182, ptr noundef %183), !dbg !18389
  %184 = load ptr, ptr %13, align 8, !dbg !18390
  %185 = getelementptr inbounds %struct.lwan_connection_t_, ptr %184, i32 0, i32 2, !dbg !18390
  %186 = load ptr, ptr %185, align 8, !dbg !18390
  %187 = icmp ne ptr %186, null, !dbg !18390
  %188 = xor i1 %187, true, !dbg !18390
  %189 = zext i1 %187 to i32, !dbg !18390
  %190 = sext i32 %189 to i64, !dbg !18390
  br i1 %187, label %191, label %197, !dbg !18392

191:                                              ; preds = %180
  %192 = load ptr, ptr %13, align 8, !dbg !18393
  %193 = getelementptr inbounds %struct.lwan_connection_t_, ptr %192, i32 0, i32 2, !dbg !18395
  %194 = load ptr, ptr %193, align 8, !dbg !18395
  call void @coro_free(ptr noundef %194) #18, !dbg !18396
  %195 = load ptr, ptr %13, align 8, !dbg !18397
  %196 = getelementptr inbounds %struct.lwan_connection_t_, ptr %195, i32 0, i32 2, !dbg !18398
  store ptr null, ptr %196, align 8, !dbg !18399
  br label %197, !dbg !18400

197:                                              ; preds = %191, %180
  %198 = load ptr, ptr %13, align 8, !dbg !18401
  %199 = load i32, ptr %198, align 8, !dbg !18403
  %200 = and i32 %199, 2, !dbg !18404
  %201 = icmp ne i32 %200, 0, !dbg !18404
  br i1 %201, label %202, label %209, !dbg !18405

202:                                              ; preds = %197
  %203 = load ptr, ptr %13, align 8, !dbg !18406
  %204 = load i32, ptr %203, align 8, !dbg !18408
  %205 = and i32 %204, -3, !dbg !18408
  store i32 %205, ptr %203, align 8, !dbg !18408
  %206 = load ptr, ptr %13, align 8, !dbg !18409
  %207 = call i32 @lwan_connection_get_fd(ptr noundef %206) #22, !dbg !18410
  %208 = call i32 @close(i32 noundef %207) #18, !dbg !18411
  br label %209, !dbg !18412

209:                                              ; preds = %202, %197
  br label %356, !dbg !18413

210:                                              ; preds = %170
  %211 = load ptr, ptr %34, align 8, !dbg !18414
  store ptr %211, ptr %17, align 8
  call void @llvm.dbg.declare(metadata ptr %17, metadata !18324, metadata !DIExpression()), !dbg !18415
  store ptr %30, ptr %18, align 8
  call void @llvm.dbg.declare(metadata ptr %18, metadata !18331, metadata !DIExpression()), !dbg !18417
  store ptr %31, ptr %19, align 8
  call void @llvm.dbg.declare(metadata ptr %19, metadata !18333, metadata !DIExpression()), !dbg !18418
  %212 = load ptr, ptr %17, align 8, !dbg !18419
  %213 = getelementptr inbounds %struct.lwan_connection_t_, ptr %212, i32 0, i32 2, !dbg !18420
  %214 = load ptr, ptr %213, align 8, !dbg !18420
  %215 = icmp ne ptr %214, null, !dbg !18419
  br i1 %215, label %216, label %227, !dbg !18421

216:                                              ; preds = %210
  %217 = load ptr, ptr %17, align 8, !dbg !18422
  %218 = load i32, ptr %217, align 8, !dbg !18423
  %219 = and i32 %218, 4, !dbg !18424
  %220 = icmp ne i32 %219, 0, !dbg !18424
  br i1 %220, label %221, label %222, !dbg !18425

221:                                              ; preds = %216
  br label %245, !dbg !18426

222:                                              ; preds = %216
  %223 = load ptr, ptr %17, align 8, !dbg !18427
  %224 = getelementptr inbounds %struct.lwan_connection_t_, ptr %223, i32 0, i32 2, !dbg !18428
  %225 = load ptr, ptr %224, align 8, !dbg !18428
  %226 = load ptr, ptr %17, align 8, !dbg !18429
  call void @coro_reset(ptr noundef %225, ptr noundef @process_request_coro, ptr noundef %226) #18, !dbg !18430
  br label %238, !dbg !18431

227:                                              ; preds = %210
  %228 = load ptr, ptr %18, align 8, !dbg !18432
  %229 = load ptr, ptr %17, align 8, !dbg !18433
  %230 = call ptr @coro_new(ptr noundef %228, ptr noundef @process_request_coro, ptr noundef %229) #18, !dbg !18434
  %231 = load ptr, ptr %17, align 8, !dbg !18435
  %232 = getelementptr inbounds %struct.lwan_connection_t_, ptr %231, i32 0, i32 2, !dbg !18436
  store ptr %230, ptr %232, align 8, !dbg !18437
  %233 = load ptr, ptr %19, align 8, !dbg !18438
  %234 = load ptr, ptr %17, align 8, !dbg !18439
  call void @death_queue_insert(ptr noundef %233, ptr noundef %234), !dbg !18440
  %235 = load ptr, ptr %17, align 8, !dbg !18441
  %236 = load i32, ptr %235, align 8, !dbg !18442
  %237 = or i32 %236, 2, !dbg !18442
  store i32 %237, ptr %235, align 8, !dbg !18442
  br label %238

238:                                              ; preds = %227, %222
  %239 = load ptr, ptr %17, align 8, !dbg !18443
  %240 = load i32, ptr %239, align 8, !dbg !18444
  %241 = or i32 %240, 4, !dbg !18444
  store i32 %241, ptr %239, align 8, !dbg !18444
  %242 = load ptr, ptr %17, align 8, !dbg !18445
  %243 = load i32, ptr %242, align 8, !dbg !18446
  %244 = and i32 %243, -9, !dbg !18446
  store i32 %244, ptr %242, align 8, !dbg !18446
  br label %245, !dbg !18447

245:                                              ; preds = %238, %221
  %246 = load ptr, ptr %34, align 8, !dbg !18448
  %247 = load i32, ptr %25, align 4, !dbg !18449
  store ptr %31, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !18450, metadata !DIExpression()), !dbg !18454
  store ptr %246, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !18456, metadata !DIExpression()), !dbg !18457
  store i32 %247, ptr %6, align 4
  call void @llvm.dbg.declare(metadata ptr %6, metadata !18458, metadata !DIExpression()), !dbg !18459
  %248 = load ptr, ptr %5, align 8, !dbg !18460
  %249 = getelementptr inbounds %struct.lwan_connection_t_, ptr %248, i32 0, i32 2, !dbg !18460
  %250 = load ptr, ptr %249, align 8, !dbg !18460
  %251 = icmp ne ptr %250, null, !dbg !18460
  br i1 %251, label %252, label %257, !dbg !18463

252:                                              ; preds = %245
  %253 = load ptr, ptr %5, align 8, !dbg !18464
  %254 = load i32, ptr %253, align 8, !dbg !18466
  %255 = and i32 %254, 4, !dbg !18467
  %256 = icmp ne i32 %255, 0, !dbg !18467
  br i1 %256, label %259, label %258, !dbg !18468

257:                                              ; preds = %245
  call void @__assert_fail(ptr noundef @.str.20.401, ptr noundef @.str.380, i32 noundef 177, ptr noundef @__PRETTY_FUNCTION__.resume_coro_if_needed) #21, !dbg !18460
  unreachable, !dbg !18460

258:                                              ; preds = %252
  br label %353, !dbg !18469

259:                                              ; preds = %252
  call void @llvm.dbg.declare(metadata ptr %7, metadata !18470, metadata !DIExpression()), !dbg !18472
  %260 = load ptr, ptr %5, align 8, !dbg !18473
  %261 = getelementptr inbounds %struct.lwan_connection_t_, ptr %260, i32 0, i32 2, !dbg !18474
  %262 = load ptr, ptr %261, align 8, !dbg !18474
  %263 = call i32 @coro_resume(ptr noundef %262) #18, !dbg !18475
  store i32 %263, ptr %7, align 4, !dbg !18472
  %264 = load i32, ptr %7, align 4, !dbg !18476
  %265 = icmp slt i32 %264, 0, !dbg !18478
  br i1 %265, label %266, label %297, !dbg !18479

266:                                              ; preds = %259
  %267 = load ptr, ptr %4, align 8, !dbg !18480
  %268 = load ptr, ptr %5, align 8, !dbg !18482
  store ptr %267, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !18379, metadata !DIExpression()), !dbg !18483
  store ptr %268, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !18385, metadata !DIExpression()), !dbg !18485
  %269 = load ptr, ptr %2, align 8, !dbg !18486
  %270 = load ptr, ptr %3, align 8, !dbg !18487
  call void @death_queue_remove(ptr noundef %269, ptr noundef %270), !dbg !18488
  %271 = load ptr, ptr %3, align 8, !dbg !18489
  %272 = getelementptr inbounds %struct.lwan_connection_t_, ptr %271, i32 0, i32 2, !dbg !18489
  %273 = load ptr, ptr %272, align 8, !dbg !18489
  %274 = icmp ne ptr %273, null, !dbg !18489
  %275 = xor i1 %274, true, !dbg !18489
  %276 = zext i1 %274 to i32, !dbg !18489
  %277 = sext i32 %276 to i64, !dbg !18489
  br i1 %274, label %278, label %284, !dbg !18490

278:                                              ; preds = %266
  %279 = load ptr, ptr %3, align 8, !dbg !18491
  %280 = getelementptr inbounds %struct.lwan_connection_t_, ptr %279, i32 0, i32 2, !dbg !18492
  %281 = load ptr, ptr %280, align 8, !dbg !18492
  call void @coro_free(ptr noundef %281) #18, !dbg !18493
  %282 = load ptr, ptr %3, align 8, !dbg !18494
  %283 = getelementptr inbounds %struct.lwan_connection_t_, ptr %282, i32 0, i32 2, !dbg !18495
  store ptr null, ptr %283, align 8, !dbg !18496
  br label %284, !dbg !18497

284:                                              ; preds = %278, %266
  %285 = load ptr, ptr %3, align 8, !dbg !18498
  %286 = load i32, ptr %285, align 8, !dbg !18499
  %287 = and i32 %286, 2, !dbg !18500
  %288 = icmp ne i32 %287, 0, !dbg !18500
  br i1 %288, label %289, label %296, !dbg !18501

289:                                              ; preds = %284
  %290 = load ptr, ptr %3, align 8, !dbg !18502
  %291 = load i32, ptr %290, align 8, !dbg !18503
  %292 = and i32 %291, -3, !dbg !18503
  store i32 %292, ptr %290, align 8, !dbg !18503
  %293 = load ptr, ptr %3, align 8, !dbg !18504
  %294 = call i32 @lwan_connection_get_fd(ptr noundef %293) #22, !dbg !18505
  %295 = call i32 @close(i32 noundef %294) #18, !dbg !18506
  br label %296, !dbg !18507

296:                                              ; preds = %289, %284
  br label %353, !dbg !18508

297:                                              ; preds = %259
  call void @llvm.dbg.declare(metadata ptr %8, metadata !18509, metadata !DIExpression()), !dbg !18510
  %298 = load ptr, ptr %5, align 8, !dbg !18511
  %299 = load i32, ptr %298, align 8, !dbg !18513
  %300 = and i32 %299, 16, !dbg !18514
  %301 = icmp ne i32 %300, 0, !dbg !18514
  br i1 %301, label %302, label %303, !dbg !18515

302:                                              ; preds = %297
  store i8 1, ptr %8, align 1, !dbg !18516
  br label %332, !dbg !18518

303:                                              ; preds = %297
  call void @llvm.dbg.declare(metadata ptr %9, metadata !18519, metadata !DIExpression()), !dbg !18521
  %304 = load i32, ptr %7, align 4, !dbg !18522
  %305 = icmp eq i32 %304, 0, !dbg !18523
  %306 = zext i1 %305 to i8, !dbg !18521
  store i8 %306, ptr %9, align 1, !dbg !18521
  %307 = load i8, ptr %9, align 1, !dbg !18524
  %308 = trunc i8 %307 to i1, !dbg !18524
  br i1 %308, label %309, label %313, !dbg !18526

309:                                              ; preds = %303
  %310 = load ptr, ptr %5, align 8, !dbg !18527
  %311 = load i32, ptr %310, align 8, !dbg !18528
  %312 = or i32 %311, 4, !dbg !18528
  store i32 %312, ptr %310, align 8, !dbg !18528
  br label %317, !dbg !18527

313:                                              ; preds = %303
  %314 = load ptr, ptr %5, align 8, !dbg !18529
  %315 = load i32, ptr %314, align 8, !dbg !18530
  %316 = and i32 %315, -5, !dbg !18530
  store i32 %316, ptr %314, align 8, !dbg !18530
  br label %317

317:                                              ; preds = %313, %309
  %318 = load ptr, ptr %5, align 8, !dbg !18531
  %319 = load i32, ptr %318, align 8, !dbg !18532
  %320 = and i32 %319, 8, !dbg !18533
  %321 = icmp ne i32 %320, 0, !dbg !18534
  %322 = zext i1 %321 to i8, !dbg !18535
  store i8 %322, ptr %8, align 1, !dbg !18535
  %323 = load i8, ptr %9, align 1, !dbg !18536
  %324 = trunc i8 %323 to i1, !dbg !18536
  %325 = zext i1 %324 to i32, !dbg !18536
  %326 = load i8, ptr %8, align 1, !dbg !18538
  %327 = trunc i8 %326 to i1, !dbg !18538
  %328 = zext i1 %327 to i32, !dbg !18538
  %329 = icmp eq i32 %325, %328, !dbg !18539
  br i1 %329, label %330, label %331, !dbg !18540

330:                                              ; preds = %317
  br label %353, !dbg !18541

331:                                              ; preds = %317
  br label %332

332:                                              ; preds = %331, %302
  call void @llvm.dbg.declare(metadata ptr %10, metadata !18542, metadata !DIExpression()), !dbg !18543
  %333 = load i8, ptr %8, align 1, !dbg !18544
  %334 = trunc i8 %333 to i1, !dbg !18544
  %335 = zext i1 %334 to i64, !dbg !18545
  %336 = getelementptr inbounds [2 x i32], ptr @events_by_write_flag, i64 0, i64 %335, !dbg !18545
  %337 = load i32, ptr %336, align 4, !dbg !18545
  store i32 %337, ptr %10, align 1, !dbg !18546
  %338 = getelementptr inbounds %struct.epoll_event, ptr %10, i32 0, i32 1, !dbg !18546
  %339 = load ptr, ptr %5, align 8, !dbg !18547
  store ptr %339, ptr %338, align 1, !dbg !18548
  call void @llvm.dbg.declare(metadata ptr %11, metadata !18549, metadata !DIExpression()), !dbg !18550
  %340 = load ptr, ptr %5, align 8, !dbg !18551
  %341 = call i32 @lwan_connection_get_fd(ptr noundef %340) #22, !dbg !18552
  store i32 %341, ptr %11, align 4, !dbg !18550
  %342 = load i32, ptr %6, align 4, !dbg !18553
  %343 = load i32, ptr %11, align 4, !dbg !18553
  %344 = call i32 @epoll_ctl(i32 noundef %342, i32 noundef 3, i32 noundef %343, ptr noundef %10) #18, !dbg !18553
  %345 = icmp slt i32 %344, 0, !dbg !18553
  %346 = zext i1 %345 to i32, !dbg !18553
  %347 = sext i32 %346 to i64, !dbg !18553
  br i1 %345, label %348, label %349, !dbg !18555

348:                                              ; preds = %332
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.380, i32 noundef 212, ptr noundef @__FUNCTION__.resume_coro_if_needed, ptr noundef @.str.13.396) #18, !dbg !18556
  br label %349, !dbg !18556

349:                                              ; preds = %348, %332
  %350 = load ptr, ptr %5, align 8, !dbg !18557
  %351 = load i32, ptr %350, align 8, !dbg !18558
  %352 = xor i32 %351, 8, !dbg !18558
  store i32 %352, ptr %350, align 8, !dbg !18558
  br label %353, !dbg !18559

353:                                              ; preds = %349, %330, %296, %258
  br label %354

354:                                              ; preds = %353, %169
  %355 = load ptr, ptr %34, align 8, !dbg !18560
  call void @death_queue_move_to_last(ptr noundef %31, ptr noundef %355), !dbg !18561
  br label %356, !dbg !18562

356:                                              ; preds = %354, %209, %133
  %357 = load ptr, ptr %33, align 8, !dbg !18563
  %358 = getelementptr inbounds %struct.epoll_event, ptr %357, i32 1, !dbg !18563
  store ptr %358, ptr %33, align 8, !dbg !18563
  br label %113, !dbg !18564, !llvm.loop !18565

359:                                              ; preds = %113
  br label %360, !dbg !18567

360:                                              ; preds = %359, %109
  br label %95, !dbg !18568, !llvm.loop !18290

361:                                              ; preds = %107
  call void @llvm.dbg.label(metadata !18569), !dbg !18570
  %362 = load ptr, ptr %29, align 8, !dbg !18571
  call void @free(ptr noundef %362) #18, !dbg !18572
  ret ptr null, !dbg !18573
}

; Function Attrs: nounwind
declare i32 @pthread_attr_destroy(ptr noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @death_queue_init(ptr noundef %0, ptr noundef %1, i16 noundef zeroext %2) #0 !dbg !18574 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i16, align 2
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !18577, metadata !DIExpression()), !dbg !18578
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !18579, metadata !DIExpression()), !dbg !18580
  store i16 %2, ptr %6, align 2
  call void @llvm.dbg.declare(metadata ptr %6, metadata !18581, metadata !DIExpression()), !dbg !18582
  %7 = load ptr, ptr %5, align 8, !dbg !18583
  %8 = load ptr, ptr %4, align 8, !dbg !18584
  %9 = getelementptr inbounds %struct.death_queue_t, ptr %8, i32 0, i32 0, !dbg !18585
  store ptr %7, ptr %9, align 8, !dbg !18586
  %10 = load ptr, ptr %4, align 8, !dbg !18587
  %11 = getelementptr inbounds %struct.death_queue_t, ptr %10, i32 0, i32 2, !dbg !18588
  store i32 0, ptr %11, align 8, !dbg !18589
  %12 = load i16, ptr %6, align 2, !dbg !18590
  %13 = load ptr, ptr %4, align 8, !dbg !18591
  %14 = getelementptr inbounds %struct.death_queue_t, ptr %13, i32 0, i32 3, !dbg !18592
  store i16 %12, ptr %14, align 4, !dbg !18593
  %15 = load ptr, ptr %4, align 8, !dbg !18594
  %16 = getelementptr inbounds %struct.death_queue_t, ptr %15, i32 0, i32 1, !dbg !18595
  %17 = getelementptr inbounds %struct.lwan_connection_t_, ptr %16, i32 0, i32 4, !dbg !18596
  store i32 -1, ptr %17, align 8, !dbg !18597
  %18 = load ptr, ptr %4, align 8, !dbg !18598
  %19 = getelementptr inbounds %struct.death_queue_t, ptr %18, i32 0, i32 1, !dbg !18599
  %20 = getelementptr inbounds %struct.lwan_connection_t_, ptr %19, i32 0, i32 5, !dbg !18600
  store i32 -1, ptr %20, align 4, !dbg !18601
  ret void, !dbg !18602
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @death_queue_empty(ptr noundef %0) #0 !dbg !18603 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !18606, metadata !DIExpression()), !dbg !18607
  %3 = load ptr, ptr %2, align 8, !dbg !18608
  %4 = getelementptr inbounds %struct.death_queue_t, ptr %3, i32 0, i32 1, !dbg !18609
  %5 = getelementptr inbounds %struct.lwan_connection_t_, ptr %4, i32 0, i32 5, !dbg !18610
  %6 = load i32, ptr %5, align 4, !dbg !18610
  %7 = icmp slt i32 %6, 0, !dbg !18611
  ret i1 %7, !dbg !18612
}

declare i32 @epoll_wait(i32 noundef, ptr noundef, i32 noundef, i32 noundef) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal void @death_queue_kill_waiting(ptr noundef %0) #0 !dbg !18613 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !18616, metadata !DIExpression()), !dbg !18617
  %6 = load ptr, ptr %4, align 8, !dbg !18618
  %7 = getelementptr inbounds %struct.death_queue_t, ptr %6, i32 0, i32 2, !dbg !18619
  %8 = load i32, ptr %7, align 8, !dbg !18620
  %9 = add i32 %8, 1, !dbg !18620
  store i32 %9, ptr %7, align 8, !dbg !18620
  br label %10, !dbg !18621

10:                                               ; preds = %59, %1
  %11 = load ptr, ptr %4, align 8, !dbg !18622
  %12 = call zeroext i1 @death_queue_empty(ptr noundef %11), !dbg !18623
  %13 = xor i1 %12, true, !dbg !18624
  br i1 %13, label %14, label %60, !dbg !18621

14:                                               ; preds = %10
  call void @llvm.dbg.declare(metadata ptr %5, metadata !18625, metadata !DIExpression()), !dbg !18627
  %15 = load ptr, ptr %4, align 8, !dbg !18628
  %16 = load ptr, ptr %4, align 8, !dbg !18629
  %17 = getelementptr inbounds %struct.death_queue_t, ptr %16, i32 0, i32 1, !dbg !18630
  %18 = getelementptr inbounds %struct.lwan_connection_t_, ptr %17, i32 0, i32 5, !dbg !18631
  %19 = load i32, ptr %18, align 4, !dbg !18631
  %20 = call ptr @death_queue_idx_to_node(ptr noundef %15, i32 noundef %19), !dbg !18632
  store ptr %20, ptr %5, align 8, !dbg !18627
  %21 = load ptr, ptr %5, align 8, !dbg !18633
  %22 = getelementptr inbounds %struct.lwan_connection_t_, ptr %21, i32 0, i32 1, !dbg !18635
  %23 = load i32, ptr %22, align 4, !dbg !18635
  %24 = load ptr, ptr %4, align 8, !dbg !18636
  %25 = getelementptr inbounds %struct.death_queue_t, ptr %24, i32 0, i32 2, !dbg !18637
  %26 = load i32, ptr %25, align 8, !dbg !18637
  %27 = icmp ugt i32 %23, %26, !dbg !18638
  br i1 %27, label %28, label %29, !dbg !18639

28:                                               ; preds = %14
  br label %63, !dbg !18640

29:                                               ; preds = %14
  %30 = load ptr, ptr %4, align 8, !dbg !18641
  %31 = load ptr, ptr %5, align 8, !dbg !18642
  store ptr %30, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !18379, metadata !DIExpression()), !dbg !18643
  store ptr %31, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !18385, metadata !DIExpression()), !dbg !18645
  %32 = load ptr, ptr %2, align 8, !dbg !18646
  %33 = load ptr, ptr %3, align 8, !dbg !18647
  call void @death_queue_remove(ptr noundef %32, ptr noundef %33), !dbg !18648
  %34 = load ptr, ptr %3, align 8, !dbg !18649
  %35 = getelementptr inbounds %struct.lwan_connection_t_, ptr %34, i32 0, i32 2, !dbg !18649
  %36 = load ptr, ptr %35, align 8, !dbg !18649
  %37 = icmp ne ptr %36, null, !dbg !18649
  %38 = xor i1 %37, true, !dbg !18649
  %39 = zext i1 %37 to i32, !dbg !18649
  %40 = sext i32 %39 to i64, !dbg !18649
  br i1 %37, label %41, label %47, !dbg !18650

41:                                               ; preds = %29
  %42 = load ptr, ptr %3, align 8, !dbg !18651
  %43 = getelementptr inbounds %struct.lwan_connection_t_, ptr %42, i32 0, i32 2, !dbg !18652
  %44 = load ptr, ptr %43, align 8, !dbg !18652
  call void @coro_free(ptr noundef %44) #18, !dbg !18653
  %45 = load ptr, ptr %3, align 8, !dbg !18654
  %46 = getelementptr inbounds %struct.lwan_connection_t_, ptr %45, i32 0, i32 2, !dbg !18655
  store ptr null, ptr %46, align 8, !dbg !18656
  br label %47, !dbg !18657

47:                                               ; preds = %41, %29
  %48 = load ptr, ptr %3, align 8, !dbg !18658
  %49 = load i32, ptr %48, align 8, !dbg !18659
  %50 = and i32 %49, 2, !dbg !18660
  %51 = icmp ne i32 %50, 0, !dbg !18660
  br i1 %51, label %52, label %59, !dbg !18661

52:                                               ; preds = %47
  %53 = load ptr, ptr %3, align 8, !dbg !18662
  %54 = load i32, ptr %53, align 8, !dbg !18663
  %55 = and i32 %54, -3, !dbg !18663
  store i32 %55, ptr %53, align 8, !dbg !18663
  %56 = load ptr, ptr %3, align 8, !dbg !18664
  %57 = call i32 @lwan_connection_get_fd(ptr noundef %56) #22, !dbg !18665
  %58 = call i32 @close(i32 noundef %57) #18, !dbg !18666
  br label %59, !dbg !18667

59:                                               ; preds = %52, %47
  br label %10, !dbg !18621, !llvm.loop !18668

60:                                               ; preds = %10
  %61 = load ptr, ptr %4, align 8, !dbg !18670
  %62 = getelementptr inbounds %struct.death_queue_t, ptr %61, i32 0, i32 2, !dbg !18671
  store i32 0, ptr %62, align 8, !dbg !18672
  br label %63, !dbg !18673

63:                                               ; preds = %60, %28
  ret void, !dbg !18673
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @update_date_cache(ptr noundef %0) #0 !dbg !18674 {
  %2 = alloca ptr, align 8
  %3 = alloca i64, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !18677, metadata !DIExpression()), !dbg !18678
  call void @llvm.dbg.declare(metadata ptr %3, metadata !18679, metadata !DIExpression()), !dbg !18680
  %4 = call i64 @time(ptr noundef null) #18, !dbg !18681
  store i64 %4, ptr %3, align 8, !dbg !18680
  %5 = load i64, ptr %3, align 8, !dbg !18682
  %6 = load ptr, ptr %2, align 8, !dbg !18684
  %7 = getelementptr inbounds %struct.lwan_thread_t_, ptr %6, i32 0, i32 1, !dbg !18685
  %8 = getelementptr inbounds %struct.anon.27, ptr %7, i32 0, i32 2, !dbg !18686
  %9 = load i64, ptr %8, align 8, !dbg !18686
  %10 = icmp ne i64 %5, %9, !dbg !18687
  br i1 %10, label %11, label %34, !dbg !18688

11:                                               ; preds = %1
  %12 = load i64, ptr %3, align 8, !dbg !18689
  %13 = load ptr, ptr %2, align 8, !dbg !18691
  %14 = getelementptr inbounds %struct.lwan_thread_t_, ptr %13, i32 0, i32 1, !dbg !18692
  %15 = getelementptr inbounds %struct.anon.27, ptr %14, i32 0, i32 2, !dbg !18693
  store i64 %12, ptr %15, align 8, !dbg !18694
  %16 = load i64, ptr %3, align 8, !dbg !18695
  %17 = load ptr, ptr %2, align 8, !dbg !18696
  %18 = getelementptr inbounds %struct.lwan_thread_t_, ptr %17, i32 0, i32 1, !dbg !18697
  %19 = getelementptr inbounds %struct.anon.27, ptr %18, i32 0, i32 0, !dbg !18698
  %20 = getelementptr inbounds [30 x i8], ptr %19, i64 0, i64 0, !dbg !18696
  call void @lwan_format_rfc_time(i64 noundef %16, ptr noundef %20), !dbg !18699
  %21 = load i64, ptr %3, align 8, !dbg !18700
  %22 = load ptr, ptr %2, align 8, !dbg !18701
  %23 = getelementptr inbounds %struct.lwan_thread_t_, ptr %22, i32 0, i32 0, !dbg !18702
  %24 = load ptr, ptr %23, align 8, !dbg !18702
  %25 = getelementptr inbounds %struct.lwan_t_, ptr %24, i32 0, i32 4, !dbg !18703
  %26 = getelementptr inbounds %struct.lwan_config_t_, ptr %25, i32 0, i32 4, !dbg !18704
  %27 = load i32, ptr %26, align 4, !dbg !18704
  %28 = zext i32 %27 to i64, !dbg !18705
  %29 = add nsw i64 %21, %28, !dbg !18706
  %30 = load ptr, ptr %2, align 8, !dbg !18707
  %31 = getelementptr inbounds %struct.lwan_thread_t_, ptr %30, i32 0, i32 1, !dbg !18708
  %32 = getelementptr inbounds %struct.anon.27, ptr %31, i32 0, i32 1, !dbg !18709
  %33 = getelementptr inbounds [30 x i8], ptr %32, i64 0, i64 0, !dbg !18707
  call void @lwan_format_rfc_time(i64 noundef %29, ptr noundef %33), !dbg !18710
  br label %34, !dbg !18711

34:                                               ; preds = %11, %1
  ret void, !dbg !18712
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @grab_and_watch_client(i32 noundef %0, i32 noundef %1, ptr noundef %2) #0 !dbg !18713 {
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.epoll_event, align 1
  store i32 %0, ptr %5, align 4
  call void @llvm.dbg.declare(metadata ptr %5, metadata !18716, metadata !DIExpression()), !dbg !18717
  store i32 %1, ptr %6, align 4
  call void @llvm.dbg.declare(metadata ptr %6, metadata !18718, metadata !DIExpression()), !dbg !18719
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !18720, metadata !DIExpression()), !dbg !18721
  call void @llvm.dbg.declare(metadata ptr %8, metadata !18722, metadata !DIExpression()), !dbg !18723
  %10 = load i32, ptr %6, align 4, !dbg !18724
  %11 = call i64 @read(i32 noundef %10, ptr noundef %8, i64 noundef 4), !dbg !18724
  %12 = icmp ne i64 %11, 4, !dbg !18724
  %13 = zext i1 %12 to i32, !dbg !18724
  %14 = sext i32 %13 to i64, !dbg !18724
  %15 = icmp ne i64 %14, 0, !dbg !18724
  br i1 %15, label %16, label %17, !dbg !18726

16:                                               ; preds = %3
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_perror_debug(ptr noundef @.str.380, i32 noundef 285, ptr noundef @__FUNCTION__.grab_and_watch_client, ptr noundef @.str.18.403), !dbg !18727
  store ptr null, ptr %4, align 8, !dbg !18729
  br label %38, !dbg !18729

17:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata ptr %9, metadata !18730, metadata !DIExpression()), !dbg !18731
  %18 = getelementptr inbounds %struct.epoll_event, ptr %9, i32 0, i32 0, !dbg !18732
  %19 = load i32, ptr getelementptr inbounds ([2 x i32], ptr @events_by_write_flag, i64 0, i64 1), align 4, !dbg !18733
  store i32 %19, ptr %18, align 1, !dbg !18732
  %20 = getelementptr inbounds %struct.epoll_event, ptr %9, i32 0, i32 1, !dbg !18732
  %21 = load ptr, ptr %7, align 8, !dbg !18734
  %22 = load i32, ptr %8, align 4, !dbg !18735
  %23 = sext i32 %22 to i64, !dbg !18734
  %24 = getelementptr inbounds %struct.lwan_connection_t_, ptr %21, i64 %23, !dbg !18734
  store ptr %24, ptr %20, align 1, !dbg !18736
  %25 = load i32, ptr %5, align 4, !dbg !18737
  %26 = load i32, ptr %8, align 4, !dbg !18737
  %27 = call i32 @epoll_ctl(i32 noundef %25, i32 noundef 1, i32 noundef %26, ptr noundef %9) #18, !dbg !18737
  %28 = icmp slt i32 %27, 0, !dbg !18737
  %29 = zext i1 %28 to i32, !dbg !18737
  %30 = sext i32 %29 to i64, !dbg !18737
  %31 = icmp ne i64 %30, 0, !dbg !18737
  br i1 %31, label %32, label %33, !dbg !18739

32:                                               ; preds = %17
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.380, i32 noundef 294, ptr noundef @__FUNCTION__.grab_and_watch_client, ptr noundef @.str.13.396) #23, !dbg !18740
  unreachable, !dbg !18740

33:                                               ; preds = %17
  %34 = load ptr, ptr %7, align 8, !dbg !18741
  %35 = load i32, ptr %8, align 4, !dbg !18742
  %36 = sext i32 %35 to i64, !dbg !18741
  %37 = getelementptr inbounds %struct.lwan_connection_t_, ptr %34, i64 %36, !dbg !18741
  store ptr %37, ptr %4, align 8, !dbg !18743
  br label %38, !dbg !18743

38:                                               ; preds = %33, %16
  %39 = load ptr, ptr %4, align 8, !dbg !18744
  ret ptr %39, !dbg !18744
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @process_request_coro(ptr noundef %0) #0 !dbg !18745 {
  %2 = alloca i32, align 4
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca [4096 x i8], align 16
  %9 = alloca %struct.lwan_value_t_, align 8
  %10 = alloca ptr, align 8
  %11 = alloca %struct.lwan_request_t_, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !18746, metadata !DIExpression()), !dbg !18747
  call void @llvm.dbg.declare(metadata ptr %4, metadata !18748, metadata !DIExpression()), !dbg !18764
  %12 = load ptr, ptr %3, align 8, !dbg !18765
  %13 = call ptr @coro_malloc_full(ptr noundef %12, i64 noundef 32, ptr noundef @strbuf_free), !dbg !18766
  store ptr %13, ptr %4, align 8, !dbg !18764
  call void @llvm.dbg.declare(metadata ptr %5, metadata !18767, metadata !DIExpression()), !dbg !18768
  %14 = load ptr, ptr %3, align 8, !dbg !18769
  %15 = call ptr @coro_get_data(ptr noundef %14), !dbg !18770
  store ptr %15, ptr %5, align 8, !dbg !18768
  call void @llvm.dbg.declare(metadata ptr %6, metadata !18771, metadata !DIExpression()), !dbg !18772
  %16 = load ptr, ptr %5, align 8, !dbg !18773
  %17 = getelementptr inbounds %struct.lwan_connection_t_, ptr %16, i32 0, i32 3, !dbg !18774
  %18 = load ptr, ptr %17, align 8, !dbg !18774
  %19 = getelementptr inbounds %struct.lwan_thread_t_, ptr %18, i32 0, i32 0, !dbg !18775
  %20 = load ptr, ptr %19, align 8, !dbg !18775
  store ptr %20, ptr %6, align 8, !dbg !18772
  call void @llvm.dbg.declare(metadata ptr %7, metadata !18776, metadata !DIExpression()), !dbg !18777
  %21 = load ptr, ptr %5, align 8, !dbg !18778
  %22 = call i32 @lwan_connection_get_fd(ptr noundef %21) #22, !dbg !18779
  store i32 %22, ptr %7, align 4, !dbg !18777
  call void @llvm.dbg.declare(metadata ptr %8, metadata !18780, metadata !DIExpression()), !dbg !18781
  call void @llvm.dbg.declare(metadata ptr %9, metadata !18782, metadata !DIExpression()), !dbg !18788
  %23 = getelementptr inbounds %struct.lwan_value_t_, ptr %9, i32 0, i32 0, !dbg !18789
  %24 = getelementptr inbounds [4096 x i8], ptr %8, i64 0, i64 0, !dbg !18790
  store ptr %24, ptr %23, align 8, !dbg !18789
  %25 = getelementptr inbounds %struct.lwan_value_t_, ptr %9, i32 0, i32 1, !dbg !18789
  store i64 0, ptr %25, align 8, !dbg !18789
  call void @llvm.dbg.declare(metadata ptr %10, metadata !18791, metadata !DIExpression()), !dbg !18792
  store ptr null, ptr %10, align 8, !dbg !18792
  %26 = load ptr, ptr %4, align 8, !dbg !18793
  %27 = call zeroext i1 @strbuf_init(ptr noundef %26), !dbg !18794
  br label %28, !dbg !18795

28:                                               ; preds = %60, %1
  call void @llvm.dbg.declare(metadata ptr %11, metadata !18796, metadata !DIExpression()), !dbg !18845
  call void @llvm.memset.p0.i64(ptr align 8 %11, i8 0, i64 160, i1 false), !dbg !18845
  %29 = getelementptr inbounds %struct.lwan_request_t_, ptr %11, i32 0, i32 1, !dbg !18846
  %30 = load i32, ptr %7, align 4, !dbg !18847
  store i32 %30, ptr %29, align 4, !dbg !18846
  %31 = getelementptr inbounds %struct.lwan_request_t_, ptr %11, i32 0, i32 4, !dbg !18846
  %32 = load ptr, ptr %5, align 8, !dbg !18848
  store ptr %32, ptr %31, align 8, !dbg !18846
  %33 = getelementptr inbounds %struct.lwan_request_t_, ptr %11, i32 0, i32 8, !dbg !18846
  %34 = getelementptr inbounds %struct.lwan_response_t_, ptr %33, i32 0, i32 0, !dbg !18849
  %35 = load ptr, ptr %4, align 8, !dbg !18850
  store ptr %35, ptr %34, align 8, !dbg !18849
  %36 = load ptr, ptr %5, align 8, !dbg !18851
  %37 = getelementptr inbounds %struct.lwan_connection_t_, ptr %36, i32 0, i32 0, !dbg !18851
  %38 = load i32, ptr %37, align 8, !dbg !18851
  %39 = and i32 %38, 2, !dbg !18851
  %40 = icmp ne i32 %39, 0, !dbg !18851
  br i1 %40, label %41, label %42, !dbg !18854

41:                                               ; preds = %28
  br label %43, !dbg !18854

42:                                               ; preds = %28
  call void @__assert_fail(ptr noundef @.str.19.402, ptr noundef @.str.380, i32 noundef 158, ptr noundef @__PRETTY_FUNCTION__.process_request_coro) #21, !dbg !18851
  unreachable, !dbg !18851

43:                                               ; preds = %41
  %44 = load ptr, ptr %6, align 8, !dbg !18855
  %45 = load ptr, ptr %10, align 8, !dbg !18856
  %46 = call ptr @lwan_process_request(ptr noundef %44, ptr noundef %11, ptr noundef %9, ptr noundef %45), !dbg !18857
  store ptr %46, ptr %10, align 8, !dbg !18858
  %47 = load ptr, ptr %10, align 8, !dbg !18859
  %48 = icmp ne ptr %47, null, !dbg !18859
  br i1 %48, label %50, label %49, !dbg !18861

49:                                               ; preds = %43
  br label %61, !dbg !18862

50:                                               ; preds = %43
  %51 = load ptr, ptr %3, align 8, !dbg !18863
  %52 = call i32 @coro_yield(ptr noundef %51, i32 noundef 0), !dbg !18864
  %53 = load ptr, ptr %4, align 8, !dbg !18865
  %54 = call zeroext i1 @strbuf_reset_length(ptr noundef %53), !dbg !18865
  %55 = xor i1 %54, true, !dbg !18865
  %56 = zext i1 %55 to i32, !dbg !18865
  %57 = sext i32 %56 to i64, !dbg !18865
  %58 = icmp ne i64 %57, 0, !dbg !18865
  br i1 %58, label %59, label %60, !dbg !18867

59:                                               ; preds = %50
  store i32 -1, ptr %2, align 4, !dbg !18868
  br label %62, !dbg !18868

60:                                               ; preds = %50
  br label %28, !dbg !18795, !llvm.loop !18869

61:                                               ; preds = %49
  store i32 1, ptr %2, align 4, !dbg !18871
  br label %62, !dbg !18871

62:                                               ; preds = %61, %59
  %63 = load i32, ptr %2, align 4, !dbg !18872
  ret i32 %63, !dbg !18872
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @death_queue_insert(ptr noundef %0, ptr noundef %1) #0 !dbg !18873 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !18874, metadata !DIExpression()), !dbg !18875
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !18876, metadata !DIExpression()), !dbg !18877
  %6 = load ptr, ptr %4, align 8, !dbg !18878
  %7 = getelementptr inbounds %struct.lwan_connection_t_, ptr %6, i32 0, i32 5, !dbg !18879
  store i32 -1, ptr %7, align 4, !dbg !18880
  %8 = load ptr, ptr %3, align 8, !dbg !18881
  %9 = getelementptr inbounds %struct.death_queue_t, ptr %8, i32 0, i32 1, !dbg !18882
  %10 = getelementptr inbounds %struct.lwan_connection_t_, ptr %9, i32 0, i32 4, !dbg !18883
  %11 = load i32, ptr %10, align 8, !dbg !18883
  %12 = load ptr, ptr %4, align 8, !dbg !18884
  %13 = getelementptr inbounds %struct.lwan_connection_t_, ptr %12, i32 0, i32 4, !dbg !18885
  store i32 %11, ptr %13, align 8, !dbg !18886
  call void @llvm.dbg.declare(metadata ptr %5, metadata !18887, metadata !DIExpression()), !dbg !18888
  %14 = load ptr, ptr %3, align 8, !dbg !18889
  %15 = load ptr, ptr %3, align 8, !dbg !18890
  %16 = getelementptr inbounds %struct.death_queue_t, ptr %15, i32 0, i32 1, !dbg !18891
  %17 = getelementptr inbounds %struct.lwan_connection_t_, ptr %16, i32 0, i32 4, !dbg !18892
  %18 = load i32, ptr %17, align 8, !dbg !18892
  %19 = call ptr @death_queue_idx_to_node(ptr noundef %14, i32 noundef %18), !dbg !18893
  store ptr %19, ptr %5, align 8, !dbg !18888
  %20 = load ptr, ptr %3, align 8, !dbg !18894
  %21 = load ptr, ptr %4, align 8, !dbg !18895
  %22 = call i32 @death_queue_node_to_idx(ptr noundef %20, ptr noundef %21), !dbg !18896
  %23 = load ptr, ptr %5, align 8, !dbg !18897
  %24 = getelementptr inbounds %struct.lwan_connection_t_, ptr %23, i32 0, i32 5, !dbg !18898
  store i32 %22, ptr %24, align 4, !dbg !18899
  %25 = load ptr, ptr %3, align 8, !dbg !18900
  %26 = getelementptr inbounds %struct.death_queue_t, ptr %25, i32 0, i32 1, !dbg !18901
  %27 = getelementptr inbounds %struct.lwan_connection_t_, ptr %26, i32 0, i32 4, !dbg !18902
  store i32 %22, ptr %27, align 8, !dbg !18903
  ret void, !dbg !18904
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @death_queue_remove(ptr noundef %0, ptr noundef %1) #0 !dbg !18905 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !18906, metadata !DIExpression()), !dbg !18907
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !18908, metadata !DIExpression()), !dbg !18909
  call void @llvm.dbg.declare(metadata ptr %5, metadata !18910, metadata !DIExpression()), !dbg !18911
  %7 = load ptr, ptr %3, align 8, !dbg !18912
  %8 = load ptr, ptr %4, align 8, !dbg !18913
  %9 = getelementptr inbounds %struct.lwan_connection_t_, ptr %8, i32 0, i32 4, !dbg !18914
  %10 = load i32, ptr %9, align 8, !dbg !18914
  %11 = call ptr @death_queue_idx_to_node(ptr noundef %7, i32 noundef %10), !dbg !18915
  store ptr %11, ptr %5, align 8, !dbg !18911
  call void @llvm.dbg.declare(metadata ptr %6, metadata !18916, metadata !DIExpression()), !dbg !18917
  %12 = load ptr, ptr %3, align 8, !dbg !18918
  %13 = load ptr, ptr %4, align 8, !dbg !18919
  %14 = getelementptr inbounds %struct.lwan_connection_t_, ptr %13, i32 0, i32 5, !dbg !18920
  %15 = load i32, ptr %14, align 4, !dbg !18920
  %16 = call ptr @death_queue_idx_to_node(ptr noundef %12, i32 noundef %15), !dbg !18921
  store ptr %16, ptr %6, align 8, !dbg !18917
  %17 = load ptr, ptr %4, align 8, !dbg !18922
  %18 = getelementptr inbounds %struct.lwan_connection_t_, ptr %17, i32 0, i32 4, !dbg !18923
  %19 = load i32, ptr %18, align 8, !dbg !18923
  %20 = load ptr, ptr %6, align 8, !dbg !18924
  %21 = getelementptr inbounds %struct.lwan_connection_t_, ptr %20, i32 0, i32 4, !dbg !18925
  store i32 %19, ptr %21, align 8, !dbg !18926
  %22 = load ptr, ptr %4, align 8, !dbg !18927
  %23 = getelementptr inbounds %struct.lwan_connection_t_, ptr %22, i32 0, i32 5, !dbg !18928
  %24 = load i32, ptr %23, align 4, !dbg !18928
  %25 = load ptr, ptr %5, align 8, !dbg !18929
  %26 = getelementptr inbounds %struct.lwan_connection_t_, ptr %25, i32 0, i32 5, !dbg !18930
  store i32 %24, ptr %26, align 4, !dbg !18931
  ret void, !dbg !18932
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @death_queue_move_to_last(ptr noundef %0, ptr noundef %1) #0 !dbg !18933 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !18934, metadata !DIExpression()), !dbg !18935
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !18936, metadata !DIExpression()), !dbg !18937
  %5 = load ptr, ptr %3, align 8, !dbg !18938
  %6 = getelementptr inbounds %struct.death_queue_t, ptr %5, i32 0, i32 2, !dbg !18939
  %7 = load i32, ptr %6, align 8, !dbg !18939
  %8 = load ptr, ptr %3, align 8, !dbg !18940
  %9 = getelementptr inbounds %struct.death_queue_t, ptr %8, i32 0, i32 3, !dbg !18941
  %10 = load i16, ptr %9, align 4, !dbg !18941
  %11 = zext i16 %10 to i32, !dbg !18940
  %12 = load ptr, ptr %4, align 8, !dbg !18942
  %13 = getelementptr inbounds %struct.lwan_connection_t_, ptr %12, i32 0, i32 0, !dbg !18943
  %14 = load i32, ptr %13, align 8, !dbg !18943
  %15 = and i32 %14, 5, !dbg !18944
  %16 = icmp ne i32 %15, 0, !dbg !18945
  %17 = xor i1 %16, true, !dbg !18945
  %18 = xor i1 %17, true, !dbg !18946
  %19 = zext i1 %18 to i32, !dbg !18946
  %20 = mul i32 %11, %19, !dbg !18947
  %21 = add i32 %7, %20, !dbg !18948
  %22 = load ptr, ptr %4, align 8, !dbg !18949
  %23 = getelementptr inbounds %struct.lwan_connection_t_, ptr %22, i32 0, i32 1, !dbg !18950
  store i32 %21, ptr %23, align 4, !dbg !18951
  %24 = load ptr, ptr %3, align 8, !dbg !18952
  %25 = load ptr, ptr %4, align 8, !dbg !18953
  call void @death_queue_remove(ptr noundef %24, ptr noundef %25), !dbg !18954
  %26 = load ptr, ptr %3, align 8, !dbg !18955
  %27 = load ptr, ptr %4, align 8, !dbg !18956
  call void @death_queue_insert(ptr noundef %26, ptr noundef %27), !dbg !18957
  ret void, !dbg !18958
}

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @death_queue_idx_to_node(ptr noundef %0, i32 noundef %1) #0 !dbg !18959 {
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !18962, metadata !DIExpression()), !dbg !18963
  store i32 %1, ptr %4, align 4
  call void @llvm.dbg.declare(metadata ptr %4, metadata !18964, metadata !DIExpression()), !dbg !18965
  %5 = load i32, ptr %4, align 4, !dbg !18966
  %6 = icmp slt i32 %5, 0, !dbg !18967
  br i1 %6, label %7, label %10, !dbg !18968

7:                                                ; preds = %2
  %8 = load ptr, ptr %3, align 8, !dbg !18969
  %9 = getelementptr inbounds %struct.death_queue_t, ptr %8, i32 0, i32 1, !dbg !18970
  br label %17, !dbg !18968

10:                                               ; preds = %2
  %11 = load ptr, ptr %3, align 8, !dbg !18971
  %12 = getelementptr inbounds %struct.death_queue_t, ptr %11, i32 0, i32 0, !dbg !18972
  %13 = load ptr, ptr %12, align 8, !dbg !18972
  %14 = load i32, ptr %4, align 4, !dbg !18973
  %15 = sext i32 %14 to i64, !dbg !18971
  %16 = getelementptr inbounds %struct.lwan_connection_t_, ptr %13, i64 %15, !dbg !18971
  br label %17, !dbg !18968

17:                                               ; preds = %10, %7
  %18 = phi ptr [ %9, %7 ], [ %16, %10 ], !dbg !18968
  ret ptr %18, !dbg !18974
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @death_queue_node_to_idx(ptr noundef %0, ptr noundef %1) #0 !dbg !18975 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !18978, metadata !DIExpression()), !dbg !18979
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !18980, metadata !DIExpression()), !dbg !18981
  %5 = load ptr, ptr %4, align 8, !dbg !18982
  %6 = load ptr, ptr %3, align 8, !dbg !18983
  %7 = getelementptr inbounds %struct.death_queue_t, ptr %6, i32 0, i32 1, !dbg !18984
  %8 = icmp eq ptr %5, %7, !dbg !18985
  br i1 %8, label %9, label %10, !dbg !18986

9:                                                ; preds = %2
  br label %20, !dbg !18986

10:                                               ; preds = %2
  %11 = load ptr, ptr %4, align 8, !dbg !18987
  %12 = load ptr, ptr %3, align 8, !dbg !18988
  %13 = getelementptr inbounds %struct.death_queue_t, ptr %12, i32 0, i32 0, !dbg !18989
  %14 = load ptr, ptr %13, align 8, !dbg !18989
  %15 = ptrtoint ptr %11 to i64, !dbg !18990
  %16 = ptrtoint ptr %14 to i64, !dbg !18990
  %17 = sub i64 %15, %16, !dbg !18990
  %18 = sdiv exact i64 %17, 32, !dbg !18990
  %19 = trunc i64 %18 to i32, !dbg !18991
  br label %20, !dbg !18986

20:                                               ; preds = %10, %9
  %21 = phi i32 [ -1, %9 ], [ %19, %10 ], !dbg !18986
  ret i32 %21, !dbg !18992
}

; Function Attrs: nounwind
declare i64 @time(ptr noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_thread_shutdown(ptr noundef %0) #0 !dbg !18993 {
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !18994, metadata !DIExpression()), !dbg !18995
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_debug_debug(ptr noundef @.str.380, i32 noundef 427, ptr noundef @__FUNCTION__.lwan_thread_shutdown, ptr noundef @.str.7.406), !dbg !18996
  call void @llvm.dbg.declare(metadata ptr %3, metadata !18997, metadata !DIExpression()), !dbg !18999
  %5 = load ptr, ptr %2, align 8, !dbg !19000
  %6 = getelementptr inbounds %struct.lwan_t_, ptr %5, i32 0, i32 2, !dbg !19001
  %7 = getelementptr inbounds %struct.anon.0.24, ptr %6, i32 0, i32 2, !dbg !19002
  %8 = load i16, ptr %7, align 4, !dbg !19002
  %9 = zext i16 %8 to i32, !dbg !19000
  %10 = sub nsw i32 %9, 1, !dbg !19003
  store i32 %10, ptr %3, align 4, !dbg !18999
  br label %11, !dbg !19004

11:                                               ; preds = %46, %1
  %12 = load i32, ptr %3, align 4, !dbg !19005
  %13 = icmp sge i32 %12, 0, !dbg !19007
  br i1 %13, label %14, label %49, !dbg !19008

14:                                               ; preds = %11
  call void @llvm.dbg.declare(metadata ptr %4, metadata !19009, metadata !DIExpression()), !dbg !19011
  %15 = load ptr, ptr %2, align 8, !dbg !19012
  %16 = getelementptr inbounds %struct.lwan_t_, ptr %15, i32 0, i32 2, !dbg !19013
  %17 = getelementptr inbounds %struct.anon.0.24, ptr %16, i32 0, i32 0, !dbg !19014
  %18 = load ptr, ptr %17, align 8, !dbg !19014
  %19 = load i32, ptr %3, align 4, !dbg !19015
  %20 = sext i32 %19 to i64, !dbg !19012
  %21 = getelementptr inbounds %struct.lwan_thread_t_, ptr %18, i64 %20, !dbg !19012
  store ptr %21, ptr %4, align 8, !dbg !19011
  %22 = load ptr, ptr %4, align 8, !dbg !19016
  %23 = getelementptr inbounds %struct.lwan_thread_t_, ptr %22, i32 0, i32 2, !dbg !19017
  %24 = load i32, ptr %23, align 8, !dbg !19017
  %25 = call i32 @close(i32 noundef %24), !dbg !19018
  %26 = load ptr, ptr %4, align 8, !dbg !19019
  %27 = getelementptr inbounds %struct.lwan_thread_t_, ptr %26, i32 0, i32 3, !dbg !19020
  %28 = getelementptr inbounds [2 x i32], ptr %27, i64 0, i64 0, !dbg !19019
  %29 = load i32, ptr %28, align 4, !dbg !19019
  %30 = call i32 @close(i32 noundef %29), !dbg !19021
  %31 = load ptr, ptr %4, align 8, !dbg !19022
  %32 = getelementptr inbounds %struct.lwan_thread_t_, ptr %31, i32 0, i32 3, !dbg !19023
  %33 = getelementptr inbounds [2 x i32], ptr %32, i64 0, i64 1, !dbg !19022
  %34 = load i32, ptr %33, align 4, !dbg !19022
  %35 = call i32 @close(i32 noundef %34), !dbg !19024
  %36 = load ptr, ptr %2, align 8, !dbg !19025
  %37 = getelementptr inbounds %struct.lwan_t_, ptr %36, i32 0, i32 2, !dbg !19026
  %38 = getelementptr inbounds %struct.anon.0.24, ptr %37, i32 0, i32 0, !dbg !19027
  %39 = load ptr, ptr %38, align 8, !dbg !19027
  %40 = load i32, ptr %3, align 4, !dbg !19028
  %41 = sext i32 %40 to i64, !dbg !19025
  %42 = getelementptr inbounds %struct.lwan_thread_t_, ptr %39, i64 %41, !dbg !19025
  %43 = getelementptr inbounds %struct.lwan_thread_t_, ptr %42, i32 0, i32 4, !dbg !19029
  %44 = load i64, ptr %43, align 8, !dbg !19029
  %45 = call i32 @pthread_tryjoin_np(i64 noundef %44, ptr noundef null) #18, !dbg !19030
  br label %46, !dbg !19031

46:                                               ; preds = %14
  %47 = load i32, ptr %3, align 4, !dbg !19032
  %48 = add nsw i32 %47, -1, !dbg !19032
  store i32 %48, ptr %3, align 4, !dbg !19032
  br label %11, !dbg !19033, !llvm.loop !19034

49:                                               ; preds = %11
  %50 = load ptr, ptr %2, align 8, !dbg !19036
  %51 = getelementptr inbounds %struct.lwan_t_, ptr %50, i32 0, i32 2, !dbg !19037
  %52 = getelementptr inbounds %struct.anon.0.24, ptr %51, i32 0, i32 0, !dbg !19038
  %53 = load ptr, ptr %52, align 8, !dbg !19038
  call void @free(ptr noundef %53) #18, !dbg !19039
  ret void, !dbg !19040
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @lwan_trie_init(ptr noundef %0, ptr noundef %1) #0 !dbg !19041 {
  %3 = alloca i1, align 1
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !19065, metadata !DIExpression()), !dbg !19066
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !19067, metadata !DIExpression()), !dbg !19068
  %6 = load ptr, ptr %4, align 8, !dbg !19069
  %7 = icmp ne ptr %6, null, !dbg !19069
  br i1 %7, label %9, label %8, !dbg !19071

8:                                                ; preds = %2
  store i1 false, ptr %3, align 1, !dbg !19072
  br label %15, !dbg !19072

9:                                                ; preds = %2
  %10 = load ptr, ptr %4, align 8, !dbg !19073
  %11 = getelementptr inbounds %struct.list_node, ptr %10, i32 0, i32 0, !dbg !19074
  store ptr null, ptr %11, align 8, !dbg !19075
  %12 = load ptr, ptr %5, align 8, !dbg !19076
  %13 = load ptr, ptr %4, align 8, !dbg !19077
  %14 = getelementptr inbounds %struct.list_node, ptr %13, i32 0, i32 1, !dbg !19078
  store ptr %12, ptr %14, align 8, !dbg !19079
  store i1 true, ptr %3, align 1, !dbg !19080
  br label %15, !dbg !19080

15:                                               ; preds = %9, %8
  %16 = load i1, ptr %3, align 1, !dbg !19081
  ret i1 %16, !dbg !19081
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_trie_add(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !19082 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %15 = alloca ptr, align 8
  %16 = alloca i8, align 1
  store ptr %0, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !19085, metadata !DIExpression()), !dbg !19086
  store ptr %1, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %10, metadata !19087, metadata !DIExpression()), !dbg !19088
  store ptr %2, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !19089, metadata !DIExpression()), !dbg !19090
  %17 = load ptr, ptr %9, align 8, !dbg !19091
  %18 = icmp ne ptr %17, null, !dbg !19091
  br i1 %18, label %19, label %26, !dbg !19091

19:                                               ; preds = %3
  %20 = load ptr, ptr %10, align 8, !dbg !19091
  %21 = icmp ne ptr %20, null, !dbg !19091
  br i1 %21, label %22, label %26, !dbg !19091

22:                                               ; preds = %19
  %23 = load ptr, ptr %11, align 8, !dbg !19091
  %24 = icmp ne ptr %23, null, !dbg !19091
  %25 = xor i1 %24, true, !dbg !19091
  br label %26, !dbg !19091

26:                                               ; preds = %22, %19, %3
  %27 = phi i1 [ true, %19 ], [ true, %3 ], [ %25, %22 ]
  %28 = zext i1 %27 to i32, !dbg !19091
  %29 = sext i32 %28 to i64, !dbg !19091
  %30 = icmp ne i64 %29, 0, !dbg !19091
  br i1 %30, label %31, label %32, !dbg !19093

31:                                               ; preds = %26
  br label %159, !dbg !19094

32:                                               ; preds = %26
  call void @llvm.dbg.declare(metadata ptr %12, metadata !19095, metadata !DIExpression()), !dbg !19097
  call void @llvm.dbg.declare(metadata ptr %13, metadata !19098, metadata !DIExpression()), !dbg !19099
  call void @llvm.dbg.declare(metadata ptr %14, metadata !19100, metadata !DIExpression()), !dbg !19101
  %33 = load ptr, ptr %10, align 8, !dbg !19102
  store ptr %33, ptr %14, align 8, !dbg !19101
  %34 = load ptr, ptr %9, align 8, !dbg !19103
  %35 = getelementptr inbounds %struct.list_node, ptr %34, i32 0, i32 0, !dbg !19105
  store ptr %35, ptr %12, align 8, !dbg !19106
  br label %36, !dbg !19107

36:                                               ; preds = %58, %32
  %37 = load ptr, ptr %10, align 8, !dbg !19108
  %38 = load i8, ptr %37, align 1, !dbg !19110
  %39 = icmp ne i8 %38, 0, !dbg !19111
  br i1 %39, label %40, label %68, !dbg !19111

40:                                               ; preds = %36
  br label %41, !dbg !19112

41:                                               ; preds = %40
  %42 = load ptr, ptr %12, align 8, !dbg !19113
  %43 = load ptr, ptr %42, align 8, !dbg !19113
  store ptr %43, ptr %13, align 8, !dbg !19113
  %44 = icmp ne ptr %43, null, !dbg !19113
  br i1 %44, label %52, label %45, !dbg !19116

45:                                               ; preds = %41
  %46 = call noalias ptr @calloc(i64 noundef 1, i64 noundef 80) #19, !dbg !19117
  store ptr %46, ptr %13, align 8, !dbg !19117
  %47 = load ptr, ptr %12, align 8, !dbg !19117
  store ptr %46, ptr %47, align 8, !dbg !19117
  %48 = load ptr, ptr %13, align 8, !dbg !19119
  %49 = icmp ne ptr %48, null, !dbg !19119
  br i1 %49, label %51, label %50, !dbg !19117

50:                                               ; preds = %45
  br label %158, !dbg !19119

51:                                               ; preds = %45
  br label %52, !dbg !19117

52:                                               ; preds = %51, %41
  %53 = load ptr, ptr %13, align 8, !dbg !19116
  %54 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %53, i32 0, i32 2, !dbg !19116
  %55 = load i32, ptr %54, align 8, !dbg !19116
  %56 = add nsw i32 %55, 1, !dbg !19116
  store i32 %56, ptr %54, align 8, !dbg !19116
  br label %57, !dbg !19116

57:                                               ; preds = %52
  br label %58, !dbg !19116

58:                                               ; preds = %57
  %59 = load ptr, ptr %13, align 8, !dbg !19121
  %60 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %59, i32 0, i32 0, !dbg !19122
  %61 = load ptr, ptr %10, align 8, !dbg !19123
  %62 = getelementptr inbounds i8, ptr %61, i32 1, !dbg !19123
  store ptr %62, ptr %10, align 8, !dbg !19123
  %63 = load i8, ptr %61, align 1, !dbg !19124
  %64 = sext i8 %63 to i32, !dbg !19124
  %65 = and i32 %64, 7, !dbg !19125
  %66 = sext i32 %65 to i64, !dbg !19121
  %67 = getelementptr inbounds [8 x ptr], ptr %60, i64 0, i64 %66, !dbg !19121
  store ptr %67, ptr %12, align 8, !dbg !19126
  br label %36, !dbg !19127, !llvm.loop !19128

68:                                               ; preds = %36
  br label %69, !dbg !19130

69:                                               ; preds = %68
  %70 = load ptr, ptr %12, align 8, !dbg !19131
  %71 = load ptr, ptr %70, align 8, !dbg !19131
  store ptr %71, ptr %13, align 8, !dbg !19131
  %72 = icmp ne ptr %71, null, !dbg !19131
  br i1 %72, label %80, label %73, !dbg !19134

73:                                               ; preds = %69
  %74 = call noalias ptr @calloc(i64 noundef 1, i64 noundef 80) #19, !dbg !19135
  store ptr %74, ptr %13, align 8, !dbg !19135
  %75 = load ptr, ptr %12, align 8, !dbg !19135
  store ptr %74, ptr %75, align 8, !dbg !19135
  %76 = load ptr, ptr %13, align 8, !dbg !19137
  %77 = icmp ne ptr %76, null, !dbg !19137
  br i1 %77, label %79, label %78, !dbg !19135

78:                                               ; preds = %73
  br label %158, !dbg !19137

79:                                               ; preds = %73
  br label %80, !dbg !19135

80:                                               ; preds = %79, %69
  %81 = load ptr, ptr %13, align 8, !dbg !19134
  %82 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %81, i32 0, i32 2, !dbg !19134
  %83 = load i32, ptr %82, align 8, !dbg !19134
  %84 = add nsw i32 %83, 1, !dbg !19134
  store i32 %84, ptr %82, align 8, !dbg !19134
  br label %85, !dbg !19134

85:                                               ; preds = %80
  call void @llvm.dbg.declare(metadata ptr %15, metadata !19139, metadata !DIExpression()), !dbg !19140
  %86 = load ptr, ptr %13, align 8, !dbg !19141
  %87 = load ptr, ptr %14, align 8, !dbg !19142
  %88 = load ptr, ptr %10, align 8, !dbg !19143
  %89 = load ptr, ptr %14, align 8, !dbg !19144
  %90 = ptrtoint ptr %88 to i64, !dbg !19145
  %91 = ptrtoint ptr %89 to i64, !dbg !19145
  %92 = sub i64 %90, %91, !dbg !19145
  store ptr %86, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !19146, metadata !DIExpression()), !dbg !19150
  store ptr %87, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !19152, metadata !DIExpression()), !dbg !19153
  store i64 %92, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !19154, metadata !DIExpression()), !dbg !19155
  call void @llvm.dbg.declare(metadata ptr %8, metadata !19156, metadata !DIExpression()), !dbg !19157
  %93 = load ptr, ptr %5, align 8, !dbg !19158
  %94 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %93, i32 0, i32 1, !dbg !19159
  %95 = load ptr, ptr %94, align 8, !dbg !19159
  store ptr %95, ptr %8, align 8, !dbg !19157
  %96 = load ptr, ptr %8, align 8, !dbg !19160
  %97 = icmp ne ptr %96, null, !dbg !19160
  br i1 %97, label %99, label %98, !dbg !19162

98:                                               ; preds = %85
  store ptr null, ptr %4, align 8, !dbg !19163
  br label %125, !dbg !19163

99:                                               ; preds = %85
  %100 = load ptr, ptr %8, align 8, !dbg !19164
  %101 = getelementptr inbounds %struct.anon.1, ptr %100, i32 0, i32 2, !dbg !19166
  %102 = load ptr, ptr %101, align 8, !dbg !19166
  %103 = icmp ne ptr %102, null, !dbg !19164
  br i1 %103, label %106, label %104, !dbg !19167

104:                                              ; preds = %99
  %105 = load ptr, ptr %8, align 8, !dbg !19168
  store ptr %105, ptr %4, align 8, !dbg !19169
  br label %125, !dbg !19169

106:                                              ; preds = %99
  br label %107, !dbg !19170

107:                                              ; preds = %120, %106
  %108 = load ptr, ptr %8, align 8, !dbg !19171
  %109 = icmp ne ptr %108, null, !dbg !19174
  br i1 %109, label %110, label %124, !dbg !19174

110:                                              ; preds = %107
  %111 = load ptr, ptr %8, align 8, !dbg !19175
  %112 = load ptr, ptr %111, align 8, !dbg !19178
  %113 = load ptr, ptr %6, align 8, !dbg !19179
  %114 = load i64, ptr %7, align 8, !dbg !19180
  %115 = sub i64 %114, 1, !dbg !19181
  %116 = call i32 @strncmp(ptr noundef %112, ptr noundef %113, i64 noundef %115) #22, !dbg !19182
  %117 = icmp ne i32 %116, 0, !dbg !19182
  br i1 %117, label %120, label %118, !dbg !19183

118:                                              ; preds = %110
  %119 = load ptr, ptr %8, align 8, !dbg !19184
  store ptr %119, ptr %4, align 8, !dbg !19185
  br label %125, !dbg !19185

120:                                              ; preds = %110
  %121 = load ptr, ptr %8, align 8, !dbg !19186
  %122 = getelementptr inbounds %struct.anon.1, ptr %121, i32 0, i32 2, !dbg !19187
  %123 = load ptr, ptr %122, align 8, !dbg !19187
  store ptr %123, ptr %8, align 8, !dbg !19188
  br label %107, !dbg !19189, !llvm.loop !19190

124:                                              ; preds = %107
  store ptr null, ptr %4, align 8, !dbg !19192
  br label %125, !dbg !19192

125:                                              ; preds = %124, %118, %104, %98
  %126 = load ptr, ptr %4, align 8, !dbg !19193
  store ptr %126, ptr %15, align 8, !dbg !19140
  call void @llvm.dbg.declare(metadata ptr %16, metadata !19194, metadata !DIExpression()), !dbg !19195
  %127 = load ptr, ptr %15, align 8, !dbg !19196
  %128 = icmp ne ptr %127, null, !dbg !19196
  %129 = zext i1 %128 to i8, !dbg !19195
  store i8 %129, ptr %16, align 1, !dbg !19195
  %130 = load ptr, ptr %15, align 8, !dbg !19197
  %131 = icmp ne ptr %130, null, !dbg !19197
  br i1 %131, label %138, label %132, !dbg !19199

132:                                              ; preds = %125
  %133 = call noalias ptr @malloc(i64 noundef 24) #17, !dbg !19200
  store ptr %133, ptr %15, align 8, !dbg !19202
  %134 = load ptr, ptr %15, align 8, !dbg !19203
  %135 = icmp ne ptr %134, null, !dbg !19203
  br i1 %135, label %137, label %136, !dbg !19205

136:                                              ; preds = %132
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.411, i32 noundef 85, ptr noundef @__FUNCTION__.lwan_trie_add, ptr noundef @.str.1.412) #23, !dbg !19206
  unreachable, !dbg !19206

137:                                              ; preds = %132
  br label %138, !dbg !19207

138:                                              ; preds = %137, %125
  %139 = load ptr, ptr %11, align 8, !dbg !19208
  %140 = load ptr, ptr %15, align 8, !dbg !19209
  %141 = getelementptr inbounds %struct.anon.1, ptr %140, i32 0, i32 1, !dbg !19210
  store ptr %139, ptr %141, align 8, !dbg !19211
  %142 = load i8, ptr %16, align 1, !dbg !19212
  %143 = trunc i8 %142 to i1, !dbg !19212
  br i1 %143, label %157, label %144, !dbg !19214

144:                                              ; preds = %138
  %145 = load ptr, ptr %14, align 8, !dbg !19215
  %146 = call noalias ptr @strdup(ptr noundef %145) #18, !dbg !19217
  %147 = load ptr, ptr %15, align 8, !dbg !19218
  %148 = getelementptr inbounds %struct.anon.1, ptr %147, i32 0, i32 0, !dbg !19219
  store ptr %146, ptr %148, align 8, !dbg !19220
  %149 = load ptr, ptr %13, align 8, !dbg !19221
  %150 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %149, i32 0, i32 1, !dbg !19222
  %151 = load ptr, ptr %150, align 8, !dbg !19222
  %152 = load ptr, ptr %15, align 8, !dbg !19223
  %153 = getelementptr inbounds %struct.anon.1, ptr %152, i32 0, i32 2, !dbg !19224
  store ptr %151, ptr %153, align 8, !dbg !19225
  %154 = load ptr, ptr %15, align 8, !dbg !19226
  %155 = load ptr, ptr %13, align 8, !dbg !19227
  %156 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %155, i32 0, i32 1, !dbg !19228
  store ptr %154, ptr %156, align 8, !dbg !19229
  br label %157, !dbg !19230

157:                                              ; preds = %144, %138
  br label %159, !dbg !19231

158:                                              ; preds = %78, %50
  call void @llvm.dbg.label(metadata !19232), !dbg !19233
  call void (ptr, i32, ptr, ptr, ...) @lwan_status_critical_perror_debug(ptr noundef @.str.411, i32 noundef 97, ptr noundef @__FUNCTION__.lwan_trie_add, ptr noundef @.str.2.413) #23, !dbg !19234
  unreachable, !dbg !19234

159:                                              ; preds = %157, %31
  ret void, !dbg !19235
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local ptr @lwan_trie_lookup_full(ptr noundef %0, ptr noundef %1, i1 noundef zeroext %2) #9 !dbg !19236 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i8, align 1
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %15 = alloca i64, align 8
  %16 = alloca ptr, align 8
  %17 = alloca ptr, align 8
  %18 = alloca ptr, align 8
  %19 = alloca ptr, align 8
  %20 = alloca i8, align 1
  %21 = alloca i64, align 8
  %22 = alloca ptr, align 8
  %23 = alloca ptr, align 8
  store ptr %0, ptr %18, align 8
  call void @llvm.dbg.declare(metadata ptr %18, metadata !19239, metadata !DIExpression()), !dbg !19240
  store ptr %1, ptr %19, align 8
  call void @llvm.dbg.declare(metadata ptr %19, metadata !19241, metadata !DIExpression()), !dbg !19242
  %24 = zext i1 %2 to i8
  store i8 %24, ptr %20, align 1
  call void @llvm.dbg.declare(metadata ptr %20, metadata !19243, metadata !DIExpression()), !dbg !19244
  %25 = load ptr, ptr %18, align 8, !dbg !19245
  %26 = icmp ne ptr %25, null, !dbg !19245
  %27 = xor i1 %26, true, !dbg !19245
  %28 = zext i1 %27 to i32, !dbg !19245
  %29 = sext i32 %28 to i64, !dbg !19245
  %30 = icmp ne i64 %29, 0, !dbg !19245
  br i1 %30, label %31, label %32, !dbg !19247

31:                                               ; preds = %3
  store ptr null, ptr %17, align 8, !dbg !19248
  br label %146, !dbg !19248

32:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata ptr %21, metadata !19249, metadata !DIExpression()), !dbg !19250
  call void @llvm.dbg.declare(metadata ptr %22, metadata !19251, metadata !DIExpression()), !dbg !19252
  %33 = load ptr, ptr %18, align 8, !dbg !19253
  %34 = getelementptr inbounds %struct.list_node, ptr %33, i32 0, i32 0, !dbg !19254
  %35 = load ptr, ptr %34, align 8, !dbg !19254
  %36 = load ptr, ptr %19, align 8, !dbg !19255
  %37 = load i8, ptr %20, align 1, !dbg !19256
  %38 = trunc i8 %37 to i1, !dbg !19256
  store ptr %35, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !19257, metadata !DIExpression()), !dbg !19261
  store ptr %36, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !19263, metadata !DIExpression()), !dbg !19264
  %39 = zext i1 %38 to i8
  store i8 %39, ptr %7, align 1
  call void @llvm.dbg.declare(metadata ptr %7, metadata !19265, metadata !DIExpression()), !dbg !19266
  store ptr %21, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !19267, metadata !DIExpression()), !dbg !19268
  call void @llvm.dbg.declare(metadata ptr %9, metadata !19269, metadata !DIExpression()), !dbg !19270
  call void @llvm.dbg.declare(metadata ptr %10, metadata !19271, metadata !DIExpression()), !dbg !19272
  store ptr null, ptr %10, align 8, !dbg !19272
  call void @llvm.dbg.declare(metadata ptr %11, metadata !19273, metadata !DIExpression()), !dbg !19274
  %40 = load ptr, ptr %6, align 8, !dbg !19275
  store ptr %40, ptr %11, align 8, !dbg !19274
  %41 = load ptr, ptr %5, align 8, !dbg !19276
  store ptr %41, ptr %9, align 8, !dbg !19278
  br label %42, !dbg !19279

42:                                               ; preds = %59, %32
  %43 = load ptr, ptr %9, align 8, !dbg !19280
  %44 = icmp ne ptr %43, null, !dbg !19280
  br i1 %44, label %45, label %50, !dbg !19282

45:                                               ; preds = %42
  %46 = load ptr, ptr %6, align 8, !dbg !19283
  %47 = load i8, ptr %46, align 1, !dbg !19284
  %48 = sext i8 %47 to i32, !dbg !19284
  %49 = icmp ne i32 %48, 0, !dbg !19282
  br label %50

50:                                               ; preds = %45, %42
  %51 = phi i1 [ false, %42 ], [ %49, %45 ], !dbg !19285
  br i1 %51, label %52, label %69, !dbg !19286

52:                                               ; preds = %50
  %53 = load ptr, ptr %9, align 8, !dbg !19287
  %54 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %53, i32 0, i32 1, !dbg !19290
  %55 = load ptr, ptr %54, align 8, !dbg !19290
  %56 = icmp ne ptr %55, null, !dbg !19287
  br i1 %56, label %57, label %59, !dbg !19291

57:                                               ; preds = %52
  %58 = load ptr, ptr %9, align 8, !dbg !19292
  store ptr %58, ptr %10, align 8, !dbg !19293
  br label %59, !dbg !19294

59:                                               ; preds = %57, %52
  %60 = load ptr, ptr %9, align 8, !dbg !19295
  %61 = load ptr, ptr %6, align 8, !dbg !19296
  %62 = getelementptr inbounds i8, ptr %61, i32 1, !dbg !19296
  store ptr %62, ptr %6, align 8, !dbg !19296
  %63 = load i8, ptr %61, align 1, !dbg !19297
  %64 = sext i8 %63 to i32, !dbg !19297
  %65 = and i32 %64, 7, !dbg !19298
  %66 = sext i32 %65 to i64, !dbg !19295
  %67 = getelementptr inbounds [8 x ptr], ptr %60, i64 0, i64 %66, !dbg !19295
  %68 = load ptr, ptr %67, align 8, !dbg !19295
  store ptr %68, ptr %9, align 8, !dbg !19299
  br label %42, !dbg !19300, !llvm.loop !19301

69:                                               ; preds = %50
  %70 = load ptr, ptr %6, align 8, !dbg !19303
  %71 = load ptr, ptr %11, align 8, !dbg !19304
  %72 = ptrtoint ptr %70 to i64, !dbg !19305
  %73 = ptrtoint ptr %71 to i64, !dbg !19305
  %74 = sub i64 %72, %73, !dbg !19305
  %75 = load ptr, ptr %8, align 8, !dbg !19306
  store i64 %74, ptr %75, align 8, !dbg !19307
  %76 = load ptr, ptr %9, align 8, !dbg !19308
  %77 = icmp ne ptr %76, null, !dbg !19308
  br i1 %77, label %78, label %85, !dbg !19310

78:                                               ; preds = %69
  %79 = load ptr, ptr %9, align 8, !dbg !19311
  %80 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %79, i32 0, i32 1, !dbg !19312
  %81 = load ptr, ptr %80, align 8, !dbg !19312
  %82 = icmp ne ptr %81, null, !dbg !19311
  br i1 %82, label %83, label %85, !dbg !19313

83:                                               ; preds = %78
  %84 = load ptr, ptr %9, align 8, !dbg !19314
  store ptr %84, ptr %4, align 8, !dbg !19315
  br label %94, !dbg !19315

85:                                               ; preds = %78, %69
  %86 = load i8, ptr %7, align 1, !dbg !19316
  %87 = trunc i8 %86 to i1, !dbg !19316
  br i1 %87, label %88, label %93, !dbg !19318

88:                                               ; preds = %85
  %89 = load ptr, ptr %10, align 8, !dbg !19319
  %90 = icmp ne ptr %89, null, !dbg !19319
  br i1 %90, label %91, label %93, !dbg !19320

91:                                               ; preds = %88
  %92 = load ptr, ptr %10, align 8, !dbg !19321
  store ptr %92, ptr %4, align 8, !dbg !19322
  br label %94, !dbg !19322

93:                                               ; preds = %88, %85
  store ptr null, ptr %4, align 8, !dbg !19323
  br label %94, !dbg !19323

94:                                               ; preds = %93, %91, %83
  %95 = load ptr, ptr %4, align 8, !dbg !19324
  store ptr %95, ptr %22, align 8, !dbg !19252
  %96 = load ptr, ptr %22, align 8, !dbg !19325
  %97 = icmp ne ptr %96, null, !dbg !19325
  br i1 %97, label %99, label %98, !dbg !19327

98:                                               ; preds = %94
  store ptr null, ptr %17, align 8, !dbg !19328
  br label %146, !dbg !19328

99:                                               ; preds = %94
  call void @llvm.dbg.declare(metadata ptr %23, metadata !19329, metadata !DIExpression()), !dbg !19330
  %100 = load ptr, ptr %22, align 8, !dbg !19331
  %101 = load ptr, ptr %19, align 8, !dbg !19332
  %102 = load i64, ptr %21, align 8, !dbg !19333
  store ptr %100, ptr %13, align 8
  call void @llvm.dbg.declare(metadata ptr %13, metadata !19146, metadata !DIExpression()), !dbg !19334
  store ptr %101, ptr %14, align 8
  call void @llvm.dbg.declare(metadata ptr %14, metadata !19152, metadata !DIExpression()), !dbg !19336
  store i64 %102, ptr %15, align 8
  call void @llvm.dbg.declare(metadata ptr %15, metadata !19154, metadata !DIExpression()), !dbg !19337
  call void @llvm.dbg.declare(metadata ptr %16, metadata !19156, metadata !DIExpression()), !dbg !19338
  %103 = load ptr, ptr %13, align 8, !dbg !19339
  %104 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %103, i32 0, i32 1, !dbg !19340
  %105 = load ptr, ptr %104, align 8, !dbg !19340
  store ptr %105, ptr %16, align 8, !dbg !19338
  %106 = load ptr, ptr %16, align 8, !dbg !19341
  %107 = icmp ne ptr %106, null, !dbg !19341
  br i1 %107, label %109, label %108, !dbg !19342

108:                                              ; preds = %99
  store ptr null, ptr %12, align 8, !dbg !19343
  br label %135, !dbg !19343

109:                                              ; preds = %99
  %110 = load ptr, ptr %16, align 8, !dbg !19344
  %111 = getelementptr inbounds %struct.anon.1, ptr %110, i32 0, i32 2, !dbg !19345
  %112 = load ptr, ptr %111, align 8, !dbg !19345
  %113 = icmp ne ptr %112, null, !dbg !19344
  br i1 %113, label %116, label %114, !dbg !19346

114:                                              ; preds = %109
  %115 = load ptr, ptr %16, align 8, !dbg !19347
  store ptr %115, ptr %12, align 8, !dbg !19348
  br label %135, !dbg !19348

116:                                              ; preds = %109
  br label %117, !dbg !19349

117:                                              ; preds = %130, %116
  %118 = load ptr, ptr %16, align 8, !dbg !19350
  %119 = icmp ne ptr %118, null, !dbg !19351
  br i1 %119, label %120, label %134, !dbg !19351

120:                                              ; preds = %117
  %121 = load ptr, ptr %16, align 8, !dbg !19352
  %122 = load ptr, ptr %121, align 8, !dbg !19353
  %123 = load ptr, ptr %14, align 8, !dbg !19354
  %124 = load i64, ptr %15, align 8, !dbg !19355
  %125 = sub i64 %124, 1, !dbg !19356
  %126 = call i32 @strncmp(ptr noundef %122, ptr noundef %123, i64 noundef %125) #22, !dbg !19357
  %127 = icmp ne i32 %126, 0, !dbg !19357
  br i1 %127, label %130, label %128, !dbg !19358

128:                                              ; preds = %120
  %129 = load ptr, ptr %16, align 8, !dbg !19359
  store ptr %129, ptr %12, align 8, !dbg !19360
  br label %135, !dbg !19360

130:                                              ; preds = %120
  %131 = load ptr, ptr %16, align 8, !dbg !19361
  %132 = getelementptr inbounds %struct.anon.1, ptr %131, i32 0, i32 2, !dbg !19362
  %133 = load ptr, ptr %132, align 8, !dbg !19362
  store ptr %133, ptr %16, align 8, !dbg !19363
  br label %117, !dbg !19364, !llvm.loop !19365

134:                                              ; preds = %117
  store ptr null, ptr %12, align 8, !dbg !19367
  br label %135, !dbg !19367

135:                                              ; preds = %134, %128, %114, %108
  %136 = load ptr, ptr %12, align 8, !dbg !19368
  store ptr %136, ptr %23, align 8, !dbg !19330
  %137 = load ptr, ptr %23, align 8, !dbg !19369
  %138 = icmp ne ptr %137, null, !dbg !19369
  br i1 %138, label %139, label %143, !dbg !19369

139:                                              ; preds = %135
  %140 = load ptr, ptr %23, align 8, !dbg !19370
  %141 = getelementptr inbounds %struct.anon.1, ptr %140, i32 0, i32 1, !dbg !19371
  %142 = load ptr, ptr %141, align 8, !dbg !19371
  br label %144, !dbg !19369

143:                                              ; preds = %135
  br label %144, !dbg !19369

144:                                              ; preds = %143, %139
  %145 = phi ptr [ %142, %139 ], [ null, %143 ], !dbg !19369
  store ptr %145, ptr %17, align 8, !dbg !19372
  br label %146, !dbg !19372

146:                                              ; preds = %144, %98, %31
  %147 = load ptr, ptr %17, align 8, !dbg !19373
  ret ptr %147, !dbg !19373
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local ptr @lwan_trie_lookup_prefix(ptr noundef %0, ptr noundef %1) #9 !dbg !19374 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i8, align 1
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca i64, align 8
  %15 = alloca ptr, align 8
  %16 = alloca ptr, align 8
  %17 = alloca ptr, align 8
  %18 = alloca ptr, align 8
  %19 = alloca i8, align 1
  %20 = alloca i64, align 8
  %21 = alloca ptr, align 8
  %22 = alloca ptr, align 8
  %23 = alloca ptr, align 8
  %24 = alloca ptr, align 8
  store ptr %0, ptr %23, align 8
  call void @llvm.dbg.declare(metadata ptr %23, metadata !19377, metadata !DIExpression()), !dbg !19378
  store ptr %1, ptr %24, align 8
  call void @llvm.dbg.declare(metadata ptr %24, metadata !19379, metadata !DIExpression()), !dbg !19380
  %25 = load ptr, ptr %23, align 8, !dbg !19381
  %26 = load ptr, ptr %24, align 8, !dbg !19382
  store ptr %25, ptr %17, align 8
  call void @llvm.dbg.declare(metadata ptr %17, metadata !19239, metadata !DIExpression()), !dbg !19383
  store ptr %26, ptr %18, align 8
  call void @llvm.dbg.declare(metadata ptr %18, metadata !19241, metadata !DIExpression()), !dbg !19385
  store i8 1, ptr %19, align 1
  call void @llvm.dbg.declare(metadata ptr %19, metadata !19243, metadata !DIExpression()), !dbg !19386
  %27 = load ptr, ptr %17, align 8, !dbg !19387
  %28 = icmp ne ptr %27, null, !dbg !19387
  %29 = xor i1 %28, true, !dbg !19387
  %30 = zext i1 %29 to i32, !dbg !19387
  %31 = sext i32 %30 to i64, !dbg !19387
  br i1 %29, label %32, label %33, !dbg !19388

32:                                               ; preds = %2
  store ptr null, ptr %16, align 8, !dbg !19389
  br label %146, !dbg !19389

33:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata ptr %20, metadata !19249, metadata !DIExpression()), !dbg !19390
  call void @llvm.dbg.declare(metadata ptr %21, metadata !19251, metadata !DIExpression()), !dbg !19391
  %34 = load ptr, ptr %17, align 8, !dbg !19392
  %35 = load ptr, ptr %34, align 8, !dbg !19393
  %36 = load ptr, ptr %18, align 8, !dbg !19394
  %37 = load i8, ptr %19, align 1, !dbg !19395
  %38 = trunc i8 %37 to i1, !dbg !19395
  store ptr %35, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !19257, metadata !DIExpression()), !dbg !19396
  store ptr %36, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !19263, metadata !DIExpression()), !dbg !19398
  %39 = zext i1 %38 to i8
  store i8 %39, ptr %6, align 1
  call void @llvm.dbg.declare(metadata ptr %6, metadata !19265, metadata !DIExpression()), !dbg !19399
  store ptr %20, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !19267, metadata !DIExpression()), !dbg !19400
  call void @llvm.dbg.declare(metadata ptr %8, metadata !19269, metadata !DIExpression()), !dbg !19401
  call void @llvm.dbg.declare(metadata ptr %9, metadata !19271, metadata !DIExpression()), !dbg !19402
  store ptr null, ptr %9, align 8, !dbg !19402
  call void @llvm.dbg.declare(metadata ptr %10, metadata !19273, metadata !DIExpression()), !dbg !19403
  %40 = load ptr, ptr %5, align 8, !dbg !19404
  store ptr %40, ptr %10, align 8, !dbg !19403
  %41 = load ptr, ptr %4, align 8, !dbg !19405
  store ptr %41, ptr %8, align 8, !dbg !19406
  br label %42, !dbg !19407

42:                                               ; preds = %59, %33
  %43 = load ptr, ptr %8, align 8, !dbg !19408
  %44 = icmp ne ptr %43, null, !dbg !19408
  br i1 %44, label %45, label %50, !dbg !19409

45:                                               ; preds = %42
  %46 = load ptr, ptr %5, align 8, !dbg !19410
  %47 = load i8, ptr %46, align 1, !dbg !19411
  %48 = sext i8 %47 to i32, !dbg !19411
  %49 = icmp ne i32 %48, 0, !dbg !19409
  br label %50

50:                                               ; preds = %45, %42
  %51 = phi i1 [ false, %42 ], [ %49, %45 ], !dbg !19412
  br i1 %51, label %52, label %69, !dbg !19413

52:                                               ; preds = %50
  %53 = load ptr, ptr %8, align 8, !dbg !19414
  %54 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %53, i32 0, i32 1, !dbg !19415
  %55 = load ptr, ptr %54, align 8, !dbg !19415
  %56 = icmp ne ptr %55, null, !dbg !19414
  br i1 %56, label %57, label %59, !dbg !19416

57:                                               ; preds = %52
  %58 = load ptr, ptr %8, align 8, !dbg !19417
  store ptr %58, ptr %9, align 8, !dbg !19418
  br label %59, !dbg !19419

59:                                               ; preds = %57, %52
  %60 = load ptr, ptr %8, align 8, !dbg !19420
  %61 = load ptr, ptr %5, align 8, !dbg !19421
  %62 = getelementptr inbounds i8, ptr %61, i32 1, !dbg !19421
  store ptr %62, ptr %5, align 8, !dbg !19421
  %63 = load i8, ptr %61, align 1, !dbg !19422
  %64 = sext i8 %63 to i32, !dbg !19422
  %65 = and i32 %64, 7, !dbg !19423
  %66 = sext i32 %65 to i64, !dbg !19420
  %67 = getelementptr inbounds [8 x ptr], ptr %60, i64 0, i64 %66, !dbg !19420
  %68 = load ptr, ptr %67, align 8, !dbg !19420
  store ptr %68, ptr %8, align 8, !dbg !19424
  br label %42, !dbg !19425, !llvm.loop !19426

69:                                               ; preds = %50
  %70 = load ptr, ptr %5, align 8, !dbg !19428
  %71 = load ptr, ptr %10, align 8, !dbg !19429
  %72 = ptrtoint ptr %70 to i64, !dbg !19430
  %73 = ptrtoint ptr %71 to i64, !dbg !19430
  %74 = sub i64 %72, %73, !dbg !19430
  %75 = load ptr, ptr %7, align 8, !dbg !19431
  store i64 %74, ptr %75, align 8, !dbg !19432
  %76 = load ptr, ptr %8, align 8, !dbg !19433
  %77 = icmp ne ptr %76, null, !dbg !19433
  br i1 %77, label %78, label %85, !dbg !19434

78:                                               ; preds = %69
  %79 = load ptr, ptr %8, align 8, !dbg !19435
  %80 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %79, i32 0, i32 1, !dbg !19436
  %81 = load ptr, ptr %80, align 8, !dbg !19436
  %82 = icmp ne ptr %81, null, !dbg !19435
  br i1 %82, label %83, label %85, !dbg !19437

83:                                               ; preds = %78
  %84 = load ptr, ptr %8, align 8, !dbg !19438
  store ptr %84, ptr %3, align 8, !dbg !19439
  br label %94, !dbg !19439

85:                                               ; preds = %78, %69
  %86 = load i8, ptr %6, align 1, !dbg !19440
  %87 = trunc i8 %86 to i1, !dbg !19440
  br i1 %87, label %88, label %93, !dbg !19441

88:                                               ; preds = %85
  %89 = load ptr, ptr %9, align 8, !dbg !19442
  %90 = icmp ne ptr %89, null, !dbg !19442
  br i1 %90, label %91, label %93, !dbg !19443

91:                                               ; preds = %88
  %92 = load ptr, ptr %9, align 8, !dbg !19444
  store ptr %92, ptr %3, align 8, !dbg !19445
  br label %94, !dbg !19445

93:                                               ; preds = %88, %85
  store ptr null, ptr %3, align 8, !dbg !19446
  br label %94, !dbg !19446

94:                                               ; preds = %93, %91, %83
  %95 = load ptr, ptr %3, align 8, !dbg !19447
  store ptr %95, ptr %21, align 8, !dbg !19391
  %96 = load ptr, ptr %21, align 8, !dbg !19448
  %97 = icmp ne ptr %96, null, !dbg !19448
  br i1 %97, label %99, label %98, !dbg !19449

98:                                               ; preds = %94
  store ptr null, ptr %16, align 8, !dbg !19450
  br label %146, !dbg !19450

99:                                               ; preds = %94
  call void @llvm.dbg.declare(metadata ptr %22, metadata !19329, metadata !DIExpression()), !dbg !19451
  %100 = load ptr, ptr %21, align 8, !dbg !19452
  %101 = load ptr, ptr %18, align 8, !dbg !19453
  %102 = load i64, ptr %20, align 8, !dbg !19454
  store ptr %100, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %12, metadata !19146, metadata !DIExpression()), !dbg !19455
  store ptr %101, ptr %13, align 8
  call void @llvm.dbg.declare(metadata ptr %13, metadata !19152, metadata !DIExpression()), !dbg !19457
  store i64 %102, ptr %14, align 8
  call void @llvm.dbg.declare(metadata ptr %14, metadata !19154, metadata !DIExpression()), !dbg !19458
  call void @llvm.dbg.declare(metadata ptr %15, metadata !19156, metadata !DIExpression()), !dbg !19459
  %103 = load ptr, ptr %12, align 8, !dbg !19460
  %104 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %103, i32 0, i32 1, !dbg !19461
  %105 = load ptr, ptr %104, align 8, !dbg !19461
  store ptr %105, ptr %15, align 8, !dbg !19459
  %106 = load ptr, ptr %15, align 8, !dbg !19462
  %107 = icmp ne ptr %106, null, !dbg !19462
  br i1 %107, label %109, label %108, !dbg !19463

108:                                              ; preds = %99
  store ptr null, ptr %11, align 8, !dbg !19464
  br label %135, !dbg !19464

109:                                              ; preds = %99
  %110 = load ptr, ptr %15, align 8, !dbg !19465
  %111 = getelementptr inbounds %struct.anon.1, ptr %110, i32 0, i32 2, !dbg !19466
  %112 = load ptr, ptr %111, align 8, !dbg !19466
  %113 = icmp ne ptr %112, null, !dbg !19465
  br i1 %113, label %116, label %114, !dbg !19467

114:                                              ; preds = %109
  %115 = load ptr, ptr %15, align 8, !dbg !19468
  store ptr %115, ptr %11, align 8, !dbg !19469
  br label %135, !dbg !19469

116:                                              ; preds = %109
  br label %117, !dbg !19470

117:                                              ; preds = %130, %116
  %118 = load ptr, ptr %15, align 8, !dbg !19471
  %119 = icmp ne ptr %118, null, !dbg !19472
  br i1 %119, label %120, label %134, !dbg !19472

120:                                              ; preds = %117
  %121 = load ptr, ptr %15, align 8, !dbg !19473
  %122 = load ptr, ptr %121, align 8, !dbg !19474
  %123 = load ptr, ptr %13, align 8, !dbg !19475
  %124 = load i64, ptr %14, align 8, !dbg !19476
  %125 = sub i64 %124, 1, !dbg !19477
  %126 = call i32 @strncmp(ptr noundef %122, ptr noundef %123, i64 noundef %125) #22, !dbg !19478
  %127 = icmp ne i32 %126, 0, !dbg !19478
  br i1 %127, label %130, label %128, !dbg !19479

128:                                              ; preds = %120
  %129 = load ptr, ptr %15, align 8, !dbg !19480
  store ptr %129, ptr %11, align 8, !dbg !19481
  br label %135, !dbg !19481

130:                                              ; preds = %120
  %131 = load ptr, ptr %15, align 8, !dbg !19482
  %132 = getelementptr inbounds %struct.anon.1, ptr %131, i32 0, i32 2, !dbg !19483
  %133 = load ptr, ptr %132, align 8, !dbg !19483
  store ptr %133, ptr %15, align 8, !dbg !19484
  br label %117, !dbg !19485, !llvm.loop !19486

134:                                              ; preds = %117
  store ptr null, ptr %11, align 8, !dbg !19488
  br label %135, !dbg !19488

135:                                              ; preds = %134, %128, %114, %108
  %136 = load ptr, ptr %11, align 8, !dbg !19489
  store ptr %136, ptr %22, align 8, !dbg !19451
  %137 = load ptr, ptr %22, align 8, !dbg !19490
  %138 = icmp ne ptr %137, null, !dbg !19490
  br i1 %138, label %139, label %143, !dbg !19490

139:                                              ; preds = %135
  %140 = load ptr, ptr %22, align 8, !dbg !19491
  %141 = getelementptr inbounds %struct.anon.1, ptr %140, i32 0, i32 1, !dbg !19492
  %142 = load ptr, ptr %141, align 8, !dbg !19492
  br label %144, !dbg !19490

143:                                              ; preds = %135
  br label %144, !dbg !19490

144:                                              ; preds = %143, %139
  %145 = phi ptr [ %142, %139 ], [ null, %143 ], !dbg !19490
  store ptr %145, ptr %16, align 8, !dbg !19493
  br label %146, !dbg !19493

146:                                              ; preds = %144, %98, %32
  %147 = load ptr, ptr %16, align 8, !dbg !19494
  ret ptr %147, !dbg !19495
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local ptr @lwan_trie_lookup_exact(ptr noundef %0, ptr noundef %1) #9 !dbg !19496 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i8, align 1
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca i64, align 8
  %15 = alloca ptr, align 8
  %16 = alloca ptr, align 8
  %17 = alloca ptr, align 8
  %18 = alloca ptr, align 8
  %19 = alloca i8, align 1
  %20 = alloca i64, align 8
  %21 = alloca ptr, align 8
  %22 = alloca ptr, align 8
  %23 = alloca ptr, align 8
  %24 = alloca ptr, align 8
  store ptr %0, ptr %23, align 8
  call void @llvm.dbg.declare(metadata ptr %23, metadata !19497, metadata !DIExpression()), !dbg !19498
  store ptr %1, ptr %24, align 8
  call void @llvm.dbg.declare(metadata ptr %24, metadata !19499, metadata !DIExpression()), !dbg !19500
  %25 = load ptr, ptr %23, align 8, !dbg !19501
  %26 = load ptr, ptr %24, align 8, !dbg !19502
  store ptr %25, ptr %17, align 8
  call void @llvm.dbg.declare(metadata ptr %17, metadata !19239, metadata !DIExpression()), !dbg !19503
  store ptr %26, ptr %18, align 8
  call void @llvm.dbg.declare(metadata ptr %18, metadata !19241, metadata !DIExpression()), !dbg !19505
  store i8 0, ptr %19, align 1
  call void @llvm.dbg.declare(metadata ptr %19, metadata !19243, metadata !DIExpression()), !dbg !19506
  %27 = load ptr, ptr %17, align 8, !dbg !19507
  %28 = icmp ne ptr %27, null, !dbg !19507
  %29 = xor i1 %28, true, !dbg !19507
  %30 = zext i1 %29 to i32, !dbg !19507
  %31 = sext i32 %30 to i64, !dbg !19507
  br i1 %29, label %32, label %33, !dbg !19508

32:                                               ; preds = %2
  store ptr null, ptr %16, align 8, !dbg !19509
  br label %146, !dbg !19509

33:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata ptr %20, metadata !19249, metadata !DIExpression()), !dbg !19510
  call void @llvm.dbg.declare(metadata ptr %21, metadata !19251, metadata !DIExpression()), !dbg !19511
  %34 = load ptr, ptr %17, align 8, !dbg !19512
  %35 = load ptr, ptr %34, align 8, !dbg !19513
  %36 = load ptr, ptr %18, align 8, !dbg !19514
  %37 = load i8, ptr %19, align 1, !dbg !19515
  %38 = trunc i8 %37 to i1, !dbg !19515
  store ptr %35, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !19257, metadata !DIExpression()), !dbg !19516
  store ptr %36, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !19263, metadata !DIExpression()), !dbg !19518
  %39 = zext i1 %38 to i8
  store i8 %39, ptr %6, align 1
  call void @llvm.dbg.declare(metadata ptr %6, metadata !19265, metadata !DIExpression()), !dbg !19519
  store ptr %20, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !19267, metadata !DIExpression()), !dbg !19520
  call void @llvm.dbg.declare(metadata ptr %8, metadata !19269, metadata !DIExpression()), !dbg !19521
  call void @llvm.dbg.declare(metadata ptr %9, metadata !19271, metadata !DIExpression()), !dbg !19522
  store ptr null, ptr %9, align 8, !dbg !19522
  call void @llvm.dbg.declare(metadata ptr %10, metadata !19273, metadata !DIExpression()), !dbg !19523
  %40 = load ptr, ptr %5, align 8, !dbg !19524
  store ptr %40, ptr %10, align 8, !dbg !19523
  %41 = load ptr, ptr %4, align 8, !dbg !19525
  store ptr %41, ptr %8, align 8, !dbg !19526
  br label %42, !dbg !19527

42:                                               ; preds = %59, %33
  %43 = load ptr, ptr %8, align 8, !dbg !19528
  %44 = icmp ne ptr %43, null, !dbg !19528
  br i1 %44, label %45, label %50, !dbg !19529

45:                                               ; preds = %42
  %46 = load ptr, ptr %5, align 8, !dbg !19530
  %47 = load i8, ptr %46, align 1, !dbg !19531
  %48 = sext i8 %47 to i32, !dbg !19531
  %49 = icmp ne i32 %48, 0, !dbg !19529
  br label %50

50:                                               ; preds = %45, %42
  %51 = phi i1 [ false, %42 ], [ %49, %45 ], !dbg !19532
  br i1 %51, label %52, label %69, !dbg !19533

52:                                               ; preds = %50
  %53 = load ptr, ptr %8, align 8, !dbg !19534
  %54 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %53, i32 0, i32 1, !dbg !19535
  %55 = load ptr, ptr %54, align 8, !dbg !19535
  %56 = icmp ne ptr %55, null, !dbg !19534
  br i1 %56, label %57, label %59, !dbg !19536

57:                                               ; preds = %52
  %58 = load ptr, ptr %8, align 8, !dbg !19537
  store ptr %58, ptr %9, align 8, !dbg !19538
  br label %59, !dbg !19539

59:                                               ; preds = %57, %52
  %60 = load ptr, ptr %8, align 8, !dbg !19540
  %61 = load ptr, ptr %5, align 8, !dbg !19541
  %62 = getelementptr inbounds i8, ptr %61, i32 1, !dbg !19541
  store ptr %62, ptr %5, align 8, !dbg !19541
  %63 = load i8, ptr %61, align 1, !dbg !19542
  %64 = sext i8 %63 to i32, !dbg !19542
  %65 = and i32 %64, 7, !dbg !19543
  %66 = sext i32 %65 to i64, !dbg !19540
  %67 = getelementptr inbounds [8 x ptr], ptr %60, i64 0, i64 %66, !dbg !19540
  %68 = load ptr, ptr %67, align 8, !dbg !19540
  store ptr %68, ptr %8, align 8, !dbg !19544
  br label %42, !dbg !19545, !llvm.loop !19546

69:                                               ; preds = %50
  %70 = load ptr, ptr %5, align 8, !dbg !19548
  %71 = load ptr, ptr %10, align 8, !dbg !19549
  %72 = ptrtoint ptr %70 to i64, !dbg !19550
  %73 = ptrtoint ptr %71 to i64, !dbg !19550
  %74 = sub i64 %72, %73, !dbg !19550
  %75 = load ptr, ptr %7, align 8, !dbg !19551
  store i64 %74, ptr %75, align 8, !dbg !19552
  %76 = load ptr, ptr %8, align 8, !dbg !19553
  %77 = icmp ne ptr %76, null, !dbg !19553
  br i1 %77, label %78, label %85, !dbg !19554

78:                                               ; preds = %69
  %79 = load ptr, ptr %8, align 8, !dbg !19555
  %80 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %79, i32 0, i32 1, !dbg !19556
  %81 = load ptr, ptr %80, align 8, !dbg !19556
  %82 = icmp ne ptr %81, null, !dbg !19555
  br i1 %82, label %83, label %85, !dbg !19557

83:                                               ; preds = %78
  %84 = load ptr, ptr %8, align 8, !dbg !19558
  store ptr %84, ptr %3, align 8, !dbg !19559
  br label %94, !dbg !19559

85:                                               ; preds = %78, %69
  %86 = load i8, ptr %6, align 1, !dbg !19560
  %87 = trunc i8 %86 to i1, !dbg !19560
  br i1 %87, label %88, label %93, !dbg !19561

88:                                               ; preds = %85
  %89 = load ptr, ptr %9, align 8, !dbg !19562
  %90 = icmp ne ptr %89, null, !dbg !19562
  br i1 %90, label %91, label %93, !dbg !19563

91:                                               ; preds = %88
  %92 = load ptr, ptr %9, align 8, !dbg !19564
  store ptr %92, ptr %3, align 8, !dbg !19565
  br label %94, !dbg !19565

93:                                               ; preds = %88, %85
  store ptr null, ptr %3, align 8, !dbg !19566
  br label %94, !dbg !19566

94:                                               ; preds = %93, %91, %83
  %95 = load ptr, ptr %3, align 8, !dbg !19567
  store ptr %95, ptr %21, align 8, !dbg !19511
  %96 = load ptr, ptr %21, align 8, !dbg !19568
  %97 = icmp ne ptr %96, null, !dbg !19568
  br i1 %97, label %99, label %98, !dbg !19569

98:                                               ; preds = %94
  store ptr null, ptr %16, align 8, !dbg !19570
  br label %146, !dbg !19570

99:                                               ; preds = %94
  call void @llvm.dbg.declare(metadata ptr %22, metadata !19329, metadata !DIExpression()), !dbg !19571
  %100 = load ptr, ptr %21, align 8, !dbg !19572
  %101 = load ptr, ptr %18, align 8, !dbg !19573
  %102 = load i64, ptr %20, align 8, !dbg !19574
  store ptr %100, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %12, metadata !19146, metadata !DIExpression()), !dbg !19575
  store ptr %101, ptr %13, align 8
  call void @llvm.dbg.declare(metadata ptr %13, metadata !19152, metadata !DIExpression()), !dbg !19577
  store i64 %102, ptr %14, align 8
  call void @llvm.dbg.declare(metadata ptr %14, metadata !19154, metadata !DIExpression()), !dbg !19578
  call void @llvm.dbg.declare(metadata ptr %15, metadata !19156, metadata !DIExpression()), !dbg !19579
  %103 = load ptr, ptr %12, align 8, !dbg !19580
  %104 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %103, i32 0, i32 1, !dbg !19581
  %105 = load ptr, ptr %104, align 8, !dbg !19581
  store ptr %105, ptr %15, align 8, !dbg !19579
  %106 = load ptr, ptr %15, align 8, !dbg !19582
  %107 = icmp ne ptr %106, null, !dbg !19582
  br i1 %107, label %109, label %108, !dbg !19583

108:                                              ; preds = %99
  store ptr null, ptr %11, align 8, !dbg !19584
  br label %135, !dbg !19584

109:                                              ; preds = %99
  %110 = load ptr, ptr %15, align 8, !dbg !19585
  %111 = getelementptr inbounds %struct.anon.1, ptr %110, i32 0, i32 2, !dbg !19586
  %112 = load ptr, ptr %111, align 8, !dbg !19586
  %113 = icmp ne ptr %112, null, !dbg !19585
  br i1 %113, label %116, label %114, !dbg !19587

114:                                              ; preds = %109
  %115 = load ptr, ptr %15, align 8, !dbg !19588
  store ptr %115, ptr %11, align 8, !dbg !19589
  br label %135, !dbg !19589

116:                                              ; preds = %109
  br label %117, !dbg !19590

117:                                              ; preds = %130, %116
  %118 = load ptr, ptr %15, align 8, !dbg !19591
  %119 = icmp ne ptr %118, null, !dbg !19592
  br i1 %119, label %120, label %134, !dbg !19592

120:                                              ; preds = %117
  %121 = load ptr, ptr %15, align 8, !dbg !19593
  %122 = load ptr, ptr %121, align 8, !dbg !19594
  %123 = load ptr, ptr %13, align 8, !dbg !19595
  %124 = load i64, ptr %14, align 8, !dbg !19596
  %125 = sub i64 %124, 1, !dbg !19597
  %126 = call i32 @strncmp(ptr noundef %122, ptr noundef %123, i64 noundef %125) #22, !dbg !19598
  %127 = icmp ne i32 %126, 0, !dbg !19598
  br i1 %127, label %130, label %128, !dbg !19599

128:                                              ; preds = %120
  %129 = load ptr, ptr %15, align 8, !dbg !19600
  store ptr %129, ptr %11, align 8, !dbg !19601
  br label %135, !dbg !19601

130:                                              ; preds = %120
  %131 = load ptr, ptr %15, align 8, !dbg !19602
  %132 = getelementptr inbounds %struct.anon.1, ptr %131, i32 0, i32 2, !dbg !19603
  %133 = load ptr, ptr %132, align 8, !dbg !19603
  store ptr %133, ptr %15, align 8, !dbg !19604
  br label %117, !dbg !19605, !llvm.loop !19606

134:                                              ; preds = %117
  store ptr null, ptr %11, align 8, !dbg !19608
  br label %135, !dbg !19608

135:                                              ; preds = %134, %128, %114, %108
  %136 = load ptr, ptr %11, align 8, !dbg !19609
  store ptr %136, ptr %22, align 8, !dbg !19571
  %137 = load ptr, ptr %22, align 8, !dbg !19610
  %138 = icmp ne ptr %137, null, !dbg !19610
  br i1 %138, label %139, label %143, !dbg !19610

139:                                              ; preds = %135
  %140 = load ptr, ptr %22, align 8, !dbg !19611
  %141 = getelementptr inbounds %struct.anon.1, ptr %140, i32 0, i32 1, !dbg !19612
  %142 = load ptr, ptr %141, align 8, !dbg !19612
  br label %144, !dbg !19610

143:                                              ; preds = %135
  br label %144, !dbg !19610

144:                                              ; preds = %143, %139
  %145 = phi ptr [ %142, %139 ], [ null, %143 ], !dbg !19610
  store ptr %145, ptr %16, align 8, !dbg !19613
  br label %146, !dbg !19613

146:                                              ; preds = %144, %98, %32
  %147 = load ptr, ptr %16, align 8, !dbg !19614
  ret ptr %147, !dbg !19615
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local i32 @lwan_trie_entry_count(ptr noundef %0) #9 !dbg !19616 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !19619, metadata !DIExpression()), !dbg !19620
  %3 = load ptr, ptr %2, align 8, !dbg !19621
  %4 = icmp ne ptr %3, null, !dbg !19621
  br i1 %4, label %5, label %16, !dbg !19622

5:                                                ; preds = %1
  %6 = load ptr, ptr %2, align 8, !dbg !19623
  %7 = getelementptr inbounds %struct.list_node, ptr %6, i32 0, i32 0, !dbg !19624
  %8 = load ptr, ptr %7, align 8, !dbg !19624
  %9 = icmp ne ptr %8, null, !dbg !19623
  br i1 %9, label %10, label %16, !dbg !19625

10:                                               ; preds = %5
  %11 = load ptr, ptr %2, align 8, !dbg !19626
  %12 = getelementptr inbounds %struct.list_node, ptr %11, i32 0, i32 0, !dbg !19627
  %13 = load ptr, ptr %12, align 8, !dbg !19627
  %14 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %13, i32 0, i32 2, !dbg !19628
  %15 = load i32, ptr %14, align 8, !dbg !19628
  br label %17, !dbg !19625

16:                                               ; preds = %5, %1
  br label %17, !dbg !19625

17:                                               ; preds = %16, %10
  %18 = phi i32 [ %15, %10 ], [ 0, %16 ], !dbg !19625
  ret i32 %18, !dbg !19629
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @lwan_trie_destroy(ptr noundef %0) #0 !dbg !19630 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !19633, metadata !DIExpression()), !dbg !19634
  %3 = load ptr, ptr %2, align 8, !dbg !19635
  %4 = icmp ne ptr %3, null, !dbg !19635
  br i1 %4, label %5, label %10, !dbg !19637

5:                                                ; preds = %1
  %6 = load ptr, ptr %2, align 8, !dbg !19638
  %7 = getelementptr inbounds %struct.list_node, ptr %6, i32 0, i32 0, !dbg !19639
  %8 = load ptr, ptr %7, align 8, !dbg !19639
  %9 = icmp ne ptr %8, null, !dbg !19638
  br i1 %9, label %11, label %10, !dbg !19640

10:                                               ; preds = %5, %1
  br label %16, !dbg !19641

11:                                               ; preds = %5
  %12 = load ptr, ptr %2, align 8, !dbg !19642
  %13 = load ptr, ptr %2, align 8, !dbg !19643
  %14 = getelementptr inbounds %struct.list_node, ptr %13, i32 0, i32 0, !dbg !19644
  %15 = load ptr, ptr %14, align 8, !dbg !19644
  call void @lwan_trie_node_destroy(ptr noundef %12, ptr noundef %15), !dbg !19645
  br label %16, !dbg !19646

16:                                               ; preds = %11, %10
  ret void, !dbg !19646
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @lwan_trie_node_destroy(ptr noundef %0, ptr noundef %1) #0 !dbg !19647 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !19650, metadata !DIExpression()), !dbg !19651
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !19652, metadata !DIExpression()), !dbg !19653
  %9 = load ptr, ptr %4, align 8, !dbg !19654
  %10 = icmp ne ptr %9, null, !dbg !19654
  br i1 %10, label %12, label %11, !dbg !19656

11:                                               ; preds = %2
  br label %76, !dbg !19657

12:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata ptr %5, metadata !19658, metadata !DIExpression()), !dbg !19659
  %13 = load ptr, ptr %4, align 8, !dbg !19660
  %14 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %13, i32 0, i32 2, !dbg !19661
  %15 = load i32, ptr %14, align 8, !dbg !19661
  store i32 %15, ptr %5, align 4, !dbg !19659
  call void @llvm.dbg.declare(metadata ptr %6, metadata !19662, metadata !DIExpression()), !dbg !19664
  %16 = load ptr, ptr %4, align 8, !dbg !19665
  %17 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %16, i32 0, i32 1, !dbg !19666
  %18 = load ptr, ptr %17, align 8, !dbg !19666
  store ptr %18, ptr %6, align 8, !dbg !19664
  br label %19, !dbg !19667

19:                                               ; preds = %37, %12
  %20 = load ptr, ptr %6, align 8, !dbg !19668
  %21 = icmp ne ptr %20, null, !dbg !19670
  br i1 %21, label %22, label %43, !dbg !19670

22:                                               ; preds = %19
  call void @llvm.dbg.declare(metadata ptr %7, metadata !19671, metadata !DIExpression()), !dbg !19673
  %23 = load ptr, ptr %6, align 8, !dbg !19674
  %24 = getelementptr inbounds %struct.anon.1, ptr %23, i32 0, i32 2, !dbg !19675
  %25 = load ptr, ptr %24, align 8, !dbg !19675
  store ptr %25, ptr %7, align 8, !dbg !19673
  %26 = load ptr, ptr %3, align 8, !dbg !19676
  %27 = getelementptr inbounds %struct.list_node, ptr %26, i32 0, i32 1, !dbg !19678
  %28 = load ptr, ptr %27, align 8, !dbg !19678
  %29 = icmp ne ptr %28, null, !dbg !19676
  br i1 %29, label %30, label %37, !dbg !19679

30:                                               ; preds = %22
  %31 = load ptr, ptr %3, align 8, !dbg !19680
  %32 = getelementptr inbounds %struct.list_node, ptr %31, i32 0, i32 1, !dbg !19681
  %33 = load ptr, ptr %32, align 8, !dbg !19681
  %34 = load ptr, ptr %6, align 8, !dbg !19682
  %35 = getelementptr inbounds %struct.anon.1, ptr %34, i32 0, i32 1, !dbg !19683
  %36 = load ptr, ptr %35, align 8, !dbg !19683
  call void %33(ptr noundef %36), !dbg !19680
  br label %37, !dbg !19680

37:                                               ; preds = %30, %22
  %38 = load ptr, ptr %6, align 8, !dbg !19684
  %39 = getelementptr inbounds %struct.anon.1, ptr %38, i32 0, i32 0, !dbg !19685
  %40 = load ptr, ptr %39, align 8, !dbg !19685
  call void @free(ptr noundef %40) #18, !dbg !19686
  %41 = load ptr, ptr %6, align 8, !dbg !19687
  call void @free(ptr noundef %41) #18, !dbg !19688
  %42 = load ptr, ptr %7, align 8, !dbg !19689
  store ptr %42, ptr %6, align 8, !dbg !19690
  br label %19, !dbg !19691, !llvm.loop !19692

43:                                               ; preds = %19
  call void @llvm.dbg.declare(metadata ptr %8, metadata !19694, metadata !DIExpression()), !dbg !19696
  store i32 0, ptr %8, align 4, !dbg !19696
  br label %44, !dbg !19697

44:                                               ; preds = %71, %43
  %45 = load i32, ptr %5, align 4, !dbg !19698
  %46 = icmp sgt i32 %45, 0, !dbg !19700
  br i1 %46, label %47, label %50, !dbg !19701

47:                                               ; preds = %44
  %48 = load i32, ptr %8, align 4, !dbg !19702
  %49 = icmp slt i32 %48, 8, !dbg !19703
  br label %50

50:                                               ; preds = %47, %44
  %51 = phi i1 [ false, %44 ], [ %49, %47 ], !dbg !19704
  br i1 %51, label %52, label %74, !dbg !19705

52:                                               ; preds = %50
  %53 = load ptr, ptr %4, align 8, !dbg !19706
  %54 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %53, i32 0, i32 0, !dbg !19709
  %55 = load i32, ptr %8, align 4, !dbg !19710
  %56 = sext i32 %55 to i64, !dbg !19706
  %57 = getelementptr inbounds [8 x ptr], ptr %54, i64 0, i64 %56, !dbg !19706
  %58 = load ptr, ptr %57, align 8, !dbg !19706
  %59 = icmp ne ptr %58, null, !dbg !19706
  br i1 %59, label %60, label %70, !dbg !19711

60:                                               ; preds = %52
  %61 = load ptr, ptr %3, align 8, !dbg !19712
  %62 = load ptr, ptr %4, align 8, !dbg !19714
  %63 = getelementptr inbounds %struct.lwan_trie_node_t_, ptr %62, i32 0, i32 0, !dbg !19715
  %64 = load i32, ptr %8, align 4, !dbg !19716
  %65 = sext i32 %64 to i64, !dbg !19714
  %66 = getelementptr inbounds [8 x ptr], ptr %63, i64 0, i64 %65, !dbg !19714
  %67 = load ptr, ptr %66, align 8, !dbg !19714
  call void @lwan_trie_node_destroy(ptr noundef %61, ptr noundef %67), !dbg !19717
  %68 = load i32, ptr %5, align 4, !dbg !19718
  %69 = add nsw i32 %68, -1, !dbg !19718
  store i32 %69, ptr %5, align 4, !dbg !19718
  br label %70, !dbg !19719

70:                                               ; preds = %60, %52
  br label %71, !dbg !19720

71:                                               ; preds = %70
  %72 = load i32, ptr %8, align 4, !dbg !19721
  %73 = add nsw i32 %72, 1, !dbg !19721
  store i32 %73, ptr %8, align 4, !dbg !19721
  br label %44, !dbg !19722, !llvm.loop !19723

74:                                               ; preds = %50
  %75 = load ptr, ptr %4, align 8, !dbg !19725
  call void @free(ptr noundef %75) #18, !dbg !19726
  br label %76, !dbg !19727

76:                                               ; preds = %74, %11
  ret void, !dbg !19727
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @murmur3_simple(ptr noundef %0) #0 !dbg !19728 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  %6 = alloca i64, align 8
  %7 = alloca i8, align 1
  %8 = alloca i64, align 8
  %9 = alloca i8, align 1
  %10 = alloca i64, align 8
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i8, align 1
  %14 = alloca i64, align 8
  %15 = alloca i8, align 1
  %16 = alloca ptr, align 8
  %17 = alloca i64, align 8
  %18 = alloca i32, align 4
  %19 = alloca ptr, align 8
  %20 = alloca ptr, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  %24 = alloca i64, align 8
  %25 = alloca i64, align 8
  %26 = alloca i64, align 8
  %27 = alloca ptr, align 8
  %28 = alloca i64, align 8
  %29 = alloca i64, align 8
  %30 = alloca ptr, align 8
  %31 = alloca i64, align 8
  %32 = alloca i64, align 8
  %33 = alloca ptr, align 8
  %34 = alloca i64, align 8
  %35 = alloca [2 x i64], align 16
  store ptr %0, ptr %33, align 8
  call void @llvm.dbg.declare(metadata ptr %33, metadata !19729, metadata !DIExpression()), !dbg !19730
  call void @llvm.dbg.declare(metadata ptr %34, metadata !19731, metadata !DIExpression()), !dbg !19732
  %36 = load ptr, ptr %33, align 8, !dbg !19733
  %37 = call i64 @strlen(ptr noundef %36) #22, !dbg !19734
  store i64 %37, ptr %34, align 8, !dbg !19732
  call void @llvm.dbg.declare(metadata ptr %35, metadata !19735, metadata !DIExpression()), !dbg !19737
  %38 = load ptr, ptr %33, align 8, !dbg !19738
  %39 = load i64, ptr %34, align 8, !dbg !19739
  %40 = load i32, ptr @seed_value, align 4, !dbg !19740
  %41 = getelementptr inbounds [2 x i64], ptr %35, i64 0, i64 0, !dbg !19741
  store ptr %38, ptr %16, align 8
  call void @llvm.dbg.declare(metadata ptr %16, metadata !19742, metadata !DIExpression()), !dbg !19746
  store i64 %39, ptr %17, align 8
  call void @llvm.dbg.declare(metadata ptr %17, metadata !19748, metadata !DIExpression()), !dbg !19749
  store i32 %40, ptr %18, align 4
  call void @llvm.dbg.declare(metadata ptr %18, metadata !19750, metadata !DIExpression()), !dbg !19751
  store ptr %41, ptr %19, align 8
  call void @llvm.dbg.declare(metadata ptr %19, metadata !19752, metadata !DIExpression()), !dbg !19753
  call void @llvm.dbg.declare(metadata ptr %20, metadata !19754, metadata !DIExpression()), !dbg !19755
  %42 = load ptr, ptr %16, align 8, !dbg !19756
  store ptr %42, ptr %20, align 8, !dbg !19755
  call void @llvm.dbg.declare(metadata ptr %21, metadata !19757, metadata !DIExpression()), !dbg !19758
  %43 = load i64, ptr %17, align 8, !dbg !19759
  %44 = udiv i64 %43, 16, !dbg !19760
  store i64 %44, ptr %21, align 8, !dbg !19758
  call void @llvm.dbg.declare(metadata ptr %22, metadata !19761, metadata !DIExpression()), !dbg !19762
  call void @llvm.dbg.declare(metadata ptr %23, metadata !19763, metadata !DIExpression()), !dbg !19764
  %45 = load i32, ptr %18, align 4, !dbg !19765
  %46 = zext i32 %45 to i64, !dbg !19765
  store i64 %46, ptr %23, align 8, !dbg !19764
  call void @llvm.dbg.declare(metadata ptr %24, metadata !19766, metadata !DIExpression()), !dbg !19767
  %47 = load i32, ptr %18, align 4, !dbg !19768
  %48 = zext i32 %47 to i64, !dbg !19768
  store i64 %48, ptr %24, align 8, !dbg !19767
  call void @llvm.dbg.declare(metadata ptr %25, metadata !19769, metadata !DIExpression()), !dbg !19770
  store i64 -8663945395140668459, ptr %25, align 8, !dbg !19770
  call void @llvm.dbg.declare(metadata ptr %26, metadata !19771, metadata !DIExpression()), !dbg !19772
  store i64 5545529020109919103, ptr %26, align 8, !dbg !19772
  call void @llvm.dbg.declare(metadata ptr %27, metadata !19773, metadata !DIExpression()), !dbg !19774
  %49 = load ptr, ptr %20, align 8, !dbg !19775
  store ptr %49, ptr %27, align 8, !dbg !19774
  store i64 0, ptr %22, align 8, !dbg !19776
  br label %50, !dbg !19778

50:                                               ; preds = %54, %1
  %51 = load i64, ptr %22, align 8, !dbg !19779
  %52 = load i64, ptr %21, align 8, !dbg !19781
  %53 = icmp ult i64 %51, %52, !dbg !19782
  br i1 %53, label %54, label %148, !dbg !19783

54:                                               ; preds = %50
  call void @llvm.dbg.declare(metadata ptr %28, metadata !19784, metadata !DIExpression()), !dbg !19786
  call void @llvm.dbg.declare(metadata ptr %29, metadata !19787, metadata !DIExpression()), !dbg !19788
  %55 = load ptr, ptr %27, align 8, !dbg !19789
  %56 = load i64, ptr %22, align 8, !dbg !19790
  %57 = mul i64 %56, 2, !dbg !19791
  %58 = getelementptr inbounds i64, ptr %55, i64 %57, !dbg !19792
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %28, ptr align 8 %58, i64 8, i1 false), !dbg !19793
  %59 = load ptr, ptr %27, align 8, !dbg !19794
  %60 = load i64, ptr %22, align 8, !dbg !19795
  %61 = mul i64 %60, 2, !dbg !19796
  %62 = getelementptr inbounds i64, ptr %59, i64 %61, !dbg !19797
  %63 = getelementptr inbounds i64, ptr %62, i64 1, !dbg !19798
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %29, ptr align 8 %63, i64 8, i1 false), !dbg !19799
  %64 = load i64, ptr %25, align 8, !dbg !19800
  %65 = load i64, ptr %28, align 8, !dbg !19801
  %66 = mul i64 %65, %64, !dbg !19801
  store i64 %66, ptr %28, align 8, !dbg !19801
  %67 = load i64, ptr %28, align 8, !dbg !19802
  store i64 %67, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !19803, metadata !DIExpression()), !dbg !19809
  store i8 31, ptr %9, align 1
  call void @llvm.dbg.declare(metadata ptr %9, metadata !19811, metadata !DIExpression()), !dbg !19812
  %68 = load i64, ptr %8, align 8, !dbg !19813
  %69 = load i8, ptr %9, align 1, !dbg !19814
  %70 = sext i8 %69 to i32, !dbg !19814
  %71 = zext i32 %70 to i64, !dbg !19815
  %72 = shl i64 %68, %71, !dbg !19815
  %73 = load i64, ptr %8, align 8, !dbg !19816
  %74 = load i8, ptr %9, align 1, !dbg !19817
  %75 = sext i8 %74 to i32, !dbg !19817
  %76 = sub nsw i32 64, %75, !dbg !19818
  %77 = zext i32 %76 to i64, !dbg !19819
  %78 = lshr i64 %73, %77, !dbg !19819
  %79 = or i64 %72, %78, !dbg !19820
  store i64 %79, ptr %28, align 8, !dbg !19821
  %80 = load i64, ptr %26, align 8, !dbg !19822
  %81 = load i64, ptr %28, align 8, !dbg !19823
  %82 = mul i64 %81, %80, !dbg !19823
  store i64 %82, ptr %28, align 8, !dbg !19823
  %83 = load i64, ptr %28, align 8, !dbg !19824
  %84 = load i64, ptr %23, align 8, !dbg !19825
  %85 = xor i64 %84, %83, !dbg !19825
  store i64 %85, ptr %23, align 8, !dbg !19825
  %86 = load i64, ptr %23, align 8, !dbg !19826
  store i64 %86, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %10, metadata !19803, metadata !DIExpression()), !dbg !19827
  store i8 27, ptr %11, align 1
  call void @llvm.dbg.declare(metadata ptr %11, metadata !19811, metadata !DIExpression()), !dbg !19829
  %87 = load i64, ptr %10, align 8, !dbg !19830
  %88 = load i8, ptr %11, align 1, !dbg !19831
  %89 = sext i8 %88 to i32, !dbg !19831
  %90 = zext i32 %89 to i64, !dbg !19832
  %91 = shl i64 %87, %90, !dbg !19832
  %92 = load i64, ptr %10, align 8, !dbg !19833
  %93 = load i8, ptr %11, align 1, !dbg !19834
  %94 = sext i8 %93 to i32, !dbg !19834
  %95 = sub nsw i32 64, %94, !dbg !19835
  %96 = zext i32 %95 to i64, !dbg !19836
  %97 = lshr i64 %92, %96, !dbg !19836
  %98 = or i64 %91, %97, !dbg !19837
  store i64 %98, ptr %23, align 8, !dbg !19838
  %99 = load i64, ptr %24, align 8, !dbg !19839
  %100 = load i64, ptr %23, align 8, !dbg !19840
  %101 = add i64 %100, %99, !dbg !19840
  store i64 %101, ptr %23, align 8, !dbg !19840
  %102 = load i64, ptr %23, align 8, !dbg !19841
  %103 = mul i64 %102, 5, !dbg !19842
  %104 = add i64 %103, 1390208809, !dbg !19843
  store i64 %104, ptr %23, align 8, !dbg !19844
  %105 = load i64, ptr %26, align 8, !dbg !19845
  %106 = load i64, ptr %29, align 8, !dbg !19846
  %107 = mul i64 %106, %105, !dbg !19846
  store i64 %107, ptr %29, align 8, !dbg !19846
  %108 = load i64, ptr %29, align 8, !dbg !19847
  store i64 %108, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %12, metadata !19803, metadata !DIExpression()), !dbg !19848
  store i8 33, ptr %13, align 1
  call void @llvm.dbg.declare(metadata ptr %13, metadata !19811, metadata !DIExpression()), !dbg !19850
  %109 = load i64, ptr %12, align 8, !dbg !19851
  %110 = load i8, ptr %13, align 1, !dbg !19852
  %111 = sext i8 %110 to i32, !dbg !19852
  %112 = zext i32 %111 to i64, !dbg !19853
  %113 = shl i64 %109, %112, !dbg !19853
  %114 = load i64, ptr %12, align 8, !dbg !19854
  %115 = load i8, ptr %13, align 1, !dbg !19855
  %116 = sext i8 %115 to i32, !dbg !19855
  %117 = sub nsw i32 64, %116, !dbg !19856
  %118 = zext i32 %117 to i64, !dbg !19857
  %119 = lshr i64 %114, %118, !dbg !19857
  %120 = or i64 %113, %119, !dbg !19858
  store i64 %120, ptr %29, align 8, !dbg !19859
  %121 = load i64, ptr %25, align 8, !dbg !19860
  %122 = load i64, ptr %29, align 8, !dbg !19861
  %123 = mul i64 %122, %121, !dbg !19861
  store i64 %123, ptr %29, align 8, !dbg !19861
  %124 = load i64, ptr %29, align 8, !dbg !19862
  %125 = load i64, ptr %24, align 8, !dbg !19863
  %126 = xor i64 %125, %124, !dbg !19863
  store i64 %126, ptr %24, align 8, !dbg !19863
  %127 = load i64, ptr %24, align 8, !dbg !19864
  store i64 %127, ptr %14, align 8
  call void @llvm.dbg.declare(metadata ptr %14, metadata !19803, metadata !DIExpression()), !dbg !19865
  store i8 31, ptr %15, align 1
  call void @llvm.dbg.declare(metadata ptr %15, metadata !19811, metadata !DIExpression()), !dbg !19867
  %128 = load i64, ptr %14, align 8, !dbg !19868
  %129 = load i8, ptr %15, align 1, !dbg !19869
  %130 = sext i8 %129 to i32, !dbg !19869
  %131 = zext i32 %130 to i64, !dbg !19870
  %132 = shl i64 %128, %131, !dbg !19870
  %133 = load i64, ptr %14, align 8, !dbg !19871
  %134 = load i8, ptr %15, align 1, !dbg !19872
  %135 = sext i8 %134 to i32, !dbg !19872
  %136 = sub nsw i32 64, %135, !dbg !19873
  %137 = zext i32 %136 to i64, !dbg !19874
  %138 = lshr i64 %133, %137, !dbg !19874
  %139 = or i64 %132, %138, !dbg !19875
  store i64 %139, ptr %24, align 8, !dbg !19876
  %140 = load i64, ptr %23, align 8, !dbg !19877
  %141 = load i64, ptr %24, align 8, !dbg !19878
  %142 = add i64 %141, %140, !dbg !19878
  store i64 %142, ptr %24, align 8, !dbg !19878
  %143 = load i64, ptr %24, align 8, !dbg !19879
  %144 = mul i64 %143, 5, !dbg !19880
  %145 = add i64 %144, 944331445, !dbg !19881
  store i64 %145, ptr %24, align 8, !dbg !19882
  %146 = load i64, ptr %22, align 8, !dbg !19883
  %147 = add i64 %146, 1, !dbg !19883
  store i64 %147, ptr %22, align 8, !dbg !19883
  br label %50, !dbg !19884, !llvm.loop !19885

148:                                              ; preds = %50
  call void @llvm.dbg.declare(metadata ptr %30, metadata !19887, metadata !DIExpression()), !dbg !19888
  %149 = load ptr, ptr %20, align 8, !dbg !19889
  %150 = load i64, ptr %21, align 8, !dbg !19890
  %151 = mul i64 %150, 16, !dbg !19891
  %152 = getelementptr inbounds i8, ptr %149, i64 %151, !dbg !19892
  store ptr %152, ptr %30, align 8, !dbg !19888
  call void @llvm.dbg.declare(metadata ptr %31, metadata !19893, metadata !DIExpression()), !dbg !19894
  store i64 0, ptr %31, align 8, !dbg !19894
  call void @llvm.dbg.declare(metadata ptr %32, metadata !19895, metadata !DIExpression()), !dbg !19896
  store i64 0, ptr %32, align 8, !dbg !19896
  %153 = load i64, ptr %17, align 8, !dbg !19897
  %154 = and i64 %153, 15, !dbg !19898
  switch i64 %154, label %316 [
    i64 15, label %155
    i64 14, label %163
    i64 13, label %171
    i64 12, label %179
    i64 11, label %187
    i64 10, label %195
    i64 9, label %203
    i64 8, label %232
    i64 7, label %240
    i64 6, label %248
    i64 5, label %256
    i64 4, label %264
    i64 3, label %272
    i64 2, label %280
    i64 1, label %288
  ], !dbg !19899

155:                                              ; preds = %148
  %156 = load ptr, ptr %30, align 8, !dbg !19900
  %157 = getelementptr inbounds i8, ptr %156, i64 14, !dbg !19900
  %158 = load i8, ptr %157, align 1, !dbg !19900
  %159 = zext i8 %158 to i64, !dbg !19902
  %160 = shl i64 %159, 48, !dbg !19903
  %161 = load i64, ptr %32, align 8, !dbg !19904
  %162 = xor i64 %161, %160, !dbg !19904
  store i64 %162, ptr %32, align 8, !dbg !19904
  br label %163, !dbg !19905

163:                                              ; preds = %155, %148
  %164 = load ptr, ptr %30, align 8, !dbg !19906
  %165 = getelementptr inbounds i8, ptr %164, i64 13, !dbg !19906
  %166 = load i8, ptr %165, align 1, !dbg !19906
  %167 = zext i8 %166 to i64, !dbg !19907
  %168 = shl i64 %167, 40, !dbg !19908
  %169 = load i64, ptr %32, align 8, !dbg !19909
  %170 = xor i64 %169, %168, !dbg !19909
  store i64 %170, ptr %32, align 8, !dbg !19909
  br label %171, !dbg !19910

171:                                              ; preds = %163, %148
  %172 = load ptr, ptr %30, align 8, !dbg !19911
  %173 = getelementptr inbounds i8, ptr %172, i64 12, !dbg !19911
  %174 = load i8, ptr %173, align 1, !dbg !19911
  %175 = zext i8 %174 to i64, !dbg !19912
  %176 = shl i64 %175, 32, !dbg !19913
  %177 = load i64, ptr %32, align 8, !dbg !19914
  %178 = xor i64 %177, %176, !dbg !19914
  store i64 %178, ptr %32, align 8, !dbg !19914
  br label %179, !dbg !19915

179:                                              ; preds = %171, %148
  %180 = load ptr, ptr %30, align 8, !dbg !19916
  %181 = getelementptr inbounds i8, ptr %180, i64 11, !dbg !19916
  %182 = load i8, ptr %181, align 1, !dbg !19916
  %183 = zext i8 %182 to i64, !dbg !19917
  %184 = shl i64 %183, 24, !dbg !19918
  %185 = load i64, ptr %32, align 8, !dbg !19919
  %186 = xor i64 %185, %184, !dbg !19919
  store i64 %186, ptr %32, align 8, !dbg !19919
  br label %187, !dbg !19920

187:                                              ; preds = %179, %148
  %188 = load ptr, ptr %30, align 8, !dbg !19921
  %189 = getelementptr inbounds i8, ptr %188, i64 10, !dbg !19921
  %190 = load i8, ptr %189, align 1, !dbg !19921
  %191 = zext i8 %190 to i64, !dbg !19922
  %192 = shl i64 %191, 16, !dbg !19923
  %193 = load i64, ptr %32, align 8, !dbg !19924
  %194 = xor i64 %193, %192, !dbg !19924
  store i64 %194, ptr %32, align 8, !dbg !19924
  br label %195, !dbg !19925

195:                                              ; preds = %187, %148
  %196 = load ptr, ptr %30, align 8, !dbg !19926
  %197 = getelementptr inbounds i8, ptr %196, i64 9, !dbg !19926
  %198 = load i8, ptr %197, align 1, !dbg !19926
  %199 = zext i8 %198 to i64, !dbg !19927
  %200 = shl i64 %199, 8, !dbg !19928
  %201 = load i64, ptr %32, align 8, !dbg !19929
  %202 = xor i64 %201, %200, !dbg !19929
  store i64 %202, ptr %32, align 8, !dbg !19929
  br label %203, !dbg !19930

203:                                              ; preds = %195, %148
  %204 = load ptr, ptr %30, align 8, !dbg !19931
  %205 = getelementptr inbounds i8, ptr %204, i64 8, !dbg !19931
  %206 = load i8, ptr %205, align 1, !dbg !19931
  %207 = zext i8 %206 to i64, !dbg !19932
  %208 = load i64, ptr %32, align 8, !dbg !19933
  %209 = xor i64 %208, %207, !dbg !19933
  store i64 %209, ptr %32, align 8, !dbg !19933
  %210 = load i64, ptr %26, align 8, !dbg !19934
  %211 = load i64, ptr %32, align 8, !dbg !19935
  %212 = mul i64 %211, %210, !dbg !19935
  store i64 %212, ptr %32, align 8, !dbg !19935
  %213 = load i64, ptr %32, align 8, !dbg !19936
  store i64 %213, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !19803, metadata !DIExpression()), !dbg !19937
  store i8 33, ptr %7, align 1
  call void @llvm.dbg.declare(metadata ptr %7, metadata !19811, metadata !DIExpression()), !dbg !19939
  %214 = load i64, ptr %6, align 8, !dbg !19940
  %215 = load i8, ptr %7, align 1, !dbg !19941
  %216 = sext i8 %215 to i32, !dbg !19941
  %217 = zext i32 %216 to i64, !dbg !19942
  %218 = shl i64 %214, %217, !dbg !19942
  %219 = load i64, ptr %6, align 8, !dbg !19943
  %220 = load i8, ptr %7, align 1, !dbg !19944
  %221 = sext i8 %220 to i32, !dbg !19944
  %222 = sub nsw i32 64, %221, !dbg !19945
  %223 = zext i32 %222 to i64, !dbg !19946
  %224 = lshr i64 %219, %223, !dbg !19946
  %225 = or i64 %218, %224, !dbg !19947
  store i64 %225, ptr %32, align 8, !dbg !19948
  %226 = load i64, ptr %25, align 8, !dbg !19949
  %227 = load i64, ptr %32, align 8, !dbg !19950
  %228 = mul i64 %227, %226, !dbg !19950
  store i64 %228, ptr %32, align 8, !dbg !19950
  %229 = load i64, ptr %32, align 8, !dbg !19951
  %230 = load i64, ptr %24, align 8, !dbg !19952
  %231 = xor i64 %230, %229, !dbg !19952
  store i64 %231, ptr %24, align 8, !dbg !19952
  br label %232, !dbg !19953

232:                                              ; preds = %203, %148
  %233 = load ptr, ptr %30, align 8, !dbg !19954
  %234 = getelementptr inbounds i8, ptr %233, i64 7, !dbg !19954
  %235 = load i8, ptr %234, align 1, !dbg !19954
  %236 = zext i8 %235 to i64, !dbg !19955
  %237 = shl i64 %236, 56, !dbg !19956
  %238 = load i64, ptr %31, align 8, !dbg !19957
  %239 = xor i64 %238, %237, !dbg !19957
  store i64 %239, ptr %31, align 8, !dbg !19957
  br label %240, !dbg !19958

240:                                              ; preds = %232, %148
  %241 = load ptr, ptr %30, align 8, !dbg !19959
  %242 = getelementptr inbounds i8, ptr %241, i64 6, !dbg !19959
  %243 = load i8, ptr %242, align 1, !dbg !19959
  %244 = zext i8 %243 to i64, !dbg !19960
  %245 = shl i64 %244, 48, !dbg !19961
  %246 = load i64, ptr %31, align 8, !dbg !19962
  %247 = xor i64 %246, %245, !dbg !19962
  store i64 %247, ptr %31, align 8, !dbg !19962
  br label %248, !dbg !19963

248:                                              ; preds = %240, %148
  %249 = load ptr, ptr %30, align 8, !dbg !19964
  %250 = getelementptr inbounds i8, ptr %249, i64 5, !dbg !19964
  %251 = load i8, ptr %250, align 1, !dbg !19964
  %252 = zext i8 %251 to i64, !dbg !19965
  %253 = shl i64 %252, 40, !dbg !19966
  %254 = load i64, ptr %31, align 8, !dbg !19967
  %255 = xor i64 %254, %253, !dbg !19967
  store i64 %255, ptr %31, align 8, !dbg !19967
  br label %256, !dbg !19968

256:                                              ; preds = %248, %148
  %257 = load ptr, ptr %30, align 8, !dbg !19969
  %258 = getelementptr inbounds i8, ptr %257, i64 4, !dbg !19969
  %259 = load i8, ptr %258, align 1, !dbg !19969
  %260 = zext i8 %259 to i64, !dbg !19970
  %261 = shl i64 %260, 32, !dbg !19971
  %262 = load i64, ptr %31, align 8, !dbg !19972
  %263 = xor i64 %262, %261, !dbg !19972
  store i64 %263, ptr %31, align 8, !dbg !19972
  br label %264, !dbg !19973

264:                                              ; preds = %256, %148
  %265 = load ptr, ptr %30, align 8, !dbg !19974
  %266 = getelementptr inbounds i8, ptr %265, i64 3, !dbg !19974
  %267 = load i8, ptr %266, align 1, !dbg !19974
  %268 = zext i8 %267 to i64, !dbg !19975
  %269 = shl i64 %268, 24, !dbg !19976
  %270 = load i64, ptr %31, align 8, !dbg !19977
  %271 = xor i64 %270, %269, !dbg !19977
  store i64 %271, ptr %31, align 8, !dbg !19977
  br label %272, !dbg !19978

272:                                              ; preds = %264, %148
  %273 = load ptr, ptr %30, align 8, !dbg !19979
  %274 = getelementptr inbounds i8, ptr %273, i64 2, !dbg !19979
  %275 = load i8, ptr %274, align 1, !dbg !19979
  %276 = zext i8 %275 to i64, !dbg !19980
  %277 = shl i64 %276, 16, !dbg !19981
  %278 = load i64, ptr %31, align 8, !dbg !19982
  %279 = xor i64 %278, %277, !dbg !19982
  store i64 %279, ptr %31, align 8, !dbg !19982
  br label %280, !dbg !19983

280:                                              ; preds = %272, %148
  %281 = load ptr, ptr %30, align 8, !dbg !19984
  %282 = getelementptr inbounds i8, ptr %281, i64 1, !dbg !19984
  %283 = load i8, ptr %282, align 1, !dbg !19984
  %284 = zext i8 %283 to i64, !dbg !19985
  %285 = shl i64 %284, 8, !dbg !19986
  %286 = load i64, ptr %31, align 8, !dbg !19987
  %287 = xor i64 %286, %285, !dbg !19987
  store i64 %287, ptr %31, align 8, !dbg !19987
  br label %288, !dbg !19988

288:                                              ; preds = %280, %148
  %289 = load ptr, ptr %30, align 8, !dbg !19989
  %290 = load i8, ptr %289, align 1, !dbg !19989
  %291 = zext i8 %290 to i64, !dbg !19990
  %292 = load i64, ptr %31, align 8, !dbg !19991
  %293 = xor i64 %292, %291, !dbg !19991
  store i64 %293, ptr %31, align 8, !dbg !19991
  %294 = load i64, ptr %25, align 8, !dbg !19992
  %295 = load i64, ptr %31, align 8, !dbg !19993
  %296 = mul i64 %295, %294, !dbg !19993
  store i64 %296, ptr %31, align 8, !dbg !19993
  %297 = load i64, ptr %31, align 8, !dbg !19994
  store i64 %297, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !19803, metadata !DIExpression()), !dbg !19995
  store i8 31, ptr %5, align 1
  call void @llvm.dbg.declare(metadata ptr %5, metadata !19811, metadata !DIExpression()), !dbg !19997
  %298 = load i64, ptr %4, align 8, !dbg !19998
  %299 = load i8, ptr %5, align 1, !dbg !19999
  %300 = sext i8 %299 to i32, !dbg !19999
  %301 = zext i32 %300 to i64, !dbg !20000
  %302 = shl i64 %298, %301, !dbg !20000
  %303 = load i64, ptr %4, align 8, !dbg !20001
  %304 = load i8, ptr %5, align 1, !dbg !20002
  %305 = sext i8 %304 to i32, !dbg !20002
  %306 = sub nsw i32 64, %305, !dbg !20003
  %307 = zext i32 %306 to i64, !dbg !20004
  %308 = lshr i64 %303, %307, !dbg !20004
  %309 = or i64 %302, %308, !dbg !20005
  store i64 %309, ptr %31, align 8, !dbg !20006
  %310 = load i64, ptr %26, align 8, !dbg !20007
  %311 = load i64, ptr %31, align 8, !dbg !20008
  %312 = mul i64 %311, %310, !dbg !20008
  store i64 %312, ptr %31, align 8, !dbg !20008
  %313 = load i64, ptr %31, align 8, !dbg !20009
  %314 = load i64, ptr %23, align 8, !dbg !20010
  %315 = xor i64 %314, %313, !dbg !20010
  store i64 %315, ptr %23, align 8, !dbg !20010
  br label %316, !dbg !20011

316:                                              ; preds = %288, %148
  %317 = load i64, ptr %17, align 8, !dbg !20012
  %318 = load i64, ptr %23, align 8, !dbg !20013
  %319 = xor i64 %318, %317, !dbg !20013
  store i64 %319, ptr %23, align 8, !dbg !20013
  %320 = load i64, ptr %17, align 8, !dbg !20014
  %321 = load i64, ptr %24, align 8, !dbg !20015
  %322 = xor i64 %321, %320, !dbg !20015
  store i64 %322, ptr %24, align 8, !dbg !20015
  %323 = load i64, ptr %24, align 8, !dbg !20016
  %324 = load i64, ptr %23, align 8, !dbg !20017
  %325 = add i64 %324, %323, !dbg !20017
  store i64 %325, ptr %23, align 8, !dbg !20017
  %326 = load i64, ptr %23, align 8, !dbg !20018
  %327 = load i64, ptr %24, align 8, !dbg !20019
  %328 = add i64 %327, %326, !dbg !20019
  store i64 %328, ptr %24, align 8, !dbg !20019
  %329 = load i64, ptr %23, align 8, !dbg !20020
  store i64 %329, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !20021, metadata !DIExpression()), !dbg !20025
  %330 = load i64, ptr %2, align 8, !dbg !20027
  %331 = lshr i64 %330, 33, !dbg !20028
  %332 = load i64, ptr %2, align 8, !dbg !20029
  %333 = xor i64 %332, %331, !dbg !20029
  store i64 %333, ptr %2, align 8, !dbg !20029
  %334 = load i64, ptr %2, align 8, !dbg !20030
  %335 = mul i64 %334, -49064778989728563, !dbg !20030
  store i64 %335, ptr %2, align 8, !dbg !20030
  %336 = load i64, ptr %2, align 8, !dbg !20031
  %337 = lshr i64 %336, 33, !dbg !20032
  %338 = load i64, ptr %2, align 8, !dbg !20033
  %339 = xor i64 %338, %337, !dbg !20033
  store i64 %339, ptr %2, align 8, !dbg !20033
  %340 = load i64, ptr %2, align 8, !dbg !20034
  %341 = mul i64 %340, -4265267296055464877, !dbg !20034
  store i64 %341, ptr %2, align 8, !dbg !20034
  %342 = load i64, ptr %2, align 8, !dbg !20035
  %343 = lshr i64 %342, 33, !dbg !20036
  %344 = load i64, ptr %2, align 8, !dbg !20037
  %345 = xor i64 %344, %343, !dbg !20037
  store i64 %345, ptr %2, align 8, !dbg !20037
  %346 = load i64, ptr %2, align 8, !dbg !20038
  store i64 %346, ptr %23, align 8, !dbg !20039
  %347 = load i64, ptr %24, align 8, !dbg !20040
  store i64 %347, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !20021, metadata !DIExpression()), !dbg !20041
  %348 = load i64, ptr %3, align 8, !dbg !20043
  %349 = lshr i64 %348, 33, !dbg !20044
  %350 = load i64, ptr %3, align 8, !dbg !20045
  %351 = xor i64 %350, %349, !dbg !20045
  store i64 %351, ptr %3, align 8, !dbg !20045
  %352 = load i64, ptr %3, align 8, !dbg !20046
  %353 = mul i64 %352, -49064778989728563, !dbg !20046
  store i64 %353, ptr %3, align 8, !dbg !20046
  %354 = load i64, ptr %3, align 8, !dbg !20047
  %355 = lshr i64 %354, 33, !dbg !20048
  %356 = load i64, ptr %3, align 8, !dbg !20049
  %357 = xor i64 %356, %355, !dbg !20049
  store i64 %357, ptr %3, align 8, !dbg !20049
  %358 = load i64, ptr %3, align 8, !dbg !20050
  %359 = mul i64 %358, -4265267296055464877, !dbg !20050
  store i64 %359, ptr %3, align 8, !dbg !20050
  %360 = load i64, ptr %3, align 8, !dbg !20051
  %361 = lshr i64 %360, 33, !dbg !20052
  %362 = load i64, ptr %3, align 8, !dbg !20053
  %363 = xor i64 %362, %361, !dbg !20053
  store i64 %363, ptr %3, align 8, !dbg !20053
  %364 = load i64, ptr %3, align 8, !dbg !20054
  store i64 %364, ptr %24, align 8, !dbg !20055
  %365 = load i64, ptr %24, align 8, !dbg !20056
  %366 = load i64, ptr %23, align 8, !dbg !20057
  %367 = add i64 %366, %365, !dbg !20057
  store i64 %367, ptr %23, align 8, !dbg !20057
  %368 = load i64, ptr %23, align 8, !dbg !20058
  %369 = load i64, ptr %24, align 8, !dbg !20059
  %370 = add i64 %369, %368, !dbg !20059
  store i64 %370, ptr %24, align 8, !dbg !20059
  %371 = load i64, ptr %23, align 8, !dbg !20060
  %372 = load ptr, ptr %19, align 8, !dbg !20061
  store i64 %371, ptr %372, align 8, !dbg !20062
  %373 = load i64, ptr %24, align 8, !dbg !20063
  %374 = load ptr, ptr %19, align 8, !dbg !20064
  %375 = getelementptr inbounds i64, ptr %374, i64 1, !dbg !20065
  store i64 %373, ptr %375, align 8, !dbg !20066
  %376 = getelementptr inbounds [2 x i64], ptr %35, i64 0, i64 1, !dbg !20067
  %377 = load i64, ptr %376, align 8, !dbg !20067
  %378 = trunc i64 %377 to i32, !dbg !20068
  ret i32 %378, !dbg !20069
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @murmur3_set_seed(i32 noundef %0) #0 !dbg !20070 {
  %2 = alloca i32, align 4
  store i32 %0, ptr %2, align 4
  call void @llvm.dbg.declare(metadata ptr %2, metadata !20073, metadata !DIExpression()), !dbg !20074
  %3 = load i32, ptr %2, align 4, !dbg !20075
  store i32 %3, ptr @seed_value, align 4, !dbg !20076
  ret void, !dbg !20077
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @reallocarray(ptr noundef %0, i64 noundef %1, i64 noundef %2) #0 !dbg !20078 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !20082, metadata !DIExpression()), !dbg !20083
  store i64 %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !20084, metadata !DIExpression()), !dbg !20085
  store i64 %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !20086, metadata !DIExpression()), !dbg !20087
  call void @llvm.dbg.declare(metadata ptr %8, metadata !20088, metadata !DIExpression()), !dbg !20089
  %9 = load i64, ptr %6, align 8, !dbg !20090
  %10 = load i64, ptr %7, align 8, !dbg !20090
  %11 = call zeroext i1 @umull_overflow(i64 noundef %9, i64 noundef %10, ptr noundef %8), !dbg !20090
  br i1 %11, label %12, label %14, !dbg !20092

12:                                               ; preds = %3
  %13 = call ptr @__errno_location() #20, !dbg !20093
  store i32 12, ptr %13, align 4, !dbg !20095
  store ptr null, ptr %4, align 8, !dbg !20096
  br label %18, !dbg !20096

14:                                               ; preds = %3
  %15 = load ptr, ptr %5, align 8, !dbg !20097
  %16 = load i64, ptr %8, align 8, !dbg !20098
  %17 = call ptr @realloc(ptr noundef %15, i64 noundef %16) #24, !dbg !20099
  store ptr %17, ptr %4, align 8, !dbg !20100
  br label %18, !dbg !20100

18:                                               ; preds = %14, %12
  %19 = load ptr, ptr %4, align 8, !dbg !20101
  ret ptr %19, !dbg !20101
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @umull_overflow(i64 noundef %0, i64 noundef %1, ptr noundef %2) #0 !dbg !20102 {
  %4 = alloca i1, align 1
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca ptr, align 8
  store i64 %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !20105, metadata !DIExpression()), !dbg !20106
  store i64 %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !20107, metadata !DIExpression()), !dbg !20108
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !20109, metadata !DIExpression()), !dbg !20110
  %8 = load i64, ptr %5, align 8, !dbg !20111
  %9 = icmp uge i64 %8, 4294967296, !dbg !20113
  br i1 %9, label %13, label %10, !dbg !20114

10:                                               ; preds = %3
  %11 = load i64, ptr %6, align 8, !dbg !20115
  %12 = icmp uge i64 %11, 4294967296, !dbg !20116
  br i1 %12, label %13, label %22, !dbg !20117

13:                                               ; preds = %10, %3
  %14 = load i64, ptr %5, align 8, !dbg !20118
  %15 = icmp ugt i64 %14, 0, !dbg !20119
  br i1 %15, label %16, label %22, !dbg !20120

16:                                               ; preds = %13
  %17 = load i64, ptr %5, align 8, !dbg !20121
  %18 = udiv i64 -1, %17, !dbg !20122
  %19 = load i64, ptr %6, align 8, !dbg !20123
  %20 = icmp ult i64 %18, %19, !dbg !20124
  br i1 %20, label %21, label %22, !dbg !20125

21:                                               ; preds = %16
  store i1 true, ptr %4, align 1, !dbg !20126
  br label %27, !dbg !20126

22:                                               ; preds = %16, %13, %10
  %23 = load i64, ptr %5, align 8, !dbg !20127
  %24 = load i64, ptr %6, align 8, !dbg !20128
  %25 = mul i64 %23, %24, !dbg !20129
  %26 = load ptr, ptr %7, align 8, !dbg !20130
  store i64 %25, ptr %26, align 8, !dbg !20131
  store i1 false, ptr %4, align 1, !dbg !20132
  br label %27, !dbg !20132

27:                                               ; preds = %22, %21
  %28 = load i1, ptr %4, align 1, !dbg !20133
  ret i1 %28, !dbg !20133
}

; Function Attrs: nounwind allocsize(1)
declare ptr @realloc(ptr noundef, i64 noundef) #16

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @realpathat2(i32 noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4) #0 !dbg !20134 {
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca [4096 x i8], align 16
  %15 = alloca ptr, align 8
  %16 = alloca ptr, align 8
  %17 = alloca ptr, align 8
  %18 = alloca i32, align 4
  %19 = alloca i64, align 8
  %20 = alloca ptr, align 8
  %21 = alloca i32, align 4
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  %24 = alloca ptr, align 8
  %25 = alloca [4096 x i8], align 16
  %26 = alloca i64, align 8
  store i32 %0, ptr %7, align 4
  call void @llvm.dbg.declare(metadata ptr %7, metadata !20159, metadata !DIExpression()), !dbg !20160
  store ptr %1, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !20161, metadata !DIExpression()), !dbg !20162
  store ptr %2, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !20163, metadata !DIExpression()), !dbg !20164
  store ptr %3, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %10, metadata !20165, metadata !DIExpression()), !dbg !20166
  store ptr %4, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !20167, metadata !DIExpression()), !dbg !20168
  call void @llvm.dbg.declare(metadata ptr %12, metadata !20169, metadata !DIExpression()), !dbg !20170
  call void @llvm.dbg.declare(metadata ptr %13, metadata !20171, metadata !DIExpression()), !dbg !20172
  call void @llvm.dbg.declare(metadata ptr %14, metadata !20173, metadata !DIExpression()), !dbg !20174
  call void @llvm.dbg.declare(metadata ptr %15, metadata !20175, metadata !DIExpression()), !dbg !20176
  call void @llvm.dbg.declare(metadata ptr %16, metadata !20177, metadata !DIExpression()), !dbg !20178
  call void @llvm.dbg.declare(metadata ptr %17, metadata !20179, metadata !DIExpression()), !dbg !20180
  call void @llvm.dbg.declare(metadata ptr %18, metadata !20181, metadata !DIExpression()), !dbg !20182
  store i32 0, ptr %18, align 4, !dbg !20182
  call void @llvm.dbg.declare(metadata ptr %19, metadata !20183, metadata !DIExpression()), !dbg !20184
  call void @llvm.dbg.declare(metadata ptr %20, metadata !20185, metadata !DIExpression()), !dbg !20186
  %27 = load i32, ptr %7, align 4, !dbg !20187
  %28 = icmp slt i32 %27, 0, !dbg !20187
  br i1 %28, label %38, label %29, !dbg !20187

29:                                               ; preds = %5
  %30 = load ptr, ptr %8, align 8, !dbg !20187
  %31 = icmp eq ptr %30, null, !dbg !20187
  br i1 %31, label %38, label %32, !dbg !20187

32:                                               ; preds = %29
  %33 = load ptr, ptr %9, align 8, !dbg !20187
  %34 = getelementptr inbounds i8, ptr %33, i64 0, !dbg !20187
  %35 = load i8, ptr %34, align 1, !dbg !20187
  %36 = sext i8 %35 to i32, !dbg !20187
  %37 = icmp eq i32 %36, 47, !dbg !20187
  br label %38, !dbg !20187

38:                                               ; preds = %32, %29, %5
  %39 = phi i1 [ true, %29 ], [ true, %5 ], [ %37, %32 ]
  %40 = zext i1 %39 to i32, !dbg !20187
  %41 = sext i32 %40 to i64, !dbg !20187
  %42 = icmp ne i64 %41, 0, !dbg !20187
  br i1 %42, label %43, label %47, !dbg !20189

43:                                               ; preds = %38
  %44 = load ptr, ptr %9, align 8, !dbg !20190
  %45 = load ptr, ptr %10, align 8, !dbg !20191
  %46 = call ptr @realpath(ptr noundef %44, ptr noundef %45) #18, !dbg !20192
  store ptr %46, ptr %6, align 8, !dbg !20193
  br label %485, !dbg !20193

47:                                               ; preds = %38
  %48 = load ptr, ptr %9, align 8, !dbg !20194
  %49 = icmp eq ptr %48, null, !dbg !20194
  %50 = zext i1 %49 to i32, !dbg !20194
  %51 = sext i32 %50 to i64, !dbg !20194
  %52 = icmp ne i64 %51, 0, !dbg !20194
  br i1 %52, label %53, label %55, !dbg !20196

53:                                               ; preds = %47
  %54 = call ptr @__errno_location() #20, !dbg !20197
  store i32 22, ptr %54, align 4, !dbg !20199
  store ptr null, ptr %6, align 8, !dbg !20200
  br label %485, !dbg !20200

55:                                               ; preds = %47
  %56 = load ptr, ptr %9, align 8, !dbg !20201
  %57 = getelementptr inbounds i8, ptr %56, i64 0, !dbg !20201
  %58 = load i8, ptr %57, align 1, !dbg !20201
  %59 = sext i8 %58 to i32, !dbg !20201
  %60 = icmp eq i32 %59, 0, !dbg !20203
  br i1 %60, label %61, label %86, !dbg !20204

61:                                               ; preds = %55
  %62 = load i32, ptr %7, align 4, !dbg !20205
  %63 = load ptr, ptr %11, align 8, !dbg !20205
  %64 = call i32 @fstat(i32 noundef %62, ptr noundef %63) #18, !dbg !20205
  %65 = icmp slt i32 %64, 0, !dbg !20205
  %66 = zext i1 %65 to i32, !dbg !20205
  %67 = sext i32 %66 to i64, !dbg !20205
  %68 = icmp ne i64 %67, 0, !dbg !20205
  br i1 %68, label %69, label %70, !dbg !20208

69:                                               ; preds = %61
  store ptr null, ptr %6, align 8, !dbg !20209
  br label %485, !dbg !20209

70:                                               ; preds = %61
  %71 = load ptr, ptr %10, align 8, !dbg !20210
  %72 = icmp ne ptr %71, null, !dbg !20210
  %73 = xor i1 %72, true, !dbg !20210
  %74 = xor i1 %73, true, !dbg !20210
  %75 = xor i1 %74, true, !dbg !20210
  %76 = zext i1 %75 to i32, !dbg !20210
  %77 = sext i32 %76 to i64, !dbg !20210
  %78 = icmp ne i64 %77, 0, !dbg !20210
  br i1 %78, label %79, label %82, !dbg !20212

79:                                               ; preds = %70
  %80 = load ptr, ptr %8, align 8, !dbg !20213
  %81 = call noalias ptr @strdup(ptr noundef %80) #18, !dbg !20214
  store ptr %81, ptr %6, align 8, !dbg !20215
  br label %485, !dbg !20215

82:                                               ; preds = %70
  %83 = load ptr, ptr %10, align 8, !dbg !20216
  %84 = load ptr, ptr %8, align 8, !dbg !20217
  %85 = call ptr @strcpy(ptr noundef %83, ptr noundef %84) #18, !dbg !20218
  store ptr %85, ptr %6, align 8, !dbg !20219
  br label %485, !dbg !20219

86:                                               ; preds = %55
  %87 = load ptr, ptr %10, align 8, !dbg !20220
  %88 = icmp ne ptr %87, null, !dbg !20220
  %89 = xor i1 %88, true, !dbg !20220
  %90 = xor i1 %89, true, !dbg !20220
  %91 = xor i1 %90, true, !dbg !20220
  %92 = zext i1 %91 to i32, !dbg !20220
  %93 = sext i32 %92 to i64, !dbg !20220
  %94 = icmp ne i64 %93, 0, !dbg !20220
  br i1 %94, label %95, label %105, !dbg !20222

95:                                               ; preds = %86
  %96 = call noalias ptr @malloc(i64 noundef 4096) #17, !dbg !20223
  store ptr %96, ptr %12, align 8, !dbg !20225
  %97 = load ptr, ptr %12, align 8, !dbg !20226
  %98 = icmp ne ptr %97, null, !dbg !20226
  %99 = xor i1 %98, true, !dbg !20226
  %100 = zext i1 %99 to i32, !dbg !20226
  %101 = sext i32 %100 to i64, !dbg !20226
  %102 = icmp ne i64 %101, 0, !dbg !20226
  br i1 %102, label %103, label %104, !dbg !20228

103:                                              ; preds = %95
  store ptr null, ptr %6, align 8, !dbg !20229
  br label %485, !dbg !20229

104:                                              ; preds = %95
  br label %107, !dbg !20230

105:                                              ; preds = %86
  %106 = load ptr, ptr %10, align 8, !dbg !20231
  store ptr %106, ptr %12, align 8, !dbg !20232
  br label %107

107:                                              ; preds = %105, %104
  %108 = load ptr, ptr %12, align 8, !dbg !20233
  %109 = getelementptr inbounds i8, ptr %108, i64 4096, !dbg !20234
  store ptr %109, ptr %17, align 8, !dbg !20235
  %110 = load ptr, ptr %12, align 8, !dbg !20236
  %111 = load ptr, ptr %8, align 8, !dbg !20237
  %112 = call ptr @strcpy(ptr noundef %110, ptr noundef %111) #18, !dbg !20238
  %113 = load ptr, ptr %12, align 8, !dbg !20239
  %114 = call ptr @rawmemchr(ptr noundef %113, i32 noundef 0) #22, !dbg !20240
  store ptr %114, ptr %13, align 8, !dbg !20241
  %115 = load ptr, ptr %13, align 8, !dbg !20242
  %116 = load ptr, ptr %12, align 8, !dbg !20243
  %117 = ptrtoint ptr %115 to i64, !dbg !20244
  %118 = ptrtoint ptr %116 to i64, !dbg !20244
  %119 = sub i64 %117, %118, !dbg !20244
  store i64 %119, ptr %19, align 8, !dbg !20245
  %120 = load ptr, ptr %9, align 8, !dbg !20246
  store ptr %120, ptr %16, align 8, !dbg !20248
  store ptr %120, ptr %15, align 8, !dbg !20249
  br label %121, !dbg !20250

121:                                              ; preds = %442, %107
  %122 = load ptr, ptr %15, align 8, !dbg !20251
  %123 = load i8, ptr %122, align 1, !dbg !20253
  %124 = icmp ne i8 %123, 0, !dbg !20254
  br i1 %124, label %125, label %444, !dbg !20254

125:                                              ; preds = %121
  call void @llvm.dbg.declare(metadata ptr %21, metadata !20255, metadata !DIExpression()), !dbg !20257
  br label %126, !dbg !20258

126:                                              ; preds = %131, %125
  %127 = load ptr, ptr %15, align 8, !dbg !20259
  %128 = load i8, ptr %127, align 1, !dbg !20260
  %129 = sext i8 %128 to i32, !dbg !20260
  %130 = icmp eq i32 %129, 47, !dbg !20261
  br i1 %130, label %131, label %134, !dbg !20258

131:                                              ; preds = %126
  %132 = load ptr, ptr %15, align 8, !dbg !20262
  %133 = getelementptr inbounds i8, ptr %132, i32 1, !dbg !20262
  store ptr %133, ptr %15, align 8, !dbg !20262
  br label %126, !dbg !20258, !llvm.loop !20263

134:                                              ; preds = %126
  %135 = load ptr, ptr %15, align 8, !dbg !20265
  store ptr %135, ptr %16, align 8, !dbg !20267
  br label %136, !dbg !20268

136:                                              ; preds = %149, %134
  %137 = load ptr, ptr %16, align 8, !dbg !20269
  %138 = load i8, ptr %137, align 1, !dbg !20271
  %139 = sext i8 %138 to i32, !dbg !20271
  %140 = icmp ne i32 %139, 0, !dbg !20271
  br i1 %140, label %141, label %146, !dbg !20272

141:                                              ; preds = %136
  %142 = load ptr, ptr %16, align 8, !dbg !20273
  %143 = load i8, ptr %142, align 1, !dbg !20274
  %144 = sext i8 %143 to i32, !dbg !20274
  %145 = icmp ne i32 %144, 47, !dbg !20275
  br label %146

146:                                              ; preds = %141, %136
  %147 = phi i1 [ false, %136 ], [ %145, %141 ], !dbg !20276
  br i1 %147, label %148, label %152, !dbg !20277

148:                                              ; preds = %146
  br label %149, !dbg !20277

149:                                              ; preds = %148
  %150 = load ptr, ptr %16, align 8, !dbg !20278
  %151 = getelementptr inbounds i8, ptr %150, i32 1, !dbg !20278
  store ptr %151, ptr %16, align 8, !dbg !20278
  br label %136, !dbg !20279, !llvm.loop !20280

152:                                              ; preds = %146
  %153 = load ptr, ptr %16, align 8, !dbg !20282
  %154 = load ptr, ptr %15, align 8, !dbg !20284
  %155 = ptrtoint ptr %153 to i64, !dbg !20285
  %156 = ptrtoint ptr %154 to i64, !dbg !20285
  %157 = sub i64 %155, %156, !dbg !20285
  %158 = icmp eq i64 %157, 0, !dbg !20286
  br i1 %158, label %159, label %160, !dbg !20287

159:                                              ; preds = %152
  br label %444, !dbg !20288

160:                                              ; preds = %152
  %161 = load ptr, ptr %16, align 8, !dbg !20289
  %162 = load ptr, ptr %15, align 8, !dbg !20291
  %163 = ptrtoint ptr %161 to i64, !dbg !20292
  %164 = ptrtoint ptr %162 to i64, !dbg !20292
  %165 = sub i64 %163, %164, !dbg !20292
  %166 = icmp eq i64 %165, 1, !dbg !20293
  br i1 %166, label %167, label %174, !dbg !20294

167:                                              ; preds = %160
  %168 = load ptr, ptr %15, align 8, !dbg !20295
  %169 = getelementptr inbounds i8, ptr %168, i64 0, !dbg !20295
  %170 = load i8, ptr %169, align 1, !dbg !20295
  %171 = sext i8 %170 to i32, !dbg !20295
  %172 = icmp eq i32 %171, 46, !dbg !20296
  br i1 %172, label %173, label %174, !dbg !20297

173:                                              ; preds = %167
  br label %440, !dbg !20297

174:                                              ; preds = %167, %160
  %175 = load ptr, ptr %16, align 8, !dbg !20298
  %176 = load ptr, ptr %15, align 8, !dbg !20300
  %177 = ptrtoint ptr %175 to i64, !dbg !20301
  %178 = ptrtoint ptr %176 to i64, !dbg !20301
  %179 = sub i64 %177, %178, !dbg !20301
  %180 = icmp eq i64 %179, 2, !dbg !20302
  br i1 %180, label %181, label %209, !dbg !20303

181:                                              ; preds = %174
  %182 = load ptr, ptr %15, align 8, !dbg !20304
  %183 = getelementptr inbounds i8, ptr %182, i64 0, !dbg !20304
  %184 = load i8, ptr %183, align 1, !dbg !20304
  %185 = sext i8 %184 to i32, !dbg !20304
  %186 = icmp eq i32 %185, 46, !dbg !20305
  br i1 %186, label %187, label %209, !dbg !20306

187:                                              ; preds = %181
  %188 = load ptr, ptr %15, align 8, !dbg !20307
  %189 = getelementptr inbounds i8, ptr %188, i64 1, !dbg !20307
  %190 = load i8, ptr %189, align 1, !dbg !20307
  %191 = sext i8 %190 to i32, !dbg !20307
  %192 = icmp eq i32 %191, 46, !dbg !20308
  br i1 %192, label %193, label %209, !dbg !20309

193:                                              ; preds = %187
  %194 = load ptr, ptr %13, align 8, !dbg !20310
  %195 = load ptr, ptr %12, align 8, !dbg !20313
  %196 = getelementptr inbounds i8, ptr %195, i64 1, !dbg !20314
  %197 = icmp ugt ptr %194, %196, !dbg !20315
  br i1 %197, label %198, label %208, !dbg !20316

198:                                              ; preds = %193
  br label %199, !dbg !20317

199:                                              ; preds = %206, %198
  %200 = load ptr, ptr %13, align 8, !dbg !20318
  %201 = getelementptr inbounds i8, ptr %200, i32 -1, !dbg !20318
  store ptr %201, ptr %13, align 8, !dbg !20318
  %202 = getelementptr inbounds i8, ptr %201, i64 -1, !dbg !20319
  %203 = load i8, ptr %202, align 1, !dbg !20319
  %204 = sext i8 %203 to i32, !dbg !20319
  %205 = icmp ne i32 %204, 47, !dbg !20320
  br i1 %205, label %206, label %207, !dbg !20317

206:                                              ; preds = %199
  br label %199, !dbg !20317, !llvm.loop !20321

207:                                              ; preds = %199
  br label %208, !dbg !20317

208:                                              ; preds = %207, %193
  br label %439, !dbg !20323

209:                                              ; preds = %187, %181, %174
  call void @llvm.dbg.declare(metadata ptr %22, metadata !20324, metadata !DIExpression()), !dbg !20326
  %210 = load ptr, ptr %13, align 8, !dbg !20327
  %211 = getelementptr inbounds i8, ptr %210, i64 -1, !dbg !20327
  %212 = load i8, ptr %211, align 1, !dbg !20327
  %213 = sext i8 %212 to i32, !dbg !20327
  %214 = icmp ne i32 %213, 47, !dbg !20329
  br i1 %214, label %215, label %218, !dbg !20330

215:                                              ; preds = %209
  %216 = load ptr, ptr %13, align 8, !dbg !20331
  %217 = getelementptr inbounds i8, ptr %216, i32 1, !dbg !20331
  store ptr %217, ptr %13, align 8, !dbg !20331
  store i8 47, ptr %216, align 1, !dbg !20332
  br label %218, !dbg !20333

218:                                              ; preds = %215, %209
  %219 = load ptr, ptr %13, align 8, !dbg !20334
  %220 = load ptr, ptr %16, align 8, !dbg !20336
  %221 = load ptr, ptr %15, align 8, !dbg !20337
  %222 = ptrtoint ptr %220 to i64, !dbg !20338
  %223 = ptrtoint ptr %221 to i64, !dbg !20338
  %224 = sub i64 %222, %223, !dbg !20338
  %225 = getelementptr inbounds i8, ptr %219, i64 %224, !dbg !20339
  %226 = load ptr, ptr %17, align 8, !dbg !20340
  %227 = icmp uge ptr %225, %226, !dbg !20341
  br i1 %227, label %228, label %293, !dbg !20342

228:                                              ; preds = %218
  call void @llvm.dbg.declare(metadata ptr %23, metadata !20343, metadata !DIExpression()), !dbg !20345
  %229 = load ptr, ptr %13, align 8, !dbg !20346
  %230 = load ptr, ptr %12, align 8, !dbg !20347
  %231 = ptrtoint ptr %229 to i64, !dbg !20348
  %232 = ptrtoint ptr %230 to i64, !dbg !20348
  %233 = sub i64 %231, %232, !dbg !20348
  store i64 %233, ptr %23, align 8, !dbg !20345
  call void @llvm.dbg.declare(metadata ptr %24, metadata !20349, metadata !DIExpression()), !dbg !20350
  %234 = load ptr, ptr %10, align 8, !dbg !20351
  %235 = icmp ne ptr %234, null, !dbg !20351
  %236 = zext i1 %235 to i32, !dbg !20351
  %237 = sext i32 %236 to i64, !dbg !20351
  %238 = icmp ne i64 %237, 0, !dbg !20351
  br i1 %238, label %239, label %250, !dbg !20353

239:                                              ; preds = %228
  %240 = call ptr @__errno_location() #20, !dbg !20354
  store i32 36, ptr %240, align 4, !dbg !20356
  %241 = load ptr, ptr %13, align 8, !dbg !20357
  %242 = load ptr, ptr %12, align 8, !dbg !20359
  %243 = getelementptr inbounds i8, ptr %242, i64 1, !dbg !20360
  %244 = icmp ugt ptr %241, %243, !dbg !20361
  br i1 %244, label %245, label %248, !dbg !20362

245:                                              ; preds = %239
  %246 = load ptr, ptr %13, align 8, !dbg !20363
  %247 = getelementptr inbounds i8, ptr %246, i32 -1, !dbg !20363
  store ptr %247, ptr %13, align 8, !dbg !20363
  br label %248, !dbg !20364

248:                                              ; preds = %245, %239
  %249 = load ptr, ptr %13, align 8, !dbg !20365
  store i8 0, ptr %249, align 1, !dbg !20366
  br label %470, !dbg !20367

250:                                              ; preds = %228
  %251 = load ptr, ptr %17, align 8, !dbg !20368
  %252 = load ptr, ptr %12, align 8, !dbg !20369
  %253 = ptrtoint ptr %251 to i64, !dbg !20370
  %254 = ptrtoint ptr %252 to i64, !dbg !20370
  %255 = sub i64 %253, %254, !dbg !20370
  store i64 %255, ptr %22, align 8, !dbg !20371
  %256 = load ptr, ptr %16, align 8, !dbg !20372
  %257 = load ptr, ptr %15, align 8, !dbg !20374
  %258 = ptrtoint ptr %256 to i64, !dbg !20375
  %259 = ptrtoint ptr %257 to i64, !dbg !20375
  %260 = sub i64 %258, %259, !dbg !20375
  %261 = add nsw i64 %260, 1, !dbg !20376
  %262 = icmp sgt i64 %261, 4096, !dbg !20377
  br i1 %262, label %263, label %272, !dbg !20378

263:                                              ; preds = %250
  %264 = load ptr, ptr %16, align 8, !dbg !20379
  %265 = load ptr, ptr %15, align 8, !dbg !20380
  %266 = ptrtoint ptr %264 to i64, !dbg !20381
  %267 = ptrtoint ptr %265 to i64, !dbg !20381
  %268 = sub i64 %266, %267, !dbg !20381
  %269 = add nsw i64 %268, 1, !dbg !20382
  %270 = load i64, ptr %22, align 8, !dbg !20383
  %271 = add i64 %270, %269, !dbg !20383
  store i64 %271, ptr %22, align 8, !dbg !20383
  br label %275, !dbg !20384

272:                                              ; preds = %250
  %273 = load i64, ptr %22, align 8, !dbg !20385
  %274 = add i64 %273, 4096, !dbg !20385
  store i64 %274, ptr %22, align 8, !dbg !20385
  br label %275

275:                                              ; preds = %272, %263
  %276 = load ptr, ptr %12, align 8, !dbg !20386
  %277 = load i64, ptr %22, align 8, !dbg !20387
  %278 = call ptr @realloc(ptr noundef %276, i64 noundef %277) #24, !dbg !20388
  store ptr %278, ptr %24, align 8, !dbg !20389
  %279 = load ptr, ptr %24, align 8, !dbg !20390
  %280 = icmp eq ptr %279, null, !dbg !20390
  %281 = zext i1 %280 to i32, !dbg !20390
  %282 = sext i32 %281 to i64, !dbg !20390
  %283 = icmp ne i64 %282, 0, !dbg !20390
  br i1 %283, label %284, label %285, !dbg !20392

284:                                              ; preds = %275
  br label %470, !dbg !20393

285:                                              ; preds = %275
  %286 = load ptr, ptr %24, align 8, !dbg !20394
  store ptr %286, ptr %12, align 8, !dbg !20395
  %287 = load ptr, ptr %12, align 8, !dbg !20396
  %288 = load i64, ptr %22, align 8, !dbg !20397
  %289 = getelementptr inbounds i8, ptr %287, i64 %288, !dbg !20398
  store ptr %289, ptr %17, align 8, !dbg !20399
  %290 = load ptr, ptr %12, align 8, !dbg !20400
  %291 = load i64, ptr %23, align 8, !dbg !20401
  %292 = getelementptr inbounds i8, ptr %290, i64 %291, !dbg !20402
  store ptr %292, ptr %13, align 8, !dbg !20403
  br label %293, !dbg !20404

293:                                              ; preds = %285, %218
  %294 = load ptr, ptr %13, align 8, !dbg !20405
  %295 = load ptr, ptr %15, align 8, !dbg !20406
  %296 = load ptr, ptr %16, align 8, !dbg !20407
  %297 = load ptr, ptr %15, align 8, !dbg !20408
  %298 = ptrtoint ptr %296 to i64, !dbg !20409
  %299 = ptrtoint ptr %297 to i64, !dbg !20409
  %300 = sub i64 %298, %299, !dbg !20409
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %294, ptr align 1 %295, i64 %300, i1 false), !dbg !20410
  %301 = getelementptr inbounds i8, ptr %294, i64 %300, !dbg !20410
  store ptr %301, ptr %13, align 8, !dbg !20411
  %302 = load ptr, ptr %13, align 8, !dbg !20412
  store i8 0, ptr %302, align 1, !dbg !20413
  %303 = load ptr, ptr %12, align 8, !dbg !20414
  %304 = load ptr, ptr %8, align 8, !dbg !20414
  %305 = load i64, ptr %19, align 8, !dbg !20414
  %306 = call i32 @strncmp(ptr noundef %303, ptr noundef %304, i64 noundef %305) #22, !dbg !20414
  %307 = icmp ne i32 %306, 0, !dbg !20414
  %308 = xor i1 %307, true, !dbg !20414
  %309 = xor i1 %308, true, !dbg !20414
  %310 = xor i1 %309, true, !dbg !20414
  %311 = zext i1 %310 to i32, !dbg !20414
  %312 = sext i32 %311 to i64, !dbg !20414
  %313 = icmp ne i64 %312, 0, !dbg !20414
  br i1 %313, label %314, label %326, !dbg !20416

314:                                              ; preds = %293
  %315 = load ptr, ptr %12, align 8, !dbg !20417
  %316 = load i64, ptr %19, align 8, !dbg !20419
  %317 = getelementptr inbounds i8, ptr %315, i64 %316, !dbg !20420
  %318 = getelementptr inbounds i8, ptr %317, i64 1, !dbg !20421
  store ptr %318, ptr %20, align 8, !dbg !20422
  %319 = load ptr, ptr %20, align 8, !dbg !20423
  %320 = load i8, ptr %319, align 1, !dbg !20425
  %321 = sext i8 %320 to i32, !dbg !20425
  %322 = icmp eq i32 %321, 0, !dbg !20426
  br i1 %322, label %323, label %325, !dbg !20427

323:                                              ; preds = %314
  %324 = load ptr, ptr %12, align 8, !dbg !20428
  store ptr %324, ptr %20, align 8, !dbg !20429
  br label %325, !dbg !20430

325:                                              ; preds = %323, %314
  br label %328, !dbg !20431

326:                                              ; preds = %293
  %327 = load ptr, ptr %12, align 8, !dbg !20432
  store ptr %327, ptr %20, align 8, !dbg !20434
  br label %328

328:                                              ; preds = %326, %325
  %329 = load i32, ptr %7, align 4, !dbg !20435
  %330 = load ptr, ptr %20, align 8, !dbg !20435
  %331 = load ptr, ptr %11, align 8, !dbg !20435
  %332 = call i32 @fstatat(i32 noundef %329, ptr noundef %330, ptr noundef %331, i32 noundef 256) #18, !dbg !20435
  %333 = icmp slt i32 %332, 0, !dbg !20435
  %334 = zext i1 %333 to i32, !dbg !20435
  %335 = sext i32 %334 to i64, !dbg !20435
  %336 = icmp ne i64 %335, 0, !dbg !20435
  br i1 %336, label %337, label %338, !dbg !20437

337:                                              ; preds = %328
  br label %470, !dbg !20438

338:                                              ; preds = %328
  %339 = load ptr, ptr %11, align 8, !dbg !20439
  %340 = getelementptr inbounds %struct.stat, ptr %339, i32 0, i32 3, !dbg !20439
  %341 = load i32, ptr %340, align 8, !dbg !20439
  %342 = and i32 %341, 61440, !dbg !20439
  %343 = icmp eq i32 %342, 40960, !dbg !20439
  %344 = zext i1 %343 to i32, !dbg !20439
  %345 = sext i32 %344 to i64, !dbg !20439
  %346 = icmp ne i64 %345, 0, !dbg !20439
  br i1 %346, label %347, label %419, !dbg !20441

347:                                              ; preds = %338
  call void @llvm.dbg.declare(metadata ptr %25, metadata !20442, metadata !DIExpression()), !dbg !20444
  call void @llvm.dbg.declare(metadata ptr %26, metadata !20445, metadata !DIExpression()), !dbg !20446
  %348 = load i32, ptr %18, align 4, !dbg !20447
  %349 = add nsw i32 %348, 1, !dbg !20447
  store i32 %349, ptr %18, align 4, !dbg !20447
  %350 = icmp sgt i32 %349, 20, !dbg !20447
  %351 = zext i1 %350 to i32, !dbg !20447
  %352 = sext i32 %351 to i64, !dbg !20447
  %353 = icmp ne i64 %352, 0, !dbg !20447
  br i1 %353, label %354, label %356, !dbg !20449

354:                                              ; preds = %347
  %355 = call ptr @__errno_location() #20, !dbg !20450
  store i32 40, ptr %355, align 4, !dbg !20452
  br label %470, !dbg !20453

356:                                              ; preds = %347
  %357 = load i32, ptr %7, align 4, !dbg !20454
  %358 = load ptr, ptr %20, align 8, !dbg !20455
  %359 = getelementptr inbounds [4096 x i8], ptr %25, i64 0, i64 0, !dbg !20456
  %360 = call i64 @readlinkat(i32 noundef %357, ptr noundef %358, ptr noundef %359, i64 noundef 4095) #18, !dbg !20457
  %361 = trunc i64 %360 to i32, !dbg !20458
  store i32 %361, ptr %21, align 4, !dbg !20459
  %362 = load i32, ptr %21, align 4, !dbg !20460
  %363 = icmp slt i32 %362, 0, !dbg !20460
  %364 = zext i1 %363 to i32, !dbg !20460
  %365 = sext i32 %364 to i64, !dbg !20460
  %366 = icmp ne i64 %365, 0, !dbg !20460
  br i1 %366, label %367, label %368, !dbg !20462

367:                                              ; preds = %356
  br label %470, !dbg !20463

368:                                              ; preds = %356
  %369 = load i32, ptr %21, align 4, !dbg !20464
  %370 = sext i32 %369 to i64, !dbg !20465
  %371 = getelementptr inbounds [4096 x i8], ptr %25, i64 0, i64 %370, !dbg !20465
  store i8 0, ptr %371, align 1, !dbg !20466
  %372 = load ptr, ptr %16, align 8, !dbg !20467
  %373 = call i64 @strlen(ptr noundef %372) #22, !dbg !20468
  store i64 %373, ptr %26, align 8, !dbg !20469
  %374 = load i32, ptr %21, align 4, !dbg !20470
  %375 = sext i32 %374 to i64, !dbg !20470
  %376 = load i64, ptr %26, align 8, !dbg !20470
  %377 = add nsw i64 %375, %376, !dbg !20470
  %378 = icmp sge i64 %377, 4096, !dbg !20470
  %379 = zext i1 %378 to i32, !dbg !20470
  %380 = sext i32 %379 to i64, !dbg !20470
  %381 = icmp ne i64 %380, 0, !dbg !20470
  br i1 %381, label %382, label %384, !dbg !20472

382:                                              ; preds = %368
  %383 = call ptr @__errno_location() #20, !dbg !20473
  store i32 36, ptr %383, align 4, !dbg !20475
  br label %470, !dbg !20476

384:                                              ; preds = %368
  %385 = load i32, ptr %21, align 4, !dbg !20477
  %386 = sext i32 %385 to i64, !dbg !20478
  %387 = getelementptr inbounds [4096 x i8], ptr %14, i64 0, i64 %386, !dbg !20478
  %388 = load ptr, ptr %16, align 8, !dbg !20479
  %389 = load i64, ptr %26, align 8, !dbg !20480
  %390 = add i64 %389, 1, !dbg !20481
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %387, ptr align 1 %388, i64 %390, i1 false), !dbg !20482
  %391 = getelementptr inbounds [4096 x i8], ptr %14, i64 0, i64 0, !dbg !20483
  %392 = getelementptr inbounds [4096 x i8], ptr %25, i64 0, i64 0, !dbg !20483
  %393 = load i32, ptr %21, align 4, !dbg !20484
  %394 = sext i32 %393 to i64, !dbg !20485
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %391, ptr align 16 %392, i64 %394, i1 false), !dbg !20483
  store ptr %391, ptr %16, align 8, !dbg !20486
  %395 = getelementptr inbounds [4096 x i8], ptr %25, i64 0, i64 0, !dbg !20487
  %396 = load i8, ptr %395, align 16, !dbg !20487
  %397 = sext i8 %396 to i32, !dbg !20487
  %398 = icmp eq i32 %397, 47, !dbg !20489
  br i1 %398, label %399, label %402, !dbg !20490

399:                                              ; preds = %384
  %400 = load ptr, ptr %12, align 8, !dbg !20491
  %401 = getelementptr inbounds i8, ptr %400, i64 1, !dbg !20492
  store ptr %401, ptr %13, align 8, !dbg !20493
  br label %418, !dbg !20494

402:                                              ; preds = %384
  %403 = load ptr, ptr %13, align 8, !dbg !20495
  %404 = load ptr, ptr %12, align 8, !dbg !20497
  %405 = getelementptr inbounds i8, ptr %404, i64 1, !dbg !20498
  %406 = icmp ugt ptr %403, %405, !dbg !20499
  br i1 %406, label %407, label %417, !dbg !20500

407:                                              ; preds = %402
  br label %408, !dbg !20501

408:                                              ; preds = %415, %407
  %409 = load ptr, ptr %13, align 8, !dbg !20502
  %410 = getelementptr inbounds i8, ptr %409, i32 -1, !dbg !20502
  store ptr %410, ptr %13, align 8, !dbg !20502
  %411 = getelementptr inbounds i8, ptr %410, i64 -1, !dbg !20503
  %412 = load i8, ptr %411, align 1, !dbg !20503
  %413 = sext i8 %412 to i32, !dbg !20503
  %414 = icmp ne i32 %413, 47, !dbg !20504
  br i1 %414, label %415, label %416, !dbg !20501

415:                                              ; preds = %408
  br label %408, !dbg !20501, !llvm.loop !20505

416:                                              ; preds = %408
  br label %417, !dbg !20501

417:                                              ; preds = %416, %402
  br label %418

418:                                              ; preds = %417, %399
  br label %438, !dbg !20507

419:                                              ; preds = %338
  %420 = load ptr, ptr %11, align 8, !dbg !20508
  %421 = getelementptr inbounds %struct.stat, ptr %420, i32 0, i32 3, !dbg !20508
  %422 = load i32, ptr %421, align 8, !dbg !20508
  %423 = and i32 %422, 61440, !dbg !20508
  %424 = icmp eq i32 %423, 16384, !dbg !20508
  br i1 %424, label %430, label %425, !dbg !20508

425:                                              ; preds = %419
  %426 = load ptr, ptr %16, align 8, !dbg !20508
  %427 = load i8, ptr %426, align 1, !dbg !20508
  %428 = sext i8 %427 to i32, !dbg !20508
  %429 = icmp ne i32 %428, 0, !dbg !20508
  br label %430

430:                                              ; preds = %425, %419
  %431 = phi i1 [ false, %419 ], [ %429, %425 ], !dbg !20510
  %432 = zext i1 %431 to i32, !dbg !20508
  %433 = sext i32 %432 to i64, !dbg !20508
  %434 = icmp ne i64 %433, 0, !dbg !20508
  br i1 %434, label %435, label %437, !dbg !20511

435:                                              ; preds = %430
  %436 = call ptr @__errno_location() #20, !dbg !20512
  store i32 20, ptr %436, align 4, !dbg !20514
  br label %470, !dbg !20515

437:                                              ; preds = %430
  br label %438

438:                                              ; preds = %437, %418
  br label %439

439:                                              ; preds = %438, %208
  br label %440

440:                                              ; preds = %439, %173
  br label %441

441:                                              ; preds = %440
  br label %442, !dbg !20516

442:                                              ; preds = %441
  %443 = load ptr, ptr %16, align 8, !dbg !20517
  store ptr %443, ptr %15, align 8, !dbg !20518
  br label %121, !dbg !20519, !llvm.loop !20520

444:                                              ; preds = %159, %121
  %445 = load ptr, ptr %13, align 8, !dbg !20522
  %446 = load ptr, ptr %12, align 8, !dbg !20524
  %447 = getelementptr inbounds i8, ptr %446, i64 1, !dbg !20525
  %448 = icmp ugt ptr %445, %447, !dbg !20526
  br i1 %448, label %449, label %458, !dbg !20527

449:                                              ; preds = %444
  %450 = load ptr, ptr %13, align 8, !dbg !20528
  %451 = getelementptr inbounds i8, ptr %450, i64 -1, !dbg !20528
  %452 = load i8, ptr %451, align 1, !dbg !20528
  %453 = sext i8 %452 to i32, !dbg !20528
  %454 = icmp eq i32 %453, 47, !dbg !20529
  br i1 %454, label %455, label %458, !dbg !20530

455:                                              ; preds = %449
  %456 = load ptr, ptr %13, align 8, !dbg !20531
  %457 = getelementptr inbounds i8, ptr %456, i32 -1, !dbg !20531
  store ptr %457, ptr %13, align 8, !dbg !20531
  br label %458, !dbg !20531

458:                                              ; preds = %455, %449, %444
  %459 = load ptr, ptr %13, align 8, !dbg !20532
  store i8 0, ptr %459, align 1, !dbg !20533
  %460 = load ptr, ptr %10, align 8, !dbg !20534
  %461 = icmp eq ptr %460, null, !dbg !20534
  br i1 %461, label %466, label %462, !dbg !20534

462:                                              ; preds = %458
  %463 = load ptr, ptr %10, align 8, !dbg !20534
  %464 = load ptr, ptr %12, align 8, !dbg !20534
  %465 = icmp eq ptr %463, %464, !dbg !20534
  br i1 %465, label %466, label %467, !dbg !20537

466:                                              ; preds = %462, %458
  br label %468, !dbg !20537

467:                                              ; preds = %462
  call void @__assert_fail(ptr noundef @.str.426, ptr noundef @.str.1.427, i32 noundef 188, ptr noundef @__PRETTY_FUNCTION__.realpathat2) #21, !dbg !20534
  unreachable, !dbg !20534

468:                                              ; preds = %466
  %469 = load ptr, ptr %12, align 8, !dbg !20538
  store ptr %469, ptr %6, align 8, !dbg !20539
  br label %485, !dbg !20539

470:                                              ; preds = %435, %382, %367, %354, %337, %284, %248
  call void @llvm.dbg.label(metadata !20540), !dbg !20541
  %471 = load ptr, ptr %10, align 8, !dbg !20542
  %472 = icmp eq ptr %471, null, !dbg !20542
  br i1 %472, label %477, label %473, !dbg !20542

473:                                              ; preds = %470
  %474 = load ptr, ptr %10, align 8, !dbg !20542
  %475 = load ptr, ptr %12, align 8, !dbg !20542
  %476 = icmp eq ptr %474, %475, !dbg !20542
  br i1 %476, label %477, label %478, !dbg !20545

477:                                              ; preds = %473, %470
  br label %479, !dbg !20545

478:                                              ; preds = %473
  call void @__assert_fail(ptr noundef @.str.426, ptr noundef @.str.1.427, i32 noundef 192, ptr noundef @__PRETTY_FUNCTION__.realpathat2) #21, !dbg !20542
  unreachable, !dbg !20542

479:                                              ; preds = %477
  %480 = load ptr, ptr %10, align 8, !dbg !20546
  %481 = icmp eq ptr %480, null, !dbg !20548
  br i1 %481, label %482, label %484, !dbg !20549

482:                                              ; preds = %479
  %483 = load ptr, ptr %12, align 8, !dbg !20550
  call void @free(ptr noundef %483) #18, !dbg !20551
  br label %484, !dbg !20551

484:                                              ; preds = %482, %479
  store ptr null, ptr %6, align 8, !dbg !20552
  br label %485, !dbg !20552

485:                                              ; preds = %484, %468, %103, %82, %79, %69, %53, %43
  %486 = load ptr, ptr %6, align 8, !dbg !20553
  ret ptr %486, !dbg !20553
}

; Function Attrs: nounwind
declare ptr @strcpy(ptr noundef, ptr noundef) #3

; Function Attrs: nounwind
declare i64 @readlinkat(i32 noundef, ptr noundef, ptr noundef, i64 noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @realpathat(i32 noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 !dbg !20554 {
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca %struct.stat, align 8
  store i32 %0, ptr %5, align 4
  call void @llvm.dbg.declare(metadata ptr %5, metadata !20557, metadata !DIExpression()), !dbg !20558
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !20559, metadata !DIExpression()), !dbg !20560
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !20561, metadata !DIExpression()), !dbg !20562
  store ptr %3, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !20563, metadata !DIExpression()), !dbg !20564
  call void @llvm.dbg.declare(metadata ptr %9, metadata !20565, metadata !DIExpression()), !dbg !20566
  %10 = load i32, ptr %5, align 4, !dbg !20567
  %11 = load ptr, ptr %6, align 8, !dbg !20568
  %12 = load ptr, ptr %7, align 8, !dbg !20569
  %13 = load ptr, ptr %8, align 8, !dbg !20570
  %14 = call ptr @realpathat2(i32 noundef %10, ptr noundef %11, ptr noundef %12, ptr noundef %13, ptr noundef %9), !dbg !20571
  ret ptr %14, !dbg !20572
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @sd_listen_fds(i32 noundef %0) #0 !dbg !20573 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  store i32 %0, ptr %2, align 4
  call void @llvm.dbg.declare(metadata ptr %2, metadata !20576, metadata !DIExpression()), !dbg !20577
  call void @llvm.dbg.declare(metadata ptr %3, metadata !20578, metadata !DIExpression()), !dbg !20579
  call void @llvm.dbg.declare(metadata ptr %4, metadata !20580, metadata !DIExpression()), !dbg !20581
  call void @llvm.dbg.declare(metadata ptr %5, metadata !20582, metadata !DIExpression()), !dbg !20583
  call void @llvm.dbg.declare(metadata ptr %6, metadata !20584, metadata !DIExpression()), !dbg !20585
  store ptr null, ptr %6, align 8, !dbg !20585
  call void @llvm.dbg.declare(metadata ptr %7, metadata !20586, metadata !DIExpression()), !dbg !20587
  %9 = call ptr @getenv(ptr noundef @.str.430) #18, !dbg !20588
  store ptr %9, ptr %5, align 8, !dbg !20589
  %10 = load ptr, ptr %5, align 8, !dbg !20590
  %11 = icmp ne ptr %10, null, !dbg !20590
  br i1 %11, label %13, label %12, !dbg !20592

12:                                               ; preds = %1
  store i32 0, ptr %3, align 4, !dbg !20593
  br label %113, !dbg !20595

13:                                               ; preds = %1
  %14 = call ptr @__errno_location() #20, !dbg !20596
  store i32 0, ptr %14, align 4, !dbg !20597
  %15 = load ptr, ptr %5, align 8, !dbg !20598
  %16 = call i64 @strtoul(ptr noundef %15, ptr noundef %6, i32 noundef 10) #18, !dbg !20599
  store i64 %16, ptr %7, align 8, !dbg !20600
  %17 = call ptr @__errno_location() #20, !dbg !20601
  %18 = load i32, ptr %17, align 4, !dbg !20601
  %19 = icmp sgt i32 %18, 0, !dbg !20603
  br i1 %19, label %20, label %24, !dbg !20604

20:                                               ; preds = %13
  %21 = call ptr @__errno_location() #20, !dbg !20605
  %22 = load i32, ptr %21, align 4, !dbg !20605
  %23 = sub nsw i32 0, %22, !dbg !20607
  store i32 %23, ptr %3, align 4, !dbg !20608
  br label %113, !dbg !20609

24:                                               ; preds = %13
  %25 = load ptr, ptr %6, align 8, !dbg !20610
  %26 = icmp ne ptr %25, null, !dbg !20610
  br i1 %26, label %27, label %39, !dbg !20612

27:                                               ; preds = %24
  %28 = load ptr, ptr %6, align 8, !dbg !20613
  %29 = load ptr, ptr %5, align 8, !dbg !20614
  %30 = icmp eq ptr %28, %29, !dbg !20615
  br i1 %30, label %39, label %31, !dbg !20616

31:                                               ; preds = %27
  %32 = load ptr, ptr %6, align 8, !dbg !20617
  %33 = load i8, ptr %32, align 1, !dbg !20618
  %34 = sext i8 %33 to i32, !dbg !20618
  %35 = icmp ne i32 %34, 0, !dbg !20618
  br i1 %35, label %39, label %36, !dbg !20619

36:                                               ; preds = %31
  %37 = load i64, ptr %7, align 8, !dbg !20620
  %38 = icmp ule i64 %37, 0, !dbg !20621
  br i1 %38, label %39, label %40, !dbg !20622

39:                                               ; preds = %36, %31, %27, %24
  store i32 -22, ptr %3, align 4, !dbg !20623
  br label %113, !dbg !20625

40:                                               ; preds = %36
  %41 = call i32 @getpid() #18, !dbg !20626
  %42 = load i64, ptr %7, align 8, !dbg !20628
  %43 = trunc i64 %42 to i32, !dbg !20629
  %44 = icmp ne i32 %41, %43, !dbg !20630
  br i1 %44, label %45, label %46, !dbg !20631

45:                                               ; preds = %40
  store i32 0, ptr %3, align 4, !dbg !20632
  br label %113, !dbg !20634

46:                                               ; preds = %40
  %47 = call ptr @getenv(ptr noundef @.str.1.431) #18, !dbg !20635
  store ptr %47, ptr %5, align 8, !dbg !20636
  %48 = load ptr, ptr %5, align 8, !dbg !20637
  %49 = icmp ne ptr %48, null, !dbg !20637
  br i1 %49, label %51, label %50, !dbg !20639

50:                                               ; preds = %46
  store i32 0, ptr %3, align 4, !dbg !20640
  br label %113, !dbg !20642

51:                                               ; preds = %46
  %52 = call ptr @__errno_location() #20, !dbg !20643
  store i32 0, ptr %52, align 4, !dbg !20644
  %53 = load ptr, ptr %5, align 8, !dbg !20645
  %54 = call i64 @strtoul(ptr noundef %53, ptr noundef %6, i32 noundef 10) #18, !dbg !20646
  store i64 %54, ptr %7, align 8, !dbg !20647
  %55 = call ptr @__errno_location() #20, !dbg !20648
  %56 = load i32, ptr %55, align 4, !dbg !20648
  %57 = icmp sgt i32 %56, 0, !dbg !20650
  br i1 %57, label %58, label %62, !dbg !20651

58:                                               ; preds = %51
  %59 = call ptr @__errno_location() #20, !dbg !20652
  %60 = load i32, ptr %59, align 4, !dbg !20652
  %61 = sub nsw i32 0, %60, !dbg !20654
  store i32 %61, ptr %3, align 4, !dbg !20655
  br label %113, !dbg !20656

62:                                               ; preds = %51
  %63 = load ptr, ptr %6, align 8, !dbg !20657
  %64 = icmp ne ptr %63, null, !dbg !20657
  br i1 %64, label %65, label %74, !dbg !20659

65:                                               ; preds = %62
  %66 = load ptr, ptr %6, align 8, !dbg !20660
  %67 = load ptr, ptr %5, align 8, !dbg !20661
  %68 = icmp eq ptr %66, %67, !dbg !20662
  br i1 %68, label %74, label %69, !dbg !20663

69:                                               ; preds = %65
  %70 = load ptr, ptr %6, align 8, !dbg !20664
  %71 = load i8, ptr %70, align 1, !dbg !20665
  %72 = sext i8 %71 to i32, !dbg !20665
  %73 = icmp ne i32 %72, 0, !dbg !20665
  br i1 %73, label %74, label %75, !dbg !20666

74:                                               ; preds = %69, %65, %62
  store i32 -22, ptr %3, align 4, !dbg !20667
  br label %113, !dbg !20669

75:                                               ; preds = %69
  store i32 3, ptr %4, align 4, !dbg !20670
  br label %76, !dbg !20672

76:                                               ; preds = %107, %75
  %77 = load i32, ptr %4, align 4, !dbg !20673
  %78 = load i64, ptr %7, align 8, !dbg !20675
  %79 = trunc i64 %78 to i32, !dbg !20676
  %80 = add nsw i32 3, %79, !dbg !20677
  %81 = icmp slt i32 %77, %80, !dbg !20678
  br i1 %81, label %82, label %110, !dbg !20679

82:                                               ; preds = %76
  call void @llvm.dbg.declare(metadata ptr %8, metadata !20680, metadata !DIExpression()), !dbg !20682
  %83 = load i32, ptr %4, align 4, !dbg !20683
  %84 = call i32 (i32, i32, ...) @fcntl(i32 noundef %83, i32 noundef 1), !dbg !20684
  store i32 %84, ptr %8, align 4, !dbg !20685
  %85 = load i32, ptr %8, align 4, !dbg !20686
  %86 = icmp slt i32 %85, 0, !dbg !20688
  br i1 %86, label %87, label %91, !dbg !20689

87:                                               ; preds = %82
  %88 = call ptr @__errno_location() #20, !dbg !20690
  %89 = load i32, ptr %88, align 4, !dbg !20690
  %90 = sub nsw i32 0, %89, !dbg !20692
  store i32 %90, ptr %3, align 4, !dbg !20693
  br label %113, !dbg !20694

91:                                               ; preds = %82
  %92 = load i32, ptr %8, align 4, !dbg !20695
  %93 = and i32 %92, 1, !dbg !20697
  %94 = icmp ne i32 %93, 0, !dbg !20697
  br i1 %94, label %95, label %96, !dbg !20698

95:                                               ; preds = %91
  br label %107, !dbg !20699

96:                                               ; preds = %91
  %97 = load i32, ptr %4, align 4, !dbg !20700
  %98 = load i32, ptr %8, align 4, !dbg !20702
  %99 = or i32 %98, 1, !dbg !20703
  %100 = call i32 (i32, i32, ...) @fcntl(i32 noundef %97, i32 noundef 2, i32 noundef %99), !dbg !20704
  %101 = icmp slt i32 %100, 0, !dbg !20705
  br i1 %101, label %102, label %106, !dbg !20706

102:                                              ; preds = %96
  %103 = call ptr @__errno_location() #20, !dbg !20707
  %104 = load i32, ptr %103, align 4, !dbg !20707
  %105 = sub nsw i32 0, %104, !dbg !20709
  store i32 %105, ptr %3, align 4, !dbg !20710
  br label %113, !dbg !20711

106:                                              ; preds = %96
  br label %107, !dbg !20712

107:                                              ; preds = %106, %95
  %108 = load i32, ptr %4, align 4, !dbg !20713
  %109 = add nsw i32 %108, 1, !dbg !20713
  store i32 %109, ptr %4, align 4, !dbg !20713
  br label %76, !dbg !20714, !llvm.loop !20715

110:                                              ; preds = %76
  %111 = load i64, ptr %7, align 8, !dbg !20717
  %112 = trunc i64 %111 to i32, !dbg !20718
  store i32 %112, ptr %3, align 4, !dbg !20719
  br label %113, !dbg !20720

113:                                              ; preds = %110, %102, %87, %74, %58, %50, %45, %39, %20, %12
  call void @llvm.dbg.label(metadata !20721), !dbg !20722
  %114 = load i32, ptr %2, align 4, !dbg !20723
  %115 = icmp ne i32 %114, 0, !dbg !20723
  br i1 %115, label %116, label %119, !dbg !20725

116:                                              ; preds = %113
  %117 = call i32 @unsetenv(ptr noundef @.str.430) #18, !dbg !20726
  %118 = call i32 @unsetenv(ptr noundef @.str.1.431) #18, !dbg !20728
  br label %119, !dbg !20729

119:                                              ; preds = %116, %113
  %120 = load i32, ptr %3, align 4, !dbg !20730
  ret i32 %120, !dbg !20731
}

; Function Attrs: nounwind
declare ptr @getenv(ptr noundef) #3

; Function Attrs: nounwind
declare i64 @strtoul(ptr noundef, ptr noundef, i32 noundef) #3

; Function Attrs: nounwind
declare i32 @getpid() #3

; Function Attrs: nounwind
declare i32 @unsetenv(ptr noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @sd_is_fifo(i32 noundef %0, ptr noundef %1) #0 !dbg !20732 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca %struct.stat, align 8
  %7 = alloca %struct.stat, align 8
  store i32 %0, ptr %4, align 4
  call void @llvm.dbg.declare(metadata ptr %4, metadata !20735, metadata !DIExpression()), !dbg !20736
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !20737, metadata !DIExpression()), !dbg !20738
  call void @llvm.dbg.declare(metadata ptr %6, metadata !20739, metadata !DIExpression()), !dbg !20761
  %8 = load i32, ptr %4, align 4, !dbg !20762
  %9 = icmp slt i32 %8, 0, !dbg !20764
  br i1 %9, label %10, label %11, !dbg !20765

10:                                               ; preds = %2
  store i32 -22, ptr %3, align 4, !dbg !20766
  br label %61, !dbg !20766

11:                                               ; preds = %2
  %12 = load i32, ptr %4, align 4, !dbg !20767
  %13 = call i32 @fstat(i32 noundef %12, ptr noundef %6) #18, !dbg !20769
  %14 = icmp slt i32 %13, 0, !dbg !20770
  br i1 %14, label %15, label %19, !dbg !20771

15:                                               ; preds = %11
  %16 = call ptr @__errno_location() #20, !dbg !20772
  %17 = load i32, ptr %16, align 4, !dbg !20772
  %18 = sub nsw i32 0, %17, !dbg !20773
  store i32 %18, ptr %3, align 4, !dbg !20774
  br label %61, !dbg !20774

19:                                               ; preds = %11
  %20 = getelementptr inbounds %struct.stat, ptr %6, i32 0, i32 3, !dbg !20775
  %21 = load i32, ptr %20, align 8, !dbg !20775
  %22 = and i32 %21, 61440, !dbg !20775
  %23 = icmp eq i32 %22, 4096, !dbg !20775
  br i1 %23, label %25, label %24, !dbg !20777

24:                                               ; preds = %19
  store i32 0, ptr %3, align 4, !dbg !20778
  br label %61, !dbg !20778

25:                                               ; preds = %19
  %26 = load ptr, ptr %5, align 8, !dbg !20779
  %27 = icmp ne ptr %26, null, !dbg !20779
  br i1 %27, label %28, label %60, !dbg !20781

28:                                               ; preds = %25
  call void @llvm.dbg.declare(metadata ptr %7, metadata !20782, metadata !DIExpression()), !dbg !20784
  %29 = load ptr, ptr %5, align 8, !dbg !20785
  %30 = call i32 @stat(ptr noundef %29, ptr noundef %7) #18, !dbg !20787
  %31 = icmp slt i32 %30, 0, !dbg !20788
  br i1 %31, label %32, label %45, !dbg !20789

32:                                               ; preds = %28
  %33 = call ptr @__errno_location() #20, !dbg !20790
  %34 = load i32, ptr %33, align 4, !dbg !20790
  %35 = icmp eq i32 %34, 2, !dbg !20793
  br i1 %35, label %40, label %36, !dbg !20794

36:                                               ; preds = %32
  %37 = call ptr @__errno_location() #20, !dbg !20795
  %38 = load i32, ptr %37, align 4, !dbg !20795
  %39 = icmp eq i32 %38, 20, !dbg !20796
  br i1 %39, label %40, label %41, !dbg !20797

40:                                               ; preds = %36, %32
  store i32 0, ptr %3, align 4, !dbg !20798
  br label %61, !dbg !20798

41:                                               ; preds = %36
  %42 = call ptr @__errno_location() #20, !dbg !20799
  %43 = load i32, ptr %42, align 4, !dbg !20799
  %44 = sub nsw i32 0, %43, !dbg !20800
  store i32 %44, ptr %3, align 4, !dbg !20801
  br label %61, !dbg !20801

45:                                               ; preds = %28
  %46 = getelementptr inbounds %struct.stat, ptr %7, i32 0, i32 0, !dbg !20802
  %47 = load i64, ptr %46, align 8, !dbg !20802
  %48 = getelementptr inbounds %struct.stat, ptr %6, i32 0, i32 0, !dbg !20803
  %49 = load i64, ptr %48, align 8, !dbg !20803
  %50 = icmp eq i64 %47, %49, !dbg !20804
  br i1 %50, label %51, label %57, !dbg !20805

51:                                               ; preds = %45
  %52 = getelementptr inbounds %struct.stat, ptr %7, i32 0, i32 1, !dbg !20806
  %53 = load i64, ptr %52, align 8, !dbg !20806
  %54 = getelementptr inbounds %struct.stat, ptr %6, i32 0, i32 1, !dbg !20807
  %55 = load i64, ptr %54, align 8, !dbg !20807
  %56 = icmp eq i64 %53, %55, !dbg !20808
  br label %57

57:                                               ; preds = %51, %45
  %58 = phi i1 [ false, %45 ], [ %56, %51 ], !dbg !20809
  %59 = zext i1 %58 to i32, !dbg !20805
  store i32 %59, ptr %3, align 4, !dbg !20810
  br label %61, !dbg !20810

60:                                               ; preds = %25
  store i32 1, ptr %3, align 4, !dbg !20811
  br label %61, !dbg !20811

61:                                               ; preds = %60, %57, %41, %40, %24, %15, %10
  %62 = load i32, ptr %3, align 4, !dbg !20812
  ret i32 %62, !dbg !20812
}

; Function Attrs: nounwind
declare i32 @stat(ptr noundef, ptr noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @sd_is_special(i32 noundef %0, ptr noundef %1) #0 !dbg !20813 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca %struct.stat, align 8
  %7 = alloca %struct.stat, align 8
  store i32 %0, ptr %4, align 4
  call void @llvm.dbg.declare(metadata ptr %4, metadata !20814, metadata !DIExpression()), !dbg !20815
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !20816, metadata !DIExpression()), !dbg !20817
  call void @llvm.dbg.declare(metadata ptr %6, metadata !20818, metadata !DIExpression()), !dbg !20819
  %8 = load i32, ptr %4, align 4, !dbg !20820
  %9 = icmp slt i32 %8, 0, !dbg !20822
  br i1 %9, label %10, label %11, !dbg !20823

10:                                               ; preds = %2
  store i32 -22, ptr %3, align 4, !dbg !20824
  br label %94, !dbg !20824

11:                                               ; preds = %2
  %12 = load i32, ptr %4, align 4, !dbg !20825
  %13 = call i32 @fstat(i32 noundef %12, ptr noundef %6) #18, !dbg !20827
  %14 = icmp slt i32 %13, 0, !dbg !20828
  br i1 %14, label %15, label %19, !dbg !20829

15:                                               ; preds = %11
  %16 = call ptr @__errno_location() #20, !dbg !20830
  %17 = load i32, ptr %16, align 4, !dbg !20830
  %18 = sub nsw i32 0, %17, !dbg !20831
  store i32 %18, ptr %3, align 4, !dbg !20832
  br label %94, !dbg !20832

19:                                               ; preds = %11
  %20 = getelementptr inbounds %struct.stat, ptr %6, i32 0, i32 3, !dbg !20833
  %21 = load i32, ptr %20, align 8, !dbg !20833
  %22 = and i32 %21, 61440, !dbg !20833
  %23 = icmp eq i32 %22, 32768, !dbg !20833
  br i1 %23, label %30, label %24, !dbg !20835

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.stat, ptr %6, i32 0, i32 3, !dbg !20836
  %26 = load i32, ptr %25, align 8, !dbg !20836
  %27 = and i32 %26, 61440, !dbg !20836
  %28 = icmp eq i32 %27, 8192, !dbg !20836
  br i1 %28, label %30, label %29, !dbg !20837

29:                                               ; preds = %24
  store i32 0, ptr %3, align 4, !dbg !20838
  br label %94, !dbg !20838

30:                                               ; preds = %24, %19
  %31 = load ptr, ptr %5, align 8, !dbg !20839
  %32 = icmp ne ptr %31, null, !dbg !20839
  br i1 %32, label %33, label %93, !dbg !20841

33:                                               ; preds = %30
  call void @llvm.dbg.declare(metadata ptr %7, metadata !20842, metadata !DIExpression()), !dbg !20844
  %34 = load ptr, ptr %5, align 8, !dbg !20845
  %35 = call i32 @stat(ptr noundef %34, ptr noundef %7) #18, !dbg !20847
  %36 = icmp slt i32 %35, 0, !dbg !20848
  br i1 %36, label %37, label %50, !dbg !20849

37:                                               ; preds = %33
  %38 = call ptr @__errno_location() #20, !dbg !20850
  %39 = load i32, ptr %38, align 4, !dbg !20850
  %40 = icmp eq i32 %39, 2, !dbg !20853
  br i1 %40, label %45, label %41, !dbg !20854

41:                                               ; preds = %37
  %42 = call ptr @__errno_location() #20, !dbg !20855
  %43 = load i32, ptr %42, align 4, !dbg !20855
  %44 = icmp eq i32 %43, 20, !dbg !20856
  br i1 %44, label %45, label %46, !dbg !20857

45:                                               ; preds = %41, %37
  store i32 0, ptr %3, align 4, !dbg !20858
  br label %94, !dbg !20858

46:                                               ; preds = %41
  %47 = call ptr @__errno_location() #20, !dbg !20859
  %48 = load i32, ptr %47, align 4, !dbg !20859
  %49 = sub nsw i32 0, %48, !dbg !20860
  store i32 %49, ptr %3, align 4, !dbg !20861
  br label %94, !dbg !20861

50:                                               ; preds = %33
  %51 = getelementptr inbounds %struct.stat, ptr %6, i32 0, i32 3, !dbg !20862
  %52 = load i32, ptr %51, align 8, !dbg !20862
  %53 = and i32 %52, 61440, !dbg !20862
  %54 = icmp eq i32 %53, 32768, !dbg !20862
  br i1 %54, label %55, label %75, !dbg !20864

55:                                               ; preds = %50
  %56 = getelementptr inbounds %struct.stat, ptr %7, i32 0, i32 3, !dbg !20865
  %57 = load i32, ptr %56, align 8, !dbg !20865
  %58 = and i32 %57, 61440, !dbg !20865
  %59 = icmp eq i32 %58, 32768, !dbg !20865
  br i1 %59, label %60, label %75, !dbg !20866

60:                                               ; preds = %55
  %61 = getelementptr inbounds %struct.stat, ptr %7, i32 0, i32 0, !dbg !20867
  %62 = load i64, ptr %61, align 8, !dbg !20867
  %63 = getelementptr inbounds %struct.stat, ptr %6, i32 0, i32 0, !dbg !20868
  %64 = load i64, ptr %63, align 8, !dbg !20868
  %65 = icmp eq i64 %62, %64, !dbg !20869
  br i1 %65, label %66, label %72, !dbg !20870

66:                                               ; preds = %60
  %67 = getelementptr inbounds %struct.stat, ptr %7, i32 0, i32 1, !dbg !20871
  %68 = load i64, ptr %67, align 8, !dbg !20871
  %69 = getelementptr inbounds %struct.stat, ptr %6, i32 0, i32 1, !dbg !20872
  %70 = load i64, ptr %69, align 8, !dbg !20872
  %71 = icmp eq i64 %68, %70, !dbg !20873
  br label %72

72:                                               ; preds = %66, %60
  %73 = phi i1 [ false, %60 ], [ %71, %66 ], !dbg !20874
  %74 = zext i1 %73 to i32, !dbg !20870
  store i32 %74, ptr %3, align 4, !dbg !20875
  br label %94, !dbg !20875

75:                                               ; preds = %55, %50
  %76 = getelementptr inbounds %struct.stat, ptr %6, i32 0, i32 3, !dbg !20876
  %77 = load i32, ptr %76, align 8, !dbg !20876
  %78 = and i32 %77, 61440, !dbg !20876
  %79 = icmp eq i32 %78, 8192, !dbg !20876
  br i1 %79, label %80, label %92, !dbg !20878

80:                                               ; preds = %75
  %81 = getelementptr inbounds %struct.stat, ptr %7, i32 0, i32 3, !dbg !20879
  %82 = load i32, ptr %81, align 8, !dbg !20879
  %83 = and i32 %82, 61440, !dbg !20879
  %84 = icmp eq i32 %83, 8192, !dbg !20879
  br i1 %84, label %85, label %92, !dbg !20880

85:                                               ; preds = %80
  %86 = getelementptr inbounds %struct.stat, ptr %7, i32 0, i32 7, !dbg !20881
  %87 = load i64, ptr %86, align 8, !dbg !20881
  %88 = getelementptr inbounds %struct.stat, ptr %6, i32 0, i32 7, !dbg !20882
  %89 = load i64, ptr %88, align 8, !dbg !20882
  %90 = icmp eq i64 %87, %89, !dbg !20883
  %91 = zext i1 %90 to i32, !dbg !20883
  store i32 %91, ptr %3, align 4, !dbg !20884
  br label %94, !dbg !20884

92:                                               ; preds = %80, %75
  store i32 0, ptr %3, align 4, !dbg !20885
  br label %94, !dbg !20885

93:                                               ; preds = %30
  store i32 1, ptr %3, align 4, !dbg !20886
  br label %94, !dbg !20886

94:                                               ; preds = %93, %92, %85, %72, %46, %45, %29, %15, %10
  %95 = load i32, ptr %3, align 4, !dbg !20887
  ret i32 %95, !dbg !20887
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @sd_is_socket(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #0 !dbg !20888 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %union.sockaddr_union, align 8
  %12 = alloca i32, align 4
  %13 = alloca %union.__SOCKADDR_ARG, align 8
  store i32 %0, ptr %6, align 4
  call void @llvm.dbg.declare(metadata ptr %6, metadata !20891, metadata !DIExpression()), !dbg !20892
  store i32 %1, ptr %7, align 4
  call void @llvm.dbg.declare(metadata ptr %7, metadata !20893, metadata !DIExpression()), !dbg !20894
  store i32 %2, ptr %8, align 4
  call void @llvm.dbg.declare(metadata ptr %8, metadata !20895, metadata !DIExpression()), !dbg !20896
  store i32 %3, ptr %9, align 4
  call void @llvm.dbg.declare(metadata ptr %9, metadata !20897, metadata !DIExpression()), !dbg !20898
  call void @llvm.dbg.declare(metadata ptr %10, metadata !20899, metadata !DIExpression()), !dbg !20900
  %14 = load i32, ptr %7, align 4, !dbg !20901
  %15 = icmp slt i32 %14, 0, !dbg !20903
  br i1 %15, label %16, label %17, !dbg !20904

16:                                               ; preds = %4
  store i32 -22, ptr %5, align 4, !dbg !20905
  br label %52, !dbg !20905

17:                                               ; preds = %4
  %18 = load i32, ptr %6, align 4, !dbg !20906
  %19 = load i32, ptr %8, align 4, !dbg !20907
  %20 = load i32, ptr %9, align 4, !dbg !20908
  %21 = call i32 @sd_is_socket_internal(i32 noundef %18, i32 noundef %19, i32 noundef %20), !dbg !20909
  store i32 %21, ptr %10, align 4, !dbg !20910
  %22 = load i32, ptr %10, align 4, !dbg !20911
  %23 = icmp sle i32 %22, 0, !dbg !20913
  br i1 %23, label %24, label %26, !dbg !20914

24:                                               ; preds = %17
  %25 = load i32, ptr %10, align 4, !dbg !20915
  store i32 %25, ptr %5, align 4, !dbg !20916
  br label %52, !dbg !20916

26:                                               ; preds = %17
  %27 = load i32, ptr %7, align 4, !dbg !20917
  %28 = icmp sgt i32 %27, 0, !dbg !20919
  br i1 %28, label %29, label %51, !dbg !20920

29:                                               ; preds = %26
  call void @llvm.dbg.declare(metadata ptr %11, metadata !20921, metadata !DIExpression()), !dbg !20971
  call void @llvm.memset.p0.i64(ptr align 8 %11, i8 0, i64 128, i1 false), !dbg !20971
  call void @llvm.dbg.declare(metadata ptr %12, metadata !20972, metadata !DIExpression()), !dbg !20973
  store i32 128, ptr %12, align 4, !dbg !20973
  %30 = load i32, ptr %6, align 4, !dbg !20974
  store ptr %11, ptr %13, align 8, !dbg !20976
  %31 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %13, i32 0, i32 0, !dbg !20977
  %32 = load ptr, ptr %31, align 8, !dbg !20977
  %33 = call i32 @getsockname(i32 noundef %30, ptr %32, ptr noundef %12) #18, !dbg !20977
  %34 = icmp slt i32 %33, 0, !dbg !20978
  br i1 %34, label %35, label %39, !dbg !20979

35:                                               ; preds = %29
  %36 = call ptr @__errno_location() #20, !dbg !20980
  %37 = load i32, ptr %36, align 4, !dbg !20980
  %38 = sub nsw i32 0, %37, !dbg !20981
  store i32 %38, ptr %5, align 4, !dbg !20982
  br label %52, !dbg !20982

39:                                               ; preds = %29
  %40 = load i32, ptr %12, align 4, !dbg !20983
  %41 = zext i32 %40 to i64, !dbg !20983
  %42 = icmp ult i64 %41, 2, !dbg !20985
  br i1 %42, label %43, label %44, !dbg !20986

43:                                               ; preds = %39
  store i32 -22, ptr %5, align 4, !dbg !20987
  br label %52, !dbg !20987

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.sockaddr, ptr %11, i32 0, i32 0, !dbg !20988
  %46 = load i16, ptr %45, align 8, !dbg !20988
  %47 = zext i16 %46 to i32, !dbg !20989
  %48 = load i32, ptr %7, align 4, !dbg !20990
  %49 = icmp eq i32 %47, %48, !dbg !20991
  %50 = zext i1 %49 to i32, !dbg !20991
  store i32 %50, ptr %5, align 4, !dbg !20992
  br label %52, !dbg !20992

51:                                               ; preds = %26
  store i32 1, ptr %5, align 4, !dbg !20993
  br label %52, !dbg !20993

52:                                               ; preds = %51, %44, %43, %35, %24, %16
  %53 = load i32, ptr %5, align 4, !dbg !20994
  ret i32 %53, !dbg !20994
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @sd_is_socket_internal(i32 noundef %0, i32 noundef %1, i32 noundef %2) #0 !dbg !20995 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.stat, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i32 %0, ptr %5, align 4
  call void @llvm.dbg.declare(metadata ptr %5, metadata !20998, metadata !DIExpression()), !dbg !20999
  store i32 %1, ptr %6, align 4
  call void @llvm.dbg.declare(metadata ptr %6, metadata !21000, metadata !DIExpression()), !dbg !21001
  store i32 %2, ptr %7, align 4
  call void @llvm.dbg.declare(metadata ptr %7, metadata !21002, metadata !DIExpression()), !dbg !21003
  call void @llvm.dbg.declare(metadata ptr %8, metadata !21004, metadata !DIExpression()), !dbg !21005
  %13 = load i32, ptr %5, align 4, !dbg !21006
  %14 = icmp slt i32 %13, 0, !dbg !21008
  br i1 %14, label %18, label %15, !dbg !21009

15:                                               ; preds = %3
  %16 = load i32, ptr %6, align 4, !dbg !21010
  %17 = icmp slt i32 %16, 0, !dbg !21011
  br i1 %17, label %18, label %19, !dbg !21012

18:                                               ; preds = %15, %3
  store i32 -22, ptr %4, align 4, !dbg !21013
  br label %84, !dbg !21013

19:                                               ; preds = %15
  %20 = load i32, ptr %5, align 4, !dbg !21014
  %21 = call i32 @fstat(i32 noundef %20, ptr noundef %8) #18, !dbg !21016
  %22 = icmp slt i32 %21, 0, !dbg !21017
  br i1 %22, label %23, label %27, !dbg !21018

23:                                               ; preds = %19
  %24 = call ptr @__errno_location() #20, !dbg !21019
  %25 = load i32, ptr %24, align 4, !dbg !21019
  %26 = sub nsw i32 0, %25, !dbg !21020
  store i32 %26, ptr %4, align 4, !dbg !21021
  br label %84, !dbg !21021

27:                                               ; preds = %19
  %28 = getelementptr inbounds %struct.stat, ptr %8, i32 0, i32 3, !dbg !21022
  %29 = load i32, ptr %28, align 8, !dbg !21022
  %30 = and i32 %29, 61440, !dbg !21022
  %31 = icmp eq i32 %30, 49152, !dbg !21022
  br i1 %31, label %33, label %32, !dbg !21024

32:                                               ; preds = %27
  store i32 0, ptr %4, align 4, !dbg !21025
  br label %84, !dbg !21025

33:                                               ; preds = %27
  %34 = load i32, ptr %6, align 4, !dbg !21026
  %35 = icmp ne i32 %34, 0, !dbg !21028
  br i1 %35, label %36, label %55, !dbg !21029

36:                                               ; preds = %33
  call void @llvm.dbg.declare(metadata ptr %9, metadata !21030, metadata !DIExpression()), !dbg !21032
  store i32 0, ptr %9, align 4, !dbg !21032
  call void @llvm.dbg.declare(metadata ptr %10, metadata !21033, metadata !DIExpression()), !dbg !21034
  store i32 4, ptr %10, align 4, !dbg !21034
  %37 = load i32, ptr %5, align 4, !dbg !21035
  %38 = call i32 @getsockopt(i32 noundef %37, i32 noundef 1, i32 noundef 3, ptr noundef %9, ptr noundef %10) #18, !dbg !21037
  %39 = icmp slt i32 %38, 0, !dbg !21038
  br i1 %39, label %40, label %44, !dbg !21039

40:                                               ; preds = %36
  %41 = call ptr @__errno_location() #20, !dbg !21040
  %42 = load i32, ptr %41, align 4, !dbg !21040
  %43 = sub nsw i32 0, %42, !dbg !21041
  store i32 %43, ptr %4, align 4, !dbg !21042
  br label %84, !dbg !21042

44:                                               ; preds = %36
  %45 = load i32, ptr %10, align 4, !dbg !21043
  %46 = zext i32 %45 to i64, !dbg !21043
  %47 = icmp ne i64 %46, 4, !dbg !21045
  br i1 %47, label %48, label %49, !dbg !21046

48:                                               ; preds = %44
  store i32 -22, ptr %4, align 4, !dbg !21047
  br label %84, !dbg !21047

49:                                               ; preds = %44
  %50 = load i32, ptr %9, align 4, !dbg !21048
  %51 = load i32, ptr %6, align 4, !dbg !21050
  %52 = icmp ne i32 %50, %51, !dbg !21051
  br i1 %52, label %53, label %54, !dbg !21052

53:                                               ; preds = %49
  store i32 0, ptr %4, align 4, !dbg !21053
  br label %84, !dbg !21053

54:                                               ; preds = %49
  br label %55, !dbg !21054

55:                                               ; preds = %54, %33
  %56 = load i32, ptr %7, align 4, !dbg !21055
  %57 = icmp sge i32 %56, 0, !dbg !21057
  br i1 %57, label %58, label %83, !dbg !21058

58:                                               ; preds = %55
  call void @llvm.dbg.declare(metadata ptr %11, metadata !21059, metadata !DIExpression()), !dbg !21061
  store i32 0, ptr %11, align 4, !dbg !21061
  call void @llvm.dbg.declare(metadata ptr %12, metadata !21062, metadata !DIExpression()), !dbg !21063
  store i32 4, ptr %12, align 4, !dbg !21063
  %59 = load i32, ptr %5, align 4, !dbg !21064
  %60 = call i32 @getsockopt(i32 noundef %59, i32 noundef 1, i32 noundef 30, ptr noundef %11, ptr noundef %12) #18, !dbg !21066
  %61 = icmp slt i32 %60, 0, !dbg !21067
  br i1 %61, label %62, label %66, !dbg !21068

62:                                               ; preds = %58
  %63 = call ptr @__errno_location() #20, !dbg !21069
  %64 = load i32, ptr %63, align 4, !dbg !21069
  %65 = sub nsw i32 0, %64, !dbg !21070
  store i32 %65, ptr %4, align 4, !dbg !21071
  br label %84, !dbg !21071

66:                                               ; preds = %58
  %67 = load i32, ptr %12, align 4, !dbg !21072
  %68 = zext i32 %67 to i64, !dbg !21072
  %69 = icmp ne i64 %68, 4, !dbg !21074
  br i1 %69, label %70, label %71, !dbg !21075

70:                                               ; preds = %66
  store i32 -22, ptr %4, align 4, !dbg !21076
  br label %84, !dbg !21076

71:                                               ; preds = %66
  %72 = load i32, ptr %11, align 4, !dbg !21077
  %73 = icmp ne i32 %72, 0, !dbg !21079
  %74 = xor i1 %73, true, !dbg !21079
  %75 = zext i1 %74 to i32, !dbg !21079
  %76 = load i32, ptr %7, align 4, !dbg !21080
  %77 = icmp ne i32 %76, 0, !dbg !21081
  %78 = xor i1 %77, true, !dbg !21081
  %79 = zext i1 %78 to i32, !dbg !21081
  %80 = icmp ne i32 %75, %79, !dbg !21082
  br i1 %80, label %81, label %82, !dbg !21083

81:                                               ; preds = %71
  store i32 0, ptr %4, align 4, !dbg !21084
  br label %84, !dbg !21084

82:                                               ; preds = %71
  br label %83, !dbg !21085

83:                                               ; preds = %82, %55
  store i32 1, ptr %4, align 4, !dbg !21086
  br label %84, !dbg !21086

84:                                               ; preds = %83, %81, %70, %62, %53, %48, %40, %32, %23, %18
  %85 = load i32, ptr %4, align 4, !dbg !21087
  ret i32 %85, !dbg !21087
}

; Function Attrs: nounwind
declare i32 @getsockname(i32 noundef, ptr, ptr noundef) #3

; Function Attrs: nounwind
declare i32 @getsockopt(i32 noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @sd_is_socket_inet(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i16 noundef zeroext %4) #0 !dbg !21088 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i16, align 2
  %12 = alloca %union.sockaddr_union, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %union.__SOCKADDR_ARG, align 8
  store i32 %0, ptr %7, align 4
  call void @llvm.dbg.declare(metadata ptr %7, metadata !21091, metadata !DIExpression()), !dbg !21092
  store i32 %1, ptr %8, align 4
  call void @llvm.dbg.declare(metadata ptr %8, metadata !21093, metadata !DIExpression()), !dbg !21094
  store i32 %2, ptr %9, align 4
  call void @llvm.dbg.declare(metadata ptr %9, metadata !21095, metadata !DIExpression()), !dbg !21096
  store i32 %3, ptr %10, align 4
  call void @llvm.dbg.declare(metadata ptr %10, metadata !21097, metadata !DIExpression()), !dbg !21098
  store i16 %4, ptr %11, align 2
  call void @llvm.dbg.declare(metadata ptr %11, metadata !21099, metadata !DIExpression()), !dbg !21100
  call void @llvm.dbg.declare(metadata ptr %12, metadata !21101, metadata !DIExpression()), !dbg !21102
  call void @llvm.memset.p0.i64(ptr align 8 %12, i8 0, i64 128, i1 false), !dbg !21102
  call void @llvm.dbg.declare(metadata ptr %13, metadata !21103, metadata !DIExpression()), !dbg !21104
  store i32 128, ptr %13, align 4, !dbg !21104
  call void @llvm.dbg.declare(metadata ptr %14, metadata !21105, metadata !DIExpression()), !dbg !21106
  %16 = load i32, ptr %8, align 4, !dbg !21107
  %17 = icmp ne i32 %16, 0, !dbg !21109
  br i1 %17, label %18, label %25, !dbg !21110

18:                                               ; preds = %5
  %19 = load i32, ptr %8, align 4, !dbg !21111
  %20 = icmp ne i32 %19, 2, !dbg !21112
  br i1 %20, label %21, label %25, !dbg !21113

21:                                               ; preds = %18
  %22 = load i32, ptr %8, align 4, !dbg !21114
  %23 = icmp ne i32 %22, 10, !dbg !21115
  br i1 %23, label %24, label %25, !dbg !21116

24:                                               ; preds = %21
  store i32 -22, ptr %6, align 4, !dbg !21117
  br label %109, !dbg !21117

25:                                               ; preds = %21, %18, %5
  %26 = load i32, ptr %7, align 4, !dbg !21118
  %27 = load i32, ptr %9, align 4, !dbg !21119
  %28 = load i32, ptr %10, align 4, !dbg !21120
  %29 = call i32 @sd_is_socket_internal(i32 noundef %26, i32 noundef %27, i32 noundef %28), !dbg !21121
  store i32 %29, ptr %14, align 4, !dbg !21122
  %30 = load i32, ptr %14, align 4, !dbg !21123
  %31 = icmp sle i32 %30, 0, !dbg !21125
  br i1 %31, label %32, label %34, !dbg !21126

32:                                               ; preds = %25
  %33 = load i32, ptr %14, align 4, !dbg !21127
  store i32 %33, ptr %6, align 4, !dbg !21128
  br label %109, !dbg !21128

34:                                               ; preds = %25
  %35 = load i32, ptr %7, align 4, !dbg !21129
  store ptr %12, ptr %15, align 8, !dbg !21131
  %36 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %15, i32 0, i32 0, !dbg !21132
  %37 = load ptr, ptr %36, align 8, !dbg !21132
  %38 = call i32 @getsockname(i32 noundef %35, ptr %37, ptr noundef %13) #18, !dbg !21132
  %39 = icmp slt i32 %38, 0, !dbg !21133
  br i1 %39, label %40, label %44, !dbg !21134

40:                                               ; preds = %34
  %41 = call ptr @__errno_location() #20, !dbg !21135
  %42 = load i32, ptr %41, align 4, !dbg !21135
  %43 = sub nsw i32 0, %42, !dbg !21136
  store i32 %43, ptr %6, align 4, !dbg !21137
  br label %109, !dbg !21137

44:                                               ; preds = %34
  %45 = load i32, ptr %13, align 4, !dbg !21138
  %46 = zext i32 %45 to i64, !dbg !21138
  %47 = icmp ult i64 %46, 2, !dbg !21140
  br i1 %47, label %48, label %49, !dbg !21141

48:                                               ; preds = %44
  store i32 -22, ptr %6, align 4, !dbg !21142
  br label %109, !dbg !21142

49:                                               ; preds = %44
  %50 = getelementptr inbounds %struct.sockaddr, ptr %12, i32 0, i32 0, !dbg !21143
  %51 = load i16, ptr %50, align 8, !dbg !21143
  %52 = zext i16 %51 to i32, !dbg !21145
  %53 = icmp ne i32 %52, 2, !dbg !21146
  br i1 %53, label %54, label %60, !dbg !21147

54:                                               ; preds = %49
  %55 = getelementptr inbounds %struct.sockaddr, ptr %12, i32 0, i32 0, !dbg !21148
  %56 = load i16, ptr %55, align 8, !dbg !21148
  %57 = zext i16 %56 to i32, !dbg !21149
  %58 = icmp ne i32 %57, 10, !dbg !21150
  br i1 %58, label %59, label %60, !dbg !21151

59:                                               ; preds = %54
  store i32 0, ptr %6, align 4, !dbg !21152
  br label %109, !dbg !21152

60:                                               ; preds = %54, %49
  %61 = load i32, ptr %8, align 4, !dbg !21153
  %62 = icmp sgt i32 %61, 0, !dbg !21155
  br i1 %62, label %63, label %71, !dbg !21156

63:                                               ; preds = %60
  %64 = getelementptr inbounds %struct.sockaddr, ptr %12, i32 0, i32 0, !dbg !21157
  %65 = load i16, ptr %64, align 8, !dbg !21157
  %66 = zext i16 %65 to i32, !dbg !21159
  %67 = load i32, ptr %8, align 4, !dbg !21160
  %68 = icmp ne i32 %66, %67, !dbg !21161
  br i1 %68, label %69, label %70, !dbg !21162

69:                                               ; preds = %63
  store i32 0, ptr %6, align 4, !dbg !21163
  br label %109, !dbg !21163

70:                                               ; preds = %63
  br label %71, !dbg !21160

71:                                               ; preds = %70, %60
  %72 = load i16, ptr %11, align 2, !dbg !21164
  %73 = zext i16 %72 to i32, !dbg !21164
  %74 = icmp sgt i32 %73, 0, !dbg !21166
  br i1 %74, label %75, label %108, !dbg !21167

75:                                               ; preds = %71
  %76 = getelementptr inbounds %struct.sockaddr, ptr %12, i32 0, i32 0, !dbg !21168
  %77 = load i16, ptr %76, align 8, !dbg !21168
  %78 = zext i16 %77 to i32, !dbg !21171
  %79 = icmp eq i32 %78, 2, !dbg !21172
  br i1 %79, label %80, label %94, !dbg !21173

80:                                               ; preds = %75
  %81 = load i32, ptr %13, align 4, !dbg !21174
  %82 = zext i32 %81 to i64, !dbg !21174
  %83 = icmp ult i64 %82, 16, !dbg !21177
  br i1 %83, label %84, label %85, !dbg !21178

84:                                               ; preds = %80
  store i32 -22, ptr %6, align 4, !dbg !21179
  br label %109, !dbg !21179

85:                                               ; preds = %80
  %86 = load i16, ptr %11, align 2, !dbg !21180
  %87 = call zeroext i16 @htons(i16 noundef zeroext %86) #20, !dbg !21181
  %88 = zext i16 %87 to i32, !dbg !21181
  %89 = getelementptr inbounds %struct.sockaddr_in, ptr %12, i32 0, i32 1, !dbg !21182
  %90 = load i16, ptr %89, align 2, !dbg !21182
  %91 = zext i16 %90 to i32, !dbg !21183
  %92 = icmp eq i32 %88, %91, !dbg !21184
  %93 = zext i1 %92 to i32, !dbg !21184
  store i32 %93, ptr %6, align 4, !dbg !21185
  br label %109, !dbg !21185

94:                                               ; preds = %75
  %95 = load i32, ptr %13, align 4, !dbg !21186
  %96 = zext i32 %95 to i64, !dbg !21186
  %97 = icmp ult i64 %96, 28, !dbg !21189
  br i1 %97, label %98, label %99, !dbg !21190

98:                                               ; preds = %94
  store i32 -22, ptr %6, align 4, !dbg !21191
  br label %109, !dbg !21191

99:                                               ; preds = %94
  %100 = load i16, ptr %11, align 2, !dbg !21192
  %101 = call zeroext i16 @htons(i16 noundef zeroext %100) #20, !dbg !21193
  %102 = zext i16 %101 to i32, !dbg !21193
  %103 = getelementptr inbounds %struct.sockaddr_in6, ptr %12, i32 0, i32 1, !dbg !21194
  %104 = load i16, ptr %103, align 2, !dbg !21194
  %105 = zext i16 %104 to i32, !dbg !21195
  %106 = icmp eq i32 %102, %105, !dbg !21196
  %107 = zext i1 %106 to i32, !dbg !21196
  store i32 %107, ptr %6, align 4, !dbg !21197
  br label %109, !dbg !21197

108:                                              ; preds = %71
  store i32 1, ptr %6, align 4, !dbg !21198
  br label %109, !dbg !21198

109:                                              ; preds = %108, %99, %98, %85, %84, %69, %59, %48, %40, %32, %24
  %110 = load i32, ptr %6, align 4, !dbg !21199
  ret i32 %110, !dbg !21199
}

; Function Attrs: nounwind willreturn memory(none)
declare zeroext i16 @htons(i16 noundef zeroext) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @sd_is_socket_unix(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef %3, i64 noundef %4) #0 !dbg !21200 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca i64, align 8
  %12 = alloca %union.sockaddr_union, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %union.__SOCKADDR_ARG, align 8
  store i32 %0, ptr %7, align 4
  call void @llvm.dbg.declare(metadata ptr %7, metadata !21203, metadata !DIExpression()), !dbg !21204
  store i32 %1, ptr %8, align 4
  call void @llvm.dbg.declare(metadata ptr %8, metadata !21205, metadata !DIExpression()), !dbg !21206
  store i32 %2, ptr %9, align 4
  call void @llvm.dbg.declare(metadata ptr %9, metadata !21207, metadata !DIExpression()), !dbg !21208
  store ptr %3, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %10, metadata !21209, metadata !DIExpression()), !dbg !21210
  store i64 %4, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !21211, metadata !DIExpression()), !dbg !21212
  call void @llvm.dbg.declare(metadata ptr %12, metadata !21213, metadata !DIExpression()), !dbg !21214
  call void @llvm.memset.p0.i64(ptr align 8 %12, i8 0, i64 128, i1 false), !dbg !21214
  call void @llvm.dbg.declare(metadata ptr %13, metadata !21215, metadata !DIExpression()), !dbg !21216
  store i32 128, ptr %13, align 4, !dbg !21216
  call void @llvm.dbg.declare(metadata ptr %14, metadata !21217, metadata !DIExpression()), !dbg !21218
  %16 = load i32, ptr %7, align 4, !dbg !21219
  %17 = load i32, ptr %8, align 4, !dbg !21220
  %18 = load i32, ptr %9, align 4, !dbg !21221
  %19 = call i32 @sd_is_socket_internal(i32 noundef %16, i32 noundef %17, i32 noundef %18), !dbg !21222
  store i32 %19, ptr %14, align 4, !dbg !21223
  %20 = load i32, ptr %14, align 4, !dbg !21224
  %21 = icmp sle i32 %20, 0, !dbg !21226
  br i1 %21, label %22, label %24, !dbg !21227

22:                                               ; preds = %5
  %23 = load i32, ptr %14, align 4, !dbg !21228
  store i32 %23, ptr %6, align 4, !dbg !21229
  br label %102, !dbg !21229

24:                                               ; preds = %5
  %25 = load i32, ptr %7, align 4, !dbg !21230
  store ptr %12, ptr %15, align 8, !dbg !21232
  %26 = getelementptr inbounds %union.__SOCKADDR_ARG, ptr %15, i32 0, i32 0, !dbg !21233
  %27 = load ptr, ptr %26, align 8, !dbg !21233
  %28 = call i32 @getsockname(i32 noundef %25, ptr %27, ptr noundef %13) #18, !dbg !21233
  %29 = icmp slt i32 %28, 0, !dbg !21234
  br i1 %29, label %30, label %34, !dbg !21235

30:                                               ; preds = %24
  %31 = call ptr @__errno_location() #20, !dbg !21236
  %32 = load i32, ptr %31, align 4, !dbg !21236
  %33 = sub nsw i32 0, %32, !dbg !21237
  store i32 %33, ptr %6, align 4, !dbg !21238
  br label %102, !dbg !21238

34:                                               ; preds = %24
  %35 = load i32, ptr %13, align 4, !dbg !21239
  %36 = zext i32 %35 to i64, !dbg !21239
  %37 = icmp ult i64 %36, 2, !dbg !21241
  br i1 %37, label %38, label %39, !dbg !21242

38:                                               ; preds = %34
  store i32 -22, ptr %6, align 4, !dbg !21243
  br label %102, !dbg !21243

39:                                               ; preds = %34
  %40 = getelementptr inbounds %struct.sockaddr, ptr %12, i32 0, i32 0, !dbg !21244
  %41 = load i16, ptr %40, align 8, !dbg !21244
  %42 = zext i16 %41 to i32, !dbg !21246
  %43 = icmp ne i32 %42, 1, !dbg !21247
  br i1 %43, label %44, label %45, !dbg !21248

44:                                               ; preds = %39
  store i32 0, ptr %6, align 4, !dbg !21249
  br label %102, !dbg !21249

45:                                               ; preds = %39
  %46 = load ptr, ptr %10, align 8, !dbg !21250
  %47 = icmp ne ptr %46, null, !dbg !21250
  br i1 %47, label %48, label %101, !dbg !21252

48:                                               ; preds = %45
  %49 = load i64, ptr %11, align 8, !dbg !21253
  %50 = icmp eq i64 %49, 0, !dbg !21256
  br i1 %50, label %51, label %54, !dbg !21257

51:                                               ; preds = %48
  %52 = load ptr, ptr %10, align 8, !dbg !21258
  %53 = call i64 @strlen(ptr noundef %52) #22, !dbg !21259
  store i64 %53, ptr %11, align 8, !dbg !21260
  br label %54, !dbg !21261

54:                                               ; preds = %51, %48
  %55 = load i64, ptr %11, align 8, !dbg !21262
  %56 = icmp eq i64 %55, 0, !dbg !21264
  br i1 %56, label %57, label %62, !dbg !21265

57:                                               ; preds = %54
  %58 = load i32, ptr %13, align 4, !dbg !21266
  %59 = zext i32 %58 to i64, !dbg !21266
  %60 = icmp eq i64 %59, 2, !dbg !21267
  %61 = zext i1 %60 to i32, !dbg !21267
  store i32 %61, ptr %6, align 4, !dbg !21268
  br label %102, !dbg !21268

62:                                               ; preds = %54
  %63 = load ptr, ptr %10, align 8, !dbg !21269
  %64 = getelementptr inbounds i8, ptr %63, i64 0, !dbg !21269
  %65 = load i8, ptr %64, align 1, !dbg !21269
  %66 = icmp ne i8 %65, 0, !dbg !21269
  br i1 %66, label %67, label %85, !dbg !21271

67:                                               ; preds = %62
  %68 = load i32, ptr %13, align 4, !dbg !21272
  %69 = zext i32 %68 to i64, !dbg !21272
  %70 = load i64, ptr %11, align 8, !dbg !21273
  %71 = add i64 2, %70, !dbg !21274
  %72 = add i64 %71, 1, !dbg !21275
  %73 = icmp uge i64 %69, %72, !dbg !21276
  br i1 %73, label %74, label %82, !dbg !21277

74:                                               ; preds = %67
  %75 = load ptr, ptr %10, align 8, !dbg !21278
  %76 = getelementptr inbounds %struct.sockaddr_un, ptr %12, i32 0, i32 1, !dbg !21279
  %77 = getelementptr inbounds [108 x i8], ptr %76, i64 0, i64 0, !dbg !21280
  %78 = load i64, ptr %11, align 8, !dbg !21281
  %79 = add i64 %78, 1, !dbg !21282
  %80 = call i32 @memcmp(ptr noundef %75, ptr noundef %77, i64 noundef %79) #22, !dbg !21283
  %81 = icmp eq i32 %80, 0, !dbg !21284
  br label %82

82:                                               ; preds = %74, %67
  %83 = phi i1 [ false, %67 ], [ %81, %74 ], !dbg !21285
  %84 = zext i1 %83 to i32, !dbg !21277
  store i32 %84, ptr %6, align 4, !dbg !21286
  br label %102, !dbg !21286

85:                                               ; preds = %62
  %86 = load i32, ptr %13, align 4, !dbg !21287
  %87 = zext i32 %86 to i64, !dbg !21287
  %88 = load i64, ptr %11, align 8, !dbg !21288
  %89 = add i64 2, %88, !dbg !21289
  %90 = icmp eq i64 %87, %89, !dbg !21290
  br i1 %90, label %91, label %98, !dbg !21291

91:                                               ; preds = %85
  %92 = load ptr, ptr %10, align 8, !dbg !21292
  %93 = getelementptr inbounds %struct.sockaddr_un, ptr %12, i32 0, i32 1, !dbg !21293
  %94 = getelementptr inbounds [108 x i8], ptr %93, i64 0, i64 0, !dbg !21294
  %95 = load i64, ptr %11, align 8, !dbg !21295
  %96 = call i32 @memcmp(ptr noundef %92, ptr noundef %94, i64 noundef %95) #22, !dbg !21296
  %97 = icmp eq i32 %96, 0, !dbg !21297
  br label %98

98:                                               ; preds = %91, %85
  %99 = phi i1 [ false, %85 ], [ %97, %91 ], !dbg !21285
  %100 = zext i1 %99 to i32, !dbg !21291
  store i32 %100, ptr %6, align 4, !dbg !21298
  br label %102, !dbg !21298

101:                                              ; preds = %45
  store i32 1, ptr %6, align 4, !dbg !21299
  br label %102, !dbg !21299

102:                                              ; preds = %101, %98, %82, %57, %44, %38, %30, %22
  %103 = load i32, ptr %6, align 4, !dbg !21300
  ret i32 %103, !dbg !21300
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @sd_notify(i32 noundef %0, ptr noundef %1) #0 !dbg !21301 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.msghdr, align 8
  %9 = alloca %struct.lwan_value_t_, align 8
  %10 = alloca %union.sockaddr_union, align 8
  %11 = alloca ptr, align 8
  store i32 %0, ptr %4, align 4
  call void @llvm.dbg.declare(metadata ptr %4, metadata !21302, metadata !DIExpression()), !dbg !21303
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !21304, metadata !DIExpression()), !dbg !21305
  call void @llvm.dbg.declare(metadata ptr %6, metadata !21306, metadata !DIExpression()), !dbg !21307
  store i32 -1, ptr %6, align 4, !dbg !21307
  call void @llvm.dbg.declare(metadata ptr %7, metadata !21308, metadata !DIExpression()), !dbg !21309
  call void @llvm.dbg.declare(metadata ptr %8, metadata !21310, metadata !DIExpression()), !dbg !21325
  call void @llvm.dbg.declare(metadata ptr %9, metadata !21326, metadata !DIExpression()), !dbg !21327
  call void @llvm.dbg.declare(metadata ptr %10, metadata !21328, metadata !DIExpression()), !dbg !21329
  call void @llvm.dbg.declare(metadata ptr %11, metadata !21330, metadata !DIExpression()), !dbg !21331
  %12 = load ptr, ptr %5, align 8, !dbg !21332
  %13 = icmp ne ptr %12, null, !dbg !21332
  br i1 %13, label %15, label %14, !dbg !21334

14:                                               ; preds = %2
  store i32 -22, ptr %7, align 4, !dbg !21335
  br label %90, !dbg !21337

15:                                               ; preds = %2
  %16 = call ptr @getenv(ptr noundef @.str.2.434) #18, !dbg !21338
  store ptr %16, ptr %11, align 8, !dbg !21339
  %17 = load ptr, ptr %11, align 8, !dbg !21340
  %18 = icmp ne ptr %17, null, !dbg !21340
  br i1 %18, label %20, label %19, !dbg !21342

19:                                               ; preds = %15
  store i32 0, ptr %3, align 4, !dbg !21343
  br label %103, !dbg !21343

20:                                               ; preds = %15
  %21 = load ptr, ptr %11, align 8, !dbg !21344
  %22 = getelementptr inbounds i8, ptr %21, i64 0, !dbg !21344
  %23 = load i8, ptr %22, align 1, !dbg !21344
  %24 = sext i8 %23 to i32, !dbg !21344
  %25 = icmp ne i32 %24, 64, !dbg !21346
  br i1 %25, label %26, label %32, !dbg !21347

26:                                               ; preds = %20
  %27 = load ptr, ptr %11, align 8, !dbg !21348
  %28 = getelementptr inbounds i8, ptr %27, i64 0, !dbg !21348
  %29 = load i8, ptr %28, align 1, !dbg !21348
  %30 = sext i8 %29 to i32, !dbg !21348
  %31 = icmp ne i32 %30, 47, !dbg !21349
  br i1 %31, label %38, label %32, !dbg !21350

32:                                               ; preds = %26, %20
  %33 = load ptr, ptr %11, align 8, !dbg !21351
  %34 = getelementptr inbounds i8, ptr %33, i64 1, !dbg !21351
  %35 = load i8, ptr %34, align 1, !dbg !21351
  %36 = sext i8 %35 to i32, !dbg !21351
  %37 = icmp eq i32 %36, 0, !dbg !21352
  br i1 %37, label %38, label %39, !dbg !21353

38:                                               ; preds = %32, %26
  store i32 -22, ptr %7, align 4, !dbg !21354
  br label %90, !dbg !21356

39:                                               ; preds = %32
  %40 = call i32 @socket(i32 noundef 1, i32 noundef 524290, i32 noundef 0) #18, !dbg !21357
  store i32 %40, ptr %6, align 4, !dbg !21358
  %41 = load i32, ptr %6, align 4, !dbg !21359
  %42 = icmp slt i32 %41, 0, !dbg !21361
  br i1 %42, label %43, label %47, !dbg !21362

43:                                               ; preds = %39
  %44 = call ptr @__errno_location() #20, !dbg !21363
  %45 = load i32, ptr %44, align 4, !dbg !21363
  %46 = sub nsw i32 0, %45, !dbg !21365
  store i32 %46, ptr %7, align 4, !dbg !21366
  br label %90, !dbg !21367

47:                                               ; preds = %39
  call void @llvm.memset.p0.i64(ptr align 8 %10, i8 0, i64 128, i1 false), !dbg !21368
  %48 = getelementptr inbounds %struct.sockaddr, ptr %10, i32 0, i32 0, !dbg !21369
  store i16 1, ptr %48, align 8, !dbg !21370
  %49 = getelementptr inbounds %struct.sockaddr_un, ptr %10, i32 0, i32 1, !dbg !21371
  %50 = getelementptr inbounds [108 x i8], ptr %49, i64 0, i64 0, !dbg !21372
  %51 = load ptr, ptr %11, align 8, !dbg !21373
  %52 = call ptr @strncpy(ptr noundef %50, ptr noundef %51, i64 noundef 108) #18, !dbg !21374
  %53 = getelementptr inbounds %struct.sockaddr_un, ptr %10, i32 0, i32 1, !dbg !21375
  %54 = getelementptr inbounds [108 x i8], ptr %53, i64 0, i64 0, !dbg !21377
  %55 = load i8, ptr %54, align 2, !dbg !21377
  %56 = sext i8 %55 to i32, !dbg !21377
  %57 = icmp eq i32 %56, 64, !dbg !21378
  br i1 %57, label %58, label %61, !dbg !21379

58:                                               ; preds = %47
  %59 = getelementptr inbounds %struct.sockaddr_un, ptr %10, i32 0, i32 1, !dbg !21380
  %60 = getelementptr inbounds [108 x i8], ptr %59, i64 0, i64 0, !dbg !21381
  store i8 0, ptr %60, align 2, !dbg !21382
  br label %61, !dbg !21381

61:                                               ; preds = %58, %47
  call void @llvm.memset.p0.i64(ptr align 8 %9, i8 0, i64 16, i1 false), !dbg !21383
  %62 = load ptr, ptr %5, align 8, !dbg !21384
  %63 = getelementptr inbounds %struct.lwan_value_t_, ptr %9, i32 0, i32 0, !dbg !21385
  store ptr %62, ptr %63, align 8, !dbg !21386
  %64 = load ptr, ptr %5, align 8, !dbg !21387
  %65 = call i64 @strlen(ptr noundef %64) #22, !dbg !21388
  %66 = getelementptr inbounds %struct.lwan_value_t_, ptr %9, i32 0, i32 1, !dbg !21389
  store i64 %65, ptr %66, align 8, !dbg !21390
  call void @llvm.memset.p0.i64(ptr align 8 %8, i8 0, i64 56, i1 false), !dbg !21391
  %67 = getelementptr inbounds %struct.msghdr, ptr %8, i32 0, i32 0, !dbg !21392
  store ptr %10, ptr %67, align 8, !dbg !21393
  %68 = load ptr, ptr %11, align 8, !dbg !21394
  %69 = call i64 @strlen(ptr noundef %68) #22, !dbg !21395
  %70 = add i64 2, %69, !dbg !21396
  %71 = trunc i64 %70 to i32, !dbg !21397
  %72 = getelementptr inbounds %struct.msghdr, ptr %8, i32 0, i32 1, !dbg !21398
  store i32 %71, ptr %72, align 8, !dbg !21399
  %73 = getelementptr inbounds %struct.msghdr, ptr %8, i32 0, i32 1, !dbg !21400
  %74 = load i32, ptr %73, align 8, !dbg !21400
  %75 = zext i32 %74 to i64, !dbg !21402
  %76 = icmp ugt i64 %75, 110, !dbg !21403
  br i1 %76, label %77, label %79, !dbg !21404

77:                                               ; preds = %61
  %78 = getelementptr inbounds %struct.msghdr, ptr %8, i32 0, i32 1, !dbg !21405
  store i32 110, ptr %78, align 8, !dbg !21406
  br label %79, !dbg !21407

79:                                               ; preds = %77, %61
  %80 = getelementptr inbounds %struct.msghdr, ptr %8, i32 0, i32 2, !dbg !21408
  store ptr %9, ptr %80, align 8, !dbg !21409
  %81 = getelementptr inbounds %struct.msghdr, ptr %8, i32 0, i32 3, !dbg !21410
  store i64 1, ptr %81, align 8, !dbg !21411
  %82 = load i32, ptr %6, align 4, !dbg !21412
  %83 = call i64 @sendmsg(i32 noundef %82, ptr noundef %8, i32 noundef 16384), !dbg !21414
  %84 = icmp slt i64 %83, 0, !dbg !21415
  br i1 %84, label %85, label %89, !dbg !21416

85:                                               ; preds = %79
  %86 = call ptr @__errno_location() #20, !dbg !21417
  %87 = load i32, ptr %86, align 4, !dbg !21417
  %88 = sub nsw i32 0, %87, !dbg !21419
  store i32 %88, ptr %7, align 4, !dbg !21420
  br label %90, !dbg !21421

89:                                               ; preds = %79
  store i32 1, ptr %7, align 4, !dbg !21422
  br label %90, !dbg !21423

90:                                               ; preds = %89, %85, %43, %38, %14
  call void @llvm.dbg.label(metadata !21424), !dbg !21425
  %91 = load i32, ptr %4, align 4, !dbg !21426
  %92 = icmp ne i32 %91, 0, !dbg !21426
  br i1 %92, label %93, label %95, !dbg !21428

93:                                               ; preds = %90
  %94 = call i32 @unsetenv(ptr noundef @.str.2.434) #18, !dbg !21429
  br label %95, !dbg !21429

95:                                               ; preds = %93, %90
  %96 = load i32, ptr %6, align 4, !dbg !21430
  %97 = icmp sge i32 %96, 0, !dbg !21432
  br i1 %97, label %98, label %101, !dbg !21433

98:                                               ; preds = %95
  %99 = load i32, ptr %6, align 4, !dbg !21434
  %100 = call i32 @close(i32 noundef %99), !dbg !21435
  br label %101, !dbg !21435

101:                                              ; preds = %98, %95
  %102 = load i32, ptr %7, align 4, !dbg !21436
  store i32 %102, ptr %3, align 4, !dbg !21437
  br label %103, !dbg !21437

103:                                              ; preds = %101, %19
  %104 = load i32, ptr %3, align 4, !dbg !21438
  ret i32 %104, !dbg !21438
}

declare i64 @sendmsg(i32 noundef, ptr noundef, i32 noundef) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @sd_notifyf(i32 noundef %0, ptr noundef %1, ...) #0 !dbg !21439 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  store i32 %0, ptr %4, align 4
  call void @llvm.dbg.declare(metadata ptr %4, metadata !21442, metadata !DIExpression()), !dbg !21443
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !21444, metadata !DIExpression()), !dbg !21445
  call void @llvm.dbg.declare(metadata ptr %6, metadata !21446, metadata !DIExpression()), !dbg !21458
  call void @llvm.dbg.declare(metadata ptr %7, metadata !21459, metadata !DIExpression()), !dbg !21460
  store ptr null, ptr %7, align 8, !dbg !21460
  call void @llvm.dbg.declare(metadata ptr %8, metadata !21461, metadata !DIExpression()), !dbg !21462
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %6, i64 0, i64 0, !dbg !21463
  call void @llvm.va_start(ptr %9), !dbg !21463
  %10 = load ptr, ptr %5, align 8, !dbg !21464
  %11 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %6, i64 0, i64 0, !dbg !21465
  %12 = call i32 @vasprintf(ptr noundef %7, ptr noundef %10, ptr noundef %11) #18, !dbg !21466
  store i32 %12, ptr %8, align 4, !dbg !21467
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %6, i64 0, i64 0, !dbg !21468
  call void @llvm.va_end(ptr %13), !dbg !21468
  %14 = load i32, ptr %8, align 4, !dbg !21469
  %15 = icmp slt i32 %14, 0, !dbg !21471
  br i1 %15, label %19, label %16, !dbg !21472

16:                                               ; preds = %2
  %17 = load ptr, ptr %7, align 8, !dbg !21473
  %18 = icmp ne ptr %17, null, !dbg !21473
  br i1 %18, label %20, label %19, !dbg !21474

19:                                               ; preds = %16, %2
  store i32 -12, ptr %3, align 4, !dbg !21475
  br label %26, !dbg !21475

20:                                               ; preds = %16
  %21 = load i32, ptr %4, align 4, !dbg !21476
  %22 = load ptr, ptr %7, align 8, !dbg !21477
  %23 = call i32 @sd_notify(i32 noundef %21, ptr noundef %22), !dbg !21478
  store i32 %23, ptr %8, align 4, !dbg !21479
  %24 = load ptr, ptr %7, align 8, !dbg !21480
  call void @free(ptr noundef %24) #18, !dbg !21481
  %25 = load i32, ptr %8, align 4, !dbg !21482
  store i32 %25, ptr %3, align 4, !dbg !21483
  br label %26, !dbg !21483

26:                                               ; preds = %20, %19
  %27 = load i32, ptr %3, align 4, !dbg !21484
  ret i32 %27, !dbg !21484
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @sd_booted() #0 !dbg !21485 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.stat, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !21486, metadata !DIExpression()), !dbg !21487
  %3 = call i32 @lstat(ptr noundef @.str.3.435, ptr noundef %2) #18, !dbg !21488
  %4 = icmp slt i32 %3, 0, !dbg !21490
  br i1 %4, label %5, label %6, !dbg !21491

5:                                                ; preds = %0
  store i32 0, ptr %1, align 4, !dbg !21492
  br label %14, !dbg !21492

6:                                                ; preds = %0
  %7 = getelementptr inbounds %struct.stat, ptr %2, i32 0, i32 3, !dbg !21493
  %8 = load i32, ptr %7, align 8, !dbg !21493
  %9 = and i32 %8, 61440, !dbg !21493
  %10 = icmp eq i32 %9, 16384, !dbg !21493
  %11 = xor i1 %10, true, !dbg !21494
  %12 = xor i1 %11, true, !dbg !21495
  %13 = zext i1 %12 to i32, !dbg !21495
  store i32 %13, ptr %1, align 4, !dbg !21496
  br label %14, !dbg !21496

14:                                               ; preds = %6, %5
  %15 = load i32, ptr %1, align 4, !dbg !21497
  ret i32 %15, !dbg !21497
}

; Function Attrs: nounwind
declare i32 @lstat(ptr noundef, ptr noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @sd_watchdog_enabled(i32 noundef %0, ptr noundef %1) #0 !dbg !21498 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  store i32 %0, ptr %3, align 4
  call void @llvm.dbg.declare(metadata ptr %3, metadata !21501, metadata !DIExpression()), !dbg !21502
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !21503, metadata !DIExpression()), !dbg !21504
  call void @llvm.dbg.declare(metadata ptr %5, metadata !21505, metadata !DIExpression()), !dbg !21507
  call void @llvm.dbg.declare(metadata ptr %6, metadata !21508, metadata !DIExpression()), !dbg !21509
  call void @llvm.dbg.declare(metadata ptr %7, metadata !21510, metadata !DIExpression()), !dbg !21511
  call void @llvm.dbg.declare(metadata ptr %8, metadata !21512, metadata !DIExpression()), !dbg !21513
  store ptr null, ptr %8, align 8, !dbg !21513
  call void @llvm.dbg.declare(metadata ptr %9, metadata !21514, metadata !DIExpression()), !dbg !21515
  %10 = call ptr @getenv(ptr noundef @.str.4.436) #18, !dbg !21516
  store ptr %10, ptr %7, align 8, !dbg !21517
  %11 = load ptr, ptr %7, align 8, !dbg !21518
  %12 = icmp ne ptr %11, null, !dbg !21518
  br i1 %12, label %14, label %13, !dbg !21520

13:                                               ; preds = %2
  store i32 0, ptr %9, align 4, !dbg !21521
  br label %86, !dbg !21523

14:                                               ; preds = %2
  %15 = call ptr @__errno_location() #20, !dbg !21524
  store i32 0, ptr %15, align 4, !dbg !21525
  %16 = load ptr, ptr %7, align 8, !dbg !21526
  %17 = call i64 @strtoul(ptr noundef %16, ptr noundef %8, i32 noundef 10) #18, !dbg !21527
  store i64 %17, ptr %6, align 8, !dbg !21528
  %18 = call ptr @__errno_location() #20, !dbg !21529
  %19 = load i32, ptr %18, align 4, !dbg !21529
  %20 = icmp sgt i32 %19, 0, !dbg !21531
  br i1 %20, label %21, label %25, !dbg !21532

21:                                               ; preds = %14
  %22 = call ptr @__errno_location() #20, !dbg !21533
  %23 = load i32, ptr %22, align 4, !dbg !21533
  %24 = sub nsw i32 0, %23, !dbg !21535
  store i32 %24, ptr %9, align 4, !dbg !21536
  br label %86, !dbg !21537

25:                                               ; preds = %14
  %26 = load ptr, ptr %8, align 8, !dbg !21538
  %27 = icmp ne ptr %26, null, !dbg !21538
  br i1 %27, label %28, label %40, !dbg !21540

28:                                               ; preds = %25
  %29 = load ptr, ptr %8, align 8, !dbg !21541
  %30 = load ptr, ptr %7, align 8, !dbg !21542
  %31 = icmp eq ptr %29, %30, !dbg !21543
  br i1 %31, label %40, label %32, !dbg !21544

32:                                               ; preds = %28
  %33 = load ptr, ptr %8, align 8, !dbg !21545
  %34 = load i8, ptr %33, align 1, !dbg !21546
  %35 = sext i8 %34 to i32, !dbg !21546
  %36 = icmp ne i32 %35, 0, !dbg !21546
  br i1 %36, label %40, label %37, !dbg !21547

37:                                               ; preds = %32
  %38 = load i64, ptr %6, align 8, !dbg !21548
  %39 = icmp ule i64 %38, 0, !dbg !21549
  br i1 %39, label %40, label %41, !dbg !21550

40:                                               ; preds = %37, %32, %28, %25
  store i32 -22, ptr %9, align 4, !dbg !21551
  br label %86, !dbg !21553

41:                                               ; preds = %37
  %42 = call i32 @getpid() #18, !dbg !21554
  %43 = load i64, ptr %6, align 8, !dbg !21556
  %44 = trunc i64 %43 to i32, !dbg !21557
  %45 = icmp ne i32 %42, %44, !dbg !21558
  br i1 %45, label %46, label %47, !dbg !21559

46:                                               ; preds = %41
  store i32 0, ptr %9, align 4, !dbg !21560
  br label %86, !dbg !21562

47:                                               ; preds = %41
  %48 = call ptr @getenv(ptr noundef @.str.5.437) #18, !dbg !21563
  store ptr %48, ptr %7, align 8, !dbg !21564
  %49 = load ptr, ptr %7, align 8, !dbg !21565
  %50 = icmp ne ptr %49, null, !dbg !21565
  br i1 %50, label %52, label %51, !dbg !21567

51:                                               ; preds = %47
  store i32 -22, ptr %9, align 4, !dbg !21568
  br label %86, !dbg !21570

52:                                               ; preds = %47
  %53 = call ptr @__errno_location() #20, !dbg !21571
  store i32 0, ptr %53, align 4, !dbg !21572
  %54 = load ptr, ptr %7, align 8, !dbg !21573
  %55 = call i64 @strtoull(ptr noundef %54, ptr noundef %8, i32 noundef 10) #18, !dbg !21574
  store i64 %55, ptr %5, align 8, !dbg !21575
  %56 = call ptr @__errno_location() #20, !dbg !21576
  %57 = load i32, ptr %56, align 4, !dbg !21576
  %58 = icmp sgt i32 %57, 0, !dbg !21578
  br i1 %58, label %59, label %63, !dbg !21579

59:                                               ; preds = %52
  %60 = call ptr @__errno_location() #20, !dbg !21580
  %61 = load i32, ptr %60, align 4, !dbg !21580
  %62 = sub nsw i32 0, %61, !dbg !21582
  store i32 %62, ptr %9, align 4, !dbg !21583
  br label %86, !dbg !21584

63:                                               ; preds = %52
  %64 = load ptr, ptr %8, align 8, !dbg !21585
  %65 = icmp ne ptr %64, null, !dbg !21585
  br i1 %65, label %66, label %78, !dbg !21587

66:                                               ; preds = %63
  %67 = load ptr, ptr %8, align 8, !dbg !21588
  %68 = load ptr, ptr %7, align 8, !dbg !21589
  %69 = icmp eq ptr %67, %68, !dbg !21590
  br i1 %69, label %78, label %70, !dbg !21591

70:                                               ; preds = %66
  %71 = load ptr, ptr %8, align 8, !dbg !21592
  %72 = load i8, ptr %71, align 1, !dbg !21593
  %73 = sext i8 %72 to i32, !dbg !21593
  %74 = icmp ne i32 %73, 0, !dbg !21593
  br i1 %74, label %78, label %75, !dbg !21594

75:                                               ; preds = %70
  %76 = load i64, ptr %6, align 8, !dbg !21595
  %77 = icmp ule i64 %76, 0, !dbg !21596
  br i1 %77, label %78, label %79, !dbg !21597

78:                                               ; preds = %75, %70, %66, %63
  store i32 -22, ptr %9, align 4, !dbg !21598
  br label %86, !dbg !21600

79:                                               ; preds = %75
  %80 = load ptr, ptr %4, align 8, !dbg !21601
  %81 = icmp ne ptr %80, null, !dbg !21601
  br i1 %81, label %82, label %85, !dbg !21603

82:                                               ; preds = %79
  %83 = load i64, ptr %5, align 8, !dbg !21604
  %84 = load ptr, ptr %4, align 8, !dbg !21605
  store i64 %83, ptr %84, align 8, !dbg !21606
  br label %85, !dbg !21607

85:                                               ; preds = %82, %79
  store i32 1, ptr %9, align 4, !dbg !21608
  br label %86, !dbg !21609

86:                                               ; preds = %85, %78, %59, %51, %46, %40, %21, %13
  call void @llvm.dbg.label(metadata !21610), !dbg !21611
  %87 = load i32, ptr %3, align 4, !dbg !21612
  %88 = icmp ne i32 %87, 0, !dbg !21612
  br i1 %88, label %89, label %92, !dbg !21614

89:                                               ; preds = %86
  %90 = call i32 @unsetenv(ptr noundef @.str.4.436) #18, !dbg !21615
  %91 = call i32 @unsetenv(ptr noundef @.str.5.437) #18, !dbg !21617
  br label %92, !dbg !21618

92:                                               ; preds = %89, %86
  %93 = load i32, ptr %9, align 4, !dbg !21619
  ret i32 %93, !dbg !21620
}

; Function Attrs: nounwind
declare i64 @strtoull(ptr noundef, ptr noundef, i32 noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @strbuf_init_with_size(ptr noundef %0, i64 noundef %1) #0 !dbg !21621 {
  %3 = alloca i1, align 1
  %4 = alloca ptr, align 8
  %5 = alloca i64, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !21639, metadata !DIExpression()), !dbg !21640
  store i64 %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !21641, metadata !DIExpression()), !dbg !21642
  %6 = load ptr, ptr %4, align 8, !dbg !21643
  %7 = icmp ne ptr %6, null, !dbg !21643
  %8 = xor i1 %7, true, !dbg !21643
  %9 = zext i1 %8 to i32, !dbg !21643
  %10 = sext i32 %9 to i64, !dbg !21643
  %11 = icmp ne i64 %10, 0, !dbg !21643
  br i1 %11, label %12, label %13, !dbg !21645

12:                                               ; preds = %2
  store i1 false, ptr %3, align 1, !dbg !21646
  br label %31, !dbg !21646

13:                                               ; preds = %2
  %14 = load ptr, ptr %4, align 8, !dbg !21647
  call void @llvm.memset.p0.i64(ptr align 8 %14, i8 0, i64 32, i1 false), !dbg !21648
  %15 = load ptr, ptr %4, align 8, !dbg !21649
  %16 = load i64, ptr %5, align 8, !dbg !21649
  %17 = call zeroext i1 @grow_buffer_if_needed(ptr noundef %15, i64 noundef %16), !dbg !21649
  %18 = xor i1 %17, true, !dbg !21649
  %19 = zext i1 %18 to i32, !dbg !21649
  %20 = sext i32 %19 to i64, !dbg !21649
  %21 = icmp ne i64 %20, 0, !dbg !21649
  br i1 %21, label %22, label %23, !dbg !21651

22:                                               ; preds = %13
  store i1 false, ptr %3, align 1, !dbg !21652
  br label %31, !dbg !21652

23:                                               ; preds = %13
  %24 = load ptr, ptr %4, align 8, !dbg !21653
  %25 = getelementptr inbounds %struct.strbuf_t_, ptr %24, i32 0, i32 1, !dbg !21654
  %26 = getelementptr inbounds %struct.timespec, ptr %25, i32 0, i32 1, !dbg !21655
  store i64 0, ptr %26, align 8, !dbg !21656
  %27 = load ptr, ptr %4, align 8, !dbg !21657
  %28 = getelementptr inbounds %struct.strbuf_t_, ptr %27, i32 0, i32 0, !dbg !21658
  %29 = load ptr, ptr %28, align 8, !dbg !21659
  %30 = getelementptr inbounds i8, ptr %29, i64 0, !dbg !21657
  store i8 0, ptr %30, align 1, !dbg !21660
  store i1 true, ptr %3, align 1, !dbg !21661
  br label %31, !dbg !21661

31:                                               ; preds = %23, %22, %12
  %32 = load i1, ptr %3, align 1, !dbg !21662
  ret i1 %32, !dbg !21662
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @grow_buffer_if_needed(ptr noundef %0, i64 noundef %1) #0 !dbg !21663 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i1, align 1
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca ptr, align 8
  %10 = alloca i64, align 8
  %11 = alloca ptr, align 8
  store ptr %0, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !21664, metadata !DIExpression()), !dbg !21665
  store i64 %1, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !21666, metadata !DIExpression()), !dbg !21667
  %12 = load ptr, ptr %6, align 8, !dbg !21668
  %13 = getelementptr inbounds %struct.strbuf_t_, ptr %12, i32 0, i32 2, !dbg !21670
  %14 = load i32, ptr %13, align 8, !dbg !21670
  %15 = and i32 %14, 1, !dbg !21671
  %16 = icmp ne i32 %15, 0, !dbg !21671
  br i1 %16, label %17, label %66, !dbg !21672

17:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata ptr %8, metadata !21673, metadata !DIExpression()), !dbg !21675
  %18 = load i64, ptr %7, align 8, !dbg !21676
  %19 = add i64 %18, 1, !dbg !21677
  %20 = load ptr, ptr %6, align 8, !dbg !21678
  %21 = getelementptr inbounds %struct.strbuf_t_, ptr %20, i32 0, i32 1, !dbg !21679
  %22 = getelementptr inbounds %struct.timespec, ptr %21, i32 0, i32 1, !dbg !21680
  %23 = load i64, ptr %22, align 8, !dbg !21680
  store i64 %19, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !21681, metadata !DIExpression()), !dbg !21685
  store i64 %23, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !21687, metadata !DIExpression()), !dbg !21688
  %24 = load i64, ptr %3, align 8, !dbg !21689
  %25 = load i64, ptr %4, align 8, !dbg !21690
  %26 = icmp ugt i64 %24, %25, !dbg !21691
  br i1 %26, label %27, label %29, !dbg !21692

27:                                               ; preds = %17
  %28 = load i64, ptr %3, align 8, !dbg !21693
  br label %31, !dbg !21692

29:                                               ; preds = %17
  %30 = load i64, ptr %4, align 8, !dbg !21694
  br label %31, !dbg !21692

31:                                               ; preds = %29, %27
  %32 = phi i64 [ %28, %27 ], [ %30, %29 ], !dbg !21692
  %33 = call i64 @find_next_power_of_two(i64 noundef %32), !dbg !21695
  store i64 %33, ptr %8, align 8, !dbg !21675
  call void @llvm.dbg.declare(metadata ptr %9, metadata !21696, metadata !DIExpression()), !dbg !21697
  %34 = load i64, ptr %8, align 8, !dbg !21698
  %35 = call noalias ptr @malloc(i64 noundef %34) #17, !dbg !21699
  store ptr %35, ptr %9, align 8, !dbg !21697
  %36 = load ptr, ptr %9, align 8, !dbg !21700
  %37 = icmp ne ptr %36, null, !dbg !21700
  br i1 %37, label %39, label %38, !dbg !21702

38:                                               ; preds = %31
  store i1 false, ptr %5, align 1, !dbg !21703
  br label %101, !dbg !21703

39:                                               ; preds = %31
  %40 = load ptr, ptr %9, align 8, !dbg !21704
  %41 = load ptr, ptr %6, align 8, !dbg !21705
  %42 = getelementptr inbounds %struct.strbuf_t_, ptr %41, i32 0, i32 0, !dbg !21706
  %43 = load ptr, ptr %42, align 8, !dbg !21707
  %44 = load ptr, ptr %6, align 8, !dbg !21708
  %45 = getelementptr inbounds %struct.strbuf_t_, ptr %44, i32 0, i32 1, !dbg !21709
  %46 = getelementptr inbounds %struct.timespec, ptr %45, i32 0, i32 1, !dbg !21710
  %47 = load i64, ptr %46, align 8, !dbg !21710
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %40, ptr align 1 %43, i64 %47, i1 false), !dbg !21711
  %48 = load ptr, ptr %9, align 8, !dbg !21712
  %49 = load ptr, ptr %6, align 8, !dbg !21713
  %50 = getelementptr inbounds %struct.strbuf_t_, ptr %49, i32 0, i32 1, !dbg !21714
  %51 = getelementptr inbounds %struct.timespec, ptr %50, i32 0, i32 1, !dbg !21715
  %52 = load i64, ptr %51, align 8, !dbg !21715
  %53 = add i64 %52, 1, !dbg !21716
  %54 = getelementptr inbounds i8, ptr %48, i64 %53, !dbg !21712
  store i8 0, ptr %54, align 1, !dbg !21717
  %55 = load ptr, ptr %6, align 8, !dbg !21718
  %56 = getelementptr inbounds %struct.strbuf_t_, ptr %55, i32 0, i32 2, !dbg !21719
  %57 = load i32, ptr %56, align 8, !dbg !21720
  %58 = and i32 %57, -2, !dbg !21720
  store i32 %58, ptr %56, align 8, !dbg !21720
  %59 = load i64, ptr %8, align 8, !dbg !21721
  %60 = load ptr, ptr %6, align 8, !dbg !21722
  %61 = getelementptr inbounds %struct.strbuf_t_, ptr %60, i32 0, i32 1, !dbg !21723
  %62 = getelementptr inbounds %struct.timespec, ptr %61, i32 0, i32 0, !dbg !21724
  store i64 %59, ptr %62, align 8, !dbg !21725
  %63 = load ptr, ptr %9, align 8, !dbg !21726
  %64 = load ptr, ptr %6, align 8, !dbg !21727
  %65 = getelementptr inbounds %struct.strbuf_t_, ptr %64, i32 0, i32 0, !dbg !21728
  store ptr %63, ptr %65, align 8, !dbg !21729
  store i1 true, ptr %5, align 1, !dbg !21730
  br label %101, !dbg !21730

66:                                               ; preds = %2
  %67 = load ptr, ptr %6, align 8, !dbg !21731
  %68 = getelementptr inbounds %struct.strbuf_t_, ptr %67, i32 0, i32 1, !dbg !21731
  %69 = getelementptr inbounds %struct.timespec, ptr %68, i32 0, i32 0, !dbg !21731
  %70 = load i64, ptr %69, align 8, !dbg !21731
  %71 = load i64, ptr %7, align 8, !dbg !21731
  %72 = icmp ult i64 %70, %71, !dbg !21731
  %73 = zext i1 %72 to i32, !dbg !21731
  %74 = sext i32 %73 to i64, !dbg !21731
  %75 = icmp ne i64 %74, 0, !dbg !21731
  br i1 %75, label %76, label %100, !dbg !21733

76:                                               ; preds = %66
  call void @llvm.dbg.declare(metadata ptr %10, metadata !21734, metadata !DIExpression()), !dbg !21736
  %77 = load i64, ptr %7, align 8, !dbg !21737
  %78 = call i64 @find_next_power_of_two(i64 noundef %77), !dbg !21738
  store i64 %78, ptr %10, align 8, !dbg !21736
  call void @llvm.dbg.declare(metadata ptr %11, metadata !21739, metadata !DIExpression()), !dbg !21740
  %79 = load ptr, ptr %6, align 8, !dbg !21741
  %80 = getelementptr inbounds %struct.strbuf_t_, ptr %79, i32 0, i32 0, !dbg !21742
  %81 = load ptr, ptr %80, align 8, !dbg !21743
  %82 = load i64, ptr %10, align 8, !dbg !21744
  %83 = add i64 %82, 1, !dbg !21745
  %84 = call ptr @realloc(ptr noundef %81, i64 noundef %83) #24, !dbg !21746
  store ptr %84, ptr %11, align 8, !dbg !21740
  %85 = load ptr, ptr %11, align 8, !dbg !21747
  %86 = icmp ne ptr %85, null, !dbg !21747
  %87 = xor i1 %86, true, !dbg !21747
  %88 = zext i1 %87 to i32, !dbg !21747
  %89 = sext i32 %88 to i64, !dbg !21747
  %90 = icmp ne i64 %89, 0, !dbg !21747
  br i1 %90, label %91, label %92, !dbg !21749

91:                                               ; preds = %76
  store i1 false, ptr %5, align 1, !dbg !21750
  br label %101, !dbg !21750

92:                                               ; preds = %76
  %93 = load i64, ptr %10, align 8, !dbg !21751
  %94 = load ptr, ptr %6, align 8, !dbg !21752
  %95 = getelementptr inbounds %struct.strbuf_t_, ptr %94, i32 0, i32 1, !dbg !21753
  %96 = getelementptr inbounds %struct.timespec, ptr %95, i32 0, i32 0, !dbg !21754
  store i64 %93, ptr %96, align 8, !dbg !21755
  %97 = load ptr, ptr %11, align 8, !dbg !21756
  %98 = load ptr, ptr %6, align 8, !dbg !21757
  %99 = getelementptr inbounds %struct.strbuf_t_, ptr %98, i32 0, i32 0, !dbg !21758
  store ptr %97, ptr %99, align 8, !dbg !21759
  br label %100, !dbg !21760

100:                                              ; preds = %92, %66
  store i1 true, ptr %5, align 1, !dbg !21761
  br label %101, !dbg !21761

101:                                              ; preds = %100, %91, %39, %38
  %102 = load i1, ptr %5, align 1, !dbg !21762
  ret i1 %102, !dbg !21762
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @find_next_power_of_two(i64 noundef %0) #0 !dbg !21763 {
  %2 = alloca i64, align 8
  store i64 %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !21766, metadata !DIExpression()), !dbg !21767
  %3 = load i64, ptr %2, align 8, !dbg !21768
  %4 = add i64 %3, -1, !dbg !21768
  store i64 %4, ptr %2, align 8, !dbg !21768
  %5 = load i64, ptr %2, align 8, !dbg !21769
  %6 = lshr i64 %5, 1, !dbg !21770
  %7 = load i64, ptr %2, align 8, !dbg !21771
  %8 = or i64 %7, %6, !dbg !21771
  store i64 %8, ptr %2, align 8, !dbg !21771
  %9 = load i64, ptr %2, align 8, !dbg !21772
  %10 = lshr i64 %9, 2, !dbg !21773
  %11 = load i64, ptr %2, align 8, !dbg !21774
  %12 = or i64 %11, %10, !dbg !21774
  store i64 %12, ptr %2, align 8, !dbg !21774
  %13 = load i64, ptr %2, align 8, !dbg !21775
  %14 = lshr i64 %13, 4, !dbg !21776
  %15 = load i64, ptr %2, align 8, !dbg !21777
  %16 = or i64 %15, %14, !dbg !21777
  store i64 %16, ptr %2, align 8, !dbg !21777
  %17 = load i64, ptr %2, align 8, !dbg !21778
  %18 = lshr i64 %17, 8, !dbg !21779
  %19 = load i64, ptr %2, align 8, !dbg !21780
  %20 = or i64 %19, %18, !dbg !21780
  store i64 %20, ptr %2, align 8, !dbg !21780
  %21 = load i64, ptr %2, align 8, !dbg !21781
  %22 = lshr i64 %21, 16, !dbg !21782
  %23 = load i64, ptr %2, align 8, !dbg !21783
  %24 = or i64 %23, %22, !dbg !21783
  store i64 %24, ptr %2, align 8, !dbg !21783
  %25 = load i64, ptr %2, align 8, !dbg !21784
  %26 = add i64 %25, 1, !dbg !21785
  ret i64 %26, !dbg !21786
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local zeroext i1 @strbuf_init(ptr noundef %0) #9 !dbg !21787 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !21790, metadata !DIExpression()), !dbg !21791
  %3 = load ptr, ptr %2, align 8, !dbg !21792
  %4 = call zeroext i1 @strbuf_init_with_size(ptr noundef %3, i64 noundef 64), !dbg !21793
  ret i1 %4, !dbg !21794
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @strbuf_new_with_size(i64 noundef %0) #0 !dbg !21795 {
  %2 = alloca i64, align 8
  %3 = alloca ptr, align 8
  store i64 %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !21798, metadata !DIExpression()), !dbg !21799
  call void @llvm.dbg.declare(metadata ptr %3, metadata !21800, metadata !DIExpression()), !dbg !21801
  %4 = call noalias ptr @malloc(i64 noundef 32) #17, !dbg !21802
  store ptr %4, ptr %3, align 8, !dbg !21801
  %5 = load ptr, ptr %3, align 8, !dbg !21803
  %6 = load i64, ptr %2, align 8, !dbg !21803
  %7 = call zeroext i1 @strbuf_init_with_size(ptr noundef %5, i64 noundef %6), !dbg !21803
  %8 = xor i1 %7, true, !dbg !21803
  %9 = zext i1 %8 to i32, !dbg !21803
  %10 = sext i32 %9 to i64, !dbg !21803
  %11 = icmp ne i64 %10, 0, !dbg !21803
  br i1 %11, label %12, label %14, !dbg !21805

12:                                               ; preds = %1
  %13 = load ptr, ptr %3, align 8, !dbg !21806
  call void @free(ptr noundef %13) #18, !dbg !21808
  store ptr null, ptr %3, align 8, !dbg !21809
  br label %19, !dbg !21810

14:                                               ; preds = %1
  %15 = load ptr, ptr %3, align 8, !dbg !21811
  %16 = getelementptr inbounds %struct.strbuf_t_, ptr %15, i32 0, i32 2, !dbg !21813
  %17 = load i32, ptr %16, align 8, !dbg !21814
  %18 = or i32 %17, 2, !dbg !21814
  store i32 %18, ptr %16, align 8, !dbg !21814
  br label %19

19:                                               ; preds = %14, %12
  %20 = load ptr, ptr %3, align 8, !dbg !21815
  ret ptr %20, !dbg !21816
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local ptr @strbuf_new() #9 !dbg !21817 {
  %1 = call ptr @strbuf_new_with_size(i64 noundef 64), !dbg !21820
  ret ptr %1, !dbg !21821
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @strbuf_free(ptr noundef %0) #0 !dbg !21822 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !21825, metadata !DIExpression()), !dbg !21826
  %3 = load ptr, ptr %2, align 8, !dbg !21827
  %4 = icmp ne ptr %3, null, !dbg !21827
  %5 = xor i1 %4, true, !dbg !21827
  %6 = zext i1 %5 to i32, !dbg !21827
  %7 = sext i32 %6 to i64, !dbg !21827
  %8 = icmp ne i64 %7, 0, !dbg !21827
  br i1 %8, label %9, label %10, !dbg !21829

9:                                                ; preds = %1
  br label %28, !dbg !21830

10:                                               ; preds = %1
  %11 = load ptr, ptr %2, align 8, !dbg !21831
  %12 = getelementptr inbounds %struct.strbuf_t_, ptr %11, i32 0, i32 2, !dbg !21833
  %13 = load i32, ptr %12, align 8, !dbg !21833
  %14 = and i32 %13, 1, !dbg !21834
  %15 = icmp ne i32 %14, 0, !dbg !21834
  br i1 %15, label %20, label %16, !dbg !21835

16:                                               ; preds = %10
  %17 = load ptr, ptr %2, align 8, !dbg !21836
  %18 = getelementptr inbounds %struct.strbuf_t_, ptr %17, i32 0, i32 0, !dbg !21837
  %19 = load ptr, ptr %18, align 8, !dbg !21838
  call void @free(ptr noundef %19) #18, !dbg !21839
  br label %20, !dbg !21839

20:                                               ; preds = %16, %10
  %21 = load ptr, ptr %2, align 8, !dbg !21840
  %22 = getelementptr inbounds %struct.strbuf_t_, ptr %21, i32 0, i32 2, !dbg !21842
  %23 = load i32, ptr %22, align 8, !dbg !21842
  %24 = and i32 %23, 2, !dbg !21843
  %25 = icmp ne i32 %24, 0, !dbg !21843
  br i1 %25, label %26, label %28, !dbg !21844

26:                                               ; preds = %20
  %27 = load ptr, ptr %2, align 8, !dbg !21845
  call void @free(ptr noundef %27) #18, !dbg !21846
  br label %28, !dbg !21846

28:                                               ; preds = %26, %20, %9
  ret void, !dbg !21847
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @strbuf_append_char(ptr noundef %0, i8 noundef signext %1) #0 !dbg !21848 {
  %3 = alloca i1, align 1
  %4 = alloca ptr, align 8
  %5 = alloca i8, align 1
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !21851, metadata !DIExpression()), !dbg !21852
  store i8 %1, ptr %5, align 1
  call void @llvm.dbg.declare(metadata ptr %5, metadata !21853, metadata !DIExpression()), !dbg !21854
  %6 = load ptr, ptr %4, align 8, !dbg !21855
  %7 = load ptr, ptr %4, align 8, !dbg !21855
  %8 = getelementptr inbounds %struct.strbuf_t_, ptr %7, i32 0, i32 1, !dbg !21855
  %9 = getelementptr inbounds %struct.timespec, ptr %8, i32 0, i32 1, !dbg !21855
  %10 = load i64, ptr %9, align 8, !dbg !21855
  %11 = add i64 %10, 2, !dbg !21855
  %12 = call zeroext i1 @grow_buffer_if_needed(ptr noundef %6, i64 noundef %11), !dbg !21855
  %13 = xor i1 %12, true, !dbg !21855
  %14 = zext i1 %13 to i32, !dbg !21855
  %15 = sext i32 %14 to i64, !dbg !21855
  %16 = icmp ne i64 %15, 0, !dbg !21855
  br i1 %16, label %17, label %18, !dbg !21857

17:                                               ; preds = %2
  store i1 false, ptr %3, align 1, !dbg !21858
  br label %37, !dbg !21858

18:                                               ; preds = %2
  %19 = load i8, ptr %5, align 1, !dbg !21859
  %20 = load ptr, ptr %4, align 8, !dbg !21860
  %21 = getelementptr inbounds %struct.strbuf_t_, ptr %20, i32 0, i32 0, !dbg !21861
  %22 = load ptr, ptr %21, align 8, !dbg !21862
  %23 = load ptr, ptr %4, align 8, !dbg !21863
  %24 = getelementptr inbounds %struct.strbuf_t_, ptr %23, i32 0, i32 1, !dbg !21864
  %25 = getelementptr inbounds %struct.timespec, ptr %24, i32 0, i32 1, !dbg !21865
  %26 = load i64, ptr %25, align 8, !dbg !21866
  %27 = add i64 %26, 1, !dbg !21866
  store i64 %27, ptr %25, align 8, !dbg !21866
  %28 = getelementptr inbounds i8, ptr %22, i64 %26, !dbg !21867
  store i8 %19, ptr %28, align 1, !dbg !21868
  %29 = load ptr, ptr %4, align 8, !dbg !21869
  %30 = getelementptr inbounds %struct.strbuf_t_, ptr %29, i32 0, i32 0, !dbg !21870
  %31 = load ptr, ptr %30, align 8, !dbg !21871
  %32 = load ptr, ptr %4, align 8, !dbg !21872
  %33 = getelementptr inbounds %struct.strbuf_t_, ptr %32, i32 0, i32 1, !dbg !21873
  %34 = getelementptr inbounds %struct.timespec, ptr %33, i32 0, i32 1, !dbg !21874
  %35 = load i64, ptr %34, align 8, !dbg !21874
  %36 = getelementptr inbounds i8, ptr %31, i64 %35, !dbg !21875
  store i8 0, ptr %36, align 1, !dbg !21876
  store i1 true, ptr %3, align 1, !dbg !21877
  br label %37, !dbg !21877

37:                                               ; preds = %18, %17
  %38 = load i1, ptr %3, align 1, !dbg !21878
  ret i1 %38, !dbg !21878
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @strbuf_append_str(ptr noundef %0, ptr noundef %1, i64 noundef %2) #0 !dbg !21879 {
  %4 = alloca i1, align 1
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !21882, metadata !DIExpression()), !dbg !21883
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !21884, metadata !DIExpression()), !dbg !21885
  store i64 %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !21886, metadata !DIExpression()), !dbg !21887
  %8 = load i64, ptr %7, align 8, !dbg !21888
  %9 = icmp ne i64 %8, 0, !dbg !21888
  br i1 %9, label %13, label %10, !dbg !21890

10:                                               ; preds = %3
  %11 = load ptr, ptr %6, align 8, !dbg !21891
  %12 = call i64 @strlen(ptr noundef %11) #22, !dbg !21892
  store i64 %12, ptr %7, align 8, !dbg !21893
  br label %13, !dbg !21894

13:                                               ; preds = %10, %3
  %14 = load ptr, ptr %5, align 8, !dbg !21895
  %15 = load ptr, ptr %5, align 8, !dbg !21895
  %16 = getelementptr inbounds %struct.strbuf_t_, ptr %15, i32 0, i32 1, !dbg !21895
  %17 = getelementptr inbounds %struct.timespec, ptr %16, i32 0, i32 1, !dbg !21895
  %18 = load i64, ptr %17, align 8, !dbg !21895
  %19 = load i64, ptr %7, align 8, !dbg !21895
  %20 = add i64 %18, %19, !dbg !21895
  %21 = add i64 %20, 2, !dbg !21895
  %22 = call zeroext i1 @grow_buffer_if_needed(ptr noundef %14, i64 noundef %21), !dbg !21895
  %23 = xor i1 %22, true, !dbg !21895
  %24 = zext i1 %23 to i32, !dbg !21895
  %25 = sext i32 %24 to i64, !dbg !21895
  %26 = icmp ne i64 %25, 0, !dbg !21895
  br i1 %26, label %27, label %28, !dbg !21897

27:                                               ; preds = %13
  store i1 false, ptr %4, align 1, !dbg !21898
  br label %54, !dbg !21898

28:                                               ; preds = %13
  %29 = load ptr, ptr %5, align 8, !dbg !21899
  %30 = getelementptr inbounds %struct.strbuf_t_, ptr %29, i32 0, i32 0, !dbg !21900
  %31 = load ptr, ptr %30, align 8, !dbg !21901
  %32 = load ptr, ptr %5, align 8, !dbg !21902
  %33 = getelementptr inbounds %struct.strbuf_t_, ptr %32, i32 0, i32 1, !dbg !21903
  %34 = getelementptr inbounds %struct.timespec, ptr %33, i32 0, i32 1, !dbg !21904
  %35 = load i64, ptr %34, align 8, !dbg !21904
  %36 = getelementptr inbounds i8, ptr %31, i64 %35, !dbg !21905
  %37 = load ptr, ptr %6, align 8, !dbg !21906
  %38 = load i64, ptr %7, align 8, !dbg !21907
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %36, ptr align 1 %37, i64 %38, i1 false), !dbg !21908
  %39 = load i64, ptr %7, align 8, !dbg !21909
  %40 = load ptr, ptr %5, align 8, !dbg !21910
  %41 = getelementptr inbounds %struct.strbuf_t_, ptr %40, i32 0, i32 1, !dbg !21911
  %42 = getelementptr inbounds %struct.timespec, ptr %41, i32 0, i32 1, !dbg !21912
  %43 = load i64, ptr %42, align 8, !dbg !21913
  %44 = add i64 %43, %39, !dbg !21913
  store i64 %44, ptr %42, align 8, !dbg !21913
  %45 = load ptr, ptr %5, align 8, !dbg !21914
  %46 = getelementptr inbounds %struct.strbuf_t_, ptr %45, i32 0, i32 0, !dbg !21915
  %47 = load ptr, ptr %46, align 8, !dbg !21916
  %48 = load ptr, ptr %5, align 8, !dbg !21917
  %49 = getelementptr inbounds %struct.strbuf_t_, ptr %48, i32 0, i32 1, !dbg !21918
  %50 = getelementptr inbounds %struct.timespec, ptr %49, i32 0, i32 1, !dbg !21919
  %51 = load i64, ptr %50, align 8, !dbg !21919
  %52 = add i64 %51, 1, !dbg !21920
  %53 = getelementptr inbounds i8, ptr %47, i64 %52, !dbg !21914
  store i8 0, ptr %53, align 1, !dbg !21921
  store i1 true, ptr %4, align 1, !dbg !21922
  br label %54, !dbg !21922

54:                                               ; preds = %28, %27
  %55 = load i1, ptr %4, align 1, !dbg !21923
  ret i1 %55, !dbg !21923
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @strbuf_set_static(ptr noundef %0, ptr noundef %1, i64 noundef %2) #0 !dbg !21924 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i64, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !21925, metadata !DIExpression()), !dbg !21926
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !21927, metadata !DIExpression()), !dbg !21928
  store i64 %2, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !21929, metadata !DIExpression()), !dbg !21930
  %7 = load i64, ptr %6, align 8, !dbg !21931
  %8 = icmp ne i64 %7, 0, !dbg !21931
  br i1 %8, label %12, label %9, !dbg !21933

9:                                                ; preds = %3
  %10 = load ptr, ptr %5, align 8, !dbg !21934
  %11 = call i64 @strlen(ptr noundef %10) #22, !dbg !21935
  store i64 %11, ptr %6, align 8, !dbg !21936
  br label %12, !dbg !21937

12:                                               ; preds = %9, %3
  %13 = load ptr, ptr %4, align 8, !dbg !21938
  %14 = getelementptr inbounds %struct.strbuf_t_, ptr %13, i32 0, i32 2, !dbg !21940
  %15 = load i32, ptr %14, align 8, !dbg !21940
  %16 = and i32 %15, 1, !dbg !21941
  %17 = icmp ne i32 %16, 0, !dbg !21941
  br i1 %17, label %22, label %18, !dbg !21942

18:                                               ; preds = %12
  %19 = load ptr, ptr %4, align 8, !dbg !21943
  %20 = getelementptr inbounds %struct.strbuf_t_, ptr %19, i32 0, i32 0, !dbg !21944
  %21 = load ptr, ptr %20, align 8, !dbg !21945
  call void @free(ptr noundef %21) #18, !dbg !21946
  br label %22, !dbg !21946

22:                                               ; preds = %18, %12
  %23 = load ptr, ptr %5, align 8, !dbg !21947
  %24 = load ptr, ptr %4, align 8, !dbg !21948
  %25 = getelementptr inbounds %struct.strbuf_t_, ptr %24, i32 0, i32 0, !dbg !21949
  store ptr %23, ptr %25, align 8, !dbg !21950
  %26 = load i64, ptr %6, align 8, !dbg !21951
  %27 = load ptr, ptr %4, align 8, !dbg !21952
  %28 = getelementptr inbounds %struct.strbuf_t_, ptr %27, i32 0, i32 1, !dbg !21953
  %29 = getelementptr inbounds %struct.timespec, ptr %28, i32 0, i32 1, !dbg !21954
  store i64 %26, ptr %29, align 8, !dbg !21955
  %30 = load ptr, ptr %4, align 8, !dbg !21956
  %31 = getelementptr inbounds %struct.strbuf_t_, ptr %30, i32 0, i32 1, !dbg !21957
  %32 = getelementptr inbounds %struct.timespec, ptr %31, i32 0, i32 0, !dbg !21958
  store i64 %26, ptr %32, align 8, !dbg !21959
  %33 = load ptr, ptr %4, align 8, !dbg !21960
  %34 = getelementptr inbounds %struct.strbuf_t_, ptr %33, i32 0, i32 2, !dbg !21961
  %35 = load i32, ptr %34, align 8, !dbg !21962
  %36 = or i32 %35, 1, !dbg !21962
  store i32 %36, ptr %34, align 8, !dbg !21962
  ret i1 true, !dbg !21963
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @strbuf_set(ptr noundef %0, ptr noundef %1, i64 noundef %2) #0 !dbg !21964 {
  %4 = alloca i1, align 1
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !21965, metadata !DIExpression()), !dbg !21966
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !21967, metadata !DIExpression()), !dbg !21968
  store i64 %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !21969, metadata !DIExpression()), !dbg !21970
  %8 = load i64, ptr %7, align 8, !dbg !21971
  %9 = icmp ne i64 %8, 0, !dbg !21971
  br i1 %9, label %13, label %10, !dbg !21973

10:                                               ; preds = %3
  %11 = load ptr, ptr %6, align 8, !dbg !21974
  %12 = call i64 @strlen(ptr noundef %11) #22, !dbg !21975
  store i64 %12, ptr %7, align 8, !dbg !21976
  br label %13, !dbg !21977

13:                                               ; preds = %10, %3
  %14 = load ptr, ptr %5, align 8, !dbg !21978
  %15 = load i64, ptr %7, align 8, !dbg !21978
  %16 = add i64 %15, 1, !dbg !21978
  %17 = call zeroext i1 @grow_buffer_if_needed(ptr noundef %14, i64 noundef %16), !dbg !21978
  %18 = xor i1 %17, true, !dbg !21978
  %19 = zext i1 %18 to i32, !dbg !21978
  %20 = sext i32 %19 to i64, !dbg !21978
  %21 = icmp ne i64 %20, 0, !dbg !21978
  br i1 %21, label %22, label %23, !dbg !21980

22:                                               ; preds = %13
  store i1 false, ptr %4, align 1, !dbg !21981
  br label %39, !dbg !21981

23:                                               ; preds = %13
  %24 = load ptr, ptr %5, align 8, !dbg !21982
  %25 = getelementptr inbounds %struct.strbuf_t_, ptr %24, i32 0, i32 0, !dbg !21983
  %26 = load ptr, ptr %25, align 8, !dbg !21984
  %27 = load ptr, ptr %6, align 8, !dbg !21985
  %28 = load i64, ptr %7, align 8, !dbg !21986
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %26, ptr align 1 %27, i64 %28, i1 false), !dbg !21987
  %29 = load i64, ptr %7, align 8, !dbg !21988
  %30 = load ptr, ptr %5, align 8, !dbg !21989
  %31 = getelementptr inbounds %struct.strbuf_t_, ptr %30, i32 0, i32 1, !dbg !21990
  %32 = getelementptr inbounds %struct.timespec, ptr %31, i32 0, i32 1, !dbg !21991
  store i64 %29, ptr %32, align 8, !dbg !21992
  %33 = load ptr, ptr %5, align 8, !dbg !21993
  %34 = getelementptr inbounds %struct.strbuf_t_, ptr %33, i32 0, i32 0, !dbg !21994
  %35 = load ptr, ptr %34, align 8, !dbg !21995
  %36 = load i64, ptr %7, align 8, !dbg !21996
  %37 = add i64 %36, 1, !dbg !21997
  %38 = getelementptr inbounds i8, ptr %35, i64 %37, !dbg !21993
  store i8 0, ptr %38, align 1, !dbg !21998
  store i1 true, ptr %4, align 1, !dbg !21999
  br label %39, !dbg !21999

39:                                               ; preds = %23, %22
  %40 = load i1, ptr %4, align 1, !dbg !22000
  ret i1 %40, !dbg !22000
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local i32 @strbuf_cmp(ptr noundef %0, ptr noundef %1) #9 !dbg !22001 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !22004, metadata !DIExpression()), !dbg !22005
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !22006, metadata !DIExpression()), !dbg !22007
  %7 = load ptr, ptr %4, align 8, !dbg !22008
  %8 = load ptr, ptr %5, align 8, !dbg !22010
  %9 = icmp eq ptr %7, %8, !dbg !22011
  br i1 %9, label %10, label %11, !dbg !22012

10:                                               ; preds = %2
  store i32 0, ptr %3, align 4, !dbg !22013
  br label %55, !dbg !22013

11:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata ptr %6, metadata !22014, metadata !DIExpression()), !dbg !22015
  %12 = load ptr, ptr %4, align 8, !dbg !22016
  %13 = getelementptr inbounds %struct.strbuf_t_, ptr %12, i32 0, i32 0, !dbg !22017
  %14 = load ptr, ptr %13, align 8, !dbg !22018
  %15 = load ptr, ptr %5, align 8, !dbg !22019
  %16 = getelementptr inbounds %struct.strbuf_t_, ptr %15, i32 0, i32 0, !dbg !22020
  %17 = load ptr, ptr %16, align 8, !dbg !22021
  %18 = load ptr, ptr %4, align 8, !dbg !22022
  %19 = getelementptr inbounds %struct.strbuf_t_, ptr %18, i32 0, i32 1, !dbg !22023
  %20 = getelementptr inbounds %struct.timespec, ptr %19, i32 0, i32 1, !dbg !22024
  %21 = load i64, ptr %20, align 8, !dbg !22024
  %22 = load ptr, ptr %5, align 8, !dbg !22025
  %23 = getelementptr inbounds %struct.strbuf_t_, ptr %22, i32 0, i32 1, !dbg !22026
  %24 = getelementptr inbounds %struct.timespec, ptr %23, i32 0, i32 1, !dbg !22027
  %25 = load i64, ptr %24, align 8, !dbg !22027
  %26 = icmp ult i64 %21, %25, !dbg !22028
  br i1 %26, label %27, label %32, !dbg !22022

27:                                               ; preds = %11
  %28 = load ptr, ptr %4, align 8, !dbg !22029
  %29 = getelementptr inbounds %struct.strbuf_t_, ptr %28, i32 0, i32 1, !dbg !22030
  %30 = getelementptr inbounds %struct.timespec, ptr %29, i32 0, i32 1, !dbg !22031
  %31 = load i64, ptr %30, align 8, !dbg !22031
  br label %37, !dbg !22022

32:                                               ; preds = %11
  %33 = load ptr, ptr %5, align 8, !dbg !22032
  %34 = getelementptr inbounds %struct.strbuf_t_, ptr %33, i32 0, i32 1, !dbg !22033
  %35 = getelementptr inbounds %struct.timespec, ptr %34, i32 0, i32 1, !dbg !22034
  %36 = load i64, ptr %35, align 8, !dbg !22034
  br label %37, !dbg !22022

37:                                               ; preds = %32, %27
  %38 = phi i64 [ %31, %27 ], [ %36, %32 ], !dbg !22022
  %39 = call i32 @memcmp(ptr noundef %14, ptr noundef %17, i64 noundef %38) #22, !dbg !22035
  store i32 %39, ptr %6, align 4, !dbg !22015
  %40 = load i32, ptr %6, align 4, !dbg !22036
  %41 = icmp ne i32 %40, 0, !dbg !22036
  br i1 %41, label %53, label %42, !dbg !22038

42:                                               ; preds = %37
  %43 = load ptr, ptr %4, align 8, !dbg !22039
  %44 = getelementptr inbounds %struct.strbuf_t_, ptr %43, i32 0, i32 1, !dbg !22040
  %45 = getelementptr inbounds %struct.timespec, ptr %44, i32 0, i32 1, !dbg !22041
  %46 = load i64, ptr %45, align 8, !dbg !22041
  %47 = load ptr, ptr %5, align 8, !dbg !22042
  %48 = getelementptr inbounds %struct.strbuf_t_, ptr %47, i32 0, i32 1, !dbg !22043
  %49 = getelementptr inbounds %struct.timespec, ptr %48, i32 0, i32 1, !dbg !22044
  %50 = load i64, ptr %49, align 8, !dbg !22044
  %51 = sub i64 %46, %50, !dbg !22045
  %52 = trunc i64 %51 to i32, !dbg !22046
  store i32 %52, ptr %3, align 4, !dbg !22047
  br label %55, !dbg !22047

53:                                               ; preds = %37
  %54 = load i32, ptr %6, align 4, !dbg !22048
  store i32 %54, ptr %3, align 4, !dbg !22049
  br label %55, !dbg !22049

55:                                               ; preds = %53, %42, %10
  %56 = load i32, ptr %3, align 4, !dbg !22050
  ret i32 %56, !dbg !22050
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @strbuf_printf(ptr noundef %0, ptr noundef %1, ...) #0 !dbg !22051 {
  %3 = alloca i1, align 1
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i8, align 1
  %14 = alloca [1 x %struct.__va_list_tag], align 16
  store ptr %0, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !22054, metadata !DIExpression()), !dbg !22055
  store ptr %1, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %12, metadata !22056, metadata !DIExpression()), !dbg !22057
  call void @llvm.dbg.declare(metadata ptr %13, metadata !22058, metadata !DIExpression()), !dbg !22059
  call void @llvm.dbg.declare(metadata ptr %14, metadata !22060, metadata !DIExpression()), !dbg !22072
  %15 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %14, i64 0, i64 0, !dbg !22073
  call void @llvm.va_start(ptr %15), !dbg !22073
  %16 = load ptr, ptr %11, align 8, !dbg !22074
  %17 = load ptr, ptr %12, align 8, !dbg !22075
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %14, i64 0, i64 0, !dbg !22076
  store ptr %16, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !22077, metadata !DIExpression()), !dbg !22083
  store ptr @strbuf_set, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !22085, metadata !DIExpression()), !dbg !22086
  store ptr %17, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !22087, metadata !DIExpression()), !dbg !22088
  store ptr %18, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !22089, metadata !DIExpression()), !dbg !22090
  call void @llvm.dbg.declare(metadata ptr %8, metadata !22091, metadata !DIExpression()), !dbg !22092
  call void @llvm.dbg.declare(metadata ptr %9, metadata !22093, metadata !DIExpression()), !dbg !22094
  %19 = load ptr, ptr %6, align 8, !dbg !22095
  %20 = load ptr, ptr %7, align 8, !dbg !22095
  %21 = call i32 @vasprintf(ptr noundef %8, ptr noundef %19, ptr noundef %20) #18, !dbg !22095
  store i32 %21, ptr %9, align 4, !dbg !22095
  %22 = icmp slt i32 %21, 0, !dbg !22095
  %23 = zext i1 %22 to i32, !dbg !22095
  %24 = sext i32 %23 to i64, !dbg !22095
  br i1 %22, label %25, label %26, !dbg !22097

25:                                               ; preds = %2
  store i1 false, ptr %3, align 1, !dbg !22098
  br label %37, !dbg !22098

26:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata ptr %10, metadata !22099, metadata !DIExpression()), !dbg !22100
  %27 = load ptr, ptr %5, align 8, !dbg !22101
  %28 = load ptr, ptr %4, align 8, !dbg !22102
  %29 = load ptr, ptr %8, align 8, !dbg !22103
  %30 = load i32, ptr %9, align 4, !dbg !22104
  %31 = sext i32 %30 to i64, !dbg !22105
  %32 = call zeroext i1 %27(ptr noundef %28, ptr noundef %29, i64 noundef %31) #18, !dbg !22101
  %33 = zext i1 %32 to i8, !dbg !22100
  store i8 %33, ptr %10, align 1, !dbg !22100
  %34 = load ptr, ptr %8, align 8, !dbg !22106
  call void @free(ptr noundef %34) #18, !dbg !22107
  %35 = load i8, ptr %10, align 1, !dbg !22108
  %36 = trunc i8 %35 to i1, !dbg !22108
  store i1 %36, ptr %3, align 1, !dbg !22109
  br label %37, !dbg !22109

37:                                               ; preds = %26, %25
  %38 = load i1, ptr %3, align 1, !dbg !22110
  %39 = zext i1 %38 to i8, !dbg !22111
  store i8 %39, ptr %13, align 1, !dbg !22111
  %40 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %14, i64 0, i64 0, !dbg !22112
  call void @llvm.va_end(ptr %40), !dbg !22112
  %41 = load i8, ptr %13, align 1, !dbg !22113
  %42 = trunc i8 %41 to i1, !dbg !22113
  ret i1 %42, !dbg !22114
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @strbuf_append_printf(ptr noundef %0, ptr noundef %1, ...) #0 !dbg !22115 {
  %3 = alloca i1, align 1
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i8, align 1
  %14 = alloca [1 x %struct.__va_list_tag], align 16
  store ptr %0, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !22116, metadata !DIExpression()), !dbg !22117
  store ptr %1, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %12, metadata !22118, metadata !DIExpression()), !dbg !22119
  call void @llvm.dbg.declare(metadata ptr %13, metadata !22120, metadata !DIExpression()), !dbg !22121
  call void @llvm.dbg.declare(metadata ptr %14, metadata !22122, metadata !DIExpression()), !dbg !22123
  %15 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %14, i64 0, i64 0, !dbg !22124
  call void @llvm.va_start(ptr %15), !dbg !22124
  %16 = load ptr, ptr %11, align 8, !dbg !22125
  %17 = load ptr, ptr %12, align 8, !dbg !22126
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %14, i64 0, i64 0, !dbg !22127
  store ptr %16, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !22077, metadata !DIExpression()), !dbg !22128
  store ptr @strbuf_append_str, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !22085, metadata !DIExpression()), !dbg !22130
  store ptr %17, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !22087, metadata !DIExpression()), !dbg !22131
  store ptr %18, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !22089, metadata !DIExpression()), !dbg !22132
  call void @llvm.dbg.declare(metadata ptr %8, metadata !22091, metadata !DIExpression()), !dbg !22133
  call void @llvm.dbg.declare(metadata ptr %9, metadata !22093, metadata !DIExpression()), !dbg !22134
  %19 = load ptr, ptr %6, align 8, !dbg !22135
  %20 = load ptr, ptr %7, align 8, !dbg !22135
  %21 = call i32 @vasprintf(ptr noundef %8, ptr noundef %19, ptr noundef %20) #18, !dbg !22135
  store i32 %21, ptr %9, align 4, !dbg !22135
  %22 = icmp slt i32 %21, 0, !dbg !22135
  %23 = zext i1 %22 to i32, !dbg !22135
  %24 = sext i32 %23 to i64, !dbg !22135
  br i1 %22, label %25, label %26, !dbg !22136

25:                                               ; preds = %2
  store i1 false, ptr %3, align 1, !dbg !22137
  br label %37, !dbg !22137

26:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata ptr %10, metadata !22099, metadata !DIExpression()), !dbg !22138
  %27 = load ptr, ptr %5, align 8, !dbg !22139
  %28 = load ptr, ptr %4, align 8, !dbg !22140
  %29 = load ptr, ptr %8, align 8, !dbg !22141
  %30 = load i32, ptr %9, align 4, !dbg !22142
  %31 = sext i32 %30 to i64, !dbg !22143
  %32 = call zeroext i1 %27(ptr noundef %28, ptr noundef %29, i64 noundef %31) #18, !dbg !22139
  %33 = zext i1 %32 to i8, !dbg !22138
  store i8 %33, ptr %10, align 1, !dbg !22138
  %34 = load ptr, ptr %8, align 8, !dbg !22144
  call void @free(ptr noundef %34) #18, !dbg !22145
  %35 = load i8, ptr %10, align 1, !dbg !22146
  %36 = trunc i8 %35 to i1, !dbg !22146
  store i1 %36, ptr %3, align 1, !dbg !22147
  br label %37, !dbg !22147

37:                                               ; preds = %26, %25
  %38 = load i1, ptr %3, align 1, !dbg !22148
  %39 = zext i1 %38 to i8, !dbg !22149
  store i8 %39, ptr %13, align 1, !dbg !22149
  %40 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %14, i64 0, i64 0, !dbg !22150
  call void @llvm.va_end(ptr %40), !dbg !22150
  %41 = load i8, ptr %13, align 1, !dbg !22151
  %42 = trunc i8 %41 to i1, !dbg !22151
  ret i1 %42, !dbg !22152
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @strbuf_shrink_to(ptr noundef %0, i64 noundef %1) #0 !dbg !22153 {
  %3 = alloca i1, align 1
  %4 = alloca ptr, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !22154, metadata !DIExpression()), !dbg !22155
  store i64 %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !22156, metadata !DIExpression()), !dbg !22157
  %8 = load ptr, ptr %4, align 8, !dbg !22158
  %9 = getelementptr inbounds %struct.strbuf_t_, ptr %8, i32 0, i32 1, !dbg !22160
  %10 = getelementptr inbounds %struct.timespec, ptr %9, i32 0, i32 0, !dbg !22161
  %11 = load i64, ptr %10, align 8, !dbg !22161
  %12 = load i64, ptr %5, align 8, !dbg !22162
  %13 = icmp ule i64 %11, %12, !dbg !22163
  br i1 %13, label %14, label %15, !dbg !22164

14:                                               ; preds = %2
  store i1 true, ptr %3, align 1, !dbg !22165
  br label %68, !dbg !22165

15:                                               ; preds = %2
  %16 = load ptr, ptr %4, align 8, !dbg !22166
  %17 = getelementptr inbounds %struct.strbuf_t_, ptr %16, i32 0, i32 2, !dbg !22168
  %18 = load i32, ptr %17, align 8, !dbg !22168
  %19 = and i32 %18, 1, !dbg !22169
  %20 = icmp ne i32 %19, 0, !dbg !22169
  br i1 %20, label %21, label %22, !dbg !22170

21:                                               ; preds = %15
  store i1 true, ptr %3, align 1, !dbg !22171
  br label %68, !dbg !22171

22:                                               ; preds = %15
  call void @llvm.dbg.declare(metadata ptr %6, metadata !22172, metadata !DIExpression()), !dbg !22173
  %23 = load i64, ptr %5, align 8, !dbg !22174
  %24 = call i64 @find_next_power_of_two(i64 noundef %23), !dbg !22175
  store i64 %24, ptr %6, align 8, !dbg !22173
  call void @llvm.dbg.declare(metadata ptr %7, metadata !22176, metadata !DIExpression()), !dbg !22177
  %25 = load ptr, ptr %4, align 8, !dbg !22178
  %26 = getelementptr inbounds %struct.strbuf_t_, ptr %25, i32 0, i32 0, !dbg !22179
  %27 = load ptr, ptr %26, align 8, !dbg !22180
  %28 = load i64, ptr %6, align 8, !dbg !22181
  %29 = add i64 %28, 1, !dbg !22182
  %30 = call ptr @realloc(ptr noundef %27, i64 noundef %29) #24, !dbg !22183
  store ptr %30, ptr %7, align 8, !dbg !22177
  %31 = load ptr, ptr %7, align 8, !dbg !22184
  %32 = icmp ne ptr %31, null, !dbg !22184
  %33 = xor i1 %32, true, !dbg !22184
  %34 = zext i1 %33 to i32, !dbg !22184
  %35 = sext i32 %34 to i64, !dbg !22184
  %36 = icmp ne i64 %35, 0, !dbg !22184
  br i1 %36, label %37, label %38, !dbg !22186

37:                                               ; preds = %22
  store i1 false, ptr %3, align 1, !dbg !22187
  br label %68, !dbg !22187

38:                                               ; preds = %22
  %39 = load ptr, ptr %7, align 8, !dbg !22188
  %40 = load ptr, ptr %4, align 8, !dbg !22189
  %41 = getelementptr inbounds %struct.strbuf_t_, ptr %40, i32 0, i32 0, !dbg !22190
  store ptr %39, ptr %41, align 8, !dbg !22191
  %42 = load i64, ptr %6, align 8, !dbg !22192
  %43 = load ptr, ptr %4, align 8, !dbg !22193
  %44 = getelementptr inbounds %struct.strbuf_t_, ptr %43, i32 0, i32 1, !dbg !22194
  %45 = getelementptr inbounds %struct.timespec, ptr %44, i32 0, i32 0, !dbg !22195
  store i64 %42, ptr %45, align 8, !dbg !22196
  %46 = load ptr, ptr %4, align 8, !dbg !22197
  %47 = getelementptr inbounds %struct.strbuf_t_, ptr %46, i32 0, i32 1, !dbg !22199
  %48 = getelementptr inbounds %struct.timespec, ptr %47, i32 0, i32 1, !dbg !22200
  %49 = load i64, ptr %48, align 8, !dbg !22200
  %50 = load i64, ptr %6, align 8, !dbg !22201
  %51 = icmp ugt i64 %49, %50, !dbg !22202
  br i1 %51, label %52, label %67, !dbg !22203

52:                                               ; preds = %38
  %53 = load i64, ptr %6, align 8, !dbg !22204
  %54 = sub i64 %53, 1, !dbg !22206
  %55 = load ptr, ptr %4, align 8, !dbg !22207
  %56 = getelementptr inbounds %struct.strbuf_t_, ptr %55, i32 0, i32 1, !dbg !22208
  %57 = getelementptr inbounds %struct.timespec, ptr %56, i32 0, i32 1, !dbg !22209
  store i64 %54, ptr %57, align 8, !dbg !22210
  %58 = load ptr, ptr %4, align 8, !dbg !22211
  %59 = getelementptr inbounds %struct.strbuf_t_, ptr %58, i32 0, i32 0, !dbg !22212
  %60 = load ptr, ptr %59, align 8, !dbg !22213
  %61 = load ptr, ptr %4, align 8, !dbg !22214
  %62 = getelementptr inbounds %struct.strbuf_t_, ptr %61, i32 0, i32 1, !dbg !22215
  %63 = getelementptr inbounds %struct.timespec, ptr %62, i32 0, i32 1, !dbg !22216
  %64 = load i64, ptr %63, align 8, !dbg !22216
  %65 = add i64 %64, 1, !dbg !22217
  %66 = getelementptr inbounds i8, ptr %60, i64 %65, !dbg !22211
  store i8 0, ptr %66, align 1, !dbg !22218
  br label %67, !dbg !22219

67:                                               ; preds = %52, %38
  store i1 true, ptr %3, align 1, !dbg !22220
  br label %68, !dbg !22220

68:                                               ; preds = %67, %37, %21, %14
  %69 = load i1, ptr %3, align 1, !dbg !22221
  ret i1 %69, !dbg !22221
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local zeroext i1 @strbuf_shrink_to_default(ptr noundef %0) #9 !dbg !22222 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !22223, metadata !DIExpression()), !dbg !22224
  %3 = load ptr, ptr %2, align 8, !dbg !22225
  %4 = call zeroext i1 @strbuf_shrink_to(ptr noundef %3, i64 noundef 64), !dbg !22226
  ret i1 %4, !dbg !22227
}

; Function Attrs: alwaysinline nounwind uwtable
define dso_local zeroext i1 @strbuf_reset(ptr noundef %0) #9 !dbg !22228 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !22229, metadata !DIExpression()), !dbg !22230
  %4 = load ptr, ptr %3, align 8, !dbg !22231
  store ptr %4, ptr %2, align 8
  call void @llvm.dbg.declare(metadata ptr %2, metadata !22223, metadata !DIExpression()), !dbg !22232
  %5 = load ptr, ptr %2, align 8, !dbg !22234
  %6 = call zeroext i1 @strbuf_shrink_to(ptr noundef %5, i64 noundef 64), !dbg !22235
  %7 = load ptr, ptr %3, align 8, !dbg !22236
  %8 = getelementptr inbounds %struct.strbuf_t_, ptr %7, i32 0, i32 1, !dbg !22237
  %9 = getelementptr inbounds %struct.timespec, ptr %8, i32 0, i32 1, !dbg !22238
  store i64 0, ptr %9, align 8, !dbg !22239
  ret i1 false, !dbg !22240
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @strbuf_grow_to(ptr noundef %0, i64 noundef %1) #0 !dbg !22241 {
  %3 = alloca ptr, align 8
  %4 = alloca i64, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !22242, metadata !DIExpression()), !dbg !22243
  store i64 %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !22244, metadata !DIExpression()), !dbg !22245
  %5 = load ptr, ptr %3, align 8, !dbg !22246
  %6 = load i64, ptr %4, align 8, !dbg !22247
  %7 = add i64 %6, 1, !dbg !22248
  %8 = call zeroext i1 @grow_buffer_if_needed(ptr noundef %5, i64 noundef %7), !dbg !22249
  ret i1 %8, !dbg !22250
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @strbuf_reset_length(ptr noundef %0) #0 !dbg !22251 {
  %2 = alloca i1, align 1
  %3 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !22252, metadata !DIExpression()), !dbg !22253
  %4 = load ptr, ptr %3, align 8, !dbg !22254
  %5 = getelementptr inbounds %struct.strbuf_t_, ptr %4, i32 0, i32 2, !dbg !22256
  %6 = load i32, ptr %5, align 8, !dbg !22256
  %7 = and i32 %6, 1, !dbg !22257
  %8 = icmp ne i32 %7, 0, !dbg !22257
  br i1 %8, label %9, label %31, !dbg !22258

9:                                                ; preds = %1
  %10 = load ptr, ptr %3, align 8, !dbg !22259
  %11 = getelementptr inbounds %struct.strbuf_t_, ptr %10, i32 0, i32 2, !dbg !22261
  %12 = load i32, ptr %11, align 8, !dbg !22262
  %13 = and i32 %12, -2, !dbg !22262
  store i32 %13, ptr %11, align 8, !dbg !22262
  %14 = load ptr, ptr %3, align 8, !dbg !22263
  %15 = getelementptr inbounds %struct.strbuf_t_, ptr %14, i32 0, i32 1, !dbg !22264
  %16 = getelementptr inbounds %struct.timespec, ptr %15, i32 0, i32 0, !dbg !22265
  %17 = load i64, ptr %16, align 8, !dbg !22265
  %18 = call noalias ptr @malloc(i64 noundef %17) #17, !dbg !22266
  %19 = load ptr, ptr %3, align 8, !dbg !22267
  %20 = getelementptr inbounds %struct.strbuf_t_, ptr %19, i32 0, i32 0, !dbg !22268
  store ptr %18, ptr %20, align 8, !dbg !22269
  %21 = load ptr, ptr %3, align 8, !dbg !22270
  %22 = getelementptr inbounds %struct.strbuf_t_, ptr %21, i32 0, i32 0, !dbg !22270
  %23 = load ptr, ptr %22, align 8, !dbg !22270
  %24 = icmp ne ptr %23, null, !dbg !22270
  %25 = xor i1 %24, true, !dbg !22270
  %26 = zext i1 %25 to i32, !dbg !22270
  %27 = sext i32 %26 to i64, !dbg !22270
  %28 = icmp ne i64 %27, 0, !dbg !22270
  br i1 %28, label %29, label %30, !dbg !22272

29:                                               ; preds = %9
  store i1 false, ptr %2, align 1, !dbg !22273
  br label %39, !dbg !22273

30:                                               ; preds = %9
  br label %31, !dbg !22274

31:                                               ; preds = %30, %1
  %32 = load ptr, ptr %3, align 8, !dbg !22275
  %33 = getelementptr inbounds %struct.strbuf_t_, ptr %32, i32 0, i32 1, !dbg !22276
  %34 = getelementptr inbounds %struct.timespec, ptr %33, i32 0, i32 1, !dbg !22277
  store i64 0, ptr %34, align 8, !dbg !22278
  %35 = load ptr, ptr %3, align 8, !dbg !22279
  %36 = getelementptr inbounds %struct.strbuf_t_, ptr %35, i32 0, i32 0, !dbg !22280
  %37 = load ptr, ptr %36, align 8, !dbg !22281
  %38 = getelementptr inbounds i8, ptr %37, i64 0, !dbg !22279
  store i8 0, ptr %38, align 1, !dbg !22282
  store i1 true, ptr %2, align 1, !dbg !22283
  br label %39, !dbg !22283

39:                                               ; preds = %31, %29
  %40 = load i1, ptr %2, align 1, !dbg !22284
  ret i1 %40, !dbg !22284
}

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nounwind allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nounwind allocsize(0,1) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { nounwind willreturn memory(read) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nounwind willreturn memory(none) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #9 = { alwaysinline nounwind uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { noreturn nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #12 = { nocallback nofree nosync nounwind willreturn }
attributes #13 = { alwaysinline nounwind willreturn memory(read) uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { noinline noreturn nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { noinline nounwind optnone willreturn memory(read) uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { nounwind allocsize(1) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #17 = { nounwind allocsize(0) }
attributes #18 = { nounwind }
attributes #19 = { nounwind allocsize(0,1) }
attributes #20 = { nounwind willreturn memory(none) }
attributes #21 = { noreturn nounwind }
attributes #22 = { nounwind willreturn memory(read) }
attributes #23 = { noreturn }
attributes #24 = { nounwind allocsize(1) }

!llvm.dbg.cu = !{!2, !23, !63, !3003, !3016, !3034, !3039, !258, !3043, !547, !659, !1284, !1439, !1580, !2037, !3057, !2361, !2434, !2637, !2905, !3062, !2968, !3066, !3069, !3073, !3082}
!llvm.ident = !{!3094, !3094, !3094, !3094, !3094, !3094, !3094, !3094, !3094, !3094, !3094, !3094, !3094, !3094, !3094, !3094, !3094, !3094, !3094, !3094, !3094, !3094, !3094, !3094, !3094, !3094}
!llvm.module.flags = !{!3095, !3096, !3097, !3098, !3099, !3100, !3101}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "base64_table", scope: !2, file: !13, line: 14, type: !18, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C11, file: !3, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !4, globals: !10, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/raj/lwan/common/base64.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "8a87452d79d8a8f0198bc14a71930268")
!4 = !{!5, !6, !9}
!5 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!6 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !7, line: 46, baseType: !8)
!7 = !DIFile(filename: "SVF/llvm-16.0.0.obj/lib/clang/16/include/stddef.h", directory: "/home/raj", checksumkind: CSK_MD5, checksum: "f95079da609b0e8f201cb8136304bf3b")
!8 = !DIBasicType(name: "unsigned long", size: 64, encoding: DW_ATE_unsigned)
!9 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!10 = !{!0, !11}
!11 = !DIGlobalVariableExpression(var: !12, expr: !DIExpression())
!12 = distinct !DIGlobalVariable(name: "base64_decode_table", scope: !2, file: !13, line: 24, type: !14, isLocal: true, isDefinition: true)
!13 = !DIFile(filename: "common/base64.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "8a87452d79d8a8f0198bc14a71930268")
!14 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15, size: 2048, elements: !16)
!15 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9)
!16 = !{!17}
!17 = !DISubrange(count: 256)
!18 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15, size: 520, elements: !19)
!19 = !{!20}
!20 = !DISubrange(count: 65)
!21 = !DIGlobalVariableExpression(var: !22, expr: !DIExpression())
!22 = distinct !DIGlobalVariable(name: "odd_constant", scope: !23, file: !27, line: 41, type: !28, isLocal: true, isDefinition: true)
!23 = distinct !DICompileUnit(language: DW_LANG_C11, file: !24, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !25, retainedTypes: !33, globals: !43, splitDebugInlining: false, nameTableKind: None)
!24 = !DIFile(filename: "/home/raj/lwan/common/hash.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "00f74057e2e6dbf32d12ddc7b3b22e35")
!25 = !{!26}
!26 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !27, line: 36, baseType: !28, size: 32, elements: !29)
!27 = !DIFile(filename: "common/hash.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "00f74057e2e6dbf32d12ddc7b3b22e35")
!28 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!29 = !{!30, !31, !32}
!30 = !DIEnumerator(name: "n_buckets", value: 512)
!31 = !DIEnumerator(name: "steps", value: 64)
!32 = !DIEnumerator(name: "default_odd_constant", value: 668265261)
!33 = !{!34, !5, !6, !28, !40, !37, !41}
!34 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !35, size: 64)
!35 = !DISubroutineType(types: !36)
!36 = !{!37, !38, !38}
!37 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!38 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !39, size: 64)
!39 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!40 = !DIBasicType(name: "long", size: 64, encoding: DW_ATE_signed)
!41 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !42, line: 87, baseType: !40)
!42 = !DIFile(filename: "/usr/include/stdint.h", directory: "", checksumkind: CSK_MD5, checksum: "a48e64edacc5b19f56c99745232c963c")
!43 = !{!44, !50, !21}
!44 = !DIGlobalVariableExpression(var: !45, expr: !DIExpression())
!45 = distinct !DIGlobalVariable(scope: null, file: !27, line: 73, type: !46, isLocal: true, isDefinition: true)
!46 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 104, elements: !48)
!47 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!48 = !{!49}
!49 = !DISubrange(count: 13)
!50 = !DIGlobalVariableExpression(var: !51, expr: !DIExpression())
!51 = distinct !DIGlobalVariable(scope: null, file: !27, line: 75, type: !52, isLocal: true, isDefinition: true)
!52 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 96, elements: !53)
!53 = !{!54}
!54 = !DISubrange(count: 12)
!55 = !DIGlobalVariableExpression(var: !56, expr: !DIExpression())
!56 = distinct !DIGlobalVariable(name: "digits", scope: !57, file: !58, line: 34, type: !75, isLocal: true, isDefinition: true)
!57 = distinct !DISubprogram(name: "uint_to_string", scope: !58, file: !58, line: 24, type: !59, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !63, retainedNodes: !74)
!58 = !DIFile(filename: "common/int-to-str.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "16271f9060fa745dc9ad2afb6239c6d5")
!59 = !DISubroutineType(types: !60)
!60 = !{!61, !6, !61, !62}
!61 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 64)
!62 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!63 = distinct !DICompileUnit(language: DW_LANG_C11, file: !64, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !65, globals: !70, splitDebugInlining: false, nameTableKind: None)
!64 = !DIFile(filename: "/home/raj/lwan/common/int-to-str.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "16271f9060fa745dc9ad2afb6239c6d5")
!65 = !{!66, !47, !6}
!66 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !67, line: 26, baseType: !68)
!67 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "", checksumkind: CSK_MD5, checksum: "2bf2ae53c58c01b1a1b9383b5195125c")
!68 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !69, line: 42, baseType: !28)
!69 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "", checksumkind: CSK_MD5, checksum: "d108b5f93a74c50510d7d9bc0ab36df9")
!70 = !{!71, !55}
!71 = !DIGlobalVariableExpression(var: !72, expr: !DIExpression())
!72 = distinct !DIGlobalVariable(name: "length", scope: !57, file: !58, line: 32, type: !73, isLocal: true, isDefinition: true)
!73 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6)
!74 = !{}
!75 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 1608, elements: !77)
!76 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !47)
!77 = !{!78}
!78 = !DISubrange(count: 201)
!79 = !DIGlobalVariableExpression(var: !80, expr: !DIExpression())
!80 = distinct !DIGlobalVariable(scope: null, file: !81, line: 41, type: !82, isLocal: true, isDefinition: true)
!81 = !DIFile(filename: "common/list.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "0a5860268a1418537132a40f402b0afc")
!82 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 320, elements: !83)
!83 = !{!84}
!84 = !DISubrange(count: 40)
!85 = !DIGlobalVariableExpression(var: !86, expr: !DIExpression())
!86 = distinct !DIGlobalVariable(scope: null, file: !87, line: 104, type: !88, isLocal: true, isDefinition: true)
!87 = !DIFile(filename: "common/lwan-cache.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "f1aa9dd4cc8594b027bd5599ddc2fec4")
!88 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 128, elements: !89)
!89 = !{!90}
!90 = !DISubrange(count: 16)
!91 = !DIGlobalVariableExpression(var: !92, expr: !DIExpression())
!92 = distinct !DIGlobalVariable(scope: null, file: !87, line: 104, type: !93, isLocal: true, isDefinition: true)
!93 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 280, elements: !94)
!94 = !{!95}
!95 = !DISubrange(count: 35)
!96 = !DIGlobalVariableExpression(var: !97, expr: !DIExpression())
!97 = distinct !DIGlobalVariable(scope: null, file: !87, line: 104, type: !98, isLocal: true, isDefinition: true)
!98 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 704, elements: !99)
!99 = !{!100}
!100 = !DISubrange(count: 88)
!101 = !DIGlobalVariableExpression(var: !102, expr: !DIExpression())
!102 = distinct !DIGlobalVariable(scope: null, file: !87, line: 105, type: !103, isLocal: true, isDefinition: true)
!103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 136, elements: !104)
!104 = !{!105}
!105 = !DISubrange(count: 17)
!106 = !DIGlobalVariableExpression(var: !107, expr: !DIExpression())
!107 = distinct !DIGlobalVariable(scope: null, file: !87, line: 106, type: !103, isLocal: true, isDefinition: true)
!108 = !DIGlobalVariableExpression(var: !109, expr: !DIExpression())
!109 = distinct !DIGlobalVariable(scope: null, file: !87, line: 146, type: !110, isLocal: true, isDefinition: true)
!110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 48, elements: !111)
!111 = !{!112}
!112 = !DISubrange(count: 6)
!113 = !DIGlobalVariableExpression(var: !114, expr: !DIExpression())
!114 = distinct !DIGlobalVariable(scope: null, file: !87, line: 146, type: !115, isLocal: true, isDefinition: true)
!115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 296, elements: !116)
!116 = !{!117}
!117 = !DISubrange(count: 37)
!118 = !DIGlobalVariableExpression(var: !119, expr: !DIExpression())
!119 = distinct !DIGlobalVariable(scope: null, file: !87, line: 149, type: !120, isLocal: true, isDefinition: true)
!120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 112, elements: !121)
!121 = !{!122}
!122 = !DISubrange(count: 14)
!123 = !DIGlobalVariableExpression(var: !124, expr: !DIExpression())
!124 = distinct !DIGlobalVariable(scope: null, file: !87, line: 149, type: !125, isLocal: true, isDefinition: true)
!125 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 368, elements: !126)
!126 = !{!127}
!127 = !DISubrange(count: 46)
!128 = !DIGlobalVariableExpression(var: !129, expr: !DIExpression())
!129 = distinct !DIGlobalVariable(scope: null, file: !87, line: 175, type: !130, isLocal: true, isDefinition: true)
!130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 680, elements: !131)
!131 = !{!132}
!132 = !DISubrange(count: 85)
!133 = !DIGlobalVariableExpression(var: !134, expr: !DIExpression())
!134 = distinct !DIGlobalVariable(scope: null, file: !87, line: 176, type: !110, isLocal: true, isDefinition: true)
!135 = !DIGlobalVariableExpression(var: !136, expr: !DIExpression())
!136 = distinct !DIGlobalVariable(scope: null, file: !87, line: 177, type: !137, isLocal: true, isDefinition: true)
!137 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 32, elements: !138)
!138 = !{!139}
!139 = !DISubrange(count: 4)
!140 = !DIGlobalVariableExpression(var: !141, expr: !DIExpression())
!141 = distinct !DIGlobalVariable(scope: null, file: !87, line: 251, type: !110, isLocal: true, isDefinition: true)
!142 = !DIGlobalVariableExpression(var: !143, expr: !DIExpression())
!143 = distinct !DIGlobalVariable(scope: null, file: !87, line: 251, type: !144, isLocal: true, isDefinition: true)
!144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 520, elements: !19)
!145 = !DIGlobalVariableExpression(var: !146, expr: !DIExpression())
!146 = distinct !DIGlobalVariable(scope: null, file: !87, line: 94, type: !147, isLocal: true, isDefinition: true)
!147 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 192, elements: !148)
!148 = !{!149}
!149 = !DISubrange(count: 24)
!150 = !DIGlobalVariableExpression(var: !151, expr: !DIExpression())
!151 = distinct !DIGlobalVariable(scope: null, file: !87, line: 94, type: !152, isLocal: true, isDefinition: true)
!152 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 112, elements: !121)
!153 = !DIGlobalVariableExpression(var: !154, expr: !DIExpression())
!154 = distinct !DIGlobalVariable(scope: null, file: !87, line: 287, type: !155, isLocal: true, isDefinition: true)
!155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 136, elements: !104)
!156 = !DIGlobalVariableExpression(var: !157, expr: !DIExpression())
!157 = distinct !DIGlobalVariable(scope: null, file: !87, line: 287, type: !158, isLocal: true, isDefinition: true)
!158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 176, elements: !159)
!159 = !{!160}
!160 = !DISubrange(count: 22)
!161 = !DIGlobalVariableExpression(var: !162, expr: !DIExpression())
!162 = distinct !DIGlobalVariable(scope: null, file: !87, line: 312, type: !158, isLocal: true, isDefinition: true)
!163 = !DIGlobalVariableExpression(var: !164, expr: !DIExpression())
!164 = distinct !DIGlobalVariable(scope: null, file: !165, line: 43, type: !166, isLocal: true, isDefinition: true)
!165 = !DIFile(filename: "common/lwan-config.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "199ccadf79b83965963cdf65e7c49914")
!166 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 40, elements: !167)
!167 = !{!168}
!168 = !DISubrange(count: 5)
!169 = !DIGlobalVariableExpression(var: !170, expr: !DIExpression())
!170 = distinct !DIGlobalVariable(scope: null, file: !165, line: 53, type: !171, isLocal: true, isDefinition: true)
!171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 288, elements: !172)
!172 = !{!173}
!173 = !DISubrange(count: 36)
!174 = !DIGlobalVariableExpression(var: !175, expr: !DIExpression())
!175 = distinct !DIGlobalVariable(scope: null, file: !165, line: 53, type: !176, isLocal: true, isDefinition: true)
!176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 144, elements: !177)
!177 = !{!178}
!178 = !DISubrange(count: 18)
!179 = !DIGlobalVariableExpression(var: !180, expr: !DIExpression())
!180 = distinct !DIGlobalVariable(scope: null, file: !165, line: 53, type: !181, isLocal: true, isDefinition: true)
!181 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 256, elements: !182)
!182 = !{!183}
!183 = !DISubrange(count: 32)
!184 = !DIGlobalVariableExpression(var: !185, expr: !DIExpression())
!185 = distinct !DIGlobalVariable(scope: null, file: !165, line: 68, type: !166, isLocal: true, isDefinition: true)
!186 = !DIGlobalVariableExpression(var: !187, expr: !DIExpression())
!187 = distinct !DIGlobalVariable(scope: null, file: !165, line: 68, type: !188, isLocal: true, isDefinition: true)
!188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 16, elements: !189)
!189 = !{!190}
!190 = !DISubrange(count: 2)
!191 = !DIGlobalVariableExpression(var: !192, expr: !DIExpression())
!192 = distinct !DIGlobalVariable(scope: null, file: !165, line: 69, type: !193, isLocal: true, isDefinition: true)
!193 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 24, elements: !194)
!194 = !{!195}
!195 = !DISubrange(count: 3)
!196 = !DIGlobalVariableExpression(var: !197, expr: !DIExpression())
!197 = distinct !DIGlobalVariable(scope: null, file: !165, line: 69, type: !137, isLocal: true, isDefinition: true)
!198 = !DIGlobalVariableExpression(var: !199, expr: !DIExpression())
!199 = distinct !DIGlobalVariable(scope: null, file: !165, line: 72, type: !110, isLocal: true, isDefinition: true)
!200 = !DIGlobalVariableExpression(var: !201, expr: !DIExpression())
!201 = distinct !DIGlobalVariable(scope: null, file: !165, line: 72, type: !188, isLocal: true, isDefinition: true)
!202 = !DIGlobalVariableExpression(var: !203, expr: !DIExpression())
!203 = distinct !DIGlobalVariable(scope: null, file: !165, line: 73, type: !137, isLocal: true, isDefinition: true)
!204 = !DIGlobalVariableExpression(var: !205, expr: !DIExpression())
!205 = distinct !DIGlobalVariable(scope: null, file: !165, line: 73, type: !193, isLocal: true, isDefinition: true)
!206 = !DIGlobalVariableExpression(var: !207, expr: !DIExpression())
!207 = distinct !DIGlobalVariable(scope: null, file: !165, line: 203, type: !208, isLocal: true, isDefinition: true)
!208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 208, elements: !209)
!209 = !{!210}
!210 = !DISubrange(count: 26)
!211 = !DIGlobalVariableExpression(var: !212, expr: !DIExpression())
!212 = distinct !DIGlobalVariable(scope: null, file: !165, line: 214, type: !213, isLocal: true, isDefinition: true)
!213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 200, elements: !214)
!214 = !{!215}
!215 = !DISubrange(count: 25)
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(scope: null, file: !165, line: 218, type: !218, isLocal: true, isDefinition: true)
!218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 248, elements: !219)
!219 = !{!220}
!220 = !DISubrange(count: 31)
!221 = !DIGlobalVariableExpression(var: !222, expr: !DIExpression())
!222 = distinct !DIGlobalVariable(scope: null, file: !165, line: 232, type: !193, isLocal: true, isDefinition: true)
!223 = !DIGlobalVariableExpression(var: !224, expr: !DIExpression())
!224 = distinct !DIGlobalVariable(scope: null, file: !225, line: 230, type: !166, isLocal: true, isDefinition: true)
!225 = !DIFile(filename: "common/lwan-coro.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "f10099f62b8fec41343042e41e9eba52")
!226 = !DIGlobalVariableExpression(var: !227, expr: !DIExpression())
!227 = distinct !DIGlobalVariable(scope: null, file: !225, line: 230, type: !228, isLocal: true, isDefinition: true)
!228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 272, elements: !229)
!229 = !{!230}
!230 = !DISubrange(count: 34)
!231 = !DIGlobalVariableExpression(var: !232, expr: !DIExpression())
!232 = distinct !DIGlobalVariable(scope: null, file: !225, line: 230, type: !233, isLocal: true, isDefinition: true)
!233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 208, elements: !209)
!234 = !DIGlobalVariableExpression(var: !235, expr: !DIExpression())
!235 = distinct !DIGlobalVariable(scope: null, file: !225, line: 231, type: !236, isLocal: true, isDefinition: true)
!236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 168, elements: !237)
!237 = !{!238}
!238 = !DISubrange(count: 21)
!239 = !DIGlobalVariableExpression(var: !240, expr: !DIExpression())
!240 = distinct !DIGlobalVariable(scope: null, file: !225, line: 257, type: !115, isLocal: true, isDefinition: true)
!241 = !DIGlobalVariableExpression(var: !242, expr: !DIExpression())
!242 = distinct !DIGlobalVariable(scope: null, file: !225, line: 267, type: !243, isLocal: true, isDefinition: true)
!243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 240, elements: !244)
!244 = !{!245}
!245 = !DISubrange(count: 30)
!246 = !DIGlobalVariableExpression(var: !247, expr: !DIExpression())
!247 = distinct !DIGlobalVariable(scope: null, file: !225, line: 276, type: !248, isLocal: true, isDefinition: true)
!248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 200, elements: !214)
!249 = !DIGlobalVariableExpression(var: !250, expr: !DIExpression())
!250 = distinct !DIGlobalVariable(scope: null, file: !225, line: 291, type: !166, isLocal: true, isDefinition: true)
!251 = !DIGlobalVariableExpression(var: !252, expr: !DIExpression())
!252 = distinct !DIGlobalVariable(scope: null, file: !225, line: 291, type: !253, isLocal: true, isDefinition: true)
!253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 464, elements: !254)
!254 = !{!255}
!255 = !DISubrange(count: 58)
!256 = !DIGlobalVariableExpression(var: !257, expr: !DIExpression())
!257 = distinct !DIGlobalVariable(name: "realm_password_cache", scope: !258, file: !327, line: 35, type: !529, isLocal: true, isDefinition: true)
!258 = distinct !DICompileUnit(language: DW_LANG_C11, file: !259, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !260, retainedTypes: !306, globals: !335, splitDebugInlining: false, nameTableKind: None)
!259 = !DIFile(filename: "/home/raj/lwan/common/lwan-http-authorize.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "a818272e04294763324aa9ca395ad814")
!260 = !{!261, !274, !282, !300}
!261 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !262, line: 145, baseType: !37, size: 32, elements: !263)
!262 = !DIFile(filename: "common/lwan.h", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "56f65bbbfce1c5452d6905964ca2b84f")
!263 = !{!264, !265, !266, !267, !268, !269, !270, !271, !272, !273}
!264 = !DIEnumerator(name: "REQUEST_ALL_FLAGS", value: -1)
!265 = !DIEnumerator(name: "REQUEST_METHOD_GET", value: 1)
!266 = !DIEnumerator(name: "REQUEST_METHOD_HEAD", value: 2)
!267 = !DIEnumerator(name: "REQUEST_METHOD_POST", value: 4)
!268 = !DIEnumerator(name: "REQUEST_ACCEPT_DEFLATE", value: 8)
!269 = !DIEnumerator(name: "REQUEST_ACCEPT_GZIP", value: 16)
!270 = !DIEnumerator(name: "REQUEST_IS_HTTP_1_0", value: 32)
!271 = !DIEnumerator(name: "RESPONSE_SENT_HEADERS", value: 64)
!272 = !DIEnumerator(name: "RESPONSE_CHUNKED_ENCODING", value: 128)
!273 = !DIEnumerator(name: "RESPONSE_NO_CONTENT_LENGTH", value: 256)
!274 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !262, line: 158, baseType: !37, size: 32, elements: !275)
!275 = !{!276, !277, !278, !279, !280, !281}
!276 = !DIEnumerator(name: "CONN_MASK", value: -1)
!277 = !DIEnumerator(name: "CONN_KEEP_ALIVE", value: 1)
!278 = !DIEnumerator(name: "CONN_IS_ALIVE", value: 2)
!279 = !DIEnumerator(name: "CONN_SHOULD_RESUME_CORO", value: 4)
!280 = !DIEnumerator(name: "CONN_WRITE_EVENTS", value: 8)
!281 = !DIEnumerator(name: "CONN_MUST_READ", value: 16)
!282 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !262, line: 114, baseType: !28, size: 32, elements: !283)
!283 = !{!284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299}
!284 = !DIEnumerator(name: "HTTP_OK", value: 200)
!285 = !DIEnumerator(name: "HTTP_PARTIAL_CONTENT", value: 206)
!286 = !DIEnumerator(name: "HTTP_MOVED_PERMANENTLY", value: 301)
!287 = !DIEnumerator(name: "HTTP_NOT_MODIFIED", value: 304)
!288 = !DIEnumerator(name: "HTTP_BAD_REQUEST", value: 400)
!289 = !DIEnumerator(name: "HTTP_NOT_AUTHORIZED", value: 401)
!290 = !DIEnumerator(name: "HTTP_FORBIDDEN", value: 403)
!291 = !DIEnumerator(name: "HTTP_NOT_FOUND", value: 404)
!292 = !DIEnumerator(name: "HTTP_NOT_ALLOWED", value: 405)
!293 = !DIEnumerator(name: "HTTP_TIMEOUT", value: 408)
!294 = !DIEnumerator(name: "HTTP_TOO_LARGE", value: 413)
!295 = !DIEnumerator(name: "HTTP_RANGE_UNSATISFIABLE", value: 416)
!296 = !DIEnumerator(name: "HTTP_I_AM_A_TEAPOT", value: 418)
!297 = !DIEnumerator(name: "HTTP_INTERNAL_ERROR", value: 500)
!298 = !DIEnumerator(name: "HTTP_NOT_IMPLEMENTED", value: 501)
!299 = !DIEnumerator(name: "HTTP_UNAVAILABLE", value: 503)
!300 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !301, line: 35, baseType: !28, size: 32, elements: !302)
!301 = !DIFile(filename: "common/lwan-config.h", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "7586af514a363878312816f8ee308270")
!302 = !{!303, !304, !305}
!303 = !DIEnumerator(name: "CONFIG_LINE_TYPE_LINE", value: 0)
!304 = !DIEnumerator(name: "CONFIG_LINE_TYPE_SECTION", value: 1)
!305 = !DIEnumerator(name: "CONFIG_LINE_TYPE_SECTION_END", value: 2)
!306 = !{!5, !307, !325, !334}
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 64)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cache_entry_t", file: !309, line: 27, size: 320, elements: !310)
!309 = !DIFile(filename: "common/lwan-cache.h", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "f48e19cadb0735f737f22aa65af51f83")
!310 = !{!311, !318, !319, !320, !321}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !308, file: !309, line: 28, baseType: !312, size: 128)
!312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_node", file: !313, line: 191, size: 128, elements: !314)
!313 = !DIFile(filename: "common/list.h", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "c0dffb77b1bbbbb179ef8d69b9e1dd8c")
!314 = !{!315, !317}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !312, file: !313, line: 193, baseType: !316, size: 64)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !312, file: !313, line: 193, baseType: !316, size: 64, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !308, file: !309, line: 29, baseType: !61, size: 64, offset: 128)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !308, file: !309, line: 30, baseType: !28, size: 32, offset: 192)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !308, file: !309, line: 31, baseType: !28, size: 32, offset: 224)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "time_to_die", scope: !308, file: !309, line: 32, baseType: !322, size: 64, offset: 256)
!322 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !323, line: 10, baseType: !324)
!323 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "", checksumkind: CSK_MD5, checksum: "5c299a4954617c88bb03645c7864e1b1")
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !69, line: 160, baseType: !40)
!325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 64)
!326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "realm_password_file_t", file: !327, line: 30, size: 384, elements: !328)
!327 = !DIFile(filename: "common/lwan-http-authorize.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "a818272e04294763324aa9ca395ad814")
!328 = !{!329, !330}
!329 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !326, file: !327, line: 31, baseType: !308, size: 320)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !326, file: !327, line: 32, baseType: !331, size: 64, offset: 320)
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 64)
!332 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash", file: !333, line: 6, flags: DIFlagFwdDecl)
!333 = !DIFile(filename: "common/hash.h", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "8a7f0d7c578de44c7172c81fd9e8cd22")
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!335 = !{!336, !501, !503, !508, !510, !515, !517, !519, !524, !256}
!336 = !DIGlobalVariableExpression(var: !337, expr: !DIExpression())
!337 = distinct !DIGlobalVariable(name: "authenticate_tmpl", scope: !338, file: !327, line: 189, type: !155, isLocal: true, isDefinition: true)
!338 = distinct !DISubprogram(name: "lwan_http_authorize", scope: !327, file: !327, line: 184, type: !339, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !258, retainedNodes: !74)
!339 = !DISubroutineType(types: !340)
!340 = !{!341, !342, !500, !480, !480}
!341 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !343, size: 64)
!343 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_request_t", file: !262, line: 106, baseType: !344)
!344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_request_t_", file: !262, line: 206, size: 1280, elements: !345)
!345 = !{!346, !348, !349, !355, !356, !441, !452, !453, !465}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !344, file: !262, line: 207, baseType: !347, size: 32)
!347 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_request_flags_t", file: !262, line: 156, baseType: !261)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !344, file: !262, line: 208, baseType: !37, size: 32, offset: 32)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "url", scope: !344, file: !262, line: 209, baseType: !350, size: 128, offset: 64)
!350 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_value_t", file: !262, line: 110, baseType: !351)
!351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_value_t_", file: !262, line: 191, size: 128, elements: !352)
!352 = !{!353, !354}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !351, file: !262, line: 192, baseType: !61, size: 64)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !351, file: !262, line: 193, baseType: !6, size: 64, offset: 64)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "original_url", scope: !344, file: !262, line: 210, baseType: !350, size: 128, offset: 192)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "conn", scope: !344, file: !262, line: 211, baseType: !357, size: 64, offset: 320)
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!358 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_connection_t", file: !262, line: 112, baseType: !359)
!359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_connection_t_", file: !262, line: 196, size: 256, elements: !360)
!360 = !{!361, !363, !364, !369, !439, !440}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !359, file: !262, line: 199, baseType: !362, size: 32)
!362 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_connection_flags_t", file: !262, line: 165, baseType: !274)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "time_to_die", scope: !359, file: !262, line: 200, baseType: !28, size: 32, offset: 32)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "coro", scope: !359, file: !262, line: 201, baseType: !365, size: 64, offset: 64)
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 64)
!366 = !DIDerivedType(tag: DW_TAG_typedef, name: "coro_t", file: !367, line: 34, baseType: !368)
!367 = !DIFile(filename: "common/lwan-coro.h", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "34b7f40341e2e8a3481f0400ece0424e")
!368 = !DICompositeType(tag: DW_TAG_structure_type, name: "coro_t_", file: !367, line: 34, flags: DIFlagFwdDecl)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !359, file: !262, line: 202, baseType: !370, size: 64, offset: 128)
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!371 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_thread_t", file: !262, line: 108, baseType: !372)
!372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_thread_t_", file: !262, line: 253, size: 832, elements: !373)
!373 = !{!374, !426, !433, !434, !436}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "lwan", scope: !372, file: !262, line: 254, baseType: !375, size: 64)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 64)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_t", file: !262, line: 103, baseType: !377)
!377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_t_", file: !262, line: 275, size: 640, elements: !378)
!378 = !{!379, !406, !407, !414, !415, !425}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "url_map_trie", scope: !377, file: !262, line: 276, baseType: !380, size: 128)
!380 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_t", file: !381, line: 25, baseType: !382)
!381 = !DIFile(filename: "common/lwan-trie.h", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "ee6a35f9d72fff2f5550c3424937f5b6")
!382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_t_", file: !381, line: 41, size: 128, elements: !383)
!383 = !{!384, !402}
!384 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !382, file: !381, line: 42, baseType: !385, size: 64)
!385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !386, size: 64)
!386 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_node_t", file: !381, line: 26, baseType: !387)
!387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_node_t_", file: !381, line: 29, size: 640, elements: !388)
!388 = !{!389, !393, !401}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !387, file: !381, line: 30, baseType: !390, size: 512)
!390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !385, size: 512, elements: !391)
!391 = !{!392}
!392 = !DISubrange(count: 8)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !387, file: !381, line: 31, baseType: !394, size: 64, offset: 512)
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 64)
!395 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_leaf_t", file: !381, line: 27, baseType: !396)
!396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_leaf_t_", file: !381, line: 35, size: 192, elements: !397)
!397 = !{!398, !399, !400}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !396, file: !381, line: 36, baseType: !61, size: 64)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !396, file: !381, line: 37, baseType: !5, size: 64, offset: 64)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !396, file: !381, line: 38, baseType: !394, size: 64, offset: 128)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !387, file: !381, line: 32, baseType: !37, size: 32, offset: 576)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !382, file: !381, line: 43, baseType: !403, size: 64, offset: 64)
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 64)
!404 = !DISubroutineType(types: !405)
!405 = !{null, !5}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "conns", scope: !377, file: !262, line: 277, baseType: !357, size: 64, offset: 128)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !377, file: !262, line: 283, baseType: !408, size: 128, offset: 192)
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !377, file: !262, line: 279, size: 128, elements: !409)
!409 = !{!410, !411, !412}
!410 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !408, file: !262, line: 280, baseType: !370, size: 64)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "max_fd", scope: !408, file: !262, line: 281, baseType: !28, size: 32, offset: 64)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !408, file: !262, line: 282, baseType: !413, size: 16, offset: 96)
!413 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "module_registry", scope: !377, file: !262, line: 285, baseType: !331, size: 64, offset: 320)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !377, file: !262, line: 286, baseType: !416, size: 192, offset: 384)
!416 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_config_t", file: !262, line: 111, baseType: !417)
!417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_config_t_", file: !262, line: 266, size: 192, elements: !418)
!418 = !{!419, !420, !421, !422, !423, !424}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !417, file: !262, line: 267, baseType: !61, size: 64)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive_timeout", scope: !417, file: !262, line: 268, baseType: !413, size: 16, offset: 64)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "quiet", scope: !417, file: !262, line: 269, baseType: !341, size: 8, offset: 80)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "reuse_port", scope: !417, file: !262, line: 270, baseType: !341, size: 8, offset: 88)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !417, file: !262, line: 271, baseType: !28, size: 32, offset: 96)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "n_threads", scope: !417, file: !262, line: 272, baseType: !413, size: 16, offset: 128)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "main_socket", scope: !377, file: !262, line: 287, baseType: !37, size: 32, offset: 576)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !372, file: !262, line: 259, baseType: !427, size: 576, offset: 64)
!427 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !372, file: !262, line: 255, size: 576, elements: !428)
!428 = !{!429, !431, !432}
!429 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !427, file: !262, line: 256, baseType: !430, size: 240)
!430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 240, elements: !244)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !427, file: !262, line: 257, baseType: !430, size: 240, offset: 240)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !427, file: !262, line: 258, baseType: !322, size: 64, offset: 512)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_fd", scope: !372, file: !262, line: 261, baseType: !37, size: 32, offset: 640)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_fd", scope: !372, file: !262, line: 262, baseType: !435, size: 64, offset: 672)
!435 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 64, elements: !189)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !372, file: !262, line: 263, baseType: !437, size: 64, offset: 768)
!437 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_t", file: !438, line: 27, baseType: !8)
!438 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h", directory: "", checksumkind: CSK_MD5, checksum: "735e3bf264ff9d8f5d95898b1692fbdb")
!439 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !359, file: !262, line: 203, baseType: !37, size: 32, offset: 192)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !359, file: !262, line: 203, baseType: !37, size: 32, offset: 224)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "query_params", scope: !344, file: !262, line: 216, baseType: !442, size: 128, offset: 384)
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !344, file: !262, line: 213, size: 128, elements: !443)
!443 = !{!444, !451}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !442, file: !262, line: 214, baseType: !445, size: 64)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!446 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_key_value_t", file: !262, line: 105, baseType: !447)
!447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_key_value_t_", file: !262, line: 173, size: 128, elements: !448)
!448 = !{!449, !450}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !447, file: !262, line: 174, baseType: !61, size: 64)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !447, file: !262, line: 175, baseType: !61, size: 64, offset: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !442, file: !262, line: 215, baseType: !6, size: 64, offset: 64)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "post_data", scope: !344, file: !262, line: 216, baseType: !442, size: 128, offset: 512)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !344, file: !262, line: 223, baseType: !454, size: 192, offset: 640)
!454 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !344, file: !262, line: 217, size: 192, elements: !455)
!455 = !{!456, !457}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "if_modified_since", scope: !454, file: !262, line: 218, baseType: !322, size: 64)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !454, file: !262, line: 222, baseType: !458, size: 128, offset: 64)
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !454, file: !262, line: 219, size: 128, elements: !459)
!459 = !{!460, !464}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !458, file: !262, line: 220, baseType: !461, size: 64)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !462, line: 85, baseType: !463)
!462 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "", checksumkind: CSK_MD5, checksum: "e62424071ad3f1b4d088c139fd9ccfd1")
!463 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !69, line: 152, baseType: !40)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !458, file: !262, line: 221, baseType: !461, size: 64, offset: 64)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !344, file: !262, line: 224, baseType: !466, size: 448, offset: 832)
!466 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_response_t", file: !262, line: 107, baseType: !467)
!467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_response_t_", file: !262, line: 178, size: 448, elements: !468)
!468 = !{!469, !487, !488, !489, !490}
!469 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !467, file: !262, line: 179, baseType: !470, size: 64)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64)
!471 = !DIDerivedType(tag: DW_TAG_typedef, name: "strbuf_t", file: !472, line: 25, baseType: !473)
!472 = !DIFile(filename: "common/strbuf.h", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "1033ae3716fb79c0aa99479d5ab6b6cd")
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "strbuf_t_", file: !472, line: 27, size: 256, elements: !474)
!474 = !{!475, !481, !486}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !473, file: !472, line: 31, baseType: !476, size: 64)
!476 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !473, file: !472, line: 28, size: 64, elements: !477)
!477 = !{!478, !479}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !476, file: !472, line: 29, baseType: !61, size: 64)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "static_buffer", scope: !476, file: !472, line: 30, baseType: !480, size: 64)
!480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !76, size: 64)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !473, file: !472, line: 34, baseType: !482, size: 128, offset: 64)
!482 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !473, file: !472, line: 32, size: 128, elements: !483)
!483 = !{!484, !485}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !482, file: !472, line: 33, baseType: !6, size: 64)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !482, file: !472, line: 33, baseType: !6, size: 64, offset: 64)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !473, file: !472, line: 35, baseType: !28, size: 32, offset: 192)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !467, file: !262, line: 180, baseType: !480, size: 64, offset: 64)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "content_length", scope: !467, file: !262, line: 181, baseType: !6, size: 64, offset: 128)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "headers", scope: !467, file: !262, line: 182, baseType: !445, size: 64, offset: 192)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !467, file: !262, line: 188, baseType: !491, size: 192, offset: 256)
!491 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !467, file: !262, line: 184, size: 192, elements: !492)
!492 = !{!493, !498, !499}
!493 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !491, file: !262, line: 185, baseType: !494, size: 64)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 64)
!495 = !DISubroutineType(types: !496)
!496 = !{!497, !342, !5}
!497 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_http_status_t", file: !262, line: 131, baseType: !282)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !491, file: !262, line: 186, baseType: !5, size: 64, offset: 64)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !491, file: !262, line: 187, baseType: !5, size: 64, offset: 128)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 64)
!501 = !DIGlobalVariableExpression(var: !502, expr: !DIExpression())
!502 = distinct !DIGlobalVariable(name: "basic_len", scope: !338, file: !327, line: 190, type: !73, isLocal: true, isDefinition: true)
!503 = !DIGlobalVariableExpression(var: !504, expr: !DIExpression())
!504 = distinct !DIGlobalVariable(scope: null, file: !327, line: 196, type: !505, isLocal: true, isDefinition: true)
!505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 56, elements: !506)
!506 = !{!507}
!507 = !DISubrange(count: 7)
!508 = !DIGlobalVariableExpression(var: !509, expr: !DIExpression())
!509 = distinct !DIGlobalVariable(scope: null, file: !327, line: 207, type: !103, isLocal: true, isDefinition: true)
!510 = !DIGlobalVariableExpression(var: !511, expr: !DIExpression())
!511 = distinct !DIGlobalVariable(scope: null, file: !327, line: 87, type: !512, isLocal: true, isDefinition: true)
!512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 352, elements: !513)
!513 = !{!514}
!514 = !DISubrange(count: 44)
!515 = !DIGlobalVariableExpression(var: !516, expr: !DIExpression())
!516 = distinct !DIGlobalVariable(scope: null, file: !327, line: 87, type: !176, isLocal: true, isDefinition: true)
!517 = !DIGlobalVariableExpression(var: !518, expr: !DIExpression())
!518 = distinct !DIGlobalVariable(scope: null, file: !327, line: 87, type: !125, isLocal: true, isDefinition: true)
!519 = !DIGlobalVariableExpression(var: !520, expr: !DIExpression())
!520 = distinct !DIGlobalVariable(scope: null, file: !327, line: 96, type: !521, isLocal: true, isDefinition: true)
!521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 232, elements: !522)
!522 = !{!523}
!523 = !DISubrange(count: 29)
!524 = !DIGlobalVariableExpression(var: !525, expr: !DIExpression())
!525 = distinct !DIGlobalVariable(scope: null, file: !327, line: 102, type: !526, isLocal: true, isDefinition: true)
!526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 328, elements: !527)
!527 = !{!528}
!528 = !DISubrange(count: 41)
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 64)
!530 = !DICompositeType(tag: DW_TAG_structure_type, name: "cache_t", file: !309, line: 40, flags: DIFlagFwdDecl)
!531 = !DIGlobalVariableExpression(var: !532, expr: !DIExpression())
!532 = distinct !DIGlobalVariable(scope: null, file: !533, line: 240, type: !526, isLocal: true, isDefinition: true)
!533 = !DIFile(filename: "common/lwan-io-wrappers.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "df65fc501e2089d1c77356ebe44cff47")
!534 = !DIGlobalVariableExpression(var: !535, expr: !DIExpression())
!535 = distinct !DIGlobalVariable(scope: null, file: !533, line: 240, type: !120, isLocal: true, isDefinition: true)
!536 = !DIGlobalVariableExpression(var: !537, expr: !DIExpression())
!537 = distinct !DIGlobalVariable(scope: null, file: !533, line: 240, type: !152, isLocal: true, isDefinition: true)
!538 = !DIGlobalVariableExpression(var: !539, expr: !DIExpression())
!539 = distinct !DIGlobalVariable(scope: null, file: !533, line: 179, type: !540, isLocal: true, isDefinition: true)
!540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 160, elements: !541)
!541 = !{!542}
!542 = !DISubrange(count: 20)
!543 = !DIGlobalVariableExpression(var: !544, expr: !DIExpression())
!544 = distinct !DIGlobalVariable(scope: null, file: !533, line: 179, type: !110, isLocal: true, isDefinition: true)
!545 = !DIGlobalVariableExpression(var: !546, expr: !DIExpression())
!546 = distinct !DIGlobalVariable(name: "running", scope: !547, file: !558, line: 41, type: !341, isLocal: true, isDefinition: true)
!547 = distinct !DICompileUnit(language: DW_LANG_C11, file: !548, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !549, globals: !555, splitDebugInlining: false, nameTableKind: None)
!548 = !DIFile(filename: "/home/raj/lwan/common/lwan-job.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "37f1591a76c3166f23ef5ae3b94f9151")
!549 = !{!5, !550, !61}
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 64)
!551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_node", file: !313, line: 191, size: 128, elements: !552)
!552 = !{!553, !554}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !551, file: !313, line: 193, baseType: !550, size: 64)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !551, file: !313, line: 193, baseType: !550, size: 64, offset: 64)
!555 = !{!556, !562, !567, !570, !573, !576, !581, !583, !585, !587, !589, !591, !596, !599, !601, !604, !606, !608, !545, !613}
!556 = !DIGlobalVariableExpression(var: !557, expr: !DIExpression())
!557 = distinct !DIGlobalVariable(scope: null, file: !558, line: 77, type: !559, isLocal: true, isDefinition: true)
!558 = !DIFile(filename: "common/lwan-job.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "37f1591a76c3166f23ef5ae3b94f9151")
!559 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 72, elements: !560)
!560 = !{!561}
!561 = !DISubrange(count: 9)
!562 = !DIGlobalVariableExpression(var: !563, expr: !DIExpression())
!563 = distinct !DIGlobalVariable(scope: null, file: !558, line: 77, type: !564, isLocal: true, isDefinition: true)
!564 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 264, elements: !565)
!565 = !{!566}
!566 = !DISubrange(count: 33)
!567 = !DIGlobalVariableExpression(var: !568, expr: !DIExpression())
!568 = distinct !DIGlobalVariable(scope: null, file: !558, line: 77, type: !569, isLocal: true, isDefinition: true)
!569 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 256, elements: !182)
!570 = !DIGlobalVariableExpression(var: !571, expr: !DIExpression())
!571 = distinct !DIGlobalVariable(scope: null, file: !558, line: 79, type: !572, isLocal: true, isDefinition: true)
!572 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 168, elements: !237)
!573 = !DIGlobalVariableExpression(var: !574, expr: !DIExpression())
!574 = distinct !DIGlobalVariable(scope: null, file: !558, line: 79, type: !575, isLocal: true, isDefinition: true)
!575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 296, elements: !116)
!576 = !DIGlobalVariableExpression(var: !577, expr: !DIExpression())
!577 = distinct !DIGlobalVariable(scope: null, file: !558, line: 85, type: !578, isLocal: true, isDefinition: true)
!578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 120, elements: !579)
!579 = !{!580}
!580 = !DISubrange(count: 15)
!581 = !DIGlobalVariableExpression(var: !582, expr: !DIExpression())
!582 = distinct !DIGlobalVariable(scope: null, file: !558, line: 92, type: !158, isLocal: true, isDefinition: true)
!583 = !DIGlobalVariableExpression(var: !584, expr: !DIExpression())
!584 = distinct !DIGlobalVariable(scope: null, file: !558, line: 98, type: !248, isLocal: true, isDefinition: true)
!585 = !DIGlobalVariableExpression(var: !586, expr: !DIExpression())
!586 = distinct !DIGlobalVariable(scope: null, file: !558, line: 98, type: !213, isLocal: true, isDefinition: true)
!587 = !DIGlobalVariableExpression(var: !588, expr: !DIExpression())
!588 = distinct !DIGlobalVariable(scope: null, file: !558, line: 108, type: !46, isLocal: true, isDefinition: true)
!589 = !DIGlobalVariableExpression(var: !590, expr: !DIExpression())
!590 = distinct !DIGlobalVariable(scope: null, file: !558, line: 115, type: !193, isLocal: true, isDefinition: true)
!591 = !DIGlobalVariableExpression(var: !592, expr: !DIExpression())
!592 = distinct !DIGlobalVariable(scope: null, file: !558, line: 115, type: !593, isLocal: true, isDefinition: true)
!593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 360, elements: !594)
!594 = !{!595}
!595 = !DISubrange(count: 45)
!596 = !DIGlobalVariableExpression(var: !597, expr: !DIExpression())
!597 = distinct !DIGlobalVariable(scope: null, file: !558, line: 119, type: !598, isLocal: true, isDefinition: true)
!598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 104, elements: !48)
!599 = !DIGlobalVariableExpression(var: !600, expr: !DIExpression())
!600 = distinct !DIGlobalVariable(scope: null, file: !558, line: 119, type: !505, isLocal: true, isDefinition: true)
!601 = !DIGlobalVariableExpression(var: !602, expr: !DIExpression())
!602 = distinct !DIGlobalVariable(scope: null, file: !558, line: 128, type: !603, isLocal: true, isDefinition: true)
!603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 192, elements: !148)
!604 = !DIGlobalVariableExpression(var: !605, expr: !DIExpression())
!605 = distinct !DIGlobalVariable(scope: null, file: !558, line: 137, type: !593, isLocal: true, isDefinition: true)
!606 = !DIGlobalVariableExpression(var: !607, expr: !DIExpression())
!607 = distinct !DIGlobalVariable(name: "self", scope: !547, file: !558, line: 39, type: !437, isLocal: true, isDefinition: true)
!608 = !DIGlobalVariableExpression(var: !609, expr: !DIExpression())
!609 = distinct !DIGlobalVariable(name: "jobs", scope: !547, file: !558, line: 42, type: !610, isLocal: true, isDefinition: true)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !313, line: 208, size: 128, elements: !611)
!611 = !{!612}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !610, file: !313, line: 210, baseType: !551, size: 128)
!613 = !DIGlobalVariableExpression(var: !614, expr: !DIExpression())
!614 = distinct !DIGlobalVariable(name: "queue_mutex", scope: !547, file: !558, line: 40, type: !615, isLocal: true, isDefinition: true)
!615 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_mutex_t", file: !438, line: 72, baseType: !616)
!616 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !438, line: 67, size: 320, elements: !617)
!617 = !{!618, !638, !639}
!618 = !DIDerivedType(tag: DW_TAG_member, name: "__data", scope: !616, file: !438, line: 69, baseType: !619, size: 320)
!619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_mutex_s", file: !620, line: 22, size: 320, elements: !621)
!620 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h", directory: "", checksumkind: CSK_MD5, checksum: "584baedd80e6041b81caae7f496091c0")
!621 = !{!622, !623, !624, !625, !626, !627, !629, !630}
!622 = !DIDerivedType(tag: DW_TAG_member, name: "__lock", scope: !619, file: !620, line: 24, baseType: !37, size: 32)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !619, file: !620, line: 25, baseType: !28, size: 32, offset: 32)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "__owner", scope: !619, file: !620, line: 26, baseType: !37, size: 32, offset: 64)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "__nusers", scope: !619, file: !620, line: 28, baseType: !28, size: 32, offset: 96)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "__kind", scope: !619, file: !620, line: 32, baseType: !37, size: 32, offset: 128)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "__spins", scope: !619, file: !620, line: 34, baseType: !628, size: 16, offset: 160)
!628 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "__elision", scope: !619, file: !620, line: 35, baseType: !628, size: 16, offset: 176)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "__list", scope: !619, file: !620, line: 36, baseType: !631, size: 128, offset: 192)
!631 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pthread_list_t", file: !632, line: 55, baseType: !633)
!632 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h", directory: "", checksumkind: CSK_MD5, checksum: "04c81e86d34dad9c99ad006d32e47a0d")
!633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_internal_list", file: !632, line: 51, size: 128, elements: !634)
!634 = !{!635, !637}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "__prev", scope: !633, file: !632, line: 53, baseType: !636, size: 64)
!636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 64)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "__next", scope: !633, file: !632, line: 54, baseType: !636, size: 64, offset: 64)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !616, file: !438, line: 70, baseType: !82, size: 320)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !616, file: !438, line: 71, baseType: !40, size: 64)
!640 = !DIGlobalVariableExpression(var: !641, expr: !DIExpression())
!641 = distinct !DIGlobalVariable(scope: null, file: !642, line: 253, type: !521, isLocal: true, isDefinition: true)
!642 = !DIFile(filename: "common/lwan.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "b45b64bdafc0e6707cec9025aee73c17")
!643 = !DIGlobalVariableExpression(var: !644, expr: !DIExpression())
!644 = distinct !DIGlobalVariable(scope: null, file: !642, line: 253, type: !155, isLocal: true, isDefinition: true)
!645 = !DIGlobalVariableExpression(var: !646, expr: !DIExpression())
!646 = distinct !DIGlobalVariable(scope: null, file: !642, line: 253, type: !208, isLocal: true, isDefinition: true)
!647 = !DIGlobalVariableExpression(var: !648, expr: !DIExpression())
!648 = distinct !DIGlobalVariable(scope: null, file: !642, line: 308, type: !578, isLocal: true, isDefinition: true)
!649 = !DIGlobalVariableExpression(var: !650, expr: !DIExpression())
!650 = distinct !DIGlobalVariable(scope: null, file: !642, line: 315, type: !651, isLocal: true, isDefinition: true)
!651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 64, elements: !391)
!652 = !DIGlobalVariableExpression(var: !653, expr: !DIExpression())
!653 = distinct !DIGlobalVariable(scope: null, file: !642, line: 322, type: !654, isLocal: true, isDefinition: true)
!654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 80, elements: !655)
!655 = !{!656}
!656 = !DISubrange(count: 10)
!657 = !DIGlobalVariableExpression(var: !658, expr: !DIExpression())
!658 = distinct !DIGlobalVariable(name: "default_config", scope: !659, file: !642, line: 44, type: !1109, isLocal: true, isDefinition: true)
!659 = distinct !DICompileUnit(language: DW_LANG_C11, file: !660, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !661, retainedTypes: !926, globals: !933, splitDebugInlining: false, nameTableKind: None)
!660 = !DIFile(filename: "/home/raj/lwan/common/lwan.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "b45b64bdafc0e6707cec9025aee73c17")
!661 = !{!274, !282, !261, !662, !672, !300, !684, !904}
!662 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !262, line: 133, baseType: !28, size: 32, elements: !663)
!663 = !{!664, !665, !666, !667, !668, !669, !670, !671}
!664 = !DIEnumerator(name: "HANDLER_PARSE_QUERY_STRING", value: 1)
!665 = !DIEnumerator(name: "HANDLER_PARSE_IF_MODIFIED_SINCE", value: 2)
!666 = !DIEnumerator(name: "HANDLER_PARSE_RANGE", value: 4)
!667 = !DIEnumerator(name: "HANDLER_PARSE_ACCEPT_ENCODING", value: 8)
!668 = !DIEnumerator(name: "HANDLER_PARSE_POST_DATA", value: 16)
!669 = !DIEnumerator(name: "HANDLER_MUST_AUTHORIZE", value: 32)
!670 = !DIEnumerator(name: "HANDLER_REMOVE_LEADING_SLASH", value: 64)
!671 = !DIEnumerator(name: "HANDLER_PARSE_MASK", value: 31)
!672 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__socket_type", file: !673, line: 24, baseType: !28, size: 32, elements: !674)
!673 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket_type.h", directory: "", checksumkind: CSK_MD5, checksum: "0d4e972fdeb3da9a5bc94fa41144e9f8")
!674 = !{!675, !676, !677, !678, !679, !680, !681, !682, !683}
!675 = !DIEnumerator(name: "SOCK_STREAM", value: 1)
!676 = !DIEnumerator(name: "SOCK_DGRAM", value: 2)
!677 = !DIEnumerator(name: "SOCK_RAW", value: 3)
!678 = !DIEnumerator(name: "SOCK_RDM", value: 4)
!679 = !DIEnumerator(name: "SOCK_SEQPACKET", value: 5)
!680 = !DIEnumerator(name: "SOCK_DCCP", value: 6)
!681 = !DIEnumerator(name: "SOCK_PACKET", value: 10)
!682 = !DIEnumerator(name: "SOCK_CLOEXEC", value: 524288)
!683 = !DIEnumerator(name: "SOCK_NONBLOCK", value: 2048)
!684 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !685, line: 71, baseType: !28, size: 32, elements: !686)
!685 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/confname.h", directory: "", checksumkind: CSK_MD5, checksum: "78b98c9476f9b4c41f6f4ea6bcb3195f")
!686 = !{!687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903}
!687 = !DIEnumerator(name: "_SC_ARG_MAX", value: 0)
!688 = !DIEnumerator(name: "_SC_CHILD_MAX", value: 1)
!689 = !DIEnumerator(name: "_SC_CLK_TCK", value: 2)
!690 = !DIEnumerator(name: "_SC_NGROUPS_MAX", value: 3)
!691 = !DIEnumerator(name: "_SC_OPEN_MAX", value: 4)
!692 = !DIEnumerator(name: "_SC_STREAM_MAX", value: 5)
!693 = !DIEnumerator(name: "_SC_TZNAME_MAX", value: 6)
!694 = !DIEnumerator(name: "_SC_JOB_CONTROL", value: 7)
!695 = !DIEnumerator(name: "_SC_SAVED_IDS", value: 8)
!696 = !DIEnumerator(name: "_SC_REALTIME_SIGNALS", value: 9)
!697 = !DIEnumerator(name: "_SC_PRIORITY_SCHEDULING", value: 10)
!698 = !DIEnumerator(name: "_SC_TIMERS", value: 11)
!699 = !DIEnumerator(name: "_SC_ASYNCHRONOUS_IO", value: 12)
!700 = !DIEnumerator(name: "_SC_PRIORITIZED_IO", value: 13)
!701 = !DIEnumerator(name: "_SC_SYNCHRONIZED_IO", value: 14)
!702 = !DIEnumerator(name: "_SC_FSYNC", value: 15)
!703 = !DIEnumerator(name: "_SC_MAPPED_FILES", value: 16)
!704 = !DIEnumerator(name: "_SC_MEMLOCK", value: 17)
!705 = !DIEnumerator(name: "_SC_MEMLOCK_RANGE", value: 18)
!706 = !DIEnumerator(name: "_SC_MEMORY_PROTECTION", value: 19)
!707 = !DIEnumerator(name: "_SC_MESSAGE_PASSING", value: 20)
!708 = !DIEnumerator(name: "_SC_SEMAPHORES", value: 21)
!709 = !DIEnumerator(name: "_SC_SHARED_MEMORY_OBJECTS", value: 22)
!710 = !DIEnumerator(name: "_SC_AIO_LISTIO_MAX", value: 23)
!711 = !DIEnumerator(name: "_SC_AIO_MAX", value: 24)
!712 = !DIEnumerator(name: "_SC_AIO_PRIO_DELTA_MAX", value: 25)
!713 = !DIEnumerator(name: "_SC_DELAYTIMER_MAX", value: 26)
!714 = !DIEnumerator(name: "_SC_MQ_OPEN_MAX", value: 27)
!715 = !DIEnumerator(name: "_SC_MQ_PRIO_MAX", value: 28)
!716 = !DIEnumerator(name: "_SC_VERSION", value: 29)
!717 = !DIEnumerator(name: "_SC_PAGESIZE", value: 30)
!718 = !DIEnumerator(name: "_SC_RTSIG_MAX", value: 31)
!719 = !DIEnumerator(name: "_SC_SEM_NSEMS_MAX", value: 32)
!720 = !DIEnumerator(name: "_SC_SEM_VALUE_MAX", value: 33)
!721 = !DIEnumerator(name: "_SC_SIGQUEUE_MAX", value: 34)
!722 = !DIEnumerator(name: "_SC_TIMER_MAX", value: 35)
!723 = !DIEnumerator(name: "_SC_BC_BASE_MAX", value: 36)
!724 = !DIEnumerator(name: "_SC_BC_DIM_MAX", value: 37)
!725 = !DIEnumerator(name: "_SC_BC_SCALE_MAX", value: 38)
!726 = !DIEnumerator(name: "_SC_BC_STRING_MAX", value: 39)
!727 = !DIEnumerator(name: "_SC_COLL_WEIGHTS_MAX", value: 40)
!728 = !DIEnumerator(name: "_SC_EQUIV_CLASS_MAX", value: 41)
!729 = !DIEnumerator(name: "_SC_EXPR_NEST_MAX", value: 42)
!730 = !DIEnumerator(name: "_SC_LINE_MAX", value: 43)
!731 = !DIEnumerator(name: "_SC_RE_DUP_MAX", value: 44)
!732 = !DIEnumerator(name: "_SC_CHARCLASS_NAME_MAX", value: 45)
!733 = !DIEnumerator(name: "_SC_2_VERSION", value: 46)
!734 = !DIEnumerator(name: "_SC_2_C_BIND", value: 47)
!735 = !DIEnumerator(name: "_SC_2_C_DEV", value: 48)
!736 = !DIEnumerator(name: "_SC_2_FORT_DEV", value: 49)
!737 = !DIEnumerator(name: "_SC_2_FORT_RUN", value: 50)
!738 = !DIEnumerator(name: "_SC_2_SW_DEV", value: 51)
!739 = !DIEnumerator(name: "_SC_2_LOCALEDEF", value: 52)
!740 = !DIEnumerator(name: "_SC_PII", value: 53)
!741 = !DIEnumerator(name: "_SC_PII_XTI", value: 54)
!742 = !DIEnumerator(name: "_SC_PII_SOCKET", value: 55)
!743 = !DIEnumerator(name: "_SC_PII_INTERNET", value: 56)
!744 = !DIEnumerator(name: "_SC_PII_OSI", value: 57)
!745 = !DIEnumerator(name: "_SC_POLL", value: 58)
!746 = !DIEnumerator(name: "_SC_SELECT", value: 59)
!747 = !DIEnumerator(name: "_SC_UIO_MAXIOV", value: 60)
!748 = !DIEnumerator(name: "_SC_IOV_MAX", value: 60)
!749 = !DIEnumerator(name: "_SC_PII_INTERNET_STREAM", value: 61)
!750 = !DIEnumerator(name: "_SC_PII_INTERNET_DGRAM", value: 62)
!751 = !DIEnumerator(name: "_SC_PII_OSI_COTS", value: 63)
!752 = !DIEnumerator(name: "_SC_PII_OSI_CLTS", value: 64)
!753 = !DIEnumerator(name: "_SC_PII_OSI_M", value: 65)
!754 = !DIEnumerator(name: "_SC_T_IOV_MAX", value: 66)
!755 = !DIEnumerator(name: "_SC_THREADS", value: 67)
!756 = !DIEnumerator(name: "_SC_THREAD_SAFE_FUNCTIONS", value: 68)
!757 = !DIEnumerator(name: "_SC_GETGR_R_SIZE_MAX", value: 69)
!758 = !DIEnumerator(name: "_SC_GETPW_R_SIZE_MAX", value: 70)
!759 = !DIEnumerator(name: "_SC_LOGIN_NAME_MAX", value: 71)
!760 = !DIEnumerator(name: "_SC_TTY_NAME_MAX", value: 72)
!761 = !DIEnumerator(name: "_SC_THREAD_DESTRUCTOR_ITERATIONS", value: 73)
!762 = !DIEnumerator(name: "_SC_THREAD_KEYS_MAX", value: 74)
!763 = !DIEnumerator(name: "_SC_THREAD_STACK_MIN", value: 75)
!764 = !DIEnumerator(name: "_SC_THREAD_THREADS_MAX", value: 76)
!765 = !DIEnumerator(name: "_SC_THREAD_ATTR_STACKADDR", value: 77)
!766 = !DIEnumerator(name: "_SC_THREAD_ATTR_STACKSIZE", value: 78)
!767 = !DIEnumerator(name: "_SC_THREAD_PRIORITY_SCHEDULING", value: 79)
!768 = !DIEnumerator(name: "_SC_THREAD_PRIO_INHERIT", value: 80)
!769 = !DIEnumerator(name: "_SC_THREAD_PRIO_PROTECT", value: 81)
!770 = !DIEnumerator(name: "_SC_THREAD_PROCESS_SHARED", value: 82)
!771 = !DIEnumerator(name: "_SC_NPROCESSORS_CONF", value: 83)
!772 = !DIEnumerator(name: "_SC_NPROCESSORS_ONLN", value: 84)
!773 = !DIEnumerator(name: "_SC_PHYS_PAGES", value: 85)
!774 = !DIEnumerator(name: "_SC_AVPHYS_PAGES", value: 86)
!775 = !DIEnumerator(name: "_SC_ATEXIT_MAX", value: 87)
!776 = !DIEnumerator(name: "_SC_PASS_MAX", value: 88)
!777 = !DIEnumerator(name: "_SC_XOPEN_VERSION", value: 89)
!778 = !DIEnumerator(name: "_SC_XOPEN_XCU_VERSION", value: 90)
!779 = !DIEnumerator(name: "_SC_XOPEN_UNIX", value: 91)
!780 = !DIEnumerator(name: "_SC_XOPEN_CRYPT", value: 92)
!781 = !DIEnumerator(name: "_SC_XOPEN_ENH_I18N", value: 93)
!782 = !DIEnumerator(name: "_SC_XOPEN_SHM", value: 94)
!783 = !DIEnumerator(name: "_SC_2_CHAR_TERM", value: 95)
!784 = !DIEnumerator(name: "_SC_2_C_VERSION", value: 96)
!785 = !DIEnumerator(name: "_SC_2_UPE", value: 97)
!786 = !DIEnumerator(name: "_SC_XOPEN_XPG2", value: 98)
!787 = !DIEnumerator(name: "_SC_XOPEN_XPG3", value: 99)
!788 = !DIEnumerator(name: "_SC_XOPEN_XPG4", value: 100)
!789 = !DIEnumerator(name: "_SC_CHAR_BIT", value: 101)
!790 = !DIEnumerator(name: "_SC_CHAR_MAX", value: 102)
!791 = !DIEnumerator(name: "_SC_CHAR_MIN", value: 103)
!792 = !DIEnumerator(name: "_SC_INT_MAX", value: 104)
!793 = !DIEnumerator(name: "_SC_INT_MIN", value: 105)
!794 = !DIEnumerator(name: "_SC_LONG_BIT", value: 106)
!795 = !DIEnumerator(name: "_SC_WORD_BIT", value: 107)
!796 = !DIEnumerator(name: "_SC_MB_LEN_MAX", value: 108)
!797 = !DIEnumerator(name: "_SC_NZERO", value: 109)
!798 = !DIEnumerator(name: "_SC_SSIZE_MAX", value: 110)
!799 = !DIEnumerator(name: "_SC_SCHAR_MAX", value: 111)
!800 = !DIEnumerator(name: "_SC_SCHAR_MIN", value: 112)
!801 = !DIEnumerator(name: "_SC_SHRT_MAX", value: 113)
!802 = !DIEnumerator(name: "_SC_SHRT_MIN", value: 114)
!803 = !DIEnumerator(name: "_SC_UCHAR_MAX", value: 115)
!804 = !DIEnumerator(name: "_SC_UINT_MAX", value: 116)
!805 = !DIEnumerator(name: "_SC_ULONG_MAX", value: 117)
!806 = !DIEnumerator(name: "_SC_USHRT_MAX", value: 118)
!807 = !DIEnumerator(name: "_SC_NL_ARGMAX", value: 119)
!808 = !DIEnumerator(name: "_SC_NL_LANGMAX", value: 120)
!809 = !DIEnumerator(name: "_SC_NL_MSGMAX", value: 121)
!810 = !DIEnumerator(name: "_SC_NL_NMAX", value: 122)
!811 = !DIEnumerator(name: "_SC_NL_SETMAX", value: 123)
!812 = !DIEnumerator(name: "_SC_NL_TEXTMAX", value: 124)
!813 = !DIEnumerator(name: "_SC_XBS5_ILP32_OFF32", value: 125)
!814 = !DIEnumerator(name: "_SC_XBS5_ILP32_OFFBIG", value: 126)
!815 = !DIEnumerator(name: "_SC_XBS5_LP64_OFF64", value: 127)
!816 = !DIEnumerator(name: "_SC_XBS5_LPBIG_OFFBIG", value: 128)
!817 = !DIEnumerator(name: "_SC_XOPEN_LEGACY", value: 129)
!818 = !DIEnumerator(name: "_SC_XOPEN_REALTIME", value: 130)
!819 = !DIEnumerator(name: "_SC_XOPEN_REALTIME_THREADS", value: 131)
!820 = !DIEnumerator(name: "_SC_ADVISORY_INFO", value: 132)
!821 = !DIEnumerator(name: "_SC_BARRIERS", value: 133)
!822 = !DIEnumerator(name: "_SC_BASE", value: 134)
!823 = !DIEnumerator(name: "_SC_C_LANG_SUPPORT", value: 135)
!824 = !DIEnumerator(name: "_SC_C_LANG_SUPPORT_R", value: 136)
!825 = !DIEnumerator(name: "_SC_CLOCK_SELECTION", value: 137)
!826 = !DIEnumerator(name: "_SC_CPUTIME", value: 138)
!827 = !DIEnumerator(name: "_SC_THREAD_CPUTIME", value: 139)
!828 = !DIEnumerator(name: "_SC_DEVICE_IO", value: 140)
!829 = !DIEnumerator(name: "_SC_DEVICE_SPECIFIC", value: 141)
!830 = !DIEnumerator(name: "_SC_DEVICE_SPECIFIC_R", value: 142)
!831 = !DIEnumerator(name: "_SC_FD_MGMT", value: 143)
!832 = !DIEnumerator(name: "_SC_FIFO", value: 144)
!833 = !DIEnumerator(name: "_SC_PIPE", value: 145)
!834 = !DIEnumerator(name: "_SC_FILE_ATTRIBUTES", value: 146)
!835 = !DIEnumerator(name: "_SC_FILE_LOCKING", value: 147)
!836 = !DIEnumerator(name: "_SC_FILE_SYSTEM", value: 148)
!837 = !DIEnumerator(name: "_SC_MONOTONIC_CLOCK", value: 149)
!838 = !DIEnumerator(name: "_SC_MULTI_PROCESS", value: 150)
!839 = !DIEnumerator(name: "_SC_SINGLE_PROCESS", value: 151)
!840 = !DIEnumerator(name: "_SC_NETWORKING", value: 152)
!841 = !DIEnumerator(name: "_SC_READER_WRITER_LOCKS", value: 153)
!842 = !DIEnumerator(name: "_SC_SPIN_LOCKS", value: 154)
!843 = !DIEnumerator(name: "_SC_REGEXP", value: 155)
!844 = !DIEnumerator(name: "_SC_REGEX_VERSION", value: 156)
!845 = !DIEnumerator(name: "_SC_SHELL", value: 157)
!846 = !DIEnumerator(name: "_SC_SIGNALS", value: 158)
!847 = !DIEnumerator(name: "_SC_SPAWN", value: 159)
!848 = !DIEnumerator(name: "_SC_SPORADIC_SERVER", value: 160)
!849 = !DIEnumerator(name: "_SC_THREAD_SPORADIC_SERVER", value: 161)
!850 = !DIEnumerator(name: "_SC_SYSTEM_DATABASE", value: 162)
!851 = !DIEnumerator(name: "_SC_SYSTEM_DATABASE_R", value: 163)
!852 = !DIEnumerator(name: "_SC_TIMEOUTS", value: 164)
!853 = !DIEnumerator(name: "_SC_TYPED_MEMORY_OBJECTS", value: 165)
!854 = !DIEnumerator(name: "_SC_USER_GROUPS", value: 166)
!855 = !DIEnumerator(name: "_SC_USER_GROUPS_R", value: 167)
!856 = !DIEnumerator(name: "_SC_2_PBS", value: 168)
!857 = !DIEnumerator(name: "_SC_2_PBS_ACCOUNTING", value: 169)
!858 = !DIEnumerator(name: "_SC_2_PBS_LOCATE", value: 170)
!859 = !DIEnumerator(name: "_SC_2_PBS_MESSAGE", value: 171)
!860 = !DIEnumerator(name: "_SC_2_PBS_TRACK", value: 172)
!861 = !DIEnumerator(name: "_SC_SYMLOOP_MAX", value: 173)
!862 = !DIEnumerator(name: "_SC_STREAMS", value: 174)
!863 = !DIEnumerator(name: "_SC_2_PBS_CHECKPOINT", value: 175)
!864 = !DIEnumerator(name: "_SC_V6_ILP32_OFF32", value: 176)
!865 = !DIEnumerator(name: "_SC_V6_ILP32_OFFBIG", value: 177)
!866 = !DIEnumerator(name: "_SC_V6_LP64_OFF64", value: 178)
!867 = !DIEnumerator(name: "_SC_V6_LPBIG_OFFBIG", value: 179)
!868 = !DIEnumerator(name: "_SC_HOST_NAME_MAX", value: 180)
!869 = !DIEnumerator(name: "_SC_TRACE", value: 181)
!870 = !DIEnumerator(name: "_SC_TRACE_EVENT_FILTER", value: 182)
!871 = !DIEnumerator(name: "_SC_TRACE_INHERIT", value: 183)
!872 = !DIEnumerator(name: "_SC_TRACE_LOG", value: 184)
!873 = !DIEnumerator(name: "_SC_LEVEL1_ICACHE_SIZE", value: 185)
!874 = !DIEnumerator(name: "_SC_LEVEL1_ICACHE_ASSOC", value: 186)
!875 = !DIEnumerator(name: "_SC_LEVEL1_ICACHE_LINESIZE", value: 187)
!876 = !DIEnumerator(name: "_SC_LEVEL1_DCACHE_SIZE", value: 188)
!877 = !DIEnumerator(name: "_SC_LEVEL1_DCACHE_ASSOC", value: 189)
!878 = !DIEnumerator(name: "_SC_LEVEL1_DCACHE_LINESIZE", value: 190)
!879 = !DIEnumerator(name: "_SC_LEVEL2_CACHE_SIZE", value: 191)
!880 = !DIEnumerator(name: "_SC_LEVEL2_CACHE_ASSOC", value: 192)
!881 = !DIEnumerator(name: "_SC_LEVEL2_CACHE_LINESIZE", value: 193)
!882 = !DIEnumerator(name: "_SC_LEVEL3_CACHE_SIZE", value: 194)
!883 = !DIEnumerator(name: "_SC_LEVEL3_CACHE_ASSOC", value: 195)
!884 = !DIEnumerator(name: "_SC_LEVEL3_CACHE_LINESIZE", value: 196)
!885 = !DIEnumerator(name: "_SC_LEVEL4_CACHE_SIZE", value: 197)
!886 = !DIEnumerator(name: "_SC_LEVEL4_CACHE_ASSOC", value: 198)
!887 = !DIEnumerator(name: "_SC_LEVEL4_CACHE_LINESIZE", value: 199)
!888 = !DIEnumerator(name: "_SC_IPV6", value: 235)
!889 = !DIEnumerator(name: "_SC_RAW_SOCKETS", value: 236)
!890 = !DIEnumerator(name: "_SC_V7_ILP32_OFF32", value: 237)
!891 = !DIEnumerator(name: "_SC_V7_ILP32_OFFBIG", value: 238)
!892 = !DIEnumerator(name: "_SC_V7_LP64_OFF64", value: 239)
!893 = !DIEnumerator(name: "_SC_V7_LPBIG_OFFBIG", value: 240)
!894 = !DIEnumerator(name: "_SC_SS_REPL_MAX", value: 241)
!895 = !DIEnumerator(name: "_SC_TRACE_EVENT_NAME_MAX", value: 242)
!896 = !DIEnumerator(name: "_SC_TRACE_NAME_MAX", value: 243)
!897 = !DIEnumerator(name: "_SC_TRACE_SYS_MAX", value: 244)
!898 = !DIEnumerator(name: "_SC_TRACE_USER_EVENT_MAX", value: 245)
!899 = !DIEnumerator(name: "_SC_XOPEN_STREAMS", value: 246)
!900 = !DIEnumerator(name: "_SC_THREAD_ROBUST_PRIO_INHERIT", value: 247)
!901 = !DIEnumerator(name: "_SC_THREAD_ROBUST_PRIO_PROTECT", value: 248)
!902 = !DIEnumerator(name: "_SC_MINSIGSTKSZ", value: 249)
!903 = !DIEnumerator(name: "_SC_SIGSTKSZ", value: 250)
!904 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__rlimit_resource", file: !905, line: 31, baseType: !28, size: 32, elements: !906)
!905 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/resource.h", directory: "", checksumkind: CSK_MD5, checksum: "bb0bdc9e7ae341ef435e98e05276a863")
!906 = !{!907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925}
!907 = !DIEnumerator(name: "RLIMIT_CPU", value: 0)
!908 = !DIEnumerator(name: "RLIMIT_FSIZE", value: 1)
!909 = !DIEnumerator(name: "RLIMIT_DATA", value: 2)
!910 = !DIEnumerator(name: "RLIMIT_STACK", value: 3)
!911 = !DIEnumerator(name: "RLIMIT_CORE", value: 4)
!912 = !DIEnumerator(name: "__RLIMIT_RSS", value: 5)
!913 = !DIEnumerator(name: "RLIMIT_NOFILE", value: 7)
!914 = !DIEnumerator(name: "__RLIMIT_OFILE", value: 7)
!915 = !DIEnumerator(name: "RLIMIT_AS", value: 9)
!916 = !DIEnumerator(name: "__RLIMIT_NPROC", value: 6)
!917 = !DIEnumerator(name: "__RLIMIT_MEMLOCK", value: 8)
!918 = !DIEnumerator(name: "__RLIMIT_LOCKS", value: 10)
!919 = !DIEnumerator(name: "__RLIMIT_SIGPENDING", value: 11)
!920 = !DIEnumerator(name: "__RLIMIT_MSGQUEUE", value: 12)
!921 = !DIEnumerator(name: "__RLIMIT_NICE", value: 13)
!922 = !DIEnumerator(name: "__RLIMIT_RTPRIO", value: 14)
!923 = !DIEnumerator(name: "__RLIMIT_RTTIME", value: 15)
!924 = !DIEnumerator(name: "__RLIMIT_NLIMITS", value: 16)
!925 = !DIEnumerator(name: "__RLIM_NLIMITS", value: 16)
!926 = !{!6, !28, !927, !5, !61, !413, !932}
!927 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !928, line: 72, baseType: !929)
!928 = !DIFile(filename: "/usr/include/signal.h", directory: "", checksumkind: CSK_MD5, checksum: "331e107bf774bb600ec675d0db0b92ce")
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!930 = !DISubroutineType(types: !931)
!931 = !{null, !37}
!932 = !DIDerivedType(tag: DW_TAG_typedef, name: "__rlim_t", file: !69, line: 157, baseType: !8)
!933 = !{!640, !643, !645, !647, !649, !652, !934, !937, !942, !944, !949, !951, !953, !958, !961, !963, !966, !968, !970, !972, !974, !979, !982, !987, !657, !989, !991, !993, !995, !997, !999, !1001, !1003, !1008, !1010, !1015, !1017, !1019, !1021, !1023, !1025, !1027, !1032, !1034, !1036, !1038, !1040, !1043, !1045, !1047, !1049, !1051, !1053, !1055, !1057, !1059, !1061, !1063, !1068, !1070, !1072, !1074, !1076, !1078, !1080, !1082, !1084, !1087, !1092, !1095, !1097, !1099, !1101, !1103}
!934 = !DIGlobalVariableExpression(var: !935, expr: !DIExpression())
!935 = distinct !DIGlobalVariable(scope: null, file: !642, line: 473, type: !936, isLocal: true, isDefinition: true)
!936 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 176, elements: !159)
!937 = !DIGlobalVariableExpression(var: !938, expr: !DIExpression())
!938 = distinct !DIGlobalVariable(scope: null, file: !642, line: 473, type: !939, isLocal: true, isDefinition: true)
!939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 344, elements: !940)
!940 = !{!941}
!941 = !DISubrange(count: 43)
!942 = !DIGlobalVariableExpression(var: !943, expr: !DIExpression())
!943 = distinct !DIGlobalVariable(scope: null, file: !642, line: 477, type: !521, isLocal: true, isDefinition: true)
!944 = !DIGlobalVariableExpression(var: !945, expr: !DIExpression())
!945 = distinct !DIGlobalVariable(scope: null, file: !642, line: 491, type: !946, isLocal: true, isDefinition: true)
!946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 384, elements: !947)
!947 = !{!948}
!948 = !DISubrange(count: 48)
!949 = !DIGlobalVariableExpression(var: !950, expr: !DIExpression())
!950 = distinct !DIGlobalVariable(scope: null, file: !642, line: 505, type: !120, isLocal: true, isDefinition: true)
!951 = !DIGlobalVariableExpression(var: !952, expr: !DIExpression())
!952 = distinct !DIGlobalVariable(scope: null, file: !642, line: 505, type: !152, isLocal: true, isDefinition: true)
!953 = !DIGlobalVariableExpression(var: !954, expr: !DIExpression())
!954 = distinct !DIGlobalVariable(scope: null, file: !642, line: 513, type: !955, isLocal: true, isDefinition: true)
!955 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 216, elements: !956)
!956 = !{!957}
!957 = !DISubrange(count: 27)
!958 = !DIGlobalVariableExpression(var: !959, expr: !DIExpression())
!959 = distinct !DIGlobalVariable(scope: null, file: !642, line: 561, type: !960, isLocal: true, isDefinition: true)
!960 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 144, elements: !177)
!961 = !DIGlobalVariableExpression(var: !962, expr: !DIExpression())
!962 = distinct !DIGlobalVariable(scope: null, file: !642, line: 561, type: !243, isLocal: true, isDefinition: true)
!963 = !DIGlobalVariableExpression(var: !964, expr: !DIExpression())
!964 = distinct !DIGlobalVariable(scope: null, file: !642, line: 564, type: !965, isLocal: true, isDefinition: true)
!965 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 120, elements: !579)
!966 = !DIGlobalVariableExpression(var: !967, expr: !DIExpression())
!967 = distinct !DIGlobalVariable(scope: null, file: !642, line: 564, type: !521, isLocal: true, isDefinition: true)
!968 = !DIGlobalVariableExpression(var: !969, expr: !DIExpression())
!969 = distinct !DIGlobalVariable(scope: null, file: !642, line: 566, type: !578, isLocal: true, isDefinition: true)
!970 = !DIGlobalVariableExpression(var: !971, expr: !DIExpression())
!971 = distinct !DIGlobalVariable(scope: null, file: !642, line: 572, type: !505, isLocal: true, isDefinition: true)
!972 = !DIGlobalVariableExpression(var: !973, expr: !DIExpression())
!973 = distinct !DIGlobalVariable(scope: null, file: !642, line: 577, type: !430, isLocal: true, isDefinition: true)
!974 = !DIGlobalVariableExpression(var: !975, expr: !DIExpression())
!975 = distinct !DIGlobalVariable(scope: null, file: !642, line: 579, type: !976, isLocal: true, isDefinition: true)
!976 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 312, elements: !977)
!977 = !{!978}
!978 = !DISubrange(count: 39)
!979 = !DIGlobalVariableExpression(var: !980, expr: !DIExpression())
!980 = distinct !DIGlobalVariable(scope: null, file: !642, line: 111, type: !981, isLocal: true, isDefinition: true)
!981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 96, elements: !53)
!982 = !DIGlobalVariableExpression(var: !983, expr: !DIExpression())
!983 = distinct !DIGlobalVariable(scope: null, file: !642, line: 111, type: !984, isLocal: true, isDefinition: true)
!984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 184, elements: !985)
!985 = !{!986}
!986 = !DISubrange(count: 23)
!987 = !DIGlobalVariableExpression(var: !988, expr: !DIExpression())
!988 = distinct !DIGlobalVariable(scope: null, file: !642, line: 45, type: !578, isLocal: true, isDefinition: true)
!989 = !DIGlobalVariableExpression(var: !990, expr: !DIExpression())
!990 = distinct !DIGlobalVariable(scope: null, file: !642, line: 56, type: !155, isLocal: true, isDefinition: true)
!991 = !DIGlobalVariableExpression(var: !992, expr: !DIExpression())
!992 = distinct !DIGlobalVariable(scope: null, file: !642, line: 56, type: !521, isLocal: true, isDefinition: true)
!993 = !DIGlobalVariableExpression(var: !994, expr: !DIExpression())
!994 = distinct !DIGlobalVariable(scope: null, file: !642, line: 69, type: !572, isLocal: true, isDefinition: true)
!995 = !DIGlobalVariableExpression(var: !996, expr: !DIExpression())
!996 = distinct !DIGlobalVariable(scope: null, file: !642, line: 69, type: !213, isLocal: true, isDefinition: true)
!997 = !DIGlobalVariableExpression(var: !998, expr: !DIExpression())
!998 = distinct !DIGlobalVariable(scope: null, file: !642, line: 71, type: !603, isLocal: true, isDefinition: true)
!999 = !DIGlobalVariableExpression(var: !1000, expr: !DIExpression())
!1000 = distinct !DIGlobalVariable(scope: null, file: !642, line: 334, type: !176, isLocal: true, isDefinition: true)
!1001 = !DIGlobalVariableExpression(var: !1002, expr: !DIExpression())
!1002 = distinct !DIGlobalVariable(scope: null, file: !642, line: 334, type: !218, isLocal: true, isDefinition: true)
!1003 = !DIGlobalVariableExpression(var: !1004, expr: !DIExpression())
!1004 = distinct !DIGlobalVariable(scope: null, file: !642, line: 345, type: !1005, isLocal: true, isDefinition: true)
!1005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 152, elements: !1006)
!1006 = !{!1007}
!1007 = !DISubrange(count: 19)
!1008 = !DIGlobalVariableExpression(var: !1009, expr: !DIExpression())
!1009 = distinct !DIGlobalVariable(scope: null, file: !642, line: 348, type: !110, isLocal: true, isDefinition: true)
!1010 = !DIGlobalVariableExpression(var: !1011, expr: !DIExpression())
!1011 = distinct !DIGlobalVariable(scope: null, file: !642, line: 351, type: !1012, isLocal: true, isDefinition: true)
!1012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 88, elements: !1013)
!1013 = !{!1014}
!1014 = !DISubrange(count: 11)
!1015 = !DIGlobalVariableExpression(var: !1016, expr: !DIExpression())
!1016 = distinct !DIGlobalVariable(scope: null, file: !642, line: 354, type: !651, isLocal: true, isDefinition: true)
!1017 = !DIGlobalVariableExpression(var: !1018, expr: !DIExpression())
!1018 = distinct !DIGlobalVariable(scope: null, file: !642, line: 357, type: !651, isLocal: true, isDefinition: true)
!1019 = !DIGlobalVariableExpression(var: !1020, expr: !DIExpression())
!1020 = distinct !DIGlobalVariable(scope: null, file: !642, line: 360, type: !430, isLocal: true, isDefinition: true)
!1021 = !DIGlobalVariableExpression(var: !1022, expr: !DIExpression())
!1022 = distinct !DIGlobalVariable(scope: null, file: !642, line: 364, type: !984, isLocal: true, isDefinition: true)
!1023 = !DIGlobalVariableExpression(var: !1024, expr: !DIExpression())
!1024 = distinct !DIGlobalVariable(scope: null, file: !642, line: 369, type: !559, isLocal: true, isDefinition: true)
!1025 = !DIGlobalVariableExpression(var: !1026, expr: !DIExpression())
!1026 = distinct !DIGlobalVariable(scope: null, file: !642, line: 372, type: !213, isLocal: true, isDefinition: true)
!1027 = !DIGlobalVariableExpression(var: !1028, expr: !DIExpression())
!1028 = distinct !DIGlobalVariable(scope: null, file: !642, line: 374, type: !1029, isLocal: true, isDefinition: true)
!1029 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 224, elements: !1030)
!1030 = !{!1031}
!1031 = !DISubrange(count: 28)
!1032 = !DIGlobalVariableExpression(var: !1033, expr: !DIExpression())
!1033 = distinct !DIGlobalVariable(scope: null, file: !642, line: 378, type: !984, isLocal: true, isDefinition: true)
!1034 = !DIGlobalVariableExpression(var: !1035, expr: !DIExpression())
!1035 = distinct !DIGlobalVariable(scope: null, file: !642, line: 383, type: !976, isLocal: true, isDefinition: true)
!1036 = !DIGlobalVariableExpression(var: !1037, expr: !DIExpression())
!1037 = distinct !DIGlobalVariable(scope: null, file: !642, line: 278, type: !213, isLocal: true, isDefinition: true)
!1038 = !DIGlobalVariableExpression(var: !1039, expr: !DIExpression())
!1039 = distinct !DIGlobalVariable(scope: null, file: !642, line: 281, type: !505, isLocal: true, isDefinition: true)
!1040 = !DIGlobalVariableExpression(var: !1041, expr: !DIExpression())
!1041 = distinct !DIGlobalVariable(scope: null, file: !642, line: 286, type: !1042, isLocal: true, isDefinition: true)
!1042 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 360, elements: !594)
!1043 = !DIGlobalVariableExpression(var: !1044, expr: !DIExpression())
!1044 = distinct !DIGlobalVariable(scope: null, file: !642, line: 298, type: !1042, isLocal: true, isDefinition: true)
!1045 = !DIGlobalVariableExpression(var: !1046, expr: !DIExpression())
!1046 = distinct !DIGlobalVariable(scope: null, file: !642, line: 178, type: !505, isLocal: true, isDefinition: true)
!1047 = !DIGlobalVariableExpression(var: !1048, expr: !DIExpression())
!1048 = distinct !DIGlobalVariable(scope: null, file: !642, line: 180, type: !213, isLocal: true, isDefinition: true)
!1049 = !DIGlobalVariableExpression(var: !1050, expr: !DIExpression())
!1050 = distinct !DIGlobalVariable(scope: null, file: !642, line: 185, type: !955, isLocal: true, isDefinition: true)
!1051 = !DIGlobalVariableExpression(var: !1052, expr: !DIExpression())
!1052 = distinct !DIGlobalVariable(scope: null, file: !642, line: 188, type: !651, isLocal: true, isDefinition: true)
!1053 = !DIGlobalVariableExpression(var: !1054, expr: !DIExpression())
!1054 = distinct !DIGlobalVariable(scope: null, file: !642, line: 191, type: !1029, isLocal: true, isDefinition: true)
!1055 = !DIGlobalVariableExpression(var: !1056, expr: !DIExpression())
!1056 = distinct !DIGlobalVariable(scope: null, file: !642, line: 200, type: !152, isLocal: true, isDefinition: true)
!1057 = !DIGlobalVariableExpression(var: !1058, expr: !DIExpression())
!1058 = distinct !DIGlobalVariable(scope: null, file: !642, line: 203, type: !955, isLocal: true, isDefinition: true)
!1059 = !DIGlobalVariableExpression(var: !1060, expr: !DIExpression())
!1060 = distinct !DIGlobalVariable(scope: null, file: !642, line: 213, type: !939, isLocal: true, isDefinition: true)
!1061 = !DIGlobalVariableExpression(var: !1062, expr: !DIExpression())
!1062 = distinct !DIGlobalVariable(scope: null, file: !642, line: 218, type: !208, isLocal: true, isDefinition: true)
!1063 = !DIGlobalVariableExpression(var: !1064, expr: !DIExpression())
!1064 = distinct !DIGlobalVariable(scope: null, file: !642, line: 222, type: !1065, isLocal: true, isDefinition: true)
!1065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 336, elements: !1066)
!1066 = !{!1067}
!1067 = !DISubrange(count: 42)
!1068 = !DIGlobalVariableExpression(var: !1069, expr: !DIExpression())
!1069 = distinct !DIGlobalVariable(scope: null, file: !642, line: 239, type: !88, isLocal: true, isDefinition: true)
!1070 = !DIGlobalVariableExpression(var: !1071, expr: !DIExpression())
!1071 = distinct !DIGlobalVariable(scope: null, file: !642, line: 125, type: !110, isLocal: true, isDefinition: true)
!1072 = !DIGlobalVariableExpression(var: !1073, expr: !DIExpression())
!1073 = distinct !DIGlobalVariable(scope: null, file: !642, line: 126, type: !93, isLocal: true, isDefinition: true)
!1074 = !DIGlobalVariableExpression(var: !1075, expr: !DIExpression())
!1075 = distinct !DIGlobalVariable(scope: null, file: !642, line: 135, type: !110, isLocal: true, isDefinition: true)
!1076 = !DIGlobalVariableExpression(var: !1077, expr: !DIExpression())
!1077 = distinct !DIGlobalVariable(scope: null, file: !642, line: 138, type: !152, isLocal: true, isDefinition: true)
!1078 = !DIGlobalVariableExpression(var: !1079, expr: !DIExpression())
!1079 = distinct !DIGlobalVariable(scope: null, file: !642, line: 145, type: !984, isLocal: true, isDefinition: true)
!1080 = !DIGlobalVariableExpression(var: !1081, expr: !DIExpression())
!1081 = distinct !DIGlobalVariable(scope: null, file: !642, line: 150, type: !166, isLocal: true, isDefinition: true)
!1082 = !DIGlobalVariableExpression(var: !1083, expr: !DIExpression())
!1083 = distinct !DIGlobalVariable(scope: null, file: !642, line: 152, type: !559, isLocal: true, isDefinition: true)
!1084 = !DIGlobalVariableExpression(var: !1085, expr: !DIExpression())
!1085 = distinct !DIGlobalVariable(scope: null, file: !642, line: 427, type: !1086, isLocal: true, isDefinition: true)
!1086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 152, elements: !1006)
!1087 = !DIGlobalVariableExpression(var: !1088, expr: !DIExpression())
!1088 = distinct !DIGlobalVariable(scope: null, file: !642, line: 427, type: !1089, isLocal: true, isDefinition: true)
!1089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 416, elements: !1090)
!1090 = !{!1091}
!1091 = !DISubrange(count: 52)
!1092 = !DIGlobalVariableExpression(var: !1093, expr: !DIExpression())
!1093 = distinct !DIGlobalVariable(scope: null, file: !642, line: 398, type: !1094, isLocal: true, isDefinition: true)
!1094 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 232, elements: !522)
!1095 = !DIGlobalVariableExpression(var: !1096, expr: !DIExpression())
!1096 = distinct !DIGlobalVariable(scope: null, file: !642, line: 398, type: !654, isLocal: true, isDefinition: true)
!1097 = !DIGlobalVariableExpression(var: !1098, expr: !DIExpression())
!1098 = distinct !DIGlobalVariable(scope: null, file: !642, line: 409, type: !654, isLocal: true, isDefinition: true)
!1099 = !DIGlobalVariableExpression(var: !1100, expr: !DIExpression())
!1100 = distinct !DIGlobalVariable(scope: null, file: !642, line: 419, type: !572, isLocal: true, isDefinition: true)
!1101 = !DIGlobalVariableExpression(var: !1102, expr: !DIExpression())
!1102 = distinct !DIGlobalVariable(scope: null, file: !642, line: 419, type: !505, isLocal: true, isDefinition: true)
!1103 = !DIGlobalVariableExpression(var: !1104, expr: !DIExpression())
!1104 = distinct !DIGlobalVariable(name: "main_socket", scope: !659, file: !642, line: 547, type: !1105, isLocal: true, isDefinition: true)
!1105 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1106)
!1106 = !DIDerivedType(tag: DW_TAG_typedef, name: "sig_atomic_t", file: !1107, line: 8, baseType: !1108)
!1107 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/sig_atomic_t.h", directory: "", checksumkind: CSK_MD5, checksum: "d9236f7e3e7f10f53aa9d4cd97f503cf")
!1108 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sig_atomic_t", file: !69, line: 215, baseType: !37)
!1109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1110)
!1110 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_config_t", file: !262, line: 111, baseType: !1111)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_config_t_", file: !262, line: 266, size: 192, elements: !1112)
!1112 = !{!1113, !1114, !1115, !1116, !1117, !1118}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !1111, file: !262, line: 267, baseType: !61, size: 64)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive_timeout", scope: !1111, file: !262, line: 268, baseType: !413, size: 16, offset: 64)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "quiet", scope: !1111, file: !262, line: 269, baseType: !341, size: 8, offset: 80)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "reuse_port", scope: !1111, file: !262, line: 270, baseType: !341, size: 8, offset: 88)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1111, file: !262, line: 271, baseType: !28, size: 32, offset: 96)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "n_threads", scope: !1111, file: !262, line: 272, baseType: !413, size: 16, offset: 128)
!1119 = !DIGlobalVariableExpression(var: !1120, expr: !DIExpression())
!1120 = distinct !DIGlobalVariable(name: "redirect_module", scope: !1121, file: !1122, line: 64, type: !1126, isLocal: true, isDefinition: true)
!1121 = distinct !DISubprogram(name: "lwan_module_redirect", scope: !1122, file: !1122, line: 62, type: !1123, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1284, retainedNodes: !74)
!1122 = !DIFile(filename: "common/lwan-redirect.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "1614b421dd87198cc4b34905c0f8dd7e")
!1123 = !DISubroutineType(types: !1124)
!1124 = !{!1125}
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64)
!1126 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1127)
!1127 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_module_t", file: !262, line: 104, baseType: !1128)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_module_t_", file: !262, line: 227, size: 384, elements: !1129)
!1129 = !{!1130, !1131, !1135, !1141, !1142, !1282}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1128, file: !262, line: 228, baseType: !480, size: 64)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1128, file: !262, line: 229, baseType: !1132, size: 64, offset: 64)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 64)
!1133 = !DISubroutineType(types: !1134)
!1134 = !{!5, !5}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "init_from_hash", scope: !1128, file: !262, line: 230, baseType: !1136, size: 64, offset: 128)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 64)
!1137 = !DISubroutineType(types: !1138)
!1138 = !{!5, !1139}
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 64)
!1140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !332)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !1128, file: !262, line: 231, baseType: !403, size: 64, offset: 192)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !1128, file: !262, line: 232, baseType: !1143, size: 64, offset: 256)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 64)
!1144 = !DISubroutineType(types: !1145)
!1145 = !{!497, !1146, !1281, !5}
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64)
!1147 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_request_t", file: !262, line: 106, baseType: !1148)
!1148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_request_t_", file: !262, line: 206, size: 1280, elements: !1149)
!1149 = !{!1150, !1151, !1152, !1158, !1159, !1228, !1239, !1240, !1249}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1148, file: !262, line: 207, baseType: !347, size: 32)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1148, file: !262, line: 208, baseType: !37, size: 32, offset: 32)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "url", scope: !1148, file: !262, line: 209, baseType: !1153, size: 128, offset: 64)
!1153 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_value_t", file: !262, line: 110, baseType: !1154)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_value_t_", file: !262, line: 191, size: 128, elements: !1155)
!1155 = !{!1156, !1157}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1154, file: !262, line: 192, baseType: !61, size: 64)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1154, file: !262, line: 193, baseType: !6, size: 64, offset: 64)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "original_url", scope: !1148, file: !262, line: 210, baseType: !1153, size: 128, offset: 192)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "conn", scope: !1148, file: !262, line: 211, baseType: !1160, size: 64, offset: 320)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 64)
!1161 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_connection_t", file: !262, line: 112, baseType: !1162)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_connection_t_", file: !262, line: 196, size: 256, elements: !1163)
!1163 = !{!1164, !1165, !1166, !1167, !1226, !1227}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1162, file: !262, line: 199, baseType: !362, size: 32)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "time_to_die", scope: !1162, file: !262, line: 200, baseType: !28, size: 32, offset: 32)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "coro", scope: !1162, file: !262, line: 201, baseType: !365, size: 64, offset: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1162, file: !262, line: 202, baseType: !1168, size: 64, offset: 128)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64)
!1169 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_thread_t", file: !262, line: 108, baseType: !1170)
!1170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_thread_t_", file: !262, line: 253, size: 832, elements: !1171)
!1171 = !{!1172, !1217, !1223, !1224, !1225}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "lwan", scope: !1170, file: !262, line: 254, baseType: !1173, size: 64)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 64)
!1174 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_t", file: !262, line: 103, baseType: !1175)
!1175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_t_", file: !262, line: 275, size: 640, elements: !1176)
!1176 = !{!1177, !1198, !1199, !1205, !1206, !1216}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "url_map_trie", scope: !1175, file: !262, line: 276, baseType: !1178, size: 128)
!1178 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_t", file: !381, line: 25, baseType: !1179)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_t_", file: !381, line: 41, size: 128, elements: !1180)
!1180 = !{!1181, !1197}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1179, file: !381, line: 42, baseType: !1182, size: 64)
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 64)
!1183 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_node_t", file: !381, line: 26, baseType: !1184)
!1184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_node_t_", file: !381, line: 29, size: 640, elements: !1185)
!1185 = !{!1186, !1188, !1196}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1184, file: !381, line: 30, baseType: !1187, size: 512)
!1187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1182, size: 512, elements: !391)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !1184, file: !381, line: 31, baseType: !1189, size: 64, offset: 512)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 64)
!1190 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_leaf_t", file: !381, line: 27, baseType: !1191)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_leaf_t_", file: !381, line: 35, size: 192, elements: !1192)
!1192 = !{!1193, !1194, !1195}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1191, file: !381, line: 36, baseType: !61, size: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1191, file: !381, line: 37, baseType: !5, size: 64, offset: 64)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1191, file: !381, line: 38, baseType: !1189, size: 64, offset: 128)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !1184, file: !381, line: 32, baseType: !37, size: 32, offset: 576)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !1179, file: !381, line: 43, baseType: !403, size: 64, offset: 64)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "conns", scope: !1175, file: !262, line: 277, baseType: !1160, size: 64, offset: 128)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1175, file: !262, line: 283, baseType: !1200, size: 128, offset: 192)
!1200 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1175, file: !262, line: 279, size: 128, elements: !1201)
!1201 = !{!1202, !1203, !1204}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1200, file: !262, line: 280, baseType: !1168, size: 64)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "max_fd", scope: !1200, file: !262, line: 281, baseType: !28, size: 32, offset: 64)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1200, file: !262, line: 282, baseType: !413, size: 16, offset: 96)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "module_registry", scope: !1175, file: !262, line: 285, baseType: !331, size: 64, offset: 320)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1175, file: !262, line: 286, baseType: !1207, size: 192, offset: 384)
!1207 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_config_t", file: !262, line: 111, baseType: !1208)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_config_t_", file: !262, line: 266, size: 192, elements: !1209)
!1209 = !{!1210, !1211, !1212, !1213, !1214, !1215}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !1208, file: !262, line: 267, baseType: !61, size: 64)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive_timeout", scope: !1208, file: !262, line: 268, baseType: !413, size: 16, offset: 64)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "quiet", scope: !1208, file: !262, line: 269, baseType: !341, size: 8, offset: 80)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "reuse_port", scope: !1208, file: !262, line: 270, baseType: !341, size: 8, offset: 88)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1208, file: !262, line: 271, baseType: !28, size: 32, offset: 96)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "n_threads", scope: !1208, file: !262, line: 272, baseType: !413, size: 16, offset: 128)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "main_socket", scope: !1175, file: !262, line: 287, baseType: !37, size: 32, offset: 576)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !1170, file: !262, line: 259, baseType: !1218, size: 576, offset: 64)
!1218 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1170, file: !262, line: 255, size: 576, elements: !1219)
!1219 = !{!1220, !1221, !1222}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !1218, file: !262, line: 256, baseType: !430, size: 240)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1218, file: !262, line: 257, baseType: !430, size: 240, offset: 240)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1218, file: !262, line: 258, baseType: !322, size: 64, offset: 512)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_fd", scope: !1170, file: !262, line: 261, baseType: !37, size: 32, offset: 640)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_fd", scope: !1170, file: !262, line: 262, baseType: !435, size: 64, offset: 672)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !1170, file: !262, line: 263, baseType: !437, size: 64, offset: 768)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1162, file: !262, line: 203, baseType: !37, size: 32, offset: 192)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1162, file: !262, line: 203, baseType: !37, size: 32, offset: 224)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "query_params", scope: !1148, file: !262, line: 216, baseType: !1229, size: 128, offset: 384)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1148, file: !262, line: 213, size: 128, elements: !1230)
!1230 = !{!1231, !1238}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1229, file: !262, line: 214, baseType: !1232, size: 64)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64)
!1233 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_key_value_t", file: !262, line: 105, baseType: !1234)
!1234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_key_value_t_", file: !262, line: 173, size: 128, elements: !1235)
!1235 = !{!1236, !1237}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1234, file: !262, line: 174, baseType: !61, size: 64)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1234, file: !262, line: 175, baseType: !61, size: 64, offset: 64)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1229, file: !262, line: 215, baseType: !6, size: 64, offset: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "post_data", scope: !1148, file: !262, line: 216, baseType: !1229, size: 128, offset: 512)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1148, file: !262, line: 223, baseType: !1241, size: 192, offset: 640)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1148, file: !262, line: 217, size: 192, elements: !1242)
!1242 = !{!1243, !1244}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "if_modified_since", scope: !1241, file: !262, line: 218, baseType: !322, size: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1241, file: !262, line: 222, baseType: !1245, size: 128, offset: 64)
!1245 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1241, file: !262, line: 219, size: 128, elements: !1246)
!1246 = !{!1247, !1248}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1245, file: !262, line: 220, baseType: !461, size: 64)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !1245, file: !262, line: 221, baseType: !461, size: 64, offset: 64)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !1148, file: !262, line: 224, baseType: !1250, size: 448, offset: 832)
!1250 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_response_t", file: !262, line: 107, baseType: !1251)
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_response_t_", file: !262, line: 178, size: 448, elements: !1252)
!1252 = !{!1253, !1269, !1270, !1271, !1272}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1251, file: !262, line: 179, baseType: !1254, size: 64)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 64)
!1255 = !DIDerivedType(tag: DW_TAG_typedef, name: "strbuf_t", file: !472, line: 25, baseType: !1256)
!1256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "strbuf_t_", file: !472, line: 27, size: 256, elements: !1257)
!1257 = !{!1258, !1263, !1268}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1256, file: !472, line: 31, baseType: !1259, size: 64)
!1259 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1256, file: !472, line: 28, size: 64, elements: !1260)
!1260 = !{!1261, !1262}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1259, file: !472, line: 29, baseType: !61, size: 64)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "static_buffer", scope: !1259, file: !472, line: 30, baseType: !480, size: 64)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1256, file: !472, line: 34, baseType: !1264, size: 128, offset: 64)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1256, file: !472, line: 32, size: 128, elements: !1265)
!1265 = !{!1266, !1267}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !1264, file: !472, line: 33, baseType: !6, size: 64)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1264, file: !472, line: 33, baseType: !6, size: 64, offset: 64)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1256, file: !472, line: 35, baseType: !28, size: 32, offset: 192)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !1251, file: !262, line: 180, baseType: !480, size: 64, offset: 64)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "content_length", scope: !1251, file: !262, line: 181, baseType: !6, size: 64, offset: 128)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "headers", scope: !1251, file: !262, line: 182, baseType: !1232, size: 64, offset: 192)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !1251, file: !262, line: 188, baseType: !1273, size: 192, offset: 256)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1251, file: !262, line: 184, size: 192, elements: !1274)
!1274 = !{!1275, !1279, !1280}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1273, file: !262, line: 185, baseType: !1276, size: 64)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 64)
!1277 = !DISubroutineType(types: !1278)
!1278 = !{!497, !1146, !5}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1273, file: !262, line: 186, baseType: !5, size: 64, offset: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !1273, file: !262, line: 187, baseType: !5, size: 64, offset: 128)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 64)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1128, file: !262, line: 233, baseType: !1283, size: 32, offset: 320)
!1283 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_handler_flags_t", file: !262, line: 143, baseType: !662)
!1284 = distinct !DICompileUnit(language: DW_LANG_C11, file: !1285, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1286, globals: !1287, splitDebugInlining: false, nameTableKind: None)
!1285 = !DIFile(filename: "/home/raj/lwan/common/lwan-redirect.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "1614b421dd87198cc4b34905c0f8dd7e")
!1286 = !{!282, !261, !274, !662}
!1287 = !{!1288, !1119, !1290, !1292}
!1288 = !DIGlobalVariableExpression(var: !1289, expr: !DIExpression())
!1289 = distinct !DIGlobalVariable(scope: null, file: !1122, line: 65, type: !559, isLocal: true, isDefinition: true)
!1290 = !DIGlobalVariableExpression(var: !1291, expr: !DIExpression())
!1291 = distinct !DIGlobalVariable(scope: null, file: !1122, line: 57, type: !193, isLocal: true, isDefinition: true)
!1292 = !DIGlobalVariableExpression(var: !1293, expr: !DIExpression())
!1293 = distinct !DIGlobalVariable(scope: null, file: !1122, line: 38, type: !559, isLocal: true, isDefinition: true)
!1294 = !DIGlobalVariableExpression(var: !1295, expr: !DIExpression())
!1295 = distinct !DIGlobalVariable(scope: null, file: !1296, line: 576, type: !166, isLocal: true, isDefinition: true)
!1296 = !DIFile(filename: "common/lwan-request.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "02ac00895b73c156aad4cf5abf728f5f")
!1297 = !DIGlobalVariableExpression(var: !1298, expr: !DIExpression())
!1298 = distinct !DIGlobalVariable(scope: null, file: !1296, line: 582, type: !137, isLocal: true, isDefinition: true)
!1299 = !DIGlobalVariableExpression(var: !1300, expr: !DIExpression())
!1300 = distinct !DIGlobalVariable(name: "sizes", scope: !1301, file: !1296, line: 91, type: !1573, isLocal: true, isDefinition: true)
!1301 = distinct !DISubprogram(name: "identify_http_method", scope: !1296, file: !1296, line: 88, type: !1302, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!1302 = !DISubroutineType(types: !1303)
!1303 = !{!61, !1304, !61}
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 64)
!1305 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_request_t", file: !262, line: 106, baseType: !1306)
!1306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_request_t_", file: !262, line: 206, size: 1280, elements: !1307)
!1307 = !{!1308, !1309, !1310, !1316, !1317, !1386, !1397, !1398, !1407}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1306, file: !262, line: 207, baseType: !347, size: 32)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1306, file: !262, line: 208, baseType: !37, size: 32, offset: 32)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "url", scope: !1306, file: !262, line: 209, baseType: !1311, size: 128, offset: 64)
!1311 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_value_t", file: !262, line: 110, baseType: !1312)
!1312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_value_t_", file: !262, line: 191, size: 128, elements: !1313)
!1313 = !{!1314, !1315}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1312, file: !262, line: 192, baseType: !61, size: 64)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1312, file: !262, line: 193, baseType: !6, size: 64, offset: 64)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "original_url", scope: !1306, file: !262, line: 210, baseType: !1311, size: 128, offset: 192)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "conn", scope: !1306, file: !262, line: 211, baseType: !1318, size: 64, offset: 320)
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1319, size: 64)
!1319 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_connection_t", file: !262, line: 112, baseType: !1320)
!1320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_connection_t_", file: !262, line: 196, size: 256, elements: !1321)
!1321 = !{!1322, !1323, !1324, !1325, !1384, !1385}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1320, file: !262, line: 199, baseType: !362, size: 32)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "time_to_die", scope: !1320, file: !262, line: 200, baseType: !28, size: 32, offset: 32)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "coro", scope: !1320, file: !262, line: 201, baseType: !365, size: 64, offset: 64)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1320, file: !262, line: 202, baseType: !1326, size: 64, offset: 128)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 64)
!1327 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_thread_t", file: !262, line: 108, baseType: !1328)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_thread_t_", file: !262, line: 253, size: 832, elements: !1329)
!1329 = !{!1330, !1375, !1381, !1382, !1383}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "lwan", scope: !1328, file: !262, line: 254, baseType: !1331, size: 64)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 64)
!1332 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_t", file: !262, line: 103, baseType: !1333)
!1333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_t_", file: !262, line: 275, size: 640, elements: !1334)
!1334 = !{!1335, !1356, !1357, !1363, !1364, !1374}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "url_map_trie", scope: !1333, file: !262, line: 276, baseType: !1336, size: 128)
!1336 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_t", file: !381, line: 25, baseType: !1337)
!1337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_t_", file: !381, line: 41, size: 128, elements: !1338)
!1338 = !{!1339, !1355}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1337, file: !381, line: 42, baseType: !1340, size: 64)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 64)
!1341 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_node_t", file: !381, line: 26, baseType: !1342)
!1342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_node_t_", file: !381, line: 29, size: 640, elements: !1343)
!1343 = !{!1344, !1346, !1354}
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1342, file: !381, line: 30, baseType: !1345, size: 512)
!1345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1340, size: 512, elements: !391)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !1342, file: !381, line: 31, baseType: !1347, size: 64, offset: 512)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 64)
!1348 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_leaf_t", file: !381, line: 27, baseType: !1349)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_leaf_t_", file: !381, line: 35, size: 192, elements: !1350)
!1350 = !{!1351, !1352, !1353}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1349, file: !381, line: 36, baseType: !61, size: 64)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1349, file: !381, line: 37, baseType: !5, size: 64, offset: 64)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1349, file: !381, line: 38, baseType: !1347, size: 64, offset: 128)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !1342, file: !381, line: 32, baseType: !37, size: 32, offset: 576)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !1337, file: !381, line: 43, baseType: !403, size: 64, offset: 64)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "conns", scope: !1333, file: !262, line: 277, baseType: !1318, size: 64, offset: 128)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1333, file: !262, line: 283, baseType: !1358, size: 128, offset: 192)
!1358 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1333, file: !262, line: 279, size: 128, elements: !1359)
!1359 = !{!1360, !1361, !1362}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1358, file: !262, line: 280, baseType: !1326, size: 64)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "max_fd", scope: !1358, file: !262, line: 281, baseType: !28, size: 32, offset: 64)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1358, file: !262, line: 282, baseType: !413, size: 16, offset: 96)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "module_registry", scope: !1333, file: !262, line: 285, baseType: !331, size: 64, offset: 320)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1333, file: !262, line: 286, baseType: !1365, size: 192, offset: 384)
!1365 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_config_t", file: !262, line: 111, baseType: !1366)
!1366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_config_t_", file: !262, line: 266, size: 192, elements: !1367)
!1367 = !{!1368, !1369, !1370, !1371, !1372, !1373}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !1366, file: !262, line: 267, baseType: !61, size: 64)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive_timeout", scope: !1366, file: !262, line: 268, baseType: !413, size: 16, offset: 64)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "quiet", scope: !1366, file: !262, line: 269, baseType: !341, size: 8, offset: 80)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "reuse_port", scope: !1366, file: !262, line: 270, baseType: !341, size: 8, offset: 88)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1366, file: !262, line: 271, baseType: !28, size: 32, offset: 96)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "n_threads", scope: !1366, file: !262, line: 272, baseType: !413, size: 16, offset: 128)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "main_socket", scope: !1333, file: !262, line: 287, baseType: !37, size: 32, offset: 576)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !1328, file: !262, line: 259, baseType: !1376, size: 576, offset: 64)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1328, file: !262, line: 255, size: 576, elements: !1377)
!1377 = !{!1378, !1379, !1380}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !1376, file: !262, line: 256, baseType: !430, size: 240)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1376, file: !262, line: 257, baseType: !430, size: 240, offset: 240)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1376, file: !262, line: 258, baseType: !322, size: 64, offset: 512)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_fd", scope: !1328, file: !262, line: 261, baseType: !37, size: 32, offset: 640)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_fd", scope: !1328, file: !262, line: 262, baseType: !435, size: 64, offset: 672)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !1328, file: !262, line: 263, baseType: !437, size: 64, offset: 768)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1320, file: !262, line: 203, baseType: !37, size: 32, offset: 192)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1320, file: !262, line: 203, baseType: !37, size: 32, offset: 224)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "query_params", scope: !1306, file: !262, line: 216, baseType: !1387, size: 128, offset: 384)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1306, file: !262, line: 213, size: 128, elements: !1388)
!1388 = !{!1389, !1396}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1387, file: !262, line: 214, baseType: !1390, size: 64)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 64)
!1391 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_key_value_t", file: !262, line: 105, baseType: !1392)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_key_value_t_", file: !262, line: 173, size: 128, elements: !1393)
!1393 = !{!1394, !1395}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1392, file: !262, line: 174, baseType: !61, size: 64)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1392, file: !262, line: 175, baseType: !61, size: 64, offset: 64)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1387, file: !262, line: 215, baseType: !6, size: 64, offset: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "post_data", scope: !1306, file: !262, line: 216, baseType: !1387, size: 128, offset: 512)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1306, file: !262, line: 223, baseType: !1399, size: 192, offset: 640)
!1399 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1306, file: !262, line: 217, size: 192, elements: !1400)
!1400 = !{!1401, !1402}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "if_modified_since", scope: !1399, file: !262, line: 218, baseType: !322, size: 64)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1399, file: !262, line: 222, baseType: !1403, size: 128, offset: 64)
!1403 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1399, file: !262, line: 219, size: 128, elements: !1404)
!1404 = !{!1405, !1406}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1403, file: !262, line: 220, baseType: !461, size: 64)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !1403, file: !262, line: 221, baseType: !461, size: 64, offset: 64)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !1306, file: !262, line: 224, baseType: !1408, size: 448, offset: 832)
!1408 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_response_t", file: !262, line: 107, baseType: !1409)
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_response_t_", file: !262, line: 178, size: 448, elements: !1410)
!1410 = !{!1411, !1427, !1428, !1429, !1430}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1409, file: !262, line: 179, baseType: !1412, size: 64)
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 64)
!1413 = !DIDerivedType(tag: DW_TAG_typedef, name: "strbuf_t", file: !472, line: 25, baseType: !1414)
!1414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "strbuf_t_", file: !472, line: 27, size: 256, elements: !1415)
!1415 = !{!1416, !1421, !1426}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1414, file: !472, line: 31, baseType: !1417, size: 64)
!1417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1414, file: !472, line: 28, size: 64, elements: !1418)
!1418 = !{!1419, !1420}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1417, file: !472, line: 29, baseType: !61, size: 64)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "static_buffer", scope: !1417, file: !472, line: 30, baseType: !480, size: 64)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1414, file: !472, line: 34, baseType: !1422, size: 128, offset: 64)
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1414, file: !472, line: 32, size: 128, elements: !1423)
!1423 = !{!1424, !1425}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !1422, file: !472, line: 33, baseType: !6, size: 64)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1422, file: !472, line: 33, baseType: !6, size: 64, offset: 64)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1414, file: !472, line: 35, baseType: !28, size: 32, offset: 192)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !1409, file: !262, line: 180, baseType: !480, size: 64, offset: 64)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "content_length", scope: !1409, file: !262, line: 181, baseType: !6, size: 64, offset: 128)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "headers", scope: !1409, file: !262, line: 182, baseType: !1390, size: 64, offset: 192)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !1409, file: !262, line: 188, baseType: !1431, size: 192, offset: 256)
!1431 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1409, file: !262, line: 184, size: 192, elements: !1432)
!1432 = !{!1433, !1437, !1438}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1431, file: !262, line: 185, baseType: !1434, size: 64)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64)
!1435 = !DISubroutineType(types: !1436)
!1436 = !{!497, !1304, !5}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1431, file: !262, line: 186, baseType: !5, size: 64, offset: 64)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !1431, file: !262, line: 187, baseType: !5, size: 64, offset: 128)
!1439 = distinct !DICompileUnit(language: DW_LANG_C11, file: !1440, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1441, retainedTypes: !1501, globals: !1548, splitDebugInlining: false, nameTableKind: None)
!1440 = !DIFile(filename: "/home/raj/lwan/common/lwan-request.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "02ac00895b73c156aad4cf5abf728f5f")
!1441 = !{!274, !261, !282, !662, !1442, !1448, !1453, !1461, !1492}
!1442 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1296, line: 34, baseType: !28, size: 32, elements: !1443)
!1443 = !{!1444, !1445, !1446, !1447}
!1444 = !DIEnumerator(name: "FINALIZER_DONE", value: 0)
!1445 = !DIEnumerator(name: "FINALIZER_TRY_AGAIN", value: 1)
!1446 = !DIEnumerator(name: "FINALIZER_YIELD_TRY_AGAIN", value: 2)
!1447 = !DIEnumerator(name: "FINALIZER_ERROR_TOO_LARGE", value: 3)
!1448 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !262, line: 167, baseType: !37, size: 32, elements: !1449)
!1449 = !{!1450, !1451, !1452}
!1450 = !DIEnumerator(name: "CONN_CORO_ABORT", value: -1)
!1451 = !DIEnumerator(name: "CONN_CORO_MAY_RESUME", value: 0)
!1452 = !DIEnumerator(name: "CONN_CORO_FINISHED", value: 1)
!1453 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !1454, file: !1296, line: 69, baseType: !28, size: 32, elements: !1457)
!1454 = distinct !DISubprogram(name: "get_http_method", scope: !1296, file: !1296, line: 66, type: !1455, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!1455 = !DISubroutineType(types: !1456)
!1456 = !{!347, !61}
!1457 = !{!1458, !1459, !1460}
!1458 = !DIEnumerator(name: "HTTP_STR_GET", value: 542393671)
!1459 = !DIEnumerator(name: "HTTP_STR_HEAD", value: 1145128264)
!1460 = !DIEnumerator(name: "HTTP_STR_POST", value: 1414745936)
!1461 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !1462, file: !1296, line: 303, baseType: !28, size: 32, elements: !1481)
!1462 = distinct !DISubprogram(name: "parse_headers", scope: !1296, file: !1296, line: 301, type: !1463, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!1463 = !DISubroutineType(types: !1464)
!1464 = !{!61, !1465, !61, !61}
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_parser_helper", file: !1296, line: 41, size: 1344, elements: !1467)
!1467 = !{!1468, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1466, file: !1296, line: 42, baseType: !1469, size: 64)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 64)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !1466, file: !1296, line: 43, baseType: !61, size: 64, offset: 64)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "accept_encoding", scope: !1466, file: !1296, line: 44, baseType: !1311, size: 128, offset: 128)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "if_modified_since", scope: !1466, file: !1296, line: 45, baseType: !1311, size: 128, offset: 256)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1466, file: !1296, line: 46, baseType: !1311, size: 128, offset: 384)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "query_string", scope: !1466, file: !1296, line: 48, baseType: !1311, size: 128, offset: 512)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "fragment", scope: !1466, file: !1296, line: 49, baseType: !1311, size: 128, offset: 640)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "content_length", scope: !1466, file: !1296, line: 50, baseType: !1311, size: 128, offset: 768)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "post_data", scope: !1466, file: !1296, line: 51, baseType: !1311, size: 128, offset: 896)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "content_type", scope: !1466, file: !1296, line: 53, baseType: !1311, size: 128, offset: 1024)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "authorization", scope: !1466, file: !1296, line: 54, baseType: !1311, size: 128, offset: 1152)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "connection", scope: !1466, file: !1296, line: 55, baseType: !47, size: 8, offset: 1280)
!1481 = !{!1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491}
!1482 = !DIEnumerator(name: "HTTP_HDR_REQUEST_END", value: 2573)
!1483 = !DIEnumerator(name: "HTTP_HDR_ENCODING", value: 1668179245)
!1484 = !DIEnumerator(name: "HTTP_HDR_LENGTH", value: 1852140589)
!1485 = !DIEnumerator(name: "HTTP_HDR_TYPE", value: 1887007789)
!1486 = !DIEnumerator(name: "HTTP_HDR_ACCEPT", value: 1701012321)
!1487 = !DIEnumerator(name: "HTTP_HDR_AUTHORIZATION", value: 1752462689)
!1488 = !DIEnumerator(name: "HTTP_HDR_CONNECTION", value: 1852731235)
!1489 = !DIEnumerator(name: "HTTP_HDR_CONTENT", value: 1953394531)
!1490 = !DIEnumerator(name: "HTTP_HDR_IF_MODIFIED_SINCE", value: 1831691881)
!1491 = !DIEnumerator(name: "HTTP_HDR_RANGE", value: 1735287154)
!1492 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !1493, file: !1296, line: 430, baseType: !28, size: 32, elements: !1496)
!1493 = distinct !DISubprogram(name: "parse_accept_encoding", scope: !1296, file: !1296, line: 425, type: !1494, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!1494 = !DISubroutineType(types: !1495)
!1495 = !{null, !1304, !1465}
!1496 = !{!1497, !1498, !1499, !1500}
!1497 = !DIEnumerator(name: "ENCODING_DEFL1", value: 1818649956)
!1498 = !DIEnumerator(name: "ENCODING_DEFL2", value: 1717920800)
!1499 = !DIEnumerator(name: "ENCODING_GZIP1", value: 1885960807)
!1500 = !DIEnumerator(name: "ENCODING_GZIP2", value: 1769629472)
!1501 = !{!37, !1502, !1503, !1511, !1527, !6, !8, !47, !1390}
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !7, line: 35, baseType: !40)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 64)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !1505, line: 180, size: 128, elements: !1506)
!1505 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket.h", directory: "", checksumkind: CSK_MD5, checksum: "e3826be048699664d9ef7b080f62f2e0")
!1506 = !{!1507, !1510}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !1504, file: !1505, line: 182, baseType: !1508, size: 16)
!1508 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !1509, line: 28, baseType: !413)
!1509 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sockaddr.h", directory: "", checksumkind: CSK_MD5, checksum: "dd7f1d9dd6e26f88d1726905ed5d9ff5")
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !1504, file: !1505, line: 183, baseType: !152, size: 112, offset: 16)
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 64)
!1512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in", file: !1513, line: 245, size: 128, elements: !1514)
!1513 = !DIFile(filename: "/usr/include/netinet/in.h", directory: "", checksumkind: CSK_MD5, checksum: "eb6560f10d4cfe9f30fea2c92b9da0fd")
!1514 = !{!1515, !1516, !1520, !1525}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "sin_family", scope: !1512, file: !1513, line: 247, baseType: !1508, size: 16)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "sin_port", scope: !1512, file: !1513, line: 248, baseType: !1517, size: 16, offset: 16)
!1517 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_port_t", file: !1513, line: 123, baseType: !1518)
!1518 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !67, line: 25, baseType: !1519)
!1519 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !69, line: 40, baseType: !413)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !1512, file: !1513, line: 249, baseType: !1521, size: 32, offset: 32)
!1521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !1513, line: 31, size: 32, elements: !1522)
!1522 = !{!1523}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !1521, file: !1513, line: 33, baseType: !1524, size: 32)
!1524 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_addr_t", file: !1513, line: 30, baseType: !66)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "sin_zero", scope: !1512, file: !1513, line: 252, baseType: !1526, size: 64, offset: 64)
!1526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 64, elements: !391)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 64)
!1528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in6", file: !1513, line: 260, size: 224, elements: !1529)
!1529 = !{!1530, !1531, !1532, !1533, !1547}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_family", scope: !1528, file: !1513, line: 262, baseType: !1508, size: 16)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_port", scope: !1528, file: !1513, line: 263, baseType: !1517, size: 16, offset: 16)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_flowinfo", scope: !1528, file: !1513, line: 264, baseType: !66, size: 32, offset: 32)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_addr", scope: !1528, file: !1513, line: 265, baseType: !1534, size: 128, offset: 64)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !1513, line: 219, size: 128, elements: !1535)
!1535 = !{!1536}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "__in6_u", scope: !1534, file: !1513, line: 226, baseType: !1537, size: 128)
!1537 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1534, file: !1513, line: 221, size: 128, elements: !1538)
!1538 = !{!1539, !1543, !1545}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr8", scope: !1537, file: !1513, line: 223, baseType: !1540, size: 128)
!1540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1541, size: 128, elements: !89)
!1541 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !67, line: 24, baseType: !1542)
!1542 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !69, line: 38, baseType: !9)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr16", scope: !1537, file: !1513, line: 224, baseType: !1544, size: 128)
!1544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1518, size: 128, elements: !391)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr32", scope: !1537, file: !1513, line: 225, baseType: !1546, size: 128)
!1546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !66, size: 128, elements: !138)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_scope_id", scope: !1528, file: !1513, line: 266, baseType: !66, size: 32, offset: 192)
!1548 = !{!1294, !1297, !1299, !1549, !1554, !1559, !1561, !1563, !1565, !1567, !1569}
!1549 = !DIGlobalVariableExpression(var: !1550, expr: !DIExpression())
!1550 = distinct !DIGlobalVariable(name: "minimal_request_line_len", scope: !1551, file: !1296, line: 225, type: !73, isLocal: true, isDefinition: true)
!1551 = distinct !DISubprogram(name: "identify_http_path", scope: !1296, file: !1296, line: 222, type: !1552, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{!61, !1304, !61, !1465}
!1554 = !DIGlobalVariableExpression(var: !1555, expr: !DIExpression())
!1555 = distinct !DIGlobalVariable(scope: null, file: !1296, line: 179, type: !1556, isLocal: true, isDefinition: true)
!1556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 8, elements: !1557)
!1557 = !{!1558}
!1558 = !DISubrange(count: 1)
!1559 = !DIGlobalVariableExpression(var: !1560, expr: !DIExpression())
!1560 = distinct !DIGlobalVariable(scope: null, file: !1296, line: 386, type: !208, isLocal: true, isDefinition: true)
!1561 = !DIGlobalVariableExpression(var: !1562, expr: !DIExpression())
!1562 = distinct !DIGlobalVariable(scope: null, file: !1296, line: 403, type: !505, isLocal: true, isDefinition: true)
!1563 = !DIGlobalVariableExpression(var: !1564, expr: !DIExpression())
!1564 = distinct !DIGlobalVariable(scope: null, file: !1296, line: 409, type: !651, isLocal: true, isDefinition: true)
!1565 = !DIGlobalVariableExpression(var: !1566, expr: !DIExpression())
!1566 = distinct !DIGlobalVariable(scope: null, file: !1296, line: 412, type: !166, isLocal: true, isDefinition: true)
!1567 = !DIGlobalVariableExpression(var: !1568, expr: !DIExpression())
!1568 = distinct !DIGlobalVariable(scope: null, file: !1296, line: 415, type: !166, isLocal: true, isDefinition: true)
!1569 = !DIGlobalVariableExpression(var: !1570, expr: !DIExpression())
!1570 = distinct !DIGlobalVariable(name: "content_type", scope: !1571, file: !1296, line: 210, type: !1572, isLocal: true, isDefinition: true)
!1571 = distinct !DISubprogram(name: "parse_post_data", scope: !1296, file: !1296, line: 208, type: !1494, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!1572 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 272, elements: !229)
!1573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 40, elements: !167)
!1574 = !DIGlobalVariableExpression(var: !1575, expr: !DIExpression())
!1575 = distinct !DIGlobalVariable(name: "error_descriptor", scope: !1576, file: !1577, line: 67, type: !1856, isLocal: true, isDefinition: true)
!1576 = distinct !DISubprogram(name: "lwan_response_init", scope: !1577, file: !1577, line: 65, type: !1578, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1580, retainedNodes: !74)
!1577 = !DIFile(filename: "common/lwan-response.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "01cc1c0717cf554caf1186c7b49ddf10")
!1578 = !DISubroutineType(types: !1579)
!1579 = !{null}
!1580 = distinct !DICompileUnit(language: DW_LANG_C11, file: !1581, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1582, retainedTypes: !1607, globals: !1623, splitDebugInlining: false, nameTableKind: None)
!1581 = !DIFile(filename: "/home/raj/lwan/common/lwan-response.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "01cc1c0717cf554caf1186c7b49ddf10")
!1582 = !{!261, !274, !282, !1448, !1583}
!1583 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1505, line: 202, baseType: !28, size: 32, elements: !1584)
!1584 = !{!1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606}
!1585 = !DIEnumerator(name: "MSG_OOB", value: 1)
!1586 = !DIEnumerator(name: "MSG_PEEK", value: 2)
!1587 = !DIEnumerator(name: "MSG_DONTROUTE", value: 4)
!1588 = !DIEnumerator(name: "MSG_TRYHARD", value: 4)
!1589 = !DIEnumerator(name: "MSG_CTRUNC", value: 8)
!1590 = !DIEnumerator(name: "MSG_PROXY", value: 16)
!1591 = !DIEnumerator(name: "MSG_TRUNC", value: 32)
!1592 = !DIEnumerator(name: "MSG_DONTWAIT", value: 64)
!1593 = !DIEnumerator(name: "MSG_EOR", value: 128)
!1594 = !DIEnumerator(name: "MSG_WAITALL", value: 256)
!1595 = !DIEnumerator(name: "MSG_FIN", value: 512)
!1596 = !DIEnumerator(name: "MSG_SYN", value: 1024)
!1597 = !DIEnumerator(name: "MSG_CONFIRM", value: 2048)
!1598 = !DIEnumerator(name: "MSG_RST", value: 4096)
!1599 = !DIEnumerator(name: "MSG_ERRQUEUE", value: 8192)
!1600 = !DIEnumerator(name: "MSG_NOSIGNAL", value: 16384)
!1601 = !DIEnumerator(name: "MSG_MORE", value: 32768)
!1602 = !DIEnumerator(name: "MSG_WAITFORONE", value: 65536)
!1603 = !DIEnumerator(name: "MSG_BATCH", value: 262144)
!1604 = !DIEnumerator(name: "MSG_ZEROCOPY", value: 67108864)
!1605 = !DIEnumerator(name: "MSG_FASTOPEN", value: 536870912)
!1606 = !DIEnumerator(name: "MSG_CMSG_CLOEXEC", value: 1073741824)
!1607 = !{!1608, !6, !61}
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 64)
!1609 = !DIDerivedType(tag: DW_TAG_typedef, name: "strbuf_t", file: !472, line: 25, baseType: !1610)
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "strbuf_t_", file: !472, line: 27, size: 256, elements: !1611)
!1611 = !{!1612, !1617, !1622}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1610, file: !472, line: 31, baseType: !1613, size: 64)
!1613 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1610, file: !472, line: 28, size: 64, elements: !1614)
!1614 = !{!1615, !1616}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1613, file: !472, line: 29, baseType: !61, size: 64)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "static_buffer", scope: !1613, file: !472, line: 30, baseType: !480, size: 64)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1610, file: !472, line: 34, baseType: !1618, size: 128, offset: 64)
!1618 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1610, file: !472, line: 32, size: 128, elements: !1619)
!1619 = !{!1620, !1621}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !1618, file: !472, line: 33, baseType: !6, size: 64)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1618, file: !472, line: 33, baseType: !6, size: 64, offset: 64)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1610, file: !472, line: 35, baseType: !28, size: 32, offset: 192)
!1623 = !{!1624, !1626, !1574, !1628, !1630, !1635, !1637, !1639, !1641, !1643, !1646, !1648, !1650, !1652, !1654, !1656, !1658, !1660, !1662, !1664, !1666, !1668, !1670, !1673, !1675, !1677, !1679, !1681, !1683, !1685, !1687, !1689, !1815, !1817, !1819, !1821, !1823, !1825, !1827, !1833, !1838, !1840, !1842, !1844, !1846, !1848, !1850, !1852, !1854}
!1624 = !DIGlobalVariableExpression(var: !1625, expr: !DIExpression())
!1625 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 68, type: !152, isLocal: true, isDefinition: true)
!1626 = !DIGlobalVariableExpression(var: !1627, expr: !DIExpression())
!1627 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 69, type: !46, isLocal: true, isDefinition: true)
!1628 = !DIGlobalVariableExpression(var: !1629, expr: !DIExpression())
!1629 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 73, type: !88, isLocal: true, isDefinition: true)
!1630 = !DIGlobalVariableExpression(var: !1631, expr: !DIExpression())
!1631 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 73, type: !1632, isLocal: true, isDefinition: true)
!1632 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 304, elements: !1633)
!1633 = !{!1634}
!1634 = !DISubrange(count: 38)
!1635 = !DIGlobalVariableExpression(var: !1636, expr: !DIExpression())
!1636 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 73, type: !243, isLocal: true, isDefinition: true)
!1637 = !DIGlobalVariableExpression(var: !1638, expr: !DIExpression())
!1638 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 75, type: !1086, isLocal: true, isDefinition: true)
!1639 = !DIGlobalVariableExpression(var: !1640, expr: !DIExpression())
!1640 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 75, type: !430, isLocal: true, isDefinition: true)
!1641 = !DIGlobalVariableExpression(var: !1642, expr: !DIExpression())
!1642 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 79, type: !603, isLocal: true, isDefinition: true)
!1643 = !DIGlobalVariableExpression(var: !1644, expr: !DIExpression())
!1644 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 85, type: !1645, isLocal: true, isDefinition: true)
!1645 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 184, elements: !985)
!1646 = !DIGlobalVariableExpression(var: !1647, expr: !DIExpression())
!1647 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 85, type: !984, isLocal: true, isDefinition: true)
!1648 = !DIGlobalVariableExpression(var: !1649, expr: !DIExpression())
!1649 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 86, type: !578, isLocal: true, isDefinition: true)
!1650 = !DIGlobalVariableExpression(var: !1651, expr: !DIExpression())
!1651 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 86, type: !1572, isLocal: true, isDefinition: true)
!1652 = !DIGlobalVariableExpression(var: !1653, expr: !DIExpression())
!1653 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 136, type: !120, isLocal: true, isDefinition: true)
!1654 = !DIGlobalVariableExpression(var: !1655, expr: !DIExpression())
!1655 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 136, type: !171, isLocal: true, isDefinition: true)
!1656 = !DIGlobalVariableExpression(var: !1657, expr: !DIExpression())
!1657 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 184, type: !654, isLocal: true, isDefinition: true)
!1658 = !DIGlobalVariableExpression(var: !1659, expr: !DIExpression())
!1659 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 242, type: !654, isLocal: true, isDefinition: true)
!1660 = !DIGlobalVariableExpression(var: !1661, expr: !DIExpression())
!1661 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 244, type: !654, isLocal: true, isDefinition: true)
!1662 = !DIGlobalVariableExpression(var: !1663, expr: !DIExpression())
!1663 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 248, type: !521, isLocal: true, isDefinition: true)
!1664 = !DIGlobalVariableExpression(var: !1665, expr: !DIExpression())
!1665 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 252, type: !1005, isLocal: true, isDefinition: true)
!1666 = !DIGlobalVariableExpression(var: !1667, expr: !DIExpression())
!1667 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 259, type: !103, isLocal: true, isDefinition: true)
!1668 = !DIGlobalVariableExpression(var: !1669, expr: !DIExpression())
!1669 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 263, type: !213, isLocal: true, isDefinition: true)
!1670 = !DIGlobalVariableExpression(var: !1671, expr: !DIExpression())
!1671 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 265, type: !1672, isLocal: true, isDefinition: true)
!1672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 160, elements: !541)
!1673 = !DIGlobalVariableExpression(var: !1674, expr: !DIExpression())
!1674 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 271, type: !505, isLocal: true, isDefinition: true)
!1675 = !DIGlobalVariableExpression(var: !1676, expr: !DIExpression())
!1676 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 273, type: !166, isLocal: true, isDefinition: true)
!1677 = !DIGlobalVariableExpression(var: !1678, expr: !DIExpression())
!1678 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 275, type: !651, isLocal: true, isDefinition: true)
!1679 = !DIGlobalVariableExpression(var: !1680, expr: !DIExpression())
!1680 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 290, type: !103, isLocal: true, isDefinition: true)
!1681 = !DIGlobalVariableExpression(var: !1682, expr: !DIExpression())
!1682 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 291, type: !236, isLocal: true, isDefinition: true)
!1683 = !DIGlobalVariableExpression(var: !1684, expr: !DIExpression())
!1684 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 299, type: !559, isLocal: true, isDefinition: true)
!1685 = !DIGlobalVariableExpression(var: !1686, expr: !DIExpression())
!1686 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 304, type: !52, isLocal: true, isDefinition: true)
!1687 = !DIGlobalVariableExpression(var: !1688, expr: !DIExpression())
!1688 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 308, type: !1672, isLocal: true, isDefinition: true)
!1689 = !DIGlobalVariableExpression(var: !1690, expr: !DIExpression())
!1690 = distinct !DIGlobalVariable(name: "last_chunk", scope: !1691, file: !1577, line: 352, type: !1814, isLocal: true, isDefinition: true)
!1691 = distinct !DISubprogram(name: "lwan_response_send_chunk", scope: !1577, file: !1577, line: 343, type: !1692, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1580, retainedNodes: !74)
!1692 = !DISubroutineType(types: !1693)
!1693 = !{null, !1694}
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 64)
!1695 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_request_t", file: !262, line: 106, baseType: !1696)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_request_t_", file: !262, line: 206, size: 1280, elements: !1697)
!1697 = !{!1698, !1699, !1700, !1706, !1707, !1776, !1787, !1788, !1797}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1696, file: !262, line: 207, baseType: !347, size: 32)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1696, file: !262, line: 208, baseType: !37, size: 32, offset: 32)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "url", scope: !1696, file: !262, line: 209, baseType: !1701, size: 128, offset: 64)
!1701 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_value_t", file: !262, line: 110, baseType: !1702)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_value_t_", file: !262, line: 191, size: 128, elements: !1703)
!1703 = !{!1704, !1705}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1702, file: !262, line: 192, baseType: !61, size: 64)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1702, file: !262, line: 193, baseType: !6, size: 64, offset: 64)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "original_url", scope: !1696, file: !262, line: 210, baseType: !1701, size: 128, offset: 192)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "conn", scope: !1696, file: !262, line: 211, baseType: !1708, size: 64, offset: 320)
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 64)
!1709 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_connection_t", file: !262, line: 112, baseType: !1710)
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_connection_t_", file: !262, line: 196, size: 256, elements: !1711)
!1711 = !{!1712, !1713, !1714, !1715, !1774, !1775}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1710, file: !262, line: 199, baseType: !362, size: 32)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "time_to_die", scope: !1710, file: !262, line: 200, baseType: !28, size: 32, offset: 32)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "coro", scope: !1710, file: !262, line: 201, baseType: !365, size: 64, offset: 64)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1710, file: !262, line: 202, baseType: !1716, size: 64, offset: 128)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64)
!1717 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_thread_t", file: !262, line: 108, baseType: !1718)
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_thread_t_", file: !262, line: 253, size: 832, elements: !1719)
!1719 = !{!1720, !1765, !1771, !1772, !1773}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "lwan", scope: !1718, file: !262, line: 254, baseType: !1721, size: 64)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 64)
!1722 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_t", file: !262, line: 103, baseType: !1723)
!1723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_t_", file: !262, line: 275, size: 640, elements: !1724)
!1724 = !{!1725, !1746, !1747, !1753, !1754, !1764}
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "url_map_trie", scope: !1723, file: !262, line: 276, baseType: !1726, size: 128)
!1726 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_t", file: !381, line: 25, baseType: !1727)
!1727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_t_", file: !381, line: 41, size: 128, elements: !1728)
!1728 = !{!1729, !1745}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1727, file: !381, line: 42, baseType: !1730, size: 64)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 64)
!1731 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_node_t", file: !381, line: 26, baseType: !1732)
!1732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_node_t_", file: !381, line: 29, size: 640, elements: !1733)
!1733 = !{!1734, !1736, !1744}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1732, file: !381, line: 30, baseType: !1735, size: 512)
!1735 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1730, size: 512, elements: !391)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !1732, file: !381, line: 31, baseType: !1737, size: 64, offset: 512)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 64)
!1738 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_leaf_t", file: !381, line: 27, baseType: !1739)
!1739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_leaf_t_", file: !381, line: 35, size: 192, elements: !1740)
!1740 = !{!1741, !1742, !1743}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1739, file: !381, line: 36, baseType: !61, size: 64)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1739, file: !381, line: 37, baseType: !5, size: 64, offset: 64)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1739, file: !381, line: 38, baseType: !1737, size: 64, offset: 128)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !1732, file: !381, line: 32, baseType: !37, size: 32, offset: 576)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !1727, file: !381, line: 43, baseType: !403, size: 64, offset: 64)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "conns", scope: !1723, file: !262, line: 277, baseType: !1708, size: 64, offset: 128)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1723, file: !262, line: 283, baseType: !1748, size: 128, offset: 192)
!1748 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1723, file: !262, line: 279, size: 128, elements: !1749)
!1749 = !{!1750, !1751, !1752}
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1748, file: !262, line: 280, baseType: !1716, size: 64)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "max_fd", scope: !1748, file: !262, line: 281, baseType: !28, size: 32, offset: 64)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1748, file: !262, line: 282, baseType: !413, size: 16, offset: 96)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "module_registry", scope: !1723, file: !262, line: 285, baseType: !331, size: 64, offset: 320)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1723, file: !262, line: 286, baseType: !1755, size: 192, offset: 384)
!1755 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_config_t", file: !262, line: 111, baseType: !1756)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_config_t_", file: !262, line: 266, size: 192, elements: !1757)
!1757 = !{!1758, !1759, !1760, !1761, !1762, !1763}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !1756, file: !262, line: 267, baseType: !61, size: 64)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive_timeout", scope: !1756, file: !262, line: 268, baseType: !413, size: 16, offset: 64)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "quiet", scope: !1756, file: !262, line: 269, baseType: !341, size: 8, offset: 80)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "reuse_port", scope: !1756, file: !262, line: 270, baseType: !341, size: 8, offset: 88)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1756, file: !262, line: 271, baseType: !28, size: 32, offset: 96)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "n_threads", scope: !1756, file: !262, line: 272, baseType: !413, size: 16, offset: 128)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "main_socket", scope: !1723, file: !262, line: 287, baseType: !37, size: 32, offset: 576)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !1718, file: !262, line: 259, baseType: !1766, size: 576, offset: 64)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1718, file: !262, line: 255, size: 576, elements: !1767)
!1767 = !{!1768, !1769, !1770}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !1766, file: !262, line: 256, baseType: !430, size: 240)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1766, file: !262, line: 257, baseType: !430, size: 240, offset: 240)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1766, file: !262, line: 258, baseType: !322, size: 64, offset: 512)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_fd", scope: !1718, file: !262, line: 261, baseType: !37, size: 32, offset: 640)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_fd", scope: !1718, file: !262, line: 262, baseType: !435, size: 64, offset: 672)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !1718, file: !262, line: 263, baseType: !437, size: 64, offset: 768)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1710, file: !262, line: 203, baseType: !37, size: 32, offset: 192)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1710, file: !262, line: 203, baseType: !37, size: 32, offset: 224)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "query_params", scope: !1696, file: !262, line: 216, baseType: !1777, size: 128, offset: 384)
!1777 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1696, file: !262, line: 213, size: 128, elements: !1778)
!1778 = !{!1779, !1786}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1777, file: !262, line: 214, baseType: !1780, size: 64)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 64)
!1781 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_key_value_t", file: !262, line: 105, baseType: !1782)
!1782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_key_value_t_", file: !262, line: 173, size: 128, elements: !1783)
!1783 = !{!1784, !1785}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1782, file: !262, line: 174, baseType: !61, size: 64)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1782, file: !262, line: 175, baseType: !61, size: 64, offset: 64)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1777, file: !262, line: 215, baseType: !6, size: 64, offset: 64)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "post_data", scope: !1696, file: !262, line: 216, baseType: !1777, size: 128, offset: 512)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1696, file: !262, line: 223, baseType: !1789, size: 192, offset: 640)
!1789 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1696, file: !262, line: 217, size: 192, elements: !1790)
!1790 = !{!1791, !1792}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "if_modified_since", scope: !1789, file: !262, line: 218, baseType: !322, size: 64)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1789, file: !262, line: 222, baseType: !1793, size: 128, offset: 64)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1789, file: !262, line: 219, size: 128, elements: !1794)
!1794 = !{!1795, !1796}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1793, file: !262, line: 220, baseType: !461, size: 64)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !1793, file: !262, line: 221, baseType: !461, size: 64, offset: 64)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !1696, file: !262, line: 224, baseType: !1798, size: 448, offset: 832)
!1798 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_response_t", file: !262, line: 107, baseType: !1799)
!1799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_response_t_", file: !262, line: 178, size: 448, elements: !1800)
!1800 = !{!1801, !1802, !1803, !1804, !1805}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1799, file: !262, line: 179, baseType: !1608, size: 64)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !1799, file: !262, line: 180, baseType: !480, size: 64, offset: 64)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "content_length", scope: !1799, file: !262, line: 181, baseType: !6, size: 64, offset: 128)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "headers", scope: !1799, file: !262, line: 182, baseType: !1780, size: 64, offset: 192)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !1799, file: !262, line: 188, baseType: !1806, size: 192, offset: 256)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1799, file: !262, line: 184, size: 192, elements: !1807)
!1807 = !{!1808, !1812, !1813}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1806, file: !262, line: 185, baseType: !1809, size: 64)
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 64)
!1810 = !DISubroutineType(types: !1811)
!1811 = !{!497, !1694, !5}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1806, file: !262, line: 186, baseType: !5, size: 64, offset: 64)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !1806, file: !262, line: 187, baseType: !5, size: 64, offset: 128)
!1814 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 48, elements: !111)
!1815 = !DIGlobalVariableExpression(var: !1816, expr: !DIExpression())
!1816 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 358, type: !110, isLocal: true, isDefinition: true)
!1817 = !DIGlobalVariableExpression(var: !1818, expr: !DIExpression())
!1818 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 366, type: !193, isLocal: true, isDefinition: true)
!1819 = !DIGlobalVariableExpression(var: !1820, expr: !DIExpression())
!1820 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 391, type: !960, isLocal: true, isDefinition: true)
!1821 = !DIGlobalVariableExpression(var: !1822, expr: !DIExpression())
!1822 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 416, type: !651, isLocal: true, isDefinition: true)
!1823 = !DIGlobalVariableExpression(var: !1824, expr: !DIExpression())
!1824 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 431, type: !505, isLocal: true, isDefinition: true)
!1825 = !DIGlobalVariableExpression(var: !1826, expr: !DIExpression())
!1826 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 441, type: !166, isLocal: true, isDefinition: true)
!1827 = !DIGlobalVariableExpression(var: !1828, expr: !DIExpression())
!1828 = distinct !DIGlobalVariable(name: "error_template", scope: !1580, file: !1577, line: 32, type: !1829, isLocal: true, isDefinition: true)
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 64)
!1830 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_tpl_t", file: !1831, line: 25, baseType: !1832)
!1831 = !DIFile(filename: "common/lwan-template.h", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "1f1d0e1deded933cc0657e991f0859fe")
!1832 = !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_tpl_t_", file: !1831, line: 25, flags: DIFlagFwdDecl)
!1833 = !DIGlobalVariableExpression(var: !1834, expr: !DIExpression())
!1834 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 34, type: !1835, isLocal: true, isDefinition: true)
!1835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 8888, elements: !1836)
!1836 = !{!1837}
!1837 = !DISubrange(count: 1111)
!1838 = !DIGlobalVariableExpression(var: !1839, expr: !DIExpression())
!1839 = distinct !DIGlobalVariable(name: "error_template_str", scope: !1580, file: !1577, line: 34, type: !480, isLocal: true, isDefinition: true)
!1840 = !DIGlobalVariableExpression(var: !1841, expr: !DIExpression())
!1841 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 108, type: !981, isLocal: true, isDefinition: true)
!1842 = !DIGlobalVariableExpression(var: !1843, expr: !DIExpression())
!1843 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 108, type: !430, isLocal: true, isDefinition: true)
!1844 = !DIGlobalVariableExpression(var: !1845, expr: !DIExpression())
!1845 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 108, type: !137, isLocal: true, isDefinition: true)
!1846 = !DIGlobalVariableExpression(var: !1847, expr: !DIExpression())
!1847 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 108, type: !137, isLocal: true, isDefinition: true)
!1848 = !DIGlobalVariableExpression(var: !1849, expr: !DIExpression())
!1849 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 95, type: !137, isLocal: true, isDefinition: true)
!1850 = !DIGlobalVariableExpression(var: !1851, expr: !DIExpression())
!1851 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 97, type: !166, isLocal: true, isDefinition: true)
!1852 = !DIGlobalVariableExpression(var: !1853, expr: !DIExpression())
!1853 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 99, type: !166, isLocal: true, isDefinition: true)
!1854 = !DIGlobalVariableExpression(var: !1855, expr: !DIExpression())
!1855 = distinct !DIGlobalVariable(scope: null, file: !1577, line: 100, type: !651, isLocal: true, isDefinition: true)
!1856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1857, size: 1152, elements: !194)
!1857 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_var_descriptor_t", file: !1831, line: 26, baseType: !1858)
!1858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_var_descriptor_t_", file: !1831, line: 30, size: 384, elements: !1859)
!1859 = !{!1860, !1861, !1863, !1867, !1871, !1876}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1858, file: !1831, line: 31, baseType: !480, size: 64)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1858, file: !1831, line: 32, baseType: !1862, size: 64, offset: 64)
!1862 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !461)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "append_to_strbuf", scope: !1858, file: !1831, line: 34, baseType: !1864, size: 64, offset: 128)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64)
!1865 = !DISubroutineType(types: !1866)
!1866 = !{null, !1608, !5}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "get_is_empty", scope: !1858, file: !1831, line: 35, baseType: !1868, size: 64, offset: 192)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 64)
!1869 = !DISubroutineType(types: !1870)
!1870 = !{!341, !5}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "generator", scope: !1858, file: !1831, line: 37, baseType: !1872, size: 64, offset: 256)
!1872 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_tpl_list_generator_t", file: !1831, line: 28, baseType: !1873)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 64)
!1874 = !DISubroutineType(types: !1875)
!1875 = !{!37, !365}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "list_desc", scope: !1858, file: !1831, line: 38, baseType: !1877, size: 64, offset: 320)
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1878, size: 64)
!1878 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1857)
!1879 = !DIGlobalVariableExpression(var: !1880, expr: !DIExpression())
!1880 = distinct !DIGlobalVariable(name: "serve_files", scope: !1881, file: !1882, line: 1011, type: !1886, isLocal: true, isDefinition: true)
!1881 = distinct !DISubprogram(name: "lwan_module_serve_files", scope: !1882, file: !1882, line: 1009, type: !1883, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2037, retainedNodes: !74)
!1882 = !DIFile(filename: "common/lwan-serve-files.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "800b7015121bf02dbd7f42c60f7a26e9")
!1883 = !DISubroutineType(types: !1884)
!1884 = !{!1885}
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 64)
!1886 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1887)
!1887 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_module_t", file: !262, line: 104, baseType: !1888)
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_module_t_", file: !262, line: 227, size: 384, elements: !1889)
!1889 = !{!1890, !1891, !1892, !1893, !1894, !2036}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1888, file: !262, line: 228, baseType: !480, size: 64)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1888, file: !262, line: 229, baseType: !1132, size: 64, offset: 64)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "init_from_hash", scope: !1888, file: !262, line: 230, baseType: !1136, size: 64, offset: 128)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !1888, file: !262, line: 231, baseType: !403, size: 64, offset: 192)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !1888, file: !262, line: 232, baseType: !1895, size: 64, offset: 256)
!1895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 64)
!1896 = !DISubroutineType(types: !1897)
!1897 = !{!497, !1898, !2035, !5}
!1898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 64)
!1899 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_request_t", file: !262, line: 106, baseType: !1900)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_request_t_", file: !262, line: 206, size: 1280, elements: !1901)
!1901 = !{!1902, !1903, !1904, !1910, !1911, !1980, !1991, !1992, !2003}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1900, file: !262, line: 207, baseType: !347, size: 32)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1900, file: !262, line: 208, baseType: !37, size: 32, offset: 32)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "url", scope: !1900, file: !262, line: 209, baseType: !1905, size: 128, offset: 64)
!1905 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_value_t", file: !262, line: 110, baseType: !1906)
!1906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_value_t_", file: !262, line: 191, size: 128, elements: !1907)
!1907 = !{!1908, !1909}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1906, file: !262, line: 192, baseType: !61, size: 64)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1906, file: !262, line: 193, baseType: !6, size: 64, offset: 64)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "original_url", scope: !1900, file: !262, line: 210, baseType: !1905, size: 128, offset: 192)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "conn", scope: !1900, file: !262, line: 211, baseType: !1912, size: 64, offset: 320)
!1912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 64)
!1913 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_connection_t", file: !262, line: 112, baseType: !1914)
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_connection_t_", file: !262, line: 196, size: 256, elements: !1915)
!1915 = !{!1916, !1917, !1918, !1919, !1978, !1979}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1914, file: !262, line: 199, baseType: !362, size: 32)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "time_to_die", scope: !1914, file: !262, line: 200, baseType: !28, size: 32, offset: 32)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "coro", scope: !1914, file: !262, line: 201, baseType: !365, size: 64, offset: 64)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1914, file: !262, line: 202, baseType: !1920, size: 64, offset: 128)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64)
!1921 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_thread_t", file: !262, line: 108, baseType: !1922)
!1922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_thread_t_", file: !262, line: 253, size: 832, elements: !1923)
!1923 = !{!1924, !1969, !1975, !1976, !1977}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "lwan", scope: !1922, file: !262, line: 254, baseType: !1925, size: 64)
!1925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 64)
!1926 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_t", file: !262, line: 103, baseType: !1927)
!1927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_t_", file: !262, line: 275, size: 640, elements: !1928)
!1928 = !{!1929, !1950, !1951, !1957, !1958, !1968}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "url_map_trie", scope: !1927, file: !262, line: 276, baseType: !1930, size: 128)
!1930 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_t", file: !381, line: 25, baseType: !1931)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_t_", file: !381, line: 41, size: 128, elements: !1932)
!1932 = !{!1933, !1949}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1931, file: !381, line: 42, baseType: !1934, size: 64)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64)
!1935 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_node_t", file: !381, line: 26, baseType: !1936)
!1936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_node_t_", file: !381, line: 29, size: 640, elements: !1937)
!1937 = !{!1938, !1940, !1948}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1936, file: !381, line: 30, baseType: !1939, size: 512)
!1939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1934, size: 512, elements: !391)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !1936, file: !381, line: 31, baseType: !1941, size: 64, offset: 512)
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 64)
!1942 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_leaf_t", file: !381, line: 27, baseType: !1943)
!1943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_leaf_t_", file: !381, line: 35, size: 192, elements: !1944)
!1944 = !{!1945, !1946, !1947}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1943, file: !381, line: 36, baseType: !61, size: 64)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1943, file: !381, line: 37, baseType: !5, size: 64, offset: 64)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1943, file: !381, line: 38, baseType: !1941, size: 64, offset: 128)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !1936, file: !381, line: 32, baseType: !37, size: 32, offset: 576)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !1931, file: !381, line: 43, baseType: !403, size: 64, offset: 64)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "conns", scope: !1927, file: !262, line: 277, baseType: !1912, size: 64, offset: 128)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1927, file: !262, line: 283, baseType: !1952, size: 128, offset: 192)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1927, file: !262, line: 279, size: 128, elements: !1953)
!1953 = !{!1954, !1955, !1956}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1952, file: !262, line: 280, baseType: !1920, size: 64)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "max_fd", scope: !1952, file: !262, line: 281, baseType: !28, size: 32, offset: 64)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1952, file: !262, line: 282, baseType: !413, size: 16, offset: 96)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "module_registry", scope: !1927, file: !262, line: 285, baseType: !331, size: 64, offset: 320)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1927, file: !262, line: 286, baseType: !1959, size: 192, offset: 384)
!1959 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_config_t", file: !262, line: 111, baseType: !1960)
!1960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_config_t_", file: !262, line: 266, size: 192, elements: !1961)
!1961 = !{!1962, !1963, !1964, !1965, !1966, !1967}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !1960, file: !262, line: 267, baseType: !61, size: 64)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive_timeout", scope: !1960, file: !262, line: 268, baseType: !413, size: 16, offset: 64)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "quiet", scope: !1960, file: !262, line: 269, baseType: !341, size: 8, offset: 80)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "reuse_port", scope: !1960, file: !262, line: 270, baseType: !341, size: 8, offset: 88)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1960, file: !262, line: 271, baseType: !28, size: 32, offset: 96)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "n_threads", scope: !1960, file: !262, line: 272, baseType: !413, size: 16, offset: 128)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "main_socket", scope: !1927, file: !262, line: 287, baseType: !37, size: 32, offset: 576)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !1922, file: !262, line: 259, baseType: !1970, size: 576, offset: 64)
!1970 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1922, file: !262, line: 255, size: 576, elements: !1971)
!1971 = !{!1972, !1973, !1974}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !1970, file: !262, line: 256, baseType: !430, size: 240)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1970, file: !262, line: 257, baseType: !430, size: 240, offset: 240)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1970, file: !262, line: 258, baseType: !322, size: 64, offset: 512)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_fd", scope: !1922, file: !262, line: 261, baseType: !37, size: 32, offset: 640)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_fd", scope: !1922, file: !262, line: 262, baseType: !435, size: 64, offset: 672)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !1922, file: !262, line: 263, baseType: !437, size: 64, offset: 768)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1914, file: !262, line: 203, baseType: !37, size: 32, offset: 192)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1914, file: !262, line: 203, baseType: !37, size: 32, offset: 224)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "query_params", scope: !1900, file: !262, line: 216, baseType: !1981, size: 128, offset: 384)
!1981 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1900, file: !262, line: 213, size: 128, elements: !1982)
!1982 = !{!1983, !1990}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1981, file: !262, line: 214, baseType: !1984, size: 64)
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 64)
!1985 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_key_value_t", file: !262, line: 105, baseType: !1986)
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_key_value_t_", file: !262, line: 173, size: 128, elements: !1987)
!1987 = !{!1988, !1989}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1986, file: !262, line: 174, baseType: !61, size: 64)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1986, file: !262, line: 175, baseType: !61, size: 64, offset: 64)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1981, file: !262, line: 215, baseType: !6, size: 64, offset: 64)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "post_data", scope: !1900, file: !262, line: 216, baseType: !1981, size: 128, offset: 512)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1900, file: !262, line: 223, baseType: !1993, size: 192, offset: 640)
!1993 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1900, file: !262, line: 217, size: 192, elements: !1994)
!1994 = !{!1995, !1996}
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "if_modified_since", scope: !1993, file: !262, line: 218, baseType: !322, size: 64)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1993, file: !262, line: 222, baseType: !1997, size: 128, offset: 64)
!1997 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1993, file: !262, line: 219, size: 128, elements: !1998)
!1998 = !{!1999, !2002}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1997, file: !262, line: 220, baseType: !2000, size: 64)
!2000 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !2001, line: 56, baseType: !463)
!2001 = !DIFile(filename: "/usr/include/fcntl.h", directory: "", checksumkind: CSK_MD5, checksum: "1a9bb91818c37dc7bc291ca6e49fc221")
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !1997, file: !262, line: 221, baseType: !2000, size: 64, offset: 64)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !1900, file: !262, line: 224, baseType: !2004, size: 448, offset: 832)
!2004 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_response_t", file: !262, line: 107, baseType: !2005)
!2005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_response_t_", file: !262, line: 178, size: 448, elements: !2006)
!2006 = !{!2007, !2023, !2024, !2025, !2026}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2005, file: !262, line: 179, baseType: !2008, size: 64)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 64)
!2009 = !DIDerivedType(tag: DW_TAG_typedef, name: "strbuf_t", file: !472, line: 25, baseType: !2010)
!2010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "strbuf_t_", file: !472, line: 27, size: 256, elements: !2011)
!2011 = !{!2012, !2017, !2022}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2010, file: !472, line: 31, baseType: !2013, size: 64)
!2013 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2010, file: !472, line: 28, size: 64, elements: !2014)
!2014 = !{!2015, !2016}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2013, file: !472, line: 29, baseType: !61, size: 64)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "static_buffer", scope: !2013, file: !472, line: 30, baseType: !480, size: 64)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2010, file: !472, line: 34, baseType: !2018, size: 128, offset: 64)
!2018 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2010, file: !472, line: 32, size: 128, elements: !2019)
!2019 = !{!2020, !2021}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !2018, file: !472, line: 33, baseType: !6, size: 64)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2018, file: !472, line: 33, baseType: !6, size: 64, offset: 64)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2010, file: !472, line: 35, baseType: !28, size: 32, offset: 192)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !2005, file: !262, line: 180, baseType: !480, size: 64, offset: 64)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "content_length", scope: !2005, file: !262, line: 181, baseType: !6, size: 64, offset: 128)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "headers", scope: !2005, file: !262, line: 182, baseType: !1984, size: 64, offset: 192)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !2005, file: !262, line: 188, baseType: !2027, size: 192, offset: 256)
!2027 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2005, file: !262, line: 184, size: 192, elements: !2028)
!2028 = !{!2029, !2033, !2034}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2027, file: !262, line: 185, baseType: !2030, size: 64)
!2030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2031, size: 64)
!2031 = !DISubroutineType(types: !2032)
!2032 = !{!497, !1898, !5}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2027, file: !262, line: 186, baseType: !5, size: 64, offset: 64)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !2027, file: !262, line: 187, baseType: !5, size: 64, offset: 128)
!2035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 64)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1888, file: !262, line: 233, baseType: !1283, size: 32, offset: 320)
!2037 = distinct !DICompileUnit(language: DW_LANG_C11, file: !2038, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2039, retainedTypes: !2040, globals: !2157, splitDebugInlining: false, nameTableKind: None)
!2038 = !DIFile(filename: "/home/raj/lwan/common/lwan-serve-files.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "800b7015121bf02dbd7f42c60f7a26e9")
!2039 = !{!282, !261, !274, !662, !1583}
!2040 = !{!5, !2041, !61, !2054, !2059, !2008, !2064, !6, !2074, !2000, !2084, !37}
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 64)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cache_entry_t", file: !309, line: 27, size: 320, elements: !2043)
!2043 = !{!2044, !2050, !2051, !2052, !2053}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !2042, file: !309, line: 28, baseType: !2045, size: 128)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_node", file: !313, line: 191, size: 128, elements: !2046)
!2046 = !{!2047, !2049}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2045, file: !313, line: 193, baseType: !2048, size: 64)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 64)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2045, file: !313, line: 193, baseType: !2048, size: 64, offset: 64)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2042, file: !309, line: 29, baseType: !61, size: 64, offset: 128)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !2042, file: !309, line: 30, baseType: !28, size: 32, offset: 192)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2042, file: !309, line: 31, baseType: !28, size: 32, offset: 224)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "time_to_die", scope: !2042, file: !309, line: 32, baseType: !322, size: 64, offset: 256)
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 64)
!2055 = !DIDerivedType(tag: DW_TAG_typedef, name: "redir_cache_data_t", file: !1882, line: 55, baseType: !2056)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redir_cache_data_t_", file: !1882, line: 110, size: 64, elements: !2057)
!2057 = !{!2058}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "redir_to", scope: !2056, file: !1882, line: 111, baseType: !61, size: 64)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 64)
!2060 = !DIDerivedType(tag: DW_TAG_typedef, name: "dir_list_cache_data_t", file: !1882, line: 54, baseType: !2061)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_list_cache_data_t_", file: !1882, line: 106, size: 64, elements: !2062)
!2062 = !{!2063}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "rendered", scope: !2061, file: !1882, line: 107, baseType: !2008, size: 64)
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 64)
!2065 = !DIDerivedType(tag: DW_TAG_typedef, name: "mmap_cache_data_t", file: !1882, line: 52, baseType: !2066)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmap_cache_data_t_", file: !1882, line: 85, size: 256, elements: !2067)
!2067 = !{!2068, !2073}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "compressed", scope: !2066, file: !1882, line: 90, baseType: !2069, size: 128)
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2066, file: !1882, line: 86, size: 128, elements: !2070)
!2070 = !{!2071, !2072}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !2069, file: !1882, line: 87, baseType: !5, size: 64)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2069, file: !1882, line: 89, baseType: !8, size: 64, offset: 64)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "uncompressed", scope: !2066, file: !1882, line: 90, baseType: !2069, size: 128, offset: 128)
!2074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2075, size: 64)
!2075 = !DIDerivedType(tag: DW_TAG_typedef, name: "sendfile_cache_data_t", file: !1882, line: 53, baseType: !2076)
!2076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sendfile_cache_data_t_", file: !1882, line: 93, size: 256, elements: !2077)
!2077 = !{!2078, !2083}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "compressed", scope: !2076, file: !1882, line: 103, baseType: !2079, size: 128)
!2079 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2076, file: !1882, line: 100, size: 128, elements: !2080)
!2080 = !{!2081, !2082}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !2079, file: !1882, line: 101, baseType: !61, size: 64)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2079, file: !1882, line: 102, baseType: !6, size: 64, offset: 64)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "uncompressed", scope: !2076, file: !1882, line: 103, baseType: !2079, size: 128, offset: 128)
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2085, size: 64)
!2085 = !DIDerivedType(tag: DW_TAG_typedef, name: "file_cache_entry_t", file: !1882, line: 50, baseType: !2086)
!2086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_cache_entry_t_", file: !1882, line: 114, size: 768, elements: !2087)
!2087 = !{!2088, !2089, !2094, !2095}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2086, file: !1882, line: 115, baseType: !2042, size: 320)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "last_modified", scope: !2086, file: !1882, line: 120, baseType: !2090, size: 320, offset: 320)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2086, file: !1882, line: 117, size: 320, elements: !2091)
!2091 = !{!2092, !2093}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !2090, file: !1882, line: 118, baseType: !218, size: 248)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "integer", scope: !2090, file: !1882, line: 119, baseType: !322, size: 64, offset: 256)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !2086, file: !1882, line: 122, baseType: !480, size: 64, offset: 640)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "funcs", scope: !2086, file: !1882, line: 123, baseType: !2096, size: 64, offset: 704)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 64)
!2097 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2098)
!2098 = !DIDerivedType(tag: DW_TAG_typedef, name: "cache_funcs_t", file: !1882, line: 51, baseType: !2099)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cache_funcs_t_", file: !1882, line: 74, size: 256, elements: !2100)
!2100 = !{!2101, !2102, !2155, !2156}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "serve", scope: !2099, file: !1882, line: 75, baseType: !2030, size: 64)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2099, file: !1882, line: 77, baseType: !2103, size: 64, offset: 64)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 64)
!2104 = !DISubroutineType(types: !2105)
!2105 = !{!341, !2084, !2106, !480, !2121}
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2107, size: 64)
!2107 = !DIDerivedType(tag: DW_TAG_typedef, name: "serve_files_priv_t", file: !1882, line: 49, baseType: !2108)
!2108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "serve_files_priv_t_", file: !1882, line: 57, size: 512, elements: !2109)
!2109 = !{!2110, !2111, !2117, !2118, !2119, !2120}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2108, file: !1882, line: 58, baseType: !529, size: 64)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2108, file: !1882, line: 64, baseType: !2112, size: 192, offset: 64)
!2112 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2108, file: !1882, line: 60, size: 192, elements: !2113)
!2113 = !{!2114, !2115, !2116}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !2112, file: !1882, line: 61, baseType: !61, size: 64)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "path_len", scope: !2112, file: !1882, line: 62, baseType: !6, size: 64, offset: 64)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !2112, file: !1882, line: 63, baseType: !37, size: 32, offset: 128)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "open_mode", scope: !2108, file: !1882, line: 66, baseType: !37, size: 32, offset: 256)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "index_html", scope: !2108, file: !1882, line: 67, baseType: !480, size: 64, offset: 320)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "directory_list_tpl", scope: !2108, file: !1882, line: 69, baseType: !1829, size: 64, offset: 384)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "serve_precompressed_files", scope: !2108, file: !1882, line: 71, baseType: !341, size: 8, offset: 448)
!2121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 64)
!2122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2123, line: 26, size: 1152, elements: !2124)
!2123 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/struct_stat.h", directory: "", checksumkind: CSK_MD5, checksum: "3ba283bc334370fe631cbc82f5229ed7")
!2124 = !{!2125, !2127, !2129, !2131, !2133, !2135, !2137, !2138, !2139, !2140, !2142, !2144, !2151, !2152, !2153}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2122, file: !2123, line: 31, baseType: !2126, size: 64)
!2126 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !69, line: 145, baseType: !8)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2122, file: !2123, line: 36, baseType: !2128, size: 64, offset: 64)
!2128 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !69, line: 148, baseType: !8)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2122, file: !2123, line: 44, baseType: !2130, size: 64, offset: 128)
!2130 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !69, line: 151, baseType: !8)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2122, file: !2123, line: 45, baseType: !2132, size: 32, offset: 192)
!2132 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !69, line: 150, baseType: !28)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2122, file: !2123, line: 47, baseType: !2134, size: 32, offset: 224)
!2134 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !69, line: 146, baseType: !28)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2122, file: !2123, line: 48, baseType: !2136, size: 32, offset: 256)
!2136 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !69, line: 147, baseType: !28)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2122, file: !2123, line: 50, baseType: !37, size: 32, offset: 288)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2122, file: !2123, line: 52, baseType: !2126, size: 64, offset: 320)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2122, file: !2123, line: 57, baseType: !463, size: 64, offset: 384)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2122, file: !2123, line: 61, baseType: !2141, size: 64, offset: 448)
!2141 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !69, line: 175, baseType: !40)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2122, file: !2123, line: 63, baseType: !2143, size: 64, offset: 512)
!2143 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !69, line: 180, baseType: !40)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2122, file: !2123, line: 74, baseType: !2145, size: 128, offset: 576)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2146, line: 11, size: 128, elements: !2147)
!2146 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "", checksumkind: CSK_MD5, checksum: "55dc154df3f21a5aa944dcafba9b43f6")
!2147 = !{!2148, !2149}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2145, file: !2146, line: 16, baseType: !324, size: 64)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2145, file: !2146, line: 21, baseType: !2150, size: 64, offset: 64)
!2150 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !69, line: 197, baseType: !40)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2122, file: !2123, line: 75, baseType: !2145, size: 128, offset: 704)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2122, file: !2123, line: 76, baseType: !2145, size: 128, offset: 832)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2122, file: !2123, line: 89, baseType: !2154, size: 192, offset: 960)
!2154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2150, size: 192, elements: !194)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2099, file: !1882, line: 81, baseType: !403, size: 64, offset: 128)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "struct_size", scope: !2099, file: !1882, line: 82, baseType: !6, size: 64, offset: 192)
!2157 = !{!2158, !1879, !2160, !2162, !2164, !2166, !2168, !2170, !2172, !2174, !2176, !2178, !2180, !2182, !2184, !2186, !2188, !2190, !2192, !2194, !2196, !2198, !2200, !2202, !2204, !2207, !2209, !2214, !2216, !2218, !2220, !2222, !2227, !2229, !2231, !2233, !2235, !2253, !2255, !2257, !2259, !2261, !2263, !2265, !2267, !2269, !2271, !2273, !2275, !2277, !2279, !2281, !2283, !2286, !2288, !2290, !2292, !2294}
!2158 = !DIGlobalVariableExpression(var: !2159, expr: !DIExpression())
!2159 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 1012, type: !52, isLocal: true, isDefinition: true)
!2160 = !DIGlobalVariableExpression(var: !2161, expr: !DIExpression())
!2161 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 646, type: !526, isLocal: true, isDefinition: true)
!2162 = !DIGlobalVariableExpression(var: !2163, expr: !DIExpression())
!2163 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 646, type: !155, isLocal: true, isDefinition: true)
!2164 = !DIGlobalVariableExpression(var: !2165, expr: !DIExpression())
!2165 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 646, type: !603, isLocal: true, isDefinition: true)
!2166 = !DIGlobalVariableExpression(var: !2167, expr: !DIExpression())
!2167 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 652, type: !93, isLocal: true, isDefinition: true)
!2168 = !DIGlobalVariableExpression(var: !2169, expr: !DIExpression())
!2169 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 659, type: !430, isLocal: true, isDefinition: true)
!2170 = !DIGlobalVariableExpression(var: !2171, expr: !DIExpression())
!2171 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 666, type: !505, isLocal: true, isDefinition: true)
!2172 = !DIGlobalVariableExpression(var: !2173, expr: !DIExpression())
!2173 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 673, type: !158, isLocal: true, isDefinition: true)
!2174 = !DIGlobalVariableExpression(var: !2175, expr: !DIExpression())
!2175 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 680, type: !1065, isLocal: true, isDefinition: true)
!2176 = !DIGlobalVariableExpression(var: !2177, expr: !DIExpression())
!2177 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 688, type: !1012, isLocal: true, isDefinition: true)
!2178 = !DIGlobalVariableExpression(var: !2179, expr: !DIExpression())
!2179 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 474, type: !166, isLocal: true, isDefinition: true)
!2180 = !DIGlobalVariableExpression(var: !2181, expr: !DIExpression())
!2181 = distinct !DIGlobalVariable(name: "redir_funcs", scope: !2037, file: !1882, line: 183, type: !2097, isLocal: true, isDefinition: true)
!2182 = !DIGlobalVariableExpression(var: !2183, expr: !DIExpression())
!2183 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 962, type: !559, isLocal: true, isDefinition: true)
!2184 = !DIGlobalVariableExpression(var: !2185, expr: !DIExpression())
!2185 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 446, type: !137, isLocal: true, isDefinition: true)
!2186 = !DIGlobalVariableExpression(var: !2187, expr: !DIExpression())
!2187 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 449, type: !1012, isLocal: true, isDefinition: true)
!2188 = !DIGlobalVariableExpression(var: !2189, expr: !DIExpression())
!2189 = distinct !DIGlobalVariable(name: "dirlist_funcs", scope: !2037, file: !1882, line: 176, type: !2097, isLocal: true, isDefinition: true)
!2190 = !DIGlobalVariableExpression(var: !2191, expr: !DIExpression())
!2191 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 754, type: !152, isLocal: true, isDefinition: true)
!2192 = !DIGlobalVariableExpression(var: !2193, expr: !DIExpression())
!2193 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 757, type: !103, isLocal: true, isDefinition: true)
!2194 = !DIGlobalVariableExpression(var: !2195, expr: !DIExpression())
!2195 = distinct !DIGlobalVariable(name: "compression_none", scope: !2037, file: !1882, line: 45, type: !480, isLocal: true, isDefinition: true)
!2196 = !DIGlobalVariableExpression(var: !2197, expr: !DIExpression())
!2197 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 433, type: !654, isLocal: true, isDefinition: true)
!2198 = !DIGlobalVariableExpression(var: !2199, expr: !DIExpression())
!2199 = distinct !DIGlobalVariable(name: "mmap_funcs", scope: !2037, file: !1882, line: 162, type: !2097, isLocal: true, isDefinition: true)
!2200 = !DIGlobalVariableExpression(var: !2201, expr: !DIExpression())
!2201 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 47, type: !651, isLocal: true, isDefinition: true)
!2202 = !DIGlobalVariableExpression(var: !2203, expr: !DIExpression())
!2203 = distinct !DIGlobalVariable(name: "compression_deflate", scope: !2037, file: !1882, line: 47, type: !480, isLocal: true, isDefinition: true)
!2204 = !DIGlobalVariableExpression(var: !2205, expr: !DIExpression())
!2205 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 361, type: !2206, isLocal: true, isDefinition: true)
!2206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 80, elements: !655)
!2207 = !DIGlobalVariableExpression(var: !2208, expr: !DIExpression())
!2208 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 361, type: !651, isLocal: true, isDefinition: true)
!2209 = !DIGlobalVariableExpression(var: !2210, expr: !DIExpression())
!2210 = distinct !DIGlobalVariable(name: "deflated_header_size", scope: !2211, file: !1882, line: 311, type: !73, isLocal: true, isDefinition: true)
!2211 = distinct !DISubprogram(name: "is_compression_worthy", scope: !1882, file: !1882, line: 308, type: !2212, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2037, retainedNodes: !74)
!2212 = !DISubroutineType(types: !2213)
!2213 = !{!341, !73, !73}
!2214 = !DIGlobalVariableExpression(var: !2215, expr: !DIExpression())
!2215 = distinct !DIGlobalVariable(name: "sendfile_funcs", scope: !2037, file: !1882, line: 169, type: !2097, isLocal: true, isDefinition: true)
!2216 = !DIGlobalVariableExpression(var: !2217, expr: !DIExpression())
!2217 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 46, type: !166, isLocal: true, isDefinition: true)
!2218 = !DIGlobalVariableExpression(var: !2219, expr: !DIExpression())
!2219 = distinct !DIGlobalVariable(name: "compression_gzip", scope: !2037, file: !1882, line: 46, type: !480, isLocal: true, isDefinition: true)
!2220 = !DIGlobalVariableExpression(var: !2221, expr: !DIExpression())
!2221 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 393, type: !110, isLocal: true, isDefinition: true)
!2222 = !DIGlobalVariableExpression(var: !2223, expr: !DIExpression())
!2223 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 208, type: !2224, isLocal: true, isDefinition: true)
!2224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 6104, elements: !2225)
!2225 = !{!2226}
!2226 = !DISubrange(count: 763)
!2227 = !DIGlobalVariableExpression(var: !2228, expr: !DIExpression())
!2228 = distinct !DIGlobalVariable(name: "directory_list_tpl_str", scope: !2037, file: !1882, line: 208, type: !480, isLocal: true, isDefinition: true)
!2229 = !DIGlobalVariableExpression(var: !2230, expr: !DIExpression())
!2230 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 201, type: !654, isLocal: true, isDefinition: true)
!2231 = !DIGlobalVariableExpression(var: !2232, expr: !DIExpression())
!2232 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 202, type: !559, isLocal: true, isDefinition: true)
!2233 = !DIGlobalVariableExpression(var: !2234, expr: !DIExpression())
!2234 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 203, type: !654, isLocal: true, isDefinition: true)
!2235 = !DIGlobalVariableExpression(var: !2236, expr: !DIExpression())
!2236 = distinct !DIGlobalVariable(name: "file_list_desc", scope: !2037, file: !1882, line: 200, type: !2237, isLocal: true, isDefinition: true)
!2237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2238, size: 1536, elements: !138)
!2238 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2239)
!2239 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_var_descriptor_t", file: !1831, line: 26, baseType: !2240)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_var_descriptor_t_", file: !1831, line: 30, size: 384, elements: !2241)
!2241 = !{!2242, !2243, !2245, !2249, !2250, !2251}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2240, file: !1831, line: 31, baseType: !480, size: 64)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2240, file: !1831, line: 32, baseType: !2244, size: 64, offset: 64)
!2244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2000)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "append_to_strbuf", scope: !2240, file: !1831, line: 34, baseType: !2246, size: 64, offset: 128)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 64)
!2247 = !DISubroutineType(types: !2248)
!2248 = !{null, !2008, !5}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "get_is_empty", scope: !2240, file: !1831, line: 35, baseType: !1868, size: 64, offset: 192)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "generator", scope: !2240, file: !1831, line: 37, baseType: !1872, size: 64, offset: 256)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "list_desc", scope: !2240, file: !1831, line: 38, baseType: !2252, size: 64, offset: 320)
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2238, size: 64)
!2253 = !DIGlobalVariableExpression(var: !2254, expr: !DIExpression())
!2254 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 271, type: !505, isLocal: true, isDefinition: true)
!2255 = !DIGlobalVariableExpression(var: !2256, expr: !DIExpression())
!2256 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 272, type: !137, isLocal: true, isDefinition: true)
!2257 = !DIGlobalVariableExpression(var: !2258, expr: !DIExpression())
!2258 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 273, type: !654, isLocal: true, isDefinition: true)
!2259 = !DIGlobalVariableExpression(var: !2260, expr: !DIExpression())
!2260 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 275, type: !166, isLocal: true, isDefinition: true)
!2261 = !DIGlobalVariableExpression(var: !2262, expr: !DIExpression())
!2262 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 276, type: !166, isLocal: true, isDefinition: true)
!2263 = !DIGlobalVariableExpression(var: !2264, expr: !DIExpression())
!2264 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 284, type: !188, isLocal: true, isDefinition: true)
!2265 = !DIGlobalVariableExpression(var: !2266, expr: !DIExpression())
!2266 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 287, type: !137, isLocal: true, isDefinition: true)
!2267 = !DIGlobalVariableExpression(var: !2268, expr: !DIExpression())
!2268 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 290, type: !137, isLocal: true, isDefinition: true)
!2269 = !DIGlobalVariableExpression(var: !2270, expr: !DIExpression())
!2270 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 293, type: !137, isLocal: true, isDefinition: true)
!2271 = !DIGlobalVariableExpression(var: !2272, expr: !DIExpression())
!2272 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 191, type: !578, isLocal: true, isDefinition: true)
!2273 = !DIGlobalVariableExpression(var: !2274, expr: !DIExpression())
!2274 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 192, type: !1005, isLocal: true, isDefinition: true)
!2275 = !DIGlobalVariableExpression(var: !2276, expr: !DIExpression())
!2276 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 193, type: !578, isLocal: true, isDefinition: true)
!2277 = !DIGlobalVariableExpression(var: !2278, expr: !DIExpression())
!2278 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 194, type: !578, isLocal: true, isDefinition: true)
!2279 = !DIGlobalVariableExpression(var: !2280, expr: !DIExpression())
!2280 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 195, type: !578, isLocal: true, isDefinition: true)
!2281 = !DIGlobalVariableExpression(var: !2282, expr: !DIExpression())
!2282 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 196, type: !578, isLocal: true, isDefinition: true)
!2283 = !DIGlobalVariableExpression(var: !2284, expr: !DIExpression())
!2284 = distinct !DIGlobalVariable(name: "file_list_item_desc", scope: !2037, file: !1882, line: 190, type: !2285, isLocal: true, isDefinition: true)
!2285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2238, size: 2688, elements: !506)
!2286 = !DIGlobalVariableExpression(var: !2287, expr: !DIExpression())
!2287 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 709, type: !166, isLocal: true, isDefinition: true)
!2288 = !DIGlobalVariableExpression(var: !2289, expr: !DIExpression())
!2289 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 710, type: !1012, isLocal: true, isDefinition: true)
!2290 = !DIGlobalVariableExpression(var: !2291, expr: !DIExpression())
!2291 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 712, type: !208, isLocal: true, isDefinition: true)
!2292 = !DIGlobalVariableExpression(var: !2293, expr: !DIExpression())
!2293 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 723, type: !572, isLocal: true, isDefinition: true)
!2294 = !DIGlobalVariableExpression(var: !2295, expr: !DIExpression())
!2295 = distinct !DIGlobalVariable(scope: null, file: !1882, line: 723, type: !1672, isLocal: true, isDefinition: true)
!2296 = !DIGlobalVariableExpression(var: !2297, expr: !DIExpression())
!2297 = distinct !DIGlobalVariable(scope: null, file: !2298, line: 233, type: !171, isLocal: true, isDefinition: true)
!2298 = !DIFile(filename: "common/lwan-socket.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "c18944055a3b887a7cad5341937765cf")
!2299 = !DIGlobalVariableExpression(var: !2300, expr: !DIExpression())
!2300 = distinct !DIGlobalVariable(scope: null, file: !2298, line: 233, type: !155, isLocal: true, isDefinition: true)
!2301 = !DIGlobalVariableExpression(var: !2302, expr: !DIExpression())
!2302 = distinct !DIGlobalVariable(scope: null, file: !2298, line: 233, type: !236, isLocal: true, isDefinition: true)
!2303 = !DIGlobalVariableExpression(var: !2304, expr: !DIExpression())
!2304 = distinct !DIGlobalVariable(scope: null, file: !2298, line: 237, type: !93, isLocal: true, isDefinition: true)
!2305 = !DIGlobalVariableExpression(var: !2306, expr: !DIExpression())
!2306 = distinct !DIGlobalVariable(scope: null, file: !2298, line: 244, type: !1012, isLocal: true, isDefinition: true)
!2307 = !DIGlobalVariableExpression(var: !2308, expr: !DIExpression())
!2308 = distinct !DIGlobalVariable(scope: null, file: !2298, line: 247, type: !218, isLocal: true, isDefinition: true)
!2309 = !DIGlobalVariableExpression(var: !2310, expr: !DIExpression())
!2310 = distinct !DIGlobalVariable(scope: null, file: !2298, line: 247, type: !46, isLocal: true, isDefinition: true)
!2311 = !DIGlobalVariableExpression(var: !2312, expr: !DIExpression())
!2312 = distinct !DIGlobalVariable(scope: null, file: !2298, line: 249, type: !46, isLocal: true, isDefinition: true)
!2313 = !DIGlobalVariableExpression(var: !2314, expr: !DIExpression())
!2314 = distinct !DIGlobalVariable(scope: null, file: !2298, line: 64, type: !233, isLocal: true, isDefinition: true)
!2315 = !DIGlobalVariableExpression(var: !2316, expr: !DIExpression())
!2316 = distinct !DIGlobalVariable(scope: null, file: !2298, line: 64, type: !2317, isLocal: true, isDefinition: true)
!2317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 424, elements: !2318)
!2318 = !{!2319}
!2319 = !DISubrange(count: 53)
!2320 = !DIGlobalVariableExpression(var: !2321, expr: !DIExpression())
!2321 = distinct !DIGlobalVariable(scope: null, file: !2298, line: 69, type: !430, isLocal: true, isDefinition: true)
!2322 = !DIGlobalVariableExpression(var: !2323, expr: !DIExpression())
!2323 = distinct !DIGlobalVariable(scope: null, file: !2298, line: 71, type: !955, isLocal: true, isDefinition: true)
!2324 = !DIGlobalVariableExpression(var: !2325, expr: !DIExpression())
!2325 = distinct !DIGlobalVariable(scope: null, file: !2298, line: 206, type: !936, isLocal: true, isDefinition: true)
!2326 = !DIGlobalVariableExpression(var: !2327, expr: !DIExpression())
!2327 = distinct !DIGlobalVariable(scope: null, file: !2298, line: 206, type: !521, isLocal: true, isDefinition: true)
!2328 = !DIGlobalVariableExpression(var: !2329, expr: !DIExpression())
!2329 = distinct !DIGlobalVariable(scope: null, file: !2298, line: 217, type: !88, isLocal: true, isDefinition: true)
!2330 = !DIGlobalVariableExpression(var: !2331, expr: !DIExpression())
!2331 = distinct !DIGlobalVariable(scope: null, file: !2298, line: 123, type: !166, isLocal: true, isDefinition: true)
!2332 = !DIGlobalVariableExpression(var: !2333, expr: !DIExpression())
!2333 = distinct !DIGlobalVariable(scope: null, file: !2298, line: 84, type: !651, isLocal: true, isDefinition: true)
!2334 = !DIGlobalVariableExpression(var: !2335, expr: !DIExpression())
!2335 = distinct !DIGlobalVariable(scope: null, file: !2298, line: 98, type: !188, isLocal: true, isDefinition: true)
!2336 = !DIGlobalVariableExpression(var: !2337, expr: !DIExpression())
!2337 = distinct !DIGlobalVariable(scope: null, file: !2298, line: 186, type: !233, isLocal: true, isDefinition: true)
!2338 = !DIGlobalVariableExpression(var: !2339, expr: !DIExpression())
!2339 = distinct !DIGlobalVariable(scope: null, file: !2298, line: 187, type: !46, isLocal: true, isDefinition: true)
!2340 = !DIGlobalVariableExpression(var: !2341, expr: !DIExpression())
!2341 = distinct !DIGlobalVariable(scope: null, file: !2298, line: 196, type: !158, isLocal: true, isDefinition: true)
!2342 = !DIGlobalVariableExpression(var: !2343, expr: !DIExpression())
!2343 = distinct !DIGlobalVariable(scope: null, file: !2298, line: 141, type: !2344, isLocal: true, isDefinition: true)
!2344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 128, elements: !89)
!2345 = !DIGlobalVariableExpression(var: !2346, expr: !DIExpression())
!2346 = distinct !DIGlobalVariable(scope: null, file: !2298, line: 141, type: !505, isLocal: true, isDefinition: true)
!2347 = !DIGlobalVariableExpression(var: !2348, expr: !DIExpression())
!2348 = distinct !DIGlobalVariable(scope: null, file: !2298, line: 147, type: !88, isLocal: true, isDefinition: true)
!2349 = !DIGlobalVariableExpression(var: !2350, expr: !DIExpression())
!2350 = distinct !DIGlobalVariable(scope: null, file: !2298, line: 150, type: !1029, isLocal: true, isDefinition: true)
!2351 = !DIGlobalVariableExpression(var: !2352, expr: !DIExpression())
!2352 = distinct !DIGlobalVariable(scope: null, file: !2298, line: 152, type: !208, isLocal: true, isDefinition: true)
!2353 = !DIGlobalVariableExpression(var: !2354, expr: !DIExpression())
!2354 = distinct !DIGlobalVariable(scope: null, file: !2298, line: 47, type: !521, isLocal: true, isDefinition: true)
!2355 = !DIGlobalVariableExpression(var: !2356, expr: !DIExpression())
!2356 = distinct !DIGlobalVariable(scope: null, file: !2298, line: 47, type: !193, isLocal: true, isDefinition: true)
!2357 = !DIGlobalVariableExpression(var: !2358, expr: !DIExpression())
!2358 = distinct !DIGlobalVariable(scope: null, file: !2298, line: 50, type: !193, isLocal: true, isDefinition: true)
!2359 = !DIGlobalVariableExpression(var: !2360, expr: !DIExpression())
!2360 = distinct !DIGlobalVariable(name: "quiet", scope: !2361, file: !2365, line: 44, type: !2431, isLocal: true, isDefinition: true)
!2361 = distinct !DICompileUnit(language: DW_LANG_C11, file: !2362, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2363, retainedTypes: !2373, globals: !2374, splitDebugInlining: false, nameTableKind: None)
!2362 = !DIFile(filename: "/home/raj/lwan/common/lwan-status.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "3144bdabc8d20e3f6762e4c059065536")
!2363 = !{!274, !2364}
!2364 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2365, line: 35, baseType: !28, size: 32, elements: !2366)
!2365 = !DIFile(filename: "common/lwan-status.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "3144bdabc8d20e3f6762e4c059065536")
!2366 = !{!2367, !2368, !2369, !2370, !2371, !2372}
!2367 = !DIEnumerator(name: "STATUS_INFO", value: 1)
!2368 = !DIEnumerator(name: "STATUS_WARNING", value: 2)
!2369 = !DIEnumerator(name: "STATUS_ERROR", value: 4)
!2370 = !DIEnumerator(name: "STATUS_PERROR", value: 8)
!2371 = !DIEnumerator(name: "STATUS_CRITICAL", value: 16)
!2372 = !DIEnumerator(name: "STATUS_DEBUG", value: 32)
!2373 = !{!6}
!2374 = !{!2359, !2375, !2377, !2379, !2381, !2383, !2385, !2387, !2389, !2391, !2393, !2395, !2397, !2399, !2401, !2407}
!2375 = !DIGlobalVariableExpression(var: !2376, expr: !DIExpression())
!2376 = distinct !DIGlobalVariable(scope: null, file: !2365, line: 109, type: !1005, isLocal: true, isDefinition: true)
!2377 = !DIGlobalVariableExpression(var: !2378, expr: !DIExpression())
!2378 = distinct !DIGlobalVariable(scope: null, file: !2365, line: 112, type: !578, isLocal: true, isDefinition: true)
!2379 = !DIGlobalVariableExpression(var: !2380, expr: !DIExpression())
!2380 = distinct !DIGlobalVariable(scope: null, file: !2365, line: 113, type: !578, isLocal: true, isDefinition: true)
!2381 = !DIGlobalVariableExpression(var: !2382, expr: !DIExpression())
!2382 = distinct !DIGlobalVariable(scope: null, file: !2365, line: 114, type: !578, isLocal: true, isDefinition: true)
!2383 = !DIGlobalVariableExpression(var: !2384, expr: !DIExpression())
!2384 = distinct !DIGlobalVariable(scope: null, file: !2365, line: 115, type: !188, isLocal: true, isDefinition: true)
!2385 = !DIGlobalVariableExpression(var: !2386, expr: !DIExpression())
!2386 = distinct !DIGlobalVariable(scope: null, file: !2365, line: 134, type: !236, isLocal: true, isDefinition: true)
!2387 = !DIGlobalVariableExpression(var: !2388, expr: !DIExpression())
!2388 = distinct !DIGlobalVariable(scope: null, file: !2365, line: 69, type: !110, isLocal: true, isDefinition: true)
!2389 = !DIGlobalVariableExpression(var: !2390, expr: !DIExpression())
!2390 = distinct !DIGlobalVariable(scope: null, file: !2365, line: 71, type: !110, isLocal: true, isDefinition: true)
!2391 = !DIGlobalVariableExpression(var: !2392, expr: !DIExpression())
!2392 = distinct !DIGlobalVariable(scope: null, file: !2365, line: 73, type: !651, isLocal: true, isDefinition: true)
!2393 = !DIGlobalVariableExpression(var: !2394, expr: !DIExpression())
!2394 = distinct !DIGlobalVariable(scope: null, file: !2365, line: 75, type: !110, isLocal: true, isDefinition: true)
!2395 = !DIGlobalVariableExpression(var: !2396, expr: !DIExpression())
!2396 = distinct !DIGlobalVariable(scope: null, file: !2365, line: 77, type: !110, isLocal: true, isDefinition: true)
!2397 = !DIGlobalVariableExpression(var: !2398, expr: !DIExpression())
!2398 = distinct !DIGlobalVariable(scope: null, file: !2365, line: 79, type: !110, isLocal: true, isDefinition: true)
!2399 = !DIGlobalVariableExpression(var: !2400, expr: !DIExpression())
!2400 = distinct !DIGlobalVariable(scope: null, file: !2365, line: 90, type: !166, isLocal: true, isDefinition: true)
!2401 = !DIGlobalVariableExpression(var: !2402, expr: !DIExpression())
!2402 = distinct !DIGlobalVariable(name: "retval", scope: !2403, file: !2365, line: 90, type: !480, isLocal: true, isDefinition: true)
!2403 = distinct !DISubprogram(name: "get_color_end_for_type", scope: !2365, file: !2365, line: 87, type: !2404, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2361, retainedNodes: !74)
!2404 = !DISubroutineType(types: !2405)
!2405 = !{!480, !2406, !62}
!2406 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_status_type_t", file: !2365, line: 42, baseType: !2364)
!2407 = !DIGlobalVariableExpression(var: !2408, expr: !DIExpression())
!2408 = distinct !DIGlobalVariable(name: "mutex", scope: !2361, file: !2365, line: 45, type: !2409, isLocal: true, isDefinition: true)
!2409 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_mutex_t", file: !438, line: 72, baseType: !2410)
!2410 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !438, line: 67, size: 320, elements: !2411)
!2411 = !{!2412, !2429, !2430}
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "__data", scope: !2410, file: !438, line: 69, baseType: !2413, size: 320)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_mutex_s", file: !620, line: 22, size: 320, elements: !2414)
!2414 = !{!2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "__lock", scope: !2413, file: !620, line: 24, baseType: !37, size: 32)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2413, file: !620, line: 25, baseType: !28, size: 32, offset: 32)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "__owner", scope: !2413, file: !620, line: 26, baseType: !37, size: 32, offset: 64)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "__nusers", scope: !2413, file: !620, line: 28, baseType: !28, size: 32, offset: 96)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "__kind", scope: !2413, file: !620, line: 32, baseType: !37, size: 32, offset: 128)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "__spins", scope: !2413, file: !620, line: 34, baseType: !628, size: 16, offset: 160)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "__elision", scope: !2413, file: !620, line: 35, baseType: !628, size: 16, offset: 176)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "__list", scope: !2413, file: !620, line: 36, baseType: !2423, size: 128, offset: 192)
!2423 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pthread_list_t", file: !632, line: 55, baseType: !2424)
!2424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_internal_list", file: !632, line: 51, size: 128, elements: !2425)
!2425 = !{!2426, !2428}
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "__prev", scope: !2424, file: !632, line: 53, baseType: !2427, size: 64)
!2427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2424, size: 64)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "__next", scope: !2424, file: !632, line: 54, baseType: !2427, size: 64, offset: 64)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !2410, file: !438, line: 70, baseType: !82, size: 320)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !2410, file: !438, line: 71, baseType: !40, size: 64)
!2431 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !341)
!2432 = !DIGlobalVariableExpression(var: !2433, expr: !DIExpression())
!2433 = distinct !DIGlobalVariable(name: "mime_entries_initialized", scope: !2434, file: !2438, line: 32, type: !341, isLocal: true, isDefinition: true)
!2434 = distinct !DICompileUnit(language: DW_LANG_C11, file: !2435, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2436, retainedTypes: !2449, globals: !2456, splitDebugInlining: false, nameTableKind: None)
!2435 = !DIFile(filename: "/home/raj/lwan/common/lwan-tables.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "307d435f6ef57d1ea0824afd6440b695")
!2436 = !{!2437, !282}
!2437 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !2439, file: !2438, line: 84, baseType: !28, size: 32, elements: !2442)
!2438 = !DIFile(filename: "common/lwan-tables.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "307d435f6ef57d1ea0824afd6440b695")
!2439 = distinct !DISubprogram(name: "lwan_determine_mime_type_for_file_name", scope: !2438, file: !2438, line: 78, type: !2440, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2434, retainedNodes: !74)
!2440 = !DISubroutineType(types: !2441)
!2441 = !{!480, !480}
!2442 = !{!2443, !2444, !2445, !2446, !2447, !2448}
!2443 = !DIEnumerator(name: "EXT_JPG", value: 1735420462)
!2444 = !DIEnumerator(name: "EXT_PNG", value: 1735290926)
!2445 = !DIEnumerator(name: "EXT_HTM", value: 1836345390)
!2446 = !DIEnumerator(name: "EXT_CSS", value: 1936941870)
!2447 = !DIEnumerator(name: "EXT_TXT", value: 1954051118)
!2448 = !DIEnumerator(name: "EXT_JS", value: 544434734)
!2449 = !{!2450, !2454, !61, !334}
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 64)
!2451 = !DIDerivedType(tag: DW_TAG_typedef, name: "Bytef", file: !2452, line: 400, baseType: !2453)
!2452 = !DIFile(filename: "/usr/include/zconf.h", directory: "", checksumkind: CSK_MD5, checksum: "95e83c46958f6395f746c80cc6799e76")
!2453 = !DIDerivedType(tag: DW_TAG_typedef, name: "Byte", file: !2452, line: 391, baseType: !9)
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 64)
!2455 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2451)
!2456 = !{!2457, !2459, !2461, !2463, !2468, !2470, !2472, !2474, !2476, !2478, !2480, !2482, !2484, !2486, !2488, !2490, !2492, !2494, !2496, !2498, !2500, !2502, !2504, !2506, !2508, !2510, !2512, !2514, !2516, !2518, !2520, !2522, !2524, !2526, !2528, !2530, !2532, !2535, !2537, !2542, !2544, !2549, !2554, !2559, !2561, !2566, !2568, !2573, !2432, !2583}
!2457 = !DIGlobalVariableExpression(var: !2458, expr: !DIExpression())
!2458 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 40, type: !171, isLocal: true, isDefinition: true)
!2459 = !DIGlobalVariableExpression(var: !2460, expr: !DIExpression())
!2460 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 40, type: !155, isLocal: true, isDefinition: true)
!2461 = !DIGlobalVariableExpression(var: !2462, expr: !DIExpression())
!2462 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 40, type: !430, isLocal: true, isDefinition: true)
!2463 = !DIGlobalVariableExpression(var: !2464, expr: !DIExpression())
!2464 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 46, type: !2465, isLocal: true, isDefinition: true)
!2465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 376, elements: !2466)
!2466 = !{!2467}
!2467 = !DISubrange(count: 47)
!2468 = !DIGlobalVariableExpression(var: !2469, expr: !DIExpression())
!2469 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 50, type: !526, isLocal: true, isDefinition: true)
!2470 = !DIGlobalVariableExpression(var: !2471, expr: !DIExpression())
!2471 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 94, type: !559, isLocal: true, isDefinition: true)
!2472 = !DIGlobalVariableExpression(var: !2473, expr: !DIExpression())
!2473 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 95, type: !654, isLocal: true, isDefinition: true)
!2474 = !DIGlobalVariableExpression(var: !2475, expr: !DIExpression())
!2475 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 96, type: !1012, isLocal: true, isDefinition: true)
!2476 = !DIGlobalVariableExpression(var: !2477, expr: !DIExpression())
!2477 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 97, type: !984, isLocal: true, isDefinition: true)
!2478 = !DIGlobalVariableExpression(var: !2479, expr: !DIExpression())
!2479 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 98, type: !654, isLocal: true, isDefinition: true)
!2480 = !DIGlobalVariableExpression(var: !2481, expr: !DIExpression())
!2481 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 99, type: !1012, isLocal: true, isDefinition: true)
!2482 = !DIGlobalVariableExpression(var: !2483, expr: !DIExpression())
!2483 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 112, type: !213, isLocal: true, isDefinition: true)
!2484 = !DIGlobalVariableExpression(var: !2485, expr: !DIExpression())
!2485 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 119, type: !505, isLocal: true, isDefinition: true)
!2486 = !DIGlobalVariableExpression(var: !2487, expr: !DIExpression())
!2487 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 120, type: !1672, isLocal: true, isDefinition: true)
!2488 = !DIGlobalVariableExpression(var: !2489, expr: !DIExpression())
!2489 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 121, type: !158, isLocal: true, isDefinition: true)
!2490 = !DIGlobalVariableExpression(var: !2491, expr: !DIExpression())
!2491 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 122, type: !103, isLocal: true, isDefinition: true)
!2492 = !DIGlobalVariableExpression(var: !2493, expr: !DIExpression())
!2493 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 123, type: !88, isLocal: true, isDefinition: true)
!2494 = !DIGlobalVariableExpression(var: !2495, expr: !DIExpression())
!2495 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 124, type: !1005, isLocal: true, isDefinition: true)
!2496 = !DIGlobalVariableExpression(var: !2497, expr: !DIExpression())
!2497 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 125, type: !152, isLocal: true, isDefinition: true)
!2498 = !DIGlobalVariableExpression(var: !2499, expr: !DIExpression())
!2499 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 126, type: !152, isLocal: true, isDefinition: true)
!2500 = !DIGlobalVariableExpression(var: !2501, expr: !DIExpression())
!2501 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 127, type: !88, isLocal: true, isDefinition: true)
!2502 = !DIGlobalVariableExpression(var: !2503, expr: !DIExpression())
!2503 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 128, type: !1672, isLocal: true, isDefinition: true)
!2504 = !DIGlobalVariableExpression(var: !2505, expr: !DIExpression())
!2505 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 129, type: !158, isLocal: true, isDefinition: true)
!2506 = !DIGlobalVariableExpression(var: !2507, expr: !DIExpression())
!2507 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 130, type: !228, isLocal: true, isDefinition: true)
!2508 = !DIGlobalVariableExpression(var: !2509, expr: !DIExpression())
!2509 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 131, type: !103, isLocal: true, isDefinition: true)
!2510 = !DIGlobalVariableExpression(var: !2511, expr: !DIExpression())
!2511 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 132, type: !208, isLocal: true, isDefinition: true)
!2512 = !DIGlobalVariableExpression(var: !2513, expr: !DIExpression())
!2513 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 133, type: !1672, isLocal: true, isDefinition: true)
!2514 = !DIGlobalVariableExpression(var: !2515, expr: !DIExpression())
!2515 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 134, type: !603, isLocal: true, isDefinition: true)
!2516 = !DIGlobalVariableExpression(var: !2517, expr: !DIExpression())
!2517 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 136, type: !52, isLocal: true, isDefinition: true)
!2518 = !DIGlobalVariableExpression(var: !2519, expr: !DIExpression())
!2519 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 149, type: !559, isLocal: true, isDefinition: true)
!2520 = !DIGlobalVariableExpression(var: !2521, expr: !DIExpression())
!2521 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 150, type: !976, isLocal: true, isDefinition: true)
!2522 = !DIGlobalVariableExpression(var: !2523, expr: !DIExpression())
!2523 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 151, type: !526, isLocal: true, isDefinition: true)
!2524 = !DIGlobalVariableExpression(var: !2525, expr: !DIExpression())
!2525 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 152, type: !1089, isLocal: true, isDefinition: true)
!2526 = !DIGlobalVariableExpression(var: !2527, expr: !DIExpression())
!2527 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 153, type: !575, isLocal: true, isDefinition: true)
!2528 = !DIGlobalVariableExpression(var: !2529, expr: !DIExpression())
!2529 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 154, type: !2317, isLocal: true, isDefinition: true)
!2530 = !DIGlobalVariableExpression(var: !2531, expr: !DIExpression())
!2531 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 155, type: !526, isLocal: true, isDefinition: true)
!2532 = !DIGlobalVariableExpression(var: !2533, expr: !DIExpression())
!2533 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 156, type: !2534, isLocal: true, isDefinition: true)
!2534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 464, elements: !254)
!2535 = !DIGlobalVariableExpression(var: !2536, expr: !DIExpression())
!2536 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 157, type: !1089, isLocal: true, isDefinition: true)
!2537 = !DIGlobalVariableExpression(var: !2538, expr: !DIExpression())
!2538 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 158, type: !2539, isLocal: true, isDefinition: true)
!2539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 480, elements: !2540)
!2540 = !{!2541}
!2541 = !DISubrange(count: 60)
!2542 = !DIGlobalVariableExpression(var: !2543, expr: !DIExpression())
!2543 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 159, type: !564, isLocal: true, isDefinition: true)
!2544 = !DIGlobalVariableExpression(var: !2545, expr: !DIExpression())
!2545 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 160, type: !2546, isLocal: true, isDefinition: true)
!2546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 584, elements: !2547)
!2547 = !{!2548}
!2548 = !DISubrange(count: 73)
!2549 = !DIGlobalVariableExpression(var: !2550, expr: !DIExpression())
!2550 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 161, type: !2551, isLocal: true, isDefinition: true)
!2551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 448, elements: !2552)
!2552 = !{!2553}
!2553 = !DISubrange(count: 56)
!2554 = !DIGlobalVariableExpression(var: !2555, expr: !DIExpression())
!2555 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 162, type: !2556, isLocal: true, isDefinition: true)
!2556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 592, elements: !2557)
!2557 = !{!2558}
!2558 = !DISubrange(count: 74)
!2559 = !DIGlobalVariableExpression(var: !2560, expr: !DIExpression())
!2560 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 163, type: !946, isLocal: true, isDefinition: true)
!2561 = !DIGlobalVariableExpression(var: !2562, expr: !DIExpression())
!2562 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 164, type: !2563, isLocal: true, isDefinition: true)
!2563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 456, elements: !2564)
!2564 = !{!2565}
!2565 = !DISubrange(count: 57)
!2566 = !DIGlobalVariableExpression(var: !2567, expr: !DIExpression())
!2567 = distinct !DIGlobalVariable(scope: null, file: !2438, line: 166, type: !651, isLocal: true, isDefinition: true)
!2568 = !DIGlobalVariableExpression(var: !2569, expr: !DIExpression())
!2569 = distinct !DIGlobalVariable(name: "uncompressed_mime_entries", scope: !2434, file: !2438, line: 30, type: !2570, isLocal: true, isDefinition: true)
!2570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 228272, elements: !2571)
!2571 = !{!2572}
!2572 = !DISubrange(count: 28534)
!2573 = !DIGlobalVariableExpression(var: !2574, expr: !DIExpression())
!2574 = distinct !DIGlobalVariable(name: "mime_entries", scope: !2434, file: !2438, line: 31, type: !2575, isLocal: true, isDefinition: true)
!2575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2576, size: 125568, elements: !2581)
!2576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mime_entry", file: !2577, line: 6, size: 128, elements: !2578)
!2577 = !DIFile(filename: "mime-types.h", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "c5f13e9374b63f60dcf37d804fa1d7b9")
!2578 = !{!2579, !2580}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "extension", scope: !2576, file: !2577, line: 7, baseType: !480, size: 64)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2576, file: !2577, line: 8, baseType: !480, size: 64, offset: 64)
!2581 = !{!2582}
!2582 = !DISubrange(count: 981)
!2583 = !DIGlobalVariableExpression(var: !2584, expr: !DIExpression())
!2584 = distinct !DIGlobalVariable(name: "mime_entries_compressed", scope: !2434, file: !2577, line: 10, type: !2585, isLocal: true, isDefinition: true)
!2585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15, size: 60112, elements: !2586)
!2586 = !{!2587}
!2587 = !DISubrange(count: 7514)
!2588 = !DIGlobalVariableExpression(var: !2589, expr: !DIExpression())
!2589 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 818, type: !193, isLocal: true, isDefinition: true)
!2590 = !DIFile(filename: "common/lwan-template.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "7372188dcf77bb3cf11a46be7f285c7a")
!2591 = !DIGlobalVariableExpression(var: !2592, expr: !DIExpression())
!2592 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 848, type: !166, isLocal: true, isDefinition: true)
!2593 = !DIGlobalVariableExpression(var: !2594, expr: !DIExpression())
!2594 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 850, type: !166, isLocal: true, isDefinition: true)
!2595 = !DIGlobalVariableExpression(var: !2596, expr: !DIExpression())
!2596 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 852, type: !110, isLocal: true, isDefinition: true)
!2597 = !DIGlobalVariableExpression(var: !2598, expr: !DIExpression())
!2598 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 854, type: !505, isLocal: true, isDefinition: true)
!2599 = !DIGlobalVariableExpression(var: !2600, expr: !DIExpression())
!2600 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 856, type: !505, isLocal: true, isDefinition: true)
!2601 = !DIGlobalVariableExpression(var: !2602, expr: !DIExpression())
!2602 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 858, type: !505, isLocal: true, isDefinition: true)
!2603 = !DIGlobalVariableExpression(var: !2604, expr: !DIExpression())
!2604 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 1147, type: !1632, isLocal: true, isDefinition: true)
!2605 = !DIGlobalVariableExpression(var: !2606, expr: !DIExpression())
!2606 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 1147, type: !936, isLocal: true, isDefinition: true)
!2607 = !DIGlobalVariableExpression(var: !2608, expr: !DIExpression())
!2608 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 1147, type: !505, isLocal: true, isDefinition: true)
!2609 = !DIGlobalVariableExpression(var: !2610, expr: !DIExpression())
!2610 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 783, type: !152, isLocal: true, isDefinition: true)
!2611 = !DIGlobalVariableExpression(var: !2612, expr: !DIExpression())
!2612 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 690, type: !603, isLocal: true, isDefinition: true)
!2613 = !DIGlobalVariableExpression(var: !2614, expr: !DIExpression())
!2614 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 698, type: !984, isLocal: true, isDefinition: true)
!2615 = !DIGlobalVariableExpression(var: !2616, expr: !DIExpression())
!2616 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 504, type: !155, isLocal: true, isDefinition: true)
!2617 = !DIGlobalVariableExpression(var: !2618, expr: !DIExpression())
!2618 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 504, type: !955, isLocal: true, isDefinition: true)
!2619 = !DIGlobalVariableExpression(var: !2620, expr: !DIExpression())
!2620 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 745, type: !228, isLocal: true, isDefinition: true)
!2621 = !DIGlobalVariableExpression(var: !2622, expr: !DIExpression())
!2622 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 650, type: !578, isLocal: true, isDefinition: true)
!2623 = !DIGlobalVariableExpression(var: !2624, expr: !DIExpression())
!2624 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 655, type: !939, isLocal: true, isDefinition: true)
!2625 = !DIGlobalVariableExpression(var: !2626, expr: !DIExpression())
!2626 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 656, type: !512, isLocal: true, isDefinition: true)
!2627 = !DIGlobalVariableExpression(var: !2628, expr: !DIExpression())
!2628 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 572, type: !512, isLocal: true, isDefinition: true)
!2629 = !DIGlobalVariableExpression(var: !2630, expr: !DIExpression())
!2630 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 585, type: !213, isLocal: true, isDefinition: true)
!2631 = !DIGlobalVariableExpression(var: !2632, expr: !DIExpression())
!2632 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 535, type: !236, isLocal: true, isDefinition: true)
!2633 = !DIGlobalVariableExpression(var: !2634, expr: !DIExpression())
!2634 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 549, type: !575, isLocal: true, isDefinition: true)
!2635 = !DIGlobalVariableExpression(var: !2636, expr: !DIExpression())
!2636 = distinct !DIGlobalVariable(name: "item_type_str", scope: !2637, file: !2590, line: 85, type: !2849, isLocal: true, isDefinition: true)
!2637 = distinct !DICompileUnit(language: DW_LANG_C11, file: !2638, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2639, retainedTypes: !2690, globals: !2739, splitDebugInlining: false, nameTableKind: None)
!2638 = !DIFile(filename: "/home/raj/lwan/common/lwan-template.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "7372188dcf77bb3cf11a46be7f285c7a")
!2639 = !{!2640, !2653, !2659, !2675}
!2640 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "action", file: !2590, line: 47, baseType: !28, size: 32, elements: !2641)
!2641 = !{!2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652}
!2642 = !DIEnumerator(name: "ACTION_APPEND", value: 0)
!2643 = !DIEnumerator(name: "ACTION_APPEND_CHAR", value: 1)
!2644 = !DIEnumerator(name: "ACTION_VARIABLE", value: 2)
!2645 = !DIEnumerator(name: "ACTION_VARIABLE_STR", value: 3)
!2646 = !DIEnumerator(name: "ACTION_VARIABLE_STR_ESCAPE", value: 4)
!2647 = !DIEnumerator(name: "ACTION_START_ITER", value: 5)
!2648 = !DIEnumerator(name: "ACTION_END_ITER", value: 6)
!2649 = !DIEnumerator(name: "ACTION_IF_VARIABLE_NOT_EMPTY", value: 7)
!2650 = !DIEnumerator(name: "ACTION_END_IF_VARIABLE_NOT_EMPTY", value: 8)
!2651 = !DIEnumerator(name: "ACTION_APPLY_TPL", value: 9)
!2652 = !DIEnumerator(name: "ACTION_LAST", value: 10)
!2653 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "flags", file: !2590, line: 61, baseType: !37, size: 32, elements: !2654)
!2654 = !{!2655, !2656, !2657, !2658}
!2655 = !DIEnumerator(name: "FLAGS_ALL", value: -1)
!2656 = !DIEnumerator(name: "FLAGS_NEGATE", value: 1)
!2657 = !DIEnumerator(name: "FLAGS_QUOTE", value: 2)
!2658 = !DIEnumerator(name: "FLAGS_NO_FREE", value: 4)
!2659 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "item_type", file: !2590, line: 68, baseType: !28, size: 32, elements: !2660)
!2660 = !{!2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674}
!2661 = !DIEnumerator(name: "ITEM_ERROR", value: 0)
!2662 = !DIEnumerator(name: "ITEM_EOF", value: 1)
!2663 = !DIEnumerator(name: "ITEM_IDENTIFIER", value: 2)
!2664 = !DIEnumerator(name: "ITEM_LEFT_META", value: 3)
!2665 = !DIEnumerator(name: "ITEM_HASH", value: 4)
!2666 = !DIEnumerator(name: "ITEM_RIGHT_META", value: 5)
!2667 = !DIEnumerator(name: "ITEM_TEXT", value: 6)
!2668 = !DIEnumerator(name: "ITEM_SLASH", value: 7)
!2669 = !DIEnumerator(name: "ITEM_QUESTION_MARK", value: 8)
!2670 = !DIEnumerator(name: "ITEM_HAT", value: 9)
!2671 = !DIEnumerator(name: "ITEM_GREATER_THAN", value: 10)
!2672 = !DIEnumerator(name: "ITEM_OPEN_CURLY_BRACE", value: 11)
!2673 = !DIEnumerator(name: "ITEM_CLOSE_CURLY_BRACE", value: 12)
!2674 = !DIEnumerator(name: "TOTAL_ITEMS", value: 13)
!2675 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2676, line: 46, baseType: !28, size: 32, elements: !2677)
!2676 = !DIFile(filename: "/usr/include/ctype.h", directory: "", checksumkind: CSK_MD5, checksum: "3ab3dd7fdf2578005732722ee2393e59")
!2677 = !{!2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689}
!2678 = !DIEnumerator(name: "_ISupper", value: 256)
!2679 = !DIEnumerator(name: "_ISlower", value: 512)
!2680 = !DIEnumerator(name: "_ISalpha", value: 1024)
!2681 = !DIEnumerator(name: "_ISdigit", value: 2048)
!2682 = !DIEnumerator(name: "_ISxdigit", value: 4096)
!2683 = !DIEnumerator(name: "_ISspace", value: 8192)
!2684 = !DIEnumerator(name: "_ISprint", value: 16384)
!2685 = !DIEnumerator(name: "_ISgraph", value: 32768)
!2686 = !DIEnumerator(name: "_ISblank", value: 1)
!2687 = !DIEnumerator(name: "_IScntrl", value: 2)
!2688 = !DIEnumerator(name: "_ISpunct", value: 4)
!2689 = !DIEnumerator(name: "_ISalnum", value: 8)
!2690 = !{!2691, !2692, !2694, !2695, !5, !6, !2696, !61, !37, !2697, !2700, !413, !2707, !1502, !2718, !47, !2733}
!2691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !37, size: 64)
!2692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2693, size: 64)
!2693 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 64)
!2695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 64)
!2696 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !42, line: 90, baseType: !8)
!2697 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !2698, line: 77, baseType: !2699)
!2698 = !DIFile(filename: "/usr/include/stdio.h", directory: "", checksumkind: CSK_MD5, checksum: "f31eefcc3f15835fc5a4023a625cf609")
!2699 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !69, line: 194, baseType: !40)
!2700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2701, size: 64)
!2701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stacked_item", file: !2590, line: 150, size: 320, elements: !2702)
!2702 = !{!2703, !2709}
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2701, file: !2590, line: 151, baseType: !2704, size: 128)
!2704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_node", file: !313, line: 191, size: 128, elements: !2705)
!2705 = !{!2706, !2708}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2704, file: !313, line: 193, baseType: !2707, size: 64)
!2707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2704, size: 64)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2704, file: !313, line: 193, baseType: !2707, size: 64, offset: 64)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "item", scope: !2701, file: !2590, line: 152, baseType: !2710, size: 192, offset: 128)
!2710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "item", file: !2590, line: 117, size: 192, elements: !2711)
!2711 = !{!2712, !2713}
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2710, file: !2590, line: 118, baseType: !2659, size: 32)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2710, file: !2590, line: 122, baseType: !2714, size: 128, offset: 64)
!2714 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2710, file: !2590, line: 119, size: 128, elements: !2715)
!2715 = !{!2716, !2717}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2714, file: !2590, line: 120, baseType: !480, size: 64)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2714, file: !2590, line: 121, baseType: !6, size: 64, offset: 64)
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2719, size: 64)
!2719 = !DIDerivedType(tag: DW_TAG_typedef, name: "strbuf_t", file: !472, line: 25, baseType: !2720)
!2720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "strbuf_t_", file: !472, line: 27, size: 256, elements: !2721)
!2721 = !{!2722, !2727, !2732}
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2720, file: !472, line: 31, baseType: !2723, size: 64)
!2723 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2720, file: !472, line: 28, size: 64, elements: !2724)
!2724 = !{!2725, !2726}
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2723, file: !472, line: 29, baseType: !61, size: 64)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "static_buffer", scope: !2723, file: !472, line: 30, baseType: !480, size: 64)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2720, file: !472, line: 34, baseType: !2728, size: 128, offset: 64)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2720, file: !472, line: 32, size: 128, elements: !2729)
!2729 = !{!2730, !2731}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !2728, file: !472, line: 33, baseType: !6, size: 64)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2728, file: !472, line: 33, baseType: !6, size: 64, offset: 64)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2720, file: !472, line: 35, baseType: !28, size: 32, offset: 192)
!2733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2734, size: 64)
!2734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "chunk", file: !2590, line: 101, size: 192, elements: !2735)
!2735 = !{!2736, !2737, !2738}
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2734, file: !2590, line: 102, baseType: !2640, size: 32)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2734, file: !2590, line: 103, baseType: !5, size: 64, offset: 64)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2734, file: !2590, line: 104, baseType: !2653, size: 32, offset: 128)
!2739 = !{!2588, !2591, !2593, !2595, !2597, !2599, !2601, !2603, !2605, !2607, !2740, !2609, !2611, !2613, !2615, !2617, !2619, !2621, !2623, !2625, !2627, !2629, !2631, !2633, !2742, !2744, !2746, !2748, !2750, !2752, !2754, !2756, !2758, !2760, !2762, !2764, !2766, !2635, !2768, !2770, !2773, !2775, !2778, !2780, !2782, !2784, !2787, !2789, !2791, !2793, !2795, !2797, !2799, !2801, !2803, !2808, !2813, !2815, !2817, !2819, !2821, !2823, !2825, !2830, !2843, !2845, !2847}
!2740 = !DIGlobalVariableExpression(var: !2741, expr: !DIExpression(DW_OP_constu, 16, DW_OP_stack_value))
!2741 = distinct !DIGlobalVariable(name: "array_increment_step", scope: !2637, file: !2590, line: 160, type: !73, isLocal: true, isDefinition: true)
!2742 = !DIGlobalVariableExpression(var: !2743, expr: !DIExpression())
!2743 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 86, type: !110, isLocal: true, isDefinition: true)
!2744 = !DIGlobalVariableExpression(var: !2745, expr: !DIExpression())
!2745 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 87, type: !137, isLocal: true, isDefinition: true)
!2746 = !DIGlobalVariableExpression(var: !2747, expr: !DIExpression())
!2747 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 88, type: !1012, isLocal: true, isDefinition: true)
!2748 = !DIGlobalVariableExpression(var: !2749, expr: !DIExpression())
!2749 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 89, type: !654, isLocal: true, isDefinition: true)
!2750 = !DIGlobalVariableExpression(var: !2751, expr: !DIExpression())
!2751 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 90, type: !166, isLocal: true, isDefinition: true)
!2752 = !DIGlobalVariableExpression(var: !2753, expr: !DIExpression())
!2753 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 91, type: !1012, isLocal: true, isDefinition: true)
!2754 = !DIGlobalVariableExpression(var: !2755, expr: !DIExpression())
!2755 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 92, type: !166, isLocal: true, isDefinition: true)
!2756 = !DIGlobalVariableExpression(var: !2757, expr: !DIExpression())
!2757 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 93, type: !110, isLocal: true, isDefinition: true)
!2758 = !DIGlobalVariableExpression(var: !2759, expr: !DIExpression())
!2759 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 94, type: !152, isLocal: true, isDefinition: true)
!2760 = !DIGlobalVariableExpression(var: !2761, expr: !DIExpression())
!2761 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 95, type: !137, isLocal: true, isDefinition: true)
!2762 = !DIGlobalVariableExpression(var: !2763, expr: !DIExpression())
!2763 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 96, type: !46, isLocal: true, isDefinition: true)
!2764 = !DIGlobalVariableExpression(var: !2765, expr: !DIExpression())
!2765 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 97, type: !158, isLocal: true, isDefinition: true)
!2766 = !DIGlobalVariableExpression(var: !2767, expr: !DIExpression())
!2767 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 98, type: !984, isLocal: true, isDefinition: true)
!2768 = !DIGlobalVariableExpression(var: !2769, expr: !DIExpression())
!2769 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 236, type: !137, isLocal: true, isDefinition: true)
!2770 = !DIGlobalVariableExpression(var: !2771, expr: !DIExpression())
!2771 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 236, type: !2772, isLocal: true, isDefinition: true)
!2772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 264, elements: !565)
!2773 = !DIGlobalVariableExpression(var: !2774, expr: !DIExpression())
!2774 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 615, type: !213, isLocal: true, isDefinition: true)
!2775 = !DIGlobalVariableExpression(var: !2776, expr: !DIExpression())
!2776 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 521, type: !2777, isLocal: true, isDefinition: true)
!2777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 88, elements: !1013)
!2778 = !DIGlobalVariableExpression(var: !2779, expr: !DIExpression())
!2779 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 521, type: !430, isLocal: true, isDefinition: true)
!2780 = !DIGlobalVariableExpression(var: !2781, expr: !DIExpression())
!2781 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 480, type: !521, isLocal: true, isDefinition: true)
!2782 = !DIGlobalVariableExpression(var: !2783, expr: !DIExpression())
!2783 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 452, type: !564, isLocal: true, isDefinition: true)
!2784 = !DIGlobalVariableExpression(var: !2785, expr: !DIExpression())
!2785 = distinct !DIGlobalVariable(name: "left_meta", scope: !2637, file: !2590, line: 162, type: !2786, isLocal: true, isDefinition: true)
!2786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 24, elements: !194)
!2787 = !DIGlobalVariableExpression(var: !2788, expr: !DIExpression())
!2788 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 380, type: !1065, isLocal: true, isDefinition: true)
!2789 = !DIGlobalVariableExpression(var: !2790, expr: !DIExpression())
!2790 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 397, type: !575, isLocal: true, isDefinition: true)
!2791 = !DIGlobalVariableExpression(var: !2792, expr: !DIExpression())
!2792 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 399, type: !93, isLocal: true, isDefinition: true)
!2793 = !DIGlobalVariableExpression(var: !2794, expr: !DIExpression())
!2794 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 419, type: !213, isLocal: true, isDefinition: true)
!2795 = !DIGlobalVariableExpression(var: !2796, expr: !DIExpression())
!2796 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 363, type: !208, isLocal: true, isDefinition: true)
!2797 = !DIGlobalVariableExpression(var: !2798, expr: !DIExpression())
!2798 = distinct !DIGlobalVariable(name: "right_meta", scope: !2637, file: !2590, line: 163, type: !2786, isLocal: true, isDefinition: true)
!2799 = !DIGlobalVariableExpression(var: !2800, expr: !DIExpression())
!2800 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 1041, type: !2344, isLocal: true, isDefinition: true)
!2801 = !DIGlobalVariableExpression(var: !2802, expr: !DIExpression())
!2802 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 1041, type: !1005, isLocal: true, isDefinition: true)
!2803 = !DIGlobalVariableExpression(var: !2804, expr: !DIExpression())
!2804 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 1051, type: !2805, isLocal: true, isDefinition: true)
!2805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 440, elements: !2806)
!2806 = !{!2807}
!2807 = !DISubrange(count: 55)
!2808 = !DIGlobalVariableExpression(var: !2809, expr: !DIExpression())
!2809 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 1062, type: !2810, isLocal: true, isDefinition: true)
!2810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 472, elements: !2811)
!2811 = !{!2812}
!2812 = !DISubrange(count: 59)
!2813 = !DIGlobalVariableExpression(var: !2814, expr: !DIExpression())
!2814 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 1071, type: !564, isLocal: true, isDefinition: true)
!2815 = !DIGlobalVariableExpression(var: !2816, expr: !DIExpression())
!2816 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 1075, type: !430, isLocal: true, isDefinition: true)
!2817 = !DIGlobalVariableExpression(var: !2818, expr: !DIExpression())
!2818 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 944, type: !936, isLocal: true, isDefinition: true)
!2819 = !DIGlobalVariableExpression(var: !2820, expr: !DIExpression())
!2820 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 944, type: !505, isLocal: true, isDefinition: true)
!2821 = !DIGlobalVariableExpression(var: !2822, expr: !DIExpression())
!2822 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 989, type: !1632, isLocal: true, isDefinition: true)
!2823 = !DIGlobalVariableExpression(var: !2824, expr: !DIExpression())
!2824 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 992, type: !1029, isLocal: true, isDefinition: true)
!2825 = !DIGlobalVariableExpression(var: !2826, expr: !DIExpression())
!2826 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 1001, type: !2827, isLocal: true, isDefinition: true)
!2827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 536, elements: !2828)
!2828 = !{!2829}
!2829 = !DISubrange(count: 67)
!2830 = !DIGlobalVariableExpression(var: !2831, expr: !DIExpression())
!2831 = distinct !DIGlobalVariable(name: "dispatch_table", scope: !2832, file: !2590, line: 1159, type: !2841, isLocal: true, isDefinition: true)
!2832 = distinct !DISubprogram(name: "apply_until", scope: !2590, file: !2590, line: 1156, type: !2833, scopeLine: 1158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!2833 = !DISubroutineType(types: !2834)
!2834 = !{!2733, !2835, !2733, !2718, !5, !5}
!2835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2836, size: 64)
!2836 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_tpl_t", file: !1831, line: 25, baseType: !2837)
!2837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_tpl_t_", file: !2590, line: 107, size: 128, elements: !2838)
!2838 = !{!2839, !2840}
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "chunks", scope: !2837, file: !2590, line: 108, baseType: !2733, size: 64)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_size", scope: !2837, file: !2590, line: 109, baseType: !6, size: 64, offset: 64)
!2841 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2842, size: 704, elements: !1013)
!2842 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !38)
!2843 = !DIGlobalVariableExpression(var: !2844, expr: !DIExpression())
!2844 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 1234, type: !981, isLocal: true, isDefinition: true)
!2845 = !DIGlobalVariableExpression(var: !2846, expr: !DIExpression())
!2846 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 1234, type: !125, isLocal: true, isDefinition: true)
!2847 = !DIGlobalVariableExpression(var: !2848, expr: !DIExpression())
!2848 = distinct !DIGlobalVariable(scope: null, file: !2590, line: 1268, type: !939, isLocal: true, isDefinition: true)
!2849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !480, size: 832, elements: !48)
!2850 = !DIGlobalVariableExpression(var: !2851, expr: !DIExpression())
!2851 = distinct !DIGlobalVariable(scope: null, file: !2852, line: 241, type: !171, isLocal: true, isDefinition: true)
!2852 = !DIFile(filename: "common/lwan-thread.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "9d2309d4fac6f8cdf7410220b7094774")
!2853 = !DIGlobalVariableExpression(var: !2854, expr: !DIExpression())
!2854 = distinct !DIGlobalVariable(scope: null, file: !2852, line: 241, type: !572, isLocal: true, isDefinition: true)
!2855 = !DIGlobalVariableExpression(var: !2856, expr: !DIExpression())
!2856 = distinct !DIGlobalVariable(scope: null, file: !2852, line: 241, type: !559, isLocal: true, isDefinition: true)
!2857 = !DIGlobalVariableExpression(var: !2858, expr: !DIExpression())
!2858 = distinct !DIGlobalVariable(scope: null, file: !2852, line: 245, type: !208, isLocal: true, isDefinition: true)
!2859 = !DIGlobalVariableExpression(var: !2860, expr: !DIExpression())
!2860 = distinct !DIGlobalVariable(scope: null, file: !2852, line: 246, type: !559, isLocal: true, isDefinition: true)
!2861 = !DIGlobalVariableExpression(var: !2862, expr: !DIExpression())
!2862 = distinct !DIGlobalVariable(scope: null, file: !2852, line: 408, type: !1645, isLocal: true, isDefinition: true)
!2863 = !DIGlobalVariableExpression(var: !2864, expr: !DIExpression())
!2864 = distinct !DIGlobalVariable(scope: null, file: !2852, line: 408, type: !110, isLocal: true, isDefinition: true)
!2865 = !DIGlobalVariableExpression(var: !2866, expr: !DIExpression())
!2866 = distinct !DIGlobalVariable(scope: null, file: !2852, line: 414, type: !155, isLocal: true, isDefinition: true)
!2867 = !DIGlobalVariableExpression(var: !2868, expr: !DIExpression())
!2868 = distinct !DIGlobalVariable(scope: null, file: !2852, line: 414, type: !236, isLocal: true, isDefinition: true)
!2869 = !DIGlobalVariableExpression(var: !2870, expr: !DIExpression())
!2870 = distinct !DIGlobalVariable(scope: null, file: !2852, line: 418, type: !1632, isLocal: true, isDefinition: true)
!2871 = !DIGlobalVariableExpression(var: !2872, expr: !DIExpression())
!2872 = distinct !DIGlobalVariable(scope: null, file: !2852, line: 427, type: !572, isLocal: true, isDefinition: true)
!2873 = !DIGlobalVariableExpression(var: !2874, expr: !DIExpression())
!2874 = distinct !DIGlobalVariable(scope: null, file: !2852, line: 427, type: !158, isLocal: true, isDefinition: true)
!2875 = !DIGlobalVariableExpression(var: !2876, expr: !DIExpression())
!2876 = distinct !DIGlobalVariable(scope: null, file: !2852, line: 376, type: !120, isLocal: true, isDefinition: true)
!2877 = !DIGlobalVariableExpression(var: !2878, expr: !DIExpression())
!2878 = distinct !DIGlobalVariable(scope: null, file: !2852, line: 376, type: !46, isLocal: true, isDefinition: true)
!2879 = !DIGlobalVariableExpression(var: !2880, expr: !DIExpression())
!2880 = distinct !DIGlobalVariable(scope: null, file: !2852, line: 379, type: !960, isLocal: true, isDefinition: true)
!2881 = !DIGlobalVariableExpression(var: !2882, expr: !DIExpression())
!2882 = distinct !DIGlobalVariable(scope: null, file: !2852, line: 382, type: !158, isLocal: true, isDefinition: true)
!2883 = !DIGlobalVariableExpression(var: !2884, expr: !DIExpression())
!2884 = distinct !DIGlobalVariable(scope: null, file: !2852, line: 385, type: !1029, isLocal: true, isDefinition: true)
!2885 = !DIGlobalVariableExpression(var: !2886, expr: !DIExpression())
!2886 = distinct !DIGlobalVariable(scope: null, file: !2852, line: 388, type: !166, isLocal: true, isDefinition: true)
!2887 = !DIGlobalVariableExpression(var: !2888, expr: !DIExpression())
!2888 = distinct !DIGlobalVariable(scope: null, file: !2852, line: 392, type: !654, isLocal: true, isDefinition: true)
!2889 = !DIGlobalVariableExpression(var: !2890, expr: !DIExpression())
!2890 = distinct !DIGlobalVariable(scope: null, file: !2852, line: 395, type: !578, isLocal: true, isDefinition: true)
!2891 = !DIGlobalVariableExpression(var: !2892, expr: !DIExpression())
!2892 = distinct !DIGlobalVariable(scope: null, file: !2852, line: 398, type: !236, isLocal: true, isDefinition: true)
!2893 = !DIGlobalVariableExpression(var: !2894, expr: !DIExpression())
!2894 = distinct !DIGlobalVariable(scope: null, file: !2852, line: 312, type: !965, isLocal: true, isDefinition: true)
!2895 = !DIGlobalVariableExpression(var: !2896, expr: !DIExpression())
!2896 = distinct !DIGlobalVariable(scope: null, file: !2852, line: 312, type: !218, isLocal: true, isDefinition: true)
!2897 = !DIGlobalVariableExpression(var: !2898, expr: !DIExpression())
!2898 = distinct !DIGlobalVariable(scope: null, file: !2852, line: 317, type: !575, isLocal: true, isDefinition: true)
!2899 = !DIGlobalVariableExpression(var: !2900, expr: !DIExpression())
!2900 = distinct !DIGlobalVariable(scope: null, file: !2852, line: 285, type: !936, isLocal: true, isDefinition: true)
!2901 = !DIGlobalVariableExpression(var: !2902, expr: !DIExpression())
!2902 = distinct !DIGlobalVariable(scope: null, file: !2852, line: 285, type: !166, isLocal: true, isDefinition: true)
!2903 = !DIGlobalVariableExpression(var: !2904, expr: !DIExpression())
!2904 = distinct !DIGlobalVariable(name: "events_by_write_flag", scope: !2905, file: !2852, line: 39, type: !2955, isLocal: true, isDefinition: true)
!2905 = distinct !DICompileUnit(language: DW_LANG_C11, file: !2906, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2907, retainedTypes: !2939, globals: !2940, splitDebugInlining: false, nameTableKind: None)
!2906 = !DIFile(filename: "/home/raj/lwan/common/lwan-thread.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "9d2309d4fac6f8cdf7410220b7094774")
!2907 = !{!274, !2908, !2912, !2917, !2921, !261, !282, !1448}
!2908 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2909, line: 23, baseType: !28, size: 32, elements: !2910)
!2909 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/epoll.h", directory: "", checksumkind: CSK_MD5, checksum: "5dde4c8e84480c014305a04d7ba11b15")
!2910 = !{!2911}
!2911 = !DIEnumerator(name: "EPOLL_CLOEXEC", value: 524288)
!2912 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2913, line: 134, baseType: !28, size: 32, elements: !2914)
!2913 = !DIFile(filename: "/usr/include/pthread.h", directory: "", checksumkind: CSK_MD5, checksum: "5205981c6f80cc3dc1e81231df63d8ef")
!2914 = !{!2915, !2916}
!2915 = !DIEnumerator(name: "PTHREAD_SCOPE_SYSTEM", value: 0)
!2916 = !DIEnumerator(name: "PTHREAD_SCOPE_PROCESS", value: 1)
!2917 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2913, line: 37, baseType: !28, size: 32, elements: !2918)
!2918 = !{!2919, !2920}
!2919 = !DIEnumerator(name: "PTHREAD_CREATE_JOINABLE", value: 0)
!2920 = !DIEnumerator(name: "PTHREAD_CREATE_DETACHED", value: 1)
!2921 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "EPOLL_EVENTS", file: !2922, line: 35, baseType: !28, size: 32, elements: !2923)
!2922 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/epoll.h", directory: "", checksumkind: CSK_MD5, checksum: "0986da711185ef074164bfe0527c7631")
!2923 = !{!2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938}
!2924 = !DIEnumerator(name: "EPOLLIN", value: 1)
!2925 = !DIEnumerator(name: "EPOLLPRI", value: 2)
!2926 = !DIEnumerator(name: "EPOLLOUT", value: 4)
!2927 = !DIEnumerator(name: "EPOLLRDNORM", value: 64)
!2928 = !DIEnumerator(name: "EPOLLRDBAND", value: 128)
!2929 = !DIEnumerator(name: "EPOLLWRNORM", value: 256)
!2930 = !DIEnumerator(name: "EPOLLWRBAND", value: 512)
!2931 = !DIEnumerator(name: "EPOLLMSG", value: 1024)
!2932 = !DIEnumerator(name: "EPOLLERR", value: 8)
!2933 = !DIEnumerator(name: "EPOLLHUP", value: 16)
!2934 = !DIEnumerator(name: "EPOLLRDHUP", value: 8192)
!2935 = !DIEnumerator(name: "EPOLLEXCLUSIVE", value: 268435456)
!2936 = !DIEnumerator(name: "EPOLLWAKEUP", value: 536870912)
!2937 = !DIEnumerator(name: "EPOLLONESHOT", value: 1073741824)
!2938 = !DIEnumerator(name: "EPOLLET", value: 2147483648, isUnsigned: true)
!2939 = !{!6, !37, !413, !1502, !5, !322, !28}
!2940 = !{!2850, !2853, !2855, !2857, !2859, !2861, !2863, !2865, !2867, !2869, !2871, !2873, !2875, !2877, !2879, !2881, !2883, !2885, !2887, !2889, !2891, !2893, !2895, !2897, !2899, !2901, !2903, !2941, !2943, !2946, !2948, !2953}
!2941 = !DIGlobalVariableExpression(var: !2942, expr: !DIExpression())
!2942 = distinct !DIGlobalVariable(scope: null, file: !2852, line: 158, type: !1029, isLocal: true, isDefinition: true)
!2943 = !DIGlobalVariableExpression(var: !2944, expr: !DIExpression())
!2944 = distinct !DIGlobalVariable(scope: null, file: !2852, line: 158, type: !2945, isLocal: true, isDefinition: true)
!2945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 280, elements: !94)
!2946 = !DIGlobalVariableExpression(var: !2947, expr: !DIExpression())
!2947 = distinct !DIGlobalVariable(scope: null, file: !2852, line: 177, type: !1012, isLocal: true, isDefinition: true)
!2948 = !DIGlobalVariableExpression(var: !2949, expr: !DIExpression())
!2949 = distinct !DIGlobalVariable(scope: null, file: !2852, line: 177, type: !2950, isLocal: true, isDefinition: true)
!2950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 616, elements: !2951)
!2951 = !{!2952}
!2952 = !DISubrange(count: 77)
!2953 = !DIGlobalVariableExpression(var: !2954, expr: !DIExpression())
!2954 = distinct !DIGlobalVariable(scope: null, file: !2852, line: 212, type: !936, isLocal: true, isDefinition: true)
!2955 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2956, size: 64, elements: !189)
!2956 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !66)
!2957 = !DIGlobalVariableExpression(var: !2958, expr: !DIExpression())
!2958 = distinct !DIGlobalVariable(scope: null, file: !2959, line: 85, type: !228, isLocal: true, isDefinition: true)
!2959 = !DIFile(filename: "common/lwan-trie.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "2e559976bbcd6644de57f46fa6795f72")
!2960 = !DIGlobalVariableExpression(var: !2961, expr: !DIExpression())
!2961 = distinct !DIGlobalVariable(scope: null, file: !2959, line: 85, type: !120, isLocal: true, isDefinition: true)
!2962 = !DIGlobalVariableExpression(var: !2963, expr: !DIExpression())
!2963 = distinct !DIGlobalVariable(scope: null, file: !2959, line: 85, type: !505, isLocal: true, isDefinition: true)
!2964 = !DIGlobalVariableExpression(var: !2965, expr: !DIExpression())
!2965 = distinct !DIGlobalVariable(scope: null, file: !2959, line: 97, type: !505, isLocal: true, isDefinition: true)
!2966 = !DIGlobalVariableExpression(var: !2967, expr: !DIExpression())
!2967 = distinct !DIGlobalVariable(name: "seed_value", scope: !2968, file: !2979, line: 40, type: !66, isLocal: true, isDefinition: true)
!2968 = distinct !DICompileUnit(language: DW_LANG_C11, file: !2969, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2970, globals: !2978, splitDebugInlining: false, nameTableKind: None)
!2969 = !DIFile(filename: "/home/raj/lwan/common/murmur3.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "65cd04e986612dce327517efaac702f9")
!2970 = !{!61, !28, !2971, !2973, !2975, !2977}
!2971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2972, size: 64)
!2972 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1541)
!2973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2974, size: 64)
!2974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2975)
!2975 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !67, line: 27, baseType: !2976)
!2976 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !69, line: 45, baseType: !8)
!2977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2975, size: 64)
!2978 = !{!2966}
!2979 = !DIFile(filename: "common/murmur3.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "65cd04e986612dce327517efaac702f9")
!2980 = !DIGlobalVariableExpression(var: !2981, expr: !DIExpression())
!2981 = distinct !DIGlobalVariable(scope: null, file: !2982, line: 188, type: !1632, isLocal: true, isDefinition: true)
!2982 = !DIFile(filename: "common/realpathat.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "90270fbee7ce027e07b9bf25029a1a78")
!2983 = !DIGlobalVariableExpression(var: !2984, expr: !DIExpression())
!2984 = distinct !DIGlobalVariable(scope: null, file: !2982, line: 188, type: !93, isLocal: true, isDefinition: true)
!2985 = !DIGlobalVariableExpression(var: !2986, expr: !DIExpression())
!2986 = distinct !DIGlobalVariable(scope: null, file: !2982, line: 188, type: !2987, isLocal: true, isDefinition: true)
!2987 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 544, elements: !2988)
!2988 = !{!2989}
!2989 = !DISubrange(count: 68)
!2990 = !DIGlobalVariableExpression(var: !2991, expr: !DIExpression())
!2991 = distinct !DIGlobalVariable(scope: null, file: !2992, line: 46, type: !1012, isLocal: true, isDefinition: true)
!2992 = !DIFile(filename: "common/sd-daemon.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "de3fec4ce7d1f236ce6178a1d0e969ca")
!2993 = !DIGlobalVariableExpression(var: !2994, expr: !DIExpression())
!2994 = distinct !DIGlobalVariable(scope: null, file: !2992, line: 71, type: !1012, isLocal: true, isDefinition: true)
!2995 = !DIGlobalVariableExpression(var: !2996, expr: !DIExpression())
!2996 = distinct !DIGlobalVariable(scope: null, file: !2992, line: 359, type: !152, isLocal: true, isDefinition: true)
!2997 = !DIGlobalVariableExpression(var: !2998, expr: !DIExpression())
!2998 = distinct !DIGlobalVariable(scope: null, file: !2992, line: 438, type: !236, isLocal: true, isDefinition: true)
!2999 = !DIGlobalVariableExpression(var: !3000, expr: !DIExpression())
!3000 = distinct !DIGlobalVariable(scope: null, file: !2992, line: 451, type: !46, isLocal: true, isDefinition: true)
!3001 = !DIGlobalVariableExpression(var: !3002, expr: !DIExpression())
!3002 = distinct !DIGlobalVariable(scope: null, file: !2992, line: 474, type: !152, isLocal: true, isDefinition: true)
!3003 = distinct !DICompileUnit(language: DW_LANG_C11, file: !3004, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3005, globals: !3015, splitDebugInlining: false, nameTableKind: None)
!3004 = !DIFile(filename: "/home/raj/lwan/common/list.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "0a5860268a1418537132a40f402b0afc")
!3005 = !{!3006, !3011, !5}
!3006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3007, size: 64)
!3007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_node", file: !313, line: 191, size: 128, elements: !3008)
!3008 = !{!3009, !3010}
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3007, file: !313, line: 193, baseType: !3006, size: 64)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3007, file: !313, line: 193, baseType: !3006, size: 64, offset: 64)
!3011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3012, size: 64)
!3012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !313, line: 208, size: 128, elements: !3013)
!3013 = !{!3014}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !3012, file: !313, line: 210, baseType: !3007, size: 128)
!3015 = !{!79}
!3016 = distinct !DICompileUnit(language: DW_LANG_C11, file: !3017, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3018, retainedTypes: !3024, globals: !3033, splitDebugInlining: false, nameTableKind: None)
!3017 = !DIFile(filename: "/home/raj/lwan/common/lwan-cache.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "f1aa9dd4cc8594b027bd5599ddc2fec4")
!3018 = !{!3019, !1448}
!3019 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !87, line: 35, baseType: !28, size: 32, elements: !3020)
!3020 = !{!3021, !3022, !3023}
!3021 = !DIEnumerator(name: "FLOATING", value: 1)
!3022 = !DIEnumerator(name: "TEMPORARY", value: 2)
!3023 = !DIEnumerator(name: "SHUTTING_DOWN", value: 1)
!3024 = !{!3025, !3028, !5, !61}
!3025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3026, size: 64)
!3026 = !DISubroutineType(types: !3027)
!3027 = !{null, !5, !5}
!3028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3029, size: 64)
!3029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_node", file: !313, line: 191, size: 128, elements: !3030)
!3030 = !{!3031, !3032}
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3029, file: !313, line: 193, baseType: !3028, size: 64)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3029, file: !313, line: 193, baseType: !3028, size: 64, offset: 64)
!3033 = !{!85, !91, !96, !101, !106, !108, !113, !118, !123, !128, !133, !135, !140, !142, !145, !150, !153, !156, !161}
!3034 = distinct !DICompileUnit(language: DW_LANG_C11, file: !3035, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3036, retainedTypes: !3037, globals: !3038, splitDebugInlining: false, nameTableKind: None)
!3035 = !DIFile(filename: "/home/raj/lwan/common/lwan-config.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "199ccadf79b83965963cdf65e7c49914")
!3036 = !{!300, !2675}
!3037 = !{!480, !37, !413, !61}
!3038 = !{!163, !169, !174, !179, !184, !186, !191, !196, !198, !200, !202, !204, !206, !211, !216, !221}
!3039 = distinct !DICompileUnit(language: DW_LANG_C11, file: !3040, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3041, globals: !3042, splitDebugInlining: false, nameTableKind: None)
!3040 = !DIFile(filename: "/home/raj/lwan/common/lwan-coro.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "f10099f62b8fec41343042e41e9eba52")
!3041 = !{!334, !2696, !5, !403}
!3042 = !{!223, !226, !231, !234, !239, !241, !246, !249, !251}
!3043 = distinct !DICompileUnit(language: DW_LANG_C11, file: !3044, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3045, retainedTypes: !3046, globals: !3051, splitDebugInlining: false, nameTableKind: None)
!3044 = !DIFile(filename: "/home/raj/lwan/common/lwan-io-wrappers.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "df65fc501e2089d1c77356ebe44cff47")
!3045 = !{!261, !274, !282, !1448}
!3046 = !{!403, !5, !3047, !3050, !61, !6, !2000}
!3047 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !3048, line: 267, baseType: !3049)
!3048 = !DIFile(filename: "/usr/include/unistd.h", directory: "", checksumkind: CSK_MD5, checksum: "ed37c2e6f30ba31a8b41e4d70547c39c")
!3049 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intptr_t", file: !69, line: 207, baseType: !40)
!3050 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !3048, line: 220, baseType: !2699)
!3051 = !{!3052, !3055, !531, !534, !536, !538, !543}
!3052 = !DIGlobalVariableExpression(var: !3053, expr: !DIExpression(DW_OP_constu, 5, DW_OP_stack_value))
!3053 = distinct !DIGlobalVariable(name: "MAX_FAILED_TRIES", scope: !3043, file: !533, line: 29, type: !3054, isLocal: true, isDefinition: true)
!3054 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !37)
!3055 = !DIGlobalVariableExpression(var: !3056, expr: !DIExpression(DW_OP_constu, 1400, DW_OP_stack_value))
!3056 = distinct !DIGlobalVariable(name: "BUFFER_SIZE", scope: !3043, file: !533, line: 30, type: !73, isLocal: true, isDefinition: true)
!3057 = distinct !DICompileUnit(language: DW_LANG_C11, file: !3058, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3059, retainedTypes: !3060, globals: !3061, splitDebugInlining: false, nameTableKind: None)
!3058 = !DIFile(filename: "/home/raj/lwan/common/lwan-socket.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "c18944055a3b887a7cad5341937765cf")
!3059 = !{!274, !672}
!3060 = !{!61}
!3061 = !{!2296, !2299, !2301, !2303, !2305, !2307, !2309, !2311, !2313, !2315, !2320, !2322, !2324, !2326, !2328, !2330, !2332, !2334, !2336, !2338, !2340, !2342, !2345, !2347, !2349, !2351, !2353, !2355, !2357}
!3062 = distinct !DICompileUnit(language: DW_LANG_C11, file: !3063, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3064, globals: !3065, splitDebugInlining: false, nameTableKind: None)
!3063 = !DIFile(filename: "/home/raj/lwan/common/lwan-trie.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "2e559976bbcd6644de57f46fa6795f72")
!3064 = !{!37, !6, !5}
!3065 = !{!2957, !2960, !2962, !2964}
!3066 = distinct !DICompileUnit(language: DW_LANG_C11, file: !3067, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3068, splitDebugInlining: false, nameTableKind: None)
!3067 = !DIFile(filename: "/home/raj/lwan/common/reallocarray.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "72caf594d7fe0d89f4073c86d2b69ce6")
!3068 = !{!5, !6}
!3069 = distinct !DICompileUnit(language: DW_LANG_C11, file: !3070, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3071, globals: !3072, splitDebugInlining: false, nameTableKind: None)
!3070 = !DIFile(filename: "/home/raj/lwan/common/realpathat.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "90270fbee7ce027e07b9bf25029a1a78")
!3071 = !{!5, !6, !61, !37, !40}
!3072 = !{!2980, !2983, !2985}
!3073 = distinct !DICompileUnit(language: DW_LANG_C11, file: !3074, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3075, retainedTypes: !3076, globals: !3081, splitDebugInlining: false, nameTableKind: None)
!3074 = !DIFile(filename: "/home/raj/lwan/common/sd-daemon.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "de3fec4ce7d1f236ce6178a1d0e969ca")
!3075 = !{!672, !1583}
!3076 = !{!3077, !37, !61, !3079}
!3077 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !462, line: 97, baseType: !3078)
!3078 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !69, line: 154, baseType: !37)
!3079 = !DIDerivedType(tag: DW_TAG_typedef, name: "socklen_t", file: !1505, line: 33, baseType: !3080)
!3080 = !DIDerivedType(tag: DW_TAG_typedef, name: "__socklen_t", file: !69, line: 210, baseType: !28)
!3081 = !{!2990, !2993, !2995, !2997, !2999, !3001}
!3082 = distinct !DICompileUnit(language: DW_LANG_C11, file: !3083, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3084, globals: !3085, splitDebugInlining: false, nameTableKind: None)
!3083 = !DIFile(filename: "/home/raj/lwan/common/strbuf.c", directory: "/home/raj/lwan/build", checksumkind: CSK_MD5, checksum: "501d053ee6f84a89407bb8f549366545")
!3084 = !{!37, !6}
!3085 = !{!3086, !3089, !3092}
!3086 = !DIGlobalVariableExpression(var: !3087, expr: !DIExpression(DW_OP_constu, 64, DW_OP_stack_value))
!3087 = distinct !DIGlobalVariable(name: "DEFAULT_BUF_SIZE", scope: !3082, file: !3088, line: 30, type: !73, isLocal: true, isDefinition: true)
!3088 = !DIFile(filename: "common/strbuf.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "501d053ee6f84a89407bb8f549366545")
!3089 = !DIGlobalVariableExpression(var: !3090, expr: !DIExpression(DW_OP_constu, 2, DW_OP_stack_value))
!3090 = distinct !DIGlobalVariable(name: "DYNAMICALLY_ALLOCATED", scope: !3082, file: !3088, line: 29, type: !3091, isLocal: true, isDefinition: true)
!3091 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !28)
!3092 = !DIGlobalVariableExpression(var: !3093, expr: !DIExpression(DW_OP_constu, 1, DW_OP_stack_value))
!3093 = distinct !DIGlobalVariable(name: "STATIC", scope: !3082, file: !3088, line: 28, type: !3091, isLocal: true, isDefinition: true)
!3094 = !{!"clang version 16.0.0"}
!3095 = !{i32 7, !"Dwarf Version", i32 5}
!3096 = !{i32 2, !"Debug Info Version", i32 3}
!3097 = !{i32 1, !"wchar_size", i32 4}
!3098 = !{i32 8, !"PIC Level", i32 2}
!3099 = !{i32 7, !"PIE Level", i32 2}
!3100 = !{i32 7, !"uwtable", i32 2}
!3101 = !{i32 7, !"frame-pointer", i32 2}
!3102 = distinct !DISubprogram(name: "base64_encode", scope: !13, file: !13, line: 61, type: !3103, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !74)
!3103 = !DISubroutineType(types: !3104)
!3104 = !{!334, !3105, !6, !62}
!3105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 64)
!3106 = !DILocalVariable(name: "src", arg: 1, scope: !3102, file: !13, line: 61, type: !3105)
!3107 = !DILocation(line: 61, column: 52, scope: !3102)
!3108 = !DILocalVariable(name: "len", arg: 2, scope: !3102, file: !13, line: 61, type: !6)
!3109 = !DILocation(line: 61, column: 64, scope: !3102)
!3110 = !DILocalVariable(name: "out_len", arg: 3, scope: !3102, file: !13, line: 62, type: !62)
!3111 = !DILocation(line: 62, column: 18, scope: !3102)
!3112 = !DILocalVariable(name: "out", scope: !3102, file: !13, line: 64, type: !334)
!3113 = !DILocation(line: 64, column: 17, scope: !3102)
!3114 = !DILocalVariable(name: "pos", scope: !3102, file: !13, line: 64, type: !334)
!3115 = !DILocation(line: 64, column: 23, scope: !3102)
!3116 = !DILocalVariable(name: "end", scope: !3102, file: !13, line: 65, type: !3105)
!3117 = !DILocation(line: 65, column: 23, scope: !3102)
!3118 = !DILocalVariable(name: "in", scope: !3102, file: !13, line: 65, type: !3105)
!3119 = !DILocation(line: 65, column: 29, scope: !3102)
!3120 = !DILocalVariable(name: "olen", scope: !3102, file: !13, line: 66, type: !6)
!3121 = !DILocation(line: 66, column: 9, scope: !3102)
!3122 = !DILocalVariable(name: "line_len", scope: !3102, file: !13, line: 67, type: !37)
!3123 = !DILocation(line: 67, column: 6, scope: !3102)
!3124 = !DILocation(line: 69, column: 9, scope: !3102)
!3125 = !DILocation(line: 69, column: 13, scope: !3102)
!3126 = !DILocation(line: 69, column: 17, scope: !3102)
!3127 = !DILocation(line: 69, column: 21, scope: !3102)
!3128 = !DILocation(line: 69, column: 7, scope: !3102)
!3129 = !DILocation(line: 70, column: 10, scope: !3102)
!3130 = !DILocation(line: 70, column: 15, scope: !3102)
!3131 = !DILocation(line: 70, column: 7, scope: !3102)
!3132 = !DILocation(line: 71, column: 6, scope: !3102)
!3133 = !DILocation(line: 72, column: 6, scope: !3134)
!3134 = distinct !DILexicalBlock(scope: !3102, file: !13, line: 72, column: 6)
!3135 = !DILocation(line: 72, column: 13, scope: !3134)
!3136 = !DILocation(line: 72, column: 11, scope: !3134)
!3137 = !DILocation(line: 72, column: 6, scope: !3102)
!3138 = !DILocation(line: 73, column: 3, scope: !3134)
!3139 = !DILocation(line: 74, column: 15, scope: !3102)
!3140 = !DILocation(line: 74, column: 8, scope: !3102)
!3141 = !DILocation(line: 74, column: 6, scope: !3102)
!3142 = !DILocation(line: 75, column: 6, scope: !3143)
!3143 = distinct !DILexicalBlock(scope: !3102, file: !13, line: 75, column: 6)
!3144 = !DILocation(line: 75, column: 10, scope: !3143)
!3145 = !DILocation(line: 75, column: 6, scope: !3102)
!3146 = !DILocation(line: 76, column: 3, scope: !3143)
!3147 = !DILocation(line: 78, column: 8, scope: !3102)
!3148 = !DILocation(line: 78, column: 14, scope: !3102)
!3149 = !DILocation(line: 78, column: 12, scope: !3102)
!3150 = !DILocation(line: 78, column: 6, scope: !3102)
!3151 = !DILocation(line: 79, column: 7, scope: !3102)
!3152 = !DILocation(line: 79, column: 5, scope: !3102)
!3153 = !DILocation(line: 80, column: 8, scope: !3102)
!3154 = !DILocation(line: 80, column: 6, scope: !3102)
!3155 = !DILocation(line: 81, column: 11, scope: !3102)
!3156 = !DILocation(line: 82, column: 2, scope: !3102)
!3157 = !DILocation(line: 82, column: 9, scope: !3102)
!3158 = !DILocation(line: 82, column: 15, scope: !3102)
!3159 = !DILocation(line: 82, column: 13, scope: !3102)
!3160 = !DILocation(line: 82, column: 18, scope: !3102)
!3161 = !DILocation(line: 83, column: 25, scope: !3162)
!3162 = distinct !DILexicalBlock(scope: !3102, file: !13, line: 82, column: 24)
!3163 = !DILocation(line: 83, column: 31, scope: !3162)
!3164 = !DILocation(line: 83, column: 12, scope: !3162)
!3165 = !DILocation(line: 83, column: 7, scope: !3162)
!3166 = !DILocation(line: 83, column: 10, scope: !3162)
!3167 = !DILocation(line: 84, column: 27, scope: !3162)
!3168 = !DILocation(line: 84, column: 33, scope: !3162)
!3169 = !DILocation(line: 84, column: 41, scope: !3162)
!3170 = !DILocation(line: 84, column: 50, scope: !3162)
!3171 = !DILocation(line: 84, column: 56, scope: !3162)
!3172 = !DILocation(line: 84, column: 47, scope: !3162)
!3173 = !DILocation(line: 84, column: 12, scope: !3162)
!3174 = !DILocation(line: 84, column: 7, scope: !3162)
!3175 = !DILocation(line: 84, column: 10, scope: !3162)
!3176 = !DILocation(line: 85, column: 27, scope: !3162)
!3177 = !DILocation(line: 85, column: 33, scope: !3162)
!3178 = !DILocation(line: 85, column: 41, scope: !3162)
!3179 = !DILocation(line: 85, column: 50, scope: !3162)
!3180 = !DILocation(line: 85, column: 56, scope: !3162)
!3181 = !DILocation(line: 85, column: 47, scope: !3162)
!3182 = !DILocation(line: 85, column: 12, scope: !3162)
!3183 = !DILocation(line: 85, column: 7, scope: !3162)
!3184 = !DILocation(line: 85, column: 10, scope: !3162)
!3185 = !DILocation(line: 86, column: 25, scope: !3162)
!3186 = !DILocation(line: 86, column: 31, scope: !3162)
!3187 = !DILocation(line: 86, column: 12, scope: !3162)
!3188 = !DILocation(line: 86, column: 7, scope: !3162)
!3189 = !DILocation(line: 86, column: 10, scope: !3162)
!3190 = !DILocation(line: 87, column: 6, scope: !3162)
!3191 = !DILocation(line: 88, column: 12, scope: !3162)
!3192 = !DILocation(line: 89, column: 7, scope: !3193)
!3193 = distinct !DILexicalBlock(scope: !3162, file: !13, line: 89, column: 7)
!3194 = !DILocation(line: 89, column: 16, scope: !3193)
!3195 = !DILocation(line: 89, column: 7, scope: !3162)
!3196 = !DILocation(line: 90, column: 8, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3193, file: !13, line: 89, column: 23)
!3198 = !DILocation(line: 90, column: 11, scope: !3197)
!3199 = !DILocation(line: 91, column: 13, scope: !3197)
!3200 = !DILocation(line: 92, column: 3, scope: !3197)
!3201 = distinct !{!3201, !3156, !3202, !3203}
!3202 = !DILocation(line: 93, column: 2, scope: !3102)
!3203 = !{!"llvm.loop.mustprogress"}
!3204 = !DILocation(line: 95, column: 6, scope: !3205)
!3205 = distinct !DILexicalBlock(scope: !3102, file: !13, line: 95, column: 6)
!3206 = !DILocation(line: 95, column: 12, scope: !3205)
!3207 = !DILocation(line: 95, column: 10, scope: !3205)
!3208 = !DILocation(line: 95, column: 6, scope: !3102)
!3209 = !DILocation(line: 96, column: 25, scope: !3210)
!3210 = distinct !DILexicalBlock(scope: !3205, file: !13, line: 95, column: 16)
!3211 = !DILocation(line: 96, column: 31, scope: !3210)
!3212 = !DILocation(line: 96, column: 12, scope: !3210)
!3213 = !DILocation(line: 96, column: 7, scope: !3210)
!3214 = !DILocation(line: 96, column: 10, scope: !3210)
!3215 = !DILocation(line: 97, column: 7, scope: !3216)
!3216 = distinct !DILexicalBlock(scope: !3210, file: !13, line: 97, column: 7)
!3217 = !DILocation(line: 97, column: 13, scope: !3216)
!3218 = !DILocation(line: 97, column: 11, scope: !3216)
!3219 = !DILocation(line: 97, column: 16, scope: !3216)
!3220 = !DILocation(line: 97, column: 7, scope: !3210)
!3221 = !DILocation(line: 98, column: 27, scope: !3222)
!3222 = distinct !DILexicalBlock(scope: !3216, file: !13, line: 97, column: 22)
!3223 = !DILocation(line: 98, column: 33, scope: !3222)
!3224 = !DILocation(line: 98, column: 41, scope: !3222)
!3225 = !DILocation(line: 98, column: 13, scope: !3222)
!3226 = !DILocation(line: 98, column: 8, scope: !3222)
!3227 = !DILocation(line: 98, column: 11, scope: !3222)
!3228 = !DILocation(line: 99, column: 8, scope: !3222)
!3229 = !DILocation(line: 99, column: 11, scope: !3222)
!3230 = !DILocation(line: 100, column: 3, scope: !3222)
!3231 = !DILocation(line: 101, column: 28, scope: !3232)
!3232 = distinct !DILexicalBlock(scope: !3216, file: !13, line: 100, column: 10)
!3233 = !DILocation(line: 101, column: 34, scope: !3232)
!3234 = !DILocation(line: 101, column: 42, scope: !3232)
!3235 = !DILocation(line: 102, column: 13, scope: !3232)
!3236 = !DILocation(line: 102, column: 19, scope: !3232)
!3237 = !DILocation(line: 101, column: 48, scope: !3232)
!3238 = !DILocation(line: 101, column: 13, scope: !3232)
!3239 = !DILocation(line: 101, column: 8, scope: !3232)
!3240 = !DILocation(line: 101, column: 11, scope: !3232)
!3241 = !DILocation(line: 103, column: 27, scope: !3232)
!3242 = !DILocation(line: 103, column: 33, scope: !3232)
!3243 = !DILocation(line: 103, column: 41, scope: !3232)
!3244 = !DILocation(line: 103, column: 13, scope: !3232)
!3245 = !DILocation(line: 103, column: 8, scope: !3232)
!3246 = !DILocation(line: 103, column: 11, scope: !3232)
!3247 = !DILocation(line: 105, column: 7, scope: !3210)
!3248 = !DILocation(line: 105, column: 10, scope: !3210)
!3249 = !DILocation(line: 106, column: 12, scope: !3210)
!3250 = !DILocation(line: 107, column: 2, scope: !3210)
!3251 = !DILocation(line: 109, column: 6, scope: !3252)
!3252 = distinct !DILexicalBlock(scope: !3102, file: !13, line: 109, column: 6)
!3253 = !DILocation(line: 109, column: 6, scope: !3102)
!3254 = !DILocation(line: 110, column: 7, scope: !3252)
!3255 = !DILocation(line: 110, column: 10, scope: !3252)
!3256 = !DILocation(line: 110, column: 3, scope: !3252)
!3257 = !DILocation(line: 112, column: 3, scope: !3102)
!3258 = !DILocation(line: 112, column: 7, scope: !3102)
!3259 = !DILocation(line: 113, column: 6, scope: !3260)
!3260 = distinct !DILexicalBlock(scope: !3102, file: !13, line: 113, column: 6)
!3261 = !DILocation(line: 113, column: 6, scope: !3102)
!3262 = !DILocation(line: 114, column: 23, scope: !3260)
!3263 = !DILocation(line: 114, column: 29, scope: !3260)
!3264 = !DILocation(line: 114, column: 27, scope: !3260)
!3265 = !DILocation(line: 114, column: 4, scope: !3260)
!3266 = !DILocation(line: 114, column: 12, scope: !3260)
!3267 = !DILocation(line: 114, column: 3, scope: !3260)
!3268 = !DILocation(line: 115, column: 9, scope: !3102)
!3269 = !DILocation(line: 115, column: 2, scope: !3102)
!3270 = !DILocation(line: 116, column: 1, scope: !3102)
!3271 = distinct !DISubprogram(name: "base64_decode", scope: !13, file: !13, line: 128, type: !3103, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !74)
!3272 = !DILocalVariable(name: "src", arg: 1, scope: !3271, file: !13, line: 128, type: !3105)
!3273 = !DILocation(line: 128, column: 52, scope: !3271)
!3274 = !DILocalVariable(name: "len", arg: 2, scope: !3271, file: !13, line: 128, type: !6)
!3275 = !DILocation(line: 128, column: 64, scope: !3271)
!3276 = !DILocalVariable(name: "out_len", arg: 3, scope: !3271, file: !13, line: 129, type: !62)
!3277 = !DILocation(line: 129, column: 18, scope: !3271)
!3278 = !DILocalVariable(name: "out", scope: !3271, file: !13, line: 131, type: !334)
!3279 = !DILocation(line: 131, column: 17, scope: !3271)
!3280 = !DILocalVariable(name: "pos", scope: !3271, file: !13, line: 131, type: !334)
!3281 = !DILocation(line: 131, column: 23, scope: !3271)
!3282 = !DILocalVariable(name: "block", scope: !3271, file: !13, line: 131, type: !3283)
!3283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 32, elements: !138)
!3284 = !DILocation(line: 131, column: 28, scope: !3271)
!3285 = !DILocalVariable(name: "i", scope: !3271, file: !13, line: 132, type: !6)
!3286 = !DILocation(line: 132, column: 9, scope: !3271)
!3287 = !DILocalVariable(name: "count", scope: !3271, file: !13, line: 132, type: !6)
!3288 = !DILocation(line: 132, column: 12, scope: !3271)
!3289 = !DILocalVariable(name: "olen", scope: !3271, file: !13, line: 132, type: !6)
!3290 = !DILocation(line: 132, column: 19, scope: !3271)
!3291 = !DILocalVariable(name: "pad", scope: !3271, file: !13, line: 133, type: !37)
!3292 = !DILocation(line: 133, column: 6, scope: !3271)
!3293 = !DILocation(line: 135, column: 8, scope: !3271)
!3294 = !DILocation(line: 136, column: 9, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3271, file: !13, line: 136, column: 2)
!3296 = !DILocation(line: 136, column: 7, scope: !3295)
!3297 = !DILocation(line: 136, column: 14, scope: !3298)
!3298 = distinct !DILexicalBlock(scope: !3295, file: !13, line: 136, column: 2)
!3299 = !DILocation(line: 136, column: 18, scope: !3298)
!3300 = !DILocation(line: 136, column: 16, scope: !3298)
!3301 = !DILocation(line: 136, column: 2, scope: !3295)
!3302 = !DILocation(line: 137, column: 27, scope: !3303)
!3303 = distinct !DILexicalBlock(scope: !3304, file: !13, line: 137, column: 7)
!3304 = distinct !DILexicalBlock(scope: !3298, file: !13, line: 136, column: 28)
!3305 = !DILocation(line: 137, column: 31, scope: !3303)
!3306 = !DILocation(line: 137, column: 7, scope: !3303)
!3307 = !DILocation(line: 137, column: 35, scope: !3303)
!3308 = !DILocation(line: 137, column: 7, scope: !3304)
!3309 = !DILocation(line: 138, column: 9, scope: !3303)
!3310 = !DILocation(line: 138, column: 4, scope: !3303)
!3311 = !DILocation(line: 139, column: 2, scope: !3304)
!3312 = !DILocation(line: 136, column: 24, scope: !3298)
!3313 = !DILocation(line: 136, column: 2, scope: !3298)
!3314 = distinct !{!3314, !3301, !3315, !3203}
!3315 = !DILocation(line: 139, column: 2, scope: !3295)
!3316 = !DILocation(line: 141, column: 6, scope: !3317)
!3317 = distinct !DILexicalBlock(scope: !3271, file: !13, line: 141, column: 6)
!3318 = !DILocation(line: 141, column: 12, scope: !3317)
!3319 = !DILocation(line: 141, column: 17, scope: !3317)
!3320 = !DILocation(line: 141, column: 20, scope: !3317)
!3321 = !DILocation(line: 141, column: 26, scope: !3317)
!3322 = !DILocation(line: 141, column: 6, scope: !3271)
!3323 = !DILocation(line: 142, column: 3, scope: !3317)
!3324 = !DILocation(line: 144, column: 10, scope: !3271)
!3325 = !DILocation(line: 144, column: 16, scope: !3271)
!3326 = !DILocation(line: 144, column: 20, scope: !3271)
!3327 = !DILocation(line: 144, column: 25, scope: !3271)
!3328 = !DILocation(line: 144, column: 7, scope: !3271)
!3329 = !DILocation(line: 145, column: 21, scope: !3271)
!3330 = !DILocation(line: 145, column: 14, scope: !3271)
!3331 = !DILocation(line: 145, column: 12, scope: !3271)
!3332 = !DILocation(line: 145, column: 6, scope: !3271)
!3333 = !DILocation(line: 146, column: 6, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3271, file: !13, line: 146, column: 6)
!3335 = !DILocation(line: 146, column: 10, scope: !3334)
!3336 = !DILocation(line: 146, column: 6, scope: !3271)
!3337 = !DILocation(line: 147, column: 3, scope: !3334)
!3338 = !DILocation(line: 149, column: 8, scope: !3271)
!3339 = !DILocation(line: 150, column: 9, scope: !3340)
!3340 = distinct !DILexicalBlock(scope: !3271, file: !13, line: 150, column: 2)
!3341 = !DILocation(line: 150, column: 7, scope: !3340)
!3342 = !DILocation(line: 150, column: 14, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3340, file: !13, line: 150, column: 2)
!3344 = !DILocation(line: 150, column: 18, scope: !3343)
!3345 = !DILocation(line: 150, column: 16, scope: !3343)
!3346 = !DILocation(line: 150, column: 2, scope: !3340)
!3347 = !DILocalVariable(name: "tmp", scope: !3348, file: !13, line: 151, type: !9)
!3348 = distinct !DILexicalBlock(scope: !3343, file: !13, line: 150, column: 28)
!3349 = !DILocation(line: 151, column: 17, scope: !3348)
!3350 = !DILocation(line: 151, column: 43, scope: !3348)
!3351 = !DILocation(line: 151, column: 47, scope: !3348)
!3352 = !DILocation(line: 151, column: 23, scope: !3348)
!3353 = !DILocation(line: 152, column: 7, scope: !3354)
!3354 = distinct !DILexicalBlock(scope: !3348, file: !13, line: 152, column: 7)
!3355 = !DILocation(line: 152, column: 11, scope: !3354)
!3356 = !DILocation(line: 152, column: 7, scope: !3348)
!3357 = !DILocation(line: 153, column: 4, scope: !3354)
!3358 = !DILocation(line: 155, column: 7, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3348, file: !13, line: 155, column: 7)
!3360 = !DILocation(line: 155, column: 11, scope: !3359)
!3361 = !DILocation(line: 155, column: 14, scope: !3359)
!3362 = !DILocation(line: 155, column: 7, scope: !3348)
!3363 = !DILocation(line: 156, column: 7, scope: !3359)
!3364 = !DILocation(line: 156, column: 4, scope: !3359)
!3365 = !DILocation(line: 157, column: 18, scope: !3348)
!3366 = !DILocation(line: 157, column: 9, scope: !3348)
!3367 = !DILocation(line: 157, column: 3, scope: !3348)
!3368 = !DILocation(line: 157, column: 16, scope: !3348)
!3369 = !DILocation(line: 158, column: 8, scope: !3348)
!3370 = !DILocation(line: 159, column: 7, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3348, file: !13, line: 159, column: 7)
!3372 = !DILocation(line: 159, column: 13, scope: !3371)
!3373 = !DILocation(line: 159, column: 7, scope: !3348)
!3374 = !DILocation(line: 160, column: 30, scope: !3375)
!3375 = distinct !DILexicalBlock(scope: !3371, file: !13, line: 159, column: 19)
!3376 = !DILocation(line: 160, column: 39, scope: !3375)
!3377 = !DILocation(line: 160, column: 48, scope: !3375)
!3378 = !DILocation(line: 160, column: 57, scope: !3375)
!3379 = !DILocation(line: 160, column: 45, scope: !3375)
!3380 = !DILocation(line: 160, column: 13, scope: !3375)
!3381 = !DILocation(line: 160, column: 8, scope: !3375)
!3382 = !DILocation(line: 160, column: 11, scope: !3375)
!3383 = !DILocation(line: 161, column: 30, scope: !3375)
!3384 = !DILocation(line: 161, column: 39, scope: !3375)
!3385 = !DILocation(line: 161, column: 48, scope: !3375)
!3386 = !DILocation(line: 161, column: 57, scope: !3375)
!3387 = !DILocation(line: 161, column: 45, scope: !3375)
!3388 = !DILocation(line: 161, column: 13, scope: !3375)
!3389 = !DILocation(line: 161, column: 8, scope: !3375)
!3390 = !DILocation(line: 161, column: 11, scope: !3375)
!3391 = !DILocation(line: 162, column: 30, scope: !3375)
!3392 = !DILocation(line: 162, column: 39, scope: !3375)
!3393 = !DILocation(line: 162, column: 47, scope: !3375)
!3394 = !DILocation(line: 162, column: 45, scope: !3375)
!3395 = !DILocation(line: 162, column: 13, scope: !3375)
!3396 = !DILocation(line: 162, column: 8, scope: !3375)
!3397 = !DILocation(line: 162, column: 11, scope: !3375)
!3398 = !DILocation(line: 163, column: 10, scope: !3375)
!3399 = !DILocation(line: 164, column: 8, scope: !3400)
!3400 = distinct !DILexicalBlock(scope: !3375, file: !13, line: 164, column: 8)
!3401 = !DILocation(line: 164, column: 8, scope: !3375)
!3402 = !DILocation(line: 165, column: 9, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3404, file: !13, line: 165, column: 9)
!3404 = distinct !DILexicalBlock(scope: !3400, file: !13, line: 164, column: 13)
!3405 = !DILocation(line: 165, column: 13, scope: !3403)
!3406 = !DILocation(line: 165, column: 9, scope: !3404)
!3407 = !DILocation(line: 166, column: 9, scope: !3403)
!3408 = !DILocation(line: 166, column: 6, scope: !3403)
!3409 = !DILocation(line: 167, column: 14, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3403, file: !13, line: 167, column: 14)
!3411 = !DILocation(line: 167, column: 18, scope: !3410)
!3412 = !DILocation(line: 167, column: 14, scope: !3403)
!3413 = !DILocation(line: 168, column: 10, scope: !3410)
!3414 = !DILocation(line: 168, column: 6, scope: !3410)
!3415 = !DILocation(line: 171, column: 11, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3410, file: !13, line: 169, column: 10)
!3417 = !DILocation(line: 171, column: 6, scope: !3416)
!3418 = !DILocation(line: 172, column: 6, scope: !3416)
!3419 = !DILocation(line: 174, column: 5, scope: !3404)
!3420 = !DILocation(line: 176, column: 3, scope: !3375)
!3421 = !DILocation(line: 177, column: 2, scope: !3348)
!3422 = !DILocation(line: 150, column: 24, scope: !3343)
!3423 = !DILocation(line: 150, column: 2, scope: !3343)
!3424 = distinct !{!3424, !3346, !3425, !3203}
!3425 = !DILocation(line: 177, column: 2, scope: !3340)
!3426 = !DILocation(line: 178, column: 10, scope: !3271)
!3427 = !DILocation(line: 178, column: 14, scope: !3271)
!3428 = !DILocation(line: 180, column: 22, scope: !3271)
!3429 = !DILocation(line: 180, column: 28, scope: !3271)
!3430 = !DILocation(line: 180, column: 26, scope: !3271)
!3431 = !DILocation(line: 180, column: 3, scope: !3271)
!3432 = !DILocation(line: 180, column: 11, scope: !3271)
!3433 = !DILocation(line: 181, column: 9, scope: !3271)
!3434 = !DILocation(line: 181, column: 2, scope: !3271)
!3435 = !DILocation(line: 182, column: 1, scope: !3271)
!3436 = distinct !DISubprogram(name: "initialize_odd_constant", scope: !27, file: !27, line: 65, type: !1578, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !23, retainedNodes: !74)
!3437 = !DILocalVariable(name: "ret", scope: !3436, file: !27, line: 68, type: !40)
!3438 = !DILocation(line: 68, column: 11, scope: !3436)
!3439 = !DILocation(line: 68, column: 17, scope: !3436)
!3440 = !DILocation(line: 69, column: 6, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3436, file: !27, line: 69, column: 6)
!3442 = !DILocation(line: 69, column: 10, scope: !3441)
!3443 = !DILocation(line: 69, column: 6, scope: !3436)
!3444 = !DILocation(line: 70, column: 3, scope: !3441)
!3445 = !DILocalVariable(name: "fd", scope: !3436, file: !27, line: 73, type: !37)
!3446 = !DILocation(line: 73, column: 6, scope: !3436)
!3447 = !DILocation(line: 73, column: 11, scope: !3436)
!3448 = !DILocation(line: 74, column: 6, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3436, file: !27, line: 74, column: 6)
!3450 = !DILocation(line: 74, column: 9, scope: !3449)
!3451 = !DILocation(line: 74, column: 6, scope: !3436)
!3452 = !DILocation(line: 75, column: 8, scope: !3453)
!3453 = distinct !DILexicalBlock(scope: !3449, file: !27, line: 74, column: 14)
!3454 = !DILocation(line: 75, column: 6, scope: !3453)
!3455 = !DILocation(line: 76, column: 7, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3453, file: !27, line: 76, column: 7)
!3457 = !DILocation(line: 76, column: 10, scope: !3456)
!3458 = !DILocation(line: 76, column: 7, scope: !3453)
!3459 = !DILocation(line: 77, column: 17, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3456, file: !27, line: 76, column: 15)
!3461 = !DILocation(line: 78, column: 4, scope: !3460)
!3462 = !DILocation(line: 80, column: 2, scope: !3453)
!3463 = !DILocation(line: 81, column: 11, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3436, file: !27, line: 81, column: 6)
!3465 = !DILocation(line: 81, column: 6, scope: !3464)
!3466 = !DILocation(line: 81, column: 52, scope: !3464)
!3467 = !DILocation(line: 81, column: 6, scope: !3436)
!3468 = !DILocation(line: 82, column: 16, scope: !3464)
!3469 = !DILocation(line: 82, column: 3, scope: !3464)
!3470 = !DILocation(line: 83, column: 8, scope: !3436)
!3471 = !DILocation(line: 83, column: 2, scope: !3436)
!3472 = !DILabel(scope: !3436, name: "oddify_constant", file: !27, line: 85)
!3473 = !DILocation(line: 85, column: 1, scope: !3436)
!3474 = !DILocation(line: 86, column: 15, scope: !3436)
!3475 = !DILocation(line: 87, column: 19, scope: !3436)
!3476 = !DILocation(line: 87, column: 2, scope: !3436)
!3477 = !DILocation(line: 88, column: 1, scope: !3436)
!3478 = distinct !DISubprogram(name: "hash_int_new", scope: !27, file: !27, line: 165, type: !3479, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !23, retainedNodes: !74)
!3479 = !DISubroutineType(types: !3480)
!3480 = !{!3481, !403, !403}
!3481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3482, size: 64)
!3482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash", file: !27, line: 55, size: 320, elements: !3483)
!3483 = !{!3484, !3485, !3489, !3490, !3491, !3492}
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3482, file: !27, line: 56, baseType: !28, size: 32)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !3482, file: !27, line: 57, baseType: !3486, size: 64, offset: 64)
!3486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3487, size: 64)
!3487 = !DISubroutineType(types: !3488)
!3488 = !{!28, !38}
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "key_compare", scope: !3482, file: !27, line: 58, baseType: !34, size: 64, offset: 128)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "free_value", scope: !3482, file: !27, line: 59, baseType: !403, size: 64, offset: 192)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "free_key", scope: !3482, file: !27, line: 60, baseType: !403, size: 64, offset: 256)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !3482, file: !27, line: 61, baseType: !3493, offset: 320)
!3493 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3494, elements: !3505)
!3494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_bucket", file: !27, line: 49, size: 128, elements: !3495)
!3495 = !{!3496, !3503, !3504}
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !3494, file: !27, line: 50, baseType: !3497, size: 64)
!3497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3498, size: 64)
!3498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_entry", file: !27, line: 43, size: 192, elements: !3499)
!3499 = !{!3500, !3501, !3502}
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3498, file: !27, line: 44, baseType: !480, size: 64)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3498, file: !27, line: 45, baseType: !38, size: 64, offset: 64)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "hashval", scope: !3498, file: !27, line: 46, baseType: !28, size: 32, offset: 128)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !3494, file: !27, line: 51, baseType: !28, size: 32, offset: 64)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !3494, file: !27, line: 52, baseType: !28, size: 32, offset: 96)
!3505 = !{!3506}
!3506 = !DISubrange(count: -1)
!3507 = !DILocalVariable(name: "free_key", arg: 1, scope: !3478, file: !27, line: 165, type: !403)
!3508 = !DILocation(line: 165, column: 34, scope: !3478)
!3509 = !DILocalVariable(name: "free_value", arg: 2, scope: !3478, file: !27, line: 166, type: !403)
!3510 = !DILocation(line: 166, column: 11, scope: !3478)
!3511 = !DILocation(line: 170, column: 4, scope: !3478)
!3512 = !DILocation(line: 171, column: 4, scope: !3478)
!3513 = !DILocation(line: 168, column: 9, scope: !3478)
!3514 = !DILocation(line: 168, column: 2, scope: !3478)
!3515 = distinct !DISubprogram(name: "hash_int", scope: !27, file: !27, line: 90, type: !3487, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !23, retainedNodes: !74)
!3516 = !DILocalVariable(name: "keyptr", arg: 1, scope: !3515, file: !27, line: 90, type: !38)
!3517 = !DILocation(line: 90, column: 45, scope: !3515)
!3518 = !DILocalVariable(name: "key", scope: !3515, file: !27, line: 93, type: !28)
!3519 = !DILocation(line: 93, column: 11, scope: !3515)
!3520 = !DILocation(line: 93, column: 33, scope: !3515)
!3521 = !DILocation(line: 93, column: 27, scope: !3515)
!3522 = !DILocation(line: 93, column: 17, scope: !3515)
!3523 = !DILocalVariable(name: "c2", scope: !3515, file: !27, line: 94, type: !28)
!3524 = !DILocation(line: 94, column: 11, scope: !3515)
!3525 = !DILocation(line: 94, column: 16, scope: !3515)
!3526 = !DILocation(line: 96, column: 9, scope: !3515)
!3527 = !DILocation(line: 96, column: 13, scope: !3515)
!3528 = !DILocation(line: 96, column: 22, scope: !3515)
!3529 = !DILocation(line: 96, column: 26, scope: !3515)
!3530 = !DILocation(line: 96, column: 19, scope: !3515)
!3531 = !DILocation(line: 96, column: 6, scope: !3515)
!3532 = !DILocation(line: 97, column: 9, scope: !3515)
!3533 = !DILocation(line: 97, column: 13, scope: !3515)
!3534 = !DILocation(line: 97, column: 6, scope: !3515)
!3535 = !DILocation(line: 98, column: 9, scope: !3515)
!3536 = !DILocation(line: 98, column: 13, scope: !3515)
!3537 = !DILocation(line: 98, column: 6, scope: !3515)
!3538 = !DILocation(line: 99, column: 9, scope: !3515)
!3539 = !DILocation(line: 99, column: 6, scope: !3515)
!3540 = !DILocation(line: 100, column: 9, scope: !3515)
!3541 = !DILocation(line: 100, column: 13, scope: !3515)
!3542 = !DILocation(line: 100, column: 6, scope: !3515)
!3543 = !DILocation(line: 101, column: 9, scope: !3515)
!3544 = !DILocation(line: 101, column: 2, scope: !3515)
!3545 = distinct !DISubprogram(name: "hash_int_key_cmp", scope: !27, file: !27, line: 141, type: !35, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !23, retainedNodes: !74)
!3546 = !DILocalVariable(name: "k1", arg: 1, scope: !3545, file: !27, line: 141, type: !38)
!3547 = !DILocation(line: 141, column: 48, scope: !3545)
!3548 = !DILocalVariable(name: "k2", arg: 2, scope: !3545, file: !27, line: 141, type: !38)
!3549 = !DILocation(line: 141, column: 64, scope: !3545)
!3550 = !DILocalVariable(name: "a", scope: !3545, file: !27, line: 143, type: !37)
!3551 = !DILocation(line: 143, column: 6, scope: !3545)
!3552 = !DILocation(line: 143, column: 25, scope: !3545)
!3553 = !DILocation(line: 143, column: 15, scope: !3545)
!3554 = !DILocation(line: 143, column: 10, scope: !3545)
!3555 = !DILocalVariable(name: "b", scope: !3545, file: !27, line: 144, type: !37)
!3556 = !DILocation(line: 144, column: 6, scope: !3545)
!3557 = !DILocation(line: 144, column: 25, scope: !3545)
!3558 = !DILocation(line: 144, column: 15, scope: !3545)
!3559 = !DILocation(line: 144, column: 10, scope: !3545)
!3560 = !DILocation(line: 145, column: 10, scope: !3545)
!3561 = !DILocation(line: 145, column: 14, scope: !3545)
!3562 = !DILocation(line: 145, column: 12, scope: !3545)
!3563 = !DILocation(line: 145, column: 20, scope: !3545)
!3564 = !DILocation(line: 145, column: 24, scope: !3545)
!3565 = !DILocation(line: 145, column: 22, scope: !3545)
!3566 = !DILocation(line: 145, column: 17, scope: !3545)
!3567 = !DILocation(line: 145, column: 2, scope: !3545)
!3568 = distinct !DISubprogram(name: "hash_internal_new", scope: !27, file: !27, line: 148, type: !3569, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !23, retainedNodes: !74)
!3569 = !DISubroutineType(types: !3570)
!3570 = !{!3481, !3486, !34, !403, !403}
!3571 = !DILocalVariable(name: "hash_value", arg: 1, scope: !3568, file: !27, line: 149, type: !3486)
!3572 = !DILocation(line: 149, column: 15, scope: !3568)
!3573 = !DILocalVariable(name: "key_compare", arg: 2, scope: !3568, file: !27, line: 150, type: !34)
!3574 = !DILocation(line: 150, column: 10, scope: !3568)
!3575 = !DILocalVariable(name: "free_key", arg: 3, scope: !3568, file: !27, line: 151, type: !403)
!3576 = !DILocation(line: 151, column: 11, scope: !3568)
!3577 = !DILocalVariable(name: "free_value", arg: 4, scope: !3568, file: !27, line: 152, type: !403)
!3578 = !DILocation(line: 152, column: 11, scope: !3568)
!3579 = !DILocalVariable(name: "hash", scope: !3568, file: !27, line: 154, type: !3481)
!3580 = !DILocation(line: 154, column: 15, scope: !3568)
!3581 = !DILocation(line: 154, column: 22, scope: !3568)
!3582 = !DILocation(line: 156, column: 6, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3568, file: !27, line: 156, column: 6)
!3584 = !DILocation(line: 156, column: 11, scope: !3583)
!3585 = !DILocation(line: 156, column: 6, scope: !3568)
!3586 = !DILocation(line: 157, column: 3, scope: !3583)
!3587 = !DILocation(line: 158, column: 21, scope: !3568)
!3588 = !DILocation(line: 158, column: 2, scope: !3568)
!3589 = !DILocation(line: 158, column: 8, scope: !3568)
!3590 = !DILocation(line: 158, column: 19, scope: !3568)
!3591 = !DILocation(line: 159, column: 22, scope: !3568)
!3592 = !DILocation(line: 159, column: 2, scope: !3568)
!3593 = !DILocation(line: 159, column: 8, scope: !3568)
!3594 = !DILocation(line: 159, column: 20, scope: !3568)
!3595 = !DILocation(line: 160, column: 21, scope: !3568)
!3596 = !DILocation(line: 160, column: 2, scope: !3568)
!3597 = !DILocation(line: 160, column: 8, scope: !3568)
!3598 = !DILocation(line: 160, column: 19, scope: !3568)
!3599 = !DILocation(line: 161, column: 19, scope: !3568)
!3600 = !DILocation(line: 161, column: 2, scope: !3568)
!3601 = !DILocation(line: 161, column: 8, scope: !3568)
!3602 = !DILocation(line: 161, column: 17, scope: !3568)
!3603 = !DILocation(line: 162, column: 9, scope: !3568)
!3604 = !DILocation(line: 162, column: 2, scope: !3568)
!3605 = !DILocation(line: 163, column: 1, scope: !3568)
!3606 = distinct !DISubprogram(name: "hash_str_new", scope: !27, file: !27, line: 174, type: !3479, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !23, retainedNodes: !74)
!3607 = !DILocalVariable(name: "free_key", arg: 1, scope: !3606, file: !27, line: 174, type: !403)
!3608 = !DILocation(line: 174, column: 34, scope: !3606)
!3609 = !DILocalVariable(name: "free_value", arg: 2, scope: !3606, file: !27, line: 175, type: !403)
!3610 = !DILocation(line: 175, column: 11, scope: !3606)
!3611 = !DILocalVariable(name: "hash_func", scope: !3606, file: !27, line: 177, type: !3486)
!3612 = !DILocation(line: 177, column: 13, scope: !3606)
!3613 = !DILocation(line: 187, column: 12, scope: !3606)
!3614 = !DILocation(line: 191, column: 4, scope: !3606)
!3615 = !DILocation(line: 193, column: 4, scope: !3606)
!3616 = !DILocation(line: 194, column: 4, scope: !3606)
!3617 = !DILocation(line: 190, column: 9, scope: !3606)
!3618 = !DILocation(line: 190, column: 2, scope: !3606)
!3619 = distinct !DISubprogram(name: "hash_free", scope: !27, file: !27, line: 197, type: !3620, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !23, retainedNodes: !74)
!3620 = !DISubroutineType(types: !3621)
!3621 = !{null, !3481}
!3622 = !DILocalVariable(name: "hash", arg: 1, scope: !3619, file: !27, line: 197, type: !3481)
!3623 = !DILocation(line: 197, column: 29, scope: !3619)
!3624 = !DILocalVariable(name: "bucket", scope: !3619, file: !27, line: 199, type: !3625)
!3625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3494, size: 64)
!3626 = !DILocation(line: 199, column: 22, scope: !3619)
!3627 = !DILocalVariable(name: "bucket_end", scope: !3619, file: !27, line: 199, type: !3625)
!3628 = !DILocation(line: 199, column: 31, scope: !3619)
!3629 = !DILocation(line: 201, column: 6, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3619, file: !27, line: 201, column: 6)
!3631 = !DILocation(line: 201, column: 11, scope: !3630)
!3632 = !DILocation(line: 201, column: 6, scope: !3619)
!3633 = !DILocation(line: 202, column: 3, scope: !3630)
!3634 = !DILocation(line: 204, column: 11, scope: !3619)
!3635 = !DILocation(line: 204, column: 17, scope: !3619)
!3636 = !DILocation(line: 204, column: 9, scope: !3619)
!3637 = !DILocation(line: 205, column: 15, scope: !3619)
!3638 = !DILocation(line: 205, column: 22, scope: !3619)
!3639 = !DILocation(line: 205, column: 13, scope: !3619)
!3640 = !DILocation(line: 206, column: 2, scope: !3619)
!3641 = !DILocation(line: 206, column: 9, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3643, file: !27, line: 206, column: 2)
!3643 = distinct !DILexicalBlock(scope: !3619, file: !27, line: 206, column: 2)
!3644 = !DILocation(line: 206, column: 18, scope: !3642)
!3645 = !DILocation(line: 206, column: 16, scope: !3642)
!3646 = !DILocation(line: 206, column: 2, scope: !3643)
!3647 = !DILocation(line: 207, column: 7, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3649, file: !27, line: 207, column: 7)
!3649 = distinct !DILexicalBlock(scope: !3642, file: !27, line: 206, column: 40)
!3650 = !DILocation(line: 207, column: 13, scope: !3648)
!3651 = !DILocation(line: 207, column: 7, scope: !3649)
!3652 = !DILocalVariable(name: "entry", scope: !3653, file: !27, line: 208, type: !3497)
!3653 = distinct !DILexicalBlock(scope: !3648, file: !27, line: 207, column: 25)
!3654 = !DILocation(line: 208, column: 23, scope: !3653)
!3655 = !DILocalVariable(name: "entry_end", scope: !3653, file: !27, line: 208, type: !3497)
!3656 = !DILocation(line: 208, column: 31, scope: !3653)
!3657 = !DILocation(line: 209, column: 12, scope: !3653)
!3658 = !DILocation(line: 209, column: 20, scope: !3653)
!3659 = !DILocation(line: 209, column: 10, scope: !3653)
!3660 = !DILocation(line: 210, column: 16, scope: !3653)
!3661 = !DILocation(line: 210, column: 24, scope: !3653)
!3662 = !DILocation(line: 210, column: 32, scope: !3653)
!3663 = !DILocation(line: 210, column: 22, scope: !3653)
!3664 = !DILocation(line: 210, column: 14, scope: !3653)
!3665 = !DILocation(line: 211, column: 4, scope: !3653)
!3666 = !DILocation(line: 211, column: 11, scope: !3667)
!3667 = distinct !DILexicalBlock(scope: !3668, file: !27, line: 211, column: 4)
!3668 = distinct !DILexicalBlock(scope: !3653, file: !27, line: 211, column: 4)
!3669 = !DILocation(line: 211, column: 19, scope: !3667)
!3670 = !DILocation(line: 211, column: 17, scope: !3667)
!3671 = !DILocation(line: 211, column: 4, scope: !3668)
!3672 = !DILocation(line: 212, column: 5, scope: !3673)
!3673 = distinct !DILexicalBlock(scope: !3667, file: !27, line: 211, column: 39)
!3674 = !DILocation(line: 212, column: 11, scope: !3673)
!3675 = !DILocation(line: 212, column: 30, scope: !3673)
!3676 = !DILocation(line: 212, column: 37, scope: !3673)
!3677 = !DILocation(line: 213, column: 9, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3673, file: !27, line: 213, column: 9)
!3679 = !DILocation(line: 213, column: 15, scope: !3678)
!3680 = !DILocation(line: 213, column: 9, scope: !3673)
!3681 = !DILocation(line: 214, column: 6, scope: !3678)
!3682 = !DILocation(line: 214, column: 12, scope: !3678)
!3683 = !DILocation(line: 214, column: 29, scope: !3678)
!3684 = !DILocation(line: 214, column: 36, scope: !3678)
!3685 = !DILocation(line: 215, column: 4, scope: !3673)
!3686 = !DILocation(line: 211, column: 35, scope: !3667)
!3687 = !DILocation(line: 211, column: 4, scope: !3667)
!3688 = distinct !{!3688, !3671, !3689, !3203}
!3689 = !DILocation(line: 215, column: 4, scope: !3668)
!3690 = !DILocation(line: 216, column: 3, scope: !3653)
!3691 = !DILocation(line: 217, column: 8, scope: !3649)
!3692 = !DILocation(line: 217, column: 16, scope: !3649)
!3693 = !DILocation(line: 217, column: 3, scope: !3649)
!3694 = !DILocation(line: 218, column: 2, scope: !3649)
!3695 = !DILocation(line: 206, column: 36, scope: !3642)
!3696 = !DILocation(line: 206, column: 2, scope: !3642)
!3697 = distinct !{!3697, !3646, !3698, !3203}
!3698 = !DILocation(line: 218, column: 2, scope: !3643)
!3699 = !DILocation(line: 219, column: 7, scope: !3619)
!3700 = !DILocation(line: 219, column: 2, scope: !3619)
!3701 = !DILocation(line: 220, column: 1, scope: !3619)
!3702 = distinct !DISubprogram(name: "hash_add", scope: !27, file: !27, line: 228, type: !3703, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !23, retainedNodes: !74)
!3703 = !DISubroutineType(types: !3704)
!3704 = !{!37, !3481, !38, !38}
!3705 = !DILocalVariable(name: "hash", arg: 1, scope: !3702, file: !27, line: 228, type: !3481)
!3706 = !DILocation(line: 228, column: 27, scope: !3702)
!3707 = !DILocalVariable(name: "key", arg: 2, scope: !3702, file: !27, line: 228, type: !38)
!3708 = !DILocation(line: 228, column: 45, scope: !3702)
!3709 = !DILocalVariable(name: "value", arg: 3, scope: !3702, file: !27, line: 228, type: !38)
!3710 = !DILocation(line: 228, column: 62, scope: !3702)
!3711 = !DILocalVariable(name: "hashval", scope: !3702, file: !27, line: 230, type: !28)
!3712 = !DILocation(line: 230, column: 11, scope: !3702)
!3713 = !DILocation(line: 230, column: 21, scope: !3702)
!3714 = !DILocation(line: 230, column: 27, scope: !3702)
!3715 = !DILocation(line: 230, column: 38, scope: !3702)
!3716 = !DILocalVariable(name: "pos", scope: !3702, file: !27, line: 231, type: !28)
!3717 = !DILocation(line: 231, column: 11, scope: !3702)
!3718 = !DILocation(line: 231, column: 17, scope: !3702)
!3719 = !DILocation(line: 231, column: 25, scope: !3702)
!3720 = !DILocalVariable(name: "bucket", scope: !3702, file: !27, line: 232, type: !3625)
!3721 = !DILocation(line: 232, column: 22, scope: !3702)
!3722 = !DILocation(line: 232, column: 31, scope: !3702)
!3723 = !DILocation(line: 232, column: 37, scope: !3702)
!3724 = !DILocation(line: 232, column: 47, scope: !3702)
!3725 = !DILocation(line: 232, column: 45, scope: !3702)
!3726 = !DILocalVariable(name: "entry", scope: !3702, file: !27, line: 233, type: !3497)
!3727 = !DILocation(line: 233, column: 21, scope: !3702)
!3728 = !DILocalVariable(name: "entry_end", scope: !3702, file: !27, line: 233, type: !3497)
!3729 = !DILocation(line: 233, column: 29, scope: !3702)
!3730 = !DILocation(line: 235, column: 6, scope: !3731)
!3731 = distinct !DILexicalBlock(scope: !3702, file: !27, line: 235, column: 6)
!3732 = !DILocation(line: 235, column: 14, scope: !3731)
!3733 = !DILocation(line: 235, column: 19, scope: !3731)
!3734 = !DILocation(line: 235, column: 26, scope: !3731)
!3735 = !DILocation(line: 235, column: 34, scope: !3731)
!3736 = !DILocation(line: 235, column: 23, scope: !3731)
!3737 = !DILocation(line: 235, column: 6, scope: !3702)
!3738 = !DILocalVariable(name: "new_total", scope: !3739, file: !27, line: 236, type: !28)
!3739 = distinct !DILexicalBlock(scope: !3731, file: !27, line: 235, column: 41)
!3740 = !DILocation(line: 236, column: 12, scope: !3739)
!3741 = !DILocation(line: 236, column: 24, scope: !3739)
!3742 = !DILocation(line: 236, column: 32, scope: !3739)
!3743 = !DILocation(line: 236, column: 38, scope: !3739)
!3744 = !DILocalVariable(name: "tmp", scope: !3739, file: !27, line: 237, type: !3497)
!3745 = !DILocation(line: 237, column: 22, scope: !3739)
!3746 = !DILocation(line: 237, column: 41, scope: !3739)
!3747 = !DILocation(line: 237, column: 49, scope: !3739)
!3748 = !DILocation(line: 237, column: 58, scope: !3739)
!3749 = !DILocation(line: 237, column: 28, scope: !3739)
!3750 = !DILocation(line: 238, column: 7, scope: !3751)
!3751 = distinct !DILexicalBlock(scope: !3739, file: !27, line: 238, column: 7)
!3752 = !DILocation(line: 238, column: 11, scope: !3751)
!3753 = !DILocation(line: 238, column: 7, scope: !3739)
!3754 = !DILocation(line: 239, column: 12, scope: !3751)
!3755 = !DILocation(line: 239, column: 11, scope: !3751)
!3756 = !DILocation(line: 239, column: 4, scope: !3751)
!3757 = !DILocation(line: 240, column: 21, scope: !3739)
!3758 = !DILocation(line: 240, column: 3, scope: !3739)
!3759 = !DILocation(line: 240, column: 11, scope: !3739)
!3760 = !DILocation(line: 240, column: 19, scope: !3739)
!3761 = !DILocation(line: 241, column: 19, scope: !3739)
!3762 = !DILocation(line: 241, column: 3, scope: !3739)
!3763 = !DILocation(line: 241, column: 11, scope: !3739)
!3764 = !DILocation(line: 241, column: 17, scope: !3739)
!3765 = !DILocation(line: 242, column: 2, scope: !3739)
!3766 = !DILocation(line: 244, column: 10, scope: !3702)
!3767 = !DILocation(line: 244, column: 18, scope: !3702)
!3768 = !DILocation(line: 244, column: 8, scope: !3702)
!3769 = !DILocation(line: 245, column: 14, scope: !3702)
!3770 = !DILocation(line: 245, column: 22, scope: !3702)
!3771 = !DILocation(line: 245, column: 30, scope: !3702)
!3772 = !DILocation(line: 245, column: 20, scope: !3702)
!3773 = !DILocation(line: 245, column: 12, scope: !3702)
!3774 = !DILocation(line: 246, column: 2, scope: !3702)
!3775 = !DILocation(line: 246, column: 9, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3777, file: !27, line: 246, column: 2)
!3777 = distinct !DILexicalBlock(scope: !3702, file: !27, line: 246, column: 2)
!3778 = !DILocation(line: 246, column: 17, scope: !3776)
!3779 = !DILocation(line: 246, column: 15, scope: !3776)
!3780 = !DILocation(line: 246, column: 2, scope: !3777)
!3781 = !DILocation(line: 247, column: 7, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3783, file: !27, line: 247, column: 7)
!3783 = distinct !DILexicalBlock(scope: !3776, file: !27, line: 246, column: 37)
!3784 = !DILocation(line: 247, column: 18, scope: !3782)
!3785 = !DILocation(line: 247, column: 25, scope: !3782)
!3786 = !DILocation(line: 247, column: 15, scope: !3782)
!3787 = !DILocation(line: 247, column: 7, scope: !3783)
!3788 = !DILocation(line: 248, column: 4, scope: !3782)
!3789 = !DILocation(line: 249, column: 7, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3783, file: !27, line: 249, column: 7)
!3791 = !DILocation(line: 249, column: 13, scope: !3790)
!3792 = !DILocation(line: 249, column: 25, scope: !3790)
!3793 = !DILocation(line: 249, column: 30, scope: !3790)
!3794 = !DILocation(line: 249, column: 37, scope: !3790)
!3795 = !DILocation(line: 249, column: 42, scope: !3790)
!3796 = !DILocation(line: 249, column: 7, scope: !3783)
!3797 = !DILocation(line: 250, column: 4, scope: !3790)
!3798 = !DILocation(line: 251, column: 7, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3783, file: !27, line: 251, column: 7)
!3800 = !DILocation(line: 251, column: 13, scope: !3799)
!3801 = !DILocation(line: 251, column: 7, scope: !3783)
!3802 = !DILocation(line: 252, column: 4, scope: !3799)
!3803 = !DILocation(line: 252, column: 10, scope: !3799)
!3804 = !DILocation(line: 252, column: 29, scope: !3799)
!3805 = !DILocation(line: 252, column: 36, scope: !3799)
!3806 = !DILocation(line: 253, column: 7, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3783, file: !27, line: 253, column: 7)
!3808 = !DILocation(line: 253, column: 13, scope: !3807)
!3809 = !DILocation(line: 253, column: 7, scope: !3783)
!3810 = !DILocation(line: 254, column: 4, scope: !3807)
!3811 = !DILocation(line: 254, column: 10, scope: !3807)
!3812 = !DILocation(line: 254, column: 27, scope: !3807)
!3813 = !DILocation(line: 254, column: 34, scope: !3807)
!3814 = !DILocation(line: 256, column: 16, scope: !3783)
!3815 = !DILocation(line: 256, column: 3, scope: !3783)
!3816 = !DILocation(line: 256, column: 10, scope: !3783)
!3817 = !DILocation(line: 256, column: 14, scope: !3783)
!3818 = !DILocation(line: 257, column: 18, scope: !3783)
!3819 = !DILocation(line: 257, column: 3, scope: !3783)
!3820 = !DILocation(line: 257, column: 10, scope: !3783)
!3821 = !DILocation(line: 257, column: 16, scope: !3783)
!3822 = !DILocation(line: 258, column: 3, scope: !3783)
!3823 = !DILocation(line: 246, column: 33, scope: !3776)
!3824 = !DILocation(line: 246, column: 2, scope: !3776)
!3825 = distinct !{!3825, !3780, !3826, !3203}
!3826 = !DILocation(line: 259, column: 2, scope: !3777)
!3827 = !DILocation(line: 261, column: 15, scope: !3702)
!3828 = !DILocation(line: 261, column: 2, scope: !3702)
!3829 = !DILocation(line: 261, column: 9, scope: !3702)
!3830 = !DILocation(line: 261, column: 13, scope: !3702)
!3831 = !DILocation(line: 262, column: 17, scope: !3702)
!3832 = !DILocation(line: 262, column: 2, scope: !3702)
!3833 = !DILocation(line: 262, column: 9, scope: !3702)
!3834 = !DILocation(line: 262, column: 15, scope: !3702)
!3835 = !DILocation(line: 263, column: 19, scope: !3702)
!3836 = !DILocation(line: 263, column: 2, scope: !3702)
!3837 = !DILocation(line: 263, column: 9, scope: !3702)
!3838 = !DILocation(line: 263, column: 17, scope: !3702)
!3839 = !DILocation(line: 264, column: 2, scope: !3702)
!3840 = !DILocation(line: 264, column: 10, scope: !3702)
!3841 = !DILocation(line: 264, column: 14, scope: !3702)
!3842 = !DILocation(line: 265, column: 2, scope: !3702)
!3843 = !DILocation(line: 265, column: 8, scope: !3702)
!3844 = !DILocation(line: 265, column: 13, scope: !3702)
!3845 = !DILocation(line: 266, column: 2, scope: !3702)
!3846 = !DILocation(line: 267, column: 1, scope: !3702)
!3847 = distinct !DISubprogram(name: "hash_add_unique", scope: !27, file: !27, line: 270, type: !3703, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !23, retainedNodes: !74)
!3848 = !DILocalVariable(name: "hash", arg: 1, scope: !3847, file: !27, line: 270, type: !3481)
!3849 = !DILocation(line: 270, column: 34, scope: !3847)
!3850 = !DILocalVariable(name: "key", arg: 2, scope: !3847, file: !27, line: 270, type: !38)
!3851 = !DILocation(line: 270, column: 52, scope: !3847)
!3852 = !DILocalVariable(name: "value", arg: 3, scope: !3847, file: !27, line: 270, type: !38)
!3853 = !DILocation(line: 270, column: 69, scope: !3847)
!3854 = !DILocalVariable(name: "hashval", scope: !3847, file: !27, line: 272, type: !28)
!3855 = !DILocation(line: 272, column: 11, scope: !3847)
!3856 = !DILocation(line: 272, column: 21, scope: !3847)
!3857 = !DILocation(line: 272, column: 27, scope: !3847)
!3858 = !DILocation(line: 272, column: 38, scope: !3847)
!3859 = !DILocalVariable(name: "pos", scope: !3847, file: !27, line: 273, type: !28)
!3860 = !DILocation(line: 273, column: 11, scope: !3847)
!3861 = !DILocation(line: 273, column: 17, scope: !3847)
!3862 = !DILocation(line: 273, column: 25, scope: !3847)
!3863 = !DILocalVariable(name: "bucket", scope: !3847, file: !27, line: 274, type: !3625)
!3864 = !DILocation(line: 274, column: 22, scope: !3847)
!3865 = !DILocation(line: 274, column: 31, scope: !3847)
!3866 = !DILocation(line: 274, column: 37, scope: !3847)
!3867 = !DILocation(line: 274, column: 47, scope: !3847)
!3868 = !DILocation(line: 274, column: 45, scope: !3847)
!3869 = !DILocalVariable(name: "entry", scope: !3847, file: !27, line: 275, type: !3497)
!3870 = !DILocation(line: 275, column: 21, scope: !3847)
!3871 = !DILocalVariable(name: "entry_end", scope: !3847, file: !27, line: 275, type: !3497)
!3872 = !DILocation(line: 275, column: 29, scope: !3847)
!3873 = !DILocation(line: 277, column: 6, scope: !3874)
!3874 = distinct !DILexicalBlock(scope: !3847, file: !27, line: 277, column: 6)
!3875 = !DILocation(line: 277, column: 14, scope: !3874)
!3876 = !DILocation(line: 277, column: 19, scope: !3874)
!3877 = !DILocation(line: 277, column: 26, scope: !3874)
!3878 = !DILocation(line: 277, column: 34, scope: !3874)
!3879 = !DILocation(line: 277, column: 23, scope: !3874)
!3880 = !DILocation(line: 277, column: 6, scope: !3847)
!3881 = !DILocalVariable(name: "new_total", scope: !3882, file: !27, line: 278, type: !28)
!3882 = distinct !DILexicalBlock(scope: !3874, file: !27, line: 277, column: 41)
!3883 = !DILocation(line: 278, column: 12, scope: !3882)
!3884 = !DILocation(line: 278, column: 24, scope: !3882)
!3885 = !DILocation(line: 278, column: 32, scope: !3882)
!3886 = !DILocation(line: 278, column: 38, scope: !3882)
!3887 = !DILocalVariable(name: "tmp", scope: !3882, file: !27, line: 279, type: !3497)
!3888 = !DILocation(line: 279, column: 22, scope: !3882)
!3889 = !DILocation(line: 279, column: 41, scope: !3882)
!3890 = !DILocation(line: 279, column: 49, scope: !3882)
!3891 = !DILocation(line: 279, column: 58, scope: !3882)
!3892 = !DILocation(line: 279, column: 28, scope: !3882)
!3893 = !DILocation(line: 280, column: 7, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3882, file: !27, line: 280, column: 7)
!3895 = !DILocation(line: 280, column: 11, scope: !3894)
!3896 = !DILocation(line: 280, column: 7, scope: !3882)
!3897 = !DILocation(line: 281, column: 12, scope: !3894)
!3898 = !DILocation(line: 281, column: 11, scope: !3894)
!3899 = !DILocation(line: 281, column: 4, scope: !3894)
!3900 = !DILocation(line: 282, column: 21, scope: !3882)
!3901 = !DILocation(line: 282, column: 3, scope: !3882)
!3902 = !DILocation(line: 282, column: 11, scope: !3882)
!3903 = !DILocation(line: 282, column: 19, scope: !3882)
!3904 = !DILocation(line: 283, column: 19, scope: !3882)
!3905 = !DILocation(line: 283, column: 3, scope: !3882)
!3906 = !DILocation(line: 283, column: 11, scope: !3882)
!3907 = !DILocation(line: 283, column: 17, scope: !3882)
!3908 = !DILocation(line: 284, column: 2, scope: !3882)
!3909 = !DILocation(line: 286, column: 10, scope: !3847)
!3910 = !DILocation(line: 286, column: 18, scope: !3847)
!3911 = !DILocation(line: 286, column: 8, scope: !3847)
!3912 = !DILocation(line: 287, column: 14, scope: !3847)
!3913 = !DILocation(line: 287, column: 22, scope: !3847)
!3914 = !DILocation(line: 287, column: 30, scope: !3847)
!3915 = !DILocation(line: 287, column: 20, scope: !3847)
!3916 = !DILocation(line: 287, column: 12, scope: !3847)
!3917 = !DILocation(line: 288, column: 2, scope: !3847)
!3918 = !DILocation(line: 288, column: 9, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3920, file: !27, line: 288, column: 2)
!3920 = distinct !DILexicalBlock(scope: !3847, file: !27, line: 288, column: 2)
!3921 = !DILocation(line: 288, column: 17, scope: !3919)
!3922 = !DILocation(line: 288, column: 15, scope: !3919)
!3923 = !DILocation(line: 288, column: 2, scope: !3920)
!3924 = !DILocation(line: 289, column: 7, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3926, file: !27, line: 289, column: 7)
!3926 = distinct !DILexicalBlock(scope: !3919, file: !27, line: 288, column: 37)
!3927 = !DILocation(line: 289, column: 18, scope: !3925)
!3928 = !DILocation(line: 289, column: 25, scope: !3925)
!3929 = !DILocation(line: 289, column: 15, scope: !3925)
!3930 = !DILocation(line: 289, column: 7, scope: !3926)
!3931 = !DILocation(line: 290, column: 4, scope: !3925)
!3932 = !DILocation(line: 291, column: 7, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3926, file: !27, line: 291, column: 7)
!3934 = !DILocation(line: 291, column: 13, scope: !3933)
!3935 = !DILocation(line: 291, column: 25, scope: !3933)
!3936 = !DILocation(line: 291, column: 30, scope: !3933)
!3937 = !DILocation(line: 291, column: 37, scope: !3933)
!3938 = !DILocation(line: 291, column: 42, scope: !3933)
!3939 = !DILocation(line: 291, column: 7, scope: !3926)
!3940 = !DILocation(line: 292, column: 4, scope: !3933)
!3941 = !DILocation(line: 293, column: 2, scope: !3926)
!3942 = !DILocation(line: 288, column: 33, scope: !3919)
!3943 = !DILocation(line: 288, column: 2, scope: !3919)
!3944 = distinct !{!3944, !3923, !3945, !3203}
!3945 = !DILocation(line: 293, column: 2, scope: !3920)
!3946 = !DILocation(line: 295, column: 15, scope: !3847)
!3947 = !DILocation(line: 295, column: 2, scope: !3847)
!3948 = !DILocation(line: 295, column: 9, scope: !3847)
!3949 = !DILocation(line: 295, column: 13, scope: !3847)
!3950 = !DILocation(line: 296, column: 17, scope: !3847)
!3951 = !DILocation(line: 296, column: 2, scope: !3847)
!3952 = !DILocation(line: 296, column: 9, scope: !3847)
!3953 = !DILocation(line: 296, column: 15, scope: !3847)
!3954 = !DILocation(line: 297, column: 19, scope: !3847)
!3955 = !DILocation(line: 297, column: 2, scope: !3847)
!3956 = !DILocation(line: 297, column: 9, scope: !3847)
!3957 = !DILocation(line: 297, column: 17, scope: !3847)
!3958 = !DILocation(line: 298, column: 2, scope: !3847)
!3959 = !DILocation(line: 298, column: 10, scope: !3847)
!3960 = !DILocation(line: 298, column: 14, scope: !3847)
!3961 = !DILocation(line: 299, column: 2, scope: !3847)
!3962 = !DILocation(line: 299, column: 8, scope: !3847)
!3963 = !DILocation(line: 299, column: 13, scope: !3847)
!3964 = !DILocation(line: 300, column: 2, scope: !3847)
!3965 = !DILocation(line: 301, column: 1, scope: !3847)
!3966 = distinct !DISubprogram(name: "hash_find", scope: !27, file: !27, line: 323, type: !3967, scopeLine: 324, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !23, retainedNodes: !74)
!3967 = !DISubroutineType(types: !3968)
!3968 = !{!5, !3969, !38}
!3969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3970, size: 64)
!3970 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3482)
!3971 = !DILocalVariable(name: "hash", arg: 1, scope: !3966, file: !27, line: 323, type: !3969)
!3972 = !DILocation(line: 323, column: 36, scope: !3966)
!3973 = !DILocalVariable(name: "key", arg: 2, scope: !3966, file: !27, line: 323, type: !38)
!3974 = !DILocation(line: 323, column: 54, scope: !3966)
!3975 = !DILocalVariable(name: "entry", scope: !3966, file: !27, line: 325, type: !3976)
!3976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3977, size: 64)
!3977 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3498)
!3978 = !DILocation(line: 325, column: 27, scope: !3966)
!3979 = !DILocation(line: 327, column: 26, scope: !3966)
!3980 = !DILocation(line: 327, column: 32, scope: !3966)
!3981 = !DILocation(line: 327, column: 37, scope: !3966)
!3982 = !DILocation(line: 327, column: 43, scope: !3966)
!3983 = !DILocation(line: 327, column: 54, scope: !3966)
!3984 = !DILocation(line: 327, column: 10, scope: !3966)
!3985 = !DILocation(line: 327, column: 8, scope: !3966)
!3986 = !DILocation(line: 328, column: 6, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3966, file: !27, line: 328, column: 6)
!3988 = !DILocation(line: 328, column: 6, scope: !3966)
!3989 = !DILocation(line: 329, column: 18, scope: !3987)
!3990 = !DILocation(line: 329, column: 25, scope: !3987)
!3991 = !DILocation(line: 329, column: 3, scope: !3987)
!3992 = !DILocation(line: 330, column: 2, scope: !3966)
!3993 = !DILocation(line: 331, column: 1, scope: !3966)
!3994 = distinct !DISubprogram(name: "hash_find_entry", scope: !27, file: !27, line: 303, type: !3995, scopeLine: 306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !23, retainedNodes: !74)
!3995 = !DISubroutineType(types: !3996)
!3996 = !{!3497, !3969, !480, !28}
!3997 = !DILocalVariable(name: "hash", arg: 1, scope: !3994, file: !27, line: 303, type: !3969)
!3998 = !DILocation(line: 303, column: 69, scope: !3994)
!3999 = !DILocalVariable(name: "key", arg: 2, scope: !3994, file: !27, line: 304, type: !480)
!4000 = !DILocation(line: 304, column: 21, scope: !3994)
!4001 = !DILocalVariable(name: "hashval", arg: 3, scope: !3994, file: !27, line: 305, type: !28)
!4002 = !DILocation(line: 305, column: 18, scope: !3994)
!4003 = !DILocalVariable(name: "pos", scope: !3994, file: !27, line: 307, type: !28)
!4004 = !DILocation(line: 307, column: 11, scope: !3994)
!4005 = !DILocation(line: 307, column: 17, scope: !3994)
!4006 = !DILocation(line: 307, column: 25, scope: !3994)
!4007 = !DILocalVariable(name: "bucket", scope: !3994, file: !27, line: 308, type: !4008)
!4008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4009, size: 64)
!4009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3494)
!4010 = !DILocation(line: 308, column: 28, scope: !3994)
!4011 = !DILocation(line: 308, column: 37, scope: !3994)
!4012 = !DILocation(line: 308, column: 43, scope: !3994)
!4013 = !DILocation(line: 308, column: 53, scope: !3994)
!4014 = !DILocation(line: 308, column: 51, scope: !3994)
!4015 = !DILocalVariable(name: "entry", scope: !3994, file: !27, line: 309, type: !3497)
!4016 = !DILocation(line: 309, column: 21, scope: !3994)
!4017 = !DILocalVariable(name: "entry_end", scope: !3994, file: !27, line: 309, type: !3497)
!4018 = !DILocation(line: 309, column: 29, scope: !3994)
!4019 = !DILocation(line: 311, column: 10, scope: !3994)
!4020 = !DILocation(line: 311, column: 18, scope: !3994)
!4021 = !DILocation(line: 311, column: 8, scope: !3994)
!4022 = !DILocation(line: 312, column: 14, scope: !3994)
!4023 = !DILocation(line: 312, column: 22, scope: !3994)
!4024 = !DILocation(line: 312, column: 30, scope: !3994)
!4025 = !DILocation(line: 312, column: 20, scope: !3994)
!4026 = !DILocation(line: 312, column: 12, scope: !3994)
!4027 = !DILocation(line: 313, column: 2, scope: !3994)
!4028 = !DILocation(line: 313, column: 9, scope: !4029)
!4029 = distinct !DILexicalBlock(scope: !4030, file: !27, line: 313, column: 2)
!4030 = distinct !DILexicalBlock(scope: !3994, file: !27, line: 313, column: 2)
!4031 = !DILocation(line: 313, column: 17, scope: !4029)
!4032 = !DILocation(line: 313, column: 15, scope: !4029)
!4033 = !DILocation(line: 313, column: 2, scope: !4030)
!4034 = !DILocation(line: 314, column: 7, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !4036, file: !27, line: 314, column: 7)
!4036 = distinct !DILexicalBlock(scope: !4029, file: !27, line: 313, column: 37)
!4037 = !DILocation(line: 314, column: 18, scope: !4035)
!4038 = !DILocation(line: 314, column: 25, scope: !4035)
!4039 = !DILocation(line: 314, column: 15, scope: !4035)
!4040 = !DILocation(line: 314, column: 7, scope: !4036)
!4041 = !DILocation(line: 315, column: 4, scope: !4035)
!4042 = !DILocation(line: 316, column: 7, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4036, file: !27, line: 316, column: 7)
!4044 = !DILocation(line: 316, column: 13, scope: !4043)
!4045 = !DILocation(line: 316, column: 25, scope: !4043)
!4046 = !DILocation(line: 316, column: 30, scope: !4043)
!4047 = !DILocation(line: 316, column: 37, scope: !4043)
!4048 = !DILocation(line: 316, column: 42, scope: !4043)
!4049 = !DILocation(line: 316, column: 7, scope: !4036)
!4050 = !DILocation(line: 317, column: 11, scope: !4043)
!4051 = !DILocation(line: 317, column: 4, scope: !4043)
!4052 = !DILocation(line: 318, column: 2, scope: !4036)
!4053 = !DILocation(line: 313, column: 33, scope: !4029)
!4054 = !DILocation(line: 313, column: 2, scope: !4029)
!4055 = distinct !{!4055, !4033, !4056, !3203}
!4056 = !DILocation(line: 318, column: 2, scope: !4030)
!4057 = !DILocation(line: 320, column: 2, scope: !3994)
!4058 = !DILocation(line: 321, column: 1, scope: !3994)
!4059 = distinct !DISubprogram(name: "hash_del", scope: !27, file: !27, line: 333, type: !4060, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !23, retainedNodes: !74)
!4060 = !DISubroutineType(types: !4061)
!4061 = !{!37, !3481, !38}
!4062 = !DILocalVariable(name: "hash", arg: 1, scope: !4059, file: !27, line: 333, type: !3481)
!4063 = !DILocation(line: 333, column: 27, scope: !4059)
!4064 = !DILocalVariable(name: "key", arg: 2, scope: !4059, file: !27, line: 333, type: !38)
!4065 = !DILocation(line: 333, column: 45, scope: !4059)
!4066 = !DILocalVariable(name: "hashval", scope: !4059, file: !27, line: 335, type: !28)
!4067 = !DILocation(line: 335, column: 11, scope: !4059)
!4068 = !DILocation(line: 335, column: 21, scope: !4059)
!4069 = !DILocation(line: 335, column: 27, scope: !4059)
!4070 = !DILocation(line: 335, column: 38, scope: !4059)
!4071 = !DILocalVariable(name: "pos", scope: !4059, file: !27, line: 336, type: !28)
!4072 = !DILocation(line: 336, column: 11, scope: !4059)
!4073 = !DILocation(line: 336, column: 17, scope: !4059)
!4074 = !DILocation(line: 336, column: 25, scope: !4059)
!4075 = !DILocalVariable(name: "steps_used", scope: !4059, file: !27, line: 337, type: !28)
!4076 = !DILocation(line: 337, column: 11, scope: !4059)
!4077 = !DILocalVariable(name: "steps_total", scope: !4059, file: !27, line: 337, type: !28)
!4078 = !DILocation(line: 337, column: 23, scope: !4059)
!4079 = !DILocalVariable(name: "bucket", scope: !4059, file: !27, line: 338, type: !3625)
!4080 = !DILocation(line: 338, column: 22, scope: !4059)
!4081 = !DILocation(line: 338, column: 31, scope: !4059)
!4082 = !DILocation(line: 338, column: 37, scope: !4059)
!4083 = !DILocation(line: 338, column: 47, scope: !4059)
!4084 = !DILocation(line: 338, column: 45, scope: !4059)
!4085 = !DILocalVariable(name: "entry", scope: !4059, file: !27, line: 339, type: !3497)
!4086 = !DILocation(line: 339, column: 21, scope: !4059)
!4087 = !DILocalVariable(name: "entry_end", scope: !4059, file: !27, line: 339, type: !3497)
!4088 = !DILocation(line: 339, column: 29, scope: !4059)
!4089 = !DILocation(line: 341, column: 26, scope: !4059)
!4090 = !DILocation(line: 341, column: 32, scope: !4059)
!4091 = !DILocation(line: 341, column: 37, scope: !4059)
!4092 = !DILocation(line: 341, column: 10, scope: !4059)
!4093 = !DILocation(line: 341, column: 8, scope: !4059)
!4094 = !DILocation(line: 342, column: 6, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !4059, file: !27, line: 342, column: 6)
!4096 = !DILocation(line: 342, column: 12, scope: !4095)
!4097 = !DILocation(line: 342, column: 6, scope: !4059)
!4098 = !DILocation(line: 343, column: 3, scope: !4095)
!4099 = !DILocation(line: 345, column: 6, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4059, file: !27, line: 345, column: 6)
!4101 = !DILocation(line: 345, column: 12, scope: !4100)
!4102 = !DILocation(line: 345, column: 6, scope: !4059)
!4103 = !DILocation(line: 346, column: 3, scope: !4100)
!4104 = !DILocation(line: 346, column: 9, scope: !4100)
!4105 = !DILocation(line: 346, column: 28, scope: !4100)
!4106 = !DILocation(line: 346, column: 35, scope: !4100)
!4107 = !DILocation(line: 347, column: 6, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !4059, file: !27, line: 347, column: 6)
!4109 = !DILocation(line: 347, column: 12, scope: !4108)
!4110 = !DILocation(line: 347, column: 6, scope: !4059)
!4111 = !DILocation(line: 348, column: 3, scope: !4108)
!4112 = !DILocation(line: 348, column: 9, scope: !4108)
!4113 = !DILocation(line: 348, column: 26, scope: !4108)
!4114 = !DILocation(line: 348, column: 33, scope: !4108)
!4115 = !DILocation(line: 350, column: 14, scope: !4059)
!4116 = !DILocation(line: 350, column: 22, scope: !4059)
!4117 = !DILocation(line: 350, column: 32, scope: !4059)
!4118 = !DILocation(line: 350, column: 40, scope: !4059)
!4119 = !DILocation(line: 350, column: 30, scope: !4059)
!4120 = !DILocation(line: 350, column: 12, scope: !4059)
!4121 = !DILocation(line: 351, column: 10, scope: !4059)
!4122 = !DILocation(line: 351, column: 17, scope: !4059)
!4123 = !DILocation(line: 351, column: 23, scope: !4059)
!4124 = !DILocation(line: 352, column: 12, scope: !4059)
!4125 = !DILocation(line: 352, column: 24, scope: !4059)
!4126 = !DILocation(line: 352, column: 22, scope: !4059)
!4127 = !DILocation(line: 352, column: 31, scope: !4059)
!4128 = !DILocation(line: 351, column: 2, scope: !4059)
!4129 = !DILocation(line: 354, column: 2, scope: !4059)
!4130 = !DILocation(line: 354, column: 10, scope: !4059)
!4131 = !DILocation(line: 354, column: 14, scope: !4059)
!4132 = !DILocation(line: 355, column: 2, scope: !4059)
!4133 = !DILocation(line: 355, column: 8, scope: !4059)
!4134 = !DILocation(line: 355, column: 13, scope: !4059)
!4135 = !DILocation(line: 357, column: 15, scope: !4059)
!4136 = !DILocation(line: 357, column: 23, scope: !4059)
!4137 = !DILocation(line: 357, column: 28, scope: !4059)
!4138 = !DILocation(line: 357, column: 13, scope: !4059)
!4139 = !DILocation(line: 358, column: 16, scope: !4059)
!4140 = !DILocation(line: 358, column: 24, scope: !4059)
!4141 = !DILocation(line: 358, column: 30, scope: !4059)
!4142 = !DILocation(line: 358, column: 14, scope: !4059)
!4143 = !DILocation(line: 359, column: 6, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4059, file: !27, line: 359, column: 6)
!4145 = !DILocation(line: 359, column: 17, scope: !4144)
!4146 = !DILocation(line: 359, column: 23, scope: !4144)
!4147 = !DILocation(line: 359, column: 21, scope: !4144)
!4148 = !DILocation(line: 359, column: 6, scope: !4059)
!4149 = !DILocalVariable(name: "tmp", scope: !4150, file: !27, line: 360, type: !3497)
!4150 = distinct !DILexicalBlock(scope: !4144, file: !27, line: 359, column: 36)
!4151 = !DILocation(line: 360, column: 22, scope: !4150)
!4152 = !DILocation(line: 360, column: 41, scope: !4150)
!4153 = !DILocation(line: 360, column: 49, scope: !4150)
!4154 = !DILocation(line: 360, column: 58, scope: !4150)
!4155 = !DILocation(line: 360, column: 69, scope: !4150)
!4156 = !DILocation(line: 360, column: 28, scope: !4150)
!4157 = !DILocation(line: 362, column: 7, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4150, file: !27, line: 362, column: 7)
!4159 = !DILocation(line: 362, column: 7, scope: !4150)
!4160 = !DILocation(line: 363, column: 22, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4158, file: !27, line: 362, column: 12)
!4162 = !DILocation(line: 363, column: 4, scope: !4161)
!4163 = !DILocation(line: 363, column: 12, scope: !4161)
!4164 = !DILocation(line: 363, column: 20, scope: !4161)
!4165 = !DILocation(line: 364, column: 21, scope: !4161)
!4166 = !DILocation(line: 364, column: 32, scope: !4161)
!4167 = !DILocation(line: 364, column: 37, scope: !4161)
!4168 = !DILocation(line: 364, column: 4, scope: !4161)
!4169 = !DILocation(line: 364, column: 12, scope: !4161)
!4170 = !DILocation(line: 364, column: 18, scope: !4161)
!4171 = !DILocation(line: 365, column: 3, scope: !4161)
!4172 = !DILocation(line: 366, column: 2, scope: !4150)
!4173 = !DILocation(line: 368, column: 2, scope: !4059)
!4174 = !DILocation(line: 369, column: 1, scope: !4059)
!4175 = distinct !DISubprogram(name: "hash_get_count", scope: !27, file: !27, line: 371, type: !4176, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !23, retainedNodes: !74)
!4176 = !DISubroutineType(types: !4177)
!4177 = !{!28, !3969}
!4178 = !DILocalVariable(name: "hash", arg: 1, scope: !4175, file: !27, line: 371, type: !3969)
!4179 = !DILocation(line: 371, column: 44, scope: !4175)
!4180 = !DILocation(line: 373, column: 9, scope: !4175)
!4181 = !DILocation(line: 373, column: 15, scope: !4175)
!4182 = !DILocation(line: 373, column: 2, scope: !4175)
!4183 = distinct !DISubprogram(name: "hash_iter_init", scope: !27, file: !27, line: 376, type: !4184, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !23, retainedNodes: !74)
!4184 = !DISubroutineType(types: !4185)
!4185 = !{null, !3969, !4186}
!4186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4187, size: 64)
!4187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_iter", file: !333, line: 8, size: 128, elements: !4188)
!4188 = !{!4189, !4190, !4191}
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !4187, file: !333, line: 9, baseType: !3969, size: 64)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "bucket", scope: !4187, file: !333, line: 10, baseType: !28, size: 32, offset: 64)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4187, file: !333, line: 11, baseType: !37, size: 32, offset: 96)
!4192 = !DILocalVariable(name: "hash", arg: 1, scope: !4183, file: !27, line: 376, type: !3969)
!4193 = !DILocation(line: 376, column: 40, scope: !4183)
!4194 = !DILocalVariable(name: "iter", arg: 2, scope: !4183, file: !27, line: 376, type: !4186)
!4195 = !DILocation(line: 376, column: 64, scope: !4183)
!4196 = !DILocation(line: 378, column: 15, scope: !4183)
!4197 = !DILocation(line: 378, column: 2, scope: !4183)
!4198 = !DILocation(line: 378, column: 8, scope: !4183)
!4199 = !DILocation(line: 378, column: 13, scope: !4183)
!4200 = !DILocation(line: 379, column: 2, scope: !4183)
!4201 = !DILocation(line: 379, column: 8, scope: !4183)
!4202 = !DILocation(line: 379, column: 15, scope: !4183)
!4203 = !DILocation(line: 380, column: 2, scope: !4183)
!4204 = !DILocation(line: 380, column: 8, scope: !4183)
!4205 = !DILocation(line: 380, column: 14, scope: !4183)
!4206 = !DILocation(line: 381, column: 1, scope: !4183)
!4207 = distinct !DISubprogram(name: "hash_iter_next", scope: !27, file: !27, line: 383, type: !4208, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !23, retainedNodes: !74)
!4208 = !DISubroutineType(types: !4209)
!4209 = !{!341, !4186, !4210, !4210}
!4210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !38, size: 64)
!4211 = !DILocalVariable(name: "iter", arg: 1, scope: !4207, file: !27, line: 383, type: !4186)
!4212 = !DILocation(line: 383, column: 39, scope: !4207)
!4213 = !DILocalVariable(name: "key", arg: 2, scope: !4207, file: !27, line: 383, type: !4210)
!4214 = !DILocation(line: 383, column: 58, scope: !4207)
!4215 = !DILocalVariable(name: "value", arg: 3, scope: !4207, file: !27, line: 384, type: !4210)
!4216 = !DILocation(line: 384, column: 21, scope: !4207)
!4217 = !DILocalVariable(name: "b", scope: !4207, file: !27, line: 386, type: !4008)
!4218 = !DILocation(line: 386, column: 28, scope: !4207)
!4219 = !DILocation(line: 386, column: 32, scope: !4207)
!4220 = !DILocation(line: 386, column: 38, scope: !4207)
!4221 = !DILocation(line: 386, column: 44, scope: !4207)
!4222 = !DILocation(line: 386, column: 54, scope: !4207)
!4223 = !DILocation(line: 386, column: 60, scope: !4207)
!4224 = !DILocation(line: 386, column: 52, scope: !4207)
!4225 = !DILocalVariable(name: "e", scope: !4207, file: !27, line: 387, type: !3976)
!4226 = !DILocation(line: 387, column: 27, scope: !4207)
!4227 = !DILocation(line: 389, column: 2, scope: !4207)
!4228 = !DILocation(line: 389, column: 8, scope: !4207)
!4229 = !DILocation(line: 389, column: 13, scope: !4207)
!4230 = !DILocation(line: 391, column: 16, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4207, file: !27, line: 391, column: 6)
!4232 = !DILocation(line: 391, column: 22, scope: !4231)
!4233 = !DILocation(line: 391, column: 31, scope: !4231)
!4234 = !DILocation(line: 391, column: 34, scope: !4231)
!4235 = !DILocation(line: 391, column: 28, scope: !4231)
!4236 = !DILocation(line: 391, column: 6, scope: !4207)
!4237 = !DILocation(line: 392, column: 3, scope: !4238)
!4238 = distinct !DILexicalBlock(scope: !4231, file: !27, line: 391, column: 40)
!4239 = !DILocation(line: 392, column: 9, scope: !4238)
!4240 = !DILocation(line: 392, column: 15, scope: !4238)
!4241 = !DILocation(line: 394, column: 8, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4238, file: !27, line: 394, column: 3)
!4243 = !DILocation(line: 394, column: 14, scope: !4242)
!4244 = !DILocation(line: 394, column: 20, scope: !4242)
!4245 = !DILocation(line: 394, column: 24, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4242, file: !27, line: 394, column: 3)
!4247 = !DILocation(line: 394, column: 30, scope: !4246)
!4248 = !DILocation(line: 394, column: 37, scope: !4246)
!4249 = !DILocation(line: 394, column: 3, scope: !4242)
!4250 = !DILocation(line: 396, column: 8, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4246, file: !27, line: 395, column: 24)
!4252 = !DILocation(line: 396, column: 14, scope: !4251)
!4253 = !DILocation(line: 396, column: 20, scope: !4251)
!4254 = !DILocation(line: 396, column: 30, scope: !4251)
!4255 = !DILocation(line: 396, column: 36, scope: !4251)
!4256 = !DILocation(line: 396, column: 28, scope: !4251)
!4257 = !DILocation(line: 396, column: 6, scope: !4251)
!4258 = !DILocation(line: 398, column: 8, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4251, file: !27, line: 398, column: 8)
!4260 = !DILocation(line: 398, column: 11, scope: !4259)
!4261 = !DILocation(line: 398, column: 16, scope: !4259)
!4262 = !DILocation(line: 398, column: 8, scope: !4251)
!4263 = !DILocation(line: 399, column: 5, scope: !4259)
!4264 = !DILocation(line: 400, column: 3, scope: !4251)
!4265 = !DILocation(line: 395, column: 8, scope: !4246)
!4266 = !DILocation(line: 395, column: 14, scope: !4246)
!4267 = !DILocation(line: 395, column: 20, scope: !4246)
!4268 = !DILocation(line: 394, column: 3, scope: !4246)
!4269 = distinct !{!4269, !4249, !4270, !3203}
!4270 = !DILocation(line: 400, column: 3, scope: !4242)
!4271 = !DILocation(line: 402, column: 7, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4238, file: !27, line: 402, column: 7)
!4273 = !DILocation(line: 402, column: 13, scope: !4272)
!4274 = !DILocation(line: 402, column: 20, scope: !4272)
!4275 = !DILocation(line: 402, column: 7, scope: !4238)
!4276 = !DILocation(line: 403, column: 4, scope: !4272)
!4277 = !DILocation(line: 404, column: 2, scope: !4238)
!4278 = !DILocation(line: 406, column: 6, scope: !4207)
!4279 = !DILocation(line: 406, column: 9, scope: !4207)
!4280 = !DILocation(line: 406, column: 19, scope: !4207)
!4281 = !DILocation(line: 406, column: 25, scope: !4207)
!4282 = !DILocation(line: 406, column: 17, scope: !4207)
!4283 = !DILocation(line: 406, column: 4, scope: !4207)
!4284 = !DILocation(line: 408, column: 6, scope: !4285)
!4285 = distinct !DILexicalBlock(scope: !4207, file: !27, line: 408, column: 6)
!4286 = !DILocation(line: 408, column: 12, scope: !4285)
!4287 = !DILocation(line: 408, column: 6, scope: !4207)
!4288 = !DILocation(line: 409, column: 12, scope: !4285)
!4289 = !DILocation(line: 409, column: 15, scope: !4285)
!4290 = !DILocation(line: 409, column: 4, scope: !4285)
!4291 = !DILocation(line: 409, column: 10, scope: !4285)
!4292 = !DILocation(line: 409, column: 3, scope: !4285)
!4293 = !DILocation(line: 410, column: 6, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4207, file: !27, line: 410, column: 6)
!4295 = !DILocation(line: 410, column: 10, scope: !4294)
!4296 = !DILocation(line: 410, column: 6, scope: !4207)
!4297 = !DILocation(line: 411, column: 10, scope: !4294)
!4298 = !DILocation(line: 411, column: 13, scope: !4294)
!4299 = !DILocation(line: 411, column: 4, scope: !4294)
!4300 = !DILocation(line: 411, column: 8, scope: !4294)
!4301 = !DILocation(line: 411, column: 3, scope: !4294)
!4302 = !DILocation(line: 413, column: 2, scope: !4207)
!4303 = !DILocation(line: 414, column: 1, scope: !4207)
!4304 = !DILocalVariable(name: "value", arg: 1, scope: !57, file: !58, line: 24, type: !6)
!4305 = !DILocation(line: 24, column: 23, scope: !57)
!4306 = !DILocalVariable(name: "dst", arg: 2, scope: !57, file: !58, line: 25, type: !61)
!4307 = !DILocation(line: 25, column: 21, scope: !57)
!4308 = !DILocalVariable(name: "length_out", arg: 3, scope: !57, file: !58, line: 26, type: !62)
!4309 = !DILocation(line: 26, column: 24, scope: !57)
!4310 = !DILocalVariable(name: "next", scope: !57, file: !58, line: 33, type: !6)
!4311 = !DILocation(line: 33, column: 12, scope: !57)
!4312 = !DILocation(line: 40, column: 5, scope: !57)
!4313 = !DILocation(line: 40, column: 13, scope: !57)
!4314 = !DILocation(line: 40, column: 17, scope: !57)
!4315 = !DILocation(line: 41, column: 5, scope: !57)
!4316 = !DILocation(line: 41, column: 12, scope: !57)
!4317 = !DILocation(line: 41, column: 18, scope: !57)
!4318 = !DILocalVariable(name: "i", scope: !4319, file: !58, line: 42, type: !2956)
!4319 = distinct !DILexicalBlock(scope: !57, file: !58, line: 41, column: 26)
!4320 = !DILocation(line: 42, column: 17, scope: !4319)
!4321 = !DILocation(line: 42, column: 33, scope: !4319)
!4322 = !DILocation(line: 42, column: 39, scope: !4319)
!4323 = !DILocation(line: 42, column: 46, scope: !4319)
!4324 = !DILocation(line: 42, column: 21, scope: !4319)
!4325 = !DILocation(line: 43, column: 8, scope: !4319)
!4326 = !DILocation(line: 44, column: 21, scope: !4319)
!4327 = !DILocation(line: 44, column: 23, scope: !4319)
!4328 = !DILocation(line: 44, column: 14, scope: !4319)
!4329 = !DILocation(line: 44, column: 2, scope: !4319)
!4330 = !DILocation(line: 44, column: 6, scope: !4319)
!4331 = !DILocation(line: 44, column: 12, scope: !4319)
!4332 = !DILocation(line: 45, column: 25, scope: !4319)
!4333 = !DILocation(line: 45, column: 18, scope: !4319)
!4334 = !DILocation(line: 45, column: 2, scope: !4319)
!4335 = !DILocation(line: 45, column: 6, scope: !4319)
!4336 = !DILocation(line: 45, column: 11, scope: !4319)
!4337 = !DILocation(line: 45, column: 16, scope: !4319)
!4338 = !DILocation(line: 46, column: 7, scope: !4319)
!4339 = distinct !{!4339, !4315, !4340, !3203}
!4340 = !DILocation(line: 47, column: 5, scope: !57)
!4341 = !DILocation(line: 49, column: 9, scope: !4342)
!4342 = distinct !DILexicalBlock(scope: !57, file: !58, line: 49, column: 9)
!4343 = !DILocation(line: 49, column: 15, scope: !4342)
!4344 = !DILocation(line: 49, column: 9, scope: !57)
!4345 = !DILocation(line: 50, column: 37, scope: !4346)
!4346 = distinct !DILexicalBlock(scope: !4342, file: !58, line: 49, column: 21)
!4347 = !DILocation(line: 50, column: 27, scope: !4346)
!4348 = !DILocation(line: 50, column: 25, scope: !4346)
!4349 = !DILocation(line: 50, column: 14, scope: !4346)
!4350 = !DILocation(line: 50, column: 2, scope: !4346)
!4351 = !DILocation(line: 50, column: 6, scope: !4346)
!4352 = !DILocation(line: 50, column: 12, scope: !4346)
!4353 = !DILocation(line: 51, column: 25, scope: !4346)
!4354 = !DILocation(line: 51, column: 23, scope: !4346)
!4355 = !DILocation(line: 51, column: 30, scope: !4346)
!4356 = !DILocation(line: 51, column: 3, scope: !4346)
!4357 = !DILocation(line: 51, column: 14, scope: !4346)
!4358 = !DILocation(line: 52, column: 9, scope: !4346)
!4359 = !DILocation(line: 52, column: 15, scope: !4346)
!4360 = !DILocation(line: 52, column: 13, scope: !4346)
!4361 = !DILocation(line: 52, column: 2, scope: !4346)
!4362 = !DILocalVariable(name: "i", scope: !57, file: !58, line: 54, type: !66)
!4363 = !DILocation(line: 54, column: 14, scope: !57)
!4364 = !DILocation(line: 54, column: 28, scope: !57)
!4365 = !DILocation(line: 54, column: 18, scope: !57)
!4366 = !DILocation(line: 54, column: 34, scope: !57)
!4367 = !DILocation(line: 55, column: 24, scope: !57)
!4368 = !DILocation(line: 55, column: 26, scope: !57)
!4369 = !DILocation(line: 55, column: 17, scope: !57)
!4370 = !DILocation(line: 55, column: 5, scope: !57)
!4371 = !DILocation(line: 55, column: 9, scope: !57)
!4372 = !DILocation(line: 55, column: 15, scope: !57)
!4373 = !DILocation(line: 56, column: 28, scope: !57)
!4374 = !DILocation(line: 56, column: 21, scope: !57)
!4375 = !DILocation(line: 56, column: 5, scope: !57)
!4376 = !DILocation(line: 56, column: 9, scope: !57)
!4377 = !DILocation(line: 56, column: 14, scope: !57)
!4378 = !DILocation(line: 56, column: 19, scope: !57)
!4379 = !DILocation(line: 57, column: 28, scope: !57)
!4380 = !DILocation(line: 57, column: 26, scope: !57)
!4381 = !DILocation(line: 57, column: 6, scope: !57)
!4382 = !DILocation(line: 57, column: 17, scope: !57)
!4383 = !DILocation(line: 58, column: 12, scope: !57)
!4384 = !DILocation(line: 58, column: 18, scope: !57)
!4385 = !DILocation(line: 58, column: 16, scope: !57)
!4386 = !DILocation(line: 58, column: 23, scope: !57)
!4387 = !DILocation(line: 58, column: 5, scope: !57)
!4388 = !DILocation(line: 59, column: 1, scope: !57)
!4389 = distinct !DISubprogram(name: "int_to_string", scope: !58, file: !58, line: 62, type: !4390, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !63, retainedNodes: !74)
!4390 = !DISubroutineType(types: !4391)
!4391 = !{!61, !4392, !61, !62}
!4392 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !462, line: 108, baseType: !2699)
!4393 = !DILocalVariable(name: "value", arg: 1, scope: !4389, file: !58, line: 62, type: !4392)
!4394 = !DILocation(line: 62, column: 23, scope: !4389)
!4395 = !DILocalVariable(name: "dst", arg: 2, scope: !4389, file: !58, line: 63, type: !61)
!4396 = !DILocation(line: 63, column: 20, scope: !4389)
!4397 = !DILocalVariable(name: "length_out", arg: 3, scope: !4389, file: !58, line: 64, type: !62)
!4398 = !DILocation(line: 64, column: 23, scope: !4389)
!4399 = !DILocation(line: 66, column: 9, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4389, file: !58, line: 66, column: 9)
!4401 = !DILocation(line: 66, column: 15, scope: !4400)
!4402 = !DILocation(line: 66, column: 9, scope: !4389)
!4403 = !DILocalVariable(name: "p", scope: !4404, file: !58, line: 67, type: !61)
!4404 = distinct !DILexicalBlock(scope: !4400, file: !58, line: 66, column: 20)
!4405 = !DILocation(line: 67, column: 15, scope: !4404)
!4406 = !DILocation(line: 67, column: 44, scope: !4404)
!4407 = !DILocation(line: 67, column: 43, scope: !4404)
!4408 = !DILocation(line: 67, column: 51, scope: !4404)
!4409 = !DILocation(line: 67, column: 56, scope: !4404)
!4410 = !DILocation(line: 24, column: 23, scope: !57, inlinedAt: !4411)
!4411 = distinct !DILocation(line: 67, column: 19, scope: !4404)
!4412 = !DILocation(line: 25, column: 21, scope: !57, inlinedAt: !4411)
!4413 = !DILocation(line: 26, column: 24, scope: !57, inlinedAt: !4411)
!4414 = !DILocation(line: 33, column: 12, scope: !57, inlinedAt: !4411)
!4415 = !DILocation(line: 40, column: 5, scope: !57, inlinedAt: !4411)
!4416 = !DILocation(line: 40, column: 13, scope: !57, inlinedAt: !4411)
!4417 = !DILocation(line: 40, column: 17, scope: !57, inlinedAt: !4411)
!4418 = !DILocation(line: 41, column: 5, scope: !57, inlinedAt: !4411)
!4419 = !DILocation(line: 41, column: 12, scope: !57, inlinedAt: !4411)
!4420 = !DILocation(line: 41, column: 18, scope: !57, inlinedAt: !4411)
!4421 = !DILocation(line: 42, column: 17, scope: !4319, inlinedAt: !4411)
!4422 = !DILocation(line: 42, column: 33, scope: !4319, inlinedAt: !4411)
!4423 = !DILocation(line: 42, column: 39, scope: !4319, inlinedAt: !4411)
!4424 = !DILocation(line: 42, column: 46, scope: !4319, inlinedAt: !4411)
!4425 = !DILocation(line: 42, column: 21, scope: !4319, inlinedAt: !4411)
!4426 = !DILocation(line: 43, column: 8, scope: !4319, inlinedAt: !4411)
!4427 = !DILocation(line: 44, column: 21, scope: !4319, inlinedAt: !4411)
!4428 = !DILocation(line: 44, column: 23, scope: !4319, inlinedAt: !4411)
!4429 = !DILocation(line: 44, column: 14, scope: !4319, inlinedAt: !4411)
!4430 = !DILocation(line: 44, column: 2, scope: !4319, inlinedAt: !4411)
!4431 = !DILocation(line: 44, column: 6, scope: !4319, inlinedAt: !4411)
!4432 = !DILocation(line: 44, column: 12, scope: !4319, inlinedAt: !4411)
!4433 = !DILocation(line: 45, column: 25, scope: !4319, inlinedAt: !4411)
!4434 = !DILocation(line: 45, column: 18, scope: !4319, inlinedAt: !4411)
!4435 = !DILocation(line: 45, column: 2, scope: !4319, inlinedAt: !4411)
!4436 = !DILocation(line: 45, column: 6, scope: !4319, inlinedAt: !4411)
!4437 = !DILocation(line: 45, column: 11, scope: !4319, inlinedAt: !4411)
!4438 = !DILocation(line: 45, column: 16, scope: !4319, inlinedAt: !4411)
!4439 = !DILocation(line: 46, column: 7, scope: !4319, inlinedAt: !4411)
!4440 = distinct !{!4440, !4418, !4441, !3203}
!4441 = !DILocation(line: 47, column: 5, scope: !57, inlinedAt: !4411)
!4442 = !DILocation(line: 49, column: 9, scope: !4342, inlinedAt: !4411)
!4443 = !DILocation(line: 49, column: 15, scope: !4342, inlinedAt: !4411)
!4444 = !DILocation(line: 49, column: 9, scope: !57, inlinedAt: !4411)
!4445 = !DILocation(line: 50, column: 37, scope: !4346, inlinedAt: !4411)
!4446 = !DILocation(line: 50, column: 27, scope: !4346, inlinedAt: !4411)
!4447 = !DILocation(line: 50, column: 25, scope: !4346, inlinedAt: !4411)
!4448 = !DILocation(line: 50, column: 14, scope: !4346, inlinedAt: !4411)
!4449 = !DILocation(line: 50, column: 2, scope: !4346, inlinedAt: !4411)
!4450 = !DILocation(line: 50, column: 6, scope: !4346, inlinedAt: !4411)
!4451 = !DILocation(line: 50, column: 12, scope: !4346, inlinedAt: !4411)
!4452 = !DILocation(line: 51, column: 25, scope: !4346, inlinedAt: !4411)
!4453 = !DILocation(line: 51, column: 23, scope: !4346, inlinedAt: !4411)
!4454 = !DILocation(line: 51, column: 30, scope: !4346, inlinedAt: !4411)
!4455 = !DILocation(line: 51, column: 3, scope: !4346, inlinedAt: !4411)
!4456 = !DILocation(line: 51, column: 14, scope: !4346, inlinedAt: !4411)
!4457 = !DILocation(line: 52, column: 9, scope: !4346, inlinedAt: !4411)
!4458 = !DILocation(line: 52, column: 15, scope: !4346, inlinedAt: !4411)
!4459 = !DILocation(line: 52, column: 13, scope: !4346, inlinedAt: !4411)
!4460 = !DILocation(line: 52, column: 2, scope: !4346, inlinedAt: !4411)
!4461 = !DILocation(line: 54, column: 14, scope: !57, inlinedAt: !4411)
!4462 = !DILocation(line: 54, column: 28, scope: !57, inlinedAt: !4411)
!4463 = !DILocation(line: 54, column: 18, scope: !57, inlinedAt: !4411)
!4464 = !DILocation(line: 54, column: 34, scope: !57, inlinedAt: !4411)
!4465 = !DILocation(line: 55, column: 24, scope: !57, inlinedAt: !4411)
!4466 = !DILocation(line: 55, column: 26, scope: !57, inlinedAt: !4411)
!4467 = !DILocation(line: 55, column: 17, scope: !57, inlinedAt: !4411)
!4468 = !DILocation(line: 55, column: 5, scope: !57, inlinedAt: !4411)
!4469 = !DILocation(line: 55, column: 9, scope: !57, inlinedAt: !4411)
!4470 = !DILocation(line: 55, column: 15, scope: !57, inlinedAt: !4411)
!4471 = !DILocation(line: 56, column: 28, scope: !57, inlinedAt: !4411)
!4472 = !DILocation(line: 56, column: 21, scope: !57, inlinedAt: !4411)
!4473 = !DILocation(line: 56, column: 5, scope: !57, inlinedAt: !4411)
!4474 = !DILocation(line: 56, column: 9, scope: !57, inlinedAt: !4411)
!4475 = !DILocation(line: 56, column: 14, scope: !57, inlinedAt: !4411)
!4476 = !DILocation(line: 56, column: 19, scope: !57, inlinedAt: !4411)
!4477 = !DILocation(line: 57, column: 28, scope: !57, inlinedAt: !4411)
!4478 = !DILocation(line: 57, column: 26, scope: !57, inlinedAt: !4411)
!4479 = !DILocation(line: 57, column: 6, scope: !57, inlinedAt: !4411)
!4480 = !DILocation(line: 57, column: 17, scope: !57, inlinedAt: !4411)
!4481 = !DILocation(line: 58, column: 12, scope: !57, inlinedAt: !4411)
!4482 = !DILocation(line: 58, column: 18, scope: !57, inlinedAt: !4411)
!4483 = !DILocation(line: 58, column: 16, scope: !57, inlinedAt: !4411)
!4484 = !DILocation(line: 58, column: 23, scope: !57, inlinedAt: !4411)
!4485 = !DILocation(line: 58, column: 5, scope: !57, inlinedAt: !4411)
!4486 = !DILocation(line: 59, column: 1, scope: !57, inlinedAt: !4411)
!4487 = !DILocation(line: 68, column: 10, scope: !4404)
!4488 = !DILocation(line: 68, column: 14, scope: !4404)
!4489 = !DILocation(line: 69, column: 12, scope: !4404)
!4490 = !DILocation(line: 69, column: 9, scope: !4404)
!4491 = !DILocation(line: 71, column: 16, scope: !4404)
!4492 = !DILocation(line: 71, column: 9, scope: !4404)
!4493 = !DILocation(line: 74, column: 36, scope: !4389)
!4494 = !DILocation(line: 74, column: 43, scope: !4389)
!4495 = !DILocation(line: 74, column: 48, scope: !4389)
!4496 = !DILocation(line: 24, column: 23, scope: !57, inlinedAt: !4497)
!4497 = distinct !DILocation(line: 74, column: 12, scope: !4389)
!4498 = !DILocation(line: 25, column: 21, scope: !57, inlinedAt: !4497)
!4499 = !DILocation(line: 26, column: 24, scope: !57, inlinedAt: !4497)
!4500 = !DILocation(line: 33, column: 12, scope: !57, inlinedAt: !4497)
!4501 = !DILocation(line: 40, column: 5, scope: !57, inlinedAt: !4497)
!4502 = !DILocation(line: 40, column: 13, scope: !57, inlinedAt: !4497)
!4503 = !DILocation(line: 40, column: 17, scope: !57, inlinedAt: !4497)
!4504 = !DILocation(line: 41, column: 5, scope: !57, inlinedAt: !4497)
!4505 = !DILocation(line: 41, column: 12, scope: !57, inlinedAt: !4497)
!4506 = !DILocation(line: 41, column: 18, scope: !57, inlinedAt: !4497)
!4507 = !DILocation(line: 42, column: 17, scope: !4319, inlinedAt: !4497)
!4508 = !DILocation(line: 42, column: 33, scope: !4319, inlinedAt: !4497)
!4509 = !DILocation(line: 42, column: 39, scope: !4319, inlinedAt: !4497)
!4510 = !DILocation(line: 42, column: 46, scope: !4319, inlinedAt: !4497)
!4511 = !DILocation(line: 42, column: 21, scope: !4319, inlinedAt: !4497)
!4512 = !DILocation(line: 43, column: 8, scope: !4319, inlinedAt: !4497)
!4513 = !DILocation(line: 44, column: 21, scope: !4319, inlinedAt: !4497)
!4514 = !DILocation(line: 44, column: 23, scope: !4319, inlinedAt: !4497)
!4515 = !DILocation(line: 44, column: 14, scope: !4319, inlinedAt: !4497)
!4516 = !DILocation(line: 44, column: 2, scope: !4319, inlinedAt: !4497)
!4517 = !DILocation(line: 44, column: 6, scope: !4319, inlinedAt: !4497)
!4518 = !DILocation(line: 44, column: 12, scope: !4319, inlinedAt: !4497)
!4519 = !DILocation(line: 45, column: 25, scope: !4319, inlinedAt: !4497)
!4520 = !DILocation(line: 45, column: 18, scope: !4319, inlinedAt: !4497)
!4521 = !DILocation(line: 45, column: 2, scope: !4319, inlinedAt: !4497)
!4522 = !DILocation(line: 45, column: 6, scope: !4319, inlinedAt: !4497)
!4523 = !DILocation(line: 45, column: 11, scope: !4319, inlinedAt: !4497)
!4524 = !DILocation(line: 45, column: 16, scope: !4319, inlinedAt: !4497)
!4525 = !DILocation(line: 46, column: 7, scope: !4319, inlinedAt: !4497)
!4526 = distinct !{!4526, !4504, !4527, !3203}
!4527 = !DILocation(line: 47, column: 5, scope: !57, inlinedAt: !4497)
!4528 = !DILocation(line: 49, column: 9, scope: !4342, inlinedAt: !4497)
!4529 = !DILocation(line: 49, column: 15, scope: !4342, inlinedAt: !4497)
!4530 = !DILocation(line: 49, column: 9, scope: !57, inlinedAt: !4497)
!4531 = !DILocation(line: 50, column: 37, scope: !4346, inlinedAt: !4497)
!4532 = !DILocation(line: 50, column: 27, scope: !4346, inlinedAt: !4497)
!4533 = !DILocation(line: 50, column: 25, scope: !4346, inlinedAt: !4497)
!4534 = !DILocation(line: 50, column: 14, scope: !4346, inlinedAt: !4497)
!4535 = !DILocation(line: 50, column: 2, scope: !4346, inlinedAt: !4497)
!4536 = !DILocation(line: 50, column: 6, scope: !4346, inlinedAt: !4497)
!4537 = !DILocation(line: 50, column: 12, scope: !4346, inlinedAt: !4497)
!4538 = !DILocation(line: 51, column: 25, scope: !4346, inlinedAt: !4497)
!4539 = !DILocation(line: 51, column: 23, scope: !4346, inlinedAt: !4497)
!4540 = !DILocation(line: 51, column: 30, scope: !4346, inlinedAt: !4497)
!4541 = !DILocation(line: 51, column: 3, scope: !4346, inlinedAt: !4497)
!4542 = !DILocation(line: 51, column: 14, scope: !4346, inlinedAt: !4497)
!4543 = !DILocation(line: 52, column: 9, scope: !4346, inlinedAt: !4497)
!4544 = !DILocation(line: 52, column: 15, scope: !4346, inlinedAt: !4497)
!4545 = !DILocation(line: 52, column: 13, scope: !4346, inlinedAt: !4497)
!4546 = !DILocation(line: 52, column: 2, scope: !4346, inlinedAt: !4497)
!4547 = !DILocation(line: 54, column: 14, scope: !57, inlinedAt: !4497)
!4548 = !DILocation(line: 54, column: 28, scope: !57, inlinedAt: !4497)
!4549 = !DILocation(line: 54, column: 18, scope: !57, inlinedAt: !4497)
!4550 = !DILocation(line: 54, column: 34, scope: !57, inlinedAt: !4497)
!4551 = !DILocation(line: 55, column: 24, scope: !57, inlinedAt: !4497)
!4552 = !DILocation(line: 55, column: 26, scope: !57, inlinedAt: !4497)
!4553 = !DILocation(line: 55, column: 17, scope: !57, inlinedAt: !4497)
!4554 = !DILocation(line: 55, column: 5, scope: !57, inlinedAt: !4497)
!4555 = !DILocation(line: 55, column: 9, scope: !57, inlinedAt: !4497)
!4556 = !DILocation(line: 55, column: 15, scope: !57, inlinedAt: !4497)
!4557 = !DILocation(line: 56, column: 28, scope: !57, inlinedAt: !4497)
!4558 = !DILocation(line: 56, column: 21, scope: !57, inlinedAt: !4497)
!4559 = !DILocation(line: 56, column: 5, scope: !57, inlinedAt: !4497)
!4560 = !DILocation(line: 56, column: 9, scope: !57, inlinedAt: !4497)
!4561 = !DILocation(line: 56, column: 14, scope: !57, inlinedAt: !4497)
!4562 = !DILocation(line: 56, column: 19, scope: !57, inlinedAt: !4497)
!4563 = !DILocation(line: 57, column: 28, scope: !57, inlinedAt: !4497)
!4564 = !DILocation(line: 57, column: 26, scope: !57, inlinedAt: !4497)
!4565 = !DILocation(line: 57, column: 6, scope: !57, inlinedAt: !4497)
!4566 = !DILocation(line: 57, column: 17, scope: !57, inlinedAt: !4497)
!4567 = !DILocation(line: 58, column: 12, scope: !57, inlinedAt: !4497)
!4568 = !DILocation(line: 58, column: 18, scope: !57, inlinedAt: !4497)
!4569 = !DILocation(line: 58, column: 16, scope: !57, inlinedAt: !4497)
!4570 = !DILocation(line: 58, column: 23, scope: !57, inlinedAt: !4497)
!4571 = !DILocation(line: 58, column: 5, scope: !57, inlinedAt: !4497)
!4572 = !DILocation(line: 59, column: 1, scope: !57, inlinedAt: !4497)
!4573 = !DILocation(line: 74, column: 5, scope: !4389)
!4574 = !DILocation(line: 75, column: 1, scope: !4389)
!4575 = distinct !DISubprogram(name: "list_check_node", scope: !81, file: !81, line: 48, type: !4576, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3003, retainedNodes: !74)
!4576 = !DISubroutineType(types: !4577)
!4577 = !{!3006, !4578, !480}
!4578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4579, size: 64)
!4579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3007)
!4580 = !DILocalVariable(name: "node", arg: 1, scope: !4575, file: !81, line: 48, type: !4578)
!4581 = !DILocation(line: 48, column: 59, scope: !4575)
!4582 = !DILocalVariable(name: "abortstr", arg: 2, scope: !4575, file: !81, line: 49, type: !480)
!4583 = !DILocation(line: 49, column: 19, scope: !4575)
!4584 = !DILocalVariable(name: "p", scope: !4575, file: !81, line: 51, type: !4578)
!4585 = !DILocation(line: 51, column: 26, scope: !4575)
!4586 = !DILocalVariable(name: "n", scope: !4575, file: !81, line: 51, type: !4578)
!4587 = !DILocation(line: 51, column: 30, scope: !4575)
!4588 = !DILocalVariable(name: "count", scope: !4575, file: !81, line: 52, type: !28)
!4589 = !DILocation(line: 52, column: 15, scope: !4575)
!4590 = !DILocation(line: 54, column: 11, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4575, file: !81, line: 54, column: 2)
!4592 = !DILocation(line: 54, column: 9, scope: !4591)
!4593 = !DILocation(line: 54, column: 21, scope: !4591)
!4594 = !DILocation(line: 54, column: 27, scope: !4591)
!4595 = !DILocation(line: 54, column: 19, scope: !4591)
!4596 = !DILocation(line: 54, column: 7, scope: !4591)
!4597 = !DILocation(line: 54, column: 33, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4591, file: !81, line: 54, column: 2)
!4599 = !DILocation(line: 54, column: 38, scope: !4598)
!4600 = !DILocation(line: 54, column: 35, scope: !4598)
!4601 = !DILocation(line: 54, column: 2, scope: !4591)
!4602 = !DILocation(line: 55, column: 8, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4598, file: !81, line: 54, column: 64)
!4604 = !DILocation(line: 56, column: 7, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4603, file: !81, line: 56, column: 7)
!4606 = !DILocation(line: 56, column: 10, scope: !4605)
!4607 = !DILocation(line: 56, column: 18, scope: !4605)
!4608 = !DILocation(line: 56, column: 15, scope: !4605)
!4609 = !DILocation(line: 56, column: 7, scope: !4603)
!4610 = !DILocation(line: 57, column: 19, scope: !4605)
!4611 = !DILocation(line: 57, column: 29, scope: !4605)
!4612 = !DILocation(line: 57, column: 35, scope: !4605)
!4613 = !DILocation(line: 57, column: 38, scope: !4605)
!4614 = !DILocation(line: 57, column: 11, scope: !4605)
!4615 = !DILocation(line: 57, column: 4, scope: !4605)
!4616 = !DILocation(line: 58, column: 2, scope: !4603)
!4617 = !DILocation(line: 54, column: 48, scope: !4598)
!4618 = !DILocation(line: 54, column: 46, scope: !4598)
!4619 = !DILocation(line: 54, column: 55, scope: !4598)
!4620 = !DILocation(line: 54, column: 58, scope: !4598)
!4621 = !DILocation(line: 54, column: 53, scope: !4598)
!4622 = !DILocation(line: 54, column: 2, scope: !4598)
!4623 = distinct !{!4623, !4601, !4624, !3203}
!4624 = !DILocation(line: 58, column: 2, scope: !4591)
!4625 = !DILocation(line: 60, column: 6, scope: !4626)
!4626 = distinct !DILexicalBlock(scope: !4575, file: !81, line: 60, column: 6)
!4627 = !DILocation(line: 60, column: 12, scope: !4626)
!4628 = !DILocation(line: 60, column: 20, scope: !4626)
!4629 = !DILocation(line: 60, column: 17, scope: !4626)
!4630 = !DILocation(line: 60, column: 6, scope: !4575)
!4631 = !DILocation(line: 61, column: 18, scope: !4626)
!4632 = !DILocation(line: 61, column: 28, scope: !4626)
!4633 = !DILocation(line: 61, column: 34, scope: !4626)
!4634 = !DILocation(line: 61, column: 10, scope: !4626)
!4635 = !DILocation(line: 61, column: 3, scope: !4626)
!4636 = !DILocation(line: 63, column: 29, scope: !4575)
!4637 = !DILocation(line: 63, column: 2, scope: !4575)
!4638 = !DILocation(line: 64, column: 1, scope: !4575)
!4639 = distinct !DISubprogram(name: "corrupt", scope: !81, file: !81, line: 34, type: !4640, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3003, retainedNodes: !74)
!4640 = !DISubroutineType(types: !4641)
!4641 = !{!5, !480, !4578, !4578, !28}
!4642 = !DILocalVariable(name: "abortstr", arg: 1, scope: !4639, file: !81, line: 34, type: !480)
!4643 = !DILocation(line: 34, column: 34, scope: !4639)
!4644 = !DILocalVariable(name: "head", arg: 2, scope: !4639, file: !81, line: 35, type: !4578)
!4645 = !DILocation(line: 35, column: 32, scope: !4639)
!4646 = !DILocalVariable(name: "node", arg: 3, scope: !4639, file: !81, line: 36, type: !4578)
!4647 = !DILocation(line: 36, column: 32, scope: !4639)
!4648 = !DILocalVariable(name: "count", arg: 4, scope: !4639, file: !81, line: 37, type: !28)
!4649 = !DILocation(line: 37, column: 21, scope: !4639)
!4650 = !DILocation(line: 39, column: 6, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4639, file: !81, line: 39, column: 6)
!4652 = !DILocation(line: 39, column: 6, scope: !4639)
!4653 = !DILocation(line: 40, column: 11, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4651, file: !81, line: 39, column: 16)
!4655 = !DILocation(line: 42, column: 4, scope: !4654)
!4656 = !DILocation(line: 42, column: 14, scope: !4654)
!4657 = !DILocation(line: 42, column: 20, scope: !4654)
!4658 = !DILocation(line: 42, column: 27, scope: !4654)
!4659 = !DILocation(line: 40, column: 3, scope: !4654)
!4660 = !DILocation(line: 43, column: 3, scope: !4654)
!4661 = !DILocation(line: 45, column: 2, scope: !4639)
!4662 = distinct !DISubprogram(name: "list_check", scope: !81, file: !81, line: 66, type: !4663, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3003, retainedNodes: !74)
!4663 = !DISubroutineType(types: !4664)
!4664 = !{!3011, !4665, !480}
!4665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4666, size: 64)
!4666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3012)
!4667 = !DILocalVariable(name: "h", arg: 1, scope: !4662, file: !81, line: 66, type: !4665)
!4668 = !DILocation(line: 66, column: 54, scope: !4662)
!4669 = !DILocalVariable(name: "abortstr", arg: 2, scope: !4662, file: !81, line: 66, type: !480)
!4670 = !DILocation(line: 66, column: 69, scope: !4662)
!4671 = !DILocation(line: 68, column: 24, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4662, file: !81, line: 68, column: 6)
!4673 = !DILocation(line: 68, column: 27, scope: !4672)
!4674 = !DILocation(line: 68, column: 30, scope: !4672)
!4675 = !DILocation(line: 68, column: 7, scope: !4672)
!4676 = !DILocation(line: 68, column: 6, scope: !4662)
!4677 = !DILocation(line: 69, column: 3, scope: !4672)
!4678 = !DILocation(line: 70, column: 29, scope: !4662)
!4679 = !DILocation(line: 70, column: 2, scope: !4662)
!4680 = !DILocation(line: 71, column: 1, scope: !4662)
!4681 = distinct !DISubprogram(name: "cache_create", scope: !87, file: !87, line: 97, type: !4682, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3016, retainedNodes: !74)
!4682 = !DISubroutineType(types: !4683)
!4683 = !{!4684, !4727, !4740, !5, !322}
!4684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4685, size: 64)
!4685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cache_t", file: !87, line: 44, size: 1536, elements: !4686)
!4686 = !{!4687, !4715, !4723, !4745, !4753, !4754}
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !4685, file: !87, line: 48, baseType: !4688, size: 512)
!4688 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4685, file: !87, line: 45, size: 512, elements: !4689)
!4689 = !{!4690, !4691}
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !4688, file: !87, line: 46, baseType: !331, size: 64)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4688, file: !87, line: 47, baseType: !4692, size: 448, offset: 64)
!4692 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_rwlock_t", file: !438, line: 91, baseType: !4693)
!4693 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !438, line: 86, size: 448, elements: !4694)
!4694 = !{!4695, !4713, !4714}
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "__data", scope: !4693, file: !438, line: 88, baseType: !4696, size: 448)
!4696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_rwlock_arch_t", file: !4697, line: 23, size: 448, elements: !4698)
!4697 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h", directory: "", checksumkind: CSK_MD5, checksum: "2034038f4a99ff6cb7b9de3a3e8c2a8e")
!4698 = !{!4699, !4700, !4701, !4702, !4703, !4704, !4705, !4706, !4707, !4709, !4711, !4712}
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "__readers", scope: !4696, file: !4697, line: 25, baseType: !28, size: 32)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "__writers", scope: !4696, file: !4697, line: 26, baseType: !28, size: 32, offset: 32)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "__wrphase_futex", scope: !4696, file: !4697, line: 27, baseType: !28, size: 32, offset: 64)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "__writers_futex", scope: !4696, file: !4697, line: 28, baseType: !28, size: 32, offset: 96)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !4696, file: !4697, line: 29, baseType: !28, size: 32, offset: 128)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !4696, file: !4697, line: 30, baseType: !28, size: 32, offset: 160)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "__cur_writer", scope: !4696, file: !4697, line: 32, baseType: !37, size: 32, offset: 192)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "__shared", scope: !4696, file: !4697, line: 33, baseType: !37, size: 32, offset: 224)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "__rwelision", scope: !4696, file: !4697, line: 34, baseType: !4708, size: 8, offset: 256)
!4708 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !4696, file: !4697, line: 39, baseType: !4710, size: 56, offset: 264)
!4710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 56, elements: !506)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !4696, file: !4697, line: 42, baseType: !8, size: 64, offset: 320)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "__flags", scope: !4696, file: !4697, line: 45, baseType: !28, size: 32, offset: 384)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !4693, file: !438, line: 89, baseType: !2551, size: 448)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !4693, file: !438, line: 90, baseType: !40, size: 64)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !4685, file: !87, line: 53, baseType: !4716, size: 576, offset: 512)
!4716 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4685, file: !87, line: 50, size: 576, elements: !4717)
!4717 = !{!4718, !4722}
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4716, file: !87, line: 51, baseType: !4719, size: 128)
!4719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !313, line: 208, size: 128, elements: !4720)
!4720 = !{!4721}
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !4719, file: !313, line: 210, baseType: !3029, size: 128)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4716, file: !87, line: 52, baseType: !4692, size: 448, offset: 128)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !4685, file: !87, line: 59, baseType: !4724, size: 192, offset: 1088)
!4724 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4685, file: !87, line: 55, size: 192, elements: !4725)
!4725 = !{!4726, !4739, !4744}
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "create_entry", scope: !4724, file: !87, line: 56, baseType: !4727, size: 64)
!4727 = !DIDerivedType(tag: DW_TAG_typedef, name: "CreateEntryCallback", file: !309, line: 35, baseType: !4728)
!4728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4729, size: 64)
!4729 = !DISubroutineType(types: !4730)
!4730 = !{!4731, !480, !5}
!4731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4732, size: 64)
!4732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cache_entry_t", file: !309, line: 27, size: 320, elements: !4733)
!4733 = !{!4734, !4735, !4736, !4737, !4738}
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !4732, file: !309, line: 28, baseType: !3029, size: 128)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !4732, file: !309, line: 29, baseType: !61, size: 64, offset: 128)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !4732, file: !309, line: 30, baseType: !28, size: 32, offset: 192)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4732, file: !309, line: 31, baseType: !28, size: 32, offset: 224)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "time_to_die", scope: !4732, file: !309, line: 32, baseType: !322, size: 64, offset: 256)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_entry", scope: !4724, file: !87, line: 57, baseType: !4740, size: 64, offset: 64)
!4740 = !DIDerivedType(tag: DW_TAG_typedef, name: "DestroyEntryCallback", file: !309, line: 37, baseType: !4741)
!4741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4742, size: 64)
!4742 = !DISubroutineType(types: !4743)
!4743 = !{null, !4731, !5}
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !4724, file: !87, line: 58, baseType: !5, size: 64, offset: 128)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !4685, file: !87, line: 64, baseType: !4746, size: 128, offset: 1280)
!4746 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4685, file: !87, line: 61, size: 128, elements: !4747)
!4747 = !{!4748, !4749}
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "time_to_live", scope: !4746, file: !87, line: 62, baseType: !322, size: 64)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "clock_id", scope: !4746, file: !87, line: 63, baseType: !4750, size: 32, offset: 64)
!4750 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !4751, line: 7, baseType: !4752)
!4751 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/clockid_t.h", directory: "", checksumkind: CSK_MD5, checksum: "099a80153c2ad48bc7f5f4a188cb6d24")
!4752 = !DIDerivedType(tag: DW_TAG_typedef, name: "__clockid_t", file: !69, line: 169, baseType: !37)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4685, file: !87, line: 66, baseType: !28, size: 32, offset: 1408)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !4685, file: !87, line: 73, baseType: !4755, size: 96, offset: 1440)
!4755 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4685, file: !87, line: 69, size: 96, elements: !4756)
!4756 = !{!4757, !4758, !4759}
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "hits", scope: !4755, file: !87, line: 70, baseType: !28, size: 32)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "misses", scope: !4755, file: !87, line: 71, baseType: !28, size: 32, offset: 32)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "evicted", scope: !4755, file: !87, line: 72, baseType: !28, size: 32, offset: 64)
!4760 = !DILocalVariable(name: "create_entry_cb", arg: 1, scope: !4681, file: !87, line: 97, type: !4727)
!4761 = !DILocation(line: 97, column: 50, scope: !4681)
!4762 = !DILocalVariable(name: "destroy_entry_cb", arg: 2, scope: !4681, file: !87, line: 98, type: !4740)
!4763 = !DILocation(line: 98, column: 51, scope: !4681)
!4764 = !DILocalVariable(name: "cb_context", arg: 3, scope: !4681, file: !87, line: 99, type: !5)
!4765 = !DILocation(line: 99, column: 36, scope: !4681)
!4766 = !DILocalVariable(name: "time_to_live", arg: 4, scope: !4681, file: !87, line: 100, type: !322)
!4767 = !DILocation(line: 100, column: 37, scope: !4681)
!4768 = !DILocalVariable(name: "cache", scope: !4681, file: !87, line: 102, type: !4684)
!4769 = !DILocation(line: 102, column: 21, scope: !4681)
!4770 = !DILocation(line: 104, column: 5, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4772, file: !87, line: 104, column: 5)
!4772 = distinct !DILexicalBlock(scope: !4681, file: !87, line: 104, column: 5)
!4773 = !DILocation(line: 104, column: 5, scope: !4772)
!4774 = !DILocation(line: 105, column: 5, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4776, file: !87, line: 105, column: 5)
!4776 = distinct !DILexicalBlock(scope: !4681, file: !87, line: 105, column: 5)
!4777 = !DILocation(line: 105, column: 5, scope: !4776)
!4778 = !DILocation(line: 106, column: 5, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4780, file: !87, line: 106, column: 5)
!4780 = distinct !DILexicalBlock(scope: !4681, file: !87, line: 106, column: 5)
!4781 = !DILocation(line: 106, column: 5, scope: !4780)
!4782 = !DILocation(line: 108, column: 13, scope: !4681)
!4783 = !DILocation(line: 108, column: 11, scope: !4681)
!4784 = !DILocation(line: 109, column: 10, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4681, file: !87, line: 109, column: 9)
!4786 = !DILocation(line: 109, column: 9, scope: !4681)
!4787 = !DILocation(line: 110, column: 9, scope: !4785)
!4788 = !DILocation(line: 112, column: 25, scope: !4681)
!4789 = !DILocation(line: 112, column: 5, scope: !4681)
!4790 = !DILocation(line: 112, column: 12, scope: !4681)
!4791 = !DILocation(line: 112, column: 17, scope: !4681)
!4792 = !DILocation(line: 112, column: 23, scope: !4681)
!4793 = !DILocation(line: 113, column: 10, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4681, file: !87, line: 113, column: 9)
!4795 = !DILocation(line: 113, column: 17, scope: !4794)
!4796 = !DILocation(line: 113, column: 22, scope: !4794)
!4797 = !DILocation(line: 113, column: 9, scope: !4681)
!4798 = !DILocation(line: 114, column: 9, scope: !4794)
!4799 = !DILocation(line: 116, column: 30, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4681, file: !87, line: 116, column: 9)
!4801 = !DILocation(line: 116, column: 37, scope: !4800)
!4802 = !DILocation(line: 116, column: 42, scope: !4800)
!4803 = !DILocation(line: 116, column: 9, scope: !4800)
!4804 = !DILocation(line: 116, column: 9, scope: !4681)
!4805 = !DILocation(line: 117, column: 9, scope: !4800)
!4806 = !DILocation(line: 118, column: 30, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4681, file: !87, line: 118, column: 9)
!4808 = !DILocation(line: 118, column: 37, scope: !4807)
!4809 = !DILocation(line: 118, column: 43, scope: !4807)
!4810 = !DILocation(line: 118, column: 9, scope: !4807)
!4811 = !DILocation(line: 118, column: 9, scope: !4681)
!4812 = !DILocation(line: 119, column: 9, scope: !4807)
!4813 = !DILocation(line: 121, column: 30, scope: !4681)
!4814 = !DILocation(line: 121, column: 5, scope: !4681)
!4815 = !DILocation(line: 121, column: 12, scope: !4681)
!4816 = !DILocation(line: 121, column: 15, scope: !4681)
!4817 = !DILocation(line: 121, column: 28, scope: !4681)
!4818 = !DILocation(line: 122, column: 31, scope: !4681)
!4819 = !DILocation(line: 122, column: 5, scope: !4681)
!4820 = !DILocation(line: 122, column: 12, scope: !4681)
!4821 = !DILocation(line: 122, column: 15, scope: !4681)
!4822 = !DILocation(line: 122, column: 29, scope: !4681)
!4823 = !DILocation(line: 123, column: 25, scope: !4681)
!4824 = !DILocation(line: 123, column: 5, scope: !4681)
!4825 = !DILocation(line: 123, column: 12, scope: !4681)
!4826 = !DILocation(line: 123, column: 15, scope: !4681)
!4827 = !DILocation(line: 123, column: 23, scope: !4681)
!4828 = !DILocation(line: 125, column: 32, scope: !4681)
!4829 = !DILocation(line: 125, column: 5, scope: !4681)
!4830 = !DILocation(line: 125, column: 12, scope: !4681)
!4831 = !DILocation(line: 125, column: 21, scope: !4681)
!4832 = !DILocation(line: 125, column: 30, scope: !4681)
!4833 = !DILocation(line: 126, column: 36, scope: !4681)
!4834 = !DILocation(line: 126, column: 5, scope: !4681)
!4835 = !DILocation(line: 126, column: 12, scope: !4681)
!4836 = !DILocation(line: 126, column: 21, scope: !4681)
!4837 = !DILocation(line: 126, column: 34, scope: !4681)
!4838 = !DILocation(line: 128, column: 21, scope: !4681)
!4839 = !DILocation(line: 128, column: 28, scope: !4681)
!4840 = !DILocation(line: 128, column: 34, scope: !4681)
!4841 = !DILocation(line: 128, column: 5, scope: !4681)
!4842 = !DILocation(line: 130, column: 36, scope: !4681)
!4843 = !DILocation(line: 130, column: 5, scope: !4681)
!4844 = !DILocation(line: 132, column: 12, scope: !4681)
!4845 = !DILocation(line: 132, column: 5, scope: !4681)
!4846 = !DILabel(scope: !4681, name: "error_no_queue_lock", file: !87, line: 134)
!4847 = !DILocation(line: 134, column: 1, scope: !4681)
!4848 = !DILocation(line: 135, column: 29, scope: !4681)
!4849 = !DILocation(line: 135, column: 36, scope: !4681)
!4850 = !DILocation(line: 135, column: 41, scope: !4681)
!4851 = !DILocation(line: 135, column: 5, scope: !4681)
!4852 = !DILabel(scope: !4681, name: "error_no_hash_lock", file: !87, line: 136)
!4853 = !DILocation(line: 136, column: 1, scope: !4681)
!4854 = !DILocation(line: 137, column: 15, scope: !4681)
!4855 = !DILocation(line: 137, column: 22, scope: !4681)
!4856 = !DILocation(line: 137, column: 27, scope: !4681)
!4857 = !DILocation(line: 137, column: 5, scope: !4681)
!4858 = !DILabel(scope: !4681, name: "error_no_hash", file: !87, line: 138)
!4859 = !DILocation(line: 138, column: 1, scope: !4681)
!4860 = !DILocation(line: 139, column: 10, scope: !4681)
!4861 = !DILocation(line: 139, column: 5, scope: !4681)
!4862 = !DILocation(line: 141, column: 5, scope: !4681)
!4863 = !DILocation(line: 142, column: 1, scope: !4681)
!4864 = distinct !DISubprogram(name: "detect_fastest_monotonic_clock", scope: !87, file: !87, line: 79, type: !4865, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3016, retainedNodes: !74)
!4865 = !DISubroutineType(types: !4866)
!4866 = !{!4750}
!4867 = !DILocalVariable(name: "ts", scope: !4864, file: !87, line: 82, type: !4868)
!4868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2146, line: 11, size: 128, elements: !4869)
!4869 = !{!4870, !4871}
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4868, file: !2146, line: 16, baseType: !324, size: 64)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !4868, file: !2146, line: 21, baseType: !2150, size: 64, offset: 64)
!4872 = !DILocation(line: 82, column: 21, scope: !4864)
!4873 = !DILocation(line: 84, column: 10, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4864, file: !87, line: 84, column: 9)
!4875 = !DILocation(line: 84, column: 9, scope: !4864)
!4876 = !DILocation(line: 85, column: 9, scope: !4874)
!4877 = !DILocation(line: 87, column: 5, scope: !4864)
!4878 = !DILocation(line: 88, column: 1, scope: !4864)
!4879 = distinct !DISubprogram(name: "list_head_init", scope: !313, file: !313, line: 309, type: !4880, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3016, retainedNodes: !74)
!4880 = !DISubroutineType(types: !4881)
!4881 = !{null, !4882}
!4882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4719, size: 64)
!4883 = !DILocalVariable(name: "h", arg: 1, scope: !4879, file: !313, line: 309, type: !4882)
!4884 = !DILocation(line: 309, column: 53, scope: !4879)
!4885 = !DILocation(line: 311, column: 27, scope: !4879)
!4886 = !DILocation(line: 311, column: 30, scope: !4879)
!4887 = !DILocation(line: 311, column: 14, scope: !4879)
!4888 = !DILocation(line: 311, column: 17, scope: !4879)
!4889 = !DILocation(line: 311, column: 19, scope: !4879)
!4890 = !DILocation(line: 311, column: 24, scope: !4879)
!4891 = !DILocation(line: 311, column: 2, scope: !4879)
!4892 = !DILocation(line: 311, column: 5, scope: !4879)
!4893 = !DILocation(line: 311, column: 7, scope: !4879)
!4894 = !DILocation(line: 311, column: 12, scope: !4879)
!4895 = !DILocation(line: 312, column: 1, scope: !4879)
!4896 = distinct !DISubprogram(name: "cache_pruner_job", scope: !87, file: !87, line: 272, type: !1869, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3016, retainedNodes: !74)
!4897 = !DILocalVariable(name: "data", arg: 1, scope: !4896, file: !87, line: 272, type: !5)
!4898 = !DILocation(line: 272, column: 36, scope: !4896)
!4899 = !DILocalVariable(name: "cache", scope: !4896, file: !87, line: 274, type: !4684)
!4900 = !DILocation(line: 274, column: 21, scope: !4896)
!4901 = !DILocation(line: 274, column: 29, scope: !4896)
!4902 = !DILocalVariable(name: "node", scope: !4896, file: !87, line: 275, type: !4731)
!4903 = !DILocation(line: 275, column: 27, scope: !4896)
!4904 = !DILocalVariable(name: "next", scope: !4896, file: !87, line: 275, type: !4731)
!4905 = !DILocation(line: 275, column: 34, scope: !4896)
!4906 = !DILocalVariable(name: "now", scope: !4896, file: !87, line: 276, type: !4868)
!4907 = !DILocation(line: 276, column: 21, scope: !4896)
!4908 = !DILocalVariable(name: "shutting_down", scope: !4896, file: !87, line: 277, type: !341)
!4909 = !DILocation(line: 277, column: 10, scope: !4896)
!4910 = !DILocation(line: 277, column: 26, scope: !4896)
!4911 = !DILocation(line: 277, column: 33, scope: !4896)
!4912 = !DILocation(line: 277, column: 39, scope: !4896)
!4913 = !DILocalVariable(name: "evicted", scope: !4896, file: !87, line: 278, type: !28)
!4914 = !DILocation(line: 278, column: 14, scope: !4896)
!4915 = !DILocalVariable(name: "queue", scope: !4896, file: !87, line: 279, type: !4719)
!4916 = !DILocation(line: 279, column: 22, scope: !4896)
!4917 = !DILocation(line: 281, column: 9, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4896, file: !87, line: 281, column: 9)
!4919 = !DILocation(line: 281, column: 9, scope: !4896)
!4920 = !DILocation(line: 282, column: 9, scope: !4918)
!4921 = !DILocation(line: 285, column: 21, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4896, file: !87, line: 285, column: 9)
!4923 = !DILocation(line: 285, column: 28, scope: !4922)
!4924 = !DILocation(line: 285, column: 34, scope: !4922)
!4925 = !DILocation(line: 285, column: 9, scope: !4922)
!4926 = !DILocation(line: 285, column: 9, scope: !4896)
!4927 = !DILocation(line: 286, column: 13, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4929, file: !87, line: 286, column: 13)
!4929 = distinct !DILexicalBlock(scope: !4922, file: !87, line: 285, column: 41)
!4930 = !DILocation(line: 286, column: 13, scope: !4929)
!4931 = !DILocation(line: 287, column: 13, scope: !4928)
!4932 = !DILocation(line: 288, column: 9, scope: !4929)
!4933 = !DILocation(line: 293, column: 5, scope: !4896)
!4934 = !DILocation(line: 294, column: 31, scope: !4896)
!4935 = !DILocation(line: 294, column: 38, scope: !4896)
!4936 = !DILocation(line: 294, column: 44, scope: !4896)
!4937 = !DILocation(line: 294, column: 5, scope: !4896)
!4938 = !DILocation(line: 295, column: 21, scope: !4896)
!4939 = !DILocation(line: 295, column: 28, scope: !4896)
!4940 = !DILocation(line: 295, column: 34, scope: !4896)
!4941 = !DILocation(line: 295, column: 5, scope: !4896)
!4942 = !DILocation(line: 297, column: 9, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4896, file: !87, line: 297, column: 9)
!4944 = !DILocation(line: 297, column: 9, scope: !4896)
!4945 = !DILocation(line: 298, column: 9, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4943, file: !87, line: 297, column: 62)
!4947 = !DILocation(line: 299, column: 9, scope: !4946)
!4948 = !DILocation(line: 302, column: 29, scope: !4896)
!4949 = !DILocalVariable(name: "cache", arg: 1, scope: !4950, file: !87, line: 90, type: !4684)
!4950 = distinct !DISubprogram(name: "clock_monotonic_gettime", scope: !87, file: !87, line: 90, type: !4951, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3016, retainedNodes: !74)
!4951 = !DISubroutineType(types: !4952)
!4952 = !{null, !4684, !4953}
!4953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4868, size: 64)
!4954 = !DILocation(line: 90, column: 67, scope: !4950, inlinedAt: !4955)
!4955 = distinct !DILocation(line: 302, column: 5, scope: !4896)
!4956 = !DILocalVariable(name: "ts", arg: 2, scope: !4950, file: !87, line: 91, type: !4953)
!4957 = !DILocation(line: 91, column: 22, scope: !4950, inlinedAt: !4955)
!4958 = !DILocation(line: 93, column: 9, scope: !4959, inlinedAt: !4955)
!4959 = distinct !DILexicalBlock(scope: !4950, file: !87, line: 93, column: 9)
!4960 = !DILocation(line: 93, column: 9, scope: !4950, inlinedAt: !4955)
!4961 = !DILocation(line: 94, column: 9, scope: !4959, inlinedAt: !4955)
!4962 = !DILocation(line: 303, column: 5, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4896, file: !87, line: 303, column: 5)
!4964 = !DILocation(line: 303, column: 5, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4963, file: !87, line: 303, column: 5)
!4966 = !DILocalVariable(name: "key", scope: !4967, file: !87, line: 304, type: !61)
!4967 = distinct !DILexicalBlock(scope: !4965, file: !87, line: 303, column: 53)
!4968 = !DILocation(line: 304, column: 15, scope: !4967)
!4969 = !DILocation(line: 304, column: 21, scope: !4967)
!4970 = !DILocation(line: 304, column: 27, scope: !4967)
!4971 = !DILocation(line: 306, column: 17, scope: !4972)
!4972 = distinct !DILexicalBlock(scope: !4967, file: !87, line: 306, column: 13)
!4973 = !DILocation(line: 306, column: 26, scope: !4972)
!4974 = !DILocation(line: 306, column: 32, scope: !4972)
!4975 = !DILocation(line: 306, column: 24, scope: !4972)
!4976 = !DILocation(line: 306, column: 44, scope: !4972)
!4977 = !DILocation(line: 306, column: 47, scope: !4972)
!4978 = !DILocation(line: 306, column: 13, scope: !4967)
!4979 = !DILocation(line: 307, column: 13, scope: !4972)
!4980 = !DILocation(line: 309, column: 19, scope: !4967)
!4981 = !DILocation(line: 309, column: 25, scope: !4967)
!4982 = !DILocation(line: 309, column: 9, scope: !4967)
!4983 = !DILocation(line: 311, column: 13, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4967, file: !87, line: 311, column: 13)
!4985 = !DILocation(line: 311, column: 13, scope: !4967)
!4986 = !DILocation(line: 312, column: 13, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4984, file: !87, line: 311, column: 65)
!4988 = !DILocation(line: 313, column: 13, scope: !4987)
!4989 = !DILocation(line: 316, column: 18, scope: !4967)
!4990 = !DILocation(line: 316, column: 25, scope: !4967)
!4991 = !DILocation(line: 316, column: 30, scope: !4967)
!4992 = !DILocation(line: 316, column: 37, scope: !4967)
!4993 = !DILocation(line: 316, column: 9, scope: !4967)
!4994 = !DILocation(line: 318, column: 13, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4967, file: !87, line: 318, column: 13)
!4996 = !DILocation(line: 318, column: 13, scope: !4967)
!4997 = !DILocation(line: 319, column: 13, scope: !4995)
!4998 = !DILocation(line: 321, column: 13, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4967, file: !87, line: 321, column: 13)
!5000 = !DILocation(line: 321, column: 36, scope: !4999)
!5001 = !DILocation(line: 321, column: 13, scope: !4967)
!5002 = !DILocation(line: 322, column: 13, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4999, file: !87, line: 321, column: 42)
!5004 = !DILocation(line: 322, column: 20, scope: !5003)
!5005 = !DILocation(line: 322, column: 23, scope: !5003)
!5006 = !DILocation(line: 322, column: 37, scope: !5003)
!5007 = !DILocation(line: 322, column: 43, scope: !5003)
!5008 = !DILocation(line: 322, column: 50, scope: !5003)
!5009 = !DILocation(line: 322, column: 53, scope: !5003)
!5010 = !DILocation(line: 323, column: 9, scope: !5003)
!5011 = !DILocation(line: 324, column: 13, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !4999, file: !87, line: 323, column: 16)
!5013 = !DILocation(line: 327, column: 18, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !5012, file: !87, line: 327, column: 17)
!5015 = !DILocation(line: 327, column: 17, scope: !5012)
!5016 = !DILocation(line: 328, column: 17, scope: !5014)
!5017 = !DILocation(line: 328, column: 24, scope: !5014)
!5018 = !DILocation(line: 328, column: 27, scope: !5014)
!5019 = !DILocation(line: 328, column: 41, scope: !5014)
!5020 = !DILocation(line: 328, column: 47, scope: !5014)
!5021 = !DILocation(line: 328, column: 54, scope: !5014)
!5022 = !DILocation(line: 328, column: 57, scope: !5014)
!5023 = !DILocation(line: 331, column: 16, scope: !4967)
!5024 = !DILocation(line: 332, column: 5, scope: !4967)
!5025 = distinct !{!5025, !4962, !5026, !3203}
!5026 = !DILocation(line: 332, column: 5, scope: !4963)
!5027 = !DILocation(line: 337, column: 9, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !4896, file: !87, line: 337, column: 9)
!5029 = !DILocation(line: 337, column: 9, scope: !4896)
!5030 = !DILocation(line: 338, column: 9, scope: !5028)
!5031 = !DILocation(line: 342, column: 9, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !4896, file: !87, line: 342, column: 9)
!5033 = !DILocation(line: 342, column: 9, scope: !4896)
!5034 = !DILocation(line: 343, column: 28, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !5032, file: !87, line: 342, column: 61)
!5036 = !DILocation(line: 343, column: 35, scope: !5035)
!5037 = !DILocation(line: 343, column: 41, scope: !5035)
!5038 = !DILocation(line: 343, column: 9, scope: !5035)
!5039 = !DILocation(line: 344, column: 32, scope: !5035)
!5040 = !DILocation(line: 344, column: 39, scope: !5035)
!5041 = !DILocation(line: 344, column: 45, scope: !5035)
!5042 = !DILocation(line: 344, column: 9, scope: !5035)
!5043 = !DILocation(line: 345, column: 5, scope: !5035)
!5044 = !DILocation(line: 346, column: 9, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5032, file: !87, line: 345, column: 12)
!5046 = !DILabel(scope: !4896, name: "end", file: !87, line: 349)
!5047 = !DILocation(line: 349, column: 1, scope: !4896)
!5048 = !DILocation(line: 351, column: 5, scope: !4896)
!5049 = !DILocation(line: 353, column: 12, scope: !4896)
!5050 = !DILocation(line: 353, column: 5, scope: !4896)
!5051 = !DILocation(line: 354, column: 1, scope: !4896)
!5052 = distinct !DISubprogram(name: "list_empty", scope: !313, file: !313, line: 364, type: !5053, scopeLine: 365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3016, retainedNodes: !74)
!5053 = !DISubroutineType(types: !5054)
!5054 = !{!341, !5055}
!5055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5056, size: 64)
!5056 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4719)
!5057 = !DILocalVariable(name: "h", arg: 1, scope: !5052, file: !313, line: 364, type: !5055)
!5058 = !DILocation(line: 364, column: 55, scope: !5052)
!5059 = !DILocation(line: 366, column: 8, scope: !5052)
!5060 = !DILocation(line: 367, column: 9, scope: !5052)
!5061 = !DILocation(line: 367, column: 12, scope: !5052)
!5062 = !DILocation(line: 367, column: 14, scope: !5052)
!5063 = !DILocation(line: 367, column: 23, scope: !5052)
!5064 = !DILocation(line: 367, column: 26, scope: !5052)
!5065 = !DILocation(line: 367, column: 19, scope: !5052)
!5066 = !DILocation(line: 367, column: 2, scope: !5052)
!5067 = distinct !DISubprogram(name: "list_append_list", scope: !313, file: !313, line: 588, type: !5068, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3016, retainedNodes: !74)
!5068 = !DISubroutineType(types: !5069)
!5069 = !{null, !4882, !4882}
!5070 = !DILocalVariable(name: "to", arg: 1, scope: !5067, file: !313, line: 588, type: !4882)
!5071 = !DILocation(line: 588, column: 55, scope: !5067)
!5072 = !DILocalVariable(name: "from", arg: 2, scope: !5067, file: !313, line: 589, type: !4882)
!5073 = !DILocation(line: 589, column: 27, scope: !5067)
!5074 = !DILocalVariable(name: "from_tail", scope: !5067, file: !313, line: 591, type: !3028)
!5075 = !DILocation(line: 591, column: 20, scope: !5067)
!5076 = !DILocation(line: 591, column: 32, scope: !5067)
!5077 = !DILocation(line: 591, column: 50, scope: !5067)
!5078 = !DILocation(line: 591, column: 52, scope: !5067)
!5079 = !DILocalVariable(name: "to_tail", scope: !5067, file: !313, line: 592, type: !3028)
!5080 = !DILocation(line: 592, column: 20, scope: !5067)
!5081 = !DILocation(line: 592, column: 30, scope: !5067)
!5082 = !DILocation(line: 592, column: 46, scope: !5067)
!5083 = !DILocation(line: 592, column: 48, scope: !5067)
!5084 = !DILocation(line: 595, column: 15, scope: !5067)
!5085 = !DILocation(line: 595, column: 2, scope: !5067)
!5086 = !DILocation(line: 595, column: 6, scope: !5067)
!5087 = !DILocation(line: 595, column: 8, scope: !5067)
!5088 = !DILocation(line: 595, column: 13, scope: !5067)
!5089 = !DILocation(line: 596, column: 21, scope: !5067)
!5090 = !DILocation(line: 596, column: 25, scope: !5067)
!5091 = !DILocation(line: 596, column: 2, scope: !5067)
!5092 = !DILocation(line: 596, column: 13, scope: !5067)
!5093 = !DILocation(line: 596, column: 18, scope: !5067)
!5094 = !DILocation(line: 597, column: 19, scope: !5067)
!5095 = !DILocation(line: 597, column: 25, scope: !5067)
!5096 = !DILocation(line: 597, column: 2, scope: !5067)
!5097 = !DILocation(line: 597, column: 11, scope: !5067)
!5098 = !DILocation(line: 597, column: 16, scope: !5067)
!5099 = !DILocation(line: 598, column: 17, scope: !5067)
!5100 = !DILocation(line: 598, column: 2, scope: !5067)
!5101 = !DILocation(line: 598, column: 8, scope: !5067)
!5102 = !DILocation(line: 598, column: 10, scope: !5067)
!5103 = !DILocation(line: 598, column: 15, scope: !5067)
!5104 = !DILocation(line: 601, column: 12, scope: !5067)
!5105 = !DILocation(line: 601, column: 18, scope: !5067)
!5106 = !DILocation(line: 601, column: 2, scope: !5067)
!5107 = !DILocation(line: 602, column: 17, scope: !5067)
!5108 = !DILocation(line: 602, column: 2, scope: !5067)
!5109 = !DILocation(line: 603, column: 1, scope: !5067)
!5110 = distinct !DISubprogram(name: "list_node_to_off_", scope: !313, file: !313, line: 716, type: !5111, scopeLine: 717, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3016, retainedNodes: !74)
!5111 = !DISubroutineType(types: !5112)
!5112 = !{!5, !3028, !6}
!5113 = !DILocalVariable(name: "node", arg: 1, scope: !5110, file: !313, line: 716, type: !3028)
!5114 = !DILocation(line: 716, column: 57, scope: !5110)
!5115 = !DILocalVariable(name: "off", arg: 2, scope: !5110, file: !313, line: 716, type: !6)
!5116 = !DILocation(line: 716, column: 70, scope: !5110)
!5117 = !DILocation(line: 718, column: 26, scope: !5110)
!5118 = !DILocation(line: 718, column: 33, scope: !5110)
!5119 = !DILocation(line: 718, column: 31, scope: !5110)
!5120 = !DILocation(line: 718, column: 2, scope: !5110)
!5121 = distinct !DISubprogram(name: "list_node_from_off_", scope: !313, file: !313, line: 720, type: !5122, scopeLine: 721, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3016, retainedNodes: !74)
!5122 = !DISubroutineType(types: !5123)
!5123 = !{!3028, !5, !6}
!5124 = !DILocalVariable(name: "ptr", arg: 1, scope: !5121, file: !313, line: 720, type: !5)
!5125 = !DILocation(line: 720, column: 59, scope: !5121)
!5126 = !DILocalVariable(name: "off", arg: 2, scope: !5121, file: !313, line: 720, type: !6)
!5127 = !DILocation(line: 720, column: 71, scope: !5121)
!5128 = !DILocation(line: 722, column: 38, scope: !5121)
!5129 = !DILocation(line: 722, column: 44, scope: !5121)
!5130 = !DILocation(line: 722, column: 42, scope: !5121)
!5131 = !DILocation(line: 722, column: 2, scope: !5121)
!5132 = distinct !DISubprogram(name: "list_del", scope: !313, file: !313, line: 384, type: !5133, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3016, retainedNodes: !74)
!5133 = !DISubroutineType(types: !5134)
!5134 = !{null, !3028}
!5135 = !DILocalVariable(name: "n", arg: 1, scope: !5132, file: !313, line: 384, type: !3028)
!5136 = !DILocation(line: 384, column: 47, scope: !5132)
!5137 = !DILocation(line: 386, column: 8, scope: !5132)
!5138 = !DILocation(line: 387, column: 18, scope: !5132)
!5139 = !DILocation(line: 387, column: 21, scope: !5132)
!5140 = !DILocation(line: 387, column: 2, scope: !5132)
!5141 = !DILocation(line: 387, column: 5, scope: !5132)
!5142 = !DILocation(line: 387, column: 11, scope: !5132)
!5143 = !DILocation(line: 387, column: 16, scope: !5132)
!5144 = !DILocation(line: 388, column: 18, scope: !5132)
!5145 = !DILocation(line: 388, column: 21, scope: !5132)
!5146 = !DILocation(line: 388, column: 2, scope: !5132)
!5147 = !DILocation(line: 388, column: 5, scope: !5132)
!5148 = !DILocation(line: 388, column: 11, scope: !5132)
!5149 = !DILocation(line: 388, column: 16, scope: !5132)
!5150 = !DILocation(line: 393, column: 1, scope: !5132)
!5151 = distinct !DISubprogram(name: "list_prepend_list", scope: !313, file: !313, line: 618, type: !5068, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3016, retainedNodes: !74)
!5152 = !DILocalVariable(name: "to", arg: 1, scope: !5151, file: !313, line: 618, type: !4882)
!5153 = !DILocation(line: 618, column: 56, scope: !5151)
!5154 = !DILocalVariable(name: "from", arg: 2, scope: !5151, file: !313, line: 619, type: !4882)
!5155 = !DILocation(line: 619, column: 28, scope: !5151)
!5156 = !DILocalVariable(name: "from_tail", scope: !5151, file: !313, line: 621, type: !3028)
!5157 = !DILocation(line: 621, column: 20, scope: !5151)
!5158 = !DILocation(line: 621, column: 32, scope: !5151)
!5159 = !DILocation(line: 621, column: 50, scope: !5151)
!5160 = !DILocation(line: 621, column: 52, scope: !5151)
!5161 = !DILocalVariable(name: "to_head", scope: !5151, file: !313, line: 622, type: !3028)
!5162 = !DILocation(line: 622, column: 20, scope: !5151)
!5163 = !DILocation(line: 622, column: 30, scope: !5151)
!5164 = !DILocation(line: 622, column: 46, scope: !5151)
!5165 = !DILocation(line: 622, column: 48, scope: !5151)
!5166 = !DILocation(line: 625, column: 16, scope: !5151)
!5167 = !DILocation(line: 625, column: 22, scope: !5151)
!5168 = !DILocation(line: 625, column: 2, scope: !5151)
!5169 = !DILocation(line: 625, column: 6, scope: !5151)
!5170 = !DILocation(line: 625, column: 8, scope: !5151)
!5171 = !DILocation(line: 625, column: 13, scope: !5151)
!5172 = !DILocation(line: 626, column: 18, scope: !5151)
!5173 = !DILocation(line: 626, column: 22, scope: !5151)
!5174 = !DILocation(line: 626, column: 2, scope: !5151)
!5175 = !DILocation(line: 626, column: 8, scope: !5151)
!5176 = !DILocation(line: 626, column: 10, scope: !5151)
!5177 = !DILocation(line: 626, column: 15, scope: !5151)
!5178 = !DILocation(line: 627, column: 18, scope: !5151)
!5179 = !DILocation(line: 627, column: 2, scope: !5151)
!5180 = !DILocation(line: 627, column: 11, scope: !5151)
!5181 = !DILocation(line: 627, column: 16, scope: !5151)
!5182 = !DILocation(line: 628, column: 20, scope: !5151)
!5183 = !DILocation(line: 628, column: 2, scope: !5151)
!5184 = !DILocation(line: 628, column: 13, scope: !5151)
!5185 = !DILocation(line: 628, column: 18, scope: !5151)
!5186 = !DILocation(line: 631, column: 12, scope: !5151)
!5187 = !DILocation(line: 631, column: 18, scope: !5151)
!5188 = !DILocation(line: 631, column: 2, scope: !5151)
!5189 = !DILocation(line: 632, column: 17, scope: !5151)
!5190 = !DILocation(line: 632, column: 2, scope: !5151)
!5191 = !DILocation(line: 633, column: 1, scope: !5151)
!5192 = distinct !DISubprogram(name: "cache_destroy", scope: !87, file: !87, line: 144, type: !5193, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3016, retainedNodes: !74)
!5193 = !DISubroutineType(types: !5194)
!5194 = !{null, !4684}
!5195 = !DILocalVariable(name: "cache", arg: 1, scope: !5192, file: !87, line: 144, type: !4684)
!5196 = !DILocation(line: 144, column: 36, scope: !5192)
!5197 = !DILocation(line: 146, column: 5, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5199, file: !87, line: 146, column: 5)
!5199 = distinct !DILexicalBlock(scope: !5192, file: !87, line: 146, column: 5)
!5200 = !DILocation(line: 146, column: 5, scope: !5199)
!5201 = !DILocation(line: 149, column: 5, scope: !5192)
!5202 = !DILocation(line: 154, column: 36, scope: !5192)
!5203 = !DILocation(line: 154, column: 5, scope: !5192)
!5204 = !DILocation(line: 155, column: 5, scope: !5192)
!5205 = !DILocation(line: 155, column: 12, scope: !5192)
!5206 = !DILocation(line: 155, column: 18, scope: !5192)
!5207 = !DILocation(line: 156, column: 22, scope: !5192)
!5208 = !DILocation(line: 156, column: 5, scope: !5192)
!5209 = !DILocation(line: 157, column: 29, scope: !5192)
!5210 = !DILocation(line: 157, column: 36, scope: !5192)
!5211 = !DILocation(line: 157, column: 41, scope: !5192)
!5212 = !DILocation(line: 157, column: 5, scope: !5192)
!5213 = !DILocation(line: 158, column: 29, scope: !5192)
!5214 = !DILocation(line: 158, column: 36, scope: !5192)
!5215 = !DILocation(line: 158, column: 42, scope: !5192)
!5216 = !DILocation(line: 158, column: 5, scope: !5192)
!5217 = !DILocation(line: 159, column: 15, scope: !5192)
!5218 = !DILocation(line: 159, column: 22, scope: !5192)
!5219 = !DILocation(line: 159, column: 27, scope: !5192)
!5220 = !DILocation(line: 159, column: 5, scope: !5192)
!5221 = !DILocation(line: 160, column: 10, scope: !5192)
!5222 = !DILocation(line: 160, column: 5, scope: !5192)
!5223 = !DILocation(line: 161, column: 1, scope: !5192)
!5224 = distinct !DISubprogram(name: "cache_get_and_ref_entry", scope: !87, file: !87, line: 170, type: !5225, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3016, retainedNodes: !74)
!5225 = !DISubroutineType(types: !5226)
!5226 = !{!4731, !4684, !480, !2691}
!5227 = !DILocalVariable(name: "cache", arg: 1, scope: !5224, file: !87, line: 170, type: !4684)
!5228 = !DILocation(line: 170, column: 63, scope: !5224)
!5229 = !DILocalVariable(name: "key", arg: 2, scope: !5224, file: !87, line: 171, type: !480)
!5230 = !DILocation(line: 171, column: 59, scope: !5224)
!5231 = !DILocalVariable(name: "error", arg: 3, scope: !5224, file: !87, line: 171, type: !2691)
!5232 = !DILocation(line: 171, column: 69, scope: !5224)
!5233 = !DILocalVariable(name: "entry", scope: !5224, file: !87, line: 173, type: !4731)
!5234 = !DILocation(line: 173, column: 27, scope: !5224)
!5235 = !DILocation(line: 175, column: 5, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5237, file: !87, line: 175, column: 5)
!5237 = distinct !DILexicalBlock(scope: !5224, file: !87, line: 175, column: 5)
!5238 = !DILocation(line: 175, column: 5, scope: !5237)
!5239 = !DILocation(line: 176, column: 5, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5241, file: !87, line: 176, column: 5)
!5241 = distinct !DILexicalBlock(scope: !5224, file: !87, line: 176, column: 5)
!5242 = !DILocation(line: 176, column: 5, scope: !5241)
!5243 = !DILocation(line: 177, column: 5, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5245, file: !87, line: 177, column: 5)
!5245 = distinct !DILexicalBlock(scope: !5224, file: !87, line: 177, column: 5)
!5246 = !DILocation(line: 177, column: 5, scope: !5245)
!5247 = !DILocation(line: 179, column: 6, scope: !5224)
!5248 = !DILocation(line: 179, column: 12, scope: !5224)
!5249 = !DILocation(line: 184, column: 9, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5224, file: !87, line: 184, column: 9)
!5251 = !DILocation(line: 184, column: 9, scope: !5224)
!5252 = !DILocation(line: 185, column: 10, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5250, file: !87, line: 184, column: 73)
!5254 = !DILocation(line: 185, column: 16, scope: !5253)
!5255 = !DILocation(line: 186, column: 9, scope: !5253)
!5256 = !DILocation(line: 190, column: 23, scope: !5224)
!5257 = !DILocation(line: 190, column: 30, scope: !5224)
!5258 = !DILocation(line: 190, column: 35, scope: !5224)
!5259 = !DILocation(line: 190, column: 42, scope: !5224)
!5260 = !DILocation(line: 190, column: 13, scope: !5224)
!5261 = !DILocation(line: 190, column: 11, scope: !5224)
!5262 = !DILocation(line: 191, column: 9, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5224, file: !87, line: 191, column: 9)
!5264 = !DILocation(line: 191, column: 9, scope: !5224)
!5265 = !DILocation(line: 192, column: 9, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5263, file: !87, line: 191, column: 24)
!5267 = !DILocation(line: 193, column: 32, scope: !5266)
!5268 = !DILocation(line: 193, column: 39, scope: !5266)
!5269 = !DILocation(line: 193, column: 44, scope: !5266)
!5270 = !DILocation(line: 193, column: 9, scope: !5266)
!5271 = !DILocation(line: 195, column: 9, scope: !5266)
!5272 = !DILocation(line: 197, column: 16, scope: !5266)
!5273 = !DILocation(line: 197, column: 9, scope: !5266)
!5274 = !DILocation(line: 201, column: 28, scope: !5224)
!5275 = !DILocation(line: 201, column: 35, scope: !5224)
!5276 = !DILocation(line: 201, column: 40, scope: !5224)
!5277 = !DILocation(line: 201, column: 5, scope: !5224)
!5278 = !DILocation(line: 204, column: 5, scope: !5224)
!5279 = !DILocation(line: 207, column: 13, scope: !5224)
!5280 = !DILocation(line: 207, column: 20, scope: !5224)
!5281 = !DILocation(line: 207, column: 23, scope: !5224)
!5282 = !DILocation(line: 207, column: 36, scope: !5224)
!5283 = !DILocation(line: 207, column: 41, scope: !5224)
!5284 = !DILocation(line: 207, column: 48, scope: !5224)
!5285 = !DILocation(line: 207, column: 51, scope: !5224)
!5286 = !DILocation(line: 207, column: 11, scope: !5224)
!5287 = !DILocation(line: 208, column: 10, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5224, file: !87, line: 208, column: 9)
!5289 = !DILocation(line: 208, column: 9, scope: !5224)
!5290 = !DILocation(line: 209, column: 9, scope: !5288)
!5291 = !DILocation(line: 211, column: 12, scope: !5224)
!5292 = !DILocation(line: 211, column: 5, scope: !5224)
!5293 = !DILocation(line: 212, column: 25, scope: !5224)
!5294 = !DILocation(line: 212, column: 18, scope: !5224)
!5295 = !DILocation(line: 212, column: 5, scope: !5224)
!5296 = !DILocation(line: 212, column: 12, scope: !5224)
!5297 = !DILocation(line: 212, column: 16, scope: !5224)
!5298 = !DILocation(line: 213, column: 5, scope: !5224)
!5299 = !DILocation(line: 213, column: 12, scope: !5224)
!5300 = !DILocation(line: 213, column: 17, scope: !5224)
!5301 = !DILocation(line: 215, column: 35, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5224, file: !87, line: 215, column: 9)
!5303 = !DILocation(line: 215, column: 42, scope: !5302)
!5304 = !DILocation(line: 215, column: 47, scope: !5302)
!5305 = !DILocation(line: 215, column: 9, scope: !5302)
!5306 = !DILocation(line: 215, column: 53, scope: !5302)
!5307 = !DILocation(line: 215, column: 9, scope: !5224)
!5308 = !DILocation(line: 221, column: 37, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5302, file: !87, line: 215, column: 63)
!5310 = !DILocalVariable(name: "entry", arg: 1, scope: !5311, file: !87, line: 164, type: !4731)
!5311 = distinct !DISubprogram(name: "convert_to_temporary", scope: !87, file: !87, line: 163, type: !5312, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3016, retainedNodes: !74)
!5312 = !DISubroutineType(types: !5313)
!5313 = !{!4731, !4731}
!5314 = !DILocation(line: 164, column: 27, scope: !5311, inlinedAt: !5315)
!5315 = distinct !DILocation(line: 221, column: 16, scope: !5309)
!5316 = !DILocation(line: 166, column: 5, scope: !5311, inlinedAt: !5315)
!5317 = !DILocation(line: 166, column: 12, scope: !5311, inlinedAt: !5315)
!5318 = !DILocation(line: 166, column: 18, scope: !5311, inlinedAt: !5315)
!5319 = !DILocation(line: 167, column: 12, scope: !5311, inlinedAt: !5315)
!5320 = !DILocation(line: 221, column: 9, scope: !5309)
!5321 = !DILocation(line: 224, column: 26, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5224, file: !87, line: 224, column: 9)
!5323 = !DILocation(line: 224, column: 33, scope: !5322)
!5324 = !DILocation(line: 224, column: 38, scope: !5322)
!5325 = !DILocation(line: 224, column: 45, scope: !5322)
!5326 = !DILocation(line: 224, column: 52, scope: !5322)
!5327 = !DILocation(line: 224, column: 57, scope: !5322)
!5328 = !DILocation(line: 224, column: 10, scope: !5322)
!5329 = !DILocation(line: 224, column: 9, scope: !5224)
!5330 = !DILocalVariable(name: "time_to_die", scope: !5331, file: !87, line: 225, type: !4868)
!5331 = distinct !DILexicalBlock(scope: !5322, file: !87, line: 224, column: 65)
!5332 = !DILocation(line: 225, column: 25, scope: !5331)
!5333 = !DILocation(line: 226, column: 33, scope: !5331)
!5334 = !DILocation(line: 90, column: 67, scope: !4950, inlinedAt: !5335)
!5335 = distinct !DILocation(line: 226, column: 9, scope: !5331)
!5336 = !DILocation(line: 91, column: 22, scope: !4950, inlinedAt: !5335)
!5337 = !DILocation(line: 93, column: 9, scope: !4959, inlinedAt: !5335)
!5338 = !DILocation(line: 93, column: 9, scope: !4950, inlinedAt: !5335)
!5339 = !DILocation(line: 94, column: 9, scope: !4959, inlinedAt: !5335)
!5340 = !DILocation(line: 227, column: 42, scope: !5331)
!5341 = !DILocation(line: 227, column: 51, scope: !5331)
!5342 = !DILocation(line: 227, column: 58, scope: !5331)
!5343 = !DILocation(line: 227, column: 67, scope: !5331)
!5344 = !DILocation(line: 227, column: 49, scope: !5331)
!5345 = !DILocation(line: 227, column: 9, scope: !5331)
!5346 = !DILocation(line: 227, column: 16, scope: !5331)
!5347 = !DILocation(line: 227, column: 28, scope: !5331)
!5348 = !DILocation(line: 229, column: 13, scope: !5349)
!5349 = distinct !DILexicalBlock(scope: !5331, file: !87, line: 229, column: 13)
!5350 = !DILocation(line: 229, column: 13, scope: !5331)
!5351 = !DILocation(line: 230, column: 28, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5349, file: !87, line: 229, column: 65)
!5353 = !DILocation(line: 230, column: 35, scope: !5352)
!5354 = !DILocation(line: 230, column: 41, scope: !5352)
!5355 = !DILocation(line: 230, column: 48, scope: !5352)
!5356 = !DILocation(line: 230, column: 55, scope: !5352)
!5357 = !DILocation(line: 230, column: 13, scope: !5352)
!5358 = !DILocation(line: 231, column: 36, scope: !5352)
!5359 = !DILocation(line: 231, column: 43, scope: !5352)
!5360 = !DILocation(line: 231, column: 49, scope: !5352)
!5361 = !DILocation(line: 231, column: 13, scope: !5352)
!5362 = !DILocation(line: 232, column: 9, scope: !5352)
!5363 = !DILocation(line: 233, column: 41, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5349, file: !87, line: 232, column: 16)
!5365 = !DILocation(line: 164, column: 27, scope: !5311, inlinedAt: !5366)
!5366 = distinct !DILocation(line: 233, column: 20, scope: !5364)
!5367 = !DILocation(line: 166, column: 5, scope: !5311, inlinedAt: !5366)
!5368 = !DILocation(line: 166, column: 12, scope: !5311, inlinedAt: !5366)
!5369 = !DILocation(line: 166, column: 18, scope: !5311, inlinedAt: !5366)
!5370 = !DILocation(line: 167, column: 12, scope: !5311, inlinedAt: !5366)
!5371 = !DILocation(line: 233, column: 13, scope: !5364)
!5372 = !DILocation(line: 235, column: 5, scope: !5331)
!5373 = !DILocation(line: 242, column: 30, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5322, file: !87, line: 235, column: 12)
!5375 = !DILocation(line: 164, column: 27, scope: !5311, inlinedAt: !5376)
!5376 = distinct !DILocation(line: 242, column: 9, scope: !5374)
!5377 = !DILocation(line: 166, column: 5, scope: !5311, inlinedAt: !5376)
!5378 = !DILocation(line: 166, column: 12, scope: !5311, inlinedAt: !5376)
!5379 = !DILocation(line: 166, column: 18, scope: !5311, inlinedAt: !5376)
!5380 = !DILocation(line: 167, column: 12, scope: !5311, inlinedAt: !5376)
!5381 = !DILocation(line: 245, column: 28, scope: !5224)
!5382 = !DILocation(line: 245, column: 35, scope: !5224)
!5383 = !DILocation(line: 245, column: 40, scope: !5224)
!5384 = !DILocation(line: 245, column: 5, scope: !5224)
!5385 = !DILocation(line: 246, column: 12, scope: !5224)
!5386 = !DILocation(line: 246, column: 5, scope: !5224)
!5387 = !DILocation(line: 247, column: 1, scope: !5224)
!5388 = distinct !DISubprogram(name: "list_add_tail", scope: !313, file: !313, line: 346, type: !5389, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3016, retainedNodes: !74)
!5389 = !DISubroutineType(types: !5390)
!5390 = !{null, !4882, !3028}
!5391 = !DILocalVariable(name: "h", arg: 1, scope: !5388, file: !313, line: 346, type: !4882)
!5392 = !DILocation(line: 346, column: 52, scope: !5388)
!5393 = !DILocalVariable(name: "n", arg: 2, scope: !5388, file: !313, line: 346, type: !3028)
!5394 = !DILocation(line: 346, column: 73, scope: !5388)
!5395 = !DILocation(line: 348, column: 13, scope: !5388)
!5396 = !DILocation(line: 348, column: 16, scope: !5388)
!5397 = !DILocation(line: 348, column: 2, scope: !5388)
!5398 = !DILocation(line: 348, column: 5, scope: !5388)
!5399 = !DILocation(line: 348, column: 10, scope: !5388)
!5400 = !DILocation(line: 349, column: 12, scope: !5388)
!5401 = !DILocation(line: 349, column: 15, scope: !5388)
!5402 = !DILocation(line: 349, column: 17, scope: !5388)
!5403 = !DILocation(line: 349, column: 2, scope: !5388)
!5404 = !DILocation(line: 349, column: 5, scope: !5388)
!5405 = !DILocation(line: 349, column: 10, scope: !5388)
!5406 = !DILocation(line: 350, column: 20, scope: !5388)
!5407 = !DILocation(line: 350, column: 2, scope: !5388)
!5408 = !DILocation(line: 350, column: 5, scope: !5388)
!5409 = !DILocation(line: 350, column: 7, scope: !5388)
!5410 = !DILocation(line: 350, column: 13, scope: !5388)
!5411 = !DILocation(line: 350, column: 18, scope: !5388)
!5412 = !DILocation(line: 351, column: 14, scope: !5388)
!5413 = !DILocation(line: 351, column: 2, scope: !5388)
!5414 = !DILocation(line: 351, column: 5, scope: !5388)
!5415 = !DILocation(line: 351, column: 7, scope: !5388)
!5416 = !DILocation(line: 351, column: 12, scope: !5388)
!5417 = !DILocation(line: 352, column: 8, scope: !5388)
!5418 = !DILocation(line: 353, column: 1, scope: !5388)
!5419 = distinct !DISubprogram(name: "cache_entry_unref", scope: !87, file: !87, line: 249, type: !5420, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3016, retainedNodes: !74)
!5420 = !DISubroutineType(types: !5421)
!5421 = !{null, !4684, !4731}
!5422 = !DILocalVariable(name: "cache", arg: 1, scope: !5419, file: !87, line: 249, type: !4684)
!5423 = !DILocation(line: 249, column: 40, scope: !5419)
!5424 = !DILocalVariable(name: "entry", arg: 2, scope: !5419, file: !87, line: 249, type: !4731)
!5425 = !DILocation(line: 249, column: 69, scope: !5419)
!5426 = !DILocation(line: 251, column: 5, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5428, file: !87, line: 251, column: 5)
!5428 = distinct !DILexicalBlock(scope: !5419, file: !87, line: 251, column: 5)
!5429 = !DILocation(line: 251, column: 5, scope: !5428)
!5430 = !DILocation(line: 253, column: 9, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5419, file: !87, line: 253, column: 9)
!5432 = !DILocation(line: 253, column: 16, scope: !5431)
!5433 = !DILocation(line: 253, column: 22, scope: !5431)
!5434 = !DILocation(line: 253, column: 9, scope: !5419)
!5435 = !DILocation(line: 254, column: 14, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5431, file: !87, line: 253, column: 35)
!5437 = !DILocation(line: 254, column: 21, scope: !5436)
!5438 = !DILocation(line: 254, column: 9, scope: !5436)
!5439 = !DILocation(line: 255, column: 9, scope: !5436)
!5440 = !DILocation(line: 258, column: 9, scope: !5441)
!5441 = distinct !DILexicalBlock(scope: !5419, file: !87, line: 258, column: 9)
!5442 = !DILocation(line: 258, column: 9, scope: !5419)
!5443 = !DILocation(line: 259, column: 9, scope: !5441)
!5444 = !DILocation(line: 263, column: 9, scope: !5445)
!5445 = distinct !DILexicalBlock(scope: !5419, file: !87, line: 263, column: 9)
!5446 = !DILocation(line: 263, column: 16, scope: !5445)
!5447 = !DILocation(line: 263, column: 22, scope: !5445)
!5448 = !DILocation(line: 263, column: 9, scope: !5419)
!5449 = !DILocation(line: 263, column: 34, scope: !5445)
!5450 = !DILabel(scope: !5451, name: "destroy_entry", file: !87, line: 264)
!5451 = distinct !DILexicalBlock(scope: !5445, file: !87, line: 263, column: 34)
!5452 = !DILocation(line: 264, column: 1, scope: !5451)
!5453 = !DILocation(line: 268, column: 9, scope: !5451)
!5454 = !DILocation(line: 268, column: 16, scope: !5451)
!5455 = !DILocation(line: 268, column: 19, scope: !5451)
!5456 = !DILocation(line: 268, column: 33, scope: !5451)
!5457 = !DILocation(line: 268, column: 40, scope: !5451)
!5458 = !DILocation(line: 268, column: 47, scope: !5451)
!5459 = !DILocation(line: 268, column: 50, scope: !5451)
!5460 = !DILocation(line: 269, column: 5, scope: !5451)
!5461 = !DILocation(line: 270, column: 1, scope: !5419)
!5462 = distinct !DISubprogram(name: "cache_coro_get_and_ref_entry", scope: !87, file: !87, line: 357, type: !5463, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3016, retainedNodes: !74)
!5463 = !DISubroutineType(types: !5464)
!5464 = !{!4731, !4684, !365, !480}
!5465 = !DILocalVariable(name: "cache", arg: 1, scope: !5462, file: !87, line: 357, type: !4684)
!5466 = !DILocation(line: 357, column: 46, scope: !5462)
!5467 = !DILocalVariable(name: "coro", arg: 2, scope: !5462, file: !87, line: 357, type: !365)
!5468 = !DILocation(line: 357, column: 61, scope: !5462)
!5469 = !DILocalVariable(name: "key", arg: 3, scope: !5462, file: !87, line: 358, type: !480)
!5470 = !DILocation(line: 358, column: 42, scope: !5462)
!5471 = !DILocalVariable(name: "tries", scope: !5472, file: !87, line: 360, type: !37)
!5472 = distinct !DILexicalBlock(scope: !5462, file: !87, line: 360, column: 5)
!5473 = !DILocation(line: 360, column: 14, scope: !5472)
!5474 = !DILocation(line: 360, column: 10, scope: !5472)
!5475 = !DILocation(line: 360, column: 41, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5472, file: !87, line: 360, column: 5)
!5477 = !DILocation(line: 360, column: 5, scope: !5472)
!5478 = !DILocalVariable(name: "error", scope: !5479, file: !87, line: 361, type: !37)
!5479 = distinct !DILexicalBlock(scope: !5476, file: !87, line: 360, column: 57)
!5480 = !DILocation(line: 361, column: 13, scope: !5479)
!5481 = !DILocalVariable(name: "ce", scope: !5479, file: !87, line: 362, type: !4731)
!5482 = !DILocation(line: 362, column: 31, scope: !5479)
!5483 = !DILocation(line: 362, column: 60, scope: !5479)
!5484 = !DILocation(line: 362, column: 67, scope: !5479)
!5485 = !DILocation(line: 362, column: 36, scope: !5479)
!5486 = !DILocation(line: 364, column: 13, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5479, file: !87, line: 364, column: 13)
!5488 = !DILocation(line: 364, column: 13, scope: !5479)
!5489 = !DILocation(line: 370, column: 25, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !5487, file: !87, line: 364, column: 25)
!5491 = !DILocation(line: 370, column: 63, scope: !5490)
!5492 = !DILocation(line: 370, column: 70, scope: !5490)
!5493 = !DILocation(line: 370, column: 13, scope: !5490)
!5494 = !DILocation(line: 371, column: 20, scope: !5490)
!5495 = !DILocation(line: 371, column: 13, scope: !5490)
!5496 = !DILocation(line: 378, column: 13, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5479, file: !87, line: 378, column: 13)
!5498 = !DILocation(line: 378, column: 19, scope: !5497)
!5499 = !DILocation(line: 378, column: 13, scope: !5479)
!5500 = !DILocation(line: 379, column: 24, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5497, file: !87, line: 378, column: 35)
!5502 = !DILocation(line: 379, column: 13, scope: !5501)
!5503 = !DILocation(line: 380, column: 9, scope: !5501)
!5504 = !DILocation(line: 381, column: 13, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5497, file: !87, line: 380, column: 16)
!5506 = !DILocation(line: 383, column: 5, scope: !5479)
!5507 = !DILocation(line: 360, column: 53, scope: !5476)
!5508 = !DILocation(line: 360, column: 5, scope: !5476)
!5509 = distinct !{!5509, !5477, !5510, !3203}
!5510 = !DILocation(line: 383, column: 5, scope: !5472)
!5511 = !DILocation(line: 385, column: 5, scope: !5462)
!5512 = !DILocation(line: 386, column: 1, scope: !5462)
!5513 = distinct !DISubprogram(name: "parse_time_period", scope: !165, file: !165, line: 34, type: !5514, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3034, retainedNodes: !74)
!5514 = !DISubroutineType(types: !5515)
!5515 = !{!28, !480, !28}
!5516 = !DILocalVariable(name: "str", arg: 1, scope: !5513, file: !165, line: 34, type: !480)
!5517 = !DILocation(line: 34, column: 44, scope: !5513)
!5518 = !DILocalVariable(name: "default_value", arg: 2, scope: !5513, file: !165, line: 34, type: !28)
!5519 = !DILocation(line: 34, column: 62, scope: !5513)
!5520 = !DILocalVariable(name: "total", scope: !5513, file: !165, line: 36, type: !28)
!5521 = !DILocation(line: 36, column: 18, scope: !5513)
!5522 = !DILocalVariable(name: "period", scope: !5513, file: !165, line: 37, type: !28)
!5523 = !DILocation(line: 37, column: 18, scope: !5513)
!5524 = !DILocalVariable(name: "multiplier", scope: !5513, file: !165, line: 38, type: !47)
!5525 = !DILocation(line: 38, column: 10, scope: !5513)
!5526 = !DILocation(line: 40, column: 10, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5513, file: !165, line: 40, column: 9)
!5528 = !DILocation(line: 40, column: 9, scope: !5513)
!5529 = !DILocation(line: 41, column: 16, scope: !5527)
!5530 = !DILocation(line: 41, column: 9, scope: !5527)
!5531 = !DILocation(line: 43, column: 5, scope: !5513)
!5532 = !DILocation(line: 43, column: 13, scope: !5513)
!5533 = !DILocation(line: 43, column: 12, scope: !5513)
!5534 = !DILocation(line: 43, column: 17, scope: !5513)
!5535 = !DILocation(line: 43, column: 27, scope: !5513)
!5536 = !DILocation(line: 43, column: 20, scope: !5513)
!5537 = !DILocation(line: 43, column: 62, scope: !5513)
!5538 = !DILocation(line: 0, scope: !5513)
!5539 = !DILocation(line: 44, column: 17, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5513, file: !165, line: 43, column: 68)
!5541 = !DILocation(line: 44, column: 9, scope: !5540)
!5542 = !DILocation(line: 45, column: 28, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5540, file: !165, line: 44, column: 29)
!5544 = !DILocation(line: 45, column: 25, scope: !5543)
!5545 = !DILocation(line: 45, column: 36, scope: !5543)
!5546 = !DILocation(line: 46, column: 28, scope: !5543)
!5547 = !DILocation(line: 46, column: 35, scope: !5543)
!5548 = !DILocation(line: 46, column: 25, scope: !5543)
!5549 = !DILocation(line: 46, column: 49, scope: !5543)
!5550 = !DILocation(line: 47, column: 28, scope: !5543)
!5551 = !DILocation(line: 47, column: 35, scope: !5543)
!5552 = !DILocation(line: 47, column: 25, scope: !5543)
!5553 = !DILocation(line: 47, column: 47, scope: !5543)
!5554 = !DILocation(line: 48, column: 28, scope: !5543)
!5555 = !DILocation(line: 48, column: 35, scope: !5543)
!5556 = !DILocation(line: 48, column: 25, scope: !5543)
!5557 = !DILocation(line: 48, column: 46, scope: !5543)
!5558 = !DILocation(line: 49, column: 28, scope: !5543)
!5559 = !DILocation(line: 49, column: 35, scope: !5543)
!5560 = !DILocation(line: 49, column: 25, scope: !5543)
!5561 = !DILocation(line: 49, column: 47, scope: !5543)
!5562 = !DILocation(line: 50, column: 28, scope: !5543)
!5563 = !DILocation(line: 50, column: 35, scope: !5543)
!5564 = !DILocation(line: 50, column: 25, scope: !5543)
!5565 = !DILocation(line: 50, column: 48, scope: !5543)
!5566 = !DILocation(line: 51, column: 28, scope: !5543)
!5567 = !DILocation(line: 51, column: 35, scope: !5543)
!5568 = !DILocation(line: 51, column: 25, scope: !5543)
!5569 = !DILocation(line: 51, column: 47, scope: !5543)
!5570 = !DILocation(line: 53, column: 13, scope: !5543)
!5571 = !DILocation(line: 55, column: 9, scope: !5543)
!5572 = !DILocation(line: 57, column: 39, scope: !5540)
!5573 = !DILocation(line: 57, column: 44, scope: !5540)
!5574 = !DILocation(line: 57, column: 29, scope: !5540)
!5575 = !DILocation(line: 57, column: 56, scope: !5540)
!5576 = !DILocation(line: 57, column: 13, scope: !5540)
!5577 = distinct !{!5577, !5531, !5578, !3203}
!5578 = !DILocation(line: 58, column: 5, scope: !5513)
!5579 = !DILocation(line: 60, column: 12, scope: !5513)
!5580 = !DILocation(line: 60, column: 20, scope: !5513)
!5581 = !DILocation(line: 60, column: 28, scope: !5513)
!5582 = !DILocation(line: 60, column: 5, scope: !5513)
!5583 = !DILocation(line: 61, column: 1, scope: !5513)
!5584 = distinct !DISubprogram(name: "parse_bool", scope: !165, file: !165, line: 63, type: !5585, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3034, retainedNodes: !74)
!5585 = !DISubroutineType(types: !5586)
!5586 = !{!341, !480, !341}
!5587 = !DILocalVariable(name: "value", arg: 1, scope: !5584, file: !165, line: 63, type: !480)
!5588 = !DILocation(line: 63, column: 29, scope: !5584)
!5589 = !DILocalVariable(name: "default_value", arg: 2, scope: !5584, file: !165, line: 63, type: !341)
!5590 = !DILocation(line: 63, column: 41, scope: !5584)
!5591 = !DILocation(line: 65, column: 10, scope: !5592)
!5592 = distinct !DILexicalBlock(scope: !5584, file: !165, line: 65, column: 9)
!5593 = !DILocation(line: 65, column: 9, scope: !5584)
!5594 = !DILocation(line: 66, column: 16, scope: !5592)
!5595 = !DILocation(line: 66, column: 9, scope: !5592)
!5596 = !DILocation(line: 68, column: 17, scope: !5597)
!5597 = distinct !DILexicalBlock(scope: !5584, file: !165, line: 68, column: 9)
!5598 = !DILocation(line: 68, column: 10, scope: !5597)
!5599 = !DILocation(line: 68, column: 32, scope: !5597)
!5600 = !DILocation(line: 68, column: 43, scope: !5597)
!5601 = !DILocation(line: 68, column: 36, scope: !5597)
!5602 = !DILocation(line: 69, column: 13, scope: !5597)
!5603 = !DILocation(line: 69, column: 24, scope: !5597)
!5604 = !DILocation(line: 69, column: 17, scope: !5597)
!5605 = !DILocation(line: 69, column: 37, scope: !5597)
!5606 = !DILocation(line: 69, column: 48, scope: !5597)
!5607 = !DILocation(line: 69, column: 41, scope: !5597)
!5608 = !DILocation(line: 68, column: 9, scope: !5584)
!5609 = !DILocation(line: 70, column: 9, scope: !5597)
!5610 = !DILocation(line: 72, column: 17, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5584, file: !165, line: 72, column: 9)
!5612 = !DILocation(line: 72, column: 10, scope: !5611)
!5613 = !DILocation(line: 72, column: 33, scope: !5611)
!5614 = !DILocation(line: 72, column: 44, scope: !5611)
!5615 = !DILocation(line: 72, column: 37, scope: !5611)
!5616 = !DILocation(line: 73, column: 13, scope: !5611)
!5617 = !DILocation(line: 73, column: 24, scope: !5611)
!5618 = !DILocation(line: 73, column: 17, scope: !5611)
!5619 = !DILocation(line: 73, column: 38, scope: !5611)
!5620 = !DILocation(line: 73, column: 49, scope: !5611)
!5621 = !DILocation(line: 73, column: 42, scope: !5611)
!5622 = !DILocation(line: 72, column: 9, scope: !5584)
!5623 = !DILocation(line: 74, column: 9, scope: !5611)
!5624 = !DILocation(line: 76, column: 12, scope: !5584)
!5625 = !DILocation(line: 76, column: 5, scope: !5584)
!5626 = !DILocation(line: 77, column: 1, scope: !5584)
!5627 = distinct !DISubprogram(name: "parse_long", scope: !165, file: !165, line: 79, type: !5628, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3034, retainedNodes: !74)
!5628 = !DISubroutineType(types: !5629)
!5629 = !{!40, !480, !40}
!5630 = !DILocalVariable(name: "value", arg: 1, scope: !5627, file: !165, line: 79, type: !480)
!5631 = !DILocation(line: 79, column: 29, scope: !5627)
!5632 = !DILocalVariable(name: "default_value", arg: 2, scope: !5627, file: !165, line: 79, type: !40)
!5633 = !DILocation(line: 79, column: 41, scope: !5627)
!5634 = !DILocalVariable(name: "endptr", scope: !5627, file: !165, line: 81, type: !61)
!5635 = !DILocation(line: 81, column: 11, scope: !5627)
!5636 = !DILocalVariable(name: "parsed", scope: !5627, file: !165, line: 82, type: !40)
!5637 = !DILocation(line: 82, column: 10, scope: !5627)
!5638 = !DILocation(line: 84, column: 5, scope: !5627)
!5639 = !DILocation(line: 84, column: 11, scope: !5627)
!5640 = !DILocation(line: 85, column: 21, scope: !5627)
!5641 = !DILocation(line: 85, column: 14, scope: !5627)
!5642 = !DILocation(line: 85, column: 12, scope: !5627)
!5643 = !DILocation(line: 87, column: 9, scope: !5644)
!5644 = distinct !DILexicalBlock(scope: !5627, file: !165, line: 87, column: 9)
!5645 = !DILocation(line: 87, column: 15, scope: !5644)
!5646 = !DILocation(line: 87, column: 9, scope: !5627)
!5647 = !DILocation(line: 88, column: 16, scope: !5644)
!5648 = !DILocation(line: 88, column: 9, scope: !5644)
!5649 = !DILocation(line: 90, column: 10, scope: !5650)
!5650 = distinct !DILexicalBlock(scope: !5627, file: !165, line: 90, column: 9)
!5651 = !DILocation(line: 90, column: 9, scope: !5650)
!5652 = !DILocation(line: 90, column: 17, scope: !5650)
!5653 = !DILocation(line: 90, column: 25, scope: !5650)
!5654 = !DILocation(line: 90, column: 28, scope: !5650)
!5655 = !DILocation(line: 90, column: 37, scope: !5650)
!5656 = !DILocation(line: 90, column: 34, scope: !5650)
!5657 = !DILocation(line: 90, column: 9, scope: !5627)
!5658 = !DILocation(line: 91, column: 16, scope: !5650)
!5659 = !DILocation(line: 91, column: 9, scope: !5650)
!5660 = !DILocation(line: 93, column: 12, scope: !5627)
!5661 = !DILocation(line: 93, column: 5, scope: !5627)
!5662 = !DILocation(line: 94, column: 1, scope: !5627)
!5663 = distinct !DISubprogram(name: "config_error", scope: !165, file: !165, line: 96, type: !5664, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3034, retainedNodes: !74)
!5664 = !DISubroutineType(types: !5665)
!5665 = !{!341, !5666, !480, null}
!5666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5667, size: 64)
!5667 = !DIDerivedType(tag: DW_TAG_typedef, name: "config_t", file: !301, line: 32, baseType: !5668)
!5668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "config_t_", file: !301, line: 41, size: 192, elements: !5669)
!5669 = !{!5670, !5716, !5717}
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !5668, file: !301, line: 42, baseType: !5671, size: 64)
!5671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5672, size: 64)
!5672 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5673, line: 7, baseType: !5674)
!5673 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "", checksumkind: CSK_MD5, checksum: "571f9fb6223c42439075fdde11a0de5d")
!5674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5675, line: 49, size: 1728, elements: !5676)
!5675 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "", checksumkind: CSK_MD5, checksum: "1bad07471b7974df4ecc1d1c2ca207e6")
!5676 = !{!5677, !5678, !5679, !5680, !5681, !5682, !5683, !5684, !5685, !5686, !5687, !5688, !5689, !5692, !5694, !5695, !5696, !5697, !5698, !5699, !5700, !5703, !5705, !5708, !5711, !5712, !5713, !5714, !5715}
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5674, file: !5675, line: 51, baseType: !37, size: 32)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5674, file: !5675, line: 54, baseType: !61, size: 64, offset: 64)
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5674, file: !5675, line: 55, baseType: !61, size: 64, offset: 128)
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5674, file: !5675, line: 56, baseType: !61, size: 64, offset: 192)
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5674, file: !5675, line: 57, baseType: !61, size: 64, offset: 256)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5674, file: !5675, line: 58, baseType: !61, size: 64, offset: 320)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5674, file: !5675, line: 59, baseType: !61, size: 64, offset: 384)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5674, file: !5675, line: 60, baseType: !61, size: 64, offset: 448)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5674, file: !5675, line: 61, baseType: !61, size: 64, offset: 512)
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5674, file: !5675, line: 64, baseType: !61, size: 64, offset: 576)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5674, file: !5675, line: 65, baseType: !61, size: 64, offset: 640)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5674, file: !5675, line: 66, baseType: !61, size: 64, offset: 704)
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5674, file: !5675, line: 68, baseType: !5690, size: 64, offset: 768)
!5690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5691, size: 64)
!5691 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !5675, line: 36, flags: DIFlagFwdDecl)
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5674, file: !5675, line: 70, baseType: !5693, size: 64, offset: 832)
!5693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5674, size: 64)
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5674, file: !5675, line: 72, baseType: !37, size: 32, offset: 896)
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5674, file: !5675, line: 73, baseType: !37, size: 32, offset: 928)
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5674, file: !5675, line: 74, baseType: !463, size: 64, offset: 960)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5674, file: !5675, line: 77, baseType: !413, size: 16, offset: 1024)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5674, file: !5675, line: 78, baseType: !4708, size: 8, offset: 1040)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5674, file: !5675, line: 79, baseType: !1556, size: 8, offset: 1048)
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5674, file: !5675, line: 81, baseType: !5701, size: 64, offset: 1088)
!5701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5702, size: 64)
!5702 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !5675, line: 43, baseType: null)
!5703 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5674, file: !5675, line: 89, baseType: !5704, size: 64, offset: 1152)
!5704 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !69, line: 153, baseType: !40)
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5674, file: !5675, line: 91, baseType: !5706, size: 64, offset: 1216)
!5706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5707, size: 64)
!5707 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !5675, line: 37, flags: DIFlagFwdDecl)
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5674, file: !5675, line: 92, baseType: !5709, size: 64, offset: 1280)
!5709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5710, size: 64)
!5710 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !5675, line: 38, flags: DIFlagFwdDecl)
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5674, file: !5675, line: 93, baseType: !5693, size: 64, offset: 1344)
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5674, file: !5675, line: 94, baseType: !5, size: 64, offset: 1408)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5674, file: !5675, line: 95, baseType: !6, size: 64, offset: 1472)
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5674, file: !5675, line: 96, baseType: !37, size: 32, offset: 1536)
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5674, file: !5675, line: 98, baseType: !1672, size: 160, offset: 1568)
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !5668, file: !301, line: 43, baseType: !37, size: 32, offset: 64)
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "error_message", scope: !5668, file: !301, line: 44, baseType: !61, size: 64, offset: 128)
!5718 = !DILocalVariable(name: "conf", arg: 1, scope: !5663, file: !165, line: 96, type: !5666)
!5719 = !DILocation(line: 96, column: 29, scope: !5663)
!5720 = !DILocalVariable(name: "fmt", arg: 2, scope: !5663, file: !165, line: 96, type: !480)
!5721 = !DILocation(line: 96, column: 47, scope: !5663)
!5722 = !DILocalVariable(name: "values", scope: !5663, file: !165, line: 98, type: !5723)
!5723 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2698, line: 52, baseType: !5724)
!5724 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !5725, line: 14, baseType: !5726)
!5725 = !DIFile(filename: "SVF/llvm-16.0.0.obj/lib/clang/16/include/stdarg.h", directory: "/home/raj", checksumkind: CSK_MD5, checksum: "4c819f80dd915987182e9ab226e27a5a")
!5726 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5727, baseType: !5728)
!5727 = !DIFile(filename: "common/lwan-config.c", directory: "/home/raj/lwan")
!5728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5729, size: 192, elements: !1557)
!5729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", size: 192, elements: !5730)
!5730 = !{!5731, !5732, !5733, !5734}
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !5729, file: !5727, line: 98, baseType: !28, size: 32)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !5729, file: !5727, line: 98, baseType: !28, size: 32, offset: 32)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !5729, file: !5727, line: 98, baseType: !5, size: 64, offset: 64)
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !5729, file: !5727, line: 98, baseType: !5, size: 64, offset: 128)
!5735 = !DILocation(line: 98, column: 13, scope: !5663)
!5736 = !DILocalVariable(name: "len", scope: !5663, file: !165, line: 99, type: !37)
!5737 = !DILocation(line: 99, column: 9, scope: !5663)
!5738 = !DILocalVariable(name: "output", scope: !5663, file: !165, line: 100, type: !61)
!5739 = !DILocation(line: 100, column: 11, scope: !5663)
!5740 = !DILocation(line: 102, column: 9, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5663, file: !165, line: 102, column: 9)
!5742 = !DILocation(line: 102, column: 15, scope: !5741)
!5743 = !DILocation(line: 102, column: 9, scope: !5663)
!5744 = !DILocation(line: 103, column: 9, scope: !5741)
!5745 = !DILocation(line: 105, column: 5, scope: !5663)
!5746 = !DILocation(line: 106, column: 30, scope: !5663)
!5747 = !DILocation(line: 106, column: 35, scope: !5663)
!5748 = !DILocation(line: 106, column: 11, scope: !5663)
!5749 = !DILocation(line: 106, column: 9, scope: !5663)
!5750 = !DILocation(line: 107, column: 5, scope: !5663)
!5751 = !DILocation(line: 109, column: 9, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5663, file: !165, line: 109, column: 9)
!5753 = !DILocation(line: 109, column: 13, scope: !5752)
!5754 = !DILocation(line: 109, column: 9, scope: !5663)
!5755 = !DILocation(line: 110, column: 31, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5752, file: !165, line: 109, column: 19)
!5757 = !DILocation(line: 110, column: 9, scope: !5756)
!5758 = !DILocation(line: 110, column: 15, scope: !5756)
!5759 = !DILocation(line: 110, column: 29, scope: !5756)
!5760 = !DILocation(line: 111, column: 9, scope: !5756)
!5761 = !DILocation(line: 114, column: 5, scope: !5663)
!5762 = !DILocation(line: 114, column: 11, scope: !5663)
!5763 = !DILocation(line: 114, column: 25, scope: !5663)
!5764 = !DILocation(line: 115, column: 5, scope: !5663)
!5765 = !DILocation(line: 116, column: 1, scope: !5663)
!5766 = distinct !DISubprogram(name: "config_read_line", scope: !165, file: !165, line: 183, type: !5767, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3034, retainedNodes: !74)
!5767 = !DISubroutineType(types: !5768)
!5768 = !{!341, !5666, !5769}
!5769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5770, size: 64)
!5770 = !DIDerivedType(tag: DW_TAG_typedef, name: "config_line_t", file: !301, line: 33, baseType: !5771)
!5771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "config_line_t_", file: !301, line: 47, size: 8384, elements: !5772)
!5772 = !{!5773, !5786, !5788}
!5773 = !DIDerivedType(tag: DW_TAG_member, scope: !5771, file: !301, line: 48, baseType: !5774, size: 128)
!5774 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5771, file: !301, line: 48, size: 128, elements: !5775)
!5775 = !{!5776, !5781}
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "section", scope: !5774, file: !301, line: 51, baseType: !5777, size: 128)
!5777 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5774, file: !301, line: 49, size: 128, elements: !5778)
!5778 = !{!5779, !5780}
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5777, file: !301, line: 50, baseType: !61, size: 64)
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !5777, file: !301, line: 50, baseType: !61, size: 64, offset: 64)
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !5774, file: !301, line: 54, baseType: !5782, size: 128)
!5782 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5774, file: !301, line: 52, size: 128, elements: !5783)
!5783 = !{!5784, !5785}
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !5782, file: !301, line: 53, baseType: !61, size: 64)
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5782, file: !301, line: 53, baseType: !61, size: 64, offset: 64)
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5771, file: !301, line: 56, baseType: !5787, size: 32, offset: 128)
!5787 = !DIDerivedType(tag: DW_TAG_typedef, name: "config_line_type_t", file: !301, line: 39, baseType: !300)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !5771, file: !301, line: 57, baseType: !5789, size: 8192, offset: 160)
!5789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 8192, elements: !5790)
!5790 = !{!5791}
!5791 = !DISubrange(count: 1024)
!5792 = !DILocalVariable(name: "conf", arg: 1, scope: !5766, file: !165, line: 183, type: !5666)
!5793 = !DILocation(line: 183, column: 33, scope: !5766)
!5794 = !DILocalVariable(name: "l", arg: 2, scope: !5766, file: !165, line: 183, type: !5769)
!5795 = !DILocation(line: 183, column: 54, scope: !5766)
!5796 = !DILocalVariable(name: "line", scope: !5766, file: !165, line: 185, type: !61)
!5797 = !DILocation(line: 185, column: 11, scope: !5766)
!5798 = !DILocalVariable(name: "line_end", scope: !5766, file: !165, line: 185, type: !61)
!5799 = !DILocation(line: 185, column: 18, scope: !5766)
!5800 = !DILocation(line: 187, column: 9, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5766, file: !165, line: 187, column: 9)
!5802 = !DILocation(line: 187, column: 15, scope: !5801)
!5803 = !DILocation(line: 187, column: 9, scope: !5766)
!5804 = !DILocation(line: 188, column: 9, scope: !5801)
!5805 = !DILabel(scope: !5766, name: "retry", file: !165, line: 190)
!5806 = !DILocation(line: 190, column: 1, scope: !5766)
!5807 = !DILocation(line: 191, column: 16, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5766, file: !165, line: 191, column: 9)
!5809 = !DILocation(line: 191, column: 19, scope: !5808)
!5810 = !DILocation(line: 191, column: 46, scope: !5808)
!5811 = !DILocation(line: 191, column: 52, scope: !5808)
!5812 = !DILocation(line: 191, column: 10, scope: !5808)
!5813 = !DILocation(line: 191, column: 9, scope: !5766)
!5814 = !DILocation(line: 192, column: 9, scope: !5808)
!5815 = !DILocation(line: 194, column: 5, scope: !5766)
!5816 = !DILocation(line: 194, column: 11, scope: !5766)
!5817 = !DILocation(line: 194, column: 15, scope: !5766)
!5818 = !DILocation(line: 196, column: 28, scope: !5766)
!5819 = !DILocation(line: 196, column: 31, scope: !5766)
!5820 = !DILocation(line: 196, column: 12, scope: !5766)
!5821 = !DILocation(line: 196, column: 10, scope: !5766)
!5822 = !DILocation(line: 197, column: 34, scope: !5766)
!5823 = !DILocation(line: 197, column: 12, scope: !5766)
!5824 = !DILocation(line: 197, column: 10, scope: !5766)
!5825 = !DILocation(line: 198, column: 35, scope: !5766)
!5826 = !DILocation(line: 198, column: 12, scope: !5766)
!5827 = !DILocation(line: 198, column: 10, scope: !5766)
!5828 = !DILocation(line: 199, column: 30, scope: !5766)
!5829 = !DILocation(line: 199, column: 16, scope: !5766)
!5830 = !DILocation(line: 199, column: 14, scope: !5766)
!5831 = !DILocation(line: 201, column: 10, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5766, file: !165, line: 201, column: 9)
!5833 = !DILocation(line: 201, column: 9, scope: !5832)
!5834 = !DILocation(line: 201, column: 19, scope: !5832)
!5835 = !DILocation(line: 201, column: 9, scope: !5766)
!5836 = !DILocation(line: 202, column: 28, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5838, file: !165, line: 202, column: 13)
!5838 = distinct !DILexicalBlock(scope: !5832, file: !165, line: 201, column: 27)
!5839 = !DILocation(line: 202, column: 34, scope: !5837)
!5840 = !DILocation(line: 202, column: 14, scope: !5837)
!5841 = !DILocation(line: 202, column: 13, scope: !5838)
!5842 = !DILocation(line: 203, column: 26, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !5837, file: !165, line: 202, column: 38)
!5844 = !DILocation(line: 203, column: 13, scope: !5843)
!5845 = !DILocation(line: 204, column: 13, scope: !5843)
!5846 = !DILocation(line: 206, column: 5, scope: !5838)
!5847 = !DILocation(line: 206, column: 17, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5832, file: !165, line: 206, column: 16)
!5849 = !DILocation(line: 206, column: 16, scope: !5848)
!5850 = !DILocation(line: 206, column: 22, scope: !5848)
!5851 = !DILocation(line: 206, column: 16, scope: !5832)
!5852 = !DILocation(line: 207, column: 9, scope: !5853)
!5853 = distinct !DILexicalBlock(scope: !5848, file: !165, line: 206, column: 31)
!5854 = !DILocation(line: 208, column: 17, scope: !5855)
!5855 = distinct !DILexicalBlock(scope: !5848, file: !165, line: 208, column: 16)
!5856 = !DILocation(line: 208, column: 16, scope: !5855)
!5857 = !DILocation(line: 208, column: 22, scope: !5855)
!5858 = !DILocation(line: 208, column: 29, scope: !5855)
!5859 = !DILocation(line: 208, column: 32, scope: !5855)
!5860 = !DILocation(line: 208, column: 40, scope: !5855)
!5861 = !DILocation(line: 208, column: 37, scope: !5855)
!5862 = !DILocation(line: 208, column: 16, scope: !5848)
!5863 = !DILocation(line: 209, column: 9, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5855, file: !165, line: 208, column: 50)
!5865 = !DILocation(line: 209, column: 12, scope: !5864)
!5866 = !DILocation(line: 209, column: 17, scope: !5864)
!5867 = !DILocation(line: 210, column: 5, scope: !5864)
!5868 = !DILocalVariable(name: "equal", scope: !5869, file: !165, line: 211, type: !61)
!5869 = distinct !DILexicalBlock(scope: !5855, file: !165, line: 210, column: 12)
!5870 = !DILocation(line: 211, column: 15, scope: !5869)
!5871 = !DILocation(line: 211, column: 30, scope: !5869)
!5872 = !DILocation(line: 211, column: 23, scope: !5869)
!5873 = !DILocation(line: 212, column: 13, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5869, file: !165, line: 212, column: 13)
!5875 = !DILocation(line: 212, column: 13, scope: !5869)
!5876 = !DILocation(line: 213, column: 29, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5878, file: !165, line: 213, column: 17)
!5878 = distinct !DILexicalBlock(scope: !5874, file: !165, line: 212, column: 20)
!5879 = !DILocation(line: 213, column: 35, scope: !5877)
!5880 = !DILocation(line: 213, column: 38, scope: !5877)
!5881 = !DILocation(line: 213, column: 18, scope: !5877)
!5882 = !DILocation(line: 213, column: 17, scope: !5878)
!5883 = !DILocation(line: 214, column: 30, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5877, file: !165, line: 213, column: 46)
!5885 = !DILocation(line: 214, column: 17, scope: !5884)
!5886 = !DILocation(line: 215, column: 17, scope: !5884)
!5887 = !DILocation(line: 217, column: 9, scope: !5878)
!5888 = !DILocation(line: 218, column: 26, scope: !5889)
!5889 = distinct !DILexicalBlock(scope: !5874, file: !165, line: 217, column: 16)
!5890 = !DILocation(line: 218, column: 13, scope: !5889)
!5891 = !DILocation(line: 219, column: 13, scope: !5889)
!5892 = !DILocation(line: 223, column: 5, scope: !5766)
!5893 = !DILocation(line: 224, column: 1, scope: !5766)
!5894 = distinct !DISubprogram(name: "remove_comments", scope: !165, file: !165, line: 118, type: !5895, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3034, retainedNodes: !74)
!5895 = !DISubroutineType(types: !5896)
!5896 = !{!61, !61}
!5897 = !DILocalVariable(name: "line", arg: 1, scope: !5894, file: !165, line: 118, type: !61)
!5898 = !DILocation(line: 118, column: 36, scope: !5894)
!5899 = !DILocalVariable(name: "tmp", scope: !5894, file: !165, line: 120, type: !61)
!5900 = !DILocation(line: 120, column: 11, scope: !5894)
!5901 = !DILocation(line: 120, column: 25, scope: !5894)
!5902 = !DILocation(line: 120, column: 17, scope: !5894)
!5903 = !DILocation(line: 121, column: 9, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5894, file: !165, line: 121, column: 9)
!5905 = !DILocation(line: 121, column: 9, scope: !5894)
!5906 = !DILocation(line: 122, column: 10, scope: !5904)
!5907 = !DILocation(line: 122, column: 14, scope: !5904)
!5908 = !DILocation(line: 122, column: 9, scope: !5904)
!5909 = !DILocation(line: 123, column: 12, scope: !5894)
!5910 = !DILocation(line: 123, column: 5, scope: !5894)
!5911 = distinct !DISubprogram(name: "remove_leading_spaces", scope: !165, file: !165, line: 136, type: !5895, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3034, retainedNodes: !74)
!5912 = !DILocalVariable(name: "line", arg: 1, scope: !5911, file: !165, line: 136, type: !61)
!5913 = !DILocation(line: 136, column: 42, scope: !5911)
!5914 = !DILocation(line: 138, column: 5, scope: !5911)
!5915 = !DILocation(line: 138, column: 12, scope: !5911)
!5916 = !DILocation(line: 139, column: 13, scope: !5911)
!5917 = distinct !{!5917, !5914, !5916, !3203}
!5918 = !DILocation(line: 140, column: 12, scope: !5911)
!5919 = !DILocation(line: 140, column: 5, scope: !5911)
!5920 = distinct !DISubprogram(name: "remove_trailing_spaces", scope: !165, file: !165, line: 126, type: !5895, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3034, retainedNodes: !74)
!5921 = !DILocalVariable(name: "line", arg: 1, scope: !5920, file: !165, line: 126, type: !61)
!5922 = !DILocation(line: 126, column: 43, scope: !5920)
!5923 = !DILocalVariable(name: "end", scope: !5920, file: !165, line: 128, type: !61)
!5924 = !DILocation(line: 128, column: 11, scope: !5920)
!5925 = !DILocation(line: 128, column: 27, scope: !5920)
!5926 = !DILocation(line: 128, column: 17, scope: !5920)
!5927 = !DILocation(line: 130, column: 13, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5920, file: !165, line: 130, column: 5)
!5929 = !DILocation(line: 130, column: 10, scope: !5928)
!5930 = !DILocation(line: 130, column: 17, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5928, file: !165, line: 130, column: 5)
!5932 = !DILocation(line: 130, column: 5, scope: !5928)
!5933 = !DILocation(line: 130, column: 35, scope: !5931)
!5934 = !DILocation(line: 130, column: 5, scope: !5931)
!5935 = distinct !{!5935, !5932, !5936, !3203}
!5936 = !DILocation(line: 130, column: 38, scope: !5928)
!5937 = !DILocation(line: 131, column: 7, scope: !5920)
!5938 = !DILocation(line: 131, column: 11, scope: !5920)
!5939 = !DILocation(line: 131, column: 16, scope: !5920)
!5940 = !DILocation(line: 133, column: 12, scope: !5920)
!5941 = !DILocation(line: 133, column: 5, scope: !5920)
!5942 = distinct !DISubprogram(name: "find_line_end", scope: !165, file: !165, line: 143, type: !5895, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3034, retainedNodes: !74)
!5943 = !DILocalVariable(name: "line", arg: 1, scope: !5942, file: !165, line: 143, type: !61)
!5944 = !DILocation(line: 143, column: 34, scope: !5942)
!5945 = !DILocation(line: 145, column: 10, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5942, file: !165, line: 145, column: 9)
!5947 = !DILocation(line: 145, column: 9, scope: !5946)
!5948 = !DILocation(line: 145, column: 15, scope: !5946)
!5949 = !DILocation(line: 145, column: 9, scope: !5942)
!5950 = !DILocation(line: 146, column: 16, scope: !5946)
!5951 = !DILocation(line: 146, column: 9, scope: !5946)
!5952 = !DILocation(line: 147, column: 30, scope: !5942)
!5953 = !DILocation(line: 147, column: 20, scope: !5942)
!5954 = !DILocation(line: 147, column: 42, scope: !5942)
!5955 = !DILocation(line: 147, column: 5, scope: !5942)
!5956 = !DILocation(line: 148, column: 1, scope: !5942)
!5957 = distinct !DISubprogram(name: "parse_section", scope: !165, file: !165, line: 150, type: !5958, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3034, retainedNodes: !74)
!5958 = !DISubroutineType(types: !5959)
!5959 = !{!341, !61, !5769}
!5960 = !DILocalVariable(name: "line", arg: 1, scope: !5957, file: !165, line: 150, type: !61)
!5961 = !DILocation(line: 150, column: 33, scope: !5957)
!5962 = !DILocalVariable(name: "l", arg: 2, scope: !5957, file: !165, line: 150, type: !5769)
!5963 = !DILocation(line: 150, column: 54, scope: !5957)
!5964 = !DILocalVariable(name: "name", scope: !5957, file: !165, line: 152, type: !61)
!5965 = !DILocation(line: 152, column: 11, scope: !5957)
!5966 = !DILocalVariable(name: "param", scope: !5957, file: !165, line: 152, type: !61)
!5967 = !DILocation(line: 152, column: 18, scope: !5957)
!5968 = !DILocalVariable(name: "bracket", scope: !5957, file: !165, line: 153, type: !61)
!5969 = !DILocation(line: 153, column: 11, scope: !5957)
!5970 = !DILocation(line: 153, column: 29, scope: !5957)
!5971 = !DILocation(line: 153, column: 21, scope: !5957)
!5972 = !DILocation(line: 154, column: 10, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5957, file: !165, line: 154, column: 9)
!5974 = !DILocation(line: 154, column: 9, scope: !5957)
!5975 = !DILocation(line: 155, column: 9, scope: !5973)
!5976 = !DILocalVariable(name: "space", scope: !5957, file: !165, line: 157, type: !61)
!5977 = !DILocation(line: 157, column: 11, scope: !5957)
!5978 = !DILocation(line: 157, column: 26, scope: !5957)
!5979 = !DILocation(line: 157, column: 19, scope: !5957)
!5980 = !DILocation(line: 158, column: 10, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5957, file: !165, line: 158, column: 9)
!5982 = !DILocation(line: 158, column: 9, scope: !5957)
!5983 = !DILocation(line: 159, column: 9, scope: !5981)
!5984 = !DILocation(line: 161, column: 6, scope: !5957)
!5985 = !DILocation(line: 161, column: 14, scope: !5957)
!5986 = !DILocation(line: 162, column: 6, scope: !5957)
!5987 = !DILocation(line: 162, column: 12, scope: !5957)
!5988 = !DILocation(line: 163, column: 57, scope: !5957)
!5989 = !DILocation(line: 163, column: 35, scope: !5957)
!5990 = !DILocation(line: 163, column: 12, scope: !5957)
!5991 = !DILocation(line: 163, column: 10, scope: !5957)
!5992 = !DILocation(line: 164, column: 58, scope: !5957)
!5993 = !DILocation(line: 164, column: 64, scope: !5957)
!5994 = !DILocation(line: 164, column: 36, scope: !5957)
!5995 = !DILocation(line: 164, column: 13, scope: !5957)
!5996 = !DILocation(line: 164, column: 11, scope: !5957)
!5997 = !DILocation(line: 166, column: 23, scope: !5957)
!5998 = !DILocation(line: 166, column: 5, scope: !5957)
!5999 = !DILocation(line: 166, column: 8, scope: !5957)
!6000 = !DILocation(line: 166, column: 16, scope: !5957)
!6001 = !DILocation(line: 166, column: 21, scope: !5957)
!6002 = !DILocation(line: 167, column: 24, scope: !5957)
!6003 = !DILocation(line: 167, column: 5, scope: !5957)
!6004 = !DILocation(line: 167, column: 8, scope: !5957)
!6005 = !DILocation(line: 167, column: 16, scope: !5957)
!6006 = !DILocation(line: 167, column: 22, scope: !5957)
!6007 = !DILocation(line: 168, column: 5, scope: !5957)
!6008 = !DILocation(line: 168, column: 8, scope: !5957)
!6009 = !DILocation(line: 168, column: 13, scope: !5957)
!6010 = !DILocation(line: 170, column: 5, scope: !5957)
!6011 = !DILocation(line: 171, column: 1, scope: !5957)
!6012 = distinct !DISubprogram(name: "parse_line", scope: !165, file: !165, line: 173, type: !6013, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3034, retainedNodes: !74)
!6013 = !DISubroutineType(types: !6014)
!6014 = !{!341, !61, !5769, !61}
!6015 = !DILocalVariable(name: "line", arg: 1, scope: !6012, file: !165, line: 173, type: !61)
!6016 = !DILocation(line: 173, column: 30, scope: !6012)
!6017 = !DILocalVariable(name: "l", arg: 2, scope: !6012, file: !165, line: 173, type: !5769)
!6018 = !DILocation(line: 173, column: 51, scope: !6012)
!6019 = !DILocalVariable(name: "equal", arg: 3, scope: !6012, file: !165, line: 173, type: !61)
!6020 = !DILocation(line: 173, column: 60, scope: !6012)
!6021 = !DILocation(line: 175, column: 6, scope: !6012)
!6022 = !DILocation(line: 175, column: 12, scope: !6012)
!6023 = !DILocation(line: 176, column: 64, scope: !6012)
!6024 = !DILocation(line: 176, column: 42, scope: !6012)
!6025 = !DILocation(line: 176, column: 19, scope: !6012)
!6026 = !DILocation(line: 176, column: 5, scope: !6012)
!6027 = !DILocation(line: 176, column: 8, scope: !6012)
!6028 = !DILocation(line: 176, column: 13, scope: !6012)
!6029 = !DILocation(line: 176, column: 17, scope: !6012)
!6030 = !DILocation(line: 177, column: 43, scope: !6012)
!6031 = !DILocation(line: 177, column: 49, scope: !6012)
!6032 = !DILocation(line: 177, column: 21, scope: !6012)
!6033 = !DILocation(line: 177, column: 5, scope: !6012)
!6034 = !DILocation(line: 177, column: 8, scope: !6012)
!6035 = !DILocation(line: 177, column: 13, scope: !6012)
!6036 = !DILocation(line: 177, column: 19, scope: !6012)
!6037 = !DILocation(line: 178, column: 5, scope: !6012)
!6038 = !DILocation(line: 178, column: 8, scope: !6012)
!6039 = !DILocation(line: 178, column: 13, scope: !6012)
!6040 = !DILocation(line: 180, column: 5, scope: !6012)
!6041 = distinct !DISubprogram(name: "config_open", scope: !165, file: !165, line: 226, type: !6042, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3034, retainedNodes: !74)
!6042 = !DISubroutineType(types: !6043)
!6043 = !{!341, !5666, !480}
!6044 = !DILocalVariable(name: "conf", arg: 1, scope: !6041, file: !165, line: 226, type: !5666)
!6045 = !DILocation(line: 226, column: 28, scope: !6041)
!6046 = !DILocalVariable(name: "path", arg: 2, scope: !6041, file: !165, line: 226, type: !480)
!6047 = !DILocation(line: 226, column: 46, scope: !6041)
!6048 = !DILocation(line: 228, column: 10, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !6041, file: !165, line: 228, column: 9)
!6050 = !DILocation(line: 228, column: 9, scope: !6041)
!6051 = !DILocation(line: 229, column: 9, scope: !6049)
!6052 = !DILocation(line: 230, column: 10, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6041, file: !165, line: 230, column: 9)
!6054 = !DILocation(line: 230, column: 9, scope: !6041)
!6055 = !DILocation(line: 231, column: 9, scope: !6053)
!6056 = !DILocation(line: 232, column: 24, scope: !6041)
!6057 = !DILocation(line: 232, column: 18, scope: !6041)
!6058 = !DILocation(line: 232, column: 5, scope: !6041)
!6059 = !DILocation(line: 232, column: 11, scope: !6041)
!6060 = !DILocation(line: 232, column: 16, scope: !6041)
!6061 = !DILocation(line: 233, column: 10, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6041, file: !165, line: 233, column: 9)
!6063 = !DILocation(line: 233, column: 16, scope: !6062)
!6064 = !DILocation(line: 233, column: 9, scope: !6041)
!6065 = !DILocation(line: 234, column: 9, scope: !6062)
!6066 = !DILocation(line: 235, column: 5, scope: !6041)
!6067 = !DILocation(line: 235, column: 11, scope: !6041)
!6068 = !DILocation(line: 235, column: 16, scope: !6041)
!6069 = !DILocation(line: 236, column: 5, scope: !6041)
!6070 = !DILocation(line: 236, column: 11, scope: !6041)
!6071 = !DILocation(line: 236, column: 25, scope: !6041)
!6072 = !DILocation(line: 237, column: 5, scope: !6041)
!6073 = !DILocation(line: 238, column: 1, scope: !6041)
!6074 = distinct !DISubprogram(name: "config_close", scope: !165, file: !165, line: 240, type: !6075, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3034, retainedNodes: !74)
!6075 = !DISubroutineType(types: !6076)
!6076 = !{null, !5666}
!6077 = !DILocalVariable(name: "conf", arg: 1, scope: !6074, file: !165, line: 240, type: !5666)
!6078 = !DILocation(line: 240, column: 29, scope: !6074)
!6079 = !DILocation(line: 242, column: 10, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6074, file: !165, line: 242, column: 9)
!6081 = !DILocation(line: 242, column: 9, scope: !6074)
!6082 = !DILocation(line: 243, column: 9, scope: !6080)
!6083 = !DILocation(line: 244, column: 10, scope: !6084)
!6084 = distinct !DILexicalBlock(scope: !6074, file: !165, line: 244, column: 9)
!6085 = !DILocation(line: 244, column: 16, scope: !6084)
!6086 = !DILocation(line: 244, column: 9, scope: !6074)
!6087 = !DILocation(line: 245, column: 9, scope: !6084)
!6088 = !DILocation(line: 246, column: 12, scope: !6074)
!6089 = !DILocation(line: 246, column: 18, scope: !6074)
!6090 = !DILocation(line: 246, column: 5, scope: !6074)
!6091 = !DILocation(line: 247, column: 10, scope: !6074)
!6092 = !DILocation(line: 247, column: 16, scope: !6074)
!6093 = !DILocation(line: 247, column: 5, scope: !6074)
!6094 = !DILocation(line: 248, column: 1, scope: !6074)
!6095 = distinct !DISubprogram(name: "coro_reset", scope: !225, file: !225, line: 164, type: !6096, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3039, retainedNodes: !74)
!6096 = !DISubroutineType(types: !6097)
!6097 = !{null, !6098, !6127, !5}
!6098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6099, size: 64)
!6099 = !DIDerivedType(tag: DW_TAG_typedef, name: "coro_t", file: !367, line: 34, baseType: !6100)
!6100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "coro_t_", file: !225, line: 53, size: 960, elements: !6101)
!6101 = !{!6102, !6111, !6112, !6113, !6125, !6126}
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "switcher", scope: !6100, file: !225, line: 54, baseType: !6103, size: 64)
!6103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6104, size: 64)
!6104 = !DIDerivedType(tag: DW_TAG_typedef, name: "coro_switcher_t", file: !367, line: 35, baseType: !6105)
!6105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "coro_switcher_t_", file: !367, line: 39, size: 1280, elements: !6106)
!6106 = !{!6107, !6110}
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !6105, file: !367, line: 40, baseType: !6108, size: 640)
!6108 = !DIDerivedType(tag: DW_TAG_typedef, name: "coro_context_t", file: !367, line: 25, baseType: !6109)
!6109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2696, size: 640, elements: !655)
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "callee", scope: !6105, file: !367, line: 41, baseType: !6108, size: 640, offset: 640)
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !6100, file: !225, line: 55, baseType: !6108, size: 640, offset: 64)
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "yield_value", scope: !6100, file: !225, line: 56, baseType: !37, size: 32, offset: 704)
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "defer", scope: !6100, file: !225, line: 62, baseType: !6114, size: 64, offset: 768)
!6114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6115, size: 64)
!6115 = !DIDerivedType(tag: DW_TAG_typedef, name: "coro_defer_t", file: !225, line: 44, baseType: !6116)
!6116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "coro_defer_t_", file: !225, line: 46, size: 256, elements: !6117)
!6117 = !{!6118, !6119, !6123, !6124}
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6116, file: !225, line: 47, baseType: !6114, size: 64)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !6116, file: !225, line: 48, baseType: !6120, size: 64, offset: 64)
!6120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6121, size: 64)
!6121 = !DISubroutineType(types: !6122)
!6122 = !{null, null}
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "data1", scope: !6116, file: !225, line: 49, baseType: !5, size: 64, offset: 128)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "data2", scope: !6116, file: !225, line: 50, baseType: !5, size: 64, offset: 192)
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6100, file: !225, line: 63, baseType: !5, size: 64, offset: 832)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "ended", scope: !6100, file: !225, line: 65, baseType: !341, size: 8, offset: 896)
!6127 = !DIDerivedType(tag: DW_TAG_typedef, name: "coro_function_t", file: !367, line: 37, baseType: !6128)
!6128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6129, size: 64)
!6129 = !DISubroutineType(types: !6130)
!6130 = !{!37, !6098}
!6131 = !DILocalVariable(name: "coro", arg: 1, scope: !6095, file: !225, line: 164, type: !6098)
!6132 = !DILocation(line: 164, column: 20, scope: !6095)
!6133 = !DILocalVariable(name: "func", arg: 2, scope: !6095, file: !225, line: 164, type: !6127)
!6134 = !DILocation(line: 164, column: 42, scope: !6095)
!6135 = !DILocalVariable(name: "data", arg: 3, scope: !6095, file: !225, line: 164, type: !5)
!6136 = !DILocation(line: 164, column: 54, scope: !6095)
!6137 = !DILocalVariable(name: "stack", scope: !6095, file: !225, line: 166, type: !334)
!6138 = !DILocation(line: 166, column: 20, scope: !6095)
!6139 = !DILocation(line: 166, column: 46, scope: !6095)
!6140 = !DILocation(line: 166, column: 51, scope: !6095)
!6141 = !DILocation(line: 168, column: 5, scope: !6095)
!6142 = !DILocation(line: 168, column: 11, scope: !6095)
!6143 = !DILocation(line: 168, column: 17, scope: !6095)
!6144 = !DILocation(line: 169, column: 18, scope: !6095)
!6145 = !DILocation(line: 169, column: 5, scope: !6095)
!6146 = !DILocation(line: 169, column: 11, scope: !6095)
!6147 = !DILocation(line: 169, column: 16, scope: !6095)
!6148 = !DILocation(line: 171, column: 23, scope: !6095)
!6149 = !DILocation(line: 171, column: 5, scope: !6095)
!6150 = !DILocation(line: 174, column: 46, scope: !6095)
!6151 = !DILocation(line: 174, column: 34, scope: !6095)
!6152 = !DILocation(line: 174, column: 5, scope: !6095)
!6153 = !DILocation(line: 174, column: 11, scope: !6095)
!6154 = !DILocation(line: 174, column: 32, scope: !6095)
!6155 = !DILocation(line: 175, column: 46, scope: !6095)
!6156 = !DILocation(line: 175, column: 34, scope: !6095)
!6157 = !DILocation(line: 175, column: 5, scope: !6095)
!6158 = !DILocation(line: 175, column: 11, scope: !6095)
!6159 = !DILocation(line: 175, column: 32, scope: !6095)
!6160 = !DILocation(line: 176, column: 5, scope: !6095)
!6161 = !DILocation(line: 176, column: 11, scope: !6095)
!6162 = !DILocation(line: 176, column: 32, scope: !6095)
!6163 = !DILocation(line: 177, column: 46, scope: !6095)
!6164 = !DILocation(line: 177, column: 34, scope: !6095)
!6165 = !DILocation(line: 177, column: 54, scope: !6095)
!6166 = !DILocation(line: 177, column: 52, scope: !6095)
!6167 = !DILocation(line: 177, column: 5, scope: !6095)
!6168 = !DILocation(line: 177, column: 11, scope: !6095)
!6169 = !DILocation(line: 177, column: 32, scope: !6095)
!6170 = !DILocation(line: 200, column: 1, scope: !6095)
!6171 = distinct !DISubprogram(name: "coro_run_deferred", scope: !225, file: !225, line: 152, type: !6172, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3039, retainedNodes: !74)
!6172 = !DISubroutineType(types: !6173)
!6173 = !{null, !6098}
!6174 = !DILocalVariable(name: "coro", arg: 1, scope: !6171, file: !225, line: 152, type: !6098)
!6175 = !DILocation(line: 152, column: 27, scope: !6171)
!6176 = !DILocalVariable(name: "defer", scope: !6177, file: !225, line: 154, type: !6114)
!6177 = distinct !DILexicalBlock(scope: !6171, file: !225, line: 154, column: 5)
!6178 = !DILocation(line: 154, column: 24, scope: !6177)
!6179 = !DILocation(line: 154, column: 32, scope: !6177)
!6180 = !DILocation(line: 154, column: 38, scope: !6177)
!6181 = !DILocation(line: 154, column: 10, scope: !6177)
!6182 = !DILocation(line: 154, column: 45, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6177, file: !225, line: 154, column: 5)
!6184 = !DILocation(line: 154, column: 5, scope: !6177)
!6185 = !DILocalVariable(name: "tmp", scope: !6186, file: !225, line: 155, type: !6114)
!6186 = distinct !DILexicalBlock(scope: !6183, file: !225, line: 154, column: 53)
!6187 = !DILocation(line: 155, column: 23, scope: !6186)
!6188 = !DILocation(line: 155, column: 29, scope: !6186)
!6189 = !DILocation(line: 156, column: 9, scope: !6186)
!6190 = !DILocation(line: 156, column: 16, scope: !6186)
!6191 = !DILocation(line: 156, column: 21, scope: !6186)
!6192 = !DILocation(line: 156, column: 28, scope: !6186)
!6193 = !DILocation(line: 156, column: 35, scope: !6186)
!6194 = !DILocation(line: 156, column: 42, scope: !6186)
!6195 = !DILocation(line: 157, column: 17, scope: !6186)
!6196 = !DILocation(line: 157, column: 22, scope: !6186)
!6197 = !DILocation(line: 157, column: 15, scope: !6186)
!6198 = !DILocation(line: 158, column: 14, scope: !6186)
!6199 = !DILocation(line: 158, column: 9, scope: !6186)
!6200 = !DILocation(line: 154, column: 5, scope: !6183)
!6201 = distinct !{!6201, !6184, !6202, !3203}
!6202 = !DILocation(line: 159, column: 5, scope: !6177)
!6203 = !DILocation(line: 160, column: 5, scope: !6171)
!6204 = !DILocation(line: 160, column: 11, scope: !6171)
!6205 = !DILocation(line: 160, column: 17, scope: !6171)
!6206 = !DILocation(line: 161, column: 1, scope: !6171)
!6207 = distinct !DISubprogram(name: "coro_entry_point", scope: !225, file: !225, line: 144, type: !6208, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3039, retainedNodes: !74)
!6208 = !DISubroutineType(types: !6209)
!6209 = !{null, !6098, !6127}
!6210 = !DILocalVariable(name: "coro", arg: 1, scope: !6207, file: !225, line: 144, type: !6098)
!6211 = !DILocation(line: 144, column: 26, scope: !6207)
!6212 = !DILocalVariable(name: "func", arg: 2, scope: !6207, file: !225, line: 144, type: !6127)
!6213 = !DILocation(line: 144, column: 48, scope: !6207)
!6214 = !DILocalVariable(name: "return_value", scope: !6207, file: !225, line: 146, type: !37)
!6215 = !DILocation(line: 146, column: 9, scope: !6207)
!6216 = !DILocation(line: 146, column: 24, scope: !6207)
!6217 = !DILocation(line: 146, column: 29, scope: !6207)
!6218 = !DILocation(line: 147, column: 5, scope: !6207)
!6219 = !DILocation(line: 147, column: 11, scope: !6207)
!6220 = !DILocation(line: 147, column: 17, scope: !6207)
!6221 = !DILocation(line: 148, column: 16, scope: !6207)
!6222 = !DILocation(line: 148, column: 22, scope: !6207)
!6223 = !DILocalVariable(name: "coro", arg: 1, scope: !6224, file: !225, line: 265, type: !6098)
!6224 = distinct !DISubprogram(name: "coro_yield", scope: !225, file: !225, line: 265, type: !6225, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3039, retainedNodes: !74)
!6225 = !DISubroutineType(types: !6226)
!6226 = !{!37, !6098, !37}
!6227 = !DILocation(line: 265, column: 20, scope: !6224, inlinedAt: !6228)
!6228 = distinct !DILocation(line: 148, column: 5, scope: !6207)
!6229 = !DILocalVariable(name: "value", arg: 2, scope: !6224, file: !225, line: 265, type: !37)
!6230 = !DILocation(line: 265, column: 30, scope: !6224, inlinedAt: !6228)
!6231 = !DILocation(line: 267, column: 5, scope: !6232, inlinedAt: !6228)
!6232 = distinct !DILexicalBlock(scope: !6233, file: !225, line: 267, column: 5)
!6233 = distinct !DILexicalBlock(scope: !6224, file: !225, line: 267, column: 5)
!6234 = !DILocation(line: 267, column: 5, scope: !6233, inlinedAt: !6228)
!6235 = !DILocation(line: 268, column: 25, scope: !6224, inlinedAt: !6228)
!6236 = !DILocation(line: 268, column: 5, scope: !6224, inlinedAt: !6228)
!6237 = !DILocation(line: 268, column: 11, scope: !6224, inlinedAt: !6228)
!6238 = !DILocation(line: 268, column: 23, scope: !6224, inlinedAt: !6228)
!6239 = !DILocation(line: 269, column: 23, scope: !6224, inlinedAt: !6228)
!6240 = !DILocation(line: 269, column: 29, scope: !6224, inlinedAt: !6228)
!6241 = !DILocation(line: 269, column: 39, scope: !6224, inlinedAt: !6228)
!6242 = !DILocation(line: 269, column: 48, scope: !6224, inlinedAt: !6228)
!6243 = !DILocation(line: 269, column: 54, scope: !6224, inlinedAt: !6228)
!6244 = !DILocation(line: 269, column: 5, scope: !6224, inlinedAt: !6228)
!6245 = !DILocation(line: 270, column: 12, scope: !6224, inlinedAt: !6228)
!6246 = !DILocation(line: 270, column: 18, scope: !6224, inlinedAt: !6228)
!6247 = !DILocation(line: 149, column: 1, scope: !6207)
!6248 = distinct !DISubprogram(name: "coro_new", scope: !225, file: !225, line: 203, type: !6249, scopeLine: 204, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3039, retainedNodes: !74)
!6249 = !DISubroutineType(types: !6250)
!6250 = !{!6098, !6103, !6127, !5}
!6251 = !DILocalVariable(name: "switcher", arg: 1, scope: !6248, file: !225, line: 203, type: !6103)
!6252 = !DILocation(line: 203, column: 27, scope: !6248)
!6253 = !DILocalVariable(name: "function", arg: 2, scope: !6248, file: !225, line: 203, type: !6127)
!6254 = !DILocation(line: 203, column: 53, scope: !6248)
!6255 = !DILocalVariable(name: "data", arg: 3, scope: !6248, file: !225, line: 203, type: !5)
!6256 = !DILocation(line: 203, column: 69, scope: !6248)
!6257 = !DILocalVariable(name: "coro", scope: !6248, file: !225, line: 205, type: !6098)
!6258 = !DILocation(line: 205, column: 13, scope: !6248)
!6259 = !DILocation(line: 205, column: 43, scope: !6248)
!6260 = !DILocation(line: 205, column: 41, scope: !6248)
!6261 = !DILocation(line: 205, column: 20, scope: !6248)
!6262 = !DILocation(line: 206, column: 10, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6248, file: !225, line: 206, column: 9)
!6264 = !DILocation(line: 206, column: 9, scope: !6248)
!6265 = !DILocation(line: 207, column: 9, scope: !6263)
!6266 = !DILocation(line: 209, column: 22, scope: !6248)
!6267 = !DILocation(line: 209, column: 5, scope: !6248)
!6268 = !DILocation(line: 209, column: 11, scope: !6248)
!6269 = !DILocation(line: 209, column: 20, scope: !6248)
!6270 = !DILocation(line: 210, column: 5, scope: !6248)
!6271 = !DILocation(line: 210, column: 11, scope: !6248)
!6272 = !DILocation(line: 210, column: 17, scope: !6248)
!6273 = !DILocation(line: 211, column: 16, scope: !6248)
!6274 = !DILocation(line: 211, column: 22, scope: !6248)
!6275 = !DILocation(line: 211, column: 32, scope: !6248)
!6276 = !DILocation(line: 211, column: 5, scope: !6248)
!6277 = !DILocation(line: 218, column: 12, scope: !6248)
!6278 = !DILocation(line: 218, column: 5, scope: !6248)
!6279 = !DILocation(line: 219, column: 1, scope: !6248)
!6280 = distinct !DISubprogram(name: "coro_get_data", scope: !225, file: !225, line: 222, type: !6281, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3039, retainedNodes: !74)
!6281 = !DISubroutineType(types: !6282)
!6282 = !{!5, !6098}
!6283 = !DILocalVariable(name: "coro", arg: 1, scope: !6280, file: !225, line: 222, type: !6098)
!6284 = !DILocation(line: 222, column: 23, scope: !6280)
!6285 = !DILocation(line: 224, column: 12, scope: !6280)
!6286 = !DILocation(line: 224, column: 27, scope: !6280)
!6287 = !DILocation(line: 224, column: 33, scope: !6280)
!6288 = !DILocation(line: 224, column: 5, scope: !6280)
!6289 = distinct !DISubprogram(name: "coro_resume", scope: !225, file: !225, line: 228, type: !6129, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3039, retainedNodes: !74)
!6290 = !DILocalVariable(name: "coro", arg: 1, scope: !6289, file: !225, line: 228, type: !6098)
!6291 = !DILocation(line: 228, column: 21, scope: !6289)
!6292 = !DILocation(line: 230, column: 5, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6294, file: !225, line: 230, column: 5)
!6294 = distinct !DILexicalBlock(scope: !6289, file: !225, line: 230, column: 5)
!6295 = !DILocation(line: 230, column: 5, scope: !6294)
!6296 = !DILocation(line: 231, column: 5, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6298, file: !225, line: 231, column: 5)
!6298 = distinct !DILexicalBlock(scope: !6289, file: !225, line: 231, column: 5)
!6299 = !DILocation(line: 231, column: 5, scope: !6298)
!6300 = !DILocation(line: 234, column: 23, scope: !6289)
!6301 = !DILocation(line: 234, column: 29, scope: !6289)
!6302 = !DILocation(line: 234, column: 39, scope: !6289)
!6303 = !DILocation(line: 234, column: 48, scope: !6289)
!6304 = !DILocation(line: 234, column: 54, scope: !6289)
!6305 = !DILocation(line: 234, column: 5, scope: !6289)
!6306 = !DILocation(line: 235, column: 10, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6289, file: !225, line: 235, column: 9)
!6308 = !DILocation(line: 235, column: 16, scope: !6307)
!6309 = !DILocation(line: 235, column: 9, scope: !6289)
!6310 = !DILocation(line: 236, column: 17, scope: !6307)
!6311 = !DILocation(line: 236, column: 23, scope: !6307)
!6312 = !DILocation(line: 236, column: 33, scope: !6307)
!6313 = !DILocation(line: 236, column: 39, scope: !6307)
!6314 = !DILocation(line: 236, column: 49, scope: !6307)
!6315 = !DILocation(line: 236, column: 9, scope: !6307)
!6316 = !DILocation(line: 251, column: 12, scope: !6289)
!6317 = !DILocation(line: 251, column: 18, scope: !6289)
!6318 = !DILocation(line: 251, column: 5, scope: !6289)
!6319 = distinct !DISubprogram(name: "coro_resume_value", scope: !225, file: !225, line: 255, type: !6225, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3039, retainedNodes: !74)
!6320 = !DILocalVariable(name: "coro", arg: 1, scope: !6319, file: !225, line: 255, type: !6098)
!6321 = !DILocation(line: 255, column: 27, scope: !6319)
!6322 = !DILocalVariable(name: "value", arg: 2, scope: !6319, file: !225, line: 255, type: !37)
!6323 = !DILocation(line: 255, column: 37, scope: !6319)
!6324 = !DILocation(line: 257, column: 5, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !6326, file: !225, line: 257, column: 5)
!6326 = distinct !DILexicalBlock(scope: !6319, file: !225, line: 257, column: 5)
!6327 = !DILocation(line: 257, column: 5, scope: !6326)
!6328 = !DILocation(line: 258, column: 5, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6330, file: !225, line: 258, column: 5)
!6330 = distinct !DILexicalBlock(scope: !6319, file: !225, line: 258, column: 5)
!6331 = !DILocation(line: 258, column: 5, scope: !6330)
!6332 = !DILocation(line: 260, column: 25, scope: !6319)
!6333 = !DILocation(line: 260, column: 5, scope: !6319)
!6334 = !DILocation(line: 260, column: 11, scope: !6319)
!6335 = !DILocation(line: 260, column: 23, scope: !6319)
!6336 = !DILocation(line: 261, column: 24, scope: !6319)
!6337 = !DILocation(line: 228, column: 21, scope: !6289, inlinedAt: !6338)
!6338 = distinct !DILocation(line: 261, column: 12, scope: !6319)
!6339 = !DILocation(line: 230, column: 5, scope: !6293, inlinedAt: !6338)
!6340 = !DILocation(line: 230, column: 5, scope: !6294, inlinedAt: !6338)
!6341 = !DILocation(line: 231, column: 5, scope: !6297, inlinedAt: !6338)
!6342 = !DILocation(line: 231, column: 5, scope: !6298, inlinedAt: !6338)
!6343 = !DILocation(line: 234, column: 23, scope: !6289, inlinedAt: !6338)
!6344 = !DILocation(line: 234, column: 29, scope: !6289, inlinedAt: !6338)
!6345 = !DILocation(line: 234, column: 48, scope: !6289, inlinedAt: !6338)
!6346 = !DILocation(line: 234, column: 54, scope: !6289, inlinedAt: !6338)
!6347 = !DILocation(line: 234, column: 5, scope: !6289, inlinedAt: !6338)
!6348 = !DILocation(line: 235, column: 10, scope: !6307, inlinedAt: !6338)
!6349 = !DILocation(line: 235, column: 16, scope: !6307, inlinedAt: !6338)
!6350 = !DILocation(line: 235, column: 9, scope: !6289, inlinedAt: !6338)
!6351 = !DILocation(line: 236, column: 17, scope: !6307, inlinedAt: !6338)
!6352 = !DILocation(line: 236, column: 23, scope: !6307, inlinedAt: !6338)
!6353 = !DILocation(line: 236, column: 33, scope: !6307, inlinedAt: !6338)
!6354 = !DILocation(line: 236, column: 39, scope: !6307, inlinedAt: !6338)
!6355 = !DILocation(line: 236, column: 49, scope: !6307, inlinedAt: !6338)
!6356 = !DILocation(line: 236, column: 9, scope: !6307, inlinedAt: !6338)
!6357 = !DILocation(line: 251, column: 12, scope: !6289, inlinedAt: !6338)
!6358 = !DILocation(line: 251, column: 18, scope: !6289, inlinedAt: !6338)
!6359 = !DILocation(line: 261, column: 5, scope: !6319)
!6360 = !DILocation(line: 265, column: 20, scope: !6224)
!6361 = !DILocation(line: 265, column: 30, scope: !6224)
!6362 = !DILocation(line: 267, column: 5, scope: !6232)
!6363 = !DILocation(line: 267, column: 5, scope: !6233)
!6364 = !DILocation(line: 268, column: 25, scope: !6224)
!6365 = !DILocation(line: 268, column: 5, scope: !6224)
!6366 = !DILocation(line: 268, column: 11, scope: !6224)
!6367 = !DILocation(line: 268, column: 23, scope: !6224)
!6368 = !DILocation(line: 269, column: 23, scope: !6224)
!6369 = !DILocation(line: 269, column: 29, scope: !6224)
!6370 = !DILocation(line: 269, column: 39, scope: !6224)
!6371 = !DILocation(line: 269, column: 48, scope: !6224)
!6372 = !DILocation(line: 269, column: 54, scope: !6224)
!6373 = !DILocation(line: 269, column: 64, scope: !6224)
!6374 = !DILocation(line: 269, column: 5, scope: !6224)
!6375 = !DILocation(line: 270, column: 12, scope: !6224)
!6376 = !DILocation(line: 270, column: 18, scope: !6224)
!6377 = !DILocation(line: 270, column: 5, scope: !6224)
!6378 = distinct !DISubprogram(name: "coro_free", scope: !225, file: !225, line: 274, type: !6172, scopeLine: 275, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3039, retainedNodes: !74)
!6379 = !DILocalVariable(name: "coro", arg: 1, scope: !6378, file: !225, line: 274, type: !6098)
!6380 = !DILocation(line: 274, column: 19, scope: !6378)
!6381 = !DILocation(line: 276, column: 5, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6383, file: !225, line: 276, column: 5)
!6383 = distinct !DILexicalBlock(scope: !6378, file: !225, line: 276, column: 5)
!6384 = !DILocation(line: 276, column: 5, scope: !6383)
!6385 = !DILocation(line: 280, column: 23, scope: !6378)
!6386 = !DILocation(line: 280, column: 5, scope: !6378)
!6387 = !DILocation(line: 281, column: 10, scope: !6378)
!6388 = !DILocation(line: 281, column: 5, scope: !6378)
!6389 = !DILocation(line: 282, column: 1, scope: !6378)
!6390 = distinct !DISubprogram(name: "coro_defer", scope: !225, file: !225, line: 302, type: !6391, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3039, retainedNodes: !74)
!6391 = !DISubroutineType(types: !6392)
!6392 = !{null, !6098, !403, !5}
!6393 = !DILocalVariable(name: "coro", arg: 1, scope: !6390, file: !225, line: 302, type: !6098)
!6394 = !DILocation(line: 302, column: 20, scope: !6390)
!6395 = !DILocalVariable(name: "func", arg: 2, scope: !6390, file: !225, line: 302, type: !403)
!6396 = !DILocation(line: 302, column: 33, scope: !6390)
!6397 = !DILocalVariable(name: "data", arg: 3, scope: !6390, file: !225, line: 302, type: !5)
!6398 = !DILocation(line: 302, column: 58, scope: !6390)
!6399 = !DILocation(line: 304, column: 20, scope: !6390)
!6400 = !DILocation(line: 304, column: 26, scope: !6390)
!6401 = !DILocation(line: 304, column: 32, scope: !6390)
!6402 = !DILocation(line: 304, column: 5, scope: !6390)
!6403 = !DILocation(line: 305, column: 1, scope: !6390)
!6404 = distinct !DISubprogram(name: "coro_defer_any", scope: !225, file: !225, line: 285, type: !6405, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3039, retainedNodes: !74)
!6405 = !DISubroutineType(types: !6406)
!6406 = !{null, !6098, !6120, !5, !5}
!6407 = !DILocalVariable(name: "coro", arg: 1, scope: !6404, file: !225, line: 285, type: !6098)
!6408 = !DILocation(line: 285, column: 24, scope: !6404)
!6409 = !DILocalVariable(name: "func", arg: 2, scope: !6404, file: !225, line: 285, type: !6120)
!6410 = !DILocation(line: 285, column: 37, scope: !6404)
!6411 = !DILocalVariable(name: "data1", arg: 3, scope: !6404, file: !225, line: 285, type: !5)
!6412 = !DILocation(line: 285, column: 52, scope: !6404)
!6413 = !DILocalVariable(name: "data2", arg: 4, scope: !6404, file: !225, line: 285, type: !5)
!6414 = !DILocation(line: 285, column: 65, scope: !6404)
!6415 = !DILocalVariable(name: "defer", scope: !6404, file: !225, line: 287, type: !6114)
!6416 = !DILocation(line: 287, column: 19, scope: !6404)
!6417 = !DILocation(line: 287, column: 27, scope: !6404)
!6418 = !DILocation(line: 288, column: 9, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6404, file: !225, line: 288, column: 9)
!6420 = !DILocation(line: 288, column: 9, scope: !6404)
!6421 = !DILocation(line: 289, column: 9, scope: !6419)
!6422 = !DILocation(line: 291, column: 5, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6424, file: !225, line: 291, column: 5)
!6424 = distinct !DILexicalBlock(scope: !6404, file: !225, line: 291, column: 5)
!6425 = !DILocation(line: 291, column: 5, scope: !6424)
!6426 = !DILocation(line: 294, column: 19, scope: !6404)
!6427 = !DILocation(line: 294, column: 25, scope: !6404)
!6428 = !DILocation(line: 294, column: 5, scope: !6404)
!6429 = !DILocation(line: 294, column: 12, scope: !6404)
!6430 = !DILocation(line: 294, column: 17, scope: !6404)
!6431 = !DILocation(line: 295, column: 19, scope: !6404)
!6432 = !DILocation(line: 295, column: 5, scope: !6404)
!6433 = !DILocation(line: 295, column: 12, scope: !6404)
!6434 = !DILocation(line: 295, column: 17, scope: !6404)
!6435 = !DILocation(line: 296, column: 20, scope: !6404)
!6436 = !DILocation(line: 296, column: 5, scope: !6404)
!6437 = !DILocation(line: 296, column: 12, scope: !6404)
!6438 = !DILocation(line: 296, column: 18, scope: !6404)
!6439 = !DILocation(line: 297, column: 20, scope: !6404)
!6440 = !DILocation(line: 297, column: 5, scope: !6404)
!6441 = !DILocation(line: 297, column: 12, scope: !6404)
!6442 = !DILocation(line: 297, column: 18, scope: !6404)
!6443 = !DILocation(line: 298, column: 19, scope: !6404)
!6444 = !DILocation(line: 298, column: 5, scope: !6404)
!6445 = !DILocation(line: 298, column: 11, scope: !6404)
!6446 = !DILocation(line: 298, column: 17, scope: !6404)
!6447 = !DILocation(line: 299, column: 1, scope: !6404)
!6448 = distinct !DISubprogram(name: "coro_defer2", scope: !225, file: !225, line: 308, type: !6449, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3039, retainedNodes: !74)
!6449 = !DISubroutineType(types: !6450)
!6450 = !{null, !6098, !3025, !5, !5}
!6451 = !DILocalVariable(name: "coro", arg: 1, scope: !6448, file: !225, line: 308, type: !6098)
!6452 = !DILocation(line: 308, column: 21, scope: !6448)
!6453 = !DILocalVariable(name: "func", arg: 2, scope: !6448, file: !225, line: 308, type: !3025)
!6454 = !DILocation(line: 308, column: 34, scope: !6448)
!6455 = !DILocalVariable(name: "data1", arg: 3, scope: !6448, file: !225, line: 309, type: !5)
!6456 = !DILocation(line: 309, column: 19, scope: !6448)
!6457 = !DILocalVariable(name: "data2", arg: 4, scope: !6448, file: !225, line: 309, type: !5)
!6458 = !DILocation(line: 309, column: 32, scope: !6448)
!6459 = !DILocation(line: 311, column: 20, scope: !6448)
!6460 = !DILocation(line: 311, column: 26, scope: !6448)
!6461 = !DILocation(line: 311, column: 32, scope: !6448)
!6462 = !DILocation(line: 311, column: 39, scope: !6448)
!6463 = !DILocation(line: 311, column: 5, scope: !6448)
!6464 = !DILocation(line: 312, column: 1, scope: !6448)
!6465 = distinct !DISubprogram(name: "coro_malloc_full", scope: !225, file: !225, line: 315, type: !6466, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3039, retainedNodes: !74)
!6466 = !DISubroutineType(types: !6467)
!6467 = !{!5, !6098, !6, !6120}
!6468 = !DILocalVariable(name: "coro", arg: 1, scope: !6465, file: !225, line: 315, type: !6098)
!6469 = !DILocation(line: 315, column: 26, scope: !6465)
!6470 = !DILocalVariable(name: "size", arg: 2, scope: !6465, file: !225, line: 315, type: !6)
!6471 = !DILocation(line: 315, column: 39, scope: !6465)
!6472 = !DILocalVariable(name: "destroy_func", arg: 3, scope: !6465, file: !225, line: 315, type: !6120)
!6473 = !DILocation(line: 315, column: 52, scope: !6465)
!6474 = !DILocalVariable(name: "defer", scope: !6465, file: !225, line: 317, type: !6114)
!6475 = !DILocation(line: 317, column: 19, scope: !6465)
!6476 = !DILocation(line: 317, column: 51, scope: !6465)
!6477 = !DILocation(line: 317, column: 49, scope: !6465)
!6478 = !DILocation(line: 317, column: 27, scope: !6465)
!6479 = !DILocation(line: 318, column: 9, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !6465, file: !225, line: 318, column: 9)
!6481 = !DILocation(line: 318, column: 9, scope: !6465)
!6482 = !DILocation(line: 319, column: 9, scope: !6480)
!6483 = !DILocation(line: 321, column: 19, scope: !6465)
!6484 = !DILocation(line: 321, column: 25, scope: !6465)
!6485 = !DILocation(line: 321, column: 5, scope: !6465)
!6486 = !DILocation(line: 321, column: 12, scope: !6465)
!6487 = !DILocation(line: 321, column: 17, scope: !6465)
!6488 = !DILocation(line: 322, column: 19, scope: !6465)
!6489 = !DILocation(line: 322, column: 5, scope: !6465)
!6490 = !DILocation(line: 322, column: 12, scope: !6465)
!6491 = !DILocation(line: 322, column: 17, scope: !6465)
!6492 = !DILocation(line: 323, column: 20, scope: !6465)
!6493 = !DILocation(line: 323, column: 26, scope: !6465)
!6494 = !DILocation(line: 323, column: 5, scope: !6465)
!6495 = !DILocation(line: 323, column: 12, scope: !6465)
!6496 = !DILocation(line: 323, column: 18, scope: !6465)
!6497 = !DILocation(line: 324, column: 5, scope: !6465)
!6498 = !DILocation(line: 324, column: 12, scope: !6465)
!6499 = !DILocation(line: 324, column: 18, scope: !6465)
!6500 = !DILocation(line: 326, column: 19, scope: !6465)
!6501 = !DILocation(line: 326, column: 5, scope: !6465)
!6502 = !DILocation(line: 326, column: 11, scope: !6465)
!6503 = !DILocation(line: 326, column: 17, scope: !6465)
!6504 = !DILocation(line: 328, column: 12, scope: !6465)
!6505 = !DILocation(line: 328, column: 18, scope: !6465)
!6506 = !DILocation(line: 328, column: 5, scope: !6465)
!6507 = !DILocation(line: 329, column: 1, scope: !6465)
!6508 = distinct !DISubprogram(name: "coro_malloc", scope: !225, file: !225, line: 336, type: !6509, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3039, retainedNodes: !74)
!6509 = !DISubroutineType(types: !6510)
!6510 = !{!5, !6098, !6}
!6511 = !DILocalVariable(name: "coro", arg: 1, scope: !6508, file: !225, line: 336, type: !6098)
!6512 = !DILocation(line: 336, column: 21, scope: !6508)
!6513 = !DILocalVariable(name: "size", arg: 2, scope: !6508, file: !225, line: 336, type: !6)
!6514 = !DILocation(line: 336, column: 34, scope: !6508)
!6515 = !DILocation(line: 338, column: 29, scope: !6508)
!6516 = !DILocation(line: 338, column: 35, scope: !6508)
!6517 = !DILocation(line: 338, column: 12, scope: !6508)
!6518 = !DILocation(line: 338, column: 5, scope: !6508)
!6519 = distinct !DISubprogram(name: "nothing", scope: !225, file: !225, line: 331, type: !1578, scopeLine: 332, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3039, retainedNodes: !74)
!6520 = !DILocation(line: 333, column: 1, scope: !6519)
!6521 = distinct !DISubprogram(name: "coro_strdup", scope: !225, file: !225, line: 342, type: !6522, scopeLine: 343, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3039, retainedNodes: !74)
!6522 = !DISubroutineType(types: !6523)
!6523 = !{!61, !6098, !480}
!6524 = !DILocalVariable(name: "coro", arg: 1, scope: !6521, file: !225, line: 342, type: !6098)
!6525 = !DILocation(line: 342, column: 21, scope: !6521)
!6526 = !DILocalVariable(name: "str", arg: 2, scope: !6521, file: !225, line: 342, type: !480)
!6527 = !DILocation(line: 342, column: 39, scope: !6521)
!6528 = !DILocalVariable(name: "len", scope: !6521, file: !225, line: 344, type: !6)
!6529 = !DILocation(line: 344, column: 12, scope: !6521)
!6530 = !DILocation(line: 344, column: 25, scope: !6521)
!6531 = !DILocation(line: 344, column: 18, scope: !6521)
!6532 = !DILocation(line: 344, column: 30, scope: !6521)
!6533 = !DILocalVariable(name: "dup", scope: !6521, file: !225, line: 345, type: !61)
!6534 = !DILocation(line: 345, column: 11, scope: !6521)
!6535 = !DILocation(line: 345, column: 29, scope: !6521)
!6536 = !DILocation(line: 345, column: 35, scope: !6521)
!6537 = !DILocation(line: 345, column: 17, scope: !6521)
!6538 = !DILocation(line: 346, column: 9, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !6521, file: !225, line: 346, column: 9)
!6540 = !DILocation(line: 346, column: 9, scope: !6521)
!6541 = !DILocation(line: 347, column: 16, scope: !6539)
!6542 = !DILocation(line: 347, column: 21, scope: !6539)
!6543 = !DILocation(line: 347, column: 26, scope: !6539)
!6544 = !DILocation(line: 347, column: 9, scope: !6539)
!6545 = !DILocation(line: 348, column: 12, scope: !6521)
!6546 = !DILocation(line: 348, column: 5, scope: !6521)
!6547 = distinct !DISubprogram(name: "coro_printf", scope: !225, file: !225, line: 352, type: !6548, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3039, retainedNodes: !74)
!6548 = !DISubroutineType(types: !6549)
!6549 = !{!61, !6098, !480, null}
!6550 = !DILocalVariable(name: "coro", arg: 1, scope: !6547, file: !225, line: 352, type: !6098)
!6551 = !DILocation(line: 352, column: 21, scope: !6547)
!6552 = !DILocalVariable(name: "fmt", arg: 2, scope: !6547, file: !225, line: 352, type: !480)
!6553 = !DILocation(line: 352, column: 39, scope: !6547)
!6554 = !DILocalVariable(name: "values", scope: !6547, file: !225, line: 354, type: !6555)
!6555 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2698, line: 52, baseType: !6556)
!6556 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !5725, line: 14, baseType: !6557)
!6557 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6558, baseType: !6559)
!6558 = !DIFile(filename: "common/lwan-coro.c", directory: "/home/raj/lwan")
!6559 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6560, size: 192, elements: !1557)
!6560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", size: 192, elements: !6561)
!6561 = !{!6562, !6563, !6564, !6565}
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !6560, file: !6558, line: 354, baseType: !28, size: 32)
!6563 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !6560, file: !6558, line: 354, baseType: !28, size: 32, offset: 32)
!6564 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !6560, file: !6558, line: 354, baseType: !5, size: 64, offset: 64)
!6565 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !6560, file: !6558, line: 354, baseType: !5, size: 64, offset: 128)
!6566 = !DILocation(line: 354, column: 13, scope: !6547)
!6567 = !DILocalVariable(name: "len", scope: !6547, file: !225, line: 355, type: !37)
!6568 = !DILocation(line: 355, column: 9, scope: !6547)
!6569 = !DILocalVariable(name: "tmp_str", scope: !6547, file: !225, line: 356, type: !61)
!6570 = !DILocation(line: 356, column: 11, scope: !6547)
!6571 = !DILocation(line: 358, column: 5, scope: !6547)
!6572 = !DILocation(line: 359, column: 31, scope: !6547)
!6573 = !DILocation(line: 359, column: 36, scope: !6547)
!6574 = !DILocation(line: 359, column: 11, scope: !6547)
!6575 = !DILocation(line: 359, column: 9, scope: !6547)
!6576 = !DILocation(line: 360, column: 5, scope: !6547)
!6577 = !DILocation(line: 362, column: 9, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6547, file: !225, line: 362, column: 9)
!6579 = !DILocation(line: 362, column: 9, scope: !6547)
!6580 = !DILocation(line: 363, column: 9, scope: !6578)
!6581 = !DILocation(line: 365, column: 16, scope: !6547)
!6582 = !DILocation(line: 365, column: 40, scope: !6547)
!6583 = !DILocation(line: 302, column: 20, scope: !6390, inlinedAt: !6584)
!6584 = distinct !DILocation(line: 365, column: 5, scope: !6547)
!6585 = !DILocation(line: 302, column: 33, scope: !6390, inlinedAt: !6584)
!6586 = !DILocation(line: 302, column: 58, scope: !6390, inlinedAt: !6584)
!6587 = !DILocation(line: 304, column: 20, scope: !6390, inlinedAt: !6584)
!6588 = !DILocation(line: 304, column: 26, scope: !6390, inlinedAt: !6584)
!6589 = !DILocation(line: 304, column: 32, scope: !6390, inlinedAt: !6584)
!6590 = !DILocation(line: 304, column: 5, scope: !6390, inlinedAt: !6584)
!6591 = !DILocation(line: 366, column: 12, scope: !6547)
!6592 = !DILocation(line: 366, column: 5, scope: !6547)
!6593 = !DILocation(line: 367, column: 1, scope: !6547)
!6594 = distinct !DISubprogram(name: "lwan_http_authorize_init", scope: !327, file: !327, line: 127, type: !6595, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !258, retainedNodes: !74)
!6595 = !DISubroutineType(types: !6596)
!6596 = !{!341}
!6597 = !DILocation(line: 129, column: 28, scope: !6594)
!6598 = !DILocation(line: 129, column: 26, scope: !6594)
!6599 = !DILocation(line: 132, column: 14, scope: !6594)
!6600 = !DILocation(line: 132, column: 13, scope: !6594)
!6601 = !DILocation(line: 132, column: 12, scope: !6594)
!6602 = !DILocation(line: 132, column: 5, scope: !6594)
!6603 = distinct !DISubprogram(name: "create_realm_file", scope: !327, file: !327, line: 47, type: !6604, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !258, retainedNodes: !74)
!6604 = !DISubroutineType(types: !6605)
!6605 = !{!307, !480, !5}
!6606 = !DILocalVariable(name: "key", arg: 1, scope: !6603, file: !327, line: 48, type: !480)
!6607 = !DILocation(line: 48, column: 23, scope: !6603)
!6608 = !DILocalVariable(name: "context", arg: 2, scope: !6603, file: !327, line: 49, type: !5)
!6609 = !DILocation(line: 49, column: 17, scope: !6603)
!6610 = !DILocalVariable(name: "rpf", scope: !6603, file: !327, line: 51, type: !325)
!6611 = !DILocation(line: 51, column: 35, scope: !6603)
!6612 = !DILocation(line: 51, column: 41, scope: !6603)
!6613 = !DILocalVariable(name: "f", scope: !6603, file: !327, line: 52, type: !6614)
!6614 = !DIDerivedType(tag: DW_TAG_typedef, name: "config_t", file: !301, line: 32, baseType: !6615)
!6615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "config_t_", file: !301, line: 41, size: 192, elements: !6616)
!6616 = !{!6617, !6652, !6653}
!6617 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !6615, file: !301, line: 42, baseType: !6618, size: 64)
!6618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6619, size: 64)
!6619 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5673, line: 7, baseType: !6620)
!6620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5675, line: 49, size: 1728, elements: !6621)
!6621 = !{!6622, !6623, !6624, !6625, !6626, !6627, !6628, !6629, !6630, !6631, !6632, !6633, !6634, !6635, !6637, !6638, !6639, !6640, !6641, !6642, !6643, !6644, !6645, !6646, !6647, !6648, !6649, !6650, !6651}
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !6620, file: !5675, line: 51, baseType: !37, size: 32)
!6623 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !6620, file: !5675, line: 54, baseType: !61, size: 64, offset: 64)
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !6620, file: !5675, line: 55, baseType: !61, size: 64, offset: 128)
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !6620, file: !5675, line: 56, baseType: !61, size: 64, offset: 192)
!6626 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !6620, file: !5675, line: 57, baseType: !61, size: 64, offset: 256)
!6627 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !6620, file: !5675, line: 58, baseType: !61, size: 64, offset: 320)
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !6620, file: !5675, line: 59, baseType: !61, size: 64, offset: 384)
!6629 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !6620, file: !5675, line: 60, baseType: !61, size: 64, offset: 448)
!6630 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !6620, file: !5675, line: 61, baseType: !61, size: 64, offset: 512)
!6631 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !6620, file: !5675, line: 64, baseType: !61, size: 64, offset: 576)
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !6620, file: !5675, line: 65, baseType: !61, size: 64, offset: 640)
!6633 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !6620, file: !5675, line: 66, baseType: !61, size: 64, offset: 704)
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !6620, file: !5675, line: 68, baseType: !5690, size: 64, offset: 768)
!6635 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !6620, file: !5675, line: 70, baseType: !6636, size: 64, offset: 832)
!6636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6620, size: 64)
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !6620, file: !5675, line: 72, baseType: !37, size: 32, offset: 896)
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !6620, file: !5675, line: 73, baseType: !37, size: 32, offset: 928)
!6639 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !6620, file: !5675, line: 74, baseType: !463, size: 64, offset: 960)
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !6620, file: !5675, line: 77, baseType: !413, size: 16, offset: 1024)
!6641 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !6620, file: !5675, line: 78, baseType: !4708, size: 8, offset: 1040)
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !6620, file: !5675, line: 79, baseType: !1556, size: 8, offset: 1048)
!6643 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !6620, file: !5675, line: 81, baseType: !5701, size: 64, offset: 1088)
!6644 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !6620, file: !5675, line: 89, baseType: !5704, size: 64, offset: 1152)
!6645 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !6620, file: !5675, line: 91, baseType: !5706, size: 64, offset: 1216)
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !6620, file: !5675, line: 92, baseType: !5709, size: 64, offset: 1280)
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !6620, file: !5675, line: 93, baseType: !6636, size: 64, offset: 1344)
!6648 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !6620, file: !5675, line: 94, baseType: !5, size: 64, offset: 1408)
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !6620, file: !5675, line: 95, baseType: !6, size: 64, offset: 1472)
!6650 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !6620, file: !5675, line: 96, baseType: !37, size: 32, offset: 1536)
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !6620, file: !5675, line: 98, baseType: !1672, size: 160, offset: 1568)
!6652 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !6615, file: !301, line: 43, baseType: !37, size: 32, offset: 64)
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "error_message", scope: !6615, file: !301, line: 44, baseType: !61, size: 64, offset: 128)
!6654 = !DILocation(line: 52, column: 14, scope: !6603)
!6655 = !DILocalVariable(name: "l", scope: !6603, file: !327, line: 53, type: !6656)
!6656 = !DIDerivedType(tag: DW_TAG_typedef, name: "config_line_t", file: !301, line: 33, baseType: !6657)
!6657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "config_line_t_", file: !301, line: 47, size: 8384, elements: !6658)
!6658 = !{!6659, !6672, !6673}
!6659 = !DIDerivedType(tag: DW_TAG_member, scope: !6657, file: !301, line: 48, baseType: !6660, size: 128)
!6660 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6657, file: !301, line: 48, size: 128, elements: !6661)
!6661 = !{!6662, !6667}
!6662 = !DIDerivedType(tag: DW_TAG_member, name: "section", scope: !6660, file: !301, line: 51, baseType: !6663, size: 128)
!6663 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6660, file: !301, line: 49, size: 128, elements: !6664)
!6664 = !{!6665, !6666}
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6663, file: !301, line: 50, baseType: !61, size: 64)
!6666 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !6663, file: !301, line: 50, baseType: !61, size: 64, offset: 64)
!6667 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !6660, file: !301, line: 54, baseType: !6668, size: 128)
!6668 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6660, file: !301, line: 52, size: 128, elements: !6669)
!6669 = !{!6670, !6671}
!6670 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !6668, file: !301, line: 53, baseType: !61, size: 64)
!6671 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !6668, file: !301, line: 53, baseType: !61, size: 64, offset: 64)
!6672 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6657, file: !301, line: 56, baseType: !5787, size: 32, offset: 128)
!6673 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !6657, file: !301, line: 57, baseType: !5789, size: 8192, offset: 160)
!6674 = !DILocation(line: 53, column: 19, scope: !6603)
!6675 = !DILocation(line: 55, column: 9, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6603, file: !327, line: 55, column: 9)
!6677 = !DILocation(line: 55, column: 9, scope: !6603)
!6678 = !DILocation(line: 56, column: 9, scope: !6676)
!6679 = !DILocation(line: 58, column: 20, scope: !6603)
!6680 = !DILocation(line: 58, column: 5, scope: !6603)
!6681 = !DILocation(line: 58, column: 10, scope: !6603)
!6682 = !DILocation(line: 58, column: 18, scope: !6603)
!6683 = !DILocation(line: 59, column: 9, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6603, file: !327, line: 59, column: 9)
!6685 = !DILocation(line: 59, column: 9, scope: !6603)
!6686 = !DILocation(line: 60, column: 9, scope: !6684)
!6687 = !DILocation(line: 62, column: 26, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !6603, file: !327, line: 62, column: 9)
!6689 = !DILocation(line: 62, column: 10, scope: !6688)
!6690 = !DILocation(line: 62, column: 9, scope: !6603)
!6691 = !DILocation(line: 63, column: 9, scope: !6688)
!6692 = !DILocation(line: 65, column: 5, scope: !6603)
!6693 = !DILocation(line: 65, column: 12, scope: !6603)
!6694 = !DILocation(line: 67, column: 19, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6603, file: !327, line: 65, column: 38)
!6696 = !DILocation(line: 67, column: 9, scope: !6695)
!6697 = !DILocalVariable(name: "username", scope: !6698, file: !327, line: 69, type: !61)
!6698 = distinct !DILexicalBlock(scope: !6699, file: !327, line: 68, column: 37)
!6699 = distinct !DILexicalBlock(scope: !6695, file: !327, line: 67, column: 25)
!6700 = !DILocation(line: 69, column: 19, scope: !6698)
!6701 = !DILocation(line: 69, column: 39, scope: !6698)
!6702 = !DILocation(line: 69, column: 44, scope: !6698)
!6703 = !DILocation(line: 69, column: 30, scope: !6698)
!6704 = !DILocation(line: 70, column: 18, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6698, file: !327, line: 70, column: 17)
!6706 = !DILocation(line: 70, column: 17, scope: !6698)
!6707 = !DILocation(line: 71, column: 17, scope: !6705)
!6708 = !DILocalVariable(name: "password", scope: !6698, file: !327, line: 73, type: !61)
!6709 = !DILocation(line: 73, column: 19, scope: !6698)
!6710 = !DILocation(line: 73, column: 39, scope: !6698)
!6711 = !DILocation(line: 73, column: 44, scope: !6698)
!6712 = !DILocation(line: 73, column: 30, scope: !6698)
!6713 = !DILocation(line: 74, column: 18, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6698, file: !327, line: 74, column: 17)
!6715 = !DILocation(line: 74, column: 17, scope: !6698)
!6716 = !DILocation(line: 75, column: 22, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6714, file: !327, line: 74, column: 28)
!6718 = !DILocation(line: 75, column: 17, scope: !6717)
!6719 = !DILocation(line: 76, column: 17, scope: !6717)
!6720 = !DILocalVariable(name: "err", scope: !6698, file: !327, line: 79, type: !37)
!6721 = !DILocation(line: 79, column: 17, scope: !6698)
!6722 = !DILocation(line: 79, column: 39, scope: !6698)
!6723 = !DILocation(line: 79, column: 44, scope: !6698)
!6724 = !DILocation(line: 79, column: 53, scope: !6698)
!6725 = !DILocation(line: 79, column: 63, scope: !6698)
!6726 = !DILocation(line: 79, column: 23, scope: !6698)
!6727 = !DILocation(line: 80, column: 17, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6698, file: !327, line: 80, column: 17)
!6729 = !DILocation(line: 80, column: 17, scope: !6698)
!6730 = !DILocation(line: 81, column: 17, scope: !6728)
!6731 = distinct !{!6731, !6692, !6732, !3203}
!6732 = !DILocation(line: 99, column: 5, scope: !6603)
!6733 = !DILocation(line: 83, column: 18, scope: !6698)
!6734 = !DILocation(line: 83, column: 13, scope: !6698)
!6735 = !DILocation(line: 84, column: 18, scope: !6698)
!6736 = !DILocation(line: 84, column: 13, scope: !6698)
!6737 = !DILocation(line: 86, column: 17, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6698, file: !327, line: 86, column: 17)
!6739 = !DILocation(line: 86, column: 21, scope: !6738)
!6740 = !DILocation(line: 86, column: 17, scope: !6698)
!6741 = !DILocation(line: 87, column: 17, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6738, file: !327, line: 86, column: 33)
!6743 = !DILocation(line: 90, column: 17, scope: !6742)
!6744 = !DILocation(line: 93, column: 13, scope: !6698)
!6745 = !DILocation(line: 96, column: 13, scope: !6699)
!6746 = !DILocation(line: 97, column: 13, scope: !6699)
!6747 = !DILocation(line: 101, column: 11, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !6603, file: !327, line: 101, column: 9)
!6749 = !DILocation(line: 101, column: 9, scope: !6748)
!6750 = !DILocation(line: 101, column: 9, scope: !6603)
!6751 = !DILocation(line: 102, column: 9, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6748, file: !327, line: 101, column: 26)
!6753 = !DILocation(line: 104, column: 9, scope: !6752)
!6754 = !DILocation(line: 107, column: 5, scope: !6603)
!6755 = !DILocation(line: 108, column: 36, scope: !6603)
!6756 = !DILocation(line: 108, column: 5, scope: !6603)
!6757 = !DILabel(scope: !6603, name: "error", file: !327, line: 110)
!6758 = !DILocation(line: 110, column: 1, scope: !6603)
!6759 = !DILocation(line: 111, column: 5, scope: !6603)
!6760 = !DILabel(scope: !6603, name: "error_no_close", file: !327, line: 112)
!6761 = !DILocation(line: 112, column: 1, scope: !6603)
!6762 = !DILocation(line: 113, column: 15, scope: !6603)
!6763 = !DILocation(line: 113, column: 20, scope: !6603)
!6764 = !DILocation(line: 113, column: 5, scope: !6603)
!6765 = !DILocation(line: 114, column: 10, scope: !6603)
!6766 = !DILocation(line: 114, column: 5, scope: !6603)
!6767 = !DILocation(line: 115, column: 5, scope: !6603)
!6768 = !DILocation(line: 116, column: 1, scope: !6603)
!6769 = distinct !DISubprogram(name: "destroy_realm_file", scope: !327, file: !327, line: 118, type: !6770, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !258, retainedNodes: !74)
!6770 = !DISubroutineType(types: !6771)
!6771 = !{null, !307, !5}
!6772 = !DILocalVariable(name: "entry", arg: 1, scope: !6769, file: !327, line: 118, type: !307)
!6773 = !DILocation(line: 118, column: 54, scope: !6769)
!6774 = !DILocalVariable(name: "context", arg: 2, scope: !6769, file: !327, line: 119, type: !5)
!6775 = !DILocation(line: 119, column: 39, scope: !6769)
!6776 = !DILocalVariable(name: "rpf", scope: !6769, file: !327, line: 121, type: !325)
!6777 = !DILocation(line: 121, column: 35, scope: !6769)
!6778 = !DILocation(line: 121, column: 73, scope: !6769)
!6779 = !DILocation(line: 122, column: 15, scope: !6769)
!6780 = !DILocation(line: 122, column: 20, scope: !6769)
!6781 = !DILocation(line: 122, column: 5, scope: !6769)
!6782 = !DILocation(line: 123, column: 10, scope: !6769)
!6783 = !DILocation(line: 123, column: 5, scope: !6769)
!6784 = !DILocation(line: 124, column: 1, scope: !6769)
!6785 = distinct !DISubprogram(name: "fourty_two_and_free", scope: !327, file: !327, line: 37, type: !404, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !258, retainedNodes: !74)
!6786 = !DILocalVariable(name: "str", arg: 1, scope: !6785, file: !327, line: 37, type: !5)
!6787 = !DILocation(line: 37, column: 39, scope: !6785)
!6788 = !DILocation(line: 39, column: 9, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6785, file: !327, line: 39, column: 9)
!6790 = !DILocation(line: 39, column: 9, scope: !6785)
!6791 = !DILocalVariable(name: "s", scope: !6792, file: !327, line: 40, type: !61)
!6792 = distinct !DILexicalBlock(scope: !6789, file: !327, line: 39, column: 22)
!6793 = !DILocation(line: 40, column: 15, scope: !6792)
!6794 = !DILocation(line: 40, column: 19, scope: !6792)
!6795 = !DILocation(line: 41, column: 9, scope: !6792)
!6796 = !DILocation(line: 41, column: 17, scope: !6792)
!6797 = !DILocation(line: 41, column: 16, scope: !6792)
!6798 = !DILocation(line: 42, column: 15, scope: !6792)
!6799 = !DILocation(line: 42, column: 18, scope: !6792)
!6800 = distinct !{!6800, !6795, !6801, !3203}
!6801 = !DILocation(line: 42, column: 20, scope: !6792)
!6802 = !DILocation(line: 43, column: 14, scope: !6792)
!6803 = !DILocation(line: 43, column: 9, scope: !6792)
!6804 = !DILocation(line: 44, column: 5, scope: !6792)
!6805 = !DILocation(line: 45, column: 1, scope: !6785)
!6806 = distinct !DISubprogram(name: "lwan_http_authorize_shutdown", scope: !327, file: !327, line: 136, type: !1578, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !258, retainedNodes: !74)
!6807 = !DILocation(line: 138, column: 19, scope: !6806)
!6808 = !DILocation(line: 138, column: 5, scope: !6806)
!6809 = !DILocation(line: 139, column: 1, scope: !6806)
!6810 = !DILocalVariable(name: "request", arg: 1, scope: !338, file: !327, line: 184, type: !342)
!6811 = !DILocation(line: 184, column: 37, scope: !338)
!6812 = !DILocalVariable(name: "authorization", arg: 2, scope: !338, file: !327, line: 185, type: !500)
!6813 = !DILocation(line: 185, column: 35, scope: !338)
!6814 = !DILocalVariable(name: "realm", arg: 3, scope: !338, file: !327, line: 186, type: !480)
!6815 = !DILocation(line: 186, column: 33, scope: !338)
!6816 = !DILocalVariable(name: "password_file", arg: 4, scope: !338, file: !327, line: 187, type: !480)
!6817 = !DILocation(line: 187, column: 33, scope: !338)
!6818 = !DILocalVariable(name: "headers", scope: !338, file: !327, line: 191, type: !445)
!6819 = !DILocation(line: 191, column: 23, scope: !338)
!6820 = !DILocation(line: 193, column: 10, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !338, file: !327, line: 193, column: 9)
!6822 = !DILocation(line: 193, column: 25, scope: !6821)
!6823 = !DILocation(line: 193, column: 9, scope: !338)
!6824 = !DILocation(line: 194, column: 9, scope: !6821)
!6825 = !DILocation(line: 196, column: 9, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !338, file: !327, line: 196, column: 9)
!6827 = !DILocation(line: 196, column: 9, scope: !338)
!6828 = !DILocation(line: 197, column: 9, scope: !6826)
!6829 = !DILocation(line: 199, column: 5, scope: !338)
!6830 = !DILocation(line: 199, column: 20, scope: !338)
!6831 = !DILocation(line: 199, column: 26, scope: !338)
!6832 = !DILocation(line: 200, column: 5, scope: !338)
!6833 = !DILocation(line: 200, column: 20, scope: !338)
!6834 = !DILocation(line: 200, column: 24, scope: !338)
!6835 = !DILocation(line: 202, column: 19, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !338, file: !327, line: 202, column: 9)
!6837 = !DILocation(line: 202, column: 28, scope: !6836)
!6838 = !DILocation(line: 202, column: 34, scope: !6836)
!6839 = !DILocation(line: 202, column: 40, scope: !6836)
!6840 = !DILocation(line: 202, column: 55, scope: !6836)
!6841 = !DILocation(line: 202, column: 9, scope: !6836)
!6842 = !DILocation(line: 202, column: 9, scope: !338)
!6843 = !DILocation(line: 203, column: 9, scope: !6836)
!6844 = !DILocation(line: 202, column: 68, scope: !6836)
!6845 = !DILabel(scope: !338, name: "unauthorized", file: !327, line: 205)
!6846 = !DILocation(line: 205, column: 1, scope: !338)
!6847 = !DILocation(line: 206, column: 27, scope: !338)
!6848 = !DILocation(line: 206, column: 36, scope: !338)
!6849 = !DILocation(line: 206, column: 42, scope: !338)
!6850 = !DILocation(line: 206, column: 15, scope: !338)
!6851 = !DILocation(line: 206, column: 13, scope: !338)
!6852 = !DILocation(line: 207, column: 5, scope: !338)
!6853 = !DILocation(line: 207, column: 16, scope: !338)
!6854 = !DILocation(line: 207, column: 20, scope: !338)
!6855 = !DILocation(line: 208, column: 36, scope: !338)
!6856 = !DILocation(line: 208, column: 45, scope: !338)
!6857 = !DILocation(line: 208, column: 51, scope: !338)
!6858 = !DILocation(line: 209, column: 36, scope: !338)
!6859 = !DILocation(line: 208, column: 24, scope: !338)
!6860 = !DILocation(line: 208, column: 5, scope: !338)
!6861 = !DILocation(line: 208, column: 16, scope: !338)
!6862 = !DILocation(line: 208, column: 22, scope: !338)
!6863 = !DILocation(line: 210, column: 22, scope: !338)
!6864 = !DILocation(line: 210, column: 33, scope: !338)
!6865 = !DILocation(line: 210, column: 39, scope: !338)
!6866 = !DILocation(line: 210, column: 5, scope: !338)
!6867 = !DILocation(line: 210, column: 16, scope: !338)
!6868 = !DILocation(line: 210, column: 20, scope: !338)
!6869 = !DILocation(line: 212, column: 33, scope: !338)
!6870 = !DILocation(line: 212, column: 5, scope: !338)
!6871 = !DILocation(line: 212, column: 14, scope: !338)
!6872 = !DILocation(line: 212, column: 23, scope: !338)
!6873 = !DILocation(line: 212, column: 31, scope: !338)
!6874 = !DILocation(line: 213, column: 5, scope: !338)
!6875 = !DILocation(line: 214, column: 1, scope: !338)
!6876 = distinct !DISubprogram(name: "authorize", scope: !327, file: !327, line: 142, type: !6877, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !258, retainedNodes: !74)
!6877 = !DISubroutineType(types: !6878)
!6878 = !{!341, !365, !500, !480}
!6879 = !DILocalVariable(name: "coro", arg: 1, scope: !6876, file: !327, line: 142, type: !365)
!6880 = !DILocation(line: 142, column: 19, scope: !6876)
!6881 = !DILocalVariable(name: "authorization", arg: 2, scope: !6876, file: !327, line: 143, type: !500)
!6882 = !DILocation(line: 143, column: 26, scope: !6876)
!6883 = !DILocalVariable(name: "password_file", arg: 3, scope: !6876, file: !327, line: 144, type: !480)
!6884 = !DILocation(line: 144, column: 24, scope: !6876)
!6885 = !DILocalVariable(name: "rpf", scope: !6876, file: !327, line: 146, type: !325)
!6886 = !DILocation(line: 146, column: 35, scope: !6876)
!6887 = !DILocalVariable(name: "decoded", scope: !6876, file: !327, line: 147, type: !334)
!6888 = !DILocation(line: 147, column: 20, scope: !6876)
!6889 = !DILocalVariable(name: "colon", scope: !6876, file: !327, line: 148, type: !61)
!6890 = !DILocation(line: 148, column: 11, scope: !6876)
!6891 = !DILocalVariable(name: "password", scope: !6876, file: !327, line: 149, type: !61)
!6892 = !DILocation(line: 149, column: 11, scope: !6876)
!6893 = !DILocalVariable(name: "looked_password", scope: !6876, file: !327, line: 150, type: !61)
!6894 = !DILocation(line: 150, column: 11, scope: !6876)
!6895 = !DILocalVariable(name: "decoded_len", scope: !6876, file: !327, line: 151, type: !6)
!6896 = !DILocation(line: 151, column: 12, scope: !6876)
!6897 = !DILocalVariable(name: "password_ok", scope: !6876, file: !327, line: 152, type: !341)
!6898 = !DILocation(line: 152, column: 10, scope: !6876)
!6899 = !DILocation(line: 155, column: 13, scope: !6876)
!6900 = !DILocation(line: 155, column: 35, scope: !6876)
!6901 = !DILocation(line: 155, column: 41, scope: !6876)
!6902 = !DILocation(line: 154, column: 43, scope: !6876)
!6903 = !DILocation(line: 154, column: 9, scope: !6876)
!6904 = !DILocation(line: 156, column: 9, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6876, file: !327, line: 156, column: 9)
!6906 = !DILocation(line: 156, column: 9, scope: !6876)
!6907 = !DILocation(line: 157, column: 9, scope: !6905)
!6908 = !DILocation(line: 159, column: 46, scope: !6876)
!6909 = !DILocation(line: 159, column: 61, scope: !6876)
!6910 = !DILocation(line: 160, column: 29, scope: !6876)
!6911 = !DILocation(line: 160, column: 44, scope: !6876)
!6912 = !DILocation(line: 159, column: 15, scope: !6876)
!6913 = !DILocation(line: 159, column: 13, scope: !6876)
!6914 = !DILocation(line: 161, column: 9, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6876, file: !327, line: 161, column: 9)
!6916 = !DILocation(line: 161, column: 9, scope: !6876)
!6917 = !DILocation(line: 162, column: 9, scope: !6915)
!6918 = !DILocation(line: 164, column: 9, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6876, file: !327, line: 164, column: 9)
!6920 = !DILocation(line: 164, column: 9, scope: !6876)
!6921 = !DILocation(line: 165, column: 9, scope: !6919)
!6922 = !DILocation(line: 167, column: 20, scope: !6876)
!6923 = !DILocation(line: 167, column: 34, scope: !6876)
!6924 = !DILocation(line: 167, column: 13, scope: !6876)
!6925 = !DILocation(line: 167, column: 11, scope: !6876)
!6926 = !DILocation(line: 168, column: 9, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6876, file: !327, line: 168, column: 9)
!6928 = !DILocation(line: 168, column: 9, scope: !6876)
!6929 = !DILocation(line: 169, column: 9, scope: !6927)
!6930 = !DILocation(line: 171, column: 6, scope: !6876)
!6931 = !DILocation(line: 171, column: 12, scope: !6876)
!6932 = !DILocation(line: 172, column: 16, scope: !6876)
!6933 = !DILocation(line: 172, column: 22, scope: !6876)
!6934 = !DILocation(line: 172, column: 14, scope: !6876)
!6935 = !DILocation(line: 174, column: 33, scope: !6876)
!6936 = !DILocation(line: 174, column: 38, scope: !6876)
!6937 = !DILocation(line: 174, column: 47, scope: !6876)
!6938 = !DILocation(line: 174, column: 23, scope: !6876)
!6939 = !DILocation(line: 174, column: 21, scope: !6876)
!6940 = !DILocation(line: 175, column: 9, scope: !6941)
!6941 = distinct !DILexicalBlock(scope: !6876, file: !327, line: 175, column: 9)
!6942 = !DILocation(line: 175, column: 9, scope: !6876)
!6943 = !DILocation(line: 176, column: 31, scope: !6941)
!6944 = !DILocation(line: 176, column: 41, scope: !6941)
!6945 = !DILocation(line: 176, column: 24, scope: !6941)
!6946 = !DILocation(line: 176, column: 23, scope: !6941)
!6947 = !DILocation(line: 176, column: 21, scope: !6941)
!6948 = !DILocation(line: 176, column: 9, scope: !6941)
!6949 = !DILabel(scope: !6876, name: "out", file: !327, line: 178)
!6950 = !DILocation(line: 178, column: 1, scope: !6876)
!6951 = !DILocation(line: 179, column: 10, scope: !6876)
!6952 = !DILocation(line: 179, column: 5, scope: !6876)
!6953 = !DILocation(line: 180, column: 12, scope: !6876)
!6954 = !DILocation(line: 180, column: 5, scope: !6876)
!6955 = !DILocation(line: 181, column: 1, scope: !6876)
!6956 = distinct !DISubprogram(name: "lwan_openat", scope: !533, file: !533, line: 33, type: !6957, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3043, retainedNodes: !74)
!6957 = !DISubroutineType(types: !6958)
!6958 = !{!37, !6959, !37, !480, !37}
!6959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6960, size: 64)
!6960 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_request_t", file: !262, line: 106, baseType: !6961)
!6961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_request_t_", file: !262, line: 206, size: 1280, elements: !6962)
!6962 = !{!6963, !6964, !6965, !6971, !6972, !7041, !7052, !7053, !7062}
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6961, file: !262, line: 207, baseType: !347, size: 32)
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !6961, file: !262, line: 208, baseType: !37, size: 32, offset: 32)
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "url", scope: !6961, file: !262, line: 209, baseType: !6966, size: 128, offset: 64)
!6966 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_value_t", file: !262, line: 110, baseType: !6967)
!6967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_value_t_", file: !262, line: 191, size: 128, elements: !6968)
!6968 = !{!6969, !6970}
!6969 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !6967, file: !262, line: 192, baseType: !61, size: 64)
!6970 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6967, file: !262, line: 193, baseType: !6, size: 64, offset: 64)
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "original_url", scope: !6961, file: !262, line: 210, baseType: !6966, size: 128, offset: 192)
!6972 = !DIDerivedType(tag: DW_TAG_member, name: "conn", scope: !6961, file: !262, line: 211, baseType: !6973, size: 64, offset: 320)
!6973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6974, size: 64)
!6974 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_connection_t", file: !262, line: 112, baseType: !6975)
!6975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_connection_t_", file: !262, line: 196, size: 256, elements: !6976)
!6976 = !{!6977, !6978, !6979, !6980, !7039, !7040}
!6977 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6975, file: !262, line: 199, baseType: !362, size: 32)
!6978 = !DIDerivedType(tag: DW_TAG_member, name: "time_to_die", scope: !6975, file: !262, line: 200, baseType: !28, size: 32, offset: 32)
!6979 = !DIDerivedType(tag: DW_TAG_member, name: "coro", scope: !6975, file: !262, line: 201, baseType: !365, size: 64, offset: 64)
!6980 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !6975, file: !262, line: 202, baseType: !6981, size: 64, offset: 128)
!6981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6982, size: 64)
!6982 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_thread_t", file: !262, line: 108, baseType: !6983)
!6983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_thread_t_", file: !262, line: 253, size: 832, elements: !6984)
!6984 = !{!6985, !7030, !7036, !7037, !7038}
!6985 = !DIDerivedType(tag: DW_TAG_member, name: "lwan", scope: !6983, file: !262, line: 254, baseType: !6986, size: 64)
!6986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6987, size: 64)
!6987 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_t", file: !262, line: 103, baseType: !6988)
!6988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_t_", file: !262, line: 275, size: 640, elements: !6989)
!6989 = !{!6990, !7011, !7012, !7018, !7019, !7029}
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "url_map_trie", scope: !6988, file: !262, line: 276, baseType: !6991, size: 128)
!6991 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_t", file: !381, line: 25, baseType: !6992)
!6992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_t_", file: !381, line: 41, size: 128, elements: !6993)
!6993 = !{!6994, !7010}
!6994 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !6992, file: !381, line: 42, baseType: !6995, size: 64)
!6995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6996, size: 64)
!6996 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_node_t", file: !381, line: 26, baseType: !6997)
!6997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_node_t_", file: !381, line: 29, size: 640, elements: !6998)
!6998 = !{!6999, !7001, !7009}
!6999 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6997, file: !381, line: 30, baseType: !7000, size: 512)
!7000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6995, size: 512, elements: !391)
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !6997, file: !381, line: 31, baseType: !7002, size: 64, offset: 512)
!7002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7003, size: 64)
!7003 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_leaf_t", file: !381, line: 27, baseType: !7004)
!7004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_leaf_t_", file: !381, line: 35, size: 192, elements: !7005)
!7005 = !{!7006, !7007, !7008}
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !7004, file: !381, line: 36, baseType: !61, size: 64)
!7007 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7004, file: !381, line: 37, baseType: !5, size: 64, offset: 64)
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7004, file: !381, line: 38, baseType: !7002, size: 64, offset: 128)
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !6997, file: !381, line: 32, baseType: !37, size: 32, offset: 576)
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !6992, file: !381, line: 43, baseType: !403, size: 64, offset: 64)
!7011 = !DIDerivedType(tag: DW_TAG_member, name: "conns", scope: !6988, file: !262, line: 277, baseType: !6973, size: 64, offset: 128)
!7012 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !6988, file: !262, line: 283, baseType: !7013, size: 128, offset: 192)
!7013 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6988, file: !262, line: 279, size: 128, elements: !7014)
!7014 = !{!7015, !7016, !7017}
!7015 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !7013, file: !262, line: 280, baseType: !6981, size: 64)
!7016 = !DIDerivedType(tag: DW_TAG_member, name: "max_fd", scope: !7013, file: !262, line: 281, baseType: !28, size: 32, offset: 64)
!7017 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7013, file: !262, line: 282, baseType: !413, size: 16, offset: 96)
!7018 = !DIDerivedType(tag: DW_TAG_member, name: "module_registry", scope: !6988, file: !262, line: 285, baseType: !331, size: 64, offset: 320)
!7019 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !6988, file: !262, line: 286, baseType: !7020, size: 192, offset: 384)
!7020 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_config_t", file: !262, line: 111, baseType: !7021)
!7021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_config_t_", file: !262, line: 266, size: 192, elements: !7022)
!7022 = !{!7023, !7024, !7025, !7026, !7027, !7028}
!7023 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !7021, file: !262, line: 267, baseType: !61, size: 64)
!7024 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive_timeout", scope: !7021, file: !262, line: 268, baseType: !413, size: 16, offset: 64)
!7025 = !DIDerivedType(tag: DW_TAG_member, name: "quiet", scope: !7021, file: !262, line: 269, baseType: !341, size: 8, offset: 80)
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "reuse_port", scope: !7021, file: !262, line: 270, baseType: !341, size: 8, offset: 88)
!7027 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !7021, file: !262, line: 271, baseType: !28, size: 32, offset: 96)
!7028 = !DIDerivedType(tag: DW_TAG_member, name: "n_threads", scope: !7021, file: !262, line: 272, baseType: !413, size: 16, offset: 128)
!7029 = !DIDerivedType(tag: DW_TAG_member, name: "main_socket", scope: !6988, file: !262, line: 287, baseType: !37, size: 32, offset: 576)
!7030 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !6983, file: !262, line: 259, baseType: !7031, size: 576, offset: 64)
!7031 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6983, file: !262, line: 255, size: 576, elements: !7032)
!7032 = !{!7033, !7034, !7035}
!7033 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !7031, file: !262, line: 256, baseType: !430, size: 240)
!7034 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !7031, file: !262, line: 257, baseType: !430, size: 240, offset: 240)
!7035 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !7031, file: !262, line: 258, baseType: !322, size: 64, offset: 512)
!7036 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_fd", scope: !6983, file: !262, line: 261, baseType: !37, size: 32, offset: 640)
!7037 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_fd", scope: !6983, file: !262, line: 262, baseType: !435, size: 64, offset: 672)
!7038 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !6983, file: !262, line: 263, baseType: !437, size: 64, offset: 768)
!7039 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6975, file: !262, line: 203, baseType: !37, size: 32, offset: 192)
!7040 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6975, file: !262, line: 203, baseType: !37, size: 32, offset: 224)
!7041 = !DIDerivedType(tag: DW_TAG_member, name: "query_params", scope: !6961, file: !262, line: 216, baseType: !7042, size: 128, offset: 384)
!7042 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6961, file: !262, line: 213, size: 128, elements: !7043)
!7043 = !{!7044, !7051}
!7044 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7042, file: !262, line: 214, baseType: !7045, size: 64)
!7045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7046, size: 64)
!7046 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_key_value_t", file: !262, line: 105, baseType: !7047)
!7047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_key_value_t_", file: !262, line: 173, size: 128, elements: !7048)
!7048 = !{!7049, !7050}
!7049 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !7047, file: !262, line: 174, baseType: !61, size: 64)
!7050 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !7047, file: !262, line: 175, baseType: !61, size: 64, offset: 64)
!7051 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7042, file: !262, line: 215, baseType: !6, size: 64, offset: 64)
!7052 = !DIDerivedType(tag: DW_TAG_member, name: "post_data", scope: !6961, file: !262, line: 216, baseType: !7042, size: 128, offset: 512)
!7053 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !6961, file: !262, line: 223, baseType: !7054, size: 192, offset: 640)
!7054 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6961, file: !262, line: 217, size: 192, elements: !7055)
!7055 = !{!7056, !7057}
!7056 = !DIDerivedType(tag: DW_TAG_member, name: "if_modified_since", scope: !7054, file: !262, line: 218, baseType: !322, size: 64)
!7057 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !7054, file: !262, line: 222, baseType: !7058, size: 128, offset: 64)
!7058 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7054, file: !262, line: 219, size: 128, elements: !7059)
!7059 = !{!7060, !7061}
!7060 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !7058, file: !262, line: 220, baseType: !2000, size: 64)
!7061 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !7058, file: !262, line: 221, baseType: !2000, size: 64, offset: 64)
!7062 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !6961, file: !262, line: 224, baseType: !7063, size: 448, offset: 832)
!7063 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_response_t", file: !262, line: 107, baseType: !7064)
!7064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_response_t_", file: !262, line: 178, size: 448, elements: !7065)
!7065 = !{!7066, !7082, !7083, !7084, !7085}
!7066 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !7064, file: !262, line: 179, baseType: !7067, size: 64)
!7067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7068, size: 64)
!7068 = !DIDerivedType(tag: DW_TAG_typedef, name: "strbuf_t", file: !472, line: 25, baseType: !7069)
!7069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "strbuf_t_", file: !472, line: 27, size: 256, elements: !7070)
!7070 = !{!7071, !7076, !7081}
!7071 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !7069, file: !472, line: 31, baseType: !7072, size: 64)
!7072 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7069, file: !472, line: 28, size: 64, elements: !7073)
!7073 = !{!7074, !7075}
!7074 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !7072, file: !472, line: 29, baseType: !61, size: 64)
!7075 = !DIDerivedType(tag: DW_TAG_member, name: "static_buffer", scope: !7072, file: !472, line: 30, baseType: !480, size: 64)
!7076 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7069, file: !472, line: 34, baseType: !7077, size: 128, offset: 64)
!7077 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7069, file: !472, line: 32, size: 128, elements: !7078)
!7078 = !{!7079, !7080}
!7079 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !7077, file: !472, line: 33, baseType: !6, size: 64)
!7080 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !7077, file: !472, line: 33, baseType: !6, size: 64, offset: 64)
!7081 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7069, file: !472, line: 35, baseType: !28, size: 32, offset: 192)
!7082 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !7064, file: !262, line: 180, baseType: !480, size: 64, offset: 64)
!7083 = !DIDerivedType(tag: DW_TAG_member, name: "content_length", scope: !7064, file: !262, line: 181, baseType: !6, size: 64, offset: 128)
!7084 = !DIDerivedType(tag: DW_TAG_member, name: "headers", scope: !7064, file: !262, line: 182, baseType: !7045, size: 64, offset: 192)
!7085 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !7064, file: !262, line: 188, baseType: !7086, size: 192, offset: 256)
!7086 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7064, file: !262, line: 184, size: 192, elements: !7087)
!7087 = !{!7088, !7092, !7093}
!7088 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !7086, file: !262, line: 185, baseType: !7089, size: 64)
!7089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7090, size: 64)
!7090 = !DISubroutineType(types: !7091)
!7091 = !{!497, !6959, !5}
!7092 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7086, file: !262, line: 186, baseType: !5, size: 64, offset: 64)
!7093 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !7086, file: !262, line: 187, baseType: !5, size: 64, offset: 128)
!7094 = !DILocalVariable(name: "request", arg: 1, scope: !6956, file: !533, line: 33, type: !6959)
!7095 = !DILocation(line: 33, column: 29, scope: !6956)
!7096 = !DILocalVariable(name: "dirfd", arg: 2, scope: !6956, file: !533, line: 34, type: !37)
!7097 = !DILocation(line: 34, column: 17, scope: !6956)
!7098 = !DILocalVariable(name: "pathname", arg: 3, scope: !6956, file: !533, line: 34, type: !480)
!7099 = !DILocation(line: 34, column: 36, scope: !6956)
!7100 = !DILocalVariable(name: "flags", arg: 4, scope: !6956, file: !533, line: 34, type: !37)
!7101 = !DILocation(line: 34, column: 50, scope: !6956)
!7102 = !DILocalVariable(name: "tries", scope: !7103, file: !533, line: 36, type: !37)
!7103 = distinct !DILexicalBlock(scope: !6956, file: !533, line: 36, column: 5)
!7104 = !DILocation(line: 36, column: 14, scope: !7103)
!7105 = !DILocation(line: 36, column: 10, scope: !7103)
!7106 = !DILocation(line: 36, column: 40, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !7103, file: !533, line: 36, column: 5)
!7108 = !DILocation(line: 36, column: 5, scope: !7103)
!7109 = !DILocalVariable(name: "fd", scope: !7110, file: !533, line: 37, type: !37)
!7110 = distinct !DILexicalBlock(scope: !7107, file: !533, line: 36, column: 56)
!7111 = !DILocation(line: 37, column: 13, scope: !7110)
!7112 = !DILocation(line: 37, column: 25, scope: !7110)
!7113 = !DILocation(line: 37, column: 32, scope: !7110)
!7114 = !DILocation(line: 37, column: 42, scope: !7110)
!7115 = !DILocation(line: 37, column: 18, scope: !7110)
!7116 = !DILocation(line: 38, column: 13, scope: !7117)
!7117 = distinct !DILexicalBlock(scope: !7110, file: !533, line: 38, column: 13)
!7118 = !DILocation(line: 38, column: 13, scope: !7110)
!7119 = !DILocation(line: 39, column: 24, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7117, file: !533, line: 38, column: 30)
!7121 = !DILocation(line: 39, column: 33, scope: !7120)
!7122 = !DILocation(line: 39, column: 39, scope: !7120)
!7123 = !DILocation(line: 39, column: 82, scope: !7120)
!7124 = !DILocation(line: 39, column: 72, scope: !7120)
!7125 = !DILocation(line: 39, column: 64, scope: !7120)
!7126 = !DILocation(line: 39, column: 13, scope: !7120)
!7127 = !DILocation(line: 40, column: 20, scope: !7120)
!7128 = !DILocation(line: 40, column: 13, scope: !7120)
!7129 = !DILocation(line: 43, column: 17, scope: !7110)
!7130 = !DILocation(line: 43, column: 9, scope: !7110)
!7131 = !DILocation(line: 48, column: 24, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7110, file: !533, line: 43, column: 24)
!7133 = !DILocation(line: 48, column: 33, scope: !7132)
!7134 = !DILocation(line: 48, column: 39, scope: !7132)
!7135 = !DILocation(line: 48, column: 13, scope: !7132)
!7136 = !DILocation(line: 49, column: 13, scope: !7132)
!7137 = !DILocation(line: 51, column: 21, scope: !7132)
!7138 = !DILocation(line: 51, column: 20, scope: !7132)
!7139 = !DILocation(line: 51, column: 13, scope: !7132)
!7140 = !DILocation(line: 53, column: 5, scope: !7110)
!7141 = !DILocation(line: 36, column: 52, scope: !7107)
!7142 = !DILocation(line: 36, column: 5, scope: !7107)
!7143 = distinct !{!7143, !7108, !7144, !3203}
!7144 = !DILocation(line: 53, column: 5, scope: !7103)
!7145 = !DILocation(line: 55, column: 5, scope: !6956)
!7146 = !DILocation(line: 56, column: 1, scope: !6956)
!7147 = distinct !DISubprogram(name: "lwan_writev", scope: !533, file: !533, line: 59, type: !7148, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3043, retainedNodes: !74)
!7148 = !DISubroutineType(types: !7149)
!7149 = !{!3050, !6959, !7150, !37}
!7150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7151, size: 64)
!7151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !7152, line: 26, size: 128, elements: !7153)
!7152 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_iovec.h", directory: "", checksumkind: CSK_MD5, checksum: "906dd4c9f8205bfe8a00a7ac49f298dc")
!7153 = !{!7154, !7155}
!7154 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !7151, file: !7152, line: 28, baseType: !5, size: 64)
!7155 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !7151, file: !7152, line: 29, baseType: !6, size: 64, offset: 64)
!7156 = !DILocalVariable(name: "request", arg: 1, scope: !7147, file: !533, line: 59, type: !6959)
!7157 = !DILocation(line: 59, column: 29, scope: !7147)
!7158 = !DILocalVariable(name: "iov", arg: 2, scope: !7147, file: !533, line: 59, type: !7150)
!7159 = !DILocation(line: 59, column: 52, scope: !7147)
!7160 = !DILocalVariable(name: "iov_count", arg: 3, scope: !7147, file: !533, line: 59, type: !37)
!7161 = !DILocation(line: 59, column: 61, scope: !7147)
!7162 = !DILocalVariable(name: "total_written", scope: !7147, file: !533, line: 61, type: !3050)
!7163 = !DILocation(line: 61, column: 13, scope: !7147)
!7164 = !DILocalVariable(name: "curr_iov", scope: !7147, file: !533, line: 62, type: !37)
!7165 = !DILocation(line: 62, column: 9, scope: !7147)
!7166 = !DILocalVariable(name: "tries", scope: !7167, file: !533, line: 64, type: !37)
!7167 = distinct !DILexicalBlock(scope: !7147, file: !533, line: 64, column: 5)
!7168 = !DILocation(line: 64, column: 14, scope: !7167)
!7169 = !DILocation(line: 64, column: 10, scope: !7167)
!7170 = !DILocation(line: 64, column: 40, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7167, file: !533, line: 64, column: 5)
!7172 = !DILocation(line: 64, column: 5, scope: !7167)
!7173 = !DILocalVariable(name: "written", scope: !7174, file: !533, line: 65, type: !3050)
!7174 = distinct !DILexicalBlock(scope: !7171, file: !533, line: 64, column: 48)
!7175 = !DILocation(line: 65, column: 17, scope: !7174)
!7176 = !DILocation(line: 65, column: 34, scope: !7174)
!7177 = !DILocation(line: 65, column: 43, scope: !7174)
!7178 = !DILocation(line: 65, column: 47, scope: !7174)
!7179 = !DILocation(line: 65, column: 53, scope: !7174)
!7180 = !DILocation(line: 65, column: 51, scope: !7174)
!7181 = !DILocation(line: 65, column: 63, scope: !7174)
!7182 = !DILocation(line: 65, column: 75, scope: !7174)
!7183 = !DILocation(line: 65, column: 73, scope: !7174)
!7184 = !DILocation(line: 65, column: 27, scope: !7174)
!7185 = !DILocation(line: 66, column: 13, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7174, file: !533, line: 66, column: 13)
!7187 = !DILocation(line: 66, column: 13, scope: !7174)
!7188 = !DILocation(line: 68, column: 18, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7186, file: !533, line: 66, column: 36)
!7190 = !DILocation(line: 70, column: 21, scope: !7189)
!7191 = !DILocation(line: 70, column: 13, scope: !7189)
!7192 = !DILocation(line: 73, column: 17, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7189, file: !533, line: 70, column: 28)
!7194 = !DILocation(line: 75, column: 17, scope: !7193)
!7195 = !DILocation(line: 79, column: 26, scope: !7174)
!7196 = !DILocation(line: 79, column: 23, scope: !7174)
!7197 = !DILocation(line: 81, column: 9, scope: !7174)
!7198 = !DILocation(line: 81, column: 16, scope: !7174)
!7199 = !DILocation(line: 81, column: 27, scope: !7174)
!7200 = !DILocation(line: 81, column: 25, scope: !7174)
!7201 = !DILocation(line: 81, column: 37, scope: !7174)
!7202 = !DILocation(line: 81, column: 40, scope: !7174)
!7203 = !DILocation(line: 81, column: 60, scope: !7174)
!7204 = !DILocation(line: 81, column: 64, scope: !7174)
!7205 = !DILocation(line: 81, column: 74, scope: !7174)
!7206 = !DILocation(line: 81, column: 48, scope: !7174)
!7207 = !DILocation(line: 0, scope: !7174)
!7208 = !DILocation(line: 82, column: 33, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7174, file: !533, line: 81, column: 83)
!7210 = !DILocation(line: 82, column: 37, scope: !7209)
!7211 = !DILocation(line: 82, column: 47, scope: !7209)
!7212 = !DILocation(line: 82, column: 21, scope: !7209)
!7213 = !DILocation(line: 83, column: 21, scope: !7209)
!7214 = distinct !{!7214, !7197, !7215, !3203}
!7215 = !DILocation(line: 84, column: 9, scope: !7174)
!7216 = !DILocation(line: 86, column: 13, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7174, file: !533, line: 86, column: 13)
!7218 = !DILocation(line: 86, column: 25, scope: !7217)
!7219 = !DILocation(line: 86, column: 22, scope: !7217)
!7220 = !DILocation(line: 86, column: 13, scope: !7174)
!7221 = !DILocation(line: 87, column: 20, scope: !7217)
!7222 = !DILocation(line: 87, column: 13, scope: !7217)
!7223 = !DILocation(line: 89, column: 42, scope: !7174)
!7224 = !DILocation(line: 89, column: 46, scope: !7174)
!7225 = !DILocation(line: 89, column: 56, scope: !7174)
!7226 = !DILocation(line: 89, column: 67, scope: !7174)
!7227 = !DILocation(line: 89, column: 65, scope: !7174)
!7228 = !DILocation(line: 89, column: 9, scope: !7174)
!7229 = !DILocation(line: 89, column: 13, scope: !7174)
!7230 = !DILocation(line: 89, column: 23, scope: !7174)
!7231 = !DILocation(line: 89, column: 32, scope: !7174)
!7232 = !DILocation(line: 90, column: 42, scope: !7174)
!7233 = !DILocation(line: 90, column: 9, scope: !7174)
!7234 = !DILocation(line: 90, column: 13, scope: !7174)
!7235 = !DILocation(line: 90, column: 23, scope: !7174)
!7236 = !DILocation(line: 90, column: 31, scope: !7174)
!7237 = !DILabel(scope: !7174, name: "try_again", file: !533, line: 92)
!7238 = !DILocation(line: 92, column: 1, scope: !7174)
!7239 = !DILocation(line: 93, column: 20, scope: !7174)
!7240 = !DILocation(line: 93, column: 29, scope: !7174)
!7241 = !DILocation(line: 93, column: 35, scope: !7174)
!7242 = !DILocation(line: 93, column: 9, scope: !7174)
!7243 = !DILocation(line: 64, column: 5, scope: !7171)
!7244 = distinct !{!7244, !7172, !7245, !3203}
!7245 = !DILocation(line: 94, column: 5, scope: !7167)
!7246 = !DILabel(scope: !7147, name: "out", file: !533, line: 96)
!7247 = !DILocation(line: 96, column: 1, scope: !7147)
!7248 = !DILocation(line: 97, column: 16, scope: !7147)
!7249 = !DILocation(line: 97, column: 25, scope: !7147)
!7250 = !DILocation(line: 97, column: 31, scope: !7147)
!7251 = !DILocation(line: 97, column: 5, scope: !7147)
!7252 = !DILocation(line: 98, column: 5, scope: !7147)
!7253 = distinct !DISubprogram(name: "lwan_write", scope: !533, file: !533, line: 102, type: !7254, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3043, retainedNodes: !74)
!7254 = !DISubroutineType(types: !7255)
!7255 = !{!3050, !6959, !38, !6}
!7256 = !DILocalVariable(name: "request", arg: 1, scope: !7253, file: !533, line: 102, type: !6959)
!7257 = !DILocation(line: 102, column: 28, scope: !7253)
!7258 = !DILocalVariable(name: "buf", arg: 2, scope: !7253, file: !533, line: 102, type: !38)
!7259 = !DILocation(line: 102, column: 49, scope: !7253)
!7260 = !DILocalVariable(name: "count", arg: 3, scope: !7253, file: !533, line: 102, type: !6)
!7261 = !DILocation(line: 102, column: 61, scope: !7253)
!7262 = !DILocalVariable(name: "total_written", scope: !7253, file: !533, line: 104, type: !3050)
!7263 = !DILocation(line: 104, column: 13, scope: !7253)
!7264 = !DILocalVariable(name: "tries", scope: !7265, file: !533, line: 106, type: !37)
!7265 = distinct !DILexicalBlock(scope: !7253, file: !533, line: 106, column: 5)
!7266 = !DILocation(line: 106, column: 14, scope: !7265)
!7267 = !DILocation(line: 106, column: 10, scope: !7265)
!7268 = !DILocation(line: 106, column: 40, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !7265, file: !533, line: 106, column: 5)
!7270 = !DILocation(line: 106, column: 5, scope: !7265)
!7271 = !DILocalVariable(name: "written", scope: !7272, file: !533, line: 107, type: !3050)
!7272 = distinct !DILexicalBlock(scope: !7269, file: !533, line: 106, column: 48)
!7273 = !DILocation(line: 107, column: 17, scope: !7272)
!7274 = !DILocation(line: 107, column: 33, scope: !7272)
!7275 = !DILocation(line: 107, column: 42, scope: !7272)
!7276 = !DILocation(line: 107, column: 46, scope: !7272)
!7277 = !DILocation(line: 107, column: 51, scope: !7272)
!7278 = !DILocation(line: 107, column: 27, scope: !7272)
!7279 = !DILocation(line: 108, column: 13, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7272, file: !533, line: 108, column: 13)
!7281 = !DILocation(line: 108, column: 13, scope: !7272)
!7282 = !DILocation(line: 109, column: 18, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7280, file: !533, line: 108, column: 36)
!7284 = !DILocation(line: 111, column: 21, scope: !7283)
!7285 = !DILocation(line: 111, column: 13, scope: !7283)
!7286 = !DILocation(line: 114, column: 17, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7283, file: !533, line: 111, column: 28)
!7288 = !DILocation(line: 116, column: 17, scope: !7287)
!7289 = !DILocation(line: 120, column: 26, scope: !7272)
!7290 = !DILocation(line: 120, column: 23, scope: !7272)
!7291 = !DILocation(line: 121, column: 21, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7272, file: !533, line: 121, column: 13)
!7293 = !DILocation(line: 121, column: 38, scope: !7292)
!7294 = !DILocation(line: 121, column: 35, scope: !7292)
!7295 = !DILocation(line: 121, column: 13, scope: !7272)
!7296 = !DILocation(line: 122, column: 20, scope: !7292)
!7297 = !DILocation(line: 122, column: 13, scope: !7292)
!7298 = !DILocation(line: 123, column: 21, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7272, file: !533, line: 123, column: 13)
!7300 = !DILocation(line: 123, column: 37, scope: !7299)
!7301 = !DILocation(line: 123, column: 35, scope: !7299)
!7302 = !DILocation(line: 123, column: 13, scope: !7272)
!7303 = !DILocation(line: 124, column: 27, scope: !7299)
!7304 = !DILocation(line: 124, column: 33, scope: !7299)
!7305 = !DILocation(line: 124, column: 31, scope: !7299)
!7306 = !DILocation(line: 124, column: 17, scope: !7299)
!7307 = !DILocation(line: 124, column: 13, scope: !7299)
!7308 = !DILabel(scope: !7272, name: "try_again", file: !533, line: 126)
!7309 = !DILocation(line: 126, column: 1, scope: !7272)
!7310 = !DILocation(line: 127, column: 20, scope: !7272)
!7311 = !DILocation(line: 127, column: 29, scope: !7272)
!7312 = !DILocation(line: 127, column: 35, scope: !7272)
!7313 = !DILocation(line: 127, column: 9, scope: !7272)
!7314 = !DILocation(line: 106, column: 5, scope: !7269)
!7315 = distinct !{!7315, !7270, !7316, !3203}
!7316 = !DILocation(line: 128, column: 5, scope: !7265)
!7317 = !DILabel(scope: !7253, name: "out", file: !533, line: 130)
!7318 = !DILocation(line: 130, column: 1, scope: !7253)
!7319 = !DILocation(line: 131, column: 16, scope: !7253)
!7320 = !DILocation(line: 131, column: 25, scope: !7253)
!7321 = !DILocation(line: 131, column: 31, scope: !7253)
!7322 = !DILocation(line: 131, column: 5, scope: !7253)
!7323 = !DILocation(line: 132, column: 5, scope: !7253)
!7324 = distinct !DISubprogram(name: "lwan_send", scope: !533, file: !533, line: 136, type: !7325, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3043, retainedNodes: !74)
!7325 = !DISubroutineType(types: !7326)
!7326 = !{!3050, !6959, !38, !6, !37}
!7327 = !DILocalVariable(name: "request", arg: 1, scope: !7324, file: !533, line: 136, type: !6959)
!7328 = !DILocation(line: 136, column: 27, scope: !7324)
!7329 = !DILocalVariable(name: "buf", arg: 2, scope: !7324, file: !533, line: 136, type: !38)
!7330 = !DILocation(line: 136, column: 48, scope: !7324)
!7331 = !DILocalVariable(name: "count", arg: 3, scope: !7324, file: !533, line: 136, type: !6)
!7332 = !DILocation(line: 136, column: 60, scope: !7324)
!7333 = !DILocalVariable(name: "flags", arg: 4, scope: !7324, file: !533, line: 136, type: !37)
!7334 = !DILocation(line: 136, column: 71, scope: !7324)
!7335 = !DILocalVariable(name: "total_sent", scope: !7324, file: !533, line: 138, type: !3050)
!7336 = !DILocation(line: 138, column: 13, scope: !7324)
!7337 = !DILocalVariable(name: "tries", scope: !7338, file: !533, line: 140, type: !37)
!7338 = distinct !DILexicalBlock(scope: !7324, file: !533, line: 140, column: 5)
!7339 = !DILocation(line: 140, column: 14, scope: !7338)
!7340 = !DILocation(line: 140, column: 10, scope: !7338)
!7341 = !DILocation(line: 140, column: 40, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7338, file: !533, line: 140, column: 5)
!7343 = !DILocation(line: 140, column: 5, scope: !7338)
!7344 = !DILocalVariable(name: "written", scope: !7345, file: !533, line: 141, type: !3050)
!7345 = distinct !DILexicalBlock(scope: !7342, file: !533, line: 140, column: 48)
!7346 = !DILocation(line: 141, column: 17, scope: !7345)
!7347 = !DILocation(line: 141, column: 32, scope: !7345)
!7348 = !DILocation(line: 141, column: 41, scope: !7345)
!7349 = !DILocation(line: 141, column: 45, scope: !7345)
!7350 = !DILocation(line: 141, column: 50, scope: !7345)
!7351 = !DILocation(line: 141, column: 57, scope: !7345)
!7352 = !DILocation(line: 141, column: 27, scope: !7345)
!7353 = !DILocation(line: 142, column: 13, scope: !7354)
!7354 = distinct !DILexicalBlock(scope: !7345, file: !533, line: 142, column: 13)
!7355 = !DILocation(line: 142, column: 13, scope: !7345)
!7356 = !DILocation(line: 143, column: 18, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7354, file: !533, line: 142, column: 36)
!7358 = !DILocation(line: 145, column: 21, scope: !7357)
!7359 = !DILocation(line: 145, column: 13, scope: !7357)
!7360 = !DILocation(line: 148, column: 17, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7357, file: !533, line: 145, column: 28)
!7362 = !DILocation(line: 150, column: 17, scope: !7361)
!7363 = !DILocation(line: 154, column: 23, scope: !7345)
!7364 = !DILocation(line: 154, column: 20, scope: !7345)
!7365 = !DILocation(line: 155, column: 21, scope: !7366)
!7366 = distinct !DILexicalBlock(scope: !7345, file: !533, line: 155, column: 13)
!7367 = !DILocation(line: 155, column: 35, scope: !7366)
!7368 = !DILocation(line: 155, column: 32, scope: !7366)
!7369 = !DILocation(line: 155, column: 13, scope: !7345)
!7370 = !DILocation(line: 156, column: 20, scope: !7366)
!7371 = !DILocation(line: 156, column: 13, scope: !7366)
!7372 = !DILocation(line: 157, column: 21, scope: !7373)
!7373 = distinct !DILexicalBlock(scope: !7345, file: !533, line: 157, column: 13)
!7374 = !DILocation(line: 157, column: 34, scope: !7373)
!7375 = !DILocation(line: 157, column: 32, scope: !7373)
!7376 = !DILocation(line: 157, column: 13, scope: !7345)
!7377 = !DILocation(line: 158, column: 27, scope: !7373)
!7378 = !DILocation(line: 158, column: 33, scope: !7373)
!7379 = !DILocation(line: 158, column: 31, scope: !7373)
!7380 = !DILocation(line: 158, column: 17, scope: !7373)
!7381 = !DILocation(line: 158, column: 13, scope: !7373)
!7382 = !DILabel(scope: !7345, name: "try_again", file: !533, line: 160)
!7383 = !DILocation(line: 160, column: 1, scope: !7345)
!7384 = !DILocation(line: 161, column: 20, scope: !7345)
!7385 = !DILocation(line: 161, column: 29, scope: !7345)
!7386 = !DILocation(line: 161, column: 35, scope: !7345)
!7387 = !DILocation(line: 161, column: 9, scope: !7345)
!7388 = !DILocation(line: 140, column: 5, scope: !7342)
!7389 = distinct !{!7389, !7343, !7390, !3203}
!7390 = !DILocation(line: 162, column: 5, scope: !7338)
!7391 = !DILabel(scope: !7324, name: "out", file: !533, line: 164)
!7392 = !DILocation(line: 164, column: 1, scope: !7324)
!7393 = !DILocation(line: 165, column: 16, scope: !7324)
!7394 = !DILocation(line: 165, column: 25, scope: !7324)
!7395 = !DILocation(line: 165, column: 31, scope: !7324)
!7396 = !DILocation(line: 165, column: 5, scope: !7324)
!7397 = !DILocation(line: 166, column: 5, scope: !7324)
!7398 = distinct !DISubprogram(name: "lwan_sendfile", scope: !533, file: !533, line: 235, type: !7399, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3043, retainedNodes: !74)
!7399 = !DISubroutineType(types: !7400)
!7400 = !{!3050, !6959, !37, !2000, !6}
!7401 = !DILocalVariable(name: "request", arg: 1, scope: !7398, file: !533, line: 235, type: !6959)
!7402 = !DILocation(line: 235, column: 31, scope: !7398)
!7403 = !DILocalVariable(name: "in_fd", arg: 2, scope: !7398, file: !533, line: 235, type: !37)
!7404 = !DILocation(line: 235, column: 44, scope: !7398)
!7405 = !DILocalVariable(name: "offset", arg: 3, scope: !7398, file: !533, line: 235, type: !2000)
!7406 = !DILocation(line: 235, column: 57, scope: !7398)
!7407 = !DILocalVariable(name: "count", arg: 4, scope: !7398, file: !533, line: 235, type: !6)
!7408 = !DILocation(line: 235, column: 72, scope: !7398)
!7409 = !DILocation(line: 237, column: 9, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7398, file: !533, line: 237, column: 9)
!7411 = !DILocation(line: 237, column: 15, scope: !7410)
!7412 = !DILocation(line: 237, column: 9, scope: !7398)
!7413 = !DILocation(line: 238, column: 13, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7415, file: !533, line: 238, column: 13)
!7415 = distinct !DILexicalBlock(scope: !7410, file: !533, line: 237, column: 34)
!7416 = !DILocation(line: 238, column: 13, scope: !7415)
!7417 = !DILocation(line: 240, column: 13, scope: !7414)
!7418 = !DILocation(line: 241, column: 5, scope: !7415)
!7419 = !DILocalVariable(name: "written_bytes", scope: !7398, file: !533, line: 243, type: !3050)
!7420 = !DILocation(line: 243, column: 13, scope: !7398)
!7421 = !DILocation(line: 244, column: 4, scope: !7398)
!7422 = !DILocation(line: 244, column: 13, scope: !7398)
!7423 = !DILocation(line: 244, column: 19, scope: !7398)
!7424 = !DILocation(line: 244, column: 25, scope: !7398)
!7425 = !DILocation(line: 244, column: 32, scope: !7398)
!7426 = !DILocation(line: 244, column: 41, scope: !7398)
!7427 = !DILocation(line: 244, column: 45, scope: !7398)
!7428 = !DILocation(line: 244, column: 53, scope: !7398)
!7429 = !DILocalVariable(name: "coro", arg: 1, scope: !7430, file: !533, line: 205, type: !365)
!7430 = distinct !DISubprogram(name: "sendfile_linux_sendfile", scope: !533, file: !533, line: 205, type: !7431, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3043, retainedNodes: !74)
!7431 = !DISubroutineType(types: !7432)
!7432 = !{!3050, !365, !37, !37, !2000, !6}
!7433 = !DILocation(line: 205, column: 33, scope: !7430, inlinedAt: !7434)
!7434 = distinct !DILocation(line: 243, column: 29, scope: !7398)
!7435 = !DILocalVariable(name: "in_fd", arg: 2, scope: !7430, file: !533, line: 205, type: !37)
!7436 = !DILocation(line: 205, column: 43, scope: !7430, inlinedAt: !7434)
!7437 = !DILocalVariable(name: "out_fd", arg: 3, scope: !7430, file: !533, line: 205, type: !37)
!7438 = !DILocation(line: 205, column: 54, scope: !7430, inlinedAt: !7434)
!7439 = !DILocalVariable(name: "offset", arg: 4, scope: !7430, file: !533, line: 205, type: !2000)
!7440 = !DILocation(line: 205, column: 68, scope: !7430, inlinedAt: !7434)
!7441 = !DILocalVariable(name: "count", arg: 5, scope: !7430, file: !533, line: 205, type: !6)
!7442 = !DILocation(line: 205, column: 83, scope: !7430, inlinedAt: !7434)
!7443 = !DILocalVariable(name: "total_written", scope: !7430, file: !533, line: 207, type: !6)
!7444 = !DILocation(line: 207, column: 12, scope: !7430, inlinedAt: !7434)
!7445 = !DILocalVariable(name: "to_be_written", scope: !7430, file: !533, line: 208, type: !6)
!7446 = !DILocation(line: 208, column: 12, scope: !7430, inlinedAt: !7434)
!7447 = !DILocation(line: 208, column: 28, scope: !7430, inlinedAt: !7434)
!7448 = !DILocation(line: 210, column: 5, scope: !7430, inlinedAt: !7434)
!7449 = !DILocalVariable(name: "written", scope: !7450, file: !533, line: 211, type: !3050)
!7450 = distinct !DILexicalBlock(scope: !7430, file: !533, line: 210, column: 8)
!7451 = !DILocation(line: 211, column: 17, scope: !7450, inlinedAt: !7434)
!7452 = !DILocation(line: 211, column: 36, scope: !7450, inlinedAt: !7434)
!7453 = !DILocation(line: 211, column: 44, scope: !7450, inlinedAt: !7434)
!7454 = !DILocation(line: 211, column: 60, scope: !7450, inlinedAt: !7434)
!7455 = !DILocation(line: 211, column: 27, scope: !7450, inlinedAt: !7434)
!7456 = !DILocation(line: 212, column: 13, scope: !7457, inlinedAt: !7434)
!7457 = distinct !DILexicalBlock(scope: !7450, file: !533, line: 212, column: 13)
!7458 = !DILocation(line: 212, column: 21, scope: !7457, inlinedAt: !7434)
!7459 = !DILocation(line: 212, column: 13, scope: !7450, inlinedAt: !7434)
!7460 = !DILocation(line: 213, column: 21, scope: !7461, inlinedAt: !7434)
!7461 = distinct !DILexicalBlock(scope: !7457, file: !533, line: 212, column: 26)
!7462 = !DILocation(line: 213, column: 13, scope: !7461, inlinedAt: !7434)
!7463 = !DILocation(line: 216, column: 28, scope: !7464, inlinedAt: !7434)
!7464 = distinct !DILexicalBlock(scope: !7461, file: !533, line: 213, column: 28)
!7465 = !DILocation(line: 216, column: 17, scope: !7464, inlinedAt: !7434)
!7466 = !DILocation(line: 217, column: 17, scope: !7464, inlinedAt: !7434)
!7467 = !DILocation(line: 220, column: 28, scope: !7464, inlinedAt: !7434)
!7468 = !DILocation(line: 220, column: 17, scope: !7464, inlinedAt: !7434)
!7469 = !DILocation(line: 221, column: 17, scope: !7464, inlinedAt: !7434)
!7470 = !DILocation(line: 225, column: 34, scope: !7450, inlinedAt: !7434)
!7471 = !DILocation(line: 225, column: 23, scope: !7450, inlinedAt: !7434)
!7472 = !DILocation(line: 226, column: 34, scope: !7450, inlinedAt: !7434)
!7473 = !DILocation(line: 226, column: 23, scope: !7450, inlinedAt: !7434)
!7474 = !DILocation(line: 228, column: 20, scope: !7450, inlinedAt: !7434)
!7475 = !DILocation(line: 228, column: 9, scope: !7450, inlinedAt: !7434)
!7476 = !DILocation(line: 229, column: 5, scope: !7450, inlinedAt: !7434)
!7477 = !DILocation(line: 229, column: 14, scope: !7430, inlinedAt: !7434)
!7478 = !DILocation(line: 229, column: 28, scope: !7430, inlinedAt: !7434)
!7479 = distinct !{!7479, !7448, !7480, !3203}
!7480 = !DILocation(line: 229, column: 31, scope: !7430, inlinedAt: !7434)
!7481 = !DILocation(line: 231, column: 21, scope: !7430, inlinedAt: !7434)
!7482 = !DILocation(line: 246, column: 9, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !7398, file: !533, line: 246, column: 9)
!7484 = !DILocation(line: 246, column: 9, scope: !7398)
!7485 = !DILocation(line: 247, column: 17, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !7483, file: !533, line: 246, column: 38)
!7487 = !DILocation(line: 247, column: 9, scope: !7486)
!7488 = !DILocation(line: 250, column: 40, scope: !7489)
!7489 = distinct !DILexicalBlock(scope: !7486, file: !533, line: 247, column: 24)
!7490 = !DILocation(line: 250, column: 49, scope: !7489)
!7491 = !DILocation(line: 250, column: 55, scope: !7489)
!7492 = !DILocation(line: 250, column: 61, scope: !7489)
!7493 = !DILocation(line: 250, column: 68, scope: !7489)
!7494 = !DILocation(line: 250, column: 77, scope: !7489)
!7495 = !DILocation(line: 250, column: 81, scope: !7489)
!7496 = !DILocation(line: 250, column: 89, scope: !7489)
!7497 = !DILocalVariable(name: "coro", arg: 1, scope: !7498, file: !533, line: 170, type: !365)
!7498 = distinct !DISubprogram(name: "sendfile_read_write", scope: !533, file: !533, line: 170, type: !7431, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3043, retainedNodes: !74)
!7499 = !DILocation(line: 170, column: 29, scope: !7498, inlinedAt: !7500)
!7500 = distinct !DILocation(line: 250, column: 20, scope: !7489)
!7501 = !DILocalVariable(name: "in_fd", arg: 2, scope: !7498, file: !533, line: 170, type: !37)
!7502 = !DILocation(line: 170, column: 39, scope: !7498, inlinedAt: !7500)
!7503 = !DILocalVariable(name: "out_fd", arg: 3, scope: !7498, file: !533, line: 170, type: !37)
!7504 = !DILocation(line: 170, column: 50, scope: !7498, inlinedAt: !7500)
!7505 = !DILocalVariable(name: "offset", arg: 4, scope: !7498, file: !533, line: 170, type: !2000)
!7506 = !DILocation(line: 170, column: 64, scope: !7498, inlinedAt: !7500)
!7507 = !DILocalVariable(name: "count", arg: 5, scope: !7498, file: !533, line: 170, type: !6)
!7508 = !DILocation(line: 170, column: 79, scope: !7498, inlinedAt: !7500)
!7509 = !DILocalVariable(name: "total_bytes_written", scope: !7498, file: !533, line: 173, type: !3050)
!7510 = !DILocation(line: 173, column: 13, scope: !7498, inlinedAt: !7500)
!7511 = !DILocalVariable(name: "buffer", scope: !7498, file: !533, line: 176, type: !61)
!7512 = !DILocation(line: 176, column: 11, scope: !7498, inlinedAt: !7500)
!7513 = !DILocation(line: 176, column: 32, scope: !7498, inlinedAt: !7500)
!7514 = !DILocation(line: 176, column: 20, scope: !7498, inlinedAt: !7500)
!7515 = !DILocation(line: 178, column: 9, scope: !7516, inlinedAt: !7500)
!7516 = distinct !DILexicalBlock(scope: !7498, file: !533, line: 178, column: 9)
!7517 = !DILocation(line: 178, column: 16, scope: !7516, inlinedAt: !7500)
!7518 = !DILocation(line: 178, column: 25, scope: !7516, inlinedAt: !7500)
!7519 = !DILocation(line: 178, column: 32, scope: !7516, inlinedAt: !7500)
!7520 = !DILocation(line: 178, column: 19, scope: !7516, inlinedAt: !7500)
!7521 = !DILocation(line: 178, column: 50, scope: !7516, inlinedAt: !7500)
!7522 = !DILocation(line: 178, column: 9, scope: !7498, inlinedAt: !7500)
!7523 = !DILocation(line: 179, column: 9, scope: !7524, inlinedAt: !7500)
!7524 = distinct !DILexicalBlock(scope: !7516, file: !533, line: 178, column: 55)
!7525 = !DILocation(line: 180, column: 9, scope: !7524, inlinedAt: !7500)
!7526 = !DILocation(line: 183, column: 5, scope: !7498, inlinedAt: !7500)
!7527 = !DILocation(line: 183, column: 12, scope: !7498, inlinedAt: !7500)
!7528 = !DILocation(line: 183, column: 18, scope: !7498, inlinedAt: !7500)
!7529 = !DILocalVariable(name: "read_bytes", scope: !7530, file: !533, line: 184, type: !3050)
!7530 = distinct !DILexicalBlock(scope: !7498, file: !533, line: 183, column: 23)
!7531 = !DILocation(line: 184, column: 17, scope: !7530, inlinedAt: !7500)
!7532 = !DILocation(line: 184, column: 35, scope: !7530, inlinedAt: !7500)
!7533 = !DILocation(line: 184, column: 42, scope: !7530, inlinedAt: !7500)
!7534 = !DILocation(line: 184, column: 30, scope: !7530, inlinedAt: !7500)
!7535 = !DILocation(line: 185, column: 13, scope: !7536, inlinedAt: !7500)
!7536 = distinct !DILexicalBlock(scope: !7530, file: !533, line: 185, column: 13)
!7537 = !DILocation(line: 185, column: 24, scope: !7536, inlinedAt: !7500)
!7538 = !DILocation(line: 185, column: 13, scope: !7530, inlinedAt: !7500)
!7539 = !DILocation(line: 186, column: 24, scope: !7540, inlinedAt: !7500)
!7540 = distinct !DILexicalBlock(scope: !7536, file: !533, line: 185, column: 29)
!7541 = !DILocation(line: 186, column: 13, scope: !7540, inlinedAt: !7500)
!7542 = !DILocation(line: 187, column: 13, scope: !7540, inlinedAt: !7500)
!7543 = !DILocalVariable(name: "bytes_written", scope: !7530, file: !533, line: 190, type: !3050)
!7544 = !DILocation(line: 190, column: 17, scope: !7530, inlinedAt: !7500)
!7545 = !DILocation(line: 190, column: 39, scope: !7530, inlinedAt: !7500)
!7546 = !DILocation(line: 190, column: 47, scope: !7530, inlinedAt: !7500)
!7547 = !DILocation(line: 190, column: 63, scope: !7530, inlinedAt: !7500)
!7548 = !DILocation(line: 190, column: 33, scope: !7530, inlinedAt: !7500)
!7549 = !DILocation(line: 191, column: 13, scope: !7550, inlinedAt: !7500)
!7550 = distinct !DILexicalBlock(scope: !7530, file: !533, line: 191, column: 13)
!7551 = !DILocation(line: 191, column: 27, scope: !7550, inlinedAt: !7500)
!7552 = !DILocation(line: 191, column: 13, scope: !7530, inlinedAt: !7500)
!7553 = !DILocation(line: 192, column: 24, scope: !7554, inlinedAt: !7500)
!7554 = distinct !DILexicalBlock(scope: !7550, file: !533, line: 191, column: 32)
!7555 = !DILocation(line: 192, column: 13, scope: !7554, inlinedAt: !7500)
!7556 = !DILocation(line: 193, column: 13, scope: !7554, inlinedAt: !7500)
!7557 = !DILocation(line: 196, column: 32, scope: !7530, inlinedAt: !7500)
!7558 = !DILocation(line: 196, column: 29, scope: !7530, inlinedAt: !7500)
!7559 = !DILocation(line: 197, column: 26, scope: !7530, inlinedAt: !7500)
!7560 = !DILocation(line: 197, column: 15, scope: !7530, inlinedAt: !7500)
!7561 = !DILocation(line: 198, column: 20, scope: !7530, inlinedAt: !7500)
!7562 = !DILocation(line: 198, column: 9, scope: !7530, inlinedAt: !7500)
!7563 = distinct !{!7563, !7526, !7564, !3203}
!7564 = !DILocation(line: 199, column: 5, scope: !7498, inlinedAt: !7500)
!7565 = !DILocation(line: 201, column: 12, scope: !7498, inlinedAt: !7500)
!7566 = !DILocation(line: 201, column: 5, scope: !7498, inlinedAt: !7500)
!7567 = !DILocation(line: 202, column: 1, scope: !7498, inlinedAt: !7500)
!7568 = !DILocation(line: 250, column: 13, scope: !7489)
!7569 = !DILocation(line: 252, column: 5, scope: !7486)
!7570 = !DILocation(line: 253, column: 12, scope: !7398)
!7571 = !DILocation(line: 253, column: 5, scope: !7398)
!7572 = !DILocation(line: 254, column: 1, scope: !7398)
!7573 = distinct !DISubprogram(name: "lwan_job_thread_init", scope: !558, file: !558, line: 75, type: !1578, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !547, retainedNodes: !74)
!7574 = !DILocation(line: 77, column: 5, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7576, file: !558, line: 77, column: 5)
!7576 = distinct !DILexicalBlock(scope: !7573, file: !558, line: 77, column: 5)
!7577 = !DILocation(line: 77, column: 5, scope: !7576)
!7578 = !DILocation(line: 79, column: 5, scope: !7573)
!7579 = !DILocation(line: 81, column: 5, scope: !7573)
!7580 = !DILocation(line: 83, column: 13, scope: !7573)
!7581 = !DILocation(line: 84, column: 9, scope: !7582)
!7582 = distinct !DILexicalBlock(scope: !7573, file: !558, line: 84, column: 9)
!7583 = !DILocation(line: 84, column: 55, scope: !7582)
!7584 = !DILocation(line: 84, column: 9, scope: !7573)
!7585 = !DILocation(line: 85, column: 9, scope: !7582)
!7586 = !DILocalVariable(name: "sched_param", scope: !7573, file: !558, line: 88, type: !7587)
!7587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_param", file: !7588, line: 23, size: 32, elements: !7589)
!7588 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_sched_param.h", directory: "", checksumkind: CSK_MD5, checksum: "13c2f29d5f5dc39597ef32d201b78292")
!7589 = !{!7590}
!7590 = !DIDerivedType(tag: DW_TAG_member, name: "sched_priority", scope: !7587, file: !7588, line: 25, baseType: !37, size: 32)
!7591 = !DILocation(line: 88, column: 24, scope: !7573)
!7592 = !DILocation(line: 91, column: 31, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7573, file: !558, line: 91, column: 9)
!7594 = !DILocation(line: 91, column: 9, scope: !7593)
!7595 = !DILocation(line: 91, column: 63, scope: !7593)
!7596 = !DILocation(line: 91, column: 9, scope: !7573)
!7597 = !DILocation(line: 92, column: 9, scope: !7593)
!7598 = !DILocation(line: 94, column: 1, scope: !7573)
!7599 = distinct !DISubprogram(name: "list_head_init", scope: !313, file: !313, line: 309, type: !7600, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !74)
!7600 = !DISubroutineType(types: !7601)
!7601 = !{null, !7602}
!7602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!7603 = !DILocalVariable(name: "h", arg: 1, scope: !7599, file: !313, line: 309, type: !7602)
!7604 = !DILocation(line: 309, column: 53, scope: !7599)
!7605 = !DILocation(line: 311, column: 27, scope: !7599)
!7606 = !DILocation(line: 311, column: 30, scope: !7599)
!7607 = !DILocation(line: 311, column: 14, scope: !7599)
!7608 = !DILocation(line: 311, column: 17, scope: !7599)
!7609 = !DILocation(line: 311, column: 19, scope: !7599)
!7610 = !DILocation(line: 311, column: 24, scope: !7599)
!7611 = !DILocation(line: 311, column: 2, scope: !7599)
!7612 = !DILocation(line: 311, column: 5, scope: !7599)
!7613 = !DILocation(line: 311, column: 7, scope: !7599)
!7614 = !DILocation(line: 311, column: 12, scope: !7599)
!7615 = !DILocation(line: 312, column: 1, scope: !7599)
!7616 = distinct !DISubprogram(name: "job_thread", scope: !558, file: !558, line: 45, type: !1133, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !74)
!7617 = !DILocalVariable(name: "data", arg: 1, scope: !7616, file: !558, line: 45, type: !5)
!7618 = !DILocation(line: 45, column: 18, scope: !7616)
!7619 = !DILocalVariable(name: "rgtp", scope: !7616, file: !558, line: 47, type: !7620)
!7620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2146, line: 11, size: 128, elements: !7621)
!7621 = !{!7622, !7623}
!7622 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !7620, file: !2146, line: 16, baseType: !324, size: 64)
!7623 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !7620, file: !2146, line: 21, baseType: !2150, size: 64, offset: 64)
!7624 = !DILocation(line: 47, column: 21, scope: !7616)
!7625 = !DILocation(line: 49, column: 5, scope: !7616)
!7626 = !DILocation(line: 49, column: 12, scope: !7616)
!7627 = !DILocalVariable(name: "had_job", scope: !7628, file: !558, line: 50, type: !341)
!7628 = distinct !DILexicalBlock(scope: !7616, file: !558, line: 49, column: 21)
!7629 = !DILocation(line: 50, column: 14, scope: !7628)
!7630 = !DILocation(line: 52, column: 13, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7628, file: !558, line: 52, column: 13)
!7632 = !DILocation(line: 52, column: 13, scope: !7628)
!7633 = !DILocalVariable(name: "job", scope: !7634, file: !558, line: 53, type: !7635)
!7634 = distinct !DILexicalBlock(scope: !7631, file: !558, line: 52, column: 56)
!7635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7636, size: 64)
!7636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "job_t", file: !558, line: 33, size: 256, elements: !7637)
!7637 = !{!7638, !7639, !7640}
!7638 = !DIDerivedType(tag: DW_TAG_member, name: "jobs", scope: !7636, file: !558, line: 34, baseType: !551, size: 128)
!7639 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !7636, file: !558, line: 35, baseType: !1868, size: 64, offset: 128)
!7640 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7636, file: !558, line: 36, baseType: !5, size: 64, offset: 192)
!7641 = !DILocation(line: 53, column: 27, scope: !7634)
!7642 = !DILocation(line: 55, column: 13, scope: !7643)
!7643 = distinct !DILexicalBlock(scope: !7634, file: !558, line: 55, column: 13)
!7644 = !DILocation(line: 55, column: 13, scope: !7645)
!7645 = distinct !DILexicalBlock(scope: !7643, file: !558, line: 55, column: 13)
!7646 = !DILocation(line: 56, column: 28, scope: !7645)
!7647 = !DILocation(line: 56, column: 33, scope: !7645)
!7648 = !DILocation(line: 56, column: 36, scope: !7645)
!7649 = !DILocation(line: 56, column: 41, scope: !7645)
!7650 = !DILocation(line: 56, column: 25, scope: !7645)
!7651 = !DILocation(line: 56, column: 17, scope: !7645)
!7652 = distinct !{!7652, !7642, !7653, !3203}
!7653 = !DILocation(line: 56, column: 45, scope: !7643)
!7654 = !DILocation(line: 58, column: 13, scope: !7634)
!7655 = !DILocation(line: 59, column: 9, scope: !7634)
!7656 = !DILocation(line: 61, column: 13, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7628, file: !558, line: 61, column: 13)
!7658 = !DILocation(line: 61, column: 13, scope: !7628)
!7659 = !DILocation(line: 62, column: 18, scope: !7657)
!7660 = !DILocation(line: 62, column: 25, scope: !7657)
!7661 = !DILocation(line: 62, column: 13, scope: !7657)
!7662 = !DILocation(line: 63, column: 23, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7657, file: !558, line: 63, column: 18)
!7664 = !DILocation(line: 63, column: 30, scope: !7663)
!7665 = !DILocation(line: 63, column: 18, scope: !7657)
!7666 = !DILocation(line: 64, column: 18, scope: !7663)
!7667 = !DILocation(line: 64, column: 24, scope: !7663)
!7668 = !DILocation(line: 64, column: 13, scope: !7663)
!7669 = !DILocation(line: 66, column: 13, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !7628, file: !558, line: 66, column: 13)
!7671 = !DILocation(line: 66, column: 13, scope: !7628)
!7672 = !DILocation(line: 67, column: 17, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !7674, file: !558, line: 67, column: 17)
!7674 = distinct !DILexicalBlock(scope: !7670, file: !558, line: 66, column: 51)
!7675 = !DILocation(line: 67, column: 23, scope: !7673)
!7676 = !DILocation(line: 67, column: 17, scope: !7674)
!7677 = !DILocation(line: 68, column: 17, scope: !7673)
!7678 = !DILocation(line: 69, column: 9, scope: !7674)
!7679 = distinct !{!7679, !7625, !7680, !3203}
!7680 = !DILocation(line: 70, column: 5, scope: !7616)
!7681 = !DILocation(line: 72, column: 5, scope: !7616)
!7682 = distinct !DISubprogram(name: "list_node_to_off_", scope: !313, file: !313, line: 716, type: !7683, scopeLine: 717, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !74)
!7683 = !DISubroutineType(types: !7684)
!7684 = !{!5, !550, !6}
!7685 = !DILocalVariable(name: "node", arg: 1, scope: !7682, file: !313, line: 716, type: !550)
!7686 = !DILocation(line: 716, column: 57, scope: !7682)
!7687 = !DILocalVariable(name: "off", arg: 2, scope: !7682, file: !313, line: 716, type: !6)
!7688 = !DILocation(line: 716, column: 70, scope: !7682)
!7689 = !DILocation(line: 718, column: 26, scope: !7682)
!7690 = !DILocation(line: 718, column: 33, scope: !7682)
!7691 = !DILocation(line: 718, column: 31, scope: !7682)
!7692 = !DILocation(line: 718, column: 2, scope: !7682)
!7693 = distinct !DISubprogram(name: "list_node_from_off_", scope: !313, file: !313, line: 720, type: !7694, scopeLine: 721, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !74)
!7694 = !DISubroutineType(types: !7695)
!7695 = !{!550, !5, !6}
!7696 = !DILocalVariable(name: "ptr", arg: 1, scope: !7693, file: !313, line: 720, type: !5)
!7697 = !DILocation(line: 720, column: 59, scope: !7693)
!7698 = !DILocalVariable(name: "off", arg: 2, scope: !7693, file: !313, line: 720, type: !6)
!7699 = !DILocation(line: 720, column: 71, scope: !7693)
!7700 = !DILocation(line: 722, column: 38, scope: !7693)
!7701 = !DILocation(line: 722, column: 44, scope: !7693)
!7702 = !DILocation(line: 722, column: 42, scope: !7693)
!7703 = !DILocation(line: 722, column: 2, scope: !7693)
!7704 = distinct !DISubprogram(name: "lwan_job_thread_shutdown", scope: !558, file: !558, line: 96, type: !1578, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !547, retainedNodes: !74)
!7705 = !DILocation(line: 98, column: 5, scope: !7704)
!7706 = !DILocation(line: 100, column: 9, scope: !7707)
!7707 = distinct !DILexicalBlock(scope: !7704, file: !558, line: 100, column: 9)
!7708 = !DILocation(line: 100, column: 9, scope: !7704)
!7709 = !DILocalVariable(name: "node", scope: !7710, file: !558, line: 101, type: !7635)
!7710 = distinct !DILexicalBlock(scope: !7707, file: !558, line: 100, column: 52)
!7711 = !DILocation(line: 101, column: 23, scope: !7710)
!7712 = !DILocalVariable(name: "next", scope: !7710, file: !558, line: 101, type: !7635)
!7713 = !DILocation(line: 101, column: 30, scope: !7710)
!7714 = !DILocation(line: 102, column: 9, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7710, file: !558, line: 102, column: 9)
!7716 = !DILocation(line: 102, column: 9, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7715, file: !558, line: 102, column: 9)
!7718 = !DILocation(line: 103, column: 23, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !7717, file: !558, line: 102, column: 53)
!7720 = !DILocation(line: 103, column: 29, scope: !7719)
!7721 = !DILocation(line: 103, column: 13, scope: !7719)
!7722 = !DILocation(line: 104, column: 18, scope: !7719)
!7723 = !DILocation(line: 104, column: 13, scope: !7719)
!7724 = !DILocation(line: 105, column: 9, scope: !7719)
!7725 = distinct !{!7725, !7714, !7726, !3203}
!7726 = !DILocation(line: 105, column: 9, scope: !7715)
!7727 = !DILocation(line: 106, column: 17, scope: !7710)
!7728 = !DILocation(line: 107, column: 32, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7710, file: !558, line: 107, column: 13)
!7730 = !DILocation(line: 107, column: 13, scope: !7729)
!7731 = !DILocation(line: 107, column: 44, scope: !7729)
!7732 = !DILocation(line: 107, column: 13, scope: !7710)
!7733 = !DILocation(line: 108, column: 13, scope: !7729)
!7734 = !DILocation(line: 109, column: 9, scope: !7710)
!7735 = !DILocation(line: 110, column: 5, scope: !7710)
!7736 = !DILocation(line: 111, column: 1, scope: !7704)
!7737 = distinct !DISubprogram(name: "list_del", scope: !313, file: !313, line: 384, type: !7738, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !74)
!7738 = !DISubroutineType(types: !7739)
!7739 = !{null, !550}
!7740 = !DILocalVariable(name: "n", arg: 1, scope: !7737, file: !313, line: 384, type: !550)
!7741 = !DILocation(line: 384, column: 47, scope: !7737)
!7742 = !DILocation(line: 386, column: 8, scope: !7737)
!7743 = !DILocation(line: 387, column: 18, scope: !7737)
!7744 = !DILocation(line: 387, column: 21, scope: !7737)
!7745 = !DILocation(line: 387, column: 2, scope: !7737)
!7746 = !DILocation(line: 387, column: 5, scope: !7737)
!7747 = !DILocation(line: 387, column: 11, scope: !7737)
!7748 = !DILocation(line: 387, column: 16, scope: !7737)
!7749 = !DILocation(line: 388, column: 18, scope: !7737)
!7750 = !DILocation(line: 388, column: 21, scope: !7737)
!7751 = !DILocation(line: 388, column: 2, scope: !7737)
!7752 = !DILocation(line: 388, column: 5, scope: !7737)
!7753 = !DILocation(line: 388, column: 11, scope: !7737)
!7754 = !DILocation(line: 388, column: 16, scope: !7737)
!7755 = !DILocation(line: 393, column: 1, scope: !7737)
!7756 = distinct !DISubprogram(name: "lwan_job_add", scope: !558, file: !558, line: 113, type: !7757, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !547, retainedNodes: !74)
!7757 = !DISubroutineType(types: !7758)
!7758 = !{null, !1868, !5}
!7759 = !DILocalVariable(name: "cb", arg: 1, scope: !7756, file: !558, line: 113, type: !1868)
!7760 = !DILocation(line: 113, column: 26, scope: !7756)
!7761 = !DILocalVariable(name: "data", arg: 2, scope: !7756, file: !558, line: 113, type: !5)
!7762 = !DILocation(line: 113, column: 49, scope: !7756)
!7763 = !DILocation(line: 115, column: 5, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7765, file: !558, line: 115, column: 5)
!7765 = distinct !DILexicalBlock(scope: !7756, file: !558, line: 115, column: 5)
!7766 = !DILocation(line: 115, column: 5, scope: !7765)
!7767 = !DILocalVariable(name: "job", scope: !7756, file: !558, line: 117, type: !7635)
!7768 = !DILocation(line: 117, column: 19, scope: !7756)
!7769 = !DILocation(line: 117, column: 25, scope: !7756)
!7770 = !DILocation(line: 118, column: 10, scope: !7771)
!7771 = distinct !DILexicalBlock(scope: !7756, file: !558, line: 118, column: 9)
!7772 = !DILocation(line: 118, column: 9, scope: !7756)
!7773 = !DILocation(line: 119, column: 9, scope: !7771)
!7774 = !DILocation(line: 121, column: 15, scope: !7756)
!7775 = !DILocation(line: 121, column: 5, scope: !7756)
!7776 = !DILocation(line: 121, column: 10, scope: !7756)
!7777 = !DILocation(line: 121, column: 13, scope: !7756)
!7778 = !DILocation(line: 122, column: 17, scope: !7756)
!7779 = !DILocation(line: 122, column: 5, scope: !7756)
!7780 = !DILocation(line: 122, column: 10, scope: !7756)
!7781 = !DILocation(line: 122, column: 15, scope: !7756)
!7782 = !DILocation(line: 124, column: 9, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7756, file: !558, line: 124, column: 9)
!7784 = !DILocation(line: 124, column: 9, scope: !7756)
!7785 = !DILocation(line: 125, column: 26, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !7783, file: !558, line: 124, column: 52)
!7787 = !DILocation(line: 125, column: 31, scope: !7786)
!7788 = !DILocation(line: 125, column: 9, scope: !7786)
!7789 = !DILocation(line: 126, column: 9, scope: !7786)
!7790 = !DILocation(line: 127, column: 5, scope: !7786)
!7791 = !DILocation(line: 128, column: 9, scope: !7792)
!7792 = distinct !DILexicalBlock(scope: !7783, file: !558, line: 127, column: 12)
!7793 = !DILocation(line: 129, column: 14, scope: !7792)
!7794 = !DILocation(line: 129, column: 9, scope: !7792)
!7795 = !DILocation(line: 131, column: 1, scope: !7756)
!7796 = distinct !DISubprogram(name: "list_add", scope: !313, file: !313, line: 327, type: !7797, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !547, retainedNodes: !74)
!7797 = !DISubroutineType(types: !7798)
!7798 = !{null, !7602, !550}
!7799 = !DILocalVariable(name: "h", arg: 1, scope: !7796, file: !313, line: 327, type: !7602)
!7800 = !DILocation(line: 327, column: 47, scope: !7796)
!7801 = !DILocalVariable(name: "n", arg: 2, scope: !7796, file: !313, line: 327, type: !550)
!7802 = !DILocation(line: 327, column: 68, scope: !7796)
!7803 = !DILocation(line: 329, column: 12, scope: !7796)
!7804 = !DILocation(line: 329, column: 15, scope: !7796)
!7805 = !DILocation(line: 329, column: 17, scope: !7796)
!7806 = !DILocation(line: 329, column: 2, scope: !7796)
!7807 = !DILocation(line: 329, column: 5, scope: !7796)
!7808 = !DILocation(line: 329, column: 10, scope: !7796)
!7809 = !DILocation(line: 330, column: 13, scope: !7796)
!7810 = !DILocation(line: 330, column: 16, scope: !7796)
!7811 = !DILocation(line: 330, column: 2, scope: !7796)
!7812 = !DILocation(line: 330, column: 5, scope: !7796)
!7813 = !DILocation(line: 330, column: 10, scope: !7796)
!7814 = !DILocation(line: 331, column: 20, scope: !7796)
!7815 = !DILocation(line: 331, column: 2, scope: !7796)
!7816 = !DILocation(line: 331, column: 5, scope: !7796)
!7817 = !DILocation(line: 331, column: 7, scope: !7796)
!7818 = !DILocation(line: 331, column: 13, scope: !7796)
!7819 = !DILocation(line: 331, column: 18, scope: !7796)
!7820 = !DILocation(line: 332, column: 14, scope: !7796)
!7821 = !DILocation(line: 332, column: 2, scope: !7796)
!7822 = !DILocation(line: 332, column: 5, scope: !7796)
!7823 = !DILocation(line: 332, column: 7, scope: !7796)
!7824 = !DILocation(line: 332, column: 12, scope: !7796)
!7825 = !DILocation(line: 333, column: 8, scope: !7796)
!7826 = !DILocation(line: 334, column: 1, scope: !7796)
!7827 = distinct !DISubprogram(name: "lwan_job_del", scope: !558, file: !558, line: 133, type: !7757, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !547, retainedNodes: !74)
!7828 = !DILocalVariable(name: "cb", arg: 1, scope: !7827, file: !558, line: 133, type: !1868)
!7829 = !DILocation(line: 133, column: 26, scope: !7827)
!7830 = !DILocalVariable(name: "data", arg: 2, scope: !7827, file: !558, line: 133, type: !5)
!7831 = !DILocation(line: 133, column: 49, scope: !7827)
!7832 = !DILocalVariable(name: "node", scope: !7827, file: !558, line: 135, type: !7635)
!7833 = !DILocation(line: 135, column: 19, scope: !7827)
!7834 = !DILocalVariable(name: "next", scope: !7827, file: !558, line: 135, type: !7635)
!7835 = !DILocation(line: 135, column: 26, scope: !7827)
!7836 = !DILocation(line: 137, column: 5, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7838, file: !558, line: 137, column: 5)
!7838 = distinct !DILexicalBlock(scope: !7827, file: !558, line: 137, column: 5)
!7839 = !DILocation(line: 137, column: 5, scope: !7838)
!7840 = !DILocation(line: 139, column: 9, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7827, file: !558, line: 139, column: 9)
!7842 = !DILocation(line: 139, column: 9, scope: !7827)
!7843 = !DILocation(line: 140, column: 9, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7845, file: !558, line: 140, column: 9)
!7845 = distinct !DILexicalBlock(scope: !7841, file: !558, line: 139, column: 52)
!7846 = !DILocation(line: 140, column: 9, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7844, file: !558, line: 140, column: 9)
!7848 = !DILocation(line: 141, column: 17, scope: !7849)
!7849 = distinct !DILexicalBlock(scope: !7850, file: !558, line: 141, column: 17)
!7850 = distinct !DILexicalBlock(scope: !7847, file: !558, line: 140, column: 53)
!7851 = !DILocation(line: 141, column: 23, scope: !7849)
!7852 = !DILocation(line: 141, column: 29, scope: !7849)
!7853 = !DILocation(line: 141, column: 20, scope: !7849)
!7854 = !DILocation(line: 141, column: 32, scope: !7849)
!7855 = !DILocation(line: 141, column: 35, scope: !7849)
!7856 = !DILocation(line: 141, column: 43, scope: !7849)
!7857 = !DILocation(line: 141, column: 49, scope: !7849)
!7858 = !DILocation(line: 141, column: 40, scope: !7849)
!7859 = !DILocation(line: 141, column: 17, scope: !7850)
!7860 = !DILocation(line: 142, column: 27, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7849, file: !558, line: 141, column: 55)
!7862 = !DILocation(line: 142, column: 33, scope: !7861)
!7863 = !DILocation(line: 142, column: 17, scope: !7861)
!7864 = !DILocation(line: 143, column: 22, scope: !7861)
!7865 = !DILocation(line: 143, column: 17, scope: !7861)
!7866 = !DILocation(line: 144, column: 13, scope: !7861)
!7867 = !DILocation(line: 145, column: 9, scope: !7850)
!7868 = distinct !{!7868, !7843, !7869, !3203}
!7869 = !DILocation(line: 145, column: 9, scope: !7844)
!7870 = !DILocation(line: 146, column: 9, scope: !7845)
!7871 = !DILocation(line: 147, column: 5, scope: !7845)
!7872 = !DILocation(line: 148, column: 1, scope: !7827)
!7873 = distinct !DISubprogram(name: "lwan_set_url_map", scope: !642, file: !642, line: 249, type: !7874, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !659, retainedNodes: !74)
!7874 = !DISubroutineType(types: !7875)
!7875 = !{null, !7876, !7935}
!7876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7877, size: 64)
!7877 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_t", file: !262, line: 103, baseType: !7878)
!7878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_t_", file: !262, line: 275, size: 640, elements: !7879)
!7879 = !{!7880, !7901, !7926, !7932, !7933, !7934}
!7880 = !DIDerivedType(tag: DW_TAG_member, name: "url_map_trie", scope: !7878, file: !262, line: 276, baseType: !7881, size: 128)
!7881 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_t", file: !381, line: 25, baseType: !7882)
!7882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_t_", file: !381, line: 41, size: 128, elements: !7883)
!7883 = !{!7884, !7900}
!7884 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !7882, file: !381, line: 42, baseType: !7885, size: 64)
!7885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7886, size: 64)
!7886 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_node_t", file: !381, line: 26, baseType: !7887)
!7887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_node_t_", file: !381, line: 29, size: 640, elements: !7888)
!7888 = !{!7889, !7891, !7899}
!7889 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7887, file: !381, line: 30, baseType: !7890, size: 512)
!7890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7885, size: 512, elements: !391)
!7891 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !7887, file: !381, line: 31, baseType: !7892, size: 64, offset: 512)
!7892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7893, size: 64)
!7893 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_leaf_t", file: !381, line: 27, baseType: !7894)
!7894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_leaf_t_", file: !381, line: 35, size: 192, elements: !7895)
!7895 = !{!7896, !7897, !7898}
!7896 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !7894, file: !381, line: 36, baseType: !61, size: 64)
!7897 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7894, file: !381, line: 37, baseType: !5, size: 64, offset: 64)
!7898 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7894, file: !381, line: 38, baseType: !7892, size: 64, offset: 128)
!7899 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !7887, file: !381, line: 32, baseType: !37, size: 32, offset: 576)
!7900 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !7882, file: !381, line: 43, baseType: !403, size: 64, offset: 64)
!7901 = !DIDerivedType(tag: DW_TAG_member, name: "conns", scope: !7878, file: !262, line: 277, baseType: !7902, size: 64, offset: 128)
!7902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7903, size: 64)
!7903 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_connection_t", file: !262, line: 112, baseType: !7904)
!7904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_connection_t_", file: !262, line: 196, size: 256, elements: !7905)
!7905 = !{!7906, !7907, !7908, !7909, !7924, !7925}
!7906 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7904, file: !262, line: 199, baseType: !362, size: 32)
!7907 = !DIDerivedType(tag: DW_TAG_member, name: "time_to_die", scope: !7904, file: !262, line: 200, baseType: !28, size: 32, offset: 32)
!7908 = !DIDerivedType(tag: DW_TAG_member, name: "coro", scope: !7904, file: !262, line: 201, baseType: !365, size: 64, offset: 64)
!7909 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !7904, file: !262, line: 202, baseType: !7910, size: 64, offset: 128)
!7910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7911, size: 64)
!7911 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_thread_t", file: !262, line: 108, baseType: !7912)
!7912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_thread_t_", file: !262, line: 253, size: 832, elements: !7913)
!7913 = !{!7914, !7915, !7921, !7922, !7923}
!7914 = !DIDerivedType(tag: DW_TAG_member, name: "lwan", scope: !7912, file: !262, line: 254, baseType: !7876, size: 64)
!7915 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !7912, file: !262, line: 259, baseType: !7916, size: 576, offset: 64)
!7916 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7912, file: !262, line: 255, size: 576, elements: !7917)
!7917 = !{!7918, !7919, !7920}
!7918 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !7916, file: !262, line: 256, baseType: !430, size: 240)
!7919 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !7916, file: !262, line: 257, baseType: !430, size: 240, offset: 240)
!7920 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !7916, file: !262, line: 258, baseType: !322, size: 64, offset: 512)
!7921 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_fd", scope: !7912, file: !262, line: 261, baseType: !37, size: 32, offset: 640)
!7922 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_fd", scope: !7912, file: !262, line: 262, baseType: !435, size: 64, offset: 672)
!7923 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !7912, file: !262, line: 263, baseType: !437, size: 64, offset: 768)
!7924 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7904, file: !262, line: 203, baseType: !37, size: 32, offset: 192)
!7925 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7904, file: !262, line: 203, baseType: !37, size: 32, offset: 224)
!7926 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !7878, file: !262, line: 283, baseType: !7927, size: 128, offset: 192)
!7927 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7878, file: !262, line: 279, size: 128, elements: !7928)
!7928 = !{!7929, !7930, !7931}
!7929 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !7927, file: !262, line: 280, baseType: !7910, size: 64)
!7930 = !DIDerivedType(tag: DW_TAG_member, name: "max_fd", scope: !7927, file: !262, line: 281, baseType: !28, size: 32, offset: 64)
!7931 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7927, file: !262, line: 282, baseType: !413, size: 16, offset: 96)
!7932 = !DIDerivedType(tag: DW_TAG_member, name: "module_registry", scope: !7878, file: !262, line: 285, baseType: !331, size: 64, offset: 320)
!7933 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !7878, file: !262, line: 286, baseType: !1110, size: 192, offset: 384)
!7934 = !DIDerivedType(tag: DW_TAG_member, name: "main_socket", scope: !7878, file: !262, line: 287, baseType: !37, size: 32, offset: 576)
!7935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7936, size: 64)
!7936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7937)
!7937 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_url_map_t", file: !262, line: 109, baseType: !7938)
!7938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_url_map_t_", file: !262, line: 236, size: 576, elements: !7939)
!7939 = !{!7940, !8013, !8014, !8015, !8016, !8017, !8029, !8030}
!7940 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !7938, file: !262, line: 237, baseType: !7941, size: 64)
!7941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7942, size: 64)
!7942 = !DISubroutineType(types: !7943)
!7943 = !{!497, !7944, !8012, !5}
!7944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7945, size: 64)
!7945 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_request_t", file: !262, line: 106, baseType: !7946)
!7946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_request_t_", file: !262, line: 206, size: 1280, elements: !7947)
!7947 = !{!7948, !7949, !7950, !7956, !7957, !7958, !7969, !7970, !7980}
!7948 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7946, file: !262, line: 207, baseType: !347, size: 32)
!7949 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !7946, file: !262, line: 208, baseType: !37, size: 32, offset: 32)
!7950 = !DIDerivedType(tag: DW_TAG_member, name: "url", scope: !7946, file: !262, line: 209, baseType: !7951, size: 128, offset: 64)
!7951 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_value_t", file: !262, line: 110, baseType: !7952)
!7952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_value_t_", file: !262, line: 191, size: 128, elements: !7953)
!7953 = !{!7954, !7955}
!7954 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !7952, file: !262, line: 192, baseType: !61, size: 64)
!7955 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7952, file: !262, line: 193, baseType: !6, size: 64, offset: 64)
!7956 = !DIDerivedType(tag: DW_TAG_member, name: "original_url", scope: !7946, file: !262, line: 210, baseType: !7951, size: 128, offset: 192)
!7957 = !DIDerivedType(tag: DW_TAG_member, name: "conn", scope: !7946, file: !262, line: 211, baseType: !7902, size: 64, offset: 320)
!7958 = !DIDerivedType(tag: DW_TAG_member, name: "query_params", scope: !7946, file: !262, line: 216, baseType: !7959, size: 128, offset: 384)
!7959 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7946, file: !262, line: 213, size: 128, elements: !7960)
!7960 = !{!7961, !7968}
!7961 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7959, file: !262, line: 214, baseType: !7962, size: 64)
!7962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7963, size: 64)
!7963 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_key_value_t", file: !262, line: 105, baseType: !7964)
!7964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_key_value_t_", file: !262, line: 173, size: 128, elements: !7965)
!7965 = !{!7966, !7967}
!7966 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !7964, file: !262, line: 174, baseType: !61, size: 64)
!7967 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !7964, file: !262, line: 175, baseType: !61, size: 64, offset: 64)
!7968 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7959, file: !262, line: 215, baseType: !6, size: 64, offset: 64)
!7969 = !DIDerivedType(tag: DW_TAG_member, name: "post_data", scope: !7946, file: !262, line: 216, baseType: !7959, size: 128, offset: 512)
!7970 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !7946, file: !262, line: 223, baseType: !7971, size: 192, offset: 640)
!7971 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7946, file: !262, line: 217, size: 192, elements: !7972)
!7972 = !{!7973, !7974}
!7973 = !DIDerivedType(tag: DW_TAG_member, name: "if_modified_since", scope: !7971, file: !262, line: 218, baseType: !322, size: 64)
!7974 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !7971, file: !262, line: 222, baseType: !7975, size: 128, offset: 64)
!7975 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7971, file: !262, line: 219, size: 128, elements: !7976)
!7976 = !{!7977, !7979}
!7977 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !7975, file: !262, line: 220, baseType: !7978, size: 64)
!7978 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !3048, line: 243, baseType: !463)
!7979 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !7975, file: !262, line: 221, baseType: !7978, size: 64, offset: 64)
!7980 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !7946, file: !262, line: 224, baseType: !7981, size: 448, offset: 832)
!7981 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_response_t", file: !262, line: 107, baseType: !7982)
!7982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_response_t_", file: !262, line: 178, size: 448, elements: !7983)
!7983 = !{!7984, !8000, !8001, !8002, !8003}
!7984 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !7982, file: !262, line: 179, baseType: !7985, size: 64)
!7985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7986, size: 64)
!7986 = !DIDerivedType(tag: DW_TAG_typedef, name: "strbuf_t", file: !472, line: 25, baseType: !7987)
!7987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "strbuf_t_", file: !472, line: 27, size: 256, elements: !7988)
!7988 = !{!7989, !7994, !7999}
!7989 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !7987, file: !472, line: 31, baseType: !7990, size: 64)
!7990 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7987, file: !472, line: 28, size: 64, elements: !7991)
!7991 = !{!7992, !7993}
!7992 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !7990, file: !472, line: 29, baseType: !61, size: 64)
!7993 = !DIDerivedType(tag: DW_TAG_member, name: "static_buffer", scope: !7990, file: !472, line: 30, baseType: !480, size: 64)
!7994 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7987, file: !472, line: 34, baseType: !7995, size: 128, offset: 64)
!7995 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7987, file: !472, line: 32, size: 128, elements: !7996)
!7996 = !{!7997, !7998}
!7997 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !7995, file: !472, line: 33, baseType: !6, size: 64)
!7998 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !7995, file: !472, line: 33, baseType: !6, size: 64, offset: 64)
!7999 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7987, file: !472, line: 35, baseType: !28, size: 32, offset: 192)
!8000 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !7982, file: !262, line: 180, baseType: !480, size: 64, offset: 64)
!8001 = !DIDerivedType(tag: DW_TAG_member, name: "content_length", scope: !7982, file: !262, line: 181, baseType: !6, size: 64, offset: 128)
!8002 = !DIDerivedType(tag: DW_TAG_member, name: "headers", scope: !7982, file: !262, line: 182, baseType: !7962, size: 64, offset: 192)
!8003 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !7982, file: !262, line: 188, baseType: !8004, size: 192, offset: 256)
!8004 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7982, file: !262, line: 184, size: 192, elements: !8005)
!8005 = !{!8006, !8010, !8011}
!8006 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !8004, file: !262, line: 185, baseType: !8007, size: 64)
!8007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8008, size: 64)
!8008 = !DISubroutineType(types: !8009)
!8009 = !{!497, !7944, !5}
!8010 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8004, file: !262, line: 186, baseType: !5, size: 64, offset: 64)
!8011 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !8004, file: !262, line: 187, baseType: !5, size: 64, offset: 128)
!8012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7981, size: 64)
!8013 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7938, file: !262, line: 238, baseType: !5, size: 64, offset: 64)
!8014 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", scope: !7938, file: !262, line: 240, baseType: !480, size: 64, offset: 128)
!8015 = !DIDerivedType(tag: DW_TAG_member, name: "prefix_len", scope: !7938, file: !262, line: 241, baseType: !6, size: 64, offset: 192)
!8016 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7938, file: !262, line: 242, baseType: !1283, size: 32, offset: 256)
!8017 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !7938, file: !262, line: 244, baseType: !8018, size: 64, offset: 320)
!8018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8019, size: 64)
!8019 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8020)
!8020 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_module_t", file: !262, line: 104, baseType: !8021)
!8021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_module_t_", file: !262, line: 227, size: 384, elements: !8022)
!8022 = !{!8023, !8024, !8025, !8026, !8027, !8028}
!8023 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8021, file: !262, line: 228, baseType: !480, size: 64)
!8024 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !8021, file: !262, line: 229, baseType: !1132, size: 64, offset: 64)
!8025 = !DIDerivedType(tag: DW_TAG_member, name: "init_from_hash", scope: !8021, file: !262, line: 230, baseType: !1136, size: 64, offset: 128)
!8026 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !8021, file: !262, line: 231, baseType: !403, size: 64, offset: 192)
!8027 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !8021, file: !262, line: 232, baseType: !7941, size: 64, offset: 256)
!8028 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8021, file: !262, line: 233, baseType: !1283, size: 32, offset: 320)
!8029 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !7938, file: !262, line: 245, baseType: !5, size: 64, offset: 384)
!8030 = !DIDerivedType(tag: DW_TAG_member, name: "authorization", scope: !7938, file: !262, line: 250, baseType: !8031, size: 128, offset: 448)
!8031 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7938, file: !262, line: 247, size: 128, elements: !8032)
!8032 = !{!8033, !8034}
!8033 = !DIDerivedType(tag: DW_TAG_member, name: "realm", scope: !8031, file: !262, line: 248, baseType: !61, size: 64)
!8034 = !DIDerivedType(tag: DW_TAG_member, name: "password_file", scope: !8031, file: !262, line: 249, baseType: !61, size: 64, offset: 64)
!8035 = !DILocalVariable(name: "l", arg: 1, scope: !7873, file: !642, line: 249, type: !7876)
!8036 = !DILocation(line: 249, column: 31, scope: !7873)
!8037 = !DILocalVariable(name: "map", arg: 2, scope: !7873, file: !642, line: 249, type: !7935)
!8038 = !DILocation(line: 249, column: 56, scope: !7873)
!8039 = !DILocation(line: 251, column: 24, scope: !7873)
!8040 = !DILocation(line: 251, column: 27, scope: !7873)
!8041 = !DILocation(line: 251, column: 5, scope: !7873)
!8042 = !DILocation(line: 252, column: 9, scope: !8043)
!8043 = distinct !DILexicalBlock(scope: !7873, file: !642, line: 252, column: 9)
!8044 = !DILocation(line: 252, column: 9, scope: !7873)
!8045 = !DILocation(line: 253, column: 9, scope: !8043)
!8046 = !DILocation(line: 255, column: 5, scope: !7873)
!8047 = !DILocation(line: 255, column: 12, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !8049, file: !642, line: 255, column: 5)
!8049 = distinct !DILexicalBlock(scope: !7873, file: !642, line: 255, column: 5)
!8050 = !DILocation(line: 255, column: 17, scope: !8048)
!8051 = !DILocation(line: 255, column: 5, scope: !8049)
!8052 = !DILocalVariable(name: "copy", scope: !8053, file: !642, line: 256, type: !8054)
!8053 = distinct !DILexicalBlock(scope: !8048, file: !642, line: 255, column: 32)
!8054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7937, size: 64)
!8055 = !DILocation(line: 256, column: 25, scope: !8053)
!8056 = !DILocation(line: 256, column: 45, scope: !8053)
!8057 = !DILocation(line: 256, column: 48, scope: !8053)
!8058 = !DILocation(line: 256, column: 68, scope: !8053)
!8059 = !DILocation(line: 256, column: 32, scope: !8053)
!8060 = !DILocation(line: 258, column: 13, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8053, file: !642, line: 258, column: 13)
!8062 = !DILocation(line: 258, column: 13, scope: !8053)
!8063 = !DILocation(line: 259, column: 13, scope: !8061)
!8064 = !DILocation(line: 261, column: 13, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8053, file: !642, line: 261, column: 13)
!8066 = !DILocation(line: 261, column: 19, scope: !8065)
!8067 = !DILocation(line: 261, column: 26, scope: !8065)
!8068 = !DILocation(line: 261, column: 29, scope: !8065)
!8069 = !DILocation(line: 261, column: 35, scope: !8065)
!8070 = !DILocation(line: 261, column: 43, scope: !8065)
!8071 = !DILocation(line: 261, column: 13, scope: !8053)
!8072 = !DILocation(line: 262, column: 26, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8065, file: !642, line: 261, column: 49)
!8074 = !DILocation(line: 262, column: 32, scope: !8073)
!8075 = !DILocation(line: 262, column: 40, scope: !8073)
!8076 = !DILocation(line: 262, column: 45, scope: !8073)
!8077 = !DILocation(line: 262, column: 51, scope: !8073)
!8078 = !DILocation(line: 262, column: 13, scope: !8073)
!8079 = !DILocation(line: 262, column: 19, scope: !8073)
!8080 = !DILocation(line: 262, column: 24, scope: !8073)
!8081 = !DILocation(line: 263, column: 27, scope: !8073)
!8082 = !DILocation(line: 263, column: 33, scope: !8073)
!8083 = !DILocation(line: 263, column: 41, scope: !8073)
!8084 = !DILocation(line: 263, column: 13, scope: !8073)
!8085 = !DILocation(line: 263, column: 19, scope: !8073)
!8086 = !DILocation(line: 263, column: 25, scope: !8073)
!8087 = !DILocation(line: 264, column: 29, scope: !8073)
!8088 = !DILocation(line: 264, column: 35, scope: !8073)
!8089 = !DILocation(line: 264, column: 43, scope: !8073)
!8090 = !DILocation(line: 264, column: 13, scope: !8073)
!8091 = !DILocation(line: 264, column: 19, scope: !8073)
!8092 = !DILocation(line: 264, column: 27, scope: !8073)
!8093 = !DILocation(line: 265, column: 9, scope: !8073)
!8094 = !DILocation(line: 266, column: 13, scope: !8095)
!8095 = distinct !DILexicalBlock(scope: !8065, file: !642, line: 265, column: 16)
!8096 = !DILocation(line: 266, column: 19, scope: !8095)
!8097 = !DILocation(line: 266, column: 25, scope: !8095)
!8098 = !DILocation(line: 268, column: 5, scope: !8053)
!8099 = !DILocation(line: 255, column: 28, scope: !8048)
!8100 = !DILocation(line: 255, column: 5, scope: !8048)
!8101 = distinct !{!8101, !8051, !8102, !3203}
!8102 = !DILocation(line: 268, column: 5, scope: !8049)
!8103 = !DILocation(line: 269, column: 1, scope: !7873)
!8104 = distinct !DISubprogram(name: "destroy_urlmap", scope: !642, file: !642, line: 88, type: !404, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !659, retainedNodes: !74)
!8105 = !DILocalVariable(name: "data", arg: 1, scope: !8104, file: !642, line: 88, type: !5)
!8106 = !DILocation(line: 88, column: 34, scope: !8104)
!8107 = !DILocalVariable(name: "url_map", scope: !8104, file: !642, line: 90, type: !8054)
!8108 = !DILocation(line: 90, column: 21, scope: !8104)
!8109 = !DILocation(line: 90, column: 31, scope: !8104)
!8110 = !DILocation(line: 92, column: 9, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8104, file: !642, line: 92, column: 9)
!8112 = !DILocation(line: 92, column: 18, scope: !8111)
!8113 = !DILocation(line: 92, column: 9, scope: !8104)
!8114 = !DILocalVariable(name: "module", scope: !8115, file: !642, line: 93, type: !8018)
!8115 = distinct !DILexicalBlock(scope: !8111, file: !642, line: 92, column: 26)
!8116 = !DILocation(line: 93, column: 30, scope: !8115)
!8117 = !DILocation(line: 93, column: 39, scope: !8115)
!8118 = !DILocation(line: 93, column: 48, scope: !8115)
!8119 = !DILocation(line: 94, column: 13, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8115, file: !642, line: 94, column: 13)
!8121 = !DILocation(line: 94, column: 21, scope: !8120)
!8122 = !DILocation(line: 94, column: 13, scope: !8115)
!8123 = !DILocation(line: 95, column: 13, scope: !8120)
!8124 = !DILocation(line: 95, column: 21, scope: !8120)
!8125 = !DILocation(line: 95, column: 30, scope: !8120)
!8126 = !DILocation(line: 95, column: 39, scope: !8120)
!8127 = !DILocation(line: 96, column: 5, scope: !8115)
!8128 = !DILocation(line: 96, column: 16, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8111, file: !642, line: 96, column: 16)
!8130 = !DILocation(line: 96, column: 25, scope: !8129)
!8131 = !DILocation(line: 96, column: 16, scope: !8111)
!8132 = !DILocation(line: 97, column: 19, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8129, file: !642, line: 96, column: 31)
!8134 = !DILocation(line: 97, column: 28, scope: !8133)
!8135 = !DILocation(line: 97, column: 9, scope: !8133)
!8136 = !DILocation(line: 98, column: 5, scope: !8133)
!8137 = !DILocation(line: 100, column: 10, scope: !8104)
!8138 = !DILocation(line: 100, column: 19, scope: !8104)
!8139 = !DILocation(line: 100, column: 33, scope: !8104)
!8140 = !DILocation(line: 100, column: 5, scope: !8104)
!8141 = !DILocation(line: 101, column: 10, scope: !8104)
!8142 = !DILocation(line: 101, column: 19, scope: !8104)
!8143 = !DILocation(line: 101, column: 33, scope: !8104)
!8144 = !DILocation(line: 101, column: 5, scope: !8104)
!8145 = !DILocation(line: 102, column: 18, scope: !8104)
!8146 = !DILocation(line: 102, column: 27, scope: !8104)
!8147 = !DILocation(line: 102, column: 5, scope: !8104)
!8148 = !DILocation(line: 103, column: 10, scope: !8104)
!8149 = !DILocation(line: 103, column: 5, scope: !8104)
!8150 = !DILocation(line: 104, column: 1, scope: !8104)
!8151 = distinct !DISubprogram(name: "add_url_map", scope: !642, file: !642, line: 106, type: !8152, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !659, retainedNodes: !74)
!8152 = !DISubroutineType(types: !8153)
!8153 = !{!8054, !8154, !480, !7935}
!8154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7881, size: 64)
!8155 = !DILocalVariable(name: "t", arg: 1, scope: !8151, file: !642, line: 106, type: !8154)
!8156 = !DILocation(line: 106, column: 49, scope: !8151)
!8157 = !DILocalVariable(name: "prefix", arg: 2, scope: !8151, file: !642, line: 106, type: !480)
!8158 = !DILocation(line: 106, column: 64, scope: !8151)
!8159 = !DILocalVariable(name: "map", arg: 3, scope: !8151, file: !642, line: 106, type: !7935)
!8160 = !DILocation(line: 106, column: 94, scope: !8151)
!8161 = !DILocalVariable(name: "copy", scope: !8151, file: !642, line: 108, type: !8054)
!8162 = !DILocation(line: 108, column: 21, scope: !8151)
!8163 = !DILocation(line: 108, column: 28, scope: !8151)
!8164 = !DILocation(line: 110, column: 10, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8151, file: !642, line: 110, column: 9)
!8166 = !DILocation(line: 110, column: 9, scope: !8151)
!8167 = !DILocation(line: 111, column: 9, scope: !8165)
!8168 = !DILocation(line: 113, column: 12, scope: !8151)
!8169 = !DILocation(line: 113, column: 18, scope: !8151)
!8170 = !DILocation(line: 113, column: 5, scope: !8151)
!8171 = !DILocation(line: 115, column: 27, scope: !8151)
!8172 = !DILocation(line: 115, column: 36, scope: !8151)
!8173 = !DILocation(line: 115, column: 45, scope: !8151)
!8174 = !DILocation(line: 115, column: 51, scope: !8151)
!8175 = !DILocation(line: 115, column: 20, scope: !8151)
!8176 = !DILocation(line: 115, column: 5, scope: !8151)
!8177 = !DILocation(line: 115, column: 11, scope: !8151)
!8178 = !DILocation(line: 115, column: 18, scope: !8151)
!8179 = !DILocation(line: 116, column: 31, scope: !8151)
!8180 = !DILocation(line: 116, column: 37, scope: !8151)
!8181 = !DILocation(line: 116, column: 24, scope: !8151)
!8182 = !DILocation(line: 116, column: 5, scope: !8151)
!8183 = !DILocation(line: 116, column: 11, scope: !8151)
!8184 = !DILocation(line: 116, column: 22, scope: !8151)
!8185 = !DILocation(line: 117, column: 19, scope: !8151)
!8186 = !DILocation(line: 117, column: 22, scope: !8151)
!8187 = !DILocation(line: 117, column: 28, scope: !8151)
!8188 = !DILocation(line: 117, column: 36, scope: !8151)
!8189 = !DILocation(line: 117, column: 5, scope: !8151)
!8190 = !DILocation(line: 119, column: 12, scope: !8151)
!8191 = !DILocation(line: 119, column: 5, scope: !8151)
!8192 = distinct !DISubprogram(name: "get_config_path", scope: !642, file: !642, line: 301, type: !8193, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !659, retainedNodes: !74)
!8193 = !DISubroutineType(types: !8194)
!8194 = !{!480, !61}
!8195 = !DILocalVariable(name: "path_buf", arg: 1, scope: !8192, file: !642, line: 301, type: !61)
!8196 = !DILocation(line: 301, column: 35, scope: !8192)
!8197 = !DILocalVariable(name: "path", scope: !8192, file: !642, line: 303, type: !61)
!8198 = !DILocation(line: 303, column: 11, scope: !8192)
!8199 = !DILocalVariable(name: "path_len", scope: !8192, file: !642, line: 304, type: !3050)
!8200 = !DILocation(line: 304, column: 13, scope: !8192)
!8201 = !DILocation(line: 308, column: 43, scope: !8192)
!8202 = !DILocation(line: 308, column: 16, scope: !8192)
!8203 = !DILocation(line: 308, column: 14, scope: !8192)
!8204 = !DILocation(line: 309, column: 9, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !8192, file: !642, line: 309, column: 9)
!8206 = !DILocation(line: 309, column: 18, scope: !8205)
!8207 = !DILocation(line: 309, column: 9, scope: !8192)
!8208 = !DILocation(line: 310, column: 9, scope: !8205)
!8209 = !DILocation(line: 311, column: 5, scope: !8192)
!8210 = !DILocation(line: 311, column: 14, scope: !8192)
!8211 = !DILocation(line: 311, column: 24, scope: !8192)
!8212 = !DILocation(line: 312, column: 20, scope: !8192)
!8213 = !DILocation(line: 312, column: 12, scope: !8192)
!8214 = !DILocation(line: 312, column: 10, scope: !8192)
!8215 = !DILocation(line: 313, column: 10, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8192, file: !642, line: 313, column: 9)
!8217 = !DILocation(line: 313, column: 9, scope: !8192)
!8218 = !DILocation(line: 314, column: 9, scope: !8216)
!8219 = !DILocalVariable(name: "ret", scope: !8192, file: !642, line: 315, type: !37)
!8220 = !DILocation(line: 315, column: 9, scope: !8192)
!8221 = !DILocation(line: 315, column: 24, scope: !8192)
!8222 = !DILocation(line: 315, column: 55, scope: !8192)
!8223 = !DILocation(line: 315, column: 60, scope: !8192)
!8224 = !DILocation(line: 315, column: 15, scope: !8192)
!8225 = !DILocation(line: 316, column: 9, scope: !8226)
!8226 = distinct !DILexicalBlock(scope: !8192, file: !642, line: 316, column: 9)
!8227 = !DILocation(line: 316, column: 13, scope: !8226)
!8228 = !DILocation(line: 316, column: 17, scope: !8226)
!8229 = !DILocation(line: 316, column: 20, scope: !8226)
!8230 = !DILocation(line: 316, column: 24, scope: !8226)
!8231 = !DILocation(line: 316, column: 9, scope: !8192)
!8232 = !DILocation(line: 317, column: 9, scope: !8226)
!8233 = !DILocation(line: 319, column: 12, scope: !8192)
!8234 = !DILocation(line: 319, column: 5, scope: !8192)
!8235 = !DILabel(scope: !8192, name: "out", file: !642, line: 321)
!8236 = !DILocation(line: 321, column: 1, scope: !8192)
!8237 = !DILocation(line: 322, column: 5, scope: !8192)
!8238 = !DILocation(line: 323, column: 1, scope: !8192)
!8239 = distinct !DISubprogram(name: "lwan_init", scope: !642, file: !642, line: 434, type: !8240, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !659, retainedNodes: !74)
!8240 = !DISubroutineType(types: !8241)
!8241 = !{null, !7876}
!8242 = !DILocalVariable(name: "l", arg: 1, scope: !8239, file: !642, line: 434, type: !7876)
!8243 = !DILocation(line: 434, column: 19, scope: !8239)
!8244 = !DILocation(line: 436, column: 27, scope: !8239)
!8245 = !DILocation(line: 436, column: 5, scope: !8239)
!8246 = !DILocation(line: 437, column: 1, scope: !8239)
!8247 = distinct !DISubprogram(name: "lwan_init_with_config", scope: !642, file: !642, line: 446, type: !8248, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !659, retainedNodes: !74)
!8248 = !DISubroutineType(types: !8249)
!8249 = !{null, !7876, !8250}
!8250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64)
!8251 = !DILocalVariable(name: "l", arg: 1, scope: !8247, file: !642, line: 446, type: !7876)
!8252 = !DILocation(line: 446, column: 31, scope: !8247)
!8253 = !DILocalVariable(name: "config", arg: 2, scope: !8247, file: !642, line: 446, type: !8250)
!8254 = !DILocation(line: 446, column: 55, scope: !8247)
!8255 = !DILocation(line: 449, column: 12, scope: !8247)
!8256 = !DILocation(line: 449, column: 5, scope: !8247)
!8257 = !DILocation(line: 450, column: 13, scope: !8247)
!8258 = !DILocation(line: 450, column: 16, scope: !8247)
!8259 = !DILocation(line: 450, column: 24, scope: !8247)
!8260 = !DILocation(line: 450, column: 5, scope: !8247)
!8261 = !DILocation(line: 454, column: 22, scope: !8247)
!8262 = !DILocation(line: 454, column: 5, scope: !8247)
!8263 = !DILocation(line: 459, column: 5, scope: !8247)
!8264 = !DILocation(line: 460, column: 5, scope: !8247)
!8265 = !DILocation(line: 461, column: 5, scope: !8247)
!8266 = !DILocation(line: 463, column: 22, scope: !8247)
!8267 = !DILocation(line: 463, column: 5, scope: !8247)
!8268 = !DILocation(line: 464, column: 26, scope: !8247)
!8269 = !DILocation(line: 464, column: 29, scope: !8247)
!8270 = !DILocation(line: 464, column: 5, scope: !8247)
!8271 = !DILocation(line: 465, column: 26, scope: !8247)
!8272 = !DILocation(line: 465, column: 29, scope: !8247)
!8273 = !DILocation(line: 465, column: 5, scope: !8247)
!8274 = !DILocation(line: 471, column: 9, scope: !8275)
!8275 = distinct !DILexicalBlock(scope: !8247, file: !642, line: 471, column: 9)
!8276 = !DILocation(line: 471, column: 16, scope: !8275)
!8277 = !DILocation(line: 471, column: 9, scope: !8247)
!8278 = !DILocation(line: 472, column: 32, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8280, file: !642, line: 472, column: 13)
!8280 = distinct !DILexicalBlock(scope: !8275, file: !642, line: 471, column: 36)
!8281 = !DILocation(line: 472, column: 14, scope: !8279)
!8282 = !DILocation(line: 472, column: 13, scope: !8280)
!8283 = !DILocation(line: 473, column: 13, scope: !8279)
!8284 = !DILocation(line: 474, column: 5, scope: !8280)
!8285 = !DILocation(line: 477, column: 5, scope: !8247)
!8286 = !DILocation(line: 479, column: 10, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8247, file: !642, line: 479, column: 9)
!8288 = !DILocation(line: 479, column: 13, scope: !8287)
!8289 = !DILocation(line: 479, column: 20, scope: !8287)
!8290 = !DILocation(line: 479, column: 9, scope: !8247)
!8291 = !DILocation(line: 480, column: 27, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !8287, file: !642, line: 479, column: 31)
!8293 = !DILocation(line: 480, column: 9, scope: !8292)
!8294 = !DILocation(line: 480, column: 12, scope: !8292)
!8295 = !DILocation(line: 480, column: 19, scope: !8292)
!8296 = !DILocation(line: 480, column: 25, scope: !8292)
!8297 = !DILocation(line: 481, column: 13, scope: !8298)
!8298 = distinct !DILexicalBlock(scope: !8292, file: !642, line: 481, column: 13)
!8299 = !DILocation(line: 481, column: 16, scope: !8298)
!8300 = !DILocation(line: 481, column: 23, scope: !8298)
!8301 = !DILocation(line: 481, column: 29, scope: !8298)
!8302 = !DILocation(line: 481, column: 13, scope: !8292)
!8303 = !DILocation(line: 482, column: 13, scope: !8298)
!8304 = !DILocation(line: 482, column: 16, scope: !8298)
!8305 = !DILocation(line: 482, column: 23, scope: !8298)
!8306 = !DILocation(line: 482, column: 29, scope: !8298)
!8307 = !DILocation(line: 483, column: 5, scope: !8292)
!8308 = !DILocation(line: 484, column: 27, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8287, file: !642, line: 483, column: 12)
!8310 = !DILocation(line: 484, column: 30, scope: !8309)
!8311 = !DILocation(line: 484, column: 37, scope: !8309)
!8312 = !DILocation(line: 484, column: 9, scope: !8309)
!8313 = !DILocation(line: 484, column: 12, scope: !8309)
!8314 = !DILocation(line: 484, column: 19, scope: !8309)
!8315 = !DILocation(line: 484, column: 25, scope: !8309)
!8316 = !DILocalVariable(name: "max_open_files", scope: !8247, file: !642, line: 487, type: !8317)
!8317 = !DIDerivedType(tag: DW_TAG_typedef, name: "rlim_t", file: !905, line: 131, baseType: !932)
!8318 = !DILocation(line: 487, column: 12, scope: !8247)
!8319 = !DILocation(line: 487, column: 29, scope: !8247)
!8320 = !DILocation(line: 488, column: 26, scope: !8247)
!8321 = !DILocation(line: 488, column: 37, scope: !8247)
!8322 = !DILocation(line: 488, column: 5, scope: !8247)
!8323 = !DILocation(line: 490, column: 34, scope: !8247)
!8324 = !DILocation(line: 490, column: 24, scope: !8247)
!8325 = !DILocation(line: 490, column: 61, scope: !8247)
!8326 = !DILocation(line: 490, column: 64, scope: !8247)
!8327 = !DILocation(line: 490, column: 71, scope: !8247)
!8328 = !DILocation(line: 490, column: 51, scope: !8247)
!8329 = !DILocation(line: 490, column: 49, scope: !8247)
!8330 = !DILocation(line: 490, column: 5, scope: !8247)
!8331 = !DILocation(line: 490, column: 8, scope: !8247)
!8332 = !DILocation(line: 490, column: 15, scope: !8247)
!8333 = !DILocation(line: 490, column: 22, scope: !8247)
!8334 = !DILocation(line: 491, column: 5, scope: !8247)
!8335 = !DILocation(line: 494, column: 5, scope: !8247)
!8336 = !DILocation(line: 495, column: 5, scope: !8247)
!8337 = !DILocation(line: 497, column: 22, scope: !8247)
!8338 = !DILocation(line: 497, column: 5, scope: !8247)
!8339 = !DILocation(line: 498, column: 22, scope: !8247)
!8340 = !DILocation(line: 498, column: 5, scope: !8247)
!8341 = !DILocation(line: 499, column: 5, scope: !8247)
!8342 = !DILocation(line: 500, column: 1, scope: !8247)
!8343 = distinct !DISubprogram(name: "lwan_module_init", scope: !642, file: !642, line: 53, type: !8240, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !659, retainedNodes: !74)
!8344 = !DILocalVariable(name: "l", arg: 1, scope: !8343, file: !642, line: 53, type: !7876)
!8345 = !DILocation(line: 53, column: 38, scope: !8343)
!8346 = !DILocation(line: 55, column: 10, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8343, file: !642, line: 55, column: 9)
!8348 = !DILocation(line: 55, column: 13, scope: !8347)
!8349 = !DILocation(line: 55, column: 9, scope: !8343)
!8350 = !DILocation(line: 56, column: 9, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8347, file: !642, line: 55, column: 30)
!8352 = !DILocation(line: 57, column: 30, scope: !8351)
!8353 = !DILocation(line: 57, column: 9, scope: !8351)
!8354 = !DILocation(line: 57, column: 12, scope: !8351)
!8355 = !DILocation(line: 57, column: 28, scope: !8351)
!8356 = !DILocation(line: 58, column: 5, scope: !8351)
!8357 = !DILocation(line: 59, column: 1, scope: !8343)
!8358 = distinct !DISubprogram(name: "lwan_module_register", scope: !642, file: !642, line: 66, type: !8359, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !659, retainedNodes: !74)
!8359 = !DISubroutineType(types: !8360)
!8360 = !{null, !7876, !8018}
!8361 = !DILocalVariable(name: "l", arg: 1, scope: !8358, file: !642, line: 66, type: !7876)
!8362 = !DILocation(line: 66, column: 42, scope: !8358)
!8363 = !DILocalVariable(name: "module", arg: 2, scope: !8358, file: !642, line: 66, type: !8018)
!8364 = !DILocation(line: 66, column: 66, scope: !8358)
!8365 = !DILocation(line: 68, column: 10, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8358, file: !642, line: 68, column: 9)
!8367 = !DILocation(line: 68, column: 18, scope: !8366)
!8368 = !DILocation(line: 68, column: 9, scope: !8358)
!8369 = !DILocation(line: 69, column: 9, scope: !8366)
!8370 = !DILocation(line: 71, column: 5, scope: !8358)
!8371 = !DILocation(line: 72, column: 14, scope: !8358)
!8372 = !DILocation(line: 72, column: 17, scope: !8358)
!8373 = !DILocation(line: 72, column: 34, scope: !8358)
!8374 = !DILocation(line: 72, column: 42, scope: !8358)
!8375 = !DILocation(line: 72, column: 48, scope: !8358)
!8376 = !DILocation(line: 72, column: 5, scope: !8358)
!8377 = !DILocation(line: 73, column: 1, scope: !8358)
!8378 = distinct !DISubprogram(name: "setup_from_config", scope: !642, file: !642, line: 325, type: !8379, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !659, retainedNodes: !74)
!8379 = !DISubroutineType(types: !8380)
!8380 = !{!341, !7876}
!8381 = !DILocalVariable(name: "lwan", arg: 1, scope: !8378, file: !642, line: 325, type: !7876)
!8382 = !DILocation(line: 325, column: 39, scope: !8378)
!8383 = !DILocalVariable(name: "conf", scope: !8378, file: !642, line: 327, type: !8384)
!8384 = !DIDerivedType(tag: DW_TAG_typedef, name: "config_t", file: !301, line: 32, baseType: !8385)
!8385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "config_t_", file: !301, line: 41, size: 192, elements: !8386)
!8386 = !{!8387, !8422, !8423}
!8387 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !8385, file: !301, line: 42, baseType: !8388, size: 64)
!8388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8389, size: 64)
!8389 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5673, line: 7, baseType: !8390)
!8390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5675, line: 49, size: 1728, elements: !8391)
!8391 = !{!8392, !8393, !8394, !8395, !8396, !8397, !8398, !8399, !8400, !8401, !8402, !8403, !8404, !8405, !8407, !8408, !8409, !8410, !8411, !8412, !8413, !8414, !8415, !8416, !8417, !8418, !8419, !8420, !8421}
!8392 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !8390, file: !5675, line: 51, baseType: !37, size: 32)
!8393 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !8390, file: !5675, line: 54, baseType: !61, size: 64, offset: 64)
!8394 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !8390, file: !5675, line: 55, baseType: !61, size: 64, offset: 128)
!8395 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !8390, file: !5675, line: 56, baseType: !61, size: 64, offset: 192)
!8396 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !8390, file: !5675, line: 57, baseType: !61, size: 64, offset: 256)
!8397 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !8390, file: !5675, line: 58, baseType: !61, size: 64, offset: 320)
!8398 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !8390, file: !5675, line: 59, baseType: !61, size: 64, offset: 384)
!8399 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !8390, file: !5675, line: 60, baseType: !61, size: 64, offset: 448)
!8400 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !8390, file: !5675, line: 61, baseType: !61, size: 64, offset: 512)
!8401 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !8390, file: !5675, line: 64, baseType: !61, size: 64, offset: 576)
!8402 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !8390, file: !5675, line: 65, baseType: !61, size: 64, offset: 640)
!8403 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !8390, file: !5675, line: 66, baseType: !61, size: 64, offset: 704)
!8404 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !8390, file: !5675, line: 68, baseType: !5690, size: 64, offset: 768)
!8405 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !8390, file: !5675, line: 70, baseType: !8406, size: 64, offset: 832)
!8406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8390, size: 64)
!8407 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !8390, file: !5675, line: 72, baseType: !37, size: 32, offset: 896)
!8408 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !8390, file: !5675, line: 73, baseType: !37, size: 32, offset: 928)
!8409 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !8390, file: !5675, line: 74, baseType: !463, size: 64, offset: 960)
!8410 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !8390, file: !5675, line: 77, baseType: !413, size: 16, offset: 1024)
!8411 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !8390, file: !5675, line: 78, baseType: !4708, size: 8, offset: 1040)
!8412 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !8390, file: !5675, line: 79, baseType: !1556, size: 8, offset: 1048)
!8413 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !8390, file: !5675, line: 81, baseType: !5701, size: 64, offset: 1088)
!8414 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !8390, file: !5675, line: 89, baseType: !5704, size: 64, offset: 1152)
!8415 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !8390, file: !5675, line: 91, baseType: !5706, size: 64, offset: 1216)
!8416 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !8390, file: !5675, line: 92, baseType: !5709, size: 64, offset: 1280)
!8417 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !8390, file: !5675, line: 93, baseType: !8406, size: 64, offset: 1344)
!8418 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !8390, file: !5675, line: 94, baseType: !5, size: 64, offset: 1408)
!8419 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !8390, file: !5675, line: 95, baseType: !6, size: 64, offset: 1472)
!8420 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !8390, file: !5675, line: 96, baseType: !37, size: 32, offset: 1536)
!8421 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !8390, file: !5675, line: 98, baseType: !1672, size: 160, offset: 1568)
!8422 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !8385, file: !301, line: 43, baseType: !37, size: 32, offset: 64)
!8423 = !DIDerivedType(tag: DW_TAG_member, name: "error_message", scope: !8385, file: !301, line: 44, baseType: !61, size: 64, offset: 128)
!8424 = !DILocation(line: 327, column: 14, scope: !8378)
!8425 = !DILocalVariable(name: "line", scope: !8378, file: !642, line: 328, type: !8426)
!8426 = !DIDerivedType(tag: DW_TAG_typedef, name: "config_line_t", file: !301, line: 33, baseType: !8427)
!8427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "config_line_t_", file: !301, line: 47, size: 8384, elements: !8428)
!8428 = !{!8429, !8442, !8443}
!8429 = !DIDerivedType(tag: DW_TAG_member, scope: !8427, file: !301, line: 48, baseType: !8430, size: 128)
!8430 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8427, file: !301, line: 48, size: 128, elements: !8431)
!8431 = !{!8432, !8437}
!8432 = !DIDerivedType(tag: DW_TAG_member, name: "section", scope: !8430, file: !301, line: 51, baseType: !8433, size: 128)
!8433 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8430, file: !301, line: 49, size: 128, elements: !8434)
!8434 = !{!8435, !8436}
!8435 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8433, file: !301, line: 50, baseType: !61, size: 64)
!8436 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !8433, file: !301, line: 50, baseType: !61, size: 64, offset: 64)
!8437 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !8430, file: !301, line: 54, baseType: !8438, size: 128)
!8438 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8430, file: !301, line: 52, size: 128, elements: !8439)
!8439 = !{!8440, !8441}
!8440 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !8438, file: !301, line: 53, baseType: !61, size: 64)
!8441 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !8438, file: !301, line: 53, baseType: !61, size: 64, offset: 64)
!8442 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8427, file: !301, line: 56, baseType: !5787, size: 32, offset: 128)
!8443 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !8427, file: !301, line: 57, baseType: !5789, size: 8192, offset: 160)
!8444 = !DILocation(line: 328, column: 19, scope: !8378)
!8445 = !DILocalVariable(name: "has_listener", scope: !8378, file: !642, line: 329, type: !341)
!8446 = !DILocation(line: 329, column: 10, scope: !8378)
!8447 = !DILocalVariable(name: "path_buf", scope: !8378, file: !642, line: 330, type: !8448)
!8448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 32768, elements: !8449)
!8449 = !{!8450}
!8450 = !DISubrange(count: 4096)
!8451 = !DILocation(line: 330, column: 10, scope: !8378)
!8452 = !DILocalVariable(name: "path", scope: !8378, file: !642, line: 331, type: !480)
!8453 = !DILocation(line: 331, column: 17, scope: !8378)
!8454 = !DILocation(line: 333, column: 28, scope: !8378)
!8455 = !DILocation(line: 333, column: 12, scope: !8378)
!8456 = !DILocation(line: 333, column: 10, scope: !8378)
!8457 = !DILocation(line: 334, column: 5, scope: !8378)
!8458 = !DILocation(line: 336, column: 26, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8378, file: !642, line: 336, column: 9)
!8460 = !DILocation(line: 336, column: 32, scope: !8459)
!8461 = !DILocation(line: 336, column: 10, scope: !8459)
!8462 = !DILocation(line: 336, column: 9, scope: !8378)
!8463 = !DILocation(line: 337, column: 9, scope: !8459)
!8464 = !DILocation(line: 339, column: 29, scope: !8465)
!8465 = distinct !DILexicalBlock(scope: !8378, file: !642, line: 339, column: 9)
!8466 = !DILocation(line: 339, column: 10, scope: !8465)
!8467 = !DILocation(line: 339, column: 9, scope: !8378)
!8468 = !DILocation(line: 340, column: 9, scope: !8465)
!8469 = !DILocation(line: 342, column: 5, scope: !8378)
!8470 = !DILocation(line: 342, column: 12, scope: !8378)
!8471 = !DILocation(line: 343, column: 22, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !8378, file: !642, line: 342, column: 44)
!8473 = !DILocation(line: 343, column: 9, scope: !8472)
!8474 = !DILocation(line: 345, column: 30, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8476, file: !642, line: 345, column: 17)
!8476 = distinct !DILexicalBlock(scope: !8472, file: !642, line: 343, column: 28)
!8477 = !DILocation(line: 345, column: 35, scope: !8475)
!8478 = !DILocation(line: 345, column: 18, scope: !8475)
!8479 = !DILocation(line: 345, column: 17, scope: !8476)
!8480 = !DILocation(line: 346, column: 83, scope: !8475)
!8481 = !DILocation(line: 346, column: 88, scope: !8475)
!8482 = !DILocation(line: 347, column: 44, scope: !8475)
!8483 = !DILocation(line: 347, column: 29, scope: !8475)
!8484 = !DILocation(line: 346, column: 67, scope: !8475)
!8485 = !DILocation(line: 346, column: 51, scope: !8475)
!8486 = !DILocation(line: 346, column: 17, scope: !8475)
!8487 = !DILocation(line: 346, column: 23, scope: !8475)
!8488 = !DILocation(line: 346, column: 30, scope: !8475)
!8489 = !DILocation(line: 346, column: 49, scope: !8475)
!8490 = !DILocation(line: 348, column: 35, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8475, file: !642, line: 348, column: 22)
!8492 = !DILocation(line: 348, column: 40, scope: !8491)
!8493 = !DILocation(line: 348, column: 23, scope: !8491)
!8494 = !DILocation(line: 348, column: 22, scope: !8475)
!8495 = !DILocation(line: 349, column: 54, scope: !8491)
!8496 = !DILocation(line: 349, column: 59, scope: !8491)
!8497 = !DILocation(line: 350, column: 44, scope: !8491)
!8498 = !DILocation(line: 349, column: 38, scope: !8491)
!8499 = !DILocation(line: 349, column: 17, scope: !8491)
!8500 = !DILocation(line: 349, column: 23, scope: !8491)
!8501 = !DILocation(line: 349, column: 30, scope: !8491)
!8502 = !DILocation(line: 349, column: 36, scope: !8491)
!8503 = !DILocation(line: 351, column: 35, scope: !8504)
!8504 = distinct !DILexicalBlock(scope: !8491, file: !642, line: 351, column: 22)
!8505 = !DILocation(line: 351, column: 40, scope: !8504)
!8506 = !DILocation(line: 351, column: 23, scope: !8504)
!8507 = !DILocation(line: 351, column: 22, scope: !8491)
!8508 = !DILocation(line: 352, column: 59, scope: !8504)
!8509 = !DILocation(line: 352, column: 64, scope: !8504)
!8510 = !DILocation(line: 353, column: 44, scope: !8504)
!8511 = !DILocation(line: 352, column: 43, scope: !8504)
!8512 = !DILocation(line: 352, column: 17, scope: !8504)
!8513 = !DILocation(line: 352, column: 23, scope: !8504)
!8514 = !DILocation(line: 352, column: 30, scope: !8504)
!8515 = !DILocation(line: 352, column: 41, scope: !8504)
!8516 = !DILocation(line: 354, column: 35, scope: !8517)
!8517 = distinct !DILexicalBlock(scope: !8504, file: !642, line: 354, column: 22)
!8518 = !DILocation(line: 354, column: 40, scope: !8517)
!8519 = !DILocation(line: 354, column: 23, scope: !8517)
!8520 = !DILocation(line: 354, column: 22, scope: !8504)
!8521 = !DILocation(line: 355, column: 63, scope: !8517)
!8522 = !DILocation(line: 355, column: 68, scope: !8517)
!8523 = !DILocation(line: 356, column: 44, scope: !8517)
!8524 = !DILocation(line: 355, column: 40, scope: !8517)
!8525 = !DILocation(line: 355, column: 17, scope: !8517)
!8526 = !DILocation(line: 355, column: 23, scope: !8517)
!8527 = !DILocation(line: 355, column: 30, scope: !8517)
!8528 = !DILocation(line: 355, column: 38, scope: !8517)
!8529 = !DILocation(line: 357, column: 35, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8517, file: !642, line: 357, column: 22)
!8531 = !DILocation(line: 357, column: 40, scope: !8530)
!8532 = !DILocation(line: 357, column: 23, scope: !8530)
!8533 = !DILocation(line: 357, column: 22, scope: !8517)
!8534 = !DILocalVariable(name: "n_threads", scope: !8535, file: !642, line: 358, type: !40)
!8535 = distinct !DILexicalBlock(scope: !8530, file: !642, line: 357, column: 57)
!8536 = !DILocation(line: 358, column: 22, scope: !8535)
!8537 = !DILocation(line: 358, column: 50, scope: !8535)
!8538 = !DILocation(line: 358, column: 55, scope: !8535)
!8539 = !DILocation(line: 358, column: 77, scope: !8535)
!8540 = !DILocation(line: 358, column: 62, scope: !8535)
!8541 = !DILocation(line: 358, column: 34, scope: !8535)
!8542 = !DILocation(line: 359, column: 21, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8535, file: !642, line: 359, column: 21)
!8544 = !DILocation(line: 359, column: 31, scope: !8543)
!8545 = !DILocation(line: 359, column: 21, scope: !8535)
!8546 = !DILocation(line: 360, column: 74, scope: !8543)
!8547 = !DILocation(line: 360, column: 21, scope: !8543)
!8548 = !DILocation(line: 361, column: 62, scope: !8535)
!8549 = !DILocation(line: 361, column: 42, scope: !8535)
!8550 = !DILocation(line: 361, column: 17, scope: !8535)
!8551 = !DILocation(line: 361, column: 23, scope: !8535)
!8552 = !DILocation(line: 361, column: 30, scope: !8535)
!8553 = !DILocation(line: 361, column: 40, scope: !8535)
!8554 = !DILocation(line: 362, column: 13, scope: !8535)
!8555 = !DILocation(line: 364, column: 68, scope: !8530)
!8556 = !DILocation(line: 364, column: 73, scope: !8530)
!8557 = !DILocation(line: 364, column: 17, scope: !8530)
!8558 = !DILocation(line: 365, column: 13, scope: !8476)
!8559 = !DILocation(line: 367, column: 18, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8476, file: !642, line: 367, column: 17)
!8561 = !DILocation(line: 367, column: 17, scope: !8476)
!8562 = !DILocation(line: 368, column: 30, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8560, file: !642, line: 367, column: 32)
!8564 = !DILocation(line: 369, column: 34, scope: !8565)
!8565 = distinct !DILexicalBlock(scope: !8563, file: !642, line: 369, column: 21)
!8566 = !DILocation(line: 369, column: 42, scope: !8565)
!8567 = !DILocation(line: 369, column: 22, scope: !8565)
!8568 = !DILocation(line: 369, column: 21, scope: !8563)
!8569 = !DILocation(line: 370, column: 50, scope: !8565)
!8570 = !DILocation(line: 370, column: 21, scope: !8565)
!8571 = !DILocation(line: 372, column: 74, scope: !8565)
!8572 = !DILocation(line: 372, column: 82, scope: !8565)
!8573 = !DILocation(line: 372, column: 21, scope: !8565)
!8574 = !DILocation(line: 373, column: 13, scope: !8563)
!8575 = !DILocation(line: 374, column: 17, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !8560, file: !642, line: 373, column: 20)
!8577 = !DILocation(line: 376, column: 13, scope: !8476)
!8578 = !DILocation(line: 378, column: 13, scope: !8476)
!8579 = !DILocation(line: 379, column: 9, scope: !8476)
!8580 = distinct !{!8580, !8469, !8581, !3203}
!8581 = !DILocation(line: 380, column: 5, scope: !8378)
!8582 = !DILocation(line: 382, column: 14, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8378, file: !642, line: 382, column: 9)
!8584 = !DILocation(line: 382, column: 9, scope: !8583)
!8585 = !DILocation(line: 382, column: 9, scope: !8378)
!8586 = !DILocation(line: 383, column: 9, scope: !8587)
!8587 = distinct !DILexicalBlock(scope: !8583, file: !642, line: 382, column: 29)
!8588 = !DILocation(line: 387, column: 5, scope: !8378)
!8589 = !DILocation(line: 389, column: 5, scope: !8378)
!8590 = !DILocation(line: 390, column: 1, scope: !8378)
!8591 = distinct !DISubprogram(name: "get_number_of_cpus", scope: !642, file: !642, line: 423, type: !8592, scopeLine: 424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !659, retainedNodes: !74)
!8592 = !DISubroutineType(types: !8593)
!8593 = !{!413}
!8594 = !DILocalVariable(name: "n_online_cpus", scope: !8591, file: !642, line: 425, type: !40)
!8595 = !DILocation(line: 425, column: 10, scope: !8591)
!8596 = !DILocation(line: 425, column: 26, scope: !8591)
!8597 = !DILocation(line: 426, column: 9, scope: !8598)
!8598 = distinct !DILexicalBlock(scope: !8591, file: !642, line: 426, column: 9)
!8599 = !DILocation(line: 426, column: 9, scope: !8591)
!8600 = !DILocation(line: 427, column: 9, scope: !8601)
!8601 = distinct !DILexicalBlock(scope: !8598, file: !642, line: 426, column: 38)
!8602 = !DILocation(line: 428, column: 9, scope: !8601)
!8603 = !DILocation(line: 430, column: 32, scope: !8591)
!8604 = !DILocation(line: 430, column: 12, scope: !8591)
!8605 = !DILocation(line: 430, column: 5, scope: !8591)
!8606 = !DILocation(line: 431, column: 1, scope: !8591)
!8607 = distinct !DISubprogram(name: "setup_open_file_count_limits", scope: !642, file: !642, line: 393, type: !8608, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !659, retainedNodes: !74)
!8608 = !DISubroutineType(types: !8609)
!8609 = !{!8317}
!8610 = !DILocalVariable(name: "r", scope: !8607, file: !642, line: 395, type: !8611)
!8611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !905, line: 139, size: 128, elements: !8612)
!8612 = !{!8613, !8614}
!8613 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !8611, file: !905, line: 142, baseType: !8317, size: 64)
!8614 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !8611, file: !905, line: 144, baseType: !8317, size: 64, offset: 64)
!8615 = !DILocation(line: 395, column: 19, scope: !8607)
!8616 = !DILocation(line: 397, column: 9, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8607, file: !642, line: 397, column: 9)
!8618 = !DILocation(line: 397, column: 38, scope: !8617)
!8619 = !DILocation(line: 397, column: 9, scope: !8607)
!8620 = !DILocation(line: 398, column: 9, scope: !8617)
!8621 = !DILocation(line: 400, column: 11, scope: !8622)
!8622 = distinct !DILexicalBlock(scope: !8607, file: !642, line: 400, column: 9)
!8623 = !DILocation(line: 400, column: 25, scope: !8622)
!8624 = !DILocation(line: 400, column: 20, scope: !8622)
!8625 = !DILocation(line: 400, column: 9, scope: !8607)
!8626 = !DILocation(line: 401, column: 18, scope: !8622)
!8627 = !DILocation(line: 401, column: 9, scope: !8622)
!8628 = !DILocation(line: 403, column: 11, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !8607, file: !642, line: 403, column: 9)
!8630 = !DILocation(line: 403, column: 20, scope: !8629)
!8631 = !DILocation(line: 403, column: 9, scope: !8607)
!8632 = !DILocation(line: 404, column: 11, scope: !8629)
!8633 = !DILocation(line: 404, column: 20, scope: !8629)
!8634 = !DILocation(line: 404, column: 9, scope: !8629)
!8635 = !DILocation(line: 405, column: 16, scope: !8636)
!8636 = distinct !DILexicalBlock(scope: !8629, file: !642, line: 405, column: 14)
!8637 = !DILocation(line: 405, column: 29, scope: !8636)
!8638 = !DILocation(line: 405, column: 25, scope: !8636)
!8639 = !DILocation(line: 405, column: 14, scope: !8629)
!8640 = !DILocation(line: 406, column: 24, scope: !8636)
!8641 = !DILocation(line: 406, column: 11, scope: !8636)
!8642 = !DILocation(line: 406, column: 20, scope: !8636)
!8643 = !DILocation(line: 406, column: 9, scope: !8636)
!8644 = !DILocation(line: 408, column: 9, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8607, file: !642, line: 408, column: 9)
!8646 = !DILocation(line: 408, column: 38, scope: !8645)
!8647 = !DILocation(line: 408, column: 9, scope: !8607)
!8648 = !DILocation(line: 409, column: 9, scope: !8645)
!8649 = !DILocation(line: 411, column: 14, scope: !8607)
!8650 = !DILocation(line: 411, column: 5, scope: !8607)
!8651 = !DILocation(line: 412, column: 1, scope: !8607)
!8652 = distinct !DISubprogram(name: "allocate_connections", scope: !642, file: !642, line: 415, type: !8653, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !659, retainedNodes: !74)
!8653 = !DISubroutineType(types: !8654)
!8654 = !{null, !7876, !6}
!8655 = !DILocalVariable(name: "l", arg: 1, scope: !8652, file: !642, line: 415, type: !7876)
!8656 = !DILocation(line: 415, column: 30, scope: !8652)
!8657 = !DILocalVariable(name: "max_open_files", arg: 2, scope: !8652, file: !642, line: 415, type: !6)
!8658 = !DILocation(line: 415, column: 40, scope: !8652)
!8659 = !DILocation(line: 417, column: 23, scope: !8652)
!8660 = !DILocation(line: 417, column: 16, scope: !8652)
!8661 = !DILocation(line: 417, column: 5, scope: !8652)
!8662 = !DILocation(line: 417, column: 8, scope: !8652)
!8663 = !DILocation(line: 417, column: 14, scope: !8652)
!8664 = !DILocation(line: 418, column: 10, scope: !8665)
!8665 = distinct !DILexicalBlock(scope: !8652, file: !642, line: 418, column: 9)
!8666 = !DILocation(line: 418, column: 13, scope: !8665)
!8667 = !DILocation(line: 418, column: 9, scope: !8652)
!8668 = !DILocation(line: 419, column: 9, scope: !8665)
!8669 = !DILocation(line: 420, column: 1, scope: !8652)
!8670 = distinct !DISubprogram(name: "parse_listener", scope: !642, file: !642, line: 271, type: !8671, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !659, retainedNodes: !74)
!8671 = !DISubroutineType(types: !8672)
!8672 = !{null, !8673, !8674, !7876}
!8673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8384, size: 64)
!8674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8426, size: 64)
!8675 = !DILocalVariable(name: "c", arg: 1, scope: !8670, file: !642, line: 271, type: !8673)
!8676 = !DILocation(line: 271, column: 38, scope: !8670)
!8677 = !DILocalVariable(name: "l", arg: 2, scope: !8670, file: !642, line: 271, type: !8674)
!8678 = !DILocation(line: 271, column: 56, scope: !8670)
!8679 = !DILocalVariable(name: "lwan", arg: 3, scope: !8670, file: !642, line: 271, type: !7876)
!8680 = !DILocation(line: 271, column: 67, scope: !8670)
!8681 = !DILocation(line: 273, column: 36, scope: !8670)
!8682 = !DILocation(line: 273, column: 39, scope: !8670)
!8683 = !DILocation(line: 273, column: 47, scope: !8670)
!8684 = !DILocation(line: 273, column: 29, scope: !8670)
!8685 = !DILocation(line: 273, column: 5, scope: !8670)
!8686 = !DILocation(line: 273, column: 11, scope: !8670)
!8687 = !DILocation(line: 273, column: 18, scope: !8670)
!8688 = !DILocation(line: 273, column: 27, scope: !8670)
!8689 = !DILocation(line: 275, column: 5, scope: !8670)
!8690 = !DILocation(line: 275, column: 29, scope: !8670)
!8691 = !DILocation(line: 275, column: 32, scope: !8670)
!8692 = !DILocation(line: 275, column: 12, scope: !8670)
!8693 = !DILocation(line: 276, column: 17, scope: !8694)
!8694 = distinct !DILexicalBlock(scope: !8670, file: !642, line: 275, column: 36)
!8695 = !DILocation(line: 276, column: 20, scope: !8694)
!8696 = !DILocation(line: 276, column: 9, scope: !8694)
!8697 = !DILocation(line: 278, column: 26, scope: !8698)
!8698 = distinct !DILexicalBlock(scope: !8694, file: !642, line: 276, column: 26)
!8699 = !DILocation(line: 278, column: 13, scope: !8698)
!8700 = !DILocation(line: 279, column: 13, scope: !8698)
!8701 = !DILocation(line: 281, column: 25, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8698, file: !642, line: 281, column: 17)
!8703 = !DILocation(line: 281, column: 28, scope: !8702)
!8704 = !DILocation(line: 281, column: 36, scope: !8702)
!8705 = !DILocation(line: 281, column: 18, scope: !8702)
!8706 = !DILocation(line: 281, column: 17, scope: !8698)
!8707 = !DILocation(line: 282, column: 39, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !8702, file: !642, line: 281, column: 53)
!8709 = !DILocation(line: 282, column: 42, scope: !8708)
!8710 = !DILocation(line: 282, column: 45, scope: !8708)
!8711 = !DILocation(line: 282, column: 17, scope: !8708)
!8712 = !DILocation(line: 283, column: 13, scope: !8708)
!8713 = !DILocalVariable(name: "module", scope: !8714, file: !642, line: 284, type: !8018)
!8714 = distinct !DILexicalBlock(scope: !8702, file: !642, line: 283, column: 20)
!8715 = !DILocation(line: 284, column: 38, scope: !8714)
!8716 = !DILocation(line: 284, column: 64, scope: !8714)
!8717 = !DILocation(line: 284, column: 70, scope: !8714)
!8718 = !DILocation(line: 284, column: 73, scope: !8714)
!8719 = !DILocation(line: 284, column: 81, scope: !8714)
!8720 = !DILocation(line: 284, column: 47, scope: !8714)
!8721 = !DILocation(line: 285, column: 22, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !8714, file: !642, line: 285, column: 21)
!8723 = !DILocation(line: 285, column: 21, scope: !8714)
!8724 = !DILocation(line: 286, column: 34, scope: !8725)
!8725 = distinct !DILexicalBlock(scope: !8722, file: !642, line: 285, column: 30)
!8726 = !DILocation(line: 287, column: 25, scope: !8725)
!8727 = !DILocation(line: 287, column: 28, scope: !8725)
!8728 = !DILocation(line: 287, column: 36, scope: !8725)
!8729 = !DILocation(line: 286, column: 21, scope: !8725)
!8730 = !DILocation(line: 288, column: 17, scope: !8725)
!8731 = !DILocation(line: 289, column: 43, scope: !8732)
!8732 = distinct !DILexicalBlock(scope: !8722, file: !642, line: 288, column: 24)
!8733 = !DILocation(line: 289, column: 46, scope: !8732)
!8734 = !DILocation(line: 289, column: 49, scope: !8732)
!8735 = !DILocation(line: 289, column: 55, scope: !8732)
!8736 = !DILocation(line: 289, column: 21, scope: !8732)
!8737 = !DILocation(line: 292, column: 13, scope: !8698)
!8738 = !DILocation(line: 294, column: 13, scope: !8698)
!8739 = distinct !{!8739, !8689, !8740, !3203}
!8740 = !DILocation(line: 296, column: 5, scope: !8670)
!8741 = !DILocation(line: 298, column: 18, scope: !8670)
!8742 = !DILocation(line: 298, column: 5, scope: !8670)
!8743 = !DILocation(line: 299, column: 1, scope: !8670)
!8744 = distinct !DISubprogram(name: "parse_listener_prefix", scope: !642, file: !642, line: 167, type: !8745, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !659, retainedNodes: !74)
!8745 = !DISubroutineType(types: !8746)
!8746 = !{null, !8673, !8674, !7876, !8018}
!8747 = !DILocalVariable(name: "c", arg: 1, scope: !8744, file: !642, line: 167, type: !8673)
!8748 = !DILocation(line: 167, column: 45, scope: !8744)
!8749 = !DILocalVariable(name: "l", arg: 2, scope: !8744, file: !642, line: 167, type: !8674)
!8750 = !DILocation(line: 167, column: 63, scope: !8744)
!8751 = !DILocalVariable(name: "lwan", arg: 3, scope: !8744, file: !642, line: 167, type: !7876)
!8752 = !DILocation(line: 167, column: 74, scope: !8744)
!8753 = !DILocalVariable(name: "module", arg: 4, scope: !8744, file: !642, line: 168, type: !8018)
!8754 = !DILocation(line: 168, column: 26, scope: !8744)
!8755 = !DILocalVariable(name: "url_map", scope: !8744, file: !642, line: 170, type: !7937)
!8756 = !DILocation(line: 170, column: 20, scope: !8744)
!8757 = !DILocalVariable(name: "hash", scope: !8744, file: !642, line: 171, type: !331)
!8758 = !DILocation(line: 171, column: 18, scope: !8744)
!8759 = !DILocation(line: 171, column: 25, scope: !8744)
!8760 = !DILocalVariable(name: "handler", scope: !8744, file: !642, line: 172, type: !5)
!8761 = !DILocation(line: 172, column: 11, scope: !8744)
!8762 = !DILocalVariable(name: "prefix", scope: !8744, file: !642, line: 173, type: !61)
!8763 = !DILocation(line: 173, column: 11, scope: !8744)
!8764 = !DILocalVariable(name: "__old", scope: !8765, file: !642, line: 173, type: !480)
!8765 = distinct !DILexicalBlock(scope: !8744, file: !642, line: 173, column: 20)
!8766 = !DILocation(line: 173, column: 20, scope: !8765)
!8767 = !DILocalVariable(name: "__len", scope: !8765, file: !642, line: 173, type: !6)
!8768 = !DILocalVariable(name: "__new", scope: !8765, file: !642, line: 173, type: !61)
!8769 = !DILocation(line: 175, column: 5, scope: !8744)
!8770 = !DILocation(line: 175, column: 29, scope: !8744)
!8771 = !DILocation(line: 175, column: 32, scope: !8744)
!8772 = !DILocation(line: 175, column: 12, scope: !8744)
!8773 = !DILocation(line: 176, column: 15, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8744, file: !642, line: 175, column: 36)
!8775 = !DILocation(line: 176, column: 18, scope: !8774)
!8776 = !DILocation(line: 176, column: 7, scope: !8774)
!8777 = !DILocation(line: 178, column: 23, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8779, file: !642, line: 178, column: 15)
!8779 = distinct !DILexicalBlock(scope: !8774, file: !642, line: 176, column: 24)
!8780 = !DILocation(line: 178, column: 26, scope: !8778)
!8781 = !DILocation(line: 178, column: 31, scope: !8778)
!8782 = !DILocation(line: 178, column: 16, scope: !8778)
!8783 = !DILocation(line: 178, column: 15, scope: !8779)
!8784 = !DILocation(line: 179, column: 19, scope: !8785)
!8785 = distinct !DILexicalBlock(scope: !8786, file: !642, line: 179, column: 19)
!8786 = distinct !DILexicalBlock(scope: !8778, file: !642, line: 178, column: 47)
!8787 = !DILocation(line: 179, column: 19, scope: !8786)
!8788 = !DILocation(line: 180, column: 32, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8785, file: !642, line: 179, column: 27)
!8790 = !DILocation(line: 180, column: 19, scope: !8789)
!8791 = !DILocation(line: 181, column: 19, scope: !8789)
!8792 = !DILocation(line: 183, column: 41, scope: !8786)
!8793 = !DILocation(line: 183, column: 47, scope: !8786)
!8794 = !DILocation(line: 183, column: 50, scope: !8786)
!8795 = !DILocation(line: 183, column: 55, scope: !8786)
!8796 = !DILocation(line: 183, column: 24, scope: !8786)
!8797 = !DILocation(line: 183, column: 22, scope: !8786)
!8798 = !DILocation(line: 184, column: 20, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8786, file: !642, line: 184, column: 19)
!8800 = !DILocation(line: 184, column: 19, scope: !8786)
!8801 = !DILocation(line: 185, column: 32, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8799, file: !642, line: 184, column: 28)
!8803 = !DILocation(line: 185, column: 67, scope: !8802)
!8804 = !DILocation(line: 185, column: 70, scope: !8802)
!8805 = !DILocation(line: 185, column: 75, scope: !8802)
!8806 = !DILocation(line: 185, column: 19, scope: !8802)
!8807 = !DILocation(line: 186, column: 19, scope: !8802)
!8808 = !DILocation(line: 188, column: 11, scope: !8786)
!8809 = !DILocation(line: 188, column: 30, scope: !8810)
!8810 = distinct !DILexicalBlock(scope: !8778, file: !642, line: 188, column: 22)
!8811 = !DILocation(line: 188, column: 33, scope: !8810)
!8812 = !DILocation(line: 188, column: 38, scope: !8810)
!8813 = !DILocation(line: 188, column: 23, scope: !8810)
!8814 = !DILocation(line: 188, column: 22, scope: !8778)
!8815 = !DILocation(line: 189, column: 45, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8810, file: !642, line: 188, column: 55)
!8817 = !DILocation(line: 189, column: 48, scope: !8816)
!8818 = !DILocation(line: 189, column: 53, scope: !8816)
!8819 = !DILocation(line: 189, column: 25, scope: !8816)
!8820 = !DILocation(line: 189, column: 23, scope: !8816)
!8821 = !DILocation(line: 190, column: 20, scope: !8822)
!8822 = distinct !DILexicalBlock(scope: !8816, file: !642, line: 190, column: 19)
!8823 = !DILocation(line: 190, column: 19, scope: !8816)
!8824 = !DILocation(line: 191, column: 32, scope: !8825)
!8825 = distinct !DILexicalBlock(scope: !8822, file: !642, line: 190, column: 29)
!8826 = !DILocation(line: 191, column: 68, scope: !8825)
!8827 = !DILocation(line: 191, column: 71, scope: !8825)
!8828 = !DILocation(line: 191, column: 76, scope: !8825)
!8829 = !DILocation(line: 191, column: 19, scope: !8825)
!8830 = !DILocation(line: 192, column: 19, scope: !8825)
!8831 = !DILocation(line: 194, column: 11, scope: !8816)
!8832 = !DILocation(line: 195, column: 24, scope: !8833)
!8833 = distinct !DILexicalBlock(scope: !8810, file: !642, line: 194, column: 18)
!8834 = !DILocation(line: 195, column: 37, scope: !8833)
!8835 = !DILocation(line: 195, column: 40, scope: !8833)
!8836 = !DILocation(line: 195, column: 45, scope: !8833)
!8837 = !DILocation(line: 195, column: 30, scope: !8833)
!8838 = !DILocation(line: 195, column: 58, scope: !8833)
!8839 = !DILocation(line: 195, column: 61, scope: !8833)
!8840 = !DILocation(line: 195, column: 66, scope: !8833)
!8841 = !DILocation(line: 195, column: 51, scope: !8833)
!8842 = !DILocation(line: 195, column: 15, scope: !8833)
!8843 = !DILocation(line: 198, column: 11, scope: !8779)
!8844 = !DILocation(line: 200, column: 23, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !8779, file: !642, line: 200, column: 15)
!8846 = !DILocation(line: 200, column: 26, scope: !8845)
!8847 = !DILocation(line: 200, column: 34, scope: !8845)
!8848 = !DILocation(line: 200, column: 16, scope: !8845)
!8849 = !DILocation(line: 200, column: 15, scope: !8779)
!8850 = !DILocation(line: 201, column: 51, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8845, file: !642, line: 200, column: 58)
!8852 = !DILocation(line: 201, column: 54, scope: !8851)
!8853 = !DILocation(line: 201, column: 15, scope: !8851)
!8854 = !DILocation(line: 202, column: 11, scope: !8851)
!8855 = !DILocation(line: 203, column: 28, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8845, file: !642, line: 202, column: 18)
!8857 = !DILocation(line: 203, column: 63, scope: !8856)
!8858 = !DILocation(line: 203, column: 66, scope: !8856)
!8859 = !DILocation(line: 203, column: 74, scope: !8856)
!8860 = !DILocation(line: 203, column: 15, scope: !8856)
!8861 = !DILocation(line: 204, column: 15, scope: !8856)
!8862 = !DILocation(line: 207, column: 11, scope: !8779)
!8863 = !DILocation(line: 209, column: 11, scope: !8779)
!8864 = distinct !{!8864, !8769, !8865, !3203}
!8865 = !DILocation(line: 211, column: 5, scope: !8744)
!8866 = !DILocation(line: 213, column: 18, scope: !8744)
!8867 = !DILocation(line: 213, column: 5, scope: !8744)
!8868 = !DILocation(line: 214, column: 5, scope: !8744)
!8869 = !DILabel(scope: !8744, name: "add_map", file: !642, line: 216)
!8870 = !DILocation(line: 216, column: 1, scope: !8744)
!8871 = !DILocation(line: 217, column: 9, scope: !8872)
!8872 = distinct !DILexicalBlock(scope: !8744, file: !642, line: 217, column: 9)
!8873 = !DILocation(line: 217, column: 19, scope: !8872)
!8874 = !DILocation(line: 217, column: 16, scope: !8872)
!8875 = !DILocation(line: 217, column: 27, scope: !8872)
!8876 = !DILocation(line: 217, column: 31, scope: !8872)
!8877 = !DILocation(line: 217, column: 9, scope: !8744)
!8878 = !DILocation(line: 218, column: 22, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8872, file: !642, line: 217, column: 40)
!8880 = !DILocation(line: 218, column: 9, scope: !8879)
!8881 = !DILocation(line: 219, column: 9, scope: !8879)
!8882 = !DILocation(line: 221, column: 9, scope: !8883)
!8883 = distinct !DILexicalBlock(scope: !8744, file: !642, line: 221, column: 9)
!8884 = !DILocation(line: 221, column: 16, scope: !8883)
!8885 = !DILocation(line: 221, column: 19, scope: !8883)
!8886 = !DILocation(line: 221, column: 9, scope: !8744)
!8887 = !DILocation(line: 222, column: 22, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8883, file: !642, line: 221, column: 28)
!8889 = !DILocation(line: 222, column: 9, scope: !8888)
!8890 = !DILocation(line: 223, column: 9, scope: !8888)
!8891 = !DILocation(line: 226, column: 9, scope: !8892)
!8892 = distinct !DILexicalBlock(scope: !8744, file: !642, line: 226, column: 9)
!8893 = !DILocation(line: 226, column: 9, scope: !8744)
!8894 = !DILocation(line: 227, column: 27, scope: !8895)
!8895 = distinct !DILexicalBlock(scope: !8892, file: !642, line: 226, column: 18)
!8896 = !DILocation(line: 227, column: 17, scope: !8895)
!8897 = !DILocation(line: 227, column: 25, scope: !8895)
!8898 = !DILocation(line: 228, column: 17, scope: !8895)
!8899 = !DILocation(line: 228, column: 23, scope: !8895)
!8900 = !DILocation(line: 229, column: 24, scope: !8895)
!8901 = !DILocation(line: 229, column: 17, scope: !8895)
!8902 = !DILocation(line: 229, column: 22, scope: !8895)
!8903 = !DILocation(line: 230, column: 17, scope: !8895)
!8904 = !DILocation(line: 230, column: 24, scope: !8895)
!8905 = !DILocation(line: 232, column: 14, scope: !8895)
!8906 = !DILocation(line: 233, column: 5, scope: !8895)
!8907 = !DILocation(line: 233, column: 16, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8892, file: !642, line: 233, column: 16)
!8909 = !DILocation(line: 233, column: 23, scope: !8908)
!8910 = !DILocation(line: 233, column: 26, scope: !8908)
!8911 = !DILocation(line: 233, column: 34, scope: !8908)
!8912 = !DILocation(line: 233, column: 49, scope: !8908)
!8913 = !DILocation(line: 233, column: 52, scope: !8908)
!8914 = !DILocation(line: 233, column: 60, scope: !8908)
!8915 = !DILocation(line: 233, column: 16, scope: !8892)
!8916 = !DILocation(line: 234, column: 24, scope: !8917)
!8917 = distinct !DILexicalBlock(scope: !8908, file: !642, line: 233, column: 68)
!8918 = !DILocation(line: 234, column: 32, scope: !8917)
!8919 = !DILocation(line: 234, column: 47, scope: !8917)
!8920 = !DILocation(line: 234, column: 17, scope: !8917)
!8921 = !DILocation(line: 234, column: 22, scope: !8917)
!8922 = !DILocation(line: 235, column: 27, scope: !8917)
!8923 = !DILocation(line: 235, column: 35, scope: !8917)
!8924 = !DILocation(line: 235, column: 17, scope: !8917)
!8925 = !DILocation(line: 235, column: 25, scope: !8917)
!8926 = !DILocation(line: 236, column: 26, scope: !8917)
!8927 = !DILocation(line: 236, column: 34, scope: !8917)
!8928 = !DILocation(line: 236, column: 17, scope: !8917)
!8929 = !DILocation(line: 236, column: 23, scope: !8917)
!8930 = !DILocation(line: 237, column: 26, scope: !8917)
!8931 = !DILocation(line: 237, column: 17, scope: !8917)
!8932 = !DILocation(line: 237, column: 24, scope: !8917)
!8933 = !DILocation(line: 238, column: 5, scope: !8917)
!8934 = !DILocation(line: 239, column: 22, scope: !8935)
!8935 = distinct !DILexicalBlock(scope: !8908, file: !642, line: 238, column: 12)
!8936 = !DILocation(line: 239, column: 9, scope: !8935)
!8937 = !DILocation(line: 240, column: 9, scope: !8935)
!8938 = !DILocation(line: 243, column: 18, scope: !8744)
!8939 = !DILocation(line: 243, column: 24, scope: !8744)
!8940 = !DILocation(line: 243, column: 38, scope: !8744)
!8941 = !DILocation(line: 243, column: 5, scope: !8744)
!8942 = !DILabel(scope: !8744, name: "out", file: !642, line: 245)
!8943 = !DILocation(line: 245, column: 1, scope: !8744)
!8944 = !DILocation(line: 246, column: 15, scope: !8744)
!8945 = !DILocation(line: 246, column: 5, scope: !8744)
!8946 = !DILocation(line: 247, column: 1, scope: !8744)
!8947 = distinct !DISubprogram(name: "lwan_module_find", scope: !642, file: !642, line: 75, type: !8948, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !659, retainedNodes: !74)
!8948 = !DISubroutineType(types: !8949)
!8949 = !{!8018, !7876, !480}
!8950 = !DILocalVariable(name: "l", arg: 1, scope: !8947, file: !642, line: 75, type: !7876)
!8951 = !DILocation(line: 75, column: 54, scope: !8947)
!8952 = !DILocalVariable(name: "name", arg: 2, scope: !8947, file: !642, line: 75, type: !480)
!8953 = !DILocation(line: 75, column: 69, scope: !8947)
!8954 = !DILocation(line: 77, column: 22, scope: !8947)
!8955 = !DILocation(line: 77, column: 25, scope: !8947)
!8956 = !DILocation(line: 77, column: 42, scope: !8947)
!8957 = !DILocation(line: 77, column: 12, scope: !8947)
!8958 = !DILocation(line: 77, column: 5, scope: !8947)
!8959 = distinct !DISubprogram(name: "find_handler_symbol", scope: !642, file: !642, line: 80, type: !8960, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !659, retainedNodes: !74)
!8960 = !DISubroutineType(types: !8961)
!8961 = !{!5, !480}
!8962 = !DILocalVariable(name: "name", arg: 1, scope: !8959, file: !642, line: 80, type: !480)
!8963 = !DILocation(line: 80, column: 46, scope: !8959)
!8964 = !DILocalVariable(name: "symbol", scope: !8959, file: !642, line: 82, type: !5)
!8965 = !DILocation(line: 82, column: 11, scope: !8959)
!8966 = !DILocation(line: 82, column: 37, scope: !8959)
!8967 = !DILocation(line: 82, column: 20, scope: !8959)
!8968 = !DILocation(line: 83, column: 10, scope: !8969)
!8969 = distinct !DILexicalBlock(scope: !8959, file: !642, line: 83, column: 9)
!8970 = !DILocation(line: 83, column: 9, scope: !8959)
!8971 = !DILocation(line: 84, column: 38, scope: !8969)
!8972 = !DILocation(line: 84, column: 18, scope: !8969)
!8973 = !DILocation(line: 84, column: 16, scope: !8969)
!8974 = !DILocation(line: 84, column: 9, scope: !8969)
!8975 = !DILocation(line: 85, column: 12, scope: !8959)
!8976 = !DILocation(line: 85, column: 5, scope: !8959)
!8977 = distinct !DISubprogram(name: "parse_listener_prefix_authorization", scope: !642, file: !642, line: 122, type: !8978, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !659, retainedNodes: !74)
!8978 = !DISubroutineType(types: !8979)
!8979 = !{null, !8673, !8674, !8054}
!8980 = !DILocalVariable(name: "c", arg: 1, scope: !8977, file: !642, line: 122, type: !8673)
!8981 = !DILocation(line: 122, column: 59, scope: !8977)
!8982 = !DILocalVariable(name: "l", arg: 2, scope: !8977, file: !642, line: 123, type: !8674)
!8983 = !DILocation(line: 123, column: 36, scope: !8977)
!8984 = !DILocalVariable(name: "url_map", arg: 3, scope: !8977, file: !642, line: 123, type: !8054)
!8985 = !DILocation(line: 123, column: 55, scope: !8977)
!8986 = !DILocation(line: 125, column: 16, scope: !8987)
!8987 = distinct !DILexicalBlock(scope: !8977, file: !642, line: 125, column: 9)
!8988 = !DILocation(line: 125, column: 19, scope: !8987)
!8989 = !DILocation(line: 125, column: 27, scope: !8987)
!8990 = !DILocation(line: 125, column: 9, scope: !8987)
!8991 = !DILocation(line: 125, column: 9, scope: !8977)
!8992 = !DILocation(line: 126, column: 22, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8987, file: !642, line: 125, column: 44)
!8994 = !DILocation(line: 126, column: 9, scope: !8993)
!8995 = !DILocation(line: 127, column: 9, scope: !8993)
!8996 = !DILocation(line: 130, column: 13, scope: !8977)
!8997 = !DILocation(line: 130, column: 22, scope: !8977)
!8998 = !DILocation(line: 130, column: 5, scope: !8977)
!8999 = !DILocation(line: 132, column: 5, scope: !8977)
!9000 = !DILocation(line: 132, column: 29, scope: !8977)
!9001 = !DILocation(line: 132, column: 32, scope: !8977)
!9002 = !DILocation(line: 132, column: 12, scope: !8977)
!9003 = !DILocation(line: 133, column: 17, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !8977, file: !642, line: 132, column: 36)
!9005 = !DILocation(line: 133, column: 20, scope: !9004)
!9006 = !DILocation(line: 133, column: 9, scope: !9004)
!9007 = !DILocation(line: 135, column: 25, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !9009, file: !642, line: 135, column: 17)
!9009 = distinct !DILexicalBlock(scope: !9004, file: !642, line: 133, column: 26)
!9010 = !DILocation(line: 135, column: 28, scope: !9008)
!9011 = !DILocation(line: 135, column: 33, scope: !9008)
!9012 = !DILocation(line: 135, column: 18, scope: !9008)
!9013 = !DILocation(line: 135, column: 17, scope: !9009)
!9014 = !DILocation(line: 136, column: 22, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !9008, file: !642, line: 135, column: 48)
!9016 = !DILocation(line: 136, column: 31, scope: !9015)
!9017 = !DILocation(line: 136, column: 45, scope: !9015)
!9018 = !DILocation(line: 136, column: 17, scope: !9015)
!9019 = !DILocation(line: 137, column: 55, scope: !9015)
!9020 = !DILocation(line: 137, column: 58, scope: !9015)
!9021 = !DILocation(line: 137, column: 63, scope: !9015)
!9022 = !DILocation(line: 137, column: 48, scope: !9015)
!9023 = !DILocation(line: 137, column: 17, scope: !9015)
!9024 = !DILocation(line: 137, column: 26, scope: !9015)
!9025 = !DILocation(line: 137, column: 40, scope: !9015)
!9026 = !DILocation(line: 137, column: 46, scope: !9015)
!9027 = !DILocation(line: 138, column: 13, scope: !9015)
!9028 = !DILocation(line: 138, column: 32, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9008, file: !642, line: 138, column: 24)
!9030 = !DILocation(line: 138, column: 35, scope: !9029)
!9031 = !DILocation(line: 138, column: 40, scope: !9029)
!9032 = !DILocation(line: 138, column: 25, scope: !9029)
!9033 = !DILocation(line: 138, column: 24, scope: !9008)
!9034 = !DILocation(line: 139, column: 22, scope: !9035)
!9035 = distinct !DILexicalBlock(scope: !9029, file: !642, line: 138, column: 63)
!9036 = !DILocation(line: 139, column: 31, scope: !9035)
!9037 = !DILocation(line: 139, column: 45, scope: !9035)
!9038 = !DILocation(line: 139, column: 17, scope: !9035)
!9039 = !DILocation(line: 140, column: 63, scope: !9035)
!9040 = !DILocation(line: 140, column: 66, scope: !9035)
!9041 = !DILocation(line: 140, column: 71, scope: !9035)
!9042 = !DILocation(line: 140, column: 56, scope: !9035)
!9043 = !DILocation(line: 140, column: 17, scope: !9035)
!9044 = !DILocation(line: 140, column: 26, scope: !9035)
!9045 = !DILocation(line: 140, column: 40, scope: !9035)
!9046 = !DILocation(line: 140, column: 54, scope: !9035)
!9047 = !DILocation(line: 141, column: 13, scope: !9035)
!9048 = !DILocation(line: 142, column: 13, scope: !9009)
!9049 = !DILocation(line: 145, column: 26, scope: !9009)
!9050 = !DILocation(line: 145, column: 55, scope: !9009)
!9051 = !DILocation(line: 145, column: 58, scope: !9009)
!9052 = !DILocation(line: 145, column: 66, scope: !9009)
!9053 = !DILocation(line: 145, column: 13, scope: !9009)
!9054 = !DILocation(line: 146, column: 13, scope: !9009)
!9055 = !DILocation(line: 149, column: 18, scope: !9056)
!9056 = distinct !DILexicalBlock(scope: !9009, file: !642, line: 149, column: 17)
!9057 = !DILocation(line: 149, column: 27, scope: !9056)
!9058 = !DILocation(line: 149, column: 41, scope: !9056)
!9059 = !DILocation(line: 149, column: 17, scope: !9009)
!9060 = !DILocation(line: 150, column: 48, scope: !9056)
!9061 = !DILocation(line: 150, column: 17, scope: !9056)
!9062 = !DILocation(line: 150, column: 26, scope: !9056)
!9063 = !DILocation(line: 150, column: 40, scope: !9056)
!9064 = !DILocation(line: 150, column: 46, scope: !9056)
!9065 = !DILocation(line: 151, column: 18, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9009, file: !642, line: 151, column: 17)
!9067 = !DILocation(line: 151, column: 27, scope: !9066)
!9068 = !DILocation(line: 151, column: 41, scope: !9066)
!9069 = !DILocation(line: 151, column: 17, scope: !9009)
!9070 = !DILocation(line: 152, column: 56, scope: !9066)
!9071 = !DILocation(line: 152, column: 17, scope: !9066)
!9072 = !DILocation(line: 152, column: 26, scope: !9066)
!9073 = !DILocation(line: 152, column: 40, scope: !9066)
!9074 = !DILocation(line: 152, column: 54, scope: !9066)
!9075 = !DILocation(line: 154, column: 13, scope: !9009)
!9076 = !DILocation(line: 154, column: 22, scope: !9009)
!9077 = !DILocation(line: 154, column: 28, scope: !9009)
!9078 = !DILocation(line: 155, column: 13, scope: !9009)
!9079 = distinct !{!9079, !8999, !9080, !3203}
!9080 = !DILocation(line: 157, column: 5, scope: !8977)
!9081 = !DILabel(scope: !8977, name: "out", file: !642, line: 159)
!9082 = !DILocation(line: 159, column: 1, scope: !8977)
!9083 = !DILocation(line: 160, column: 5, scope: !8977)
!9084 = !DILabel(scope: !8977, name: "error", file: !642, line: 162)
!9085 = !DILocation(line: 162, column: 1, scope: !8977)
!9086 = !DILocation(line: 163, column: 10, scope: !8977)
!9087 = !DILocation(line: 163, column: 19, scope: !8977)
!9088 = !DILocation(line: 163, column: 33, scope: !8977)
!9089 = !DILocation(line: 163, column: 5, scope: !8977)
!9090 = !DILocation(line: 164, column: 10, scope: !8977)
!9091 = !DILocation(line: 164, column: 19, scope: !8977)
!9092 = !DILocation(line: 164, column: 33, scope: !8977)
!9093 = !DILocation(line: 164, column: 5, scope: !8977)
!9094 = !DILocation(line: 165, column: 1, scope: !8977)
!9095 = distinct !DISubprogram(name: "lwan_get_default_config", scope: !642, file: !642, line: 440, type: !9096, scopeLine: 441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !659, retainedNodes: !74)
!9096 = !DISubroutineType(types: !9097)
!9097 = !{!8250}
!9098 = !DILocation(line: 442, column: 5, scope: !9095)
!9099 = distinct !DISubprogram(name: "lwan_shutdown", scope: !642, file: !642, line: 503, type: !8240, scopeLine: 504, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !659, retainedNodes: !74)
!9100 = !DILocalVariable(name: "l", arg: 1, scope: !9099, file: !642, line: 503, type: !7876)
!9101 = !DILocation(line: 503, column: 23, scope: !9099)
!9102 = !DILocation(line: 505, column: 5, scope: !9099)
!9103 = !DILocation(line: 507, column: 9, scope: !9104)
!9104 = distinct !DILexicalBlock(scope: !9099, file: !642, line: 507, column: 9)
!9105 = !DILocation(line: 507, column: 12, scope: !9104)
!9106 = !DILocation(line: 507, column: 19, scope: !9104)
!9107 = !DILocation(line: 507, column: 46, scope: !9104)
!9108 = !DILocation(line: 507, column: 28, scope: !9104)
!9109 = !DILocation(line: 507, column: 9, scope: !9099)
!9110 = !DILocation(line: 508, column: 14, scope: !9104)
!9111 = !DILocation(line: 508, column: 17, scope: !9104)
!9112 = !DILocation(line: 508, column: 24, scope: !9104)
!9113 = !DILocation(line: 508, column: 9, scope: !9104)
!9114 = !DILocation(line: 510, column: 5, scope: !9099)
!9115 = !DILocation(line: 511, column: 26, scope: !9099)
!9116 = !DILocation(line: 511, column: 5, scope: !9099)
!9117 = !DILocation(line: 513, column: 5, scope: !9099)
!9118 = !DILocation(line: 514, column: 24, scope: !9099)
!9119 = !DILocation(line: 514, column: 27, scope: !9099)
!9120 = !DILocation(line: 514, column: 5, scope: !9099)
!9121 = !DILocation(line: 516, column: 10, scope: !9099)
!9122 = !DILocation(line: 516, column: 13, scope: !9099)
!9123 = !DILocation(line: 516, column: 5, scope: !9099)
!9124 = !DILocation(line: 518, column: 5, scope: !9099)
!9125 = !DILocation(line: 519, column: 5, scope: !9099)
!9126 = !DILocation(line: 520, column: 26, scope: !9099)
!9127 = !DILocation(line: 520, column: 5, scope: !9099)
!9128 = !DILocation(line: 521, column: 5, scope: !9099)
!9129 = !DILocation(line: 522, column: 26, scope: !9099)
!9130 = !DILocation(line: 522, column: 5, scope: !9099)
!9131 = !DILocation(line: 523, column: 1, scope: !9099)
!9132 = distinct !DISubprogram(name: "lwan_module_shutdown", scope: !642, file: !642, line: 61, type: !8240, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !659, retainedNodes: !74)
!9133 = !DILocalVariable(name: "l", arg: 1, scope: !9132, file: !642, line: 61, type: !7876)
!9134 = !DILocation(line: 61, column: 42, scope: !9132)
!9135 = !DILocation(line: 63, column: 15, scope: !9132)
!9136 = !DILocation(line: 63, column: 18, scope: !9132)
!9137 = !DILocation(line: 63, column: 5, scope: !9132)
!9138 = !DILocation(line: 64, column: 1, scope: !9132)
!9139 = distinct !DISubprogram(name: "lwan_main_loop", scope: !642, file: !642, line: 559, type: !8240, scopeLine: 560, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !659, retainedNodes: !74)
!9140 = !DILocalVariable(name: "l", arg: 1, scope: !9139, file: !642, line: 559, type: !7876)
!9141 = !DILocation(line: 559, column: 24, scope: !9139)
!9142 = !DILocation(line: 561, column: 5, scope: !9143)
!9143 = distinct !DILexicalBlock(scope: !9144, file: !642, line: 561, column: 5)
!9144 = distinct !DILexicalBlock(scope: !9139, file: !642, line: 561, column: 5)
!9145 = !DILocation(line: 561, column: 5, scope: !9144)
!9146 = !DILocation(line: 562, column: 19, scope: !9139)
!9147 = !DILocation(line: 562, column: 22, scope: !9139)
!9148 = !DILocation(line: 562, column: 17, scope: !9139)
!9149 = !DILocation(line: 563, column: 9, scope: !9150)
!9150 = distinct !DILexicalBlock(scope: !9139, file: !642, line: 563, column: 9)
!9151 = !DILocation(line: 563, column: 40, scope: !9150)
!9152 = !DILocation(line: 563, column: 9, scope: !9139)
!9153 = !DILocation(line: 564, column: 9, scope: !9150)
!9154 = !DILocation(line: 566, column: 5, scope: !9139)
!9155 = !DILocation(line: 568, column: 5, scope: !9139)
!9156 = !DILocalVariable(name: "client_fd", scope: !9157, file: !642, line: 569, type: !37)
!9157 = distinct !DILexicalBlock(scope: !9158, file: !642, line: 568, column: 14)
!9158 = distinct !DILexicalBlock(scope: !9159, file: !642, line: 568, column: 5)
!9159 = distinct !DILexicalBlock(scope: !9139, file: !642, line: 568, column: 5)
!9160 = !DILocation(line: 569, column: 13, scope: !9157)
!9161 = !DILocation(line: 569, column: 33, scope: !9157)
!9162 = !DILocation(line: 569, column: 46, scope: !9157)
!9163 = !DILocation(line: 569, column: 25, scope: !9157)
!9164 = !DILocation(line: 570, column: 13, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !9157, file: !642, line: 570, column: 13)
!9166 = !DILocation(line: 570, column: 13, scope: !9157)
!9167 = !DILocation(line: 571, column: 17, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !9169, file: !642, line: 571, column: 17)
!9169 = distinct !DILexicalBlock(scope: !9165, file: !642, line: 570, column: 38)
!9170 = !DILocation(line: 571, column: 23, scope: !9168)
!9171 = !DILocation(line: 571, column: 17, scope: !9169)
!9172 = !DILocation(line: 572, column: 17, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9168, file: !642, line: 571, column: 33)
!9174 = !DILocation(line: 573, column: 17, scope: !9173)
!9175 = distinct !{!9175, !9176, !9177}
!9176 = !DILocation(line: 568, column: 5, scope: !9159)
!9177 = !DILocation(line: 586, column: 5, scope: !9159)
!9178 = !DILocation(line: 576, column: 17, scope: !9179)
!9179 = distinct !DILexicalBlock(scope: !9169, file: !642, line: 576, column: 17)
!9180 = !DILocation(line: 576, column: 29, scope: !9179)
!9181 = !DILocation(line: 576, column: 17, scope: !9169)
!9182 = !DILocation(line: 577, column: 17, scope: !9183)
!9183 = distinct !DILexicalBlock(scope: !9179, file: !642, line: 576, column: 34)
!9184 = !DILocation(line: 578, column: 13, scope: !9183)
!9185 = !DILocation(line: 579, column: 17, scope: !9186)
!9186 = distinct !DILexicalBlock(scope: !9179, file: !642, line: 578, column: 20)
!9187 = !DILocation(line: 582, column: 13, scope: !9169)
!9188 = !DILocation(line: 585, column: 25, scope: !9157)
!9189 = !DILocation(line: 585, column: 28, scope: !9157)
!9190 = !DILocalVariable(name: "l", arg: 1, scope: !9191, file: !642, line: 526, type: !7876)
!9191 = distinct !DISubprogram(name: "schedule_client", scope: !642, file: !642, line: 526, type: !9192, scopeLine: 527, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !659, retainedNodes: !74)
!9192 = !DISubroutineType(types: !9193)
!9193 = !{null, !7876, !37}
!9194 = !DILocation(line: 526, column: 25, scope: !9191, inlinedAt: !9195)
!9195 = distinct !DILocation(line: 585, column: 9, scope: !9157)
!9196 = !DILocalVariable(name: "fd", arg: 2, scope: !9191, file: !642, line: 526, type: !37)
!9197 = !DILocation(line: 526, column: 32, scope: !9191, inlinedAt: !9195)
!9198 = !DILocalVariable(name: "thread", scope: !9191, file: !642, line: 528, type: !37)
!9199 = !DILocation(line: 528, column: 9, scope: !9191, inlinedAt: !9195)
!9200 = !DILocation(line: 538, column: 16, scope: !9191, inlinedAt: !9195)
!9201 = !DILocation(line: 538, column: 19, scope: !9191, inlinedAt: !9195)
!9202 = !DILocation(line: 538, column: 24, scope: !9191, inlinedAt: !9195)
!9203 = !DILocation(line: 538, column: 31, scope: !9191, inlinedAt: !9195)
!9204 = !DILocation(line: 538, column: 34, scope: !9191, inlinedAt: !9195)
!9205 = !DILocation(line: 538, column: 41, scope: !9191, inlinedAt: !9195)
!9206 = !DILocation(line: 538, column: 29, scope: !9191, inlinedAt: !9195)
!9207 = !DILocation(line: 538, column: 12, scope: !9191, inlinedAt: !9195)
!9208 = !DILocalVariable(name: "t", scope: !9191, file: !642, line: 543, type: !7910)
!9209 = !DILocation(line: 543, column: 20, scope: !9191, inlinedAt: !9195)
!9210 = !DILocation(line: 543, column: 25, scope: !9191, inlinedAt: !9195)
!9211 = !DILocation(line: 543, column: 28, scope: !9191, inlinedAt: !9195)
!9212 = !DILocation(line: 543, column: 35, scope: !9191, inlinedAt: !9195)
!9213 = !DILocation(line: 543, column: 43, scope: !9191, inlinedAt: !9195)
!9214 = !DILocation(line: 544, column: 28, scope: !9191, inlinedAt: !9195)
!9215 = !DILocation(line: 544, column: 31, scope: !9191, inlinedAt: !9195)
!9216 = !DILocation(line: 544, column: 5, scope: !9191, inlinedAt: !9195)
!9217 = !DILocation(line: 568, column: 5, scope: !9158)
!9218 = !DILocation(line: 587, column: 1, scope: !9139)
!9219 = distinct !DISubprogram(name: "sigint_handler", scope: !642, file: !642, line: 550, type: !930, scopeLine: 551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !659, retainedNodes: !74)
!9220 = !DILocalVariable(name: "signal_number", arg: 1, scope: !9219, file: !642, line: 550, type: !37)
!9221 = !DILocation(line: 550, column: 20, scope: !9219)
!9222 = !DILocation(line: 552, column: 9, scope: !9223)
!9223 = distinct !DILexicalBlock(scope: !9219, file: !642, line: 552, column: 9)
!9224 = !DILocation(line: 552, column: 21, scope: !9223)
!9225 = !DILocation(line: 552, column: 9, scope: !9219)
!9226 = !DILocation(line: 553, column: 9, scope: !9223)
!9227 = !DILocation(line: 554, column: 11, scope: !9219)
!9228 = !DILocation(line: 554, column: 5, scope: !9219)
!9229 = !DILocation(line: 555, column: 17, scope: !9219)
!9230 = !DILocation(line: 556, column: 1, scope: !9219)
!9231 = !DILocation(line: 73, column: 5, scope: !1121)
!9232 = distinct !DISubprogram(name: "redirect_init", scope: !1122, file: !1122, line: 48, type: !1133, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1284, retainedNodes: !74)
!9233 = !DILocalVariable(name: "data", arg: 1, scope: !9232, file: !1122, line: 48, type: !5)
!9234 = !DILocation(line: 48, column: 34, scope: !9232)
!9235 = !DILocalVariable(name: "settings", scope: !9232, file: !1122, line: 50, type: !9236)
!9236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9237, size: 64)
!9237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_redirect_settings_t", file: !9238, line: 24, size: 64, elements: !9239)
!9238 = !DIFile(filename: "common/lwan-redirect.h", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "25abbb1e5767b611112408eeb90b4027")
!9239 = !{!9240}
!9240 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !9237, file: !9238, line: 25, baseType: !61, size: 64)
!9241 = !DILocation(line: 50, column: 38, scope: !9232)
!9242 = !DILocation(line: 50, column: 49, scope: !9232)
!9243 = !DILocation(line: 51, column: 13, scope: !9232)
!9244 = !DILocation(line: 51, column: 23, scope: !9232)
!9245 = !DILocation(line: 51, column: 12, scope: !9232)
!9246 = !DILocation(line: 51, column: 36, scope: !9232)
!9247 = !DILocation(line: 51, column: 46, scope: !9232)
!9248 = !DILocation(line: 51, column: 29, scope: !9232)
!9249 = !DILocation(line: 51, column: 5, scope: !9232)
!9250 = distinct !DISubprogram(name: "redirect_init_from_hash", scope: !1122, file: !1122, line: 54, type: !1137, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1284, retainedNodes: !74)
!9251 = !DILocalVariable(name: "hash", arg: 1, scope: !9250, file: !1122, line: 54, type: !1139)
!9252 = !DILocation(line: 54, column: 57, scope: !9250)
!9253 = !DILocalVariable(name: "settings", scope: !9250, file: !1122, line: 56, type: !9237)
!9254 = !DILocation(line: 56, column: 37, scope: !9250)
!9255 = !DILocation(line: 56, column: 48, scope: !9250)
!9256 = !DILocation(line: 57, column: 25, scope: !9250)
!9257 = !DILocation(line: 57, column: 15, scope: !9250)
!9258 = !DILocation(line: 59, column: 12, scope: !9250)
!9259 = !DILocation(line: 59, column: 5, scope: !9250)
!9260 = distinct !DISubprogram(name: "redirect_handle_cb", scope: !1122, file: !1122, line: 27, type: !1144, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1284, retainedNodes: !74)
!9261 = !DILocalVariable(name: "request", arg: 1, scope: !9260, file: !1122, line: 27, type: !1146)
!9262 = !DILocation(line: 27, column: 36, scope: !9260)
!9263 = !DILocalVariable(name: "response", arg: 2, scope: !9260, file: !1122, line: 28, type: !1281)
!9264 = !DILocation(line: 28, column: 37, scope: !9260)
!9265 = !DILocalVariable(name: "data", arg: 3, scope: !9260, file: !1122, line: 29, type: !5)
!9266 = !DILocation(line: 29, column: 26, scope: !9260)
!9267 = !DILocation(line: 31, column: 9, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9260, file: !1122, line: 31, column: 9)
!9269 = !DILocation(line: 31, column: 9, scope: !9260)
!9270 = !DILocation(line: 32, column: 9, scope: !9268)
!9271 = !DILocalVariable(name: "headers", scope: !9260, file: !1122, line: 34, type: !1232)
!9272 = !DILocation(line: 34, column: 23, scope: !9260)
!9273 = !DILocation(line: 34, column: 45, scope: !9260)
!9274 = !DILocation(line: 34, column: 54, scope: !9260)
!9275 = !DILocation(line: 34, column: 60, scope: !9260)
!9276 = !DILocation(line: 34, column: 33, scope: !9260)
!9277 = !DILocation(line: 35, column: 9, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !9260, file: !1122, line: 35, column: 9)
!9279 = !DILocation(line: 35, column: 9, scope: !9260)
!9280 = !DILocation(line: 36, column: 9, scope: !9278)
!9281 = !DILocation(line: 38, column: 5, scope: !9260)
!9282 = !DILocation(line: 38, column: 16, scope: !9260)
!9283 = !DILocation(line: 38, column: 20, scope: !9260)
!9284 = !DILocation(line: 39, column: 24, scope: !9260)
!9285 = !DILocation(line: 39, column: 5, scope: !9260)
!9286 = !DILocation(line: 39, column: 16, scope: !9260)
!9287 = !DILocation(line: 39, column: 22, scope: !9260)
!9288 = !DILocation(line: 40, column: 5, scope: !9260)
!9289 = !DILocation(line: 40, column: 16, scope: !9260)
!9290 = !DILocation(line: 40, column: 20, scope: !9260)
!9291 = !DILocation(line: 41, column: 5, scope: !9260)
!9292 = !DILocation(line: 41, column: 16, scope: !9260)
!9293 = !DILocation(line: 41, column: 22, scope: !9260)
!9294 = !DILocation(line: 43, column: 25, scope: !9260)
!9295 = !DILocation(line: 43, column: 5, scope: !9260)
!9296 = !DILocation(line: 43, column: 15, scope: !9260)
!9297 = !DILocation(line: 43, column: 23, scope: !9260)
!9298 = !DILocation(line: 45, column: 5, scope: !9260)
!9299 = !DILocation(line: 46, column: 1, scope: !9260)
!9300 = distinct !DISubprogram(name: "lwan_process_request", scope: !1296, file: !1296, line: 713, type: !9301, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!9301 = !DISubroutineType(types: !9302)
!9302 = !{!61, !1331, !1304, !1469, !61}
!9303 = !DILocalVariable(name: "l", arg: 1, scope: !9300, file: !1296, line: 713, type: !1331)
!9304 = !DILocation(line: 713, column: 30, scope: !9300)
!9305 = !DILocalVariable(name: "request", arg: 2, scope: !9300, file: !1296, line: 713, type: !1304)
!9306 = !DILocation(line: 713, column: 49, scope: !9300)
!9307 = !DILocalVariable(name: "buffer", arg: 3, scope: !9300, file: !1296, line: 714, type: !1469)
!9308 = !DILocation(line: 714, column: 19, scope: !9300)
!9309 = !DILocalVariable(name: "next_request", arg: 4, scope: !9300, file: !1296, line: 714, type: !61)
!9310 = !DILocation(line: 714, column: 33, scope: !9300)
!9311 = !DILocalVariable(name: "status", scope: !9300, file: !1296, line: 716, type: !497)
!9312 = !DILocation(line: 716, column: 24, scope: !9300)
!9313 = !DILocalVariable(name: "url_map", scope: !9300, file: !1296, line: 717, type: !9314)
!9314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9315, size: 64)
!9315 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_url_map_t", file: !262, line: 109, baseType: !9316)
!9316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_url_map_t_", file: !262, line: 236, size: 576, elements: !9317)
!9317 = !{!9318, !9323, !9324, !9325, !9326, !9327, !9339, !9340}
!9318 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !9316, file: !262, line: 237, baseType: !9319, size: 64)
!9319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9320, size: 64)
!9320 = !DISubroutineType(types: !9321)
!9321 = !{!497, !1304, !9322, !5}
!9322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64)
!9323 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9316, file: !262, line: 238, baseType: !5, size: 64, offset: 64)
!9324 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", scope: !9316, file: !262, line: 240, baseType: !480, size: 64, offset: 128)
!9325 = !DIDerivedType(tag: DW_TAG_member, name: "prefix_len", scope: !9316, file: !262, line: 241, baseType: !6, size: 64, offset: 192)
!9326 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9316, file: !262, line: 242, baseType: !1283, size: 32, offset: 256)
!9327 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !9316, file: !262, line: 244, baseType: !9328, size: 64, offset: 320)
!9328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9329, size: 64)
!9329 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9330)
!9330 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_module_t", file: !262, line: 104, baseType: !9331)
!9331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_module_t_", file: !262, line: 227, size: 384, elements: !9332)
!9332 = !{!9333, !9334, !9335, !9336, !9337, !9338}
!9333 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9331, file: !262, line: 228, baseType: !480, size: 64)
!9334 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !9331, file: !262, line: 229, baseType: !1132, size: 64, offset: 64)
!9335 = !DIDerivedType(tag: DW_TAG_member, name: "init_from_hash", scope: !9331, file: !262, line: 230, baseType: !1136, size: 64, offset: 128)
!9336 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !9331, file: !262, line: 231, baseType: !403, size: 64, offset: 192)
!9337 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !9331, file: !262, line: 232, baseType: !9319, size: 64, offset: 256)
!9338 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9331, file: !262, line: 233, baseType: !1283, size: 32, offset: 320)
!9339 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !9316, file: !262, line: 245, baseType: !5, size: 64, offset: 384)
!9340 = !DIDerivedType(tag: DW_TAG_member, name: "authorization", scope: !9316, file: !262, line: 250, baseType: !9341, size: 128, offset: 448)
!9341 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9316, file: !262, line: 247, size: 128, elements: !9342)
!9342 = !{!9343, !9344}
!9343 = !DIDerivedType(tag: DW_TAG_member, name: "realm", scope: !9341, file: !262, line: 248, baseType: !61, size: 64)
!9344 = !DIDerivedType(tag: DW_TAG_member, name: "password_file", scope: !9341, file: !262, line: 249, baseType: !61, size: 64, offset: 64)
!9345 = !DILocation(line: 717, column: 21, scope: !9300)
!9346 = !DILocalVariable(name: "helper", scope: !9300, file: !1296, line: 719, type: !1466)
!9347 = !DILocation(line: 719, column: 34, scope: !9300)
!9348 = !DILocation(line: 719, column: 43, scope: !9300)
!9349 = !DILocation(line: 720, column: 19, scope: !9300)
!9350 = !DILocation(line: 721, column: 25, scope: !9300)
!9351 = !DILocation(line: 724, column: 27, scope: !9300)
!9352 = !DILocalVariable(name: "request", arg: 1, scope: !9353, file: !1296, line: 591, type: !1304)
!9353 = distinct !DISubprogram(name: "read_request", scope: !1296, file: !1296, line: 591, type: !9354, scopeLine: 592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!9354 = !DISubroutineType(types: !9355)
!9355 = !{!497, !1304, !1465}
!9356 = !DILocation(line: 591, column: 30, scope: !9353, inlinedAt: !9357)
!9357 = distinct !DILocation(line: 724, column: 14, scope: !9300)
!9358 = !DILocalVariable(name: "helper", arg: 2, scope: !9353, file: !1296, line: 591, type: !1465)
!9359 = !DILocation(line: 591, column: 69, scope: !9353, inlinedAt: !9357)
!9360 = !DILocation(line: 593, column: 37, scope: !9353, inlinedAt: !9357)
!9361 = !DILocation(line: 593, column: 46, scope: !9353, inlinedAt: !9357)
!9362 = !DILocation(line: 593, column: 54, scope: !9353, inlinedAt: !9357)
!9363 = !DILocation(line: 593, column: 62, scope: !9353, inlinedAt: !9357)
!9364 = !DILocation(line: 593, column: 12, scope: !9353, inlinedAt: !9357)
!9365 = !DILocation(line: 724, column: 12, scope: !9300)
!9366 = !DILocation(line: 725, column: 9, scope: !9367)
!9367 = distinct !DILexicalBlock(scope: !9300, file: !1296, line: 725, column: 9)
!9368 = !DILocation(line: 725, column: 9, scope: !9300)
!9369 = !DILocation(line: 727, column: 13, scope: !9370)
!9370 = distinct !DILexicalBlock(scope: !9371, file: !1296, line: 727, column: 13)
!9371 = distinct !DILexicalBlock(scope: !9367, file: !1296, line: 725, column: 38)
!9372 = !DILocation(line: 727, column: 20, scope: !9370)
!9373 = !DILocation(line: 727, column: 13, scope: !9371)
!9374 = !DILocation(line: 728, column: 35, scope: !9370)
!9375 = !DILocation(line: 728, column: 44, scope: !9370)
!9376 = !DILocation(line: 728, column: 13, scope: !9370)
!9377 = !DILocation(line: 729, column: 9, scope: !9371)
!9378 = !DILocation(line: 732, column: 33, scope: !9300)
!9379 = !DILocation(line: 732, column: 14, scope: !9300)
!9380 = !DILocation(line: 732, column: 12, scope: !9300)
!9381 = !DILocation(line: 733, column: 9, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !9300, file: !1296, line: 733, column: 9)
!9383 = !DILocation(line: 733, column: 9, scope: !9300)
!9384 = !DILocation(line: 734, column: 31, scope: !9385)
!9385 = distinct !DILexicalBlock(scope: !9382, file: !1296, line: 733, column: 38)
!9386 = !DILocation(line: 734, column: 40, scope: !9385)
!9387 = !DILocation(line: 734, column: 9, scope: !9385)
!9388 = !DILocation(line: 735, column: 9, scope: !9385)
!9389 = !DILocation(line: 738, column: 40, scope: !9300)
!9390 = !DILocation(line: 738, column: 43, scope: !9300)
!9391 = !DILocation(line: 738, column: 57, scope: !9300)
!9392 = !DILocation(line: 738, column: 66, scope: !9300)
!9393 = !DILocation(line: 738, column: 70, scope: !9300)
!9394 = !DILocation(line: 738, column: 15, scope: !9300)
!9395 = !DILocation(line: 738, column: 13, scope: !9300)
!9396 = !DILocation(line: 739, column: 9, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9300, file: !1296, line: 739, column: 9)
!9398 = !DILocation(line: 739, column: 9, scope: !9300)
!9399 = !DILocation(line: 740, column: 31, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !9397, file: !1296, line: 739, column: 29)
!9401 = !DILocation(line: 740, column: 9, scope: !9400)
!9402 = !DILocation(line: 741, column: 9, scope: !9400)
!9403 = !DILocation(line: 744, column: 27, scope: !9300)
!9404 = !DILocation(line: 744, column: 36, scope: !9300)
!9405 = !DILocation(line: 744, column: 5, scope: !9300)
!9406 = !DILocation(line: 744, column: 14, scope: !9300)
!9407 = !DILocation(line: 744, column: 18, scope: !9300)
!9408 = !DILocation(line: 744, column: 24, scope: !9300)
!9409 = !DILocation(line: 745, column: 25, scope: !9300)
!9410 = !DILocation(line: 745, column: 34, scope: !9300)
!9411 = !DILocation(line: 745, column: 5, scope: !9300)
!9412 = !DILocation(line: 745, column: 14, scope: !9300)
!9413 = !DILocation(line: 745, column: 18, scope: !9300)
!9414 = !DILocation(line: 745, column: 22, scope: !9300)
!9415 = !DILocation(line: 747, column: 35, scope: !9300)
!9416 = !DILocation(line: 747, column: 44, scope: !9300)
!9417 = !DILocation(line: 747, column: 14, scope: !9300)
!9418 = !DILocation(line: 747, column: 12, scope: !9300)
!9419 = !DILocation(line: 748, column: 9, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9300, file: !1296, line: 748, column: 9)
!9421 = !DILocation(line: 748, column: 9, scope: !9300)
!9422 = !DILocation(line: 749, column: 31, scope: !9423)
!9423 = distinct !DILexicalBlock(scope: !9420, file: !1296, line: 748, column: 38)
!9424 = !DILocation(line: 749, column: 40, scope: !9423)
!9425 = !DILocation(line: 749, column: 9, scope: !9423)
!9426 = !DILocation(line: 750, column: 9, scope: !9423)
!9427 = !DILocation(line: 753, column: 14, scope: !9300)
!9428 = !DILocation(line: 753, column: 23, scope: !9300)
!9429 = !DILocation(line: 753, column: 31, scope: !9300)
!9430 = !DILocation(line: 753, column: 41, scope: !9300)
!9431 = !DILocation(line: 753, column: 50, scope: !9300)
!9432 = !DILocation(line: 753, column: 60, scope: !9300)
!9433 = !DILocation(line: 753, column: 69, scope: !9300)
!9434 = !DILocation(line: 753, column: 12, scope: !9300)
!9435 = !DILocation(line: 754, column: 19, scope: !9300)
!9436 = !DILocation(line: 754, column: 28, scope: !9300)
!9437 = !DILocation(line: 754, column: 5, scope: !9300)
!9438 = !DILabel(scope: !9300, name: "out", file: !1296, line: 756)
!9439 = !DILocation(line: 756, column: 1, scope: !9300)
!9440 = !DILocation(line: 757, column: 19, scope: !9300)
!9441 = !DILocation(line: 757, column: 5, scope: !9300)
!9442 = distinct !DISubprogram(name: "read_request_finalizer", scope: !1296, file: !1296, line: 562, type: !9443, scopeLine: 564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!9443 = !DISubroutineType(types: !9444)
!9444 = !{!9445, !6, !6, !1465}
!9445 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_read_finalizer_t", file: !1296, line: 39, baseType: !1442)
!9446 = !DILocalVariable(name: "total_read", arg: 1, scope: !9442, file: !1296, line: 562, type: !6)
!9447 = !DILocation(line: 562, column: 60, scope: !9442)
!9448 = !DILocalVariable(name: "buffer_size", arg: 2, scope: !9442, file: !1296, line: 563, type: !6)
!9449 = !DILocation(line: 563, column: 12, scope: !9442)
!9450 = !DILocalVariable(name: "helper", arg: 3, scope: !9442, file: !1296, line: 563, type: !1465)
!9451 = !DILocation(line: 563, column: 55, scope: !9442)
!9452 = !DILocation(line: 565, column: 9, scope: !9453)
!9453 = distinct !DILexicalBlock(scope: !9442, file: !1296, line: 565, column: 9)
!9454 = !DILocation(line: 565, column: 9, scope: !9442)
!9455 = !DILocation(line: 566, column: 9, scope: !9453)
!9456 = !DILocation(line: 568, column: 9, scope: !9457)
!9457 = distinct !DILexicalBlock(scope: !9442, file: !1296, line: 568, column: 9)
!9458 = !DILocation(line: 568, column: 9, scope: !9442)
!9459 = !DILocation(line: 569, column: 9, scope: !9457)
!9460 = !DILocation(line: 571, column: 9, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9442, file: !1296, line: 571, column: 9)
!9462 = !DILocation(line: 571, column: 9, scope: !9442)
!9463 = !DILocation(line: 572, column: 9, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9461, file: !1296, line: 571, column: 39)
!9465 = !DILocation(line: 572, column: 17, scope: !9464)
!9466 = !DILocation(line: 572, column: 30, scope: !9464)
!9467 = !DILocation(line: 573, column: 9, scope: !9464)
!9468 = !DILocation(line: 576, column: 9, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9442, file: !1296, line: 576, column: 9)
!9470 = !DILocation(line: 576, column: 9, scope: !9442)
!9471 = !DILocation(line: 577, column: 9, scope: !9469)
!9472 = !DILocation(line: 579, column: 25, scope: !9473)
!9473 = distinct !DILexicalBlock(scope: !9442, file: !1296, line: 579, column: 9)
!9474 = !DILocation(line: 579, column: 33, scope: !9473)
!9475 = !DILocation(line: 579, column: 41, scope: !9473)
!9476 = !DILocalVariable(name: "buffer", arg: 1, scope: !1454, file: !1296, line: 66, type: !61)
!9477 = !DILocation(line: 66, column: 23, scope: !1454, inlinedAt: !9478)
!9478 = distinct !DILocation(line: 579, column: 9, scope: !9473)
!9479 = !DILocation(line: 75, column: 5, scope: !1454, inlinedAt: !9478)
!9480 = !DILocalVariable(name: "s", arg: 1, scope: !9481, file: !262, line: 68, type: !480)
!9481 = distinct !DISubprogram(name: "string_as_int32", scope: !262, file: !262, line: 68, type: !9482, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!9482 = !DISubroutineType(types: !9483)
!9483 = !{!9484, !480}
!9484 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !9485, line: 26, baseType: !9486)
!9485 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h", directory: "", checksumkind: CSK_MD5, checksum: "55bcbdc3159515ebd91d351a70d505f4")
!9486 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !69, line: 41, baseType: !37)
!9487 = !DILocation(line: 68, column: 58, scope: !9481, inlinedAt: !9488)
!9488 = distinct !DILocation(line: 75, column: 5, scope: !1454, inlinedAt: !9478)
!9489 = !DILocalVariable(name: "i", scope: !9481, file: !262, line: 70, type: !9484)
!9490 = !DILocation(line: 70, column: 13, scope: !9481, inlinedAt: !9488)
!9491 = !DILocation(line: 71, column: 16, scope: !9481, inlinedAt: !9488)
!9492 = !DILocation(line: 71, column: 5, scope: !9481, inlinedAt: !9488)
!9493 = !DILocation(line: 72, column: 12, scope: !9481, inlinedAt: !9488)
!9494 = !DILocation(line: 77, column: 9, scope: !9495, inlinedAt: !9478)
!9495 = distinct !DILexicalBlock(scope: !1454, file: !1296, line: 75, column: 27)
!9496 = !DILocation(line: 79, column: 9, scope: !9495, inlinedAt: !9478)
!9497 = !DILocation(line: 81, column: 9, scope: !9495, inlinedAt: !9478)
!9498 = !DILocation(line: 84, column: 5, scope: !1454, inlinedAt: !9478)
!9499 = !DILocation(line: 85, column: 1, scope: !1454, inlinedAt: !9478)
!9500 = !DILocation(line: 579, column: 48, scope: !9473)
!9501 = !DILocation(line: 579, column: 9, scope: !9442)
!9502 = !DILocalVariable(name: "post_data_separator", scope: !9503, file: !1296, line: 580, type: !61)
!9503 = distinct !DILexicalBlock(scope: !9473, file: !1296, line: 579, column: 72)
!9504 = !DILocation(line: 580, column: 15, scope: !9503)
!9505 = !DILocation(line: 580, column: 45, scope: !9503)
!9506 = !DILocation(line: 580, column: 53, scope: !9503)
!9507 = !DILocation(line: 580, column: 61, scope: !9503)
!9508 = !DILocation(line: 580, column: 37, scope: !9503)
!9509 = !DILocation(line: 581, column: 13, scope: !9510)
!9510 = distinct !DILexicalBlock(scope: !9503, file: !1296, line: 581, column: 13)
!9511 = !DILocation(line: 581, column: 13, scope: !9503)
!9512 = !DILocation(line: 582, column: 17, scope: !9513)
!9513 = distinct !DILexicalBlock(scope: !9514, file: !1296, line: 582, column: 17)
!9514 = distinct !DILexicalBlock(scope: !9510, file: !1296, line: 581, column: 34)
!9515 = !DILocation(line: 582, column: 17, scope: !9514)
!9516 = !DILocation(line: 583, column: 17, scope: !9513)
!9517 = !DILocation(line: 584, column: 9, scope: !9514)
!9518 = !DILocation(line: 585, column: 5, scope: !9503)
!9519 = !DILocation(line: 587, column: 5, scope: !9442)
!9520 = !DILocation(line: 588, column: 1, scope: !9442)
!9521 = distinct !DISubprogram(name: "read_from_request_socket", scope: !1296, file: !1296, line: 488, type: !9522, scopeLine: 491, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!9522 = !DISubroutineType(types: !9523)
!9523 = !{!497, !1304, !1469, !1465, !73, !9524}
!9524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9443, size: 64)
!9525 = !DILocalVariable(name: "request", arg: 1, scope: !9521, file: !1296, line: 488, type: !1304)
!9526 = !DILocation(line: 488, column: 68, scope: !9521)
!9527 = !DILocalVariable(name: "buffer", arg: 2, scope: !9521, file: !1296, line: 489, type: !1469)
!9528 = !DILocation(line: 489, column: 19, scope: !9521)
!9529 = !DILocalVariable(name: "helper", arg: 3, scope: !9521, file: !1296, line: 489, type: !1465)
!9530 = !DILocation(line: 489, column: 57, scope: !9521)
!9531 = !DILocalVariable(name: "buffer_size", arg: 4, scope: !9521, file: !1296, line: 489, type: !73)
!9532 = !DILocation(line: 489, column: 78, scope: !9521)
!9533 = !DILocalVariable(name: "finalizer", arg: 5, scope: !9521, file: !1296, line: 490, type: !9524)
!9534 = !DILocation(line: 490, column: 29, scope: !9521)
!9535 = !DILocalVariable(name: "n", scope: !9521, file: !1296, line: 492, type: !4392)
!9536 = !DILocation(line: 492, column: 13, scope: !9521)
!9537 = !DILocalVariable(name: "total_read", scope: !9521, file: !1296, line: 493, type: !6)
!9538 = !DILocation(line: 493, column: 12, scope: !9521)
!9539 = !DILocalVariable(name: "packets_remaining", scope: !9521, file: !1296, line: 494, type: !37)
!9540 = !DILocation(line: 494, column: 9, scope: !9521)
!9541 = !DILocation(line: 496, column: 9, scope: !9542)
!9542 = distinct !DILexicalBlock(scope: !9521, file: !1296, line: 496, column: 9)
!9543 = !DILocation(line: 496, column: 17, scope: !9542)
!9544 = !DILocation(line: 496, column: 9, scope: !9521)
!9545 = !DILocation(line: 497, column: 33, scope: !9546)
!9546 = distinct !DILexicalBlock(scope: !9542, file: !1296, line: 496, column: 31)
!9547 = !DILocation(line: 497, column: 41, scope: !9546)
!9548 = !DILocation(line: 497, column: 56, scope: !9546)
!9549 = !DILocation(line: 497, column: 64, scope: !9546)
!9550 = !DILocation(line: 497, column: 54, scope: !9546)
!9551 = !DILocation(line: 497, column: 9, scope: !9546)
!9552 = !DILocation(line: 497, column: 17, scope: !9546)
!9553 = !DILocation(line: 497, column: 21, scope: !9546)
!9554 = !DILocation(line: 500, column: 17, scope: !9546)
!9555 = !DILocation(line: 500, column: 25, scope: !9546)
!9556 = !DILocation(line: 500, column: 32, scope: !9546)
!9557 = !DILocation(line: 500, column: 40, scope: !9546)
!9558 = !DILocation(line: 500, column: 54, scope: !9546)
!9559 = !DILocation(line: 500, column: 62, scope: !9546)
!9560 = !DILocation(line: 500, column: 9, scope: !9546)
!9561 = !DILocation(line: 501, column: 22, scope: !9546)
!9562 = !DILocation(line: 501, column: 30, scope: !9546)
!9563 = !DILocation(line: 501, column: 20, scope: !9546)
!9564 = !DILocation(line: 502, column: 9, scope: !9546)
!9565 = !DILocation(line: 505, column: 5, scope: !9521)
!9566 = !DILocation(line: 505, column: 12, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !9568, file: !1296, line: 505, column: 5)
!9568 = distinct !DILexicalBlock(scope: !9521, file: !1296, line: 505, column: 5)
!9569 = !DILocation(line: 505, column: 30, scope: !9567)
!9570 = !DILocation(line: 505, column: 5, scope: !9568)
!9571 = !DILocation(line: 506, column: 18, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9567, file: !1296, line: 505, column: 56)
!9573 = !DILocation(line: 506, column: 27, scope: !9572)
!9574 = !DILocation(line: 506, column: 31, scope: !9572)
!9575 = !DILocation(line: 506, column: 39, scope: !9572)
!9576 = !DILocation(line: 506, column: 47, scope: !9572)
!9577 = !DILocation(line: 506, column: 45, scope: !9572)
!9578 = !DILocation(line: 507, column: 30, scope: !9572)
!9579 = !DILocation(line: 507, column: 44, scope: !9572)
!9580 = !DILocation(line: 507, column: 42, scope: !9572)
!9581 = !DILocation(line: 506, column: 13, scope: !9572)
!9582 = !DILocation(line: 506, column: 11, scope: !9572)
!9583 = !DILocation(line: 509, column: 13, scope: !9584)
!9584 = distinct !DILexicalBlock(scope: !9572, file: !1296, line: 509, column: 13)
!9585 = !DILocation(line: 509, column: 13, scope: !9572)
!9586 = !DILocation(line: 510, column: 24, scope: !9587)
!9587 = distinct !DILexicalBlock(scope: !9584, file: !1296, line: 509, column: 31)
!9588 = !DILocation(line: 510, column: 33, scope: !9587)
!9589 = !DILocation(line: 510, column: 39, scope: !9587)
!9590 = !DILocation(line: 510, column: 13, scope: !9587)
!9591 = !DILocation(line: 511, column: 13, scope: !9587)
!9592 = !DILocation(line: 514, column: 13, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9572, file: !1296, line: 514, column: 13)
!9594 = !DILocation(line: 514, column: 13, scope: !9572)
!9595 = !DILocation(line: 515, column: 21, scope: !9596)
!9596 = distinct !DILexicalBlock(scope: !9593, file: !1296, line: 514, column: 30)
!9597 = !DILocation(line: 515, column: 13, scope: !9596)
!9598 = !DILocation(line: 515, column: 28, scope: !9596)
!9599 = !DILabel(scope: !9600, name: "yield_and_read_again", file: !1296, line: 518)
!9600 = distinct !DILexicalBlock(scope: !9596, file: !1296, line: 515, column: 28)
!9601 = !DILocation(line: 518, column: 1, scope: !9600)
!9602 = !DILocation(line: 519, column: 17, scope: !9600)
!9603 = !DILocation(line: 519, column: 26, scope: !9600)
!9604 = !DILocation(line: 519, column: 32, scope: !9600)
!9605 = !DILocation(line: 519, column: 38, scope: !9600)
!9606 = !DILocation(line: 520, column: 28, scope: !9600)
!9607 = !DILocation(line: 520, column: 37, scope: !9600)
!9608 = !DILocation(line: 520, column: 43, scope: !9600)
!9609 = !DILocation(line: 520, column: 17, scope: !9600)
!9610 = !DILocation(line: 521, column: 17, scope: !9600)
!9611 = !DILocation(line: 525, column: 17, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9596, file: !1296, line: 525, column: 17)
!9613 = !DILocation(line: 525, column: 17, scope: !9596)
!9614 = !DILocation(line: 526, column: 17, scope: !9612)
!9615 = !DILocation(line: 529, column: 24, scope: !9596)
!9616 = !DILocation(line: 529, column: 33, scope: !9596)
!9617 = !DILocation(line: 529, column: 39, scope: !9596)
!9618 = !DILocation(line: 529, column: 13, scope: !9596)
!9619 = !DILocation(line: 530, column: 13, scope: !9596)
!9620 = !DILocation(line: 533, column: 31, scope: !9572)
!9621 = !DILocation(line: 533, column: 20, scope: !9572)
!9622 = !DILocation(line: 534, column: 9, scope: !9572)
!9623 = !DILocation(line: 534, column: 17, scope: !9572)
!9624 = !DILocation(line: 534, column: 23, scope: !9572)
!9625 = !DILocation(line: 534, column: 35, scope: !9572)
!9626 = !DILocation(line: 535, column: 31, scope: !9572)
!9627 = !DILocation(line: 535, column: 9, scope: !9572)
!9628 = !DILocation(line: 535, column: 17, scope: !9572)
!9629 = !DILocation(line: 535, column: 21, scope: !9572)
!9630 = !DILabel(scope: !9572, name: "try_to_finalize", file: !1296, line: 537)
!9631 = !DILocation(line: 537, column: 1, scope: !9572)
!9632 = !DILocation(line: 538, column: 17, scope: !9572)
!9633 = !DILocation(line: 538, column: 27, scope: !9572)
!9634 = !DILocation(line: 538, column: 39, scope: !9572)
!9635 = !DILocation(line: 538, column: 52, scope: !9572)
!9636 = !DILocation(line: 538, column: 9, scope: !9572)
!9637 = !DILocation(line: 540, column: 13, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9572, file: !1296, line: 538, column: 61)
!9639 = !DILocation(line: 540, column: 22, scope: !9638)
!9640 = !DILocation(line: 540, column: 28, scope: !9638)
!9641 = !DILocation(line: 540, column: 34, scope: !9638)
!9642 = !DILocation(line: 541, column: 13, scope: !9638)
!9643 = !DILocation(line: 543, column: 13, scope: !9638)
!9644 = !DILocation(line: 545, column: 13, scope: !9638)
!9645 = !DILocation(line: 547, column: 13, scope: !9638)
!9646 = !DILocation(line: 549, column: 5, scope: !9572)
!9647 = !DILocation(line: 505, column: 52, scope: !9567)
!9648 = !DILocation(line: 505, column: 5, scope: !9567)
!9649 = distinct !{!9649, !9570, !9650, !3203}
!9650 = !DILocation(line: 549, column: 5, scope: !9568)
!9651 = !DILocation(line: 559, column: 5, scope: !9521)
!9652 = !DILocation(line: 560, column: 1, scope: !9521)
!9653 = distinct !DISubprogram(name: "parse_http_request", scope: !1296, file: !1296, line: 634, type: !9354, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!9654 = !DILocalVariable(name: "request", arg: 1, scope: !9653, file: !1296, line: 634, type: !1304)
!9655 = !DILocation(line: 634, column: 36, scope: !9653)
!9656 = !DILocalVariable(name: "helper", arg: 2, scope: !9653, file: !1296, line: 634, type: !1465)
!9657 = !DILocation(line: 634, column: 75, scope: !9653)
!9658 = !DILocalVariable(name: "buffer", scope: !9653, file: !1296, line: 636, type: !61)
!9659 = !DILocation(line: 636, column: 11, scope: !9653)
!9660 = !DILocation(line: 638, column: 40, scope: !9653)
!9661 = !DILocation(line: 638, column: 48, scope: !9653)
!9662 = !DILocation(line: 638, column: 56, scope: !9653)
!9663 = !DILocalVariable(name: "buffer", arg: 1, scope: !9664, file: !1296, line: 467, type: !61)
!9664 = distinct !DISubprogram(name: "ignore_leading_whitespace", scope: !1296, file: !1296, line: 467, type: !5895, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!9665 = !DILocation(line: 467, column: 33, scope: !9664, inlinedAt: !9666)
!9666 = distinct !DILocation(line: 638, column: 14, scope: !9653)
!9667 = !DILocation(line: 469, column: 5, scope: !9664, inlinedAt: !9666)
!9668 = !DILocation(line: 469, column: 13, scope: !9664, inlinedAt: !9666)
!9669 = !DILocation(line: 469, column: 12, scope: !9664, inlinedAt: !9666)
!9670 = !DILocation(line: 469, column: 20, scope: !9664, inlinedAt: !9666)
!9671 = !DILocation(line: 469, column: 33, scope: !9664, inlinedAt: !9666)
!9672 = !DILocation(line: 469, column: 32, scope: !9664, inlinedAt: !9666)
!9673 = !DILocalVariable(name: "ch", arg: 1, scope: !9674, file: !1296, line: 461, type: !47)
!9674 = distinct !DISubprogram(name: "is_space", scope: !1296, file: !1296, line: 461, type: !9675, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!9675 = !DISubroutineType(types: !9676)
!9676 = !{!8, !47}
!9677 = !DILocation(line: 461, column: 15, scope: !9674, inlinedAt: !9678)
!9678 = distinct !DILocation(line: 469, column: 23, scope: !9664, inlinedAt: !9666)
!9679 = !DILocation(line: 463, column: 56, scope: !9674, inlinedAt: !9678)
!9680 = !DILocation(line: 463, column: 41, scope: !9674, inlinedAt: !9678)
!9681 = !DILocation(line: 463, column: 39, scope: !9674, inlinedAt: !9678)
!9682 = !DILocation(line: 463, column: 60, scope: !9674, inlinedAt: !9678)
!9683 = !DILocalVariable(name: "n", arg: 1, scope: !9684, file: !1296, line: 455, type: !8)
!9684 = distinct !DISubprogram(name: "has_zero_byte", scope: !1296, file: !1296, line: 455, type: !9685, scopeLine: 456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!9685 = !DISubroutineType(types: !9686)
!9686 = !{!8, !8}
!9687 = !DILocation(line: 455, column: 29, scope: !9684, inlinedAt: !9688)
!9688 = distinct !DILocation(line: 463, column: 12, scope: !9674, inlinedAt: !9678)
!9689 = !DILocation(line: 457, column: 14, scope: !9684, inlinedAt: !9688)
!9690 = !DILocation(line: 457, column: 16, scope: !9684, inlinedAt: !9688)
!9691 = !DILocation(line: 457, column: 35, scope: !9684, inlinedAt: !9688)
!9692 = !DILocation(line: 457, column: 34, scope: !9684, inlinedAt: !9688)
!9693 = !DILocation(line: 457, column: 32, scope: !9684, inlinedAt: !9688)
!9694 = !DILocation(line: 457, column: 38, scope: !9684, inlinedAt: !9688)
!9695 = !DILocation(line: 0, scope: !9664, inlinedAt: !9666)
!9696 = !DILocation(line: 470, column: 15, scope: !9664, inlinedAt: !9666)
!9697 = distinct !{!9697, !9667, !9696, !3203}
!9698 = !DILocation(line: 471, column: 12, scope: !9664, inlinedAt: !9666)
!9699 = !DILocation(line: 638, column: 12, scope: !9653)
!9700 = !DILocation(line: 639, column: 9, scope: !9701)
!9701 = distinct !DILexicalBlock(scope: !9653, file: !1296, line: 639, column: 9)
!9702 = !DILocation(line: 639, column: 9, scope: !9653)
!9703 = !DILocation(line: 640, column: 9, scope: !9701)
!9704 = !DILocalVariable(name: "path", scope: !9653, file: !1296, line: 642, type: !61)
!9705 = !DILocation(line: 642, column: 11, scope: !9653)
!9706 = !DILocation(line: 642, column: 39, scope: !9653)
!9707 = !DILocation(line: 642, column: 48, scope: !9653)
!9708 = !DILocalVariable(name: "request", arg: 1, scope: !1301, file: !1296, line: 88, type: !1304)
!9709 = !DILocation(line: 88, column: 38, scope: !1301, inlinedAt: !9710)
!9710 = distinct !DILocation(line: 642, column: 18, scope: !9653)
!9711 = !DILocalVariable(name: "buffer", arg: 2, scope: !1301, file: !1296, line: 88, type: !61)
!9712 = !DILocation(line: 88, column: 53, scope: !1301, inlinedAt: !9710)
!9713 = !DILocalVariable(name: "flags", scope: !1301, file: !1296, line: 90, type: !347)
!9714 = !DILocation(line: 90, column: 26, scope: !1301, inlinedAt: !9710)
!9715 = !DILocation(line: 90, column: 50, scope: !1301, inlinedAt: !9710)
!9716 = !DILocation(line: 66, column: 23, scope: !1454, inlinedAt: !9717)
!9717 = distinct !DILocation(line: 90, column: 34, scope: !1301, inlinedAt: !9710)
!9718 = !DILocation(line: 75, column: 5, scope: !1454, inlinedAt: !9717)
!9719 = !DILocation(line: 68, column: 58, scope: !9481, inlinedAt: !9720)
!9720 = distinct !DILocation(line: 75, column: 5, scope: !1454, inlinedAt: !9717)
!9721 = !DILocation(line: 70, column: 13, scope: !9481, inlinedAt: !9720)
!9722 = !DILocation(line: 71, column: 16, scope: !9481, inlinedAt: !9720)
!9723 = !DILocation(line: 71, column: 5, scope: !9481, inlinedAt: !9720)
!9724 = !DILocation(line: 72, column: 12, scope: !9481, inlinedAt: !9720)
!9725 = !DILocation(line: 77, column: 9, scope: !9495, inlinedAt: !9717)
!9726 = !DILocation(line: 79, column: 9, scope: !9495, inlinedAt: !9717)
!9727 = !DILocation(line: 81, column: 9, scope: !9495, inlinedAt: !9717)
!9728 = !DILocation(line: 84, column: 5, scope: !1454, inlinedAt: !9717)
!9729 = !DILocation(line: 85, column: 1, scope: !1454, inlinedAt: !9717)
!9730 = !DILocation(line: 97, column: 23, scope: !1301, inlinedAt: !9710)
!9731 = !DILocation(line: 97, column: 5, scope: !1301, inlinedAt: !9710)
!9732 = !DILocation(line: 97, column: 20, scope: !1301, inlinedAt: !9710)
!9733 = !DILocation(line: 98, column: 12, scope: !1301, inlinedAt: !9710)
!9734 = !DILocation(line: 98, column: 27, scope: !1301, inlinedAt: !9710)
!9735 = !DILocation(line: 98, column: 21, scope: !1301, inlinedAt: !9710)
!9736 = !DILocation(line: 98, column: 19, scope: !1301, inlinedAt: !9710)
!9737 = !DILocation(line: 643, column: 9, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !9653, file: !1296, line: 643, column: 9)
!9739 = !DILocation(line: 643, column: 9, scope: !9653)
!9740 = !DILocation(line: 644, column: 9, scope: !9738)
!9741 = !DILocation(line: 646, column: 33, scope: !9653)
!9742 = !DILocation(line: 646, column: 42, scope: !9653)
!9743 = !DILocation(line: 646, column: 48, scope: !9653)
!9744 = !DILocation(line: 646, column: 14, scope: !9653)
!9745 = !DILocation(line: 646, column: 12, scope: !9653)
!9746 = !DILocation(line: 647, column: 9, scope: !9747)
!9747 = distinct !DILexicalBlock(scope: !9653, file: !1296, line: 647, column: 9)
!9748 = !DILocation(line: 647, column: 9, scope: !9653)
!9749 = !DILocation(line: 648, column: 9, scope: !9747)
!9750 = !DILocation(line: 650, column: 28, scope: !9653)
!9751 = !DILocation(line: 650, column: 36, scope: !9653)
!9752 = !DILocation(line: 650, column: 44, scope: !9653)
!9753 = !DILocation(line: 650, column: 52, scope: !9653)
!9754 = !DILocation(line: 650, column: 60, scope: !9653)
!9755 = !DILocation(line: 650, column: 68, scope: !9653)
!9756 = !DILocation(line: 650, column: 76, scope: !9653)
!9757 = !DILocation(line: 650, column: 84, scope: !9653)
!9758 = !DILocation(line: 650, column: 66, scope: !9653)
!9759 = !DILocation(line: 650, column: 14, scope: !9653)
!9760 = !DILocation(line: 650, column: 12, scope: !9653)
!9761 = !DILocation(line: 651, column: 9, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9653, file: !1296, line: 651, column: 9)
!9763 = !DILocation(line: 651, column: 9, scope: !9653)
!9764 = !DILocation(line: 652, column: 9, scope: !9762)
!9765 = !DILocalVariable(name: "decoded_len", scope: !9653, file: !1296, line: 654, type: !6)
!9766 = !DILocation(line: 654, column: 12, scope: !9653)
!9767 = !DILocation(line: 654, column: 37, scope: !9653)
!9768 = !DILocation(line: 654, column: 46, scope: !9653)
!9769 = !DILocation(line: 654, column: 50, scope: !9653)
!9770 = !DILocation(line: 654, column: 26, scope: !9653)
!9771 = !DILocation(line: 655, column: 9, scope: !9772)
!9772 = distinct !DILexicalBlock(scope: !9653, file: !1296, line: 655, column: 9)
!9773 = !DILocation(line: 655, column: 9, scope: !9653)
!9774 = !DILocation(line: 656, column: 9, scope: !9772)
!9775 = !DILocation(line: 657, column: 52, scope: !9653)
!9776 = !DILocation(line: 657, column: 33, scope: !9653)
!9777 = !DILocation(line: 657, column: 42, scope: !9653)
!9778 = !DILocation(line: 657, column: 46, scope: !9653)
!9779 = !DILocation(line: 657, column: 50, scope: !9653)
!9780 = !DILocation(line: 657, column: 5, scope: !9653)
!9781 = !DILocation(line: 657, column: 14, scope: !9653)
!9782 = !DILocation(line: 657, column: 27, scope: !9653)
!9783 = !DILocation(line: 657, column: 31, scope: !9653)
!9784 = !DILocation(line: 659, column: 29, scope: !9653)
!9785 = !DILocation(line: 659, column: 38, scope: !9653)
!9786 = !DILocalVariable(name: "request", arg: 1, scope: !9787, file: !1296, line: 475, type: !1304)
!9787 = distinct !DISubprogram(name: "compute_keep_alive_flag", scope: !1296, file: !1296, line: 475, type: !1494, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!9788 = !DILocation(line: 475, column: 41, scope: !9787, inlinedAt: !9789)
!9789 = distinct !DILocation(line: 659, column: 5, scope: !9653)
!9790 = !DILocalVariable(name: "helper", arg: 2, scope: !9787, file: !1296, line: 475, type: !1465)
!9791 = !DILocation(line: 475, column: 80, scope: !9787, inlinedAt: !9789)
!9792 = !DILocalVariable(name: "is_keep_alive", scope: !9787, file: !1296, line: 477, type: !341)
!9793 = !DILocation(line: 477, column: 10, scope: !9787, inlinedAt: !9789)
!9794 = !DILocation(line: 478, column: 9, scope: !9795, inlinedAt: !9789)
!9795 = distinct !DILexicalBlock(scope: !9787, file: !1296, line: 478, column: 9)
!9796 = !DILocation(line: 478, column: 18, scope: !9795, inlinedAt: !9789)
!9797 = !DILocation(line: 478, column: 24, scope: !9795, inlinedAt: !9789)
!9798 = !DILocation(line: 478, column: 9, scope: !9787, inlinedAt: !9789)
!9799 = !DILocation(line: 479, column: 26, scope: !9795, inlinedAt: !9789)
!9800 = !DILocation(line: 479, column: 34, scope: !9795, inlinedAt: !9789)
!9801 = !DILocation(line: 479, column: 45, scope: !9795, inlinedAt: !9789)
!9802 = !DILocation(line: 479, column: 23, scope: !9795, inlinedAt: !9789)
!9803 = !DILocation(line: 479, column: 9, scope: !9795, inlinedAt: !9789)
!9804 = !DILocation(line: 481, column: 26, scope: !9795, inlinedAt: !9789)
!9805 = !DILocation(line: 481, column: 34, scope: !9795, inlinedAt: !9789)
!9806 = !DILocation(line: 481, column: 45, scope: !9795, inlinedAt: !9789)
!9807 = !DILocation(line: 481, column: 23, scope: !9795, inlinedAt: !9789)
!9808 = !DILocation(line: 482, column: 9, scope: !9809, inlinedAt: !9789)
!9809 = distinct !DILexicalBlock(scope: !9787, file: !1296, line: 482, column: 9)
!9810 = !DILocation(line: 482, column: 9, scope: !9787, inlinedAt: !9789)
!9811 = !DILocation(line: 483, column: 9, scope: !9809, inlinedAt: !9789)
!9812 = !DILocation(line: 483, column: 18, scope: !9809, inlinedAt: !9789)
!9813 = !DILocation(line: 483, column: 30, scope: !9809, inlinedAt: !9789)
!9814 = !DILocation(line: 485, column: 9, scope: !9809, inlinedAt: !9789)
!9815 = !DILocation(line: 485, column: 18, scope: !9809, inlinedAt: !9789)
!9816 = !DILocation(line: 485, column: 30, scope: !9809, inlinedAt: !9789)
!9817 = !DILocation(line: 661, column: 9, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !9653, file: !1296, line: 661, column: 9)
!9819 = !DILocation(line: 661, column: 18, scope: !9818)
!9820 = !DILocation(line: 661, column: 24, scope: !9818)
!9821 = !DILocation(line: 661, column: 9, scope: !9653)
!9822 = !DILocalVariable(name: "status", scope: !9823, file: !1296, line: 662, type: !497)
!9823 = distinct !DILexicalBlock(scope: !9818, file: !1296, line: 661, column: 47)
!9824 = !DILocation(line: 662, column: 28, scope: !9823)
!9825 = !DILocation(line: 662, column: 52, scope: !9823)
!9826 = !DILocation(line: 662, column: 61, scope: !9823)
!9827 = !DILocation(line: 662, column: 69, scope: !9823)
!9828 = !DILocation(line: 662, column: 37, scope: !9823)
!9829 = !DILocation(line: 663, column: 13, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !9823, file: !1296, line: 663, column: 13)
!9831 = !DILocation(line: 663, column: 13, scope: !9823)
!9832 = !DILocation(line: 664, column: 20, scope: !9830)
!9833 = !DILocation(line: 664, column: 13, scope: !9830)
!9834 = !DILocation(line: 665, column: 5, scope: !9823)
!9835 = !DILocation(line: 667, column: 5, scope: !9653)
!9836 = !DILocation(line: 668, column: 1, scope: !9653)
!9837 = distinct !DISubprogram(name: "prepare_for_response", scope: !1296, file: !1296, line: 671, type: !9838, scopeLine: 674, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!9838 = !DISubroutineType(types: !9839)
!9839 = !{!497, !9314, !1304, !1465}
!9840 = !DILocalVariable(name: "url_map", arg: 1, scope: !9837, file: !1296, line: 671, type: !9314)
!9841 = !DILocation(line: 671, column: 38, scope: !9837)
!9842 = !DILocalVariable(name: "request", arg: 2, scope: !9837, file: !1296, line: 672, type: !1304)
!9843 = !DILocation(line: 672, column: 39, scope: !9837)
!9844 = !DILocalVariable(name: "helper", arg: 3, scope: !9837, file: !1296, line: 673, type: !1465)
!9845 = !DILocation(line: 673, column: 53, scope: !9837)
!9846 = !DILocation(line: 675, column: 9, scope: !9847)
!9847 = distinct !DILexicalBlock(scope: !9837, file: !1296, line: 675, column: 9)
!9848 = !DILocation(line: 675, column: 18, scope: !9847)
!9849 = !DILocation(line: 675, column: 24, scope: !9847)
!9850 = !DILocation(line: 675, column: 9, scope: !9837)
!9851 = !DILocation(line: 676, column: 28, scope: !9847)
!9852 = !DILocation(line: 676, column: 37, scope: !9847)
!9853 = !DILocation(line: 676, column: 9, scope: !9847)
!9854 = !DILocation(line: 678, column: 9, scope: !9855)
!9855 = distinct !DILexicalBlock(scope: !9837, file: !1296, line: 678, column: 9)
!9856 = !DILocation(line: 678, column: 18, scope: !9855)
!9857 = !DILocation(line: 678, column: 24, scope: !9855)
!9858 = !DILocation(line: 678, column: 9, scope: !9837)
!9859 = !DILocation(line: 679, column: 33, scope: !9855)
!9860 = !DILocation(line: 679, column: 42, scope: !9855)
!9861 = !DILocation(line: 679, column: 9, scope: !9855)
!9862 = !DILocation(line: 681, column: 9, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9837, file: !1296, line: 681, column: 9)
!9864 = !DILocation(line: 681, column: 18, scope: !9863)
!9865 = !DILocation(line: 681, column: 24, scope: !9863)
!9866 = !DILocation(line: 681, column: 9, scope: !9837)
!9867 = !DILocation(line: 682, column: 21, scope: !9863)
!9868 = !DILocation(line: 682, column: 30, scope: !9863)
!9869 = !DILocation(line: 682, column: 9, scope: !9863)
!9870 = !DILocation(line: 684, column: 9, scope: !9871)
!9871 = distinct !DILexicalBlock(scope: !9837, file: !1296, line: 684, column: 9)
!9872 = !DILocation(line: 684, column: 18, scope: !9871)
!9873 = !DILocation(line: 684, column: 24, scope: !9871)
!9874 = !DILocation(line: 684, column: 9, scope: !9837)
!9875 = !DILocation(line: 685, column: 31, scope: !9871)
!9876 = !DILocation(line: 685, column: 40, scope: !9871)
!9877 = !DILocation(line: 685, column: 9, scope: !9871)
!9878 = !DILocation(line: 687, column: 9, scope: !9879)
!9879 = distinct !DILexicalBlock(scope: !9837, file: !1296, line: 687, column: 9)
!9880 = !DILocation(line: 687, column: 18, scope: !9879)
!9881 = !DILocation(line: 687, column: 24, scope: !9879)
!9882 = !DILocation(line: 687, column: 9, scope: !9837)
!9883 = !DILocation(line: 688, column: 13, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9885, file: !1296, line: 688, column: 13)
!9885 = distinct !DILexicalBlock(scope: !9879, file: !1296, line: 687, column: 47)
!9886 = !DILocation(line: 688, column: 22, scope: !9884)
!9887 = !DILocation(line: 688, column: 28, scope: !9884)
!9888 = !DILocation(line: 688, column: 13, scope: !9885)
!9889 = !DILocation(line: 689, column: 29, scope: !9884)
!9890 = !DILocation(line: 689, column: 38, scope: !9884)
!9891 = !DILocation(line: 689, column: 13, scope: !9884)
!9892 = !DILocation(line: 691, column: 13, scope: !9884)
!9893 = !DILocation(line: 692, column: 5, scope: !9885)
!9894 = !DILocation(line: 694, column: 9, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9837, file: !1296, line: 694, column: 9)
!9896 = !DILocation(line: 694, column: 18, scope: !9895)
!9897 = !DILocation(line: 694, column: 24, scope: !9895)
!9898 = !DILocation(line: 694, column: 9, scope: !9837)
!9899 = !DILocation(line: 695, column: 34, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9901, file: !1296, line: 695, column: 13)
!9901 = distinct !DILexicalBlock(scope: !9895, file: !1296, line: 694, column: 50)
!9902 = !DILocation(line: 696, column: 26, scope: !9900)
!9903 = !DILocation(line: 696, column: 34, scope: !9900)
!9904 = !DILocation(line: 697, column: 25, scope: !9900)
!9905 = !DILocation(line: 697, column: 34, scope: !9900)
!9906 = !DILocation(line: 697, column: 48, scope: !9900)
!9907 = !DILocation(line: 698, column: 25, scope: !9900)
!9908 = !DILocation(line: 698, column: 34, scope: !9900)
!9909 = !DILocation(line: 698, column: 48, scope: !9900)
!9910 = !DILocation(line: 695, column: 14, scope: !9900)
!9911 = !DILocation(line: 695, column: 13, scope: !9901)
!9912 = !DILocation(line: 699, column: 13, scope: !9900)
!9913 = !DILocation(line: 700, column: 5, scope: !9901)
!9914 = !DILocation(line: 702, column: 9, scope: !9915)
!9915 = distinct !DILexicalBlock(scope: !9837, file: !1296, line: 702, column: 9)
!9916 = !DILocation(line: 702, column: 18, scope: !9915)
!9917 = !DILocation(line: 702, column: 24, scope: !9915)
!9918 = !DILocation(line: 702, column: 9, scope: !9837)
!9919 = !DILocation(line: 703, column: 9, scope: !9920)
!9920 = distinct !DILexicalBlock(scope: !9915, file: !1296, line: 702, column: 56)
!9921 = !DILocation(line: 703, column: 17, scope: !9920)
!9922 = !DILocation(line: 703, column: 26, scope: !9920)
!9923 = !DILocation(line: 703, column: 30, scope: !9920)
!9924 = !DILocation(line: 703, column: 16, scope: !9920)
!9925 = !DILocation(line: 703, column: 36, scope: !9920)
!9926 = !DILocation(line: 703, column: 43, scope: !9920)
!9927 = !DILocation(line: 703, column: 46, scope: !9920)
!9928 = !DILocation(line: 703, column: 55, scope: !9920)
!9929 = !DILocation(line: 703, column: 59, scope: !9920)
!9930 = !DILocation(line: 703, column: 63, scope: !9920)
!9931 = !DILocation(line: 0, scope: !9920)
!9932 = !DILocation(line: 704, column: 15, scope: !9933)
!9933 = distinct !DILexicalBlock(scope: !9920, file: !1296, line: 703, column: 68)
!9934 = !DILocation(line: 704, column: 24, scope: !9933)
!9935 = !DILocation(line: 704, column: 28, scope: !9933)
!9936 = !DILocation(line: 704, column: 13, scope: !9933)
!9937 = !DILocation(line: 705, column: 15, scope: !9933)
!9938 = !DILocation(line: 705, column: 24, scope: !9933)
!9939 = !DILocation(line: 705, column: 28, scope: !9933)
!9940 = !DILocation(line: 705, column: 13, scope: !9933)
!9941 = distinct !{!9941, !9919, !9942, !3203}
!9942 = !DILocation(line: 706, column: 9, scope: !9920)
!9943 = !DILocation(line: 707, column: 5, scope: !9920)
!9944 = !DILocation(line: 709, column: 5, scope: !9837)
!9945 = !DILocation(line: 710, column: 1, scope: !9837)
!9946 = distinct !DISubprogram(name: "parse_query_string", scope: !1296, file: !1296, line: 201, type: !1494, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!9947 = !DILocalVariable(name: "request", arg: 1, scope: !9946, file: !1296, line: 201, type: !1304)
!9948 = !DILocation(line: 201, column: 36, scope: !9946)
!9949 = !DILocalVariable(name: "helper", arg: 2, scope: !9946, file: !1296, line: 201, type: !1465)
!9950 = !DILocation(line: 201, column: 75, scope: !9946)
!9951 = !DILocation(line: 203, column: 32, scope: !9946)
!9952 = !DILocation(line: 203, column: 42, scope: !9946)
!9953 = !DILocation(line: 203, column: 50, scope: !9946)
!9954 = !DILocation(line: 204, column: 14, scope: !9946)
!9955 = !DILocation(line: 204, column: 23, scope: !9946)
!9956 = !DILocation(line: 204, column: 36, scope: !9946)
!9957 = !DILocation(line: 204, column: 43, scope: !9946)
!9958 = !DILocation(line: 204, column: 52, scope: !9946)
!9959 = !DILocation(line: 204, column: 65, scope: !9946)
!9960 = !DILocation(line: 203, column: 5, scope: !9946)
!9961 = !DILocation(line: 205, column: 1, scope: !9946)
!9962 = distinct !DISubprogram(name: "parse_if_modified_since", scope: !1296, file: !1296, line: 379, type: !1494, scopeLine: 380, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!9963 = !DILocalVariable(name: "request", arg: 1, scope: !9962, file: !1296, line: 379, type: !1304)
!9964 = !DILocation(line: 379, column: 41, scope: !9962)
!9965 = !DILocalVariable(name: "helper", arg: 2, scope: !9962, file: !1296, line: 379, type: !1465)
!9966 = !DILocation(line: 379, column: 80, scope: !9962)
!9967 = !DILocation(line: 381, column: 9, scope: !9968)
!9968 = distinct !DILexicalBlock(scope: !9962, file: !1296, line: 381, column: 9)
!9969 = !DILocation(line: 381, column: 9, scope: !9962)
!9970 = !DILocation(line: 382, column: 9, scope: !9968)
!9971 = !DILocalVariable(name: "t", scope: !9962, file: !1296, line: 384, type: !9972)
!9972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !9973, line: 7, size: 448, elements: !9974)
!9973 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h", directory: "", checksumkind: CSK_MD5, checksum: "9e5545b565ef031c4cd0faf90b69386f")
!9974 = !{!9975, !9976, !9977, !9978, !9979, !9980, !9981, !9982, !9983, !9984, !9985}
!9975 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !9972, file: !9973, line: 9, baseType: !37, size: 32)
!9976 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !9972, file: !9973, line: 10, baseType: !37, size: 32, offset: 32)
!9977 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !9972, file: !9973, line: 11, baseType: !37, size: 32, offset: 64)
!9978 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !9972, file: !9973, line: 12, baseType: !37, size: 32, offset: 96)
!9979 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !9972, file: !9973, line: 13, baseType: !37, size: 32, offset: 128)
!9980 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !9972, file: !9973, line: 14, baseType: !37, size: 32, offset: 160)
!9981 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !9972, file: !9973, line: 15, baseType: !37, size: 32, offset: 192)
!9982 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !9972, file: !9973, line: 16, baseType: !37, size: 32, offset: 224)
!9983 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !9972, file: !9973, line: 17, baseType: !37, size: 32, offset: 256)
!9984 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !9972, file: !9973, line: 20, baseType: !40, size: 64, offset: 320)
!9985 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !9972, file: !9973, line: 21, baseType: !480, size: 64, offset: 384)
!9986 = !DILocation(line: 384, column: 15, scope: !9962)
!9987 = !DILocalVariable(name: "processed", scope: !9962, file: !1296, line: 385, type: !61)
!9988 = !DILocation(line: 385, column: 11, scope: !9962)
!9989 = !DILocation(line: 385, column: 32, scope: !9962)
!9990 = !DILocation(line: 385, column: 40, scope: !9962)
!9991 = !DILocation(line: 385, column: 58, scope: !9962)
!9992 = !DILocation(line: 385, column: 23, scope: !9962)
!9993 = !DILocation(line: 388, column: 9, scope: !9994)
!9994 = distinct !DILexicalBlock(scope: !9962, file: !1296, line: 388, column: 9)
!9995 = !DILocation(line: 388, column: 9, scope: !9962)
!9996 = !DILocation(line: 389, column: 9, scope: !9994)
!9997 = !DILocation(line: 390, column: 9, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9962, file: !1296, line: 390, column: 9)
!9999 = !DILocation(line: 390, column: 9, scope: !9962)
!10000 = !DILocation(line: 391, column: 9, scope: !9998)
!10001 = !DILocation(line: 393, column: 41, scope: !9962)
!10002 = !DILocation(line: 393, column: 5, scope: !9962)
!10003 = !DILocation(line: 393, column: 14, scope: !9962)
!10004 = !DILocation(line: 393, column: 21, scope: !9962)
!10005 = !DILocation(line: 393, column: 39, scope: !9962)
!10006 = !DILocation(line: 394, column: 1, scope: !9962)
!10007 = distinct !DISubprogram(name: "parse_range", scope: !1296, file: !1296, line: 397, type: !1494, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!10008 = !DILocalVariable(name: "request", arg: 1, scope: !10007, file: !1296, line: 397, type: !1304)
!10009 = !DILocation(line: 397, column: 29, scope: !10007)
!10010 = !DILocalVariable(name: "helper", arg: 2, scope: !10007, file: !1296, line: 397, type: !1465)
!10011 = !DILocation(line: 397, column: 68, scope: !10007)
!10012 = !DILocation(line: 399, column: 9, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !10007, file: !1296, line: 399, column: 9)
!10014 = !DILocation(line: 399, column: 9, scope: !10007)
!10015 = !DILocation(line: 400, column: 9, scope: !10013)
!10016 = !DILocalVariable(name: "range", scope: !10007, file: !1296, line: 402, type: !61)
!10017 = !DILocation(line: 402, column: 11, scope: !10007)
!10018 = !DILocation(line: 402, column: 19, scope: !10007)
!10019 = !DILocation(line: 402, column: 27, scope: !10007)
!10020 = !DILocation(line: 402, column: 33, scope: !10007)
!10021 = !DILocation(line: 403, column: 9, scope: !10022)
!10022 = distinct !DILexicalBlock(scope: !10007, file: !1296, line: 403, column: 9)
!10023 = !DILocation(line: 403, column: 9, scope: !10007)
!10024 = !DILocation(line: 404, column: 9, scope: !10022)
!10025 = !DILocation(line: 406, column: 11, scope: !10007)
!10026 = !DILocalVariable(name: "from", scope: !10007, file: !1296, line: 407, type: !461)
!10027 = !DILocation(line: 407, column: 11, scope: !10007)
!10028 = !DILocalVariable(name: "to", scope: !10007, file: !1296, line: 407, type: !461)
!10029 = !DILocation(line: 407, column: 17, scope: !10007)
!10030 = !DILocation(line: 409, column: 16, scope: !10031)
!10031 = distinct !DILexicalBlock(scope: !10007, file: !1296, line: 409, column: 9)
!10032 = !DILocation(line: 409, column: 9, scope: !10031)
!10033 = !DILocation(line: 409, column: 56, scope: !10031)
!10034 = !DILocation(line: 409, column: 9, scope: !10007)
!10035 = !DILocation(line: 410, column: 38, scope: !10036)
!10036 = distinct !DILexicalBlock(scope: !10031, file: !1296, line: 409, column: 62)
!10037 = !DILocation(line: 410, column: 9, scope: !10036)
!10038 = !DILocation(line: 410, column: 18, scope: !10036)
!10039 = !DILocation(line: 410, column: 25, scope: !10036)
!10040 = !DILocation(line: 410, column: 31, scope: !10036)
!10041 = !DILocation(line: 410, column: 36, scope: !10036)
!10042 = !DILocation(line: 411, column: 36, scope: !10036)
!10043 = !DILocation(line: 411, column: 9, scope: !10036)
!10044 = !DILocation(line: 411, column: 18, scope: !10036)
!10045 = !DILocation(line: 411, column: 25, scope: !10036)
!10046 = !DILocation(line: 411, column: 31, scope: !10036)
!10047 = !DILocation(line: 411, column: 34, scope: !10036)
!10048 = !DILocation(line: 412, column: 5, scope: !10036)
!10049 = !DILocation(line: 412, column: 23, scope: !10050)
!10050 = distinct !DILexicalBlock(scope: !10031, file: !1296, line: 412, column: 16)
!10051 = !DILocation(line: 412, column: 16, scope: !10050)
!10052 = !DILocation(line: 412, column: 47, scope: !10050)
!10053 = !DILocation(line: 412, column: 16, scope: !10031)
!10054 = !DILocation(line: 413, column: 9, scope: !10055)
!10055 = distinct !DILexicalBlock(scope: !10050, file: !1296, line: 412, column: 53)
!10056 = !DILocation(line: 413, column: 18, scope: !10055)
!10057 = !DILocation(line: 413, column: 25, scope: !10055)
!10058 = !DILocation(line: 413, column: 31, scope: !10055)
!10059 = !DILocation(line: 413, column: 36, scope: !10055)
!10060 = !DILocation(line: 414, column: 36, scope: !10055)
!10061 = !DILocation(line: 414, column: 9, scope: !10055)
!10062 = !DILocation(line: 414, column: 18, scope: !10055)
!10063 = !DILocation(line: 414, column: 25, scope: !10055)
!10064 = !DILocation(line: 414, column: 31, scope: !10055)
!10065 = !DILocation(line: 414, column: 34, scope: !10055)
!10066 = !DILocation(line: 415, column: 5, scope: !10055)
!10067 = !DILocation(line: 415, column: 23, scope: !10068)
!10068 = distinct !DILexicalBlock(scope: !10050, file: !1296, line: 415, column: 16)
!10069 = !DILocation(line: 415, column: 16, scope: !10068)
!10070 = !DILocation(line: 415, column: 51, scope: !10068)
!10071 = !DILocation(line: 415, column: 16, scope: !10050)
!10072 = !DILocation(line: 416, column: 38, scope: !10073)
!10073 = distinct !DILexicalBlock(scope: !10068, file: !1296, line: 415, column: 57)
!10074 = !DILocation(line: 416, column: 9, scope: !10073)
!10075 = !DILocation(line: 416, column: 18, scope: !10073)
!10076 = !DILocation(line: 416, column: 25, scope: !10073)
!10077 = !DILocation(line: 416, column: 31, scope: !10073)
!10078 = !DILocation(line: 416, column: 36, scope: !10073)
!10079 = !DILocation(line: 417, column: 9, scope: !10073)
!10080 = !DILocation(line: 417, column: 18, scope: !10073)
!10081 = !DILocation(line: 417, column: 25, scope: !10073)
!10082 = !DILocation(line: 417, column: 31, scope: !10073)
!10083 = !DILocation(line: 417, column: 34, scope: !10073)
!10084 = !DILocation(line: 418, column: 5, scope: !10073)
!10085 = !DILocation(line: 419, column: 9, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !10068, file: !1296, line: 418, column: 12)
!10087 = !DILocation(line: 419, column: 18, scope: !10086)
!10088 = !DILocation(line: 419, column: 25, scope: !10086)
!10089 = !DILocation(line: 419, column: 31, scope: !10086)
!10090 = !DILocation(line: 419, column: 36, scope: !10086)
!10091 = !DILocation(line: 420, column: 9, scope: !10086)
!10092 = !DILocation(line: 420, column: 18, scope: !10086)
!10093 = !DILocation(line: 420, column: 25, scope: !10086)
!10094 = !DILocation(line: 420, column: 31, scope: !10086)
!10095 = !DILocation(line: 420, column: 34, scope: !10086)
!10096 = !DILocation(line: 422, column: 1, scope: !10007)
!10097 = !DILocalVariable(name: "request", arg: 1, scope: !1493, file: !1296, line: 425, type: !1304)
!10098 = !DILocation(line: 425, column: 39, scope: !1493)
!10099 = !DILocalVariable(name: "helper", arg: 2, scope: !1493, file: !1296, line: 425, type: !1465)
!10100 = !DILocation(line: 425, column: 78, scope: !1493)
!10101 = !DILocation(line: 427, column: 10, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !1493, file: !1296, line: 427, column: 9)
!10103 = !DILocation(line: 427, column: 18, scope: !10102)
!10104 = !DILocation(line: 427, column: 34, scope: !10102)
!10105 = !DILocation(line: 427, column: 9, scope: !1493)
!10106 = !DILocation(line: 428, column: 9, scope: !10102)
!10107 = !DILocalVariable(name: "p", scope: !10108, file: !1296, line: 437, type: !61)
!10108 = distinct !DILexicalBlock(scope: !1493, file: !1296, line: 437, column: 5)
!10109 = !DILocation(line: 437, column: 16, scope: !10108)
!10110 = !DILocation(line: 437, column: 20, scope: !10108)
!10111 = !DILocation(line: 437, column: 28, scope: !10108)
!10112 = !DILocation(line: 437, column: 44, scope: !10108)
!10113 = !DILocation(line: 437, column: 10, scope: !10108)
!10114 = !DILocation(line: 437, column: 51, scope: !10115)
!10115 = distinct !DILexicalBlock(scope: !10108, file: !1296, line: 437, column: 5)
!10116 = !DILocation(line: 437, column: 53, scope: !10115)
!10117 = !DILocation(line: 437, column: 57, scope: !10115)
!10118 = !DILocation(line: 437, column: 56, scope: !10115)
!10119 = !DILocation(line: 0, scope: !10115)
!10120 = !DILocation(line: 437, column: 5, scope: !10108)
!10121 = !DILocation(line: 438, column: 9, scope: !10122)
!10122 = distinct !DILexicalBlock(scope: !10115, file: !1296, line: 437, column: 65)
!10123 = !DILocation(line: 68, column: 58, scope: !9481, inlinedAt: !10124)
!10124 = distinct !DILocation(line: 438, column: 9, scope: !10122)
!10125 = !DILocation(line: 70, column: 13, scope: !9481, inlinedAt: !10124)
!10126 = !DILocation(line: 71, column: 16, scope: !9481, inlinedAt: !10124)
!10127 = !DILocation(line: 71, column: 5, scope: !9481, inlinedAt: !10124)
!10128 = !DILocation(line: 72, column: 12, scope: !9481, inlinedAt: !10124)
!10129 = !DILocation(line: 441, column: 13, scope: !10130)
!10130 = distinct !DILexicalBlock(scope: !10122, file: !1296, line: 438, column: 26)
!10131 = !DILocation(line: 441, column: 22, scope: !10130)
!10132 = !DILocation(line: 441, column: 28, scope: !10130)
!10133 = !DILocation(line: 442, column: 13, scope: !10130)
!10134 = !DILocation(line: 445, column: 13, scope: !10130)
!10135 = !DILocation(line: 445, column: 22, scope: !10130)
!10136 = !DILocation(line: 445, column: 28, scope: !10130)
!10137 = !DILocation(line: 446, column: 13, scope: !10130)
!10138 = !DILocation(line: 449, column: 26, scope: !10139)
!10139 = distinct !DILexicalBlock(scope: !10122, file: !1296, line: 449, column: 13)
!10140 = !DILocation(line: 449, column: 19, scope: !10139)
!10141 = !DILocation(line: 449, column: 17, scope: !10139)
!10142 = !DILocation(line: 449, column: 13, scope: !10122)
!10143 = !DILocation(line: 450, column: 13, scope: !10139)
!10144 = !DILocation(line: 451, column: 5, scope: !10122)
!10145 = !DILocation(line: 437, column: 61, scope: !10115)
!10146 = !DILocation(line: 437, column: 5, scope: !10115)
!10147 = distinct !{!10147, !10120, !10148, !3203}
!10148 = !DILocation(line: 451, column: 5, scope: !10108)
!10149 = !DILocation(line: 452, column: 1, scope: !1493)
!10150 = !DILocalVariable(name: "request", arg: 1, scope: !1571, file: !1296, line: 208, type: !1304)
!10151 = !DILocation(line: 208, column: 33, scope: !1571)
!10152 = !DILocalVariable(name: "helper", arg: 2, scope: !1571, file: !1296, line: 208, type: !1465)
!10153 = !DILocation(line: 208, column: 72, scope: !1571)
!10154 = !DILocation(line: 212, column: 9, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !1571, file: !1296, line: 212, column: 9)
!10156 = !DILocation(line: 212, column: 17, scope: !10155)
!10157 = !DILocation(line: 212, column: 30, scope: !10155)
!10158 = !DILocation(line: 212, column: 34, scope: !10155)
!10159 = !DILocation(line: 212, column: 9, scope: !1571)
!10160 = !DILocation(line: 213, column: 9, scope: !10155)
!10161 = !DILocation(line: 214, column: 9, scope: !10162)
!10162 = distinct !DILexicalBlock(scope: !1571, file: !1296, line: 214, column: 9)
!10163 = !DILocation(line: 214, column: 9, scope: !1571)
!10164 = !DILocation(line: 215, column: 9, scope: !10162)
!10165 = !DILocation(line: 217, column: 32, scope: !1571)
!10166 = !DILocation(line: 217, column: 42, scope: !1571)
!10167 = !DILocation(line: 217, column: 50, scope: !1571)
!10168 = !DILocation(line: 218, column: 14, scope: !1571)
!10169 = !DILocation(line: 218, column: 23, scope: !1571)
!10170 = !DILocation(line: 218, column: 33, scope: !1571)
!10171 = !DILocation(line: 218, column: 40, scope: !1571)
!10172 = !DILocation(line: 218, column: 49, scope: !1571)
!10173 = !DILocation(line: 218, column: 59, scope: !1571)
!10174 = !DILocation(line: 217, column: 5, scope: !1571)
!10175 = !DILocation(line: 219, column: 1, scope: !1571)
!10176 = distinct !DISubprogram(name: "parse_urlencoded_keyvalues", scope: !1296, file: !1296, line: 159, type: !10177, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!10177 = !DISubroutineType(types: !10178)
!10178 = !{null, !1304, !1469, !10179, !62}
!10179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!10180 = !DILocalVariable(name: "request", arg: 1, scope: !10176, file: !1296, line: 159, type: !1304)
!10181 = !DILocation(line: 159, column: 44, scope: !10176)
!10182 = !DILocalVariable(name: "helper_value", arg: 2, scope: !10176, file: !1296, line: 160, type: !1469)
!10183 = !DILocation(line: 160, column: 19, scope: !10176)
!10184 = !DILocalVariable(name: "base", arg: 3, scope: !10176, file: !1296, line: 160, type: !10179)
!10185 = !DILocation(line: 160, column: 52, scope: !10176)
!10186 = !DILocalVariable(name: "len", arg: 4, scope: !10176, file: !1296, line: 160, type: !62)
!10187 = !DILocation(line: 160, column: 66, scope: !10176)
!10188 = !DILocation(line: 162, column: 10, scope: !10189)
!10189 = distinct !DILexicalBlock(scope: !10176, file: !1296, line: 162, column: 9)
!10190 = !DILocation(line: 162, column: 24, scope: !10189)
!10191 = !DILocation(line: 162, column: 9, scope: !10176)
!10192 = !DILocation(line: 163, column: 9, scope: !10189)
!10193 = !DILocalVariable(name: "key", scope: !10176, file: !1296, line: 165, type: !61)
!10194 = !DILocation(line: 165, column: 11, scope: !10176)
!10195 = !DILocation(line: 165, column: 17, scope: !10176)
!10196 = !DILocation(line: 165, column: 31, scope: !10176)
!10197 = !DILocalVariable(name: "value", scope: !10176, file: !1296, line: 166, type: !61)
!10198 = !DILocation(line: 166, column: 11, scope: !10176)
!10199 = !DILocalVariable(name: "values", scope: !10176, file: !1296, line: 167, type: !6)
!10200 = !DILocation(line: 167, column: 12, scope: !10176)
!10201 = !DILocalVariable(name: "kvs", scope: !10176, file: !1296, line: 168, type: !10202)
!10202 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1391, size: 32768, elements: !16)
!10203 = !DILocation(line: 168, column: 22, scope: !10176)
!10204 = !DILocalVariable(name: "ch", scope: !10205, file: !1296, line: 170, type: !61)
!10205 = distinct !DILexicalBlock(scope: !10176, file: !1296, line: 170, column: 5)
!10206 = !DILocation(line: 170, column: 16, scope: !10205)
!10207 = !DILocation(line: 170, column: 21, scope: !10205)
!10208 = !DILocation(line: 170, column: 10, scope: !10205)
!10209 = !DILocation(line: 170, column: 27, scope: !10210)
!10210 = distinct !DILexicalBlock(scope: !10205, file: !1296, line: 170, column: 5)
!10211 = !DILocation(line: 170, column: 26, scope: !10210)
!10212 = !DILocation(line: 170, column: 5, scope: !10205)
!10213 = !DILocation(line: 171, column: 18, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10210, file: !1296, line: 170, column: 37)
!10215 = !DILocation(line: 171, column: 17, scope: !10214)
!10216 = !DILocation(line: 171, column: 9, scope: !10214)
!10217 = !DILocation(line: 173, column: 14, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !10214, file: !1296, line: 171, column: 22)
!10219 = !DILocation(line: 173, column: 17, scope: !10218)
!10220 = !DILocation(line: 174, column: 21, scope: !10218)
!10221 = !DILocation(line: 174, column: 24, scope: !10218)
!10222 = !DILocation(line: 174, column: 19, scope: !10218)
!10223 = !DILocation(line: 175, column: 13, scope: !10218)
!10224 = !DILocation(line: 178, column: 14, scope: !10218)
!10225 = !DILocation(line: 178, column: 17, scope: !10218)
!10226 = !DILocation(line: 179, column: 13, scope: !10218)
!10227 = !DILocation(line: 179, column: 13, scope: !10228)
!10228 = distinct !DILexicalBlock(scope: !10229, file: !1296, line: 179, column: 13)
!10229 = distinct !DILexicalBlock(scope: !10218, file: !1296, line: 179, column: 13)
!10230 = !DILocation(line: 179, column: 13, scope: !10229)
!10231 = !DILocation(line: 179, column: 13, scope: !10232)
!10232 = distinct !DILexicalBlock(scope: !10228, file: !1296, line: 179, column: 13)
!10233 = !DILocation(line: 179, column: 13, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !10232, file: !1296, line: 179, column: 13)
!10235 = !DILocation(line: 179, column: 13, scope: !10236)
!10236 = distinct !DILexicalBlock(scope: !10232, file: !1296, line: 179, column: 13)
!10237 = !DILocation(line: 180, column: 19, scope: !10218)
!10238 = !DILocation(line: 180, column: 22, scope: !10218)
!10239 = !DILocation(line: 180, column: 17, scope: !10218)
!10240 = !DILocation(line: 181, column: 19, scope: !10218)
!10241 = !DILocation(line: 182, column: 9, scope: !10218)
!10242 = !DILocation(line: 183, column: 5, scope: !10214)
!10243 = !DILocation(line: 170, column: 33, scope: !10210)
!10244 = !DILocation(line: 170, column: 5, scope: !10210)
!10245 = distinct !{!10245, !10212, !10246, !3203}
!10246 = !DILocation(line: 183, column: 5, scope: !10205)
!10247 = !DILocation(line: 185, column: 5, scope: !10176)
!10248 = !DILocation(line: 185, column: 5, scope: !10249)
!10249 = distinct !DILexicalBlock(scope: !10250, file: !1296, line: 185, column: 5)
!10250 = distinct !DILexicalBlock(scope: !10176, file: !1296, line: 185, column: 5)
!10251 = !DILocation(line: 185, column: 5, scope: !10250)
!10252 = !DILocation(line: 185, column: 5, scope: !10253)
!10253 = distinct !DILexicalBlock(scope: !10249, file: !1296, line: 185, column: 5)
!10254 = !DILocation(line: 185, column: 5, scope: !10255)
!10255 = distinct !DILexicalBlock(scope: !10253, file: !1296, line: 185, column: 5)
!10256 = !DILocation(line: 185, column: 5, scope: !10257)
!10257 = distinct !DILexicalBlock(scope: !10253, file: !1296, line: 185, column: 5)
!10258 = !DILabel(scope: !10176, name: "oom", file: !1296, line: 186)
!10259 = !DILocation(line: 186, column: 1, scope: !10176)
!10260 = !DILocation(line: 187, column: 27, scope: !10176)
!10261 = !DILocation(line: 187, column: 23, scope: !10176)
!10262 = !DILocation(line: 187, column: 35, scope: !10176)
!10263 = !DILocation(line: 187, column: 41, scope: !10176)
!10264 = !DILocation(line: 187, column: 9, scope: !10176)
!10265 = !DILocation(line: 187, column: 5, scope: !10176)
!10266 = !DILocation(line: 187, column: 17, scope: !10176)
!10267 = !DILocation(line: 187, column: 21, scope: !10176)
!10268 = !DILocalVariable(name: "kv", scope: !10176, file: !1296, line: 189, type: !1390)
!10269 = !DILocation(line: 189, column: 23, scope: !10176)
!10270 = !DILocation(line: 189, column: 40, scope: !10176)
!10271 = !DILocation(line: 189, column: 49, scope: !10176)
!10272 = !DILocation(line: 189, column: 55, scope: !10176)
!10273 = !DILocation(line: 190, column: 42, scope: !10176)
!10274 = !DILocation(line: 190, column: 40, scope: !10176)
!10275 = !DILocation(line: 190, column: 50, scope: !10176)
!10276 = !DILocation(line: 189, column: 28, scope: !10176)
!10277 = !DILocation(line: 191, column: 9, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !10176, file: !1296, line: 191, column: 9)
!10279 = !DILocation(line: 191, column: 9, scope: !10176)
!10280 = !DILocation(line: 192, column: 15, scope: !10281)
!10281 = distinct !DILexicalBlock(scope: !10278, file: !1296, line: 191, column: 21)
!10282 = !DILocation(line: 192, column: 20, scope: !10281)
!10283 = !DILocation(line: 192, column: 9, scope: !10281)
!10284 = !DILocation(line: 193, column: 24, scope: !10281)
!10285 = !DILocation(line: 193, column: 17, scope: !10281)
!10286 = !DILocation(line: 193, column: 38, scope: !10281)
!10287 = !DILocation(line: 193, column: 36, scope: !10281)
!10288 = !DILocation(line: 193, column: 46, scope: !10281)
!10289 = !DILocation(line: 193, column: 10, scope: !10281)
!10290 = !DILocation(line: 193, column: 15, scope: !10281)
!10291 = !DILocation(line: 194, column: 16, scope: !10281)
!10292 = !DILocation(line: 194, column: 10, scope: !10281)
!10293 = !DILocation(line: 194, column: 14, scope: !10281)
!10294 = !DILocation(line: 195, column: 5, scope: !10281)
!10295 = !DILocation(line: 196, column: 1, scope: !10176)
!10296 = distinct !DISubprogram(name: "url_decode", scope: !1296, file: !1296, line: 114, type: !10297, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!10297 = !DISubroutineType(types: !10298)
!10298 = !{!6, !61}
!10299 = !DILocalVariable(name: "str", arg: 1, scope: !10296, file: !1296, line: 114, type: !61)
!10300 = !DILocation(line: 114, column: 18, scope: !10296)
!10301 = !DILocation(line: 116, column: 9, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10296, file: !1296, line: 116, column: 9)
!10303 = !DILocation(line: 116, column: 9, scope: !10296)
!10304 = !DILocation(line: 117, column: 9, scope: !10302)
!10305 = !DILocalVariable(name: "ch", scope: !10296, file: !1296, line: 119, type: !61)
!10306 = !DILocation(line: 119, column: 11, scope: !10296)
!10307 = !DILocalVariable(name: "decoded", scope: !10296, file: !1296, line: 119, type: !61)
!10308 = !DILocation(line: 119, column: 16, scope: !10296)
!10309 = !DILocation(line: 120, column: 25, scope: !10310)
!10310 = distinct !DILexicalBlock(scope: !10296, file: !1296, line: 120, column: 5)
!10311 = !DILocation(line: 120, column: 23, scope: !10310)
!10312 = !DILocation(line: 120, column: 18, scope: !10310)
!10313 = !DILocation(line: 120, column: 10, scope: !10310)
!10314 = !DILocation(line: 120, column: 31, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !10310, file: !1296, line: 120, column: 5)
!10316 = !DILocation(line: 120, column: 30, scope: !10315)
!10317 = !DILocation(line: 120, column: 5, scope: !10310)
!10318 = !DILocation(line: 121, column: 14, scope: !10319)
!10319 = distinct !DILexicalBlock(scope: !10320, file: !1296, line: 121, column: 13)
!10320 = distinct !DILexicalBlock(scope: !10315, file: !1296, line: 120, column: 41)
!10321 = !DILocation(line: 121, column: 13, scope: !10319)
!10322 = !DILocation(line: 121, column: 17, scope: !10319)
!10323 = !DILocation(line: 121, column: 24, scope: !10319)
!10324 = !DILocation(line: 121, column: 27, scope: !10319)
!10325 = !DILocalVariable(name: "ch", arg: 1, scope: !10326, file: !1296, line: 108, type: !47)
!10326 = distinct !DISubprogram(name: "is_hex_digit", scope: !1296, file: !1296, line: 108, type: !10327, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!10327 = !DISubroutineType(types: !10328)
!10328 = !{!341, !47}
!10329 = !DILocation(line: 108, column: 19, scope: !10326, inlinedAt: !10330)
!10330 = distinct !DILocation(line: 121, column: 27, scope: !10319)
!10331 = !DILocation(line: 110, column: 13, scope: !10326, inlinedAt: !10330)
!10332 = !DILocation(line: 110, column: 16, scope: !10326, inlinedAt: !10330)
!10333 = !DILocation(line: 110, column: 23, scope: !10326, inlinedAt: !10330)
!10334 = !DILocation(line: 110, column: 26, scope: !10326, inlinedAt: !10330)
!10335 = !DILocation(line: 110, column: 29, scope: !10326, inlinedAt: !10330)
!10336 = !DILocation(line: 110, column: 37, scope: !10326, inlinedAt: !10330)
!10337 = !DILocation(line: 110, column: 41, scope: !10326, inlinedAt: !10330)
!10338 = !DILocation(line: 110, column: 44, scope: !10326, inlinedAt: !10330)
!10339 = !DILocation(line: 110, column: 51, scope: !10326, inlinedAt: !10330)
!10340 = !DILocation(line: 110, column: 54, scope: !10326, inlinedAt: !10330)
!10341 = !DILocation(line: 110, column: 57, scope: !10326, inlinedAt: !10330)
!10342 = !DILocation(line: 110, column: 65, scope: !10326, inlinedAt: !10330)
!10343 = !DILocation(line: 110, column: 69, scope: !10326, inlinedAt: !10330)
!10344 = !DILocation(line: 110, column: 72, scope: !10326, inlinedAt: !10330)
!10345 = !DILocation(line: 110, column: 79, scope: !10326, inlinedAt: !10330)
!10346 = !DILocation(line: 110, column: 82, scope: !10326, inlinedAt: !10330)
!10347 = !DILocation(line: 110, column: 85, scope: !10326, inlinedAt: !10330)
!10348 = !DILocation(line: 0, scope: !10326, inlinedAt: !10330)
!10349 = !DILocation(line: 108, column: 19, scope: !10326, inlinedAt: !10350)
!10350 = distinct !DILocation(line: 121, column: 27, scope: !10319)
!10351 = !DILocation(line: 110, column: 13, scope: !10326, inlinedAt: !10350)
!10352 = !DILocation(line: 110, column: 16, scope: !10326, inlinedAt: !10350)
!10353 = !DILocation(line: 110, column: 23, scope: !10326, inlinedAt: !10350)
!10354 = !DILocation(line: 110, column: 26, scope: !10326, inlinedAt: !10350)
!10355 = !DILocation(line: 110, column: 29, scope: !10326, inlinedAt: !10350)
!10356 = !DILocation(line: 110, column: 37, scope: !10326, inlinedAt: !10350)
!10357 = !DILocation(line: 110, column: 41, scope: !10326, inlinedAt: !10350)
!10358 = !DILocation(line: 110, column: 44, scope: !10326, inlinedAt: !10350)
!10359 = !DILocation(line: 110, column: 51, scope: !10326, inlinedAt: !10350)
!10360 = !DILocation(line: 110, column: 54, scope: !10326, inlinedAt: !10350)
!10361 = !DILocation(line: 110, column: 57, scope: !10326, inlinedAt: !10350)
!10362 = !DILocation(line: 110, column: 65, scope: !10326, inlinedAt: !10350)
!10363 = !DILocation(line: 110, column: 69, scope: !10326, inlinedAt: !10350)
!10364 = !DILocation(line: 110, column: 72, scope: !10326, inlinedAt: !10350)
!10365 = !DILocation(line: 110, column: 79, scope: !10326, inlinedAt: !10350)
!10366 = !DILocation(line: 110, column: 82, scope: !10326, inlinedAt: !10350)
!10367 = !DILocation(line: 110, column: 85, scope: !10326, inlinedAt: !10350)
!10368 = !DILocation(line: 0, scope: !10326, inlinedAt: !10350)
!10369 = !DILocation(line: 0, scope: !10319)
!10370 = !DILocation(line: 121, column: 13, scope: !10320)
!10371 = !DILocalVariable(name: "tmp", scope: !10372, file: !1296, line: 122, type: !47)
!10372 = distinct !DILexicalBlock(scope: !10319, file: !1296, line: 121, column: 79)
!10373 = !DILocation(line: 122, column: 18, scope: !10372)
!10374 = !DILocation(line: 122, column: 48, scope: !10372)
!10375 = !DILocalVariable(name: "ch", arg: 1, scope: !10376, file: !1296, line: 102, type: !47)
!10376 = distinct !DISubprogram(name: "decode_hex_digit", scope: !1296, file: !1296, line: 102, type: !10377, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!10377 = !DISubroutineType(types: !10378)
!10378 = !{!47, !47}
!10379 = !DILocation(line: 102, column: 23, scope: !10376, inlinedAt: !10380)
!10380 = distinct !DILocation(line: 122, column: 31, scope: !10372)
!10381 = !DILocation(line: 104, column: 20, scope: !10376, inlinedAt: !10380)
!10382 = !DILocation(line: 104, column: 23, scope: !10376, inlinedAt: !10380)
!10383 = !DILocation(line: 104, column: 19, scope: !10376, inlinedAt: !10380)
!10384 = !DILocation(line: 104, column: 33, scope: !10376, inlinedAt: !10380)
!10385 = !DILocation(line: 104, column: 36, scope: !10376, inlinedAt: !10380)
!10386 = !DILocation(line: 104, column: 45, scope: !10376, inlinedAt: !10380)
!10387 = !DILocation(line: 104, column: 48, scope: !10376, inlinedAt: !10380)
!10388 = !DILocation(line: 104, column: 53, scope: !10376, inlinedAt: !10380)
!10389 = !DILocation(line: 104, column: 12, scope: !10376, inlinedAt: !10380)
!10390 = !DILocation(line: 122, column: 31, scope: !10372)
!10391 = !DILocation(line: 122, column: 55, scope: !10372)
!10392 = !DILocation(line: 122, column: 79, scope: !10372)
!10393 = !DILocation(line: 102, column: 23, scope: !10376, inlinedAt: !10394)
!10394 = distinct !DILocation(line: 122, column: 62, scope: !10372)
!10395 = !DILocation(line: 104, column: 20, scope: !10376, inlinedAt: !10394)
!10396 = !DILocation(line: 104, column: 23, scope: !10376, inlinedAt: !10394)
!10397 = !DILocation(line: 104, column: 19, scope: !10376, inlinedAt: !10394)
!10398 = !DILocation(line: 104, column: 33, scope: !10376, inlinedAt: !10394)
!10399 = !DILocation(line: 104, column: 36, scope: !10376, inlinedAt: !10394)
!10400 = !DILocation(line: 104, column: 45, scope: !10376, inlinedAt: !10394)
!10401 = !DILocation(line: 104, column: 48, scope: !10376, inlinedAt: !10394)
!10402 = !DILocation(line: 104, column: 53, scope: !10376, inlinedAt: !10394)
!10403 = !DILocation(line: 104, column: 12, scope: !10376, inlinedAt: !10394)
!10404 = !DILocation(line: 122, column: 62, scope: !10372)
!10405 = !DILocation(line: 122, column: 60, scope: !10372)
!10406 = !DILocation(line: 122, column: 24, scope: !10372)
!10407 = !DILocation(line: 123, column: 17, scope: !10408)
!10408 = distinct !DILexicalBlock(scope: !10372, file: !1296, line: 123, column: 17)
!10409 = !DILocation(line: 123, column: 17, scope: !10372)
!10410 = !DILocation(line: 124, column: 17, scope: !10408)
!10411 = !DILocation(line: 125, column: 26, scope: !10372)
!10412 = !DILocation(line: 125, column: 21, scope: !10372)
!10413 = !DILocation(line: 125, column: 24, scope: !10372)
!10414 = !DILocation(line: 126, column: 16, scope: !10372)
!10415 = !DILocation(line: 127, column: 9, scope: !10372)
!10416 = !DILocation(line: 127, column: 21, scope: !10417)
!10417 = distinct !DILexicalBlock(scope: !10319, file: !1296, line: 127, column: 20)
!10418 = !DILocation(line: 127, column: 20, scope: !10417)
!10419 = !DILocation(line: 127, column: 24, scope: !10417)
!10420 = !DILocation(line: 127, column: 20, scope: !10319)
!10421 = !DILocation(line: 128, column: 21, scope: !10422)
!10422 = distinct !DILexicalBlock(scope: !10417, file: !1296, line: 127, column: 32)
!10423 = !DILocation(line: 128, column: 24, scope: !10422)
!10424 = !DILocation(line: 129, column: 9, scope: !10422)
!10425 = !DILocation(line: 130, column: 27, scope: !10426)
!10426 = distinct !DILexicalBlock(scope: !10417, file: !1296, line: 129, column: 16)
!10427 = !DILocation(line: 130, column: 26, scope: !10426)
!10428 = !DILocation(line: 130, column: 21, scope: !10426)
!10429 = !DILocation(line: 130, column: 24, scope: !10426)
!10430 = !DILocation(line: 132, column: 5, scope: !10320)
!10431 = !DILocation(line: 120, column: 37, scope: !10315)
!10432 = !DILocation(line: 120, column: 5, scope: !10315)
!10433 = distinct !{!10433, !10317, !10434, !3203}
!10434 = !DILocation(line: 132, column: 5, scope: !10310)
!10435 = !DILocation(line: 134, column: 6, scope: !10296)
!10436 = !DILocation(line: 134, column: 14, scope: !10296)
!10437 = !DILocation(line: 135, column: 21, scope: !10296)
!10438 = !DILocation(line: 135, column: 31, scope: !10296)
!10439 = !DILocation(line: 135, column: 29, scope: !10296)
!10440 = !DILocation(line: 135, column: 5, scope: !10296)
!10441 = !DILocation(line: 136, column: 1, scope: !10296)
!10442 = distinct !DISubprogram(name: "key_value_compare_qsort_key", scope: !1296, file: !1296, line: 139, type: !35, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!10443 = !DILocalVariable(name: "a", arg: 1, scope: !10442, file: !1296, line: 139, type: !38)
!10444 = !DILocation(line: 139, column: 41, scope: !10442)
!10445 = !DILocalVariable(name: "b", arg: 2, scope: !10442, file: !1296, line: 139, type: !38)
!10446 = !DILocation(line: 139, column: 56, scope: !10442)
!10447 = !DILocation(line: 141, column: 40, scope: !10442)
!10448 = !DILocation(line: 141, column: 44, scope: !10442)
!10449 = !DILocation(line: 141, column: 70, scope: !10442)
!10450 = !DILocation(line: 141, column: 74, scope: !10442)
!10451 = !DILocation(line: 141, column: 12, scope: !10442)
!10452 = !DILocation(line: 141, column: 5, scope: !10442)
!10453 = !DILocalVariable(name: "request", arg: 1, scope: !1551, file: !1296, line: 222, type: !1304)
!10454 = !DILocation(line: 222, column: 36, scope: !1551)
!10455 = !DILocalVariable(name: "buffer", arg: 2, scope: !1551, file: !1296, line: 222, type: !61)
!10456 = !DILocation(line: 222, column: 51, scope: !1551)
!10457 = !DILocalVariable(name: "helper", arg: 3, scope: !1551, file: !1296, line: 223, type: !1465)
!10458 = !DILocation(line: 223, column: 43, scope: !1551)
!10459 = !DILocalVariable(name: "end_of_line", scope: !1551, file: !1296, line: 227, type: !61)
!10460 = !DILocation(line: 227, column: 11, scope: !1551)
!10461 = !DILocation(line: 227, column: 32, scope: !1551)
!10462 = !DILocation(line: 228, column: 30, scope: !1551)
!10463 = !DILocation(line: 228, column: 38, scope: !1551)
!10464 = !DILocation(line: 228, column: 46, scope: !1551)
!10465 = !DILocation(line: 228, column: 61, scope: !1551)
!10466 = !DILocation(line: 228, column: 70, scope: !1551)
!10467 = !DILocation(line: 228, column: 78, scope: !1551)
!10468 = !DILocation(line: 228, column: 86, scope: !1551)
!10469 = !DILocation(line: 228, column: 68, scope: !1551)
!10470 = !DILocation(line: 228, column: 50, scope: !1551)
!10471 = !DILocation(line: 227, column: 25, scope: !1551)
!10472 = !DILocation(line: 229, column: 9, scope: !10473)
!10473 = distinct !DILexicalBlock(scope: !1551, file: !1296, line: 229, column: 9)
!10474 = !DILocation(line: 229, column: 9, scope: !1551)
!10475 = !DILocation(line: 230, column: 9, scope: !10473)
!10476 = !DILocation(line: 231, column: 9, scope: !10477)
!10477 = distinct !DILexicalBlock(scope: !1551, file: !1296, line: 231, column: 9)
!10478 = !DILocation(line: 231, column: 9, scope: !1551)
!10479 = !DILocation(line: 232, column: 9, scope: !10477)
!10480 = !DILocation(line: 233, column: 6, scope: !1551)
!10481 = !DILocation(line: 233, column: 18, scope: !1551)
!10482 = !DILocalVariable(name: "space", scope: !1551, file: !1296, line: 235, type: !61)
!10483 = !DILocation(line: 235, column: 11, scope: !1551)
!10484 = !DILocation(line: 235, column: 19, scope: !1551)
!10485 = !DILocation(line: 235, column: 31, scope: !1551)
!10486 = !DILocation(line: 236, column: 9, scope: !10487)
!10487 = distinct !DILexicalBlock(scope: !1551, file: !1296, line: 236, column: 9)
!10488 = !DILocation(line: 236, column: 9, scope: !1551)
!10489 = !DILocation(line: 237, column: 9, scope: !10487)
!10490 = !DILocation(line: 238, column: 6, scope: !1551)
!10491 = !DILocation(line: 238, column: 12, scope: !1551)
!10492 = !DILocation(line: 240, column: 9, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !1551, file: !1296, line: 240, column: 9)
!10494 = !DILocation(line: 240, column: 9, scope: !1551)
!10495 = !DILocation(line: 241, column: 9, scope: !10493)
!10496 = !DILocation(line: 243, column: 11, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !1551, file: !1296, line: 243, column: 9)
!10498 = !DILocation(line: 243, column: 17, scope: !10497)
!10499 = !DILocation(line: 243, column: 9, scope: !10497)
!10500 = !DILocation(line: 243, column: 22, scope: !10497)
!10501 = !DILocation(line: 243, column: 9, scope: !1551)
!10502 = !DILocation(line: 244, column: 9, scope: !10497)
!10503 = !DILocation(line: 244, column: 18, scope: !10497)
!10504 = !DILocation(line: 244, column: 24, scope: !10497)
!10505 = !DILocation(line: 246, column: 9, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !1551, file: !1296, line: 246, column: 9)
!10507 = !DILocation(line: 246, column: 9, scope: !1551)
!10508 = !DILocation(line: 247, column: 9, scope: !10506)
!10509 = !DILocation(line: 249, column: 26, scope: !1551)
!10510 = !DILocation(line: 249, column: 5, scope: !1551)
!10511 = !DILocation(line: 249, column: 14, scope: !1551)
!10512 = !DILocation(line: 249, column: 18, scope: !1551)
!10513 = !DILocation(line: 249, column: 24, scope: !1551)
!10514 = !DILocation(line: 250, column: 33, scope: !1551)
!10515 = !DILocation(line: 250, column: 41, scope: !1551)
!10516 = !DILocation(line: 250, column: 39, scope: !1551)
!10517 = !DILocation(line: 250, column: 5, scope: !1551)
!10518 = !DILocation(line: 250, column: 14, scope: !1551)
!10519 = !DILocation(line: 250, column: 18, scope: !1551)
!10520 = !DILocation(line: 250, column: 22, scope: !1551)
!10521 = !DILocalVariable(name: "fragment", scope: !1551, file: !1296, line: 253, type: !61)
!10522 = !DILocation(line: 253, column: 11, scope: !1551)
!10523 = !DILocation(line: 253, column: 30, scope: !1551)
!10524 = !DILocation(line: 253, column: 43, scope: !1551)
!10525 = !DILocation(line: 253, column: 52, scope: !1551)
!10526 = !DILocation(line: 253, column: 56, scope: !1551)
!10527 = !DILocation(line: 253, column: 22, scope: !1551)
!10528 = !DILocation(line: 254, column: 9, scope: !10529)
!10529 = distinct !DILexicalBlock(scope: !1551, file: !1296, line: 254, column: 9)
!10530 = !DILocation(line: 254, column: 9, scope: !1551)
!10531 = !DILocation(line: 255, column: 10, scope: !10532)
!10532 = distinct !DILexicalBlock(scope: !10529, file: !1296, line: 254, column: 19)
!10533 = !DILocation(line: 255, column: 19, scope: !10532)
!10534 = !DILocation(line: 256, column: 34, scope: !10532)
!10535 = !DILocation(line: 256, column: 43, scope: !10532)
!10536 = !DILocation(line: 256, column: 9, scope: !10532)
!10537 = !DILocation(line: 256, column: 17, scope: !10532)
!10538 = !DILocation(line: 256, column: 26, scope: !10532)
!10539 = !DILocation(line: 256, column: 32, scope: !10532)
!10540 = !DILocation(line: 257, column: 41, scope: !10532)
!10541 = !DILocation(line: 257, column: 49, scope: !10532)
!10542 = !DILocation(line: 257, column: 47, scope: !10532)
!10543 = !DILocation(line: 257, column: 58, scope: !10532)
!10544 = !DILocation(line: 257, column: 9, scope: !10532)
!10545 = !DILocation(line: 257, column: 17, scope: !10532)
!10546 = !DILocation(line: 257, column: 26, scope: !10532)
!10547 = !DILocation(line: 257, column: 30, scope: !10532)
!10548 = !DILocation(line: 258, column: 29, scope: !10532)
!10549 = !DILocation(line: 258, column: 37, scope: !10532)
!10550 = !DILocation(line: 258, column: 46, scope: !10532)
!10551 = !DILocation(line: 258, column: 50, scope: !10532)
!10552 = !DILocation(line: 258, column: 9, scope: !10532)
!10553 = !DILocation(line: 258, column: 18, scope: !10532)
!10554 = !DILocation(line: 258, column: 22, scope: !10532)
!10555 = !DILocation(line: 258, column: 26, scope: !10532)
!10556 = !DILocation(line: 259, column: 5, scope: !10532)
!10557 = !DILocalVariable(name: "query_string", scope: !1551, file: !1296, line: 263, type: !61)
!10558 = !DILocation(line: 263, column: 11, scope: !1551)
!10559 = !DILocation(line: 263, column: 33, scope: !1551)
!10560 = !DILocation(line: 263, column: 46, scope: !1551)
!10561 = !DILocation(line: 263, column: 55, scope: !1551)
!10562 = !DILocation(line: 263, column: 59, scope: !1551)
!10563 = !DILocation(line: 263, column: 26, scope: !1551)
!10564 = !DILocation(line: 264, column: 9, scope: !10565)
!10565 = distinct !DILexicalBlock(scope: !1551, file: !1296, line: 264, column: 9)
!10566 = !DILocation(line: 264, column: 9, scope: !1551)
!10567 = !DILocation(line: 265, column: 10, scope: !10568)
!10568 = distinct !DILexicalBlock(scope: !10565, file: !1296, line: 264, column: 23)
!10569 = !DILocation(line: 265, column: 23, scope: !10568)
!10570 = !DILocation(line: 266, column: 38, scope: !10568)
!10571 = !DILocation(line: 266, column: 51, scope: !10568)
!10572 = !DILocation(line: 266, column: 9, scope: !10568)
!10573 = !DILocation(line: 266, column: 17, scope: !10568)
!10574 = !DILocation(line: 266, column: 30, scope: !10568)
!10575 = !DILocation(line: 266, column: 36, scope: !10568)
!10576 = !DILocation(line: 267, column: 46, scope: !10568)
!10577 = !DILocation(line: 267, column: 57, scope: !10568)
!10578 = !DILocation(line: 267, column: 68, scope: !10568)
!10579 = !DILocation(line: 267, column: 77, scope: !10568)
!10580 = !DILocation(line: 267, column: 75, scope: !10568)
!10581 = !DILocation(line: 267, column: 90, scope: !10568)
!10582 = !DILocation(line: 267, column: 9, scope: !10568)
!10583 = !DILocation(line: 267, column: 17, scope: !10568)
!10584 = !DILocation(line: 267, column: 30, scope: !10568)
!10585 = !DILocation(line: 267, column: 34, scope: !10568)
!10586 = !DILocation(line: 268, column: 29, scope: !10568)
!10587 = !DILocation(line: 268, column: 37, scope: !10568)
!10588 = !DILocation(line: 268, column: 50, scope: !10568)
!10589 = !DILocation(line: 268, column: 54, scope: !10568)
!10590 = !DILocation(line: 268, column: 9, scope: !10568)
!10591 = !DILocation(line: 268, column: 18, scope: !10568)
!10592 = !DILocation(line: 268, column: 22, scope: !10568)
!10593 = !DILocation(line: 268, column: 26, scope: !10568)
!10594 = !DILocation(line: 269, column: 5, scope: !10568)
!10595 = !DILocation(line: 271, column: 35, scope: !1551)
!10596 = !DILocation(line: 271, column: 5, scope: !1551)
!10597 = !DILocation(line: 271, column: 14, scope: !1551)
!10598 = !DILocation(line: 271, column: 27, scope: !1551)
!10599 = !DILocation(line: 271, column: 33, scope: !1551)
!10600 = !DILocation(line: 272, column: 33, scope: !1551)
!10601 = !DILocation(line: 272, column: 42, scope: !1551)
!10602 = !DILocation(line: 272, column: 46, scope: !1551)
!10603 = !DILocation(line: 272, column: 5, scope: !1551)
!10604 = !DILocation(line: 272, column: 14, scope: !1551)
!10605 = !DILocation(line: 272, column: 27, scope: !1551)
!10606 = !DILocation(line: 272, column: 31, scope: !1551)
!10607 = !DILocation(line: 274, column: 12, scope: !1551)
!10608 = !DILocation(line: 274, column: 24, scope: !1551)
!10609 = !DILocation(line: 274, column: 5, scope: !1551)
!10610 = !DILocation(line: 275, column: 1, scope: !1551)
!10611 = !DILocalVariable(name: "helper", arg: 1, scope: !1462, file: !1296, line: 301, type: !1465)
!10612 = !DILocation(line: 301, column: 45, scope: !1462)
!10613 = !DILocalVariable(name: "buffer", arg: 2, scope: !1462, file: !1296, line: 301, type: !61)
!10614 = !DILocation(line: 301, column: 59, scope: !1462)
!10615 = !DILocalVariable(name: "buffer_end", arg: 3, scope: !1462, file: !1296, line: 301, type: !61)
!10616 = !DILocation(line: 301, column: 73, scope: !1462)
!10617 = !DILocalVariable(name: "p", scope: !10618, file: !1296, line: 316, type: !61)
!10618 = distinct !DILexicalBlock(scope: !1462, file: !1296, line: 316, column: 5)
!10619 = !DILocation(line: 316, column: 16, scope: !10618)
!10620 = !DILocation(line: 316, column: 20, scope: !10618)
!10621 = !DILocation(line: 316, column: 10, scope: !10618)
!10622 = !DILocation(line: 316, column: 29, scope: !10623)
!10623 = distinct !DILexicalBlock(scope: !10618, file: !1296, line: 316, column: 5)
!10624 = !DILocation(line: 316, column: 28, scope: !10623)
!10625 = !DILocation(line: 316, column: 5, scope: !10618)
!10626 = !DILocalVariable(name: "value", scope: !10627, file: !1296, line: 317, type: !61)
!10627 = distinct !DILexicalBlock(scope: !10623, file: !1296, line: 316, column: 46)
!10628 = !DILocation(line: 317, column: 15, scope: !10627)
!10629 = !DILocalVariable(name: "length", scope: !10627, file: !1296, line: 318, type: !6)
!10630 = !DILocation(line: 318, column: 16, scope: !10627)
!10631 = !DILocation(line: 318, column: 9, scope: !10627)
!10632 = !DILabel(scope: !10627, name: "retry", file: !1296, line: 320)
!10633 = !DILocation(line: 320, column: 1, scope: !10627)
!10634 = !DILocation(line: 321, column: 14, scope: !10635)
!10635 = distinct !DILexicalBlock(scope: !10627, file: !1296, line: 321, column: 13)
!10636 = !DILocation(line: 321, column: 16, scope: !10635)
!10637 = !DILocation(line: 321, column: 38, scope: !10635)
!10638 = !DILocation(line: 321, column: 35, scope: !10635)
!10639 = !DILocation(line: 321, column: 13, scope: !10627)
!10640 = !DILocation(line: 322, column: 13, scope: !10635)
!10641 = !DILocation(line: 324, column: 9, scope: !10627)
!10642 = !DILocalVariable(name: "s", arg: 1, scope: !10643, file: !262, line: 75, type: !480)
!10643 = distinct !DISubprogram(name: "string_as_int16", scope: !262, file: !262, line: 75, type: !10644, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!10644 = !DISubroutineType(types: !10645)
!10645 = !{!10646, !480}
!10646 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !9485, line: 25, baseType: !10647)
!10647 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int16_t", file: !69, line: 39, baseType: !628)
!10648 = !DILocation(line: 75, column: 58, scope: !10643, inlinedAt: !10649)
!10649 = distinct !DILocation(line: 324, column: 9, scope: !10627)
!10650 = !DILocalVariable(name: "i", scope: !10643, file: !262, line: 77, type: !10646)
!10651 = !DILocation(line: 77, column: 13, scope: !10643, inlinedAt: !10649)
!10652 = !DILocation(line: 78, column: 16, scope: !10643, inlinedAt: !10649)
!10653 = !DILocation(line: 78, column: 5, scope: !10643, inlinedAt: !10649)
!10654 = !DILocation(line: 79, column: 12, scope: !10643, inlinedAt: !10649)
!10655 = !DILocation(line: 326, column: 14, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !10627, file: !1296, line: 324, column: 32)
!10657 = !DILocation(line: 326, column: 16, scope: !10656)
!10658 = !DILocation(line: 327, column: 36, scope: !10656)
!10659 = !DILocation(line: 327, column: 38, scope: !10656)
!10660 = !DILocation(line: 327, column: 55, scope: !10656)
!10661 = !DILocation(line: 327, column: 13, scope: !10656)
!10662 = !DILocation(line: 327, column: 21, scope: !10656)
!10663 = !DILocation(line: 327, column: 34, scope: !10656)
!10664 = !DILocation(line: 328, column: 20, scope: !10656)
!10665 = !DILocation(line: 328, column: 13, scope: !10656)
!10666 = !DILocation(line: 331, column: 9, scope: !10627)
!10667 = !DILocation(line: 68, column: 58, scope: !9481, inlinedAt: !10668)
!10668 = distinct !DILocation(line: 331, column: 9, scope: !10627)
!10669 = !DILocation(line: 70, column: 13, scope: !9481, inlinedAt: !10668)
!10670 = !DILocation(line: 71, column: 16, scope: !9481, inlinedAt: !10668)
!10671 = !DILocation(line: 71, column: 5, scope: !9481, inlinedAt: !10668)
!10672 = !DILocation(line: 72, column: 12, scope: !9481, inlinedAt: !10668)
!10673 = !DILocation(line: 332, column: 9, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10627, file: !1296, line: 331, column: 28)
!10675 = !DILocalVariable(name: "end", scope: !10676, file: !1296, line: 332, type: !61)
!10676 = distinct !DILexicalBlock(scope: !10674, file: !1296, line: 332, column: 9)
!10677 = !DILocation(line: 332, column: 9, scope: !10676)
!10678 = !DILocation(line: 332, column: 9, scope: !10679)
!10679 = distinct !DILexicalBlock(scope: !10676, file: !1296, line: 332, column: 9)
!10680 = !DILocation(line: 332, column: 9, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10676, file: !1296, line: 332, column: 9)
!10682 = !DILocation(line: 332, column: 9, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10676, file: !1296, line: 332, column: 9)
!10684 = !DILocation(line: 332, column: 9, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10676, file: !1296, line: 332, column: 9)
!10686 = !DILocation(line: 332, column: 9, scope: !10687)
!10687 = distinct !DILexicalBlock(scope: !10685, file: !1296, line: 332, column: 9)
!10688 = !DILocation(line: 332, column: 9, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10687, file: !1296, line: 332, column: 9)
!10690 = !DILocation(line: 333, column: 45, scope: !10674)
!10691 = !DILocation(line: 333, column: 13, scope: !10674)
!10692 = !DILocation(line: 333, column: 21, scope: !10674)
!10693 = !DILocation(line: 333, column: 37, scope: !10674)
!10694 = !DILocation(line: 333, column: 43, scope: !10674)
!10695 = !DILocation(line: 334, column: 43, scope: !10674)
!10696 = !DILocation(line: 334, column: 13, scope: !10674)
!10697 = !DILocation(line: 334, column: 21, scope: !10674)
!10698 = !DILocation(line: 334, column: 37, scope: !10674)
!10699 = !DILocation(line: 334, column: 41, scope: !10674)
!10700 = !DILocation(line: 335, column: 13, scope: !10674)
!10701 = !DILocation(line: 336, column: 9, scope: !10674)
!10702 = !DILocalVariable(name: "end", scope: !10703, file: !1296, line: 336, type: !61)
!10703 = distinct !DILexicalBlock(scope: !10674, file: !1296, line: 336, column: 9)
!10704 = !DILocation(line: 336, column: 9, scope: !10703)
!10705 = !DILocation(line: 336, column: 9, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !10703, file: !1296, line: 336, column: 9)
!10707 = !DILocation(line: 336, column: 9, scope: !10708)
!10708 = distinct !DILexicalBlock(scope: !10703, file: !1296, line: 336, column: 9)
!10709 = !DILocation(line: 336, column: 9, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10703, file: !1296, line: 336, column: 9)
!10711 = !DILocation(line: 336, column: 9, scope: !10712)
!10712 = distinct !DILexicalBlock(scope: !10703, file: !1296, line: 336, column: 9)
!10713 = !DILocation(line: 336, column: 9, scope: !10714)
!10714 = distinct !DILexicalBlock(scope: !10712, file: !1296, line: 336, column: 9)
!10715 = !DILocation(line: 336, column: 9, scope: !10716)
!10716 = distinct !DILexicalBlock(scope: !10714, file: !1296, line: 336, column: 9)
!10717 = !DILocation(line: 337, column: 42, scope: !10674)
!10718 = !DILocation(line: 337, column: 13, scope: !10674)
!10719 = !DILocation(line: 337, column: 21, scope: !10674)
!10720 = !DILocation(line: 337, column: 34, scope: !10674)
!10721 = !DILocation(line: 337, column: 40, scope: !10674)
!10722 = !DILocation(line: 338, column: 40, scope: !10674)
!10723 = !DILocation(line: 338, column: 13, scope: !10674)
!10724 = !DILocation(line: 338, column: 21, scope: !10674)
!10725 = !DILocation(line: 338, column: 34, scope: !10674)
!10726 = !DILocation(line: 338, column: 38, scope: !10674)
!10727 = !DILocation(line: 339, column: 13, scope: !10674)
!10728 = !DILocation(line: 340, column: 9, scope: !10674)
!10729 = !DILocalVariable(name: "end", scope: !10730, file: !1296, line: 340, type: !61)
!10730 = distinct !DILexicalBlock(scope: !10674, file: !1296, line: 340, column: 9)
!10731 = !DILocation(line: 340, column: 9, scope: !10730)
!10732 = !DILocation(line: 340, column: 9, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10730, file: !1296, line: 340, column: 9)
!10734 = !DILocation(line: 340, column: 9, scope: !10735)
!10735 = distinct !DILexicalBlock(scope: !10730, file: !1296, line: 340, column: 9)
!10736 = !DILocation(line: 340, column: 9, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10730, file: !1296, line: 340, column: 9)
!10738 = !DILocation(line: 340, column: 9, scope: !10739)
!10739 = distinct !DILexicalBlock(scope: !10730, file: !1296, line: 340, column: 9)
!10740 = !DILocation(line: 340, column: 9, scope: !10741)
!10741 = distinct !DILexicalBlock(scope: !10739, file: !1296, line: 340, column: 9)
!10742 = !DILocation(line: 340, column: 9, scope: !10743)
!10743 = distinct !DILexicalBlock(scope: !10741, file: !1296, line: 340, column: 9)
!10744 = !DILocation(line: 341, column: 44, scope: !10674)
!10745 = !DILocation(line: 341, column: 13, scope: !10674)
!10746 = !DILocation(line: 341, column: 21, scope: !10674)
!10747 = !DILocation(line: 341, column: 36, scope: !10674)
!10748 = !DILocation(line: 341, column: 42, scope: !10674)
!10749 = !DILocation(line: 342, column: 42, scope: !10674)
!10750 = !DILocation(line: 342, column: 13, scope: !10674)
!10751 = !DILocation(line: 342, column: 21, scope: !10674)
!10752 = !DILocation(line: 342, column: 36, scope: !10674)
!10753 = !DILocation(line: 342, column: 40, scope: !10674)
!10754 = !DILocation(line: 343, column: 13, scope: !10674)
!10755 = !DILocation(line: 345, column: 15, scope: !10674)
!10756 = !DILocation(line: 346, column: 13, scope: !10674)
!10757 = !DILocation(line: 347, column: 9, scope: !10674)
!10758 = !DILocalVariable(name: "end", scope: !10759, file: !1296, line: 347, type: !61)
!10759 = distinct !DILexicalBlock(scope: !10674, file: !1296, line: 347, column: 9)
!10760 = !DILocation(line: 347, column: 9, scope: !10759)
!10761 = !DILocation(line: 347, column: 9, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !10759, file: !1296, line: 347, column: 9)
!10763 = !DILocation(line: 347, column: 9, scope: !10764)
!10764 = distinct !DILexicalBlock(scope: !10759, file: !1296, line: 347, column: 9)
!10765 = !DILocation(line: 347, column: 9, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10759, file: !1296, line: 347, column: 9)
!10767 = !DILocation(line: 347, column: 9, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10759, file: !1296, line: 347, column: 9)
!10769 = !DILocation(line: 347, column: 9, scope: !10770)
!10770 = distinct !DILexicalBlock(scope: !10768, file: !1296, line: 347, column: 9)
!10771 = !DILocation(line: 347, column: 9, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10770, file: !1296, line: 347, column: 9)
!10773 = !DILocation(line: 348, column: 43, scope: !10674)
!10774 = !DILocation(line: 348, column: 13, scope: !10674)
!10775 = !DILocation(line: 348, column: 21, scope: !10674)
!10776 = !DILocation(line: 348, column: 35, scope: !10674)
!10777 = !DILocation(line: 348, column: 41, scope: !10674)
!10778 = !DILocation(line: 349, column: 41, scope: !10674)
!10779 = !DILocation(line: 349, column: 13, scope: !10674)
!10780 = !DILocation(line: 349, column: 21, scope: !10674)
!10781 = !DILocation(line: 349, column: 35, scope: !10674)
!10782 = !DILocation(line: 349, column: 39, scope: !10674)
!10783 = !DILocation(line: 350, column: 13, scope: !10674)
!10784 = !DILocation(line: 351, column: 9, scope: !10674)
!10785 = !DILocalVariable(name: "end", scope: !10786, file: !1296, line: 351, type: !61)
!10786 = distinct !DILexicalBlock(scope: !10674, file: !1296, line: 351, column: 9)
!10787 = !DILocation(line: 351, column: 9, scope: !10786)
!10788 = !DILocation(line: 351, column: 9, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10786, file: !1296, line: 351, column: 9)
!10790 = !DILocation(line: 351, column: 9, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10786, file: !1296, line: 351, column: 9)
!10792 = !DILocation(line: 351, column: 9, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10786, file: !1296, line: 351, column: 9)
!10794 = !DILocation(line: 351, column: 9, scope: !10795)
!10795 = distinct !DILexicalBlock(scope: !10786, file: !1296, line: 351, column: 9)
!10796 = !DILocation(line: 351, column: 9, scope: !10797)
!10797 = distinct !DILexicalBlock(scope: !10795, file: !1296, line: 351, column: 9)
!10798 = !DILocation(line: 351, column: 9, scope: !10799)
!10799 = distinct !DILexicalBlock(scope: !10797, file: !1296, line: 351, column: 9)
!10800 = !DILocation(line: 352, column: 36, scope: !10674)
!10801 = !DILocation(line: 352, column: 35, scope: !10674)
!10802 = !DILocation(line: 352, column: 42, scope: !10674)
!10803 = !DILocation(line: 352, column: 34, scope: !10674)
!10804 = !DILocation(line: 352, column: 13, scope: !10674)
!10805 = !DILocation(line: 352, column: 21, scope: !10674)
!10806 = !DILocation(line: 352, column: 32, scope: !10674)
!10807 = !DILocation(line: 353, column: 13, scope: !10674)
!10808 = !DILocation(line: 355, column: 15, scope: !10674)
!10809 = !DILocation(line: 356, column: 13, scope: !10674)
!10810 = !DILocation(line: 357, column: 9, scope: !10674)
!10811 = !DILocalVariable(name: "end", scope: !10812, file: !1296, line: 357, type: !61)
!10812 = distinct !DILexicalBlock(scope: !10674, file: !1296, line: 357, column: 9)
!10813 = !DILocation(line: 357, column: 9, scope: !10812)
!10814 = !DILocation(line: 357, column: 9, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10812, file: !1296, line: 357, column: 9)
!10816 = !DILocation(line: 357, column: 9, scope: !10817)
!10817 = distinct !DILexicalBlock(scope: !10812, file: !1296, line: 357, column: 9)
!10818 = !DILocation(line: 357, column: 9, scope: !10819)
!10819 = distinct !DILexicalBlock(scope: !10812, file: !1296, line: 357, column: 9)
!10820 = !DILocation(line: 357, column: 9, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10812, file: !1296, line: 357, column: 9)
!10822 = !DILocation(line: 357, column: 9, scope: !10823)
!10823 = distinct !DILexicalBlock(scope: !10821, file: !1296, line: 357, column: 9)
!10824 = !DILocation(line: 357, column: 9, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10823, file: !1296, line: 357, column: 9)
!10826 = !DILocation(line: 358, column: 47, scope: !10674)
!10827 = !DILocation(line: 358, column: 13, scope: !10674)
!10828 = !DILocation(line: 358, column: 21, scope: !10674)
!10829 = !DILocation(line: 358, column: 39, scope: !10674)
!10830 = !DILocation(line: 358, column: 45, scope: !10674)
!10831 = !DILocation(line: 359, column: 45, scope: !10674)
!10832 = !DILocation(line: 359, column: 13, scope: !10674)
!10833 = !DILocation(line: 359, column: 21, scope: !10674)
!10834 = !DILocation(line: 359, column: 39, scope: !10674)
!10835 = !DILocation(line: 359, column: 43, scope: !10674)
!10836 = !DILocation(line: 360, column: 13, scope: !10674)
!10837 = !DILocation(line: 361, column: 9, scope: !10674)
!10838 = !DILocalVariable(name: "end", scope: !10839, file: !1296, line: 361, type: !61)
!10839 = distinct !DILexicalBlock(scope: !10674, file: !1296, line: 361, column: 9)
!10840 = !DILocation(line: 361, column: 9, scope: !10839)
!10841 = !DILocation(line: 361, column: 9, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10839, file: !1296, line: 361, column: 9)
!10843 = !DILocation(line: 361, column: 9, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10839, file: !1296, line: 361, column: 9)
!10845 = !DILocation(line: 361, column: 9, scope: !10846)
!10846 = distinct !DILexicalBlock(scope: !10839, file: !1296, line: 361, column: 9)
!10847 = !DILocation(line: 361, column: 9, scope: !10848)
!10848 = distinct !DILexicalBlock(scope: !10839, file: !1296, line: 361, column: 9)
!10849 = !DILocation(line: 361, column: 9, scope: !10850)
!10850 = distinct !DILexicalBlock(scope: !10848, file: !1296, line: 361, column: 9)
!10851 = !DILocation(line: 361, column: 9, scope: !10852)
!10852 = distinct !DILexicalBlock(scope: !10850, file: !1296, line: 361, column: 9)
!10853 = !DILocation(line: 362, column: 35, scope: !10674)
!10854 = !DILocation(line: 362, column: 13, scope: !10674)
!10855 = !DILocation(line: 362, column: 21, scope: !10674)
!10856 = !DILocation(line: 362, column: 27, scope: !10674)
!10857 = !DILocation(line: 362, column: 33, scope: !10674)
!10858 = !DILocation(line: 363, column: 33, scope: !10674)
!10859 = !DILocation(line: 363, column: 13, scope: !10674)
!10860 = !DILocation(line: 363, column: 21, scope: !10674)
!10861 = !DILocation(line: 363, column: 27, scope: !10674)
!10862 = !DILocation(line: 363, column: 31, scope: !10674)
!10863 = !DILocation(line: 364, column: 13, scope: !10674)
!10864 = !DILocation(line: 365, column: 9, scope: !10674)
!10865 = !DILabel(scope: !10627, name: "did_not_match", file: !1296, line: 366)
!10866 = !DILocation(line: 366, column: 1, scope: !10627)
!10867 = !DILocation(line: 367, column: 20, scope: !10627)
!10868 = !DILocation(line: 367, column: 38, scope: !10627)
!10869 = !DILocation(line: 367, column: 51, scope: !10627)
!10870 = !DILocation(line: 367, column: 49, scope: !10627)
!10871 = !DILocation(line: 367, column: 13, scope: !10627)
!10872 = !DILocation(line: 367, column: 11, scope: !10627)
!10873 = !DILocation(line: 368, column: 14, scope: !10874)
!10874 = distinct !DILexicalBlock(scope: !10627, file: !1296, line: 368, column: 13)
!10875 = !DILocation(line: 368, column: 13, scope: !10627)
!10876 = !DILocation(line: 369, column: 13, scope: !10874)
!10877 = !DILocation(line: 370, column: 5, scope: !10627)
!10878 = !DILocation(line: 316, column: 41, scope: !10623)
!10879 = !DILocation(line: 316, column: 39, scope: !10623)
!10880 = !DILocation(line: 316, column: 5, scope: !10623)
!10881 = distinct !{!10881, !10625, !10882, !3203}
!10882 = !DILocation(line: 370, column: 5, scope: !10618)
!10883 = !DILocation(line: 372, column: 12, scope: !1462)
!10884 = !DILocation(line: 372, column: 5, scope: !1462)
!10885 = !DILocation(line: 373, column: 1, scope: !1462)
!10886 = distinct !DISubprogram(name: "read_post_data", scope: !1296, file: !1296, line: 598, type: !10887, scopeLine: 601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!10887 = !DISubroutineType(types: !10888)
!10888 = !{!497, !1304, !1465, !61}
!10889 = !DILocalVariable(name: "request", arg: 1, scope: !10886, file: !1296, line: 598, type: !1304)
!10890 = !DILocation(line: 598, column: 32, scope: !10886)
!10891 = !DILocalVariable(name: "helper", arg: 2, scope: !10886, file: !1296, line: 599, type: !1465)
!10892 = !DILocation(line: 599, column: 39, scope: !10886)
!10893 = !DILocalVariable(name: "buffer", arg: 3, scope: !10886, file: !1296, line: 600, type: !61)
!10894 = !DILocation(line: 600, column: 15, scope: !10886)
!10895 = !DILocalVariable(name: "parsed_length", scope: !10886, file: !1296, line: 602, type: !40)
!10896 = !DILocation(line: 602, column: 10, scope: !10886)
!10897 = !DILocation(line: 604, column: 9, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10886, file: !1296, line: 604, column: 9)
!10899 = !DILocation(line: 604, column: 9, scope: !10886)
!10900 = !DILocation(line: 605, column: 9, scope: !10898)
!10901 = !DILocation(line: 607, column: 9, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10886, file: !1296, line: 607, column: 9)
!10903 = !DILocation(line: 607, column: 9, scope: !10886)
!10904 = !DILocation(line: 608, column: 9, scope: !10902)
!10905 = !DILocation(line: 610, column: 32, scope: !10886)
!10906 = !DILocation(line: 610, column: 40, scope: !10886)
!10907 = !DILocation(line: 610, column: 55, scope: !10886)
!10908 = !DILocation(line: 610, column: 21, scope: !10886)
!10909 = !DILocation(line: 610, column: 19, scope: !10886)
!10910 = !DILocation(line: 611, column: 9, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10886, file: !1296, line: 611, column: 9)
!10912 = !DILocation(line: 611, column: 9, scope: !10886)
!10913 = !DILocation(line: 612, column: 9, scope: !10911)
!10914 = !DILocation(line: 613, column: 9, scope: !10915)
!10915 = distinct !DILexicalBlock(scope: !10886, file: !1296, line: 613, column: 9)
!10916 = !DILocation(line: 613, column: 9, scope: !10886)
!10917 = !DILocation(line: 614, column: 9, scope: !10915)
!10918 = !DILocalVariable(name: "post_data_size", scope: !10886, file: !1296, line: 616, type: !6)
!10919 = !DILocation(line: 616, column: 12, scope: !10886)
!10920 = !DILocation(line: 616, column: 37, scope: !10886)
!10921 = !DILocalVariable(name: "buffer_end", scope: !10886, file: !1296, line: 617, type: !61)
!10922 = !DILocation(line: 617, column: 11, scope: !10886)
!10923 = !DILocation(line: 617, column: 24, scope: !10886)
!10924 = !DILocation(line: 617, column: 32, scope: !10886)
!10925 = !DILocation(line: 617, column: 40, scope: !10886)
!10926 = !DILocation(line: 617, column: 48, scope: !10886)
!10927 = !DILocation(line: 617, column: 56, scope: !10886)
!10928 = !DILocation(line: 617, column: 64, scope: !10886)
!10929 = !DILocation(line: 617, column: 46, scope: !10886)
!10930 = !DILocalVariable(name: "have", scope: !10886, file: !1296, line: 618, type: !6)
!10931 = !DILocation(line: 618, column: 12, scope: !10886)
!10932 = !DILocation(line: 618, column: 39, scope: !10886)
!10933 = !DILocation(line: 618, column: 52, scope: !10886)
!10934 = !DILocation(line: 618, column: 60, scope: !10886)
!10935 = !DILocation(line: 618, column: 50, scope: !10886)
!10936 = !DILocation(line: 620, column: 9, scope: !10937)
!10937 = distinct !DILexicalBlock(scope: !10886, file: !1296, line: 620, column: 9)
!10938 = !DILocation(line: 620, column: 17, scope: !10937)
!10939 = !DILocation(line: 620, column: 14, scope: !10937)
!10940 = !DILocation(line: 620, column: 9, scope: !10886)
!10941 = !DILocation(line: 621, column: 35, scope: !10942)
!10942 = distinct !DILexicalBlock(scope: !10937, file: !1296, line: 620, column: 33)
!10943 = !DILocation(line: 621, column: 43, scope: !10942)
!10944 = !DILocation(line: 621, column: 9, scope: !10942)
!10945 = !DILocation(line: 621, column: 17, scope: !10942)
!10946 = !DILocation(line: 621, column: 27, scope: !10942)
!10947 = !DILocation(line: 621, column: 33, scope: !10942)
!10948 = !DILocation(line: 622, column: 33, scope: !10942)
!10949 = !DILocation(line: 622, column: 9, scope: !10942)
!10950 = !DILocation(line: 622, column: 17, scope: !10942)
!10951 = !DILocation(line: 622, column: 27, scope: !10942)
!10952 = !DILocation(line: 622, column: 31, scope: !10942)
!10953 = !DILocation(line: 623, column: 33, scope: !10942)
!10954 = !DILocation(line: 623, column: 9, scope: !10942)
!10955 = !DILocation(line: 623, column: 17, scope: !10942)
!10956 = !DILocation(line: 623, column: 30, scope: !10942)
!10957 = !DILocation(line: 624, column: 9, scope: !10942)
!10958 = !DILocation(line: 627, column: 9, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10886, file: !1296, line: 627, column: 9)
!10960 = !DILocation(line: 627, column: 26, scope: !10959)
!10961 = !DILocation(line: 627, column: 24, scope: !10959)
!10962 = !DILocation(line: 627, column: 9, scope: !10886)
!10963 = !DILocation(line: 628, column: 9, scope: !10959)
!10964 = !DILocation(line: 630, column: 5, scope: !10886)
!10965 = !DILocation(line: 631, column: 1, scope: !10886)
!10966 = distinct !DISubprogram(name: "lwan_request_get_query_param", scope: !1296, file: !1296, line: 787, type: !10967, scopeLine: 788, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!10967 = !DISubroutineType(types: !10968)
!10968 = !{!480, !1304, !480}
!10969 = !DILocalVariable(name: "request", arg: 1, scope: !10966, file: !1296, line: 787, type: !1304)
!10970 = !DILocation(line: 787, column: 46, scope: !10966)
!10971 = !DILocalVariable(name: "key", arg: 2, scope: !10966, file: !1296, line: 787, type: !480)
!10972 = !DILocation(line: 787, column: 67, scope: !10966)
!10973 = !DILocation(line: 789, column: 32, scope: !10966)
!10974 = !DILocation(line: 789, column: 41, scope: !10966)
!10975 = !DILocation(line: 789, column: 54, scope: !10966)
!10976 = !DILocation(line: 790, column: 45, scope: !10966)
!10977 = !DILocation(line: 790, column: 54, scope: !10966)
!10978 = !DILocation(line: 790, column: 67, scope: !10966)
!10979 = !DILocation(line: 790, column: 72, scope: !10966)
!10980 = !DILocation(line: 789, column: 12, scope: !10966)
!10981 = !DILocation(line: 789, column: 5, scope: !10966)
!10982 = distinct !DISubprogram(name: "value_array_bsearch", scope: !1296, file: !1296, line: 761, type: !10983, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!10983 = !DISubroutineType(types: !10984)
!10984 = !{!480, !1390, !73, !480}
!10985 = !DILocalVariable(name: "base", arg: 1, scope: !10982, file: !1296, line: 761, type: !1390)
!10986 = !DILocation(line: 761, column: 39, scope: !10982)
!10987 = !DILocalVariable(name: "len", arg: 2, scope: !10982, file: !1296, line: 761, type: !73)
!10988 = !DILocation(line: 761, column: 58, scope: !10982)
!10989 = !DILocalVariable(name: "key", arg: 3, scope: !10982, file: !1296, line: 761, type: !480)
!10990 = !DILocation(line: 761, column: 75, scope: !10982)
!10991 = !DILocation(line: 763, column: 9, scope: !10992)
!10992 = distinct !DILexicalBlock(scope: !10982, file: !1296, line: 763, column: 9)
!10993 = !DILocation(line: 763, column: 9, scope: !10982)
!10994 = !DILocation(line: 764, column: 9, scope: !10992)
!10995 = !DILocalVariable(name: "lower_bound", scope: !10982, file: !1296, line: 766, type: !6)
!10996 = !DILocation(line: 766, column: 12, scope: !10982)
!10997 = !DILocalVariable(name: "upper_bound", scope: !10982, file: !1296, line: 767, type: !6)
!10998 = !DILocation(line: 767, column: 12, scope: !10982)
!10999 = !DILocation(line: 767, column: 26, scope: !10982)
!11000 = !DILocalVariable(name: "key_len", scope: !10982, file: !1296, line: 768, type: !6)
!11001 = !DILocation(line: 768, column: 12, scope: !10982)
!11002 = !DILocation(line: 768, column: 29, scope: !10982)
!11003 = !DILocation(line: 768, column: 22, scope: !10982)
!11004 = !DILocation(line: 770, column: 5, scope: !10982)
!11005 = !DILocation(line: 770, column: 12, scope: !10982)
!11006 = !DILocation(line: 770, column: 26, scope: !10982)
!11007 = !DILocation(line: 770, column: 24, scope: !10982)
!11008 = !DILocalVariable(name: "idx", scope: !11009, file: !1296, line: 772, type: !6)
!11009 = distinct !DILexicalBlock(scope: !10982, file: !1296, line: 770, column: 39)
!11010 = !DILocation(line: 772, column: 16, scope: !11009)
!11011 = !DILocation(line: 772, column: 23, scope: !11009)
!11012 = !DILocation(line: 772, column: 37, scope: !11009)
!11013 = !DILocation(line: 772, column: 35, scope: !11009)
!11014 = !DILocation(line: 772, column: 50, scope: !11009)
!11015 = !DILocalVariable(name: "ptr", scope: !11009, file: !1296, line: 773, type: !1390)
!11016 = !DILocation(line: 773, column: 27, scope: !11009)
!11017 = !DILocation(line: 773, column: 33, scope: !11009)
!11018 = !DILocation(line: 773, column: 40, scope: !11009)
!11019 = !DILocation(line: 773, column: 38, scope: !11009)
!11020 = !DILocalVariable(name: "cmp", scope: !11009, file: !1296, line: 774, type: !37)
!11021 = !DILocation(line: 774, column: 13, scope: !11009)
!11022 = !DILocation(line: 774, column: 27, scope: !11009)
!11023 = !DILocation(line: 774, column: 32, scope: !11009)
!11024 = !DILocation(line: 774, column: 37, scope: !11009)
!11025 = !DILocation(line: 774, column: 42, scope: !11009)
!11026 = !DILocation(line: 774, column: 19, scope: !11009)
!11027 = !DILocation(line: 775, column: 13, scope: !11028)
!11028 = distinct !DILexicalBlock(scope: !11009, file: !1296, line: 775, column: 13)
!11029 = !DILocation(line: 775, column: 13, scope: !11009)
!11030 = !DILocation(line: 776, column: 20, scope: !11028)
!11031 = !DILocation(line: 776, column: 25, scope: !11028)
!11032 = !DILocation(line: 776, column: 13, scope: !11028)
!11033 = !DILocation(line: 777, column: 13, scope: !11034)
!11034 = distinct !DILexicalBlock(scope: !11009, file: !1296, line: 777, column: 13)
!11035 = !DILocation(line: 777, column: 17, scope: !11034)
!11036 = !DILocation(line: 777, column: 13, scope: !11009)
!11037 = !DILocation(line: 778, column: 27, scope: !11034)
!11038 = !DILocation(line: 778, column: 31, scope: !11034)
!11039 = !DILocation(line: 778, column: 25, scope: !11034)
!11040 = !DILocation(line: 778, column: 13, scope: !11034)
!11041 = !DILocation(line: 780, column: 27, scope: !11034)
!11042 = !DILocation(line: 780, column: 25, scope: !11034)
!11043 = distinct !{!11043, !11004, !11044, !3203}
!11044 = !DILocation(line: 781, column: 5, scope: !10982)
!11045 = !DILocation(line: 783, column: 5, scope: !10982)
!11046 = !DILocation(line: 784, column: 1, scope: !10982)
!11047 = distinct !DISubprogram(name: "lwan_request_get_post_param", scope: !1296, file: !1296, line: 794, type: !10967, scopeLine: 795, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!11048 = !DILocalVariable(name: "request", arg: 1, scope: !11047, file: !1296, line: 794, type: !1304)
!11049 = !DILocation(line: 794, column: 45, scope: !11047)
!11050 = !DILocalVariable(name: "key", arg: 2, scope: !11047, file: !1296, line: 794, type: !480)
!11051 = !DILocation(line: 794, column: 66, scope: !11047)
!11052 = !DILocation(line: 796, column: 32, scope: !11047)
!11053 = !DILocation(line: 796, column: 41, scope: !11047)
!11054 = !DILocation(line: 796, column: 51, scope: !11047)
!11055 = !DILocation(line: 797, column: 45, scope: !11047)
!11056 = !DILocation(line: 797, column: 54, scope: !11047)
!11057 = !DILocation(line: 797, column: 64, scope: !11047)
!11058 = !DILocation(line: 797, column: 69, scope: !11047)
!11059 = !DILocation(line: 796, column: 12, scope: !11047)
!11060 = !DILocation(line: 796, column: 5, scope: !11047)
!11061 = distinct !DISubprogram(name: "lwan_connection_get_fd", scope: !1296, file: !1296, line: 801, type: !11062, scopeLine: 802, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!11062 = !DISubroutineType(types: !11063)
!11063 = !{!37, !1318}
!11064 = !DILocalVariable(name: "conn", arg: 1, scope: !11061, file: !1296, line: 801, type: !1318)
!11065 = !DILocation(line: 801, column: 43, scope: !11061)
!11066 = !DILocation(line: 803, column: 29, scope: !11061)
!11067 = !DILocation(line: 803, column: 36, scope: !11061)
!11068 = !DILocation(line: 803, column: 42, scope: !11061)
!11069 = !DILocation(line: 803, column: 50, scope: !11061)
!11070 = !DILocation(line: 803, column: 56, scope: !11061)
!11071 = !DILocation(line: 803, column: 34, scope: !11061)
!11072 = !DILocation(line: 803, column: 12, scope: !11061)
!11073 = !DILocation(line: 803, column: 5, scope: !11061)
!11074 = distinct !DISubprogram(name: "lwan_request_get_remote_address", scope: !1296, file: !1296, line: 807, type: !11075, scopeLine: 809, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1439, retainedNodes: !74)
!11075 = !DISubroutineType(types: !11076)
!11076 = !{!480, !1304, !61}
!11077 = !DILocalVariable(name: "request", arg: 1, scope: !11074, file: !1296, line: 807, type: !1304)
!11078 = !DILocation(line: 807, column: 49, scope: !11074)
!11079 = !DILocalVariable(name: "buffer", arg: 2, scope: !11074, file: !1296, line: 808, type: !61)
!11080 = !DILocation(line: 808, column: 18, scope: !11074)
!11081 = !DILocalVariable(name: "sock_addr", scope: !11074, file: !1296, line: 810, type: !11082)
!11082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_storage", file: !1505, line: 193, size: 1024, elements: !11083)
!11083 = !{!11084, !11085, !11089}
!11084 = !DIDerivedType(tag: DW_TAG_member, name: "ss_family", scope: !11082, file: !1505, line: 195, baseType: !1508, size: 16)
!11085 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_padding", scope: !11082, file: !1505, line: 196, baseType: !11086, size: 944, offset: 16)
!11086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 944, elements: !11087)
!11087 = !{!11088}
!11088 = !DISubrange(count: 118)
!11089 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_align", scope: !11082, file: !1505, line: 197, baseType: !8, size: 64, offset: 960)
!11090 = !DILocation(line: 810, column: 29, scope: !11074)
!11091 = !DILocalVariable(name: "sock_len", scope: !11074, file: !1296, line: 811, type: !11092)
!11092 = !DIDerivedType(tag: DW_TAG_typedef, name: "socklen_t", file: !3048, line: 274, baseType: !3080)
!11093 = !DILocation(line: 811, column: 15, scope: !11074)
!11094 = !DILocation(line: 812, column: 9, scope: !11095)
!11095 = distinct !DILexicalBlock(scope: !11074, file: !1296, line: 812, column: 9)
!11096 = !DILocation(line: 812, column: 9, scope: !11074)
!11097 = !DILocation(line: 813, column: 9, scope: !11095)
!11098 = !DILocation(line: 815, column: 19, scope: !11099)
!11099 = distinct !DILexicalBlock(scope: !11074, file: !1296, line: 815, column: 9)
!11100 = !DILocation(line: 815, column: 9, scope: !11099)
!11101 = !DILocation(line: 815, column: 29, scope: !11099)
!11102 = !DILocation(line: 815, column: 9, scope: !11074)
!11103 = !DILocation(line: 816, column: 72, scope: !11099)
!11104 = !DILocation(line: 817, column: 26, scope: !11099)
!11105 = !DILocation(line: 816, column: 16, scope: !11099)
!11106 = !DILocation(line: 816, column: 9, scope: !11099)
!11107 = !DILocation(line: 818, column: 70, scope: !11074)
!11108 = !DILocation(line: 819, column: 22, scope: !11074)
!11109 = !DILocation(line: 818, column: 12, scope: !11074)
!11110 = !DILocation(line: 818, column: 5, scope: !11074)
!11111 = !DILocation(line: 820, column: 1, scope: !11074)
!11112 = !DILocation(line: 73, column: 5, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11114, file: !1577, line: 73, column: 5)
!11114 = distinct !DILexicalBlock(scope: !1576, file: !1577, line: 73, column: 5)
!11115 = !DILocation(line: 73, column: 5, scope: !11114)
!11116 = !DILocation(line: 75, column: 5, scope: !1576)
!11117 = !DILocation(line: 77, column: 46, scope: !1576)
!11118 = !DILocation(line: 77, column: 22, scope: !1576)
!11119 = !DILocation(line: 77, column: 20, scope: !1576)
!11120 = !DILocation(line: 78, column: 9, scope: !11121)
!11121 = distinct !DILexicalBlock(scope: !1576, file: !1577, line: 78, column: 9)
!11122 = !DILocation(line: 78, column: 9, scope: !1576)
!11123 = !DILocation(line: 79, column: 9, scope: !11121)
!11124 = !DILocation(line: 80, column: 1, scope: !1576)
!11125 = distinct !DISubprogram(name: "lwan_response_shutdown", scope: !1577, file: !1577, line: 83, type: !1578, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1580, retainedNodes: !74)
!11126 = !DILocation(line: 85, column: 5, scope: !11125)
!11127 = !DILocation(line: 86, column: 5, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !11129, file: !1577, line: 86, column: 5)
!11129 = distinct !DILexicalBlock(scope: !11125, file: !1577, line: 86, column: 5)
!11130 = !DILocation(line: 86, column: 5, scope: !11129)
!11131 = !DILocation(line: 87, column: 19, scope: !11125)
!11132 = !DILocation(line: 87, column: 5, scope: !11125)
!11133 = !DILocation(line: 88, column: 1, scope: !11125)
!11134 = distinct !DISubprogram(name: "lwan_response", scope: !1577, file: !1577, line: 122, type: !11135, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1580, retainedNodes: !74)
!11135 = !DISubroutineType(types: !11136)
!11136 = !{null, !1694, !497}
!11137 = !DILocalVariable(name: "request", arg: 1, scope: !11134, file: !1577, line: 122, type: !1694)
!11138 = !DILocation(line: 122, column: 31, scope: !11134)
!11139 = !DILocalVariable(name: "status", arg: 2, scope: !11134, file: !1577, line: 122, type: !497)
!11140 = !DILocation(line: 122, column: 59, scope: !11134)
!11141 = !DILocalVariable(name: "headers", scope: !11134, file: !1577, line: 124, type: !11142)
!11142 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 4096, elements: !11143)
!11143 = !{!11144}
!11144 = !DISubrange(count: 512)
!11145 = !DILocation(line: 124, column: 10, scope: !11134)
!11146 = !DILocation(line: 126, column: 9, scope: !11147)
!11147 = distinct !DILexicalBlock(scope: !11134, file: !1577, line: 126, column: 9)
!11148 = !DILocation(line: 126, column: 18, scope: !11147)
!11149 = !DILocation(line: 126, column: 24, scope: !11147)
!11150 = !DILocation(line: 126, column: 9, scope: !11134)
!11151 = !DILocation(line: 128, column: 13, scope: !11152)
!11152 = distinct !DILexicalBlock(scope: !11153, file: !1577, line: 128, column: 13)
!11153 = distinct !DILexicalBlock(scope: !11147, file: !1577, line: 126, column: 53)
!11154 = !DILocation(line: 128, column: 13, scope: !11153)
!11155 = !DILocation(line: 129, column: 24, scope: !11152)
!11156 = !DILocation(line: 129, column: 33, scope: !11152)
!11157 = !DILocation(line: 129, column: 39, scope: !11152)
!11158 = !DILocation(line: 129, column: 13, scope: !11152)
!11159 = !DILocation(line: 130, column: 34, scope: !11153)
!11160 = !DILocation(line: 130, column: 9, scope: !11153)
!11161 = !DILocation(line: 131, column: 21, scope: !11153)
!11162 = !DILocation(line: 131, column: 30, scope: !11153)
!11163 = !DILocation(line: 131, column: 9, scope: !11153)
!11164 = !DILocation(line: 132, column: 9, scope: !11153)
!11165 = !DILocation(line: 135, column: 9, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !11134, file: !1577, line: 135, column: 9)
!11167 = !DILocation(line: 135, column: 9, scope: !11134)
!11168 = !DILocation(line: 136, column: 9, scope: !11169)
!11169 = distinct !DILexicalBlock(scope: !11166, file: !1577, line: 135, column: 59)
!11170 = !DILocation(line: 137, column: 9, scope: !11169)
!11171 = !DILocation(line: 142, column: 9, scope: !11172)
!11172 = distinct !DILexicalBlock(scope: !11134, file: !1577, line: 142, column: 9)
!11173 = !DILocation(line: 142, column: 9, scope: !11134)
!11174 = !DILocation(line: 143, column: 31, scope: !11175)
!11175 = distinct !DILexicalBlock(scope: !11172, file: !1577, line: 142, column: 49)
!11176 = !DILocation(line: 143, column: 40, scope: !11175)
!11177 = !DILocation(line: 143, column: 9, scope: !11175)
!11178 = !DILocation(line: 144, column: 9, scope: !11175)
!11179 = !DILocation(line: 147, column: 17, scope: !11134)
!11180 = !DILocation(line: 147, column: 26, scope: !11134)
!11181 = !DILocation(line: 147, column: 5, scope: !11134)
!11182 = !DILocation(line: 149, column: 9, scope: !11183)
!11183 = distinct !DILexicalBlock(scope: !11134, file: !1577, line: 149, column: 9)
!11184 = !DILocation(line: 149, column: 18, scope: !11183)
!11185 = !DILocation(line: 149, column: 27, scope: !11183)
!11186 = !DILocation(line: 149, column: 34, scope: !11183)
!11187 = !DILocation(line: 149, column: 9, scope: !11134)
!11188 = !DILocalVariable(name: "callback_status", scope: !11189, file: !1577, line: 150, type: !497)
!11189 = distinct !DILexicalBlock(scope: !11183, file: !1577, line: 149, column: 44)
!11190 = !DILocation(line: 150, column: 28, scope: !11189)
!11191 = !DILocation(line: 152, column: 27, scope: !11189)
!11192 = !DILocation(line: 152, column: 36, scope: !11189)
!11193 = !DILocation(line: 152, column: 45, scope: !11189)
!11194 = !DILocation(line: 152, column: 52, scope: !11189)
!11195 = !DILocation(line: 152, column: 61, scope: !11189)
!11196 = !DILocation(line: 153, column: 21, scope: !11189)
!11197 = !DILocation(line: 153, column: 30, scope: !11189)
!11198 = !DILocation(line: 153, column: 39, scope: !11189)
!11199 = !DILocation(line: 153, column: 46, scope: !11189)
!11200 = !DILocation(line: 152, column: 25, scope: !11189)
!11201 = !DILocation(line: 155, column: 9, scope: !11189)
!11202 = !DILocation(line: 155, column: 18, scope: !11189)
!11203 = !DILocation(line: 155, column: 27, scope: !11189)
!11204 = !DILocation(line: 155, column: 34, scope: !11189)
!11205 = !DILocation(line: 155, column: 43, scope: !11189)
!11206 = !DILocation(line: 157, column: 13, scope: !11207)
!11207 = distinct !DILexicalBlock(scope: !11189, file: !1577, line: 157, column: 13)
!11208 = !DILocation(line: 157, column: 29, scope: !11207)
!11209 = !DILocation(line: 157, column: 13, scope: !11189)
!11210 = !DILocation(line: 158, column: 35, scope: !11207)
!11211 = !DILocation(line: 158, column: 44, scope: !11207)
!11212 = !DILocation(line: 158, column: 13, scope: !11207)
!11213 = !DILocation(line: 159, column: 9, scope: !11189)
!11214 = !DILocalVariable(name: "header_len", scope: !11134, file: !1577, line: 162, type: !6)
!11215 = !DILocation(line: 162, column: 12, scope: !11134)
!11216 = !DILocation(line: 162, column: 54, scope: !11134)
!11217 = !DILocation(line: 162, column: 63, scope: !11134)
!11218 = !DILocation(line: 162, column: 71, scope: !11134)
!11219 = !DILocalVariable(name: "request", arg: 1, scope: !11220, file: !1577, line: 231, type: !1694)
!11220 = distinct !DISubprogram(name: "lwan_prepare_response_header", scope: !1577, file: !1577, line: 231, type: !11221, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1580, retainedNodes: !74)
!11221 = !DISubroutineType(types: !11222)
!11222 = !{!6, !1694, !497, !61, !6}
!11223 = !DILocation(line: 231, column: 46, scope: !11220, inlinedAt: !11224)
!11224 = distinct !DILocation(line: 162, column: 25, scope: !11134)
!11225 = !DILocalVariable(name: "status", arg: 2, scope: !11220, file: !1577, line: 231, type: !497)
!11226 = !DILocation(line: 231, column: 74, scope: !11220, inlinedAt: !11224)
!11227 = !DILocalVariable(name: "headers", arg: 3, scope: !11220, file: !1577, line: 231, type: !61)
!11228 = !DILocation(line: 231, column: 87, scope: !11220, inlinedAt: !11224)
!11229 = !DILocalVariable(name: "headers_buf_size", arg: 4, scope: !11220, file: !1577, line: 231, type: !6)
!11230 = !DILocation(line: 231, column: 105, scope: !11220, inlinedAt: !11224)
!11231 = !DILocalVariable(name: "p_headers", scope: !11220, file: !1577, line: 233, type: !61)
!11232 = !DILocation(line: 233, column: 11, scope: !11220, inlinedAt: !11224)
!11233 = !DILocalVariable(name: "p_headers_end", scope: !11220, file: !1577, line: 234, type: !61)
!11234 = !DILocation(line: 234, column: 11, scope: !11220, inlinedAt: !11224)
!11235 = !DILocation(line: 234, column: 27, scope: !11220, inlinedAt: !11224)
!11236 = !DILocation(line: 234, column: 37, scope: !11220, inlinedAt: !11224)
!11237 = !DILocation(line: 234, column: 35, scope: !11220, inlinedAt: !11224)
!11238 = !DILocalVariable(name: "buffer", scope: !11220, file: !1577, line: 235, type: !213)
!11239 = !DILocation(line: 235, column: 10, scope: !11220, inlinedAt: !11224)
!11240 = !DILocalVariable(name: "date_overridden", scope: !11220, file: !1577, line: 236, type: !341)
!11241 = !DILocation(line: 236, column: 10, scope: !11220, inlinedAt: !11224)
!11242 = !DILocalVariable(name: "expires_overridden", scope: !11220, file: !1577, line: 237, type: !341)
!11243 = !DILocation(line: 237, column: 10, scope: !11220, inlinedAt: !11224)
!11244 = !DILocation(line: 239, column: 17, scope: !11220, inlinedAt: !11224)
!11245 = !DILocation(line: 239, column: 15, scope: !11220, inlinedAt: !11224)
!11246 = !DILocation(line: 241, column: 9, scope: !11247, inlinedAt: !11224)
!11247 = distinct !DILexicalBlock(scope: !11220, file: !1577, line: 241, column: 9)
!11248 = !DILocation(line: 241, column: 18, scope: !11247, inlinedAt: !11224)
!11249 = !DILocation(line: 241, column: 24, scope: !11247, inlinedAt: !11224)
!11250 = !DILocation(line: 241, column: 9, scope: !11220, inlinedAt: !11224)
!11251 = !DILocation(line: 242, column: 9, scope: !11252, inlinedAt: !11224)
!11252 = distinct !DILexicalBlock(scope: !11253, file: !1577, line: 242, column: 9)
!11253 = distinct !DILexicalBlock(scope: !11247, file: !1577, line: 242, column: 9)
!11254 = !DILocation(line: 242, column: 9, scope: !11253, inlinedAt: !11224)
!11255 = !DILocation(line: 244, column: 9, scope: !11256, inlinedAt: !11224)
!11256 = distinct !DILexicalBlock(scope: !11257, file: !1577, line: 244, column: 9)
!11257 = distinct !DILexicalBlock(scope: !11247, file: !1577, line: 244, column: 9)
!11258 = !DILocation(line: 244, column: 9, scope: !11257, inlinedAt: !11224)
!11259 = !DILocalVariable(name: "len", scope: !11260, file: !1577, line: 245, type: !6)
!11260 = distinct !DILexicalBlock(scope: !11220, file: !1577, line: 245, column: 5)
!11261 = !DILocation(line: 245, column: 5, scope: !11260, inlinedAt: !11224)
!11262 = !DILocation(line: 245, column: 5, scope: !11263, inlinedAt: !11224)
!11263 = distinct !DILexicalBlock(scope: !11264, file: !1577, line: 245, column: 5)
!11264 = distinct !DILexicalBlock(scope: !11260, file: !1577, line: 245, column: 5)
!11265 = !DILocation(line: 245, column: 5, scope: !11264, inlinedAt: !11224)
!11266 = !DILocation(line: 247, column: 9, scope: !11267, inlinedAt: !11224)
!11267 = distinct !DILexicalBlock(scope: !11220, file: !1577, line: 247, column: 9)
!11268 = !DILocation(line: 247, column: 18, scope: !11267, inlinedAt: !11224)
!11269 = !DILocation(line: 247, column: 24, scope: !11267, inlinedAt: !11224)
!11270 = !DILocation(line: 247, column: 9, scope: !11220, inlinedAt: !11224)
!11271 = !DILocation(line: 248, column: 9, scope: !11272, inlinedAt: !11224)
!11272 = distinct !DILexicalBlock(scope: !11273, file: !1577, line: 248, column: 9)
!11273 = distinct !DILexicalBlock(scope: !11274, file: !1577, line: 248, column: 9)
!11274 = distinct !DILexicalBlock(scope: !11267, file: !1577, line: 247, column: 53)
!11275 = !DILocation(line: 248, column: 9, scope: !11273, inlinedAt: !11224)
!11276 = !DILocation(line: 249, column: 5, scope: !11274, inlinedAt: !11224)
!11277 = !DILocation(line: 249, column: 16, scope: !11278, inlinedAt: !11224)
!11278 = distinct !DILexicalBlock(scope: !11267, file: !1577, line: 249, column: 16)
!11279 = !DILocation(line: 249, column: 25, scope: !11278, inlinedAt: !11224)
!11280 = !DILocation(line: 249, column: 31, scope: !11278, inlinedAt: !11224)
!11281 = !DILocation(line: 249, column: 16, scope: !11267, inlinedAt: !11224)
!11282 = !DILocation(line: 251, column: 5, scope: !11283, inlinedAt: !11224)
!11283 = distinct !DILexicalBlock(scope: !11278, file: !1577, line: 249, column: 61)
!11284 = !DILocation(line: 252, column: 9, scope: !11285, inlinedAt: !11224)
!11285 = distinct !DILexicalBlock(scope: !11286, file: !1577, line: 252, column: 9)
!11286 = distinct !DILexicalBlock(scope: !11287, file: !1577, line: 252, column: 9)
!11287 = distinct !DILexicalBlock(scope: !11278, file: !1577, line: 251, column: 12)
!11288 = !DILocation(line: 252, column: 9, scope: !11286, inlinedAt: !11224)
!11289 = !DILocation(line: 253, column: 13, scope: !11290, inlinedAt: !11224)
!11290 = distinct !DILexicalBlock(scope: !11287, file: !1577, line: 253, column: 13)
!11291 = !DILocation(line: 253, column: 22, scope: !11290, inlinedAt: !11224)
!11292 = !DILocation(line: 253, column: 31, scope: !11290, inlinedAt: !11224)
!11293 = !DILocation(line: 253, column: 38, scope: !11290, inlinedAt: !11224)
!11294 = !DILocation(line: 253, column: 13, scope: !11287, inlinedAt: !11224)
!11295 = !DILocalVariable(name: "len", scope: !11296, file: !1577, line: 254, type: !6)
!11296 = distinct !DILexicalBlock(scope: !11290, file: !1577, line: 254, column: 13)
!11297 = !DILocation(line: 254, column: 13, scope: !11296, inlinedAt: !11224)
!11298 = !DILocalVariable(name: "tmp", scope: !11296, file: !1577, line: 254, type: !61)
!11299 = !DILocation(line: 254, column: 13, scope: !11300, inlinedAt: !11224)
!11300 = distinct !DILexicalBlock(scope: !11296, file: !1577, line: 254, column: 13)
!11301 = !DILocation(line: 254, column: 13, scope: !11302, inlinedAt: !11224)
!11302 = distinct !DILexicalBlock(scope: !11303, file: !1577, line: 254, column: 13)
!11303 = distinct !DILexicalBlock(scope: !11296, file: !1577, line: 254, column: 13)
!11304 = !DILocation(line: 254, column: 13, scope: !11303, inlinedAt: !11224)
!11305 = !DILocalVariable(name: "len", scope: !11306, file: !1577, line: 256, type: !6)
!11306 = distinct !DILexicalBlock(scope: !11290, file: !1577, line: 256, column: 13)
!11307 = !DILocation(line: 256, column: 13, scope: !11306, inlinedAt: !11224)
!11308 = !DILocalVariable(name: "tmp", scope: !11306, file: !1577, line: 256, type: !61)
!11309 = !DILocation(line: 256, column: 13, scope: !11310, inlinedAt: !11224)
!11310 = distinct !DILexicalBlock(scope: !11306, file: !1577, line: 256, column: 13)
!11311 = !DILocation(line: 256, column: 13, scope: !11312, inlinedAt: !11224)
!11312 = distinct !DILexicalBlock(scope: !11313, file: !1577, line: 256, column: 13)
!11313 = distinct !DILexicalBlock(scope: !11306, file: !1577, line: 256, column: 13)
!11314 = !DILocation(line: 256, column: 13, scope: !11313, inlinedAt: !11224)
!11315 = !DILocation(line: 259, column: 5, scope: !11316, inlinedAt: !11224)
!11316 = distinct !DILexicalBlock(scope: !11317, file: !1577, line: 259, column: 5)
!11317 = distinct !DILexicalBlock(scope: !11220, file: !1577, line: 259, column: 5)
!11318 = !DILocation(line: 259, column: 5, scope: !11317, inlinedAt: !11224)
!11319 = !DILocalVariable(name: "len", scope: !11320, file: !1577, line: 260, type: !6)
!11320 = distinct !DILexicalBlock(scope: !11220, file: !1577, line: 260, column: 5)
!11321 = !DILocation(line: 260, column: 5, scope: !11320, inlinedAt: !11224)
!11322 = !DILocation(line: 260, column: 5, scope: !11323, inlinedAt: !11224)
!11323 = distinct !DILexicalBlock(scope: !11324, file: !1577, line: 260, column: 5)
!11324 = distinct !DILexicalBlock(scope: !11320, file: !1577, line: 260, column: 5)
!11325 = !DILocation(line: 260, column: 5, scope: !11324, inlinedAt: !11224)
!11326 = !DILocation(line: 262, column: 9, scope: !11327, inlinedAt: !11224)
!11327 = distinct !DILexicalBlock(scope: !11220, file: !1577, line: 262, column: 9)
!11328 = !DILocation(line: 262, column: 18, scope: !11327, inlinedAt: !11224)
!11329 = !DILocation(line: 262, column: 24, scope: !11327, inlinedAt: !11224)
!11330 = !DILocation(line: 262, column: 30, scope: !11327, inlinedAt: !11224)
!11331 = !DILocation(line: 262, column: 9, scope: !11220, inlinedAt: !11224)
!11332 = !DILocation(line: 263, column: 9, scope: !11333, inlinedAt: !11224)
!11333 = distinct !DILexicalBlock(scope: !11334, file: !1577, line: 263, column: 9)
!11334 = distinct !DILexicalBlock(scope: !11327, file: !1577, line: 263, column: 9)
!11335 = !DILocation(line: 263, column: 9, scope: !11334, inlinedAt: !11224)
!11336 = !DILocation(line: 265, column: 9, scope: !11337, inlinedAt: !11224)
!11337 = distinct !DILexicalBlock(scope: !11338, file: !1577, line: 265, column: 9)
!11338 = distinct !DILexicalBlock(scope: !11327, file: !1577, line: 265, column: 9)
!11339 = !DILocation(line: 265, column: 9, scope: !11338, inlinedAt: !11224)
!11340 = !DILocation(line: 267, column: 10, scope: !11341, inlinedAt: !11224)
!11341 = distinct !DILexicalBlock(scope: !11220, file: !1577, line: 267, column: 9)
!11342 = !DILocation(line: 267, column: 17, scope: !11341, inlinedAt: !11224)
!11343 = !DILocation(line: 267, column: 36, scope: !11341, inlinedAt: !11224)
!11344 = !DILocation(line: 267, column: 39, scope: !11341, inlinedAt: !11224)
!11345 = !DILocation(line: 267, column: 48, scope: !11341, inlinedAt: !11224)
!11346 = !DILocation(line: 267, column: 57, scope: !11341, inlinedAt: !11224)
!11347 = !DILocation(line: 267, column: 9, scope: !11220, inlinedAt: !11224)
!11348 = !DILocalVariable(name: "header", scope: !11349, file: !1577, line: 268, type: !1780)
!11349 = distinct !DILexicalBlock(scope: !11341, file: !1577, line: 267, column: 67)
!11350 = !DILocation(line: 268, column: 27, scope: !11349, inlinedAt: !11224)
!11351 = !DILocation(line: 270, column: 23, scope: !11352, inlinedAt: !11224)
!11352 = distinct !DILexicalBlock(scope: !11349, file: !1577, line: 270, column: 9)
!11353 = !DILocation(line: 270, column: 32, scope: !11352, inlinedAt: !11224)
!11354 = !DILocation(line: 270, column: 41, scope: !11352, inlinedAt: !11224)
!11355 = !DILocation(line: 270, column: 21, scope: !11352, inlinedAt: !11224)
!11356 = !DILocation(line: 270, column: 14, scope: !11352, inlinedAt: !11224)
!11357 = !DILocation(line: 270, column: 50, scope: !11358, inlinedAt: !11224)
!11358 = distinct !DILexicalBlock(scope: !11352, file: !1577, line: 270, column: 9)
!11359 = !DILocation(line: 270, column: 58, scope: !11358, inlinedAt: !11224)
!11360 = !DILocation(line: 270, column: 9, scope: !11352, inlinedAt: !11224)
!11361 = !DILocation(line: 271, column: 17, scope: !11362, inlinedAt: !11224)
!11362 = distinct !DILexicalBlock(scope: !11363, file: !1577, line: 271, column: 17)
!11363 = distinct !DILexicalBlock(scope: !11358, file: !1577, line: 270, column: 73)
!11364 = !DILocation(line: 271, column: 17, scope: !11363, inlinedAt: !11224)
!11365 = !DILocation(line: 272, column: 17, scope: !11362, inlinedAt: !11224)
!11366 = !DILocation(line: 273, column: 17, scope: !11367, inlinedAt: !11224)
!11367 = distinct !DILexicalBlock(scope: !11363, file: !1577, line: 273, column: 17)
!11368 = !DILocation(line: 273, column: 17, scope: !11363, inlinedAt: !11224)
!11369 = !DILocation(line: 274, column: 33, scope: !11367, inlinedAt: !11224)
!11370 = !DILocation(line: 274, column: 17, scope: !11367, inlinedAt: !11224)
!11371 = !DILocation(line: 275, column: 17, scope: !11372, inlinedAt: !11224)
!11372 = distinct !DILexicalBlock(scope: !11363, file: !1577, line: 275, column: 17)
!11373 = !DILocation(line: 275, column: 17, scope: !11363, inlinedAt: !11224)
!11374 = !DILocation(line: 276, column: 36, scope: !11372, inlinedAt: !11224)
!11375 = !DILocation(line: 276, column: 17, scope: !11372, inlinedAt: !11224)
!11376 = !DILocation(line: 278, column: 13, scope: !11377, inlinedAt: !11224)
!11377 = distinct !DILexicalBlock(scope: !11363, file: !1577, line: 278, column: 13)
!11378 = !DILocation(line: 278, column: 13, scope: !11363, inlinedAt: !11224)
!11379 = !DILocation(line: 279, column: 13, scope: !11363, inlinedAt: !11224)
!11380 = !DILocation(line: 280, column: 13, scope: !11363, inlinedAt: !11224)
!11381 = !DILocalVariable(name: "len", scope: !11382, file: !1577, line: 281, type: !6)
!11382 = distinct !DILexicalBlock(scope: !11363, file: !1577, line: 281, column: 13)
!11383 = !DILocation(line: 281, column: 13, scope: !11382, inlinedAt: !11224)
!11384 = !DILocation(line: 281, column: 13, scope: !11385, inlinedAt: !11224)
!11385 = distinct !DILexicalBlock(scope: !11386, file: !1577, line: 281, column: 13)
!11386 = distinct !DILexicalBlock(scope: !11382, file: !1577, line: 281, column: 13)
!11387 = !DILocation(line: 281, column: 13, scope: !11386, inlinedAt: !11224)
!11388 = !DILocation(line: 282, column: 13, scope: !11363, inlinedAt: !11224)
!11389 = !DILocation(line: 283, column: 13, scope: !11363, inlinedAt: !11224)
!11390 = !DILocalVariable(name: "len", scope: !11391, file: !1577, line: 284, type: !6)
!11391 = distinct !DILexicalBlock(scope: !11363, file: !1577, line: 284, column: 13)
!11392 = !DILocation(line: 284, column: 13, scope: !11391, inlinedAt: !11224)
!11393 = !DILocation(line: 284, column: 13, scope: !11394, inlinedAt: !11224)
!11394 = distinct !DILexicalBlock(scope: !11395, file: !1577, line: 284, column: 13)
!11395 = distinct !DILexicalBlock(scope: !11391, file: !1577, line: 284, column: 13)
!11396 = !DILocation(line: 284, column: 13, scope: !11395, inlinedAt: !11224)
!11397 = !DILocation(line: 285, column: 9, scope: !11363, inlinedAt: !11224)
!11398 = !DILocation(line: 270, column: 69, scope: !11358, inlinedAt: !11224)
!11399 = !DILocation(line: 270, column: 9, scope: !11358, inlinedAt: !11224)
!11400 = distinct !{!11400, !11360, !11401, !3203}
!11401 = !DILocation(line: 285, column: 9, scope: !11352, inlinedAt: !11224)
!11402 = !DILocation(line: 286, column: 5, scope: !11349, inlinedAt: !11224)
!11403 = !DILocation(line: 286, column: 16, scope: !11404, inlinedAt: !11224)
!11404 = distinct !DILexicalBlock(scope: !11341, file: !1577, line: 286, column: 16)
!11405 = !DILocation(line: 286, column: 23, scope: !11404, inlinedAt: !11224)
!11406 = !DILocation(line: 286, column: 16, scope: !11341, inlinedAt: !11224)
!11407 = !DILocalVariable(name: "header", scope: !11408, file: !1577, line: 287, type: !1780)
!11408 = distinct !DILexicalBlock(scope: !11404, file: !1577, line: 286, column: 47)
!11409 = !DILocation(line: 287, column: 27, scope: !11408, inlinedAt: !11224)
!11410 = !DILocation(line: 289, column: 23, scope: !11411, inlinedAt: !11224)
!11411 = distinct !DILexicalBlock(scope: !11408, file: !1577, line: 289, column: 9)
!11412 = !DILocation(line: 289, column: 32, scope: !11411, inlinedAt: !11224)
!11413 = !DILocation(line: 289, column: 41, scope: !11411, inlinedAt: !11224)
!11414 = !DILocation(line: 289, column: 21, scope: !11411, inlinedAt: !11224)
!11415 = !DILocation(line: 289, column: 14, scope: !11411, inlinedAt: !11224)
!11416 = !DILocation(line: 289, column: 50, scope: !11417, inlinedAt: !11224)
!11417 = distinct !DILexicalBlock(scope: !11411, file: !1577, line: 289, column: 9)
!11418 = !DILocation(line: 289, column: 58, scope: !11417, inlinedAt: !11224)
!11419 = !DILocation(line: 289, column: 9, scope: !11411, inlinedAt: !11224)
!11420 = !DILocation(line: 290, column: 25, scope: !11421, inlinedAt: !11224)
!11421 = distinct !DILexicalBlock(scope: !11422, file: !1577, line: 290, column: 17)
!11422 = distinct !DILexicalBlock(scope: !11417, file: !1577, line: 289, column: 73)
!11423 = !DILocation(line: 290, column: 33, scope: !11421, inlinedAt: !11224)
!11424 = !DILocation(line: 290, column: 18, scope: !11421, inlinedAt: !11224)
!11425 = !DILocation(line: 290, column: 17, scope: !11422, inlinedAt: !11224)
!11426 = !DILocation(line: 291, column: 17, scope: !11427, inlinedAt: !11224)
!11427 = distinct !DILexicalBlock(scope: !11428, file: !1577, line: 291, column: 17)
!11428 = distinct !DILexicalBlock(scope: !11429, file: !1577, line: 291, column: 17)
!11429 = distinct !DILexicalBlock(scope: !11421, file: !1577, line: 290, column: 59)
!11430 = !DILocation(line: 291, column: 17, scope: !11428, inlinedAt: !11224)
!11431 = !DILocalVariable(name: "len", scope: !11432, file: !1577, line: 292, type: !6)
!11432 = distinct !DILexicalBlock(scope: !11429, file: !1577, line: 292, column: 17)
!11433 = !DILocation(line: 292, column: 17, scope: !11432, inlinedAt: !11224)
!11434 = !DILocation(line: 292, column: 17, scope: !11435, inlinedAt: !11224)
!11435 = distinct !DILexicalBlock(scope: !11436, file: !1577, line: 292, column: 17)
!11436 = distinct !DILexicalBlock(scope: !11432, file: !1577, line: 292, column: 17)
!11437 = !DILocation(line: 292, column: 17, scope: !11436, inlinedAt: !11224)
!11438 = !DILocation(line: 293, column: 17, scope: !11429, inlinedAt: !11224)
!11439 = !DILocation(line: 289, column: 69, scope: !11417, inlinedAt: !11224)
!11440 = !DILocation(line: 289, column: 9, scope: !11417, inlinedAt: !11224)
!11441 = distinct !{!11441, !11419, !11442, !3203}
!11442 = !DILocation(line: 295, column: 9, scope: !11411, inlinedAt: !11224)
!11443 = !DILocation(line: 296, column: 5, scope: !11408, inlinedAt: !11224)
!11444 = !DILocation(line: 298, column: 9, scope: !11445, inlinedAt: !11224)
!11445 = distinct !DILexicalBlock(scope: !11220, file: !1577, line: 298, column: 9)
!11446 = !DILocation(line: 298, column: 9, scope: !11220, inlinedAt: !11224)
!11447 = !DILocation(line: 299, column: 9, scope: !11448, inlinedAt: !11224)
!11448 = distinct !DILexicalBlock(scope: !11449, file: !1577, line: 299, column: 9)
!11449 = distinct !DILexicalBlock(scope: !11450, file: !1577, line: 299, column: 9)
!11450 = distinct !DILexicalBlock(scope: !11445, file: !1577, line: 298, column: 35)
!11451 = !DILocation(line: 299, column: 9, scope: !11449, inlinedAt: !11224)
!11452 = !DILocation(line: 300, column: 9, scope: !11453, inlinedAt: !11224)
!11453 = distinct !DILexicalBlock(scope: !11454, file: !1577, line: 300, column: 9)
!11454 = distinct !DILexicalBlock(scope: !11450, file: !1577, line: 300, column: 9)
!11455 = !DILocation(line: 300, column: 9, scope: !11454, inlinedAt: !11224)
!11456 = !DILocation(line: 301, column: 5, scope: !11450, inlinedAt: !11224)
!11457 = !DILocation(line: 303, column: 9, scope: !11458, inlinedAt: !11224)
!11458 = distinct !DILexicalBlock(scope: !11220, file: !1577, line: 303, column: 9)
!11459 = !DILocation(line: 303, column: 9, scope: !11220, inlinedAt: !11224)
!11460 = !DILocation(line: 304, column: 9, scope: !11461, inlinedAt: !11224)
!11461 = distinct !DILexicalBlock(scope: !11462, file: !1577, line: 304, column: 9)
!11462 = distinct !DILexicalBlock(scope: !11463, file: !1577, line: 304, column: 9)
!11463 = distinct !DILexicalBlock(scope: !11458, file: !1577, line: 303, column: 38)
!11464 = !DILocation(line: 304, column: 9, scope: !11462, inlinedAt: !11224)
!11465 = !DILocation(line: 305, column: 9, scope: !11466, inlinedAt: !11224)
!11466 = distinct !DILexicalBlock(scope: !11467, file: !1577, line: 305, column: 9)
!11467 = distinct !DILexicalBlock(scope: !11463, file: !1577, line: 305, column: 9)
!11468 = !DILocation(line: 305, column: 9, scope: !11467, inlinedAt: !11224)
!11469 = !DILocation(line: 306, column: 5, scope: !11463, inlinedAt: !11224)
!11470 = !DILocation(line: 308, column: 5, scope: !11471, inlinedAt: !11224)
!11471 = distinct !DILexicalBlock(scope: !11472, file: !1577, line: 308, column: 5)
!11472 = distinct !DILexicalBlock(scope: !11220, file: !1577, line: 308, column: 5)
!11473 = !DILocation(line: 308, column: 5, scope: !11472, inlinedAt: !11224)
!11474 = !DILocation(line: 310, column: 21, scope: !11220, inlinedAt: !11224)
!11475 = !DILocation(line: 310, column: 33, scope: !11220, inlinedAt: !11224)
!11476 = !DILocation(line: 310, column: 31, scope: !11220, inlinedAt: !11224)
!11477 = !DILocation(line: 310, column: 41, scope: !11220, inlinedAt: !11224)
!11478 = !DILocation(line: 310, column: 5, scope: !11220, inlinedAt: !11224)
!11479 = !DILocation(line: 311, column: 1, scope: !11220, inlinedAt: !11224)
!11480 = !DILocation(line: 163, column: 9, scope: !11481)
!11481 = distinct !DILexicalBlock(scope: !11134, file: !1577, line: 163, column: 9)
!11482 = !DILocation(line: 163, column: 9, scope: !11134)
!11483 = !DILocation(line: 164, column: 31, scope: !11484)
!11484 = distinct !DILexicalBlock(scope: !11481, file: !1577, line: 163, column: 32)
!11485 = !DILocation(line: 164, column: 9, scope: !11484)
!11486 = !DILocation(line: 165, column: 9, scope: !11484)
!11487 = !DILocation(line: 168, column: 9, scope: !11488)
!11488 = distinct !DILexicalBlock(scope: !11134, file: !1577, line: 168, column: 9)
!11489 = !DILocation(line: 168, column: 18, scope: !11488)
!11490 = !DILocation(line: 168, column: 24, scope: !11488)
!11491 = !DILocation(line: 168, column: 9, scope: !11134)
!11492 = !DILocation(line: 169, column: 20, scope: !11493)
!11493 = distinct !DILexicalBlock(scope: !11488, file: !1577, line: 168, column: 47)
!11494 = !DILocation(line: 169, column: 29, scope: !11493)
!11495 = !DILocation(line: 169, column: 38, scope: !11493)
!11496 = !DILocation(line: 169, column: 9, scope: !11493)
!11497 = !DILocation(line: 170, column: 9, scope: !11493)
!11498 = !DILocalVariable(name: "response_vec", scope: !11134, file: !1577, line: 173, type: !11499)
!11499 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11500, size: 256, elements: !189)
!11500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !7152, line: 26, size: 128, elements: !11501)
!11501 = !{!11502, !11503}
!11502 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !11500, file: !7152, line: 28, baseType: !5, size: 64)
!11503 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !11500, file: !7152, line: 29, baseType: !6, size: 64, offset: 64)
!11504 = !DILocation(line: 173, column: 18, scope: !11134)
!11505 = !DILocation(line: 173, column: 35, scope: !11134)
!11506 = !DILocation(line: 174, column: 9, scope: !11134)
!11507 = !DILocation(line: 174, column: 23, scope: !11134)
!11508 = !DILocation(line: 174, column: 43, scope: !11134)
!11509 = !DILocation(line: 175, column: 9, scope: !11134)
!11510 = !DILocation(line: 175, column: 23, scope: !11134)
!11511 = !DILocation(line: 175, column: 79, scope: !11134)
!11512 = !DILocation(line: 178, column: 17, scope: !11134)
!11513 = !DILocation(line: 178, column: 26, scope: !11134)
!11514 = !DILocation(line: 178, column: 5, scope: !11134)
!11515 = !DILocation(line: 179, column: 1, scope: !11134)
!11516 = !DILocalVariable(name: "request", arg: 1, scope: !1691, file: !1577, line: 343, type: !1694)
!11517 = !DILocation(line: 343, column: 42, scope: !1691)
!11518 = !DILocation(line: 345, column: 11, scope: !11519)
!11519 = distinct !DILexicalBlock(scope: !1691, file: !1577, line: 345, column: 9)
!11520 = !DILocation(line: 345, column: 20, scope: !11519)
!11521 = !DILocation(line: 345, column: 26, scope: !11519)
!11522 = !DILocation(line: 345, column: 9, scope: !1691)
!11523 = !DILocation(line: 346, column: 13, scope: !11524)
!11524 = distinct !DILexicalBlock(scope: !11525, file: !1577, line: 346, column: 13)
!11525 = distinct !DILexicalBlock(scope: !11519, file: !1577, line: 345, column: 52)
!11526 = !DILocation(line: 346, column: 13, scope: !11525)
!11527 = !DILocation(line: 347, column: 13, scope: !11524)
!11528 = !DILocation(line: 348, column: 5, scope: !11525)
!11529 = !DILocalVariable(name: "buffer_len", scope: !1691, file: !1577, line: 350, type: !6)
!11530 = !DILocation(line: 350, column: 12, scope: !1691)
!11531 = !DILocation(line: 350, column: 25, scope: !1691)
!11532 = !DILocation(line: 351, column: 9, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !1691, file: !1577, line: 351, column: 9)
!11534 = !DILocation(line: 351, column: 9, scope: !1691)
!11535 = !DILocation(line: 353, column: 19, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11533, file: !1577, line: 351, column: 32)
!11537 = !DILocation(line: 353, column: 9, scope: !11536)
!11538 = !DILocation(line: 354, column: 9, scope: !11536)
!11539 = !DILocalVariable(name: "chunk_size", scope: !1691, file: !1577, line: 357, type: !208)
!11540 = !DILocation(line: 357, column: 10, scope: !1691)
!11541 = !DILocalVariable(name: "converted_len", scope: !1691, file: !1577, line: 358, type: !37)
!11542 = !DILocation(line: 358, column: 9, scope: !1691)
!11543 = !DILocation(line: 358, column: 34, scope: !1691)
!11544 = !DILocation(line: 358, column: 77, scope: !1691)
!11545 = !DILocation(line: 358, column: 25, scope: !1691)
!11546 = !DILocation(line: 359, column: 9, scope: !11547)
!11547 = distinct !DILexicalBlock(scope: !1691, file: !1577, line: 359, column: 9)
!11548 = !DILocation(line: 359, column: 9, scope: !1691)
!11549 = !DILocation(line: 360, column: 9, scope: !11547)
!11550 = !DILocalVariable(name: "chunk_size_len", scope: !1691, file: !1577, line: 361, type: !6)
!11551 = !DILocation(line: 361, column: 12, scope: !1691)
!11552 = !DILocation(line: 361, column: 37, scope: !1691)
!11553 = !DILocation(line: 361, column: 29, scope: !1691)
!11554 = !DILocalVariable(name: "chunk_vec", scope: !1691, file: !1577, line: 363, type: !11555)
!11555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11500, size: 384, elements: !194)
!11556 = !DILocation(line: 363, column: 18, scope: !1691)
!11557 = !DILocation(line: 363, column: 32, scope: !1691)
!11558 = !DILocation(line: 364, column: 9, scope: !1691)
!11559 = !DILocation(line: 364, column: 23, scope: !1691)
!11560 = !DILocation(line: 364, column: 46, scope: !1691)
!11561 = !DILocation(line: 365, column: 9, scope: !1691)
!11562 = !DILocation(line: 365, column: 23, scope: !1691)
!11563 = !DILocation(line: 365, column: 79, scope: !1691)
!11564 = !DILocation(line: 366, column: 9, scope: !1691)
!11565 = !DILocation(line: 369, column: 17, scope: !1691)
!11566 = !DILocation(line: 369, column: 26, scope: !1691)
!11567 = !DILocation(line: 369, column: 5, scope: !1691)
!11568 = !DILocation(line: 371, column: 9, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !1691, file: !1577, line: 371, column: 9)
!11570 = !DILocation(line: 371, column: 9, scope: !1691)
!11571 = !DILocation(line: 372, column: 20, scope: !11572)
!11572 = distinct !DILexicalBlock(scope: !11569, file: !1577, line: 371, column: 64)
!11573 = !DILocation(line: 372, column: 29, scope: !11572)
!11574 = !DILocation(line: 372, column: 35, scope: !11572)
!11575 = !DILocation(line: 372, column: 9, scope: !11572)
!11576 = !DILocation(line: 373, column: 9, scope: !11572)
!11577 = !DILabel(scope: !1691, name: "abort_coro", file: !1577, line: 376)
!11578 = !DILocation(line: 376, column: 1, scope: !1691)
!11579 = !DILocation(line: 377, column: 16, scope: !1691)
!11580 = !DILocation(line: 377, column: 25, scope: !1691)
!11581 = !DILocation(line: 377, column: 31, scope: !1691)
!11582 = !DILocation(line: 377, column: 5, scope: !1691)
!11583 = !DILocation(line: 378, column: 5, scope: !1691)
!11584 = !DILocation(line: 379, column: 1, scope: !1691)
!11585 = distinct !DISubprogram(name: "log_request", scope: !1577, file: !1577, line: 104, type: !11135, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1580, retainedNodes: !74)
!11586 = !DILocalVariable(name: "request", arg: 1, scope: !11585, file: !1577, line: 104, type: !1694)
!11587 = !DILocation(line: 104, column: 29, scope: !11585)
!11588 = !DILocalVariable(name: "status", arg: 2, scope: !11585, file: !1577, line: 104, type: !497)
!11589 = !DILocation(line: 104, column: 57, scope: !11585)
!11590 = !DILocalVariable(name: "ip_buffer", scope: !11585, file: !1577, line: 106, type: !125)
!11591 = !DILocation(line: 106, column: 10, scope: !11585)
!11592 = !DILocation(line: 108, column: 5, scope: !11585)
!11593 = !DILocation(line: 116, column: 1, scope: !11585)
!11594 = distinct !DISubprogram(name: "lwan_default_response", scope: !1577, file: !1577, line: 182, type: !11135, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1580, retainedNodes: !74)
!11595 = !DILocalVariable(name: "request", arg: 1, scope: !11594, file: !1577, line: 182, type: !1694)
!11596 = !DILocation(line: 182, column: 39, scope: !11594)
!11597 = !DILocalVariable(name: "status", arg: 2, scope: !11594, file: !1577, line: 182, type: !497)
!11598 = !DILocation(line: 182, column: 67, scope: !11594)
!11599 = !DILocation(line: 184, column: 5, scope: !11594)
!11600 = !DILocation(line: 184, column: 14, scope: !11594)
!11601 = !DILocation(line: 184, column: 23, scope: !11594)
!11602 = !DILocation(line: 184, column: 33, scope: !11594)
!11603 = !DILocation(line: 186, column: 32, scope: !11594)
!11604 = !DILocation(line: 186, column: 48, scope: !11594)
!11605 = !DILocation(line: 186, column: 57, scope: !11594)
!11606 = !DILocation(line: 186, column: 66, scope: !11594)
!11607 = !DILocation(line: 187, column: 36, scope: !11594)
!11608 = !DILocation(line: 188, column: 57, scope: !11594)
!11609 = !DILocation(line: 188, column: 30, scope: !11594)
!11610 = !DILocation(line: 189, column: 68, scope: !11594)
!11611 = !DILocation(line: 189, column: 29, scope: !11594)
!11612 = !DILocation(line: 186, column: 5, scope: !11594)
!11613 = !DILocation(line: 192, column: 19, scope: !11594)
!11614 = !DILocation(line: 192, column: 28, scope: !11594)
!11615 = !DILocation(line: 192, column: 5, scope: !11594)
!11616 = !DILocation(line: 193, column: 1, scope: !11594)
!11617 = distinct !DISubprogram(name: "get_request_method", scope: !1577, file: !1577, line: 92, type: !11618, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1580, retainedNodes: !74)
!11618 = !DISubroutineType(types: !11619)
!11619 = !{!480, !1694}
!11620 = !DILocalVariable(name: "request", arg: 1, scope: !11617, file: !1577, line: 92, type: !1694)
!11621 = !DILocation(line: 92, column: 36, scope: !11617)
!11622 = !DILocation(line: 94, column: 9, scope: !11623)
!11623 = distinct !DILexicalBlock(scope: !11617, file: !1577, line: 94, column: 9)
!11624 = !DILocation(line: 94, column: 18, scope: !11623)
!11625 = !DILocation(line: 94, column: 24, scope: !11623)
!11626 = !DILocation(line: 94, column: 9, scope: !11617)
!11627 = !DILocation(line: 95, column: 9, scope: !11623)
!11628 = !DILocation(line: 96, column: 9, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11617, file: !1577, line: 96, column: 9)
!11630 = !DILocation(line: 96, column: 18, scope: !11629)
!11631 = !DILocation(line: 96, column: 24, scope: !11629)
!11632 = !DILocation(line: 96, column: 9, scope: !11617)
!11633 = !DILocation(line: 97, column: 9, scope: !11629)
!11634 = !DILocation(line: 98, column: 9, scope: !11635)
!11635 = distinct !DILexicalBlock(scope: !11617, file: !1577, line: 98, column: 9)
!11636 = !DILocation(line: 98, column: 18, scope: !11635)
!11637 = !DILocation(line: 98, column: 24, scope: !11635)
!11638 = !DILocation(line: 98, column: 9, scope: !11617)
!11639 = !DILocation(line: 99, column: 9, scope: !11635)
!11640 = !DILocation(line: 100, column: 5, scope: !11617)
!11641 = !DILocation(line: 101, column: 1, scope: !11617)
!11642 = distinct !DISubprogram(name: "lwan_response_set_chunked", scope: !1577, file: !1577, line: 322, type: !11643, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1580, retainedNodes: !74)
!11643 = !DISubroutineType(types: !11644)
!11644 = !{!341, !1694, !497}
!11645 = !DILocalVariable(name: "request", arg: 1, scope: !11642, file: !1577, line: 322, type: !1694)
!11646 = !DILocation(line: 322, column: 43, scope: !11642)
!11647 = !DILocalVariable(name: "status", arg: 2, scope: !11642, file: !1577, line: 322, type: !497)
!11648 = !DILocation(line: 322, column: 71, scope: !11642)
!11649 = !DILocalVariable(name: "buffer", scope: !11642, file: !1577, line: 324, type: !8448)
!11650 = !DILocation(line: 324, column: 10, scope: !11642)
!11651 = !DILocalVariable(name: "buffer_len", scope: !11642, file: !1577, line: 325, type: !6)
!11652 = !DILocation(line: 325, column: 12, scope: !11642)
!11653 = !DILocation(line: 327, column: 9, scope: !11654)
!11654 = distinct !DILexicalBlock(scope: !11642, file: !1577, line: 327, column: 9)
!11655 = !DILocation(line: 327, column: 18, scope: !11654)
!11656 = !DILocation(line: 327, column: 24, scope: !11654)
!11657 = !DILocation(line: 327, column: 9, scope: !11642)
!11658 = !DILocation(line: 328, column: 9, scope: !11654)
!11659 = !DILocation(line: 330, column: 5, scope: !11642)
!11660 = !DILocation(line: 330, column: 14, scope: !11642)
!11661 = !DILocation(line: 330, column: 20, scope: !11642)
!11662 = !DILocation(line: 331, column: 47, scope: !11642)
!11663 = !DILocation(line: 331, column: 56, scope: !11642)
!11664 = !DILocation(line: 332, column: 49, scope: !11642)
!11665 = !DILocation(line: 231, column: 46, scope: !11220, inlinedAt: !11666)
!11666 = distinct !DILocation(line: 331, column: 18, scope: !11642)
!11667 = !DILocation(line: 231, column: 74, scope: !11220, inlinedAt: !11666)
!11668 = !DILocation(line: 231, column: 87, scope: !11220, inlinedAt: !11666)
!11669 = !DILocation(line: 231, column: 105, scope: !11220, inlinedAt: !11666)
!11670 = !DILocation(line: 233, column: 11, scope: !11220, inlinedAt: !11666)
!11671 = !DILocation(line: 234, column: 11, scope: !11220, inlinedAt: !11666)
!11672 = !DILocation(line: 234, column: 27, scope: !11220, inlinedAt: !11666)
!11673 = !DILocation(line: 234, column: 37, scope: !11220, inlinedAt: !11666)
!11674 = !DILocation(line: 234, column: 35, scope: !11220, inlinedAt: !11666)
!11675 = !DILocation(line: 235, column: 10, scope: !11220, inlinedAt: !11666)
!11676 = !DILocation(line: 236, column: 10, scope: !11220, inlinedAt: !11666)
!11677 = !DILocation(line: 237, column: 10, scope: !11220, inlinedAt: !11666)
!11678 = !DILocation(line: 239, column: 17, scope: !11220, inlinedAt: !11666)
!11679 = !DILocation(line: 239, column: 15, scope: !11220, inlinedAt: !11666)
!11680 = !DILocation(line: 241, column: 9, scope: !11247, inlinedAt: !11666)
!11681 = !DILocation(line: 241, column: 18, scope: !11247, inlinedAt: !11666)
!11682 = !DILocation(line: 241, column: 24, scope: !11247, inlinedAt: !11666)
!11683 = !DILocation(line: 241, column: 9, scope: !11220, inlinedAt: !11666)
!11684 = !DILocation(line: 242, column: 9, scope: !11252, inlinedAt: !11666)
!11685 = !DILocation(line: 242, column: 9, scope: !11253, inlinedAt: !11666)
!11686 = !DILocation(line: 244, column: 9, scope: !11256, inlinedAt: !11666)
!11687 = !DILocation(line: 244, column: 9, scope: !11257, inlinedAt: !11666)
!11688 = !DILocation(line: 245, column: 5, scope: !11260, inlinedAt: !11666)
!11689 = !DILocation(line: 245, column: 5, scope: !11263, inlinedAt: !11666)
!11690 = !DILocation(line: 245, column: 5, scope: !11264, inlinedAt: !11666)
!11691 = !DILocation(line: 247, column: 9, scope: !11267, inlinedAt: !11666)
!11692 = !DILocation(line: 247, column: 18, scope: !11267, inlinedAt: !11666)
!11693 = !DILocation(line: 247, column: 24, scope: !11267, inlinedAt: !11666)
!11694 = !DILocation(line: 247, column: 9, scope: !11220, inlinedAt: !11666)
!11695 = !DILocation(line: 248, column: 9, scope: !11272, inlinedAt: !11666)
!11696 = !DILocation(line: 248, column: 9, scope: !11273, inlinedAt: !11666)
!11697 = !DILocation(line: 249, column: 5, scope: !11274, inlinedAt: !11666)
!11698 = !DILocation(line: 249, column: 16, scope: !11278, inlinedAt: !11666)
!11699 = !DILocation(line: 249, column: 25, scope: !11278, inlinedAt: !11666)
!11700 = !DILocation(line: 249, column: 31, scope: !11278, inlinedAt: !11666)
!11701 = !DILocation(line: 249, column: 16, scope: !11267, inlinedAt: !11666)
!11702 = !DILocation(line: 251, column: 5, scope: !11283, inlinedAt: !11666)
!11703 = !DILocation(line: 252, column: 9, scope: !11285, inlinedAt: !11666)
!11704 = !DILocation(line: 252, column: 9, scope: !11286, inlinedAt: !11666)
!11705 = !DILocation(line: 253, column: 13, scope: !11290, inlinedAt: !11666)
!11706 = !DILocation(line: 253, column: 22, scope: !11290, inlinedAt: !11666)
!11707 = !DILocation(line: 253, column: 31, scope: !11290, inlinedAt: !11666)
!11708 = !DILocation(line: 253, column: 38, scope: !11290, inlinedAt: !11666)
!11709 = !DILocation(line: 253, column: 13, scope: !11287, inlinedAt: !11666)
!11710 = !DILocation(line: 254, column: 13, scope: !11296, inlinedAt: !11666)
!11711 = !DILocation(line: 254, column: 13, scope: !11300, inlinedAt: !11666)
!11712 = !DILocation(line: 254, column: 13, scope: !11302, inlinedAt: !11666)
!11713 = !DILocation(line: 254, column: 13, scope: !11303, inlinedAt: !11666)
!11714 = !DILocation(line: 256, column: 13, scope: !11306, inlinedAt: !11666)
!11715 = !DILocation(line: 256, column: 13, scope: !11310, inlinedAt: !11666)
!11716 = !DILocation(line: 256, column: 13, scope: !11312, inlinedAt: !11666)
!11717 = !DILocation(line: 256, column: 13, scope: !11313, inlinedAt: !11666)
!11718 = !DILocation(line: 259, column: 5, scope: !11316, inlinedAt: !11666)
!11719 = !DILocation(line: 259, column: 5, scope: !11317, inlinedAt: !11666)
!11720 = !DILocation(line: 260, column: 5, scope: !11320, inlinedAt: !11666)
!11721 = !DILocation(line: 260, column: 5, scope: !11323, inlinedAt: !11666)
!11722 = !DILocation(line: 260, column: 5, scope: !11324, inlinedAt: !11666)
!11723 = !DILocation(line: 262, column: 9, scope: !11327, inlinedAt: !11666)
!11724 = !DILocation(line: 262, column: 18, scope: !11327, inlinedAt: !11666)
!11725 = !DILocation(line: 262, column: 24, scope: !11327, inlinedAt: !11666)
!11726 = !DILocation(line: 262, column: 30, scope: !11327, inlinedAt: !11666)
!11727 = !DILocation(line: 262, column: 9, scope: !11220, inlinedAt: !11666)
!11728 = !DILocation(line: 263, column: 9, scope: !11333, inlinedAt: !11666)
!11729 = !DILocation(line: 263, column: 9, scope: !11334, inlinedAt: !11666)
!11730 = !DILocation(line: 265, column: 9, scope: !11337, inlinedAt: !11666)
!11731 = !DILocation(line: 265, column: 9, scope: !11338, inlinedAt: !11666)
!11732 = !DILocation(line: 267, column: 10, scope: !11341, inlinedAt: !11666)
!11733 = !DILocation(line: 267, column: 17, scope: !11341, inlinedAt: !11666)
!11734 = !DILocation(line: 267, column: 36, scope: !11341, inlinedAt: !11666)
!11735 = !DILocation(line: 267, column: 39, scope: !11341, inlinedAt: !11666)
!11736 = !DILocation(line: 267, column: 48, scope: !11341, inlinedAt: !11666)
!11737 = !DILocation(line: 267, column: 57, scope: !11341, inlinedAt: !11666)
!11738 = !DILocation(line: 267, column: 9, scope: !11220, inlinedAt: !11666)
!11739 = !DILocation(line: 268, column: 27, scope: !11349, inlinedAt: !11666)
!11740 = !DILocation(line: 270, column: 23, scope: !11352, inlinedAt: !11666)
!11741 = !DILocation(line: 270, column: 32, scope: !11352, inlinedAt: !11666)
!11742 = !DILocation(line: 270, column: 41, scope: !11352, inlinedAt: !11666)
!11743 = !DILocation(line: 270, column: 21, scope: !11352, inlinedAt: !11666)
!11744 = !DILocation(line: 270, column: 14, scope: !11352, inlinedAt: !11666)
!11745 = !DILocation(line: 270, column: 50, scope: !11358, inlinedAt: !11666)
!11746 = !DILocation(line: 270, column: 58, scope: !11358, inlinedAt: !11666)
!11747 = !DILocation(line: 270, column: 9, scope: !11352, inlinedAt: !11666)
!11748 = !DILocation(line: 271, column: 17, scope: !11362, inlinedAt: !11666)
!11749 = !DILocation(line: 271, column: 17, scope: !11363, inlinedAt: !11666)
!11750 = !DILocation(line: 272, column: 17, scope: !11362, inlinedAt: !11666)
!11751 = !DILocation(line: 273, column: 17, scope: !11367, inlinedAt: !11666)
!11752 = !DILocation(line: 273, column: 17, scope: !11363, inlinedAt: !11666)
!11753 = !DILocation(line: 274, column: 33, scope: !11367, inlinedAt: !11666)
!11754 = !DILocation(line: 274, column: 17, scope: !11367, inlinedAt: !11666)
!11755 = !DILocation(line: 275, column: 17, scope: !11372, inlinedAt: !11666)
!11756 = !DILocation(line: 275, column: 17, scope: !11363, inlinedAt: !11666)
!11757 = !DILocation(line: 276, column: 36, scope: !11372, inlinedAt: !11666)
!11758 = !DILocation(line: 276, column: 17, scope: !11372, inlinedAt: !11666)
!11759 = !DILocation(line: 278, column: 13, scope: !11377, inlinedAt: !11666)
!11760 = !DILocation(line: 278, column: 13, scope: !11363, inlinedAt: !11666)
!11761 = !DILocation(line: 279, column: 13, scope: !11363, inlinedAt: !11666)
!11762 = !DILocation(line: 280, column: 13, scope: !11363, inlinedAt: !11666)
!11763 = !DILocation(line: 281, column: 13, scope: !11382, inlinedAt: !11666)
!11764 = !DILocation(line: 281, column: 13, scope: !11385, inlinedAt: !11666)
!11765 = !DILocation(line: 281, column: 13, scope: !11386, inlinedAt: !11666)
!11766 = !DILocation(line: 282, column: 13, scope: !11363, inlinedAt: !11666)
!11767 = !DILocation(line: 283, column: 13, scope: !11363, inlinedAt: !11666)
!11768 = !DILocation(line: 284, column: 13, scope: !11391, inlinedAt: !11666)
!11769 = !DILocation(line: 284, column: 13, scope: !11394, inlinedAt: !11666)
!11770 = !DILocation(line: 284, column: 13, scope: !11395, inlinedAt: !11666)
!11771 = !DILocation(line: 285, column: 9, scope: !11363, inlinedAt: !11666)
!11772 = !DILocation(line: 270, column: 69, scope: !11358, inlinedAt: !11666)
!11773 = !DILocation(line: 270, column: 9, scope: !11358, inlinedAt: !11666)
!11774 = distinct !{!11774, !11747, !11775, !3203}
!11775 = !DILocation(line: 285, column: 9, scope: !11352, inlinedAt: !11666)
!11776 = !DILocation(line: 286, column: 5, scope: !11349, inlinedAt: !11666)
!11777 = !DILocation(line: 286, column: 16, scope: !11404, inlinedAt: !11666)
!11778 = !DILocation(line: 286, column: 23, scope: !11404, inlinedAt: !11666)
!11779 = !DILocation(line: 286, column: 16, scope: !11341, inlinedAt: !11666)
!11780 = !DILocation(line: 287, column: 27, scope: !11408, inlinedAt: !11666)
!11781 = !DILocation(line: 289, column: 23, scope: !11411, inlinedAt: !11666)
!11782 = !DILocation(line: 289, column: 32, scope: !11411, inlinedAt: !11666)
!11783 = !DILocation(line: 289, column: 41, scope: !11411, inlinedAt: !11666)
!11784 = !DILocation(line: 289, column: 21, scope: !11411, inlinedAt: !11666)
!11785 = !DILocation(line: 289, column: 14, scope: !11411, inlinedAt: !11666)
!11786 = !DILocation(line: 289, column: 50, scope: !11417, inlinedAt: !11666)
!11787 = !DILocation(line: 289, column: 58, scope: !11417, inlinedAt: !11666)
!11788 = !DILocation(line: 289, column: 9, scope: !11411, inlinedAt: !11666)
!11789 = !DILocation(line: 290, column: 25, scope: !11421, inlinedAt: !11666)
!11790 = !DILocation(line: 290, column: 33, scope: !11421, inlinedAt: !11666)
!11791 = !DILocation(line: 290, column: 18, scope: !11421, inlinedAt: !11666)
!11792 = !DILocation(line: 290, column: 17, scope: !11422, inlinedAt: !11666)
!11793 = !DILocation(line: 291, column: 17, scope: !11427, inlinedAt: !11666)
!11794 = !DILocation(line: 291, column: 17, scope: !11428, inlinedAt: !11666)
!11795 = !DILocation(line: 292, column: 17, scope: !11432, inlinedAt: !11666)
!11796 = !DILocation(line: 292, column: 17, scope: !11435, inlinedAt: !11666)
!11797 = !DILocation(line: 292, column: 17, scope: !11436, inlinedAt: !11666)
!11798 = !DILocation(line: 293, column: 17, scope: !11429, inlinedAt: !11666)
!11799 = !DILocation(line: 289, column: 69, scope: !11417, inlinedAt: !11666)
!11800 = !DILocation(line: 289, column: 9, scope: !11417, inlinedAt: !11666)
!11801 = distinct !{!11801, !11788, !11802, !3203}
!11802 = !DILocation(line: 295, column: 9, scope: !11411, inlinedAt: !11666)
!11803 = !DILocation(line: 296, column: 5, scope: !11408, inlinedAt: !11666)
!11804 = !DILocation(line: 298, column: 9, scope: !11445, inlinedAt: !11666)
!11805 = !DILocation(line: 298, column: 9, scope: !11220, inlinedAt: !11666)
!11806 = !DILocation(line: 299, column: 9, scope: !11448, inlinedAt: !11666)
!11807 = !DILocation(line: 299, column: 9, scope: !11449, inlinedAt: !11666)
!11808 = !DILocation(line: 300, column: 9, scope: !11453, inlinedAt: !11666)
!11809 = !DILocation(line: 300, column: 9, scope: !11454, inlinedAt: !11666)
!11810 = !DILocation(line: 301, column: 5, scope: !11450, inlinedAt: !11666)
!11811 = !DILocation(line: 303, column: 9, scope: !11458, inlinedAt: !11666)
!11812 = !DILocation(line: 303, column: 9, scope: !11220, inlinedAt: !11666)
!11813 = !DILocation(line: 304, column: 9, scope: !11461, inlinedAt: !11666)
!11814 = !DILocation(line: 304, column: 9, scope: !11462, inlinedAt: !11666)
!11815 = !DILocation(line: 305, column: 9, scope: !11466, inlinedAt: !11666)
!11816 = !DILocation(line: 305, column: 9, scope: !11467, inlinedAt: !11666)
!11817 = !DILocation(line: 306, column: 5, scope: !11463, inlinedAt: !11666)
!11818 = !DILocation(line: 308, column: 5, scope: !11471, inlinedAt: !11666)
!11819 = !DILocation(line: 308, column: 5, scope: !11472, inlinedAt: !11666)
!11820 = !DILocation(line: 310, column: 21, scope: !11220, inlinedAt: !11666)
!11821 = !DILocation(line: 310, column: 33, scope: !11220, inlinedAt: !11666)
!11822 = !DILocation(line: 310, column: 31, scope: !11220, inlinedAt: !11666)
!11823 = !DILocation(line: 310, column: 41, scope: !11220, inlinedAt: !11666)
!11824 = !DILocation(line: 310, column: 5, scope: !11220, inlinedAt: !11666)
!11825 = !DILocation(line: 311, column: 1, scope: !11220, inlinedAt: !11666)
!11826 = !DILocation(line: 331, column: 16, scope: !11642)
!11827 = !DILocation(line: 333, column: 9, scope: !11828)
!11828 = distinct !DILexicalBlock(scope: !11642, file: !1577, line: 333, column: 9)
!11829 = !DILocation(line: 333, column: 9, scope: !11642)
!11830 = !DILocation(line: 334, column: 9, scope: !11828)
!11831 = !DILocation(line: 336, column: 5, scope: !11642)
!11832 = !DILocation(line: 336, column: 14, scope: !11642)
!11833 = !DILocation(line: 336, column: 20, scope: !11642)
!11834 = !DILocation(line: 337, column: 15, scope: !11642)
!11835 = !DILocation(line: 337, column: 24, scope: !11642)
!11836 = !DILocation(line: 337, column: 32, scope: !11642)
!11837 = !DILocation(line: 337, column: 5, scope: !11642)
!11838 = !DILocation(line: 339, column: 5, scope: !11642)
!11839 = !DILocation(line: 340, column: 1, scope: !11642)
!11840 = !DILocation(line: 231, column: 46, scope: !11220)
!11841 = !DILocation(line: 231, column: 74, scope: !11220)
!11842 = !DILocation(line: 231, column: 87, scope: !11220)
!11843 = !DILocation(line: 231, column: 105, scope: !11220)
!11844 = !DILocation(line: 233, column: 11, scope: !11220)
!11845 = !DILocation(line: 234, column: 11, scope: !11220)
!11846 = !DILocation(line: 234, column: 27, scope: !11220)
!11847 = !DILocation(line: 234, column: 37, scope: !11220)
!11848 = !DILocation(line: 234, column: 35, scope: !11220)
!11849 = !DILocation(line: 235, column: 10, scope: !11220)
!11850 = !DILocation(line: 236, column: 10, scope: !11220)
!11851 = !DILocation(line: 237, column: 10, scope: !11220)
!11852 = !DILocation(line: 239, column: 17, scope: !11220)
!11853 = !DILocation(line: 239, column: 15, scope: !11220)
!11854 = !DILocation(line: 241, column: 9, scope: !11247)
!11855 = !DILocation(line: 241, column: 18, scope: !11247)
!11856 = !DILocation(line: 241, column: 24, scope: !11247)
!11857 = !DILocation(line: 241, column: 9, scope: !11220)
!11858 = !DILocation(line: 242, column: 9, scope: !11247)
!11859 = !DILocation(line: 242, column: 9, scope: !11252)
!11860 = !DILocation(line: 242, column: 9, scope: !11253)
!11861 = !DILocation(line: 244, column: 9, scope: !11247)
!11862 = !DILocation(line: 244, column: 9, scope: !11256)
!11863 = !DILocation(line: 244, column: 9, scope: !11257)
!11864 = !DILocation(line: 245, column: 5, scope: !11220)
!11865 = !DILocation(line: 245, column: 5, scope: !11260)
!11866 = !DILocation(line: 245, column: 5, scope: !11263)
!11867 = !DILocation(line: 245, column: 5, scope: !11264)
!11868 = !DILocation(line: 247, column: 9, scope: !11267)
!11869 = !DILocation(line: 247, column: 18, scope: !11267)
!11870 = !DILocation(line: 247, column: 24, scope: !11267)
!11871 = !DILocation(line: 247, column: 9, scope: !11220)
!11872 = !DILocation(line: 248, column: 9, scope: !11274)
!11873 = !DILocation(line: 248, column: 9, scope: !11272)
!11874 = !DILocation(line: 248, column: 9, scope: !11273)
!11875 = !DILocation(line: 249, column: 5, scope: !11274)
!11876 = !DILocation(line: 249, column: 16, scope: !11278)
!11877 = !DILocation(line: 249, column: 25, scope: !11278)
!11878 = !DILocation(line: 249, column: 31, scope: !11278)
!11879 = !DILocation(line: 249, column: 16, scope: !11267)
!11880 = !DILocation(line: 251, column: 5, scope: !11283)
!11881 = !DILocation(line: 252, column: 9, scope: !11287)
!11882 = !DILocation(line: 252, column: 9, scope: !11285)
!11883 = !DILocation(line: 252, column: 9, scope: !11286)
!11884 = !DILocation(line: 253, column: 13, scope: !11290)
!11885 = !DILocation(line: 253, column: 22, scope: !11290)
!11886 = !DILocation(line: 253, column: 31, scope: !11290)
!11887 = !DILocation(line: 253, column: 38, scope: !11290)
!11888 = !DILocation(line: 253, column: 13, scope: !11287)
!11889 = !DILocation(line: 254, column: 13, scope: !11290)
!11890 = !DILocation(line: 254, column: 13, scope: !11296)
!11891 = !DILocation(line: 254, column: 13, scope: !11300)
!11892 = !DILocation(line: 254, column: 13, scope: !11302)
!11893 = !DILocation(line: 254, column: 13, scope: !11303)
!11894 = !DILocation(line: 256, column: 13, scope: !11290)
!11895 = !DILocation(line: 256, column: 13, scope: !11306)
!11896 = !DILocation(line: 256, column: 13, scope: !11310)
!11897 = !DILocation(line: 256, column: 13, scope: !11312)
!11898 = !DILocation(line: 256, column: 13, scope: !11313)
!11899 = !DILocation(line: 259, column: 5, scope: !11220)
!11900 = !DILocation(line: 259, column: 5, scope: !11316)
!11901 = !DILocation(line: 259, column: 5, scope: !11317)
!11902 = !DILocation(line: 260, column: 5, scope: !11220)
!11903 = !DILocation(line: 260, column: 5, scope: !11320)
!11904 = !DILocation(line: 260, column: 5, scope: !11323)
!11905 = !DILocation(line: 260, column: 5, scope: !11324)
!11906 = !DILocation(line: 262, column: 9, scope: !11327)
!11907 = !DILocation(line: 262, column: 18, scope: !11327)
!11908 = !DILocation(line: 262, column: 24, scope: !11327)
!11909 = !DILocation(line: 262, column: 30, scope: !11327)
!11910 = !DILocation(line: 262, column: 9, scope: !11220)
!11911 = !DILocation(line: 263, column: 9, scope: !11327)
!11912 = !DILocation(line: 263, column: 9, scope: !11333)
!11913 = !DILocation(line: 263, column: 9, scope: !11334)
!11914 = !DILocation(line: 265, column: 9, scope: !11327)
!11915 = !DILocation(line: 265, column: 9, scope: !11337)
!11916 = !DILocation(line: 265, column: 9, scope: !11338)
!11917 = !DILocation(line: 267, column: 10, scope: !11341)
!11918 = !DILocation(line: 267, column: 17, scope: !11341)
!11919 = !DILocation(line: 267, column: 36, scope: !11341)
!11920 = !DILocation(line: 267, column: 39, scope: !11341)
!11921 = !DILocation(line: 267, column: 48, scope: !11341)
!11922 = !DILocation(line: 267, column: 57, scope: !11341)
!11923 = !DILocation(line: 267, column: 9, scope: !11220)
!11924 = !DILocation(line: 268, column: 27, scope: !11349)
!11925 = !DILocation(line: 270, column: 23, scope: !11352)
!11926 = !DILocation(line: 270, column: 32, scope: !11352)
!11927 = !DILocation(line: 270, column: 41, scope: !11352)
!11928 = !DILocation(line: 270, column: 21, scope: !11352)
!11929 = !DILocation(line: 270, column: 14, scope: !11352)
!11930 = !DILocation(line: 270, column: 50, scope: !11358)
!11931 = !DILocation(line: 270, column: 58, scope: !11358)
!11932 = !DILocation(line: 270, column: 9, scope: !11352)
!11933 = !DILocation(line: 271, column: 17, scope: !11362)
!11934 = !DILocation(line: 271, column: 17, scope: !11363)
!11935 = !DILocation(line: 272, column: 17, scope: !11362)
!11936 = !DILocation(line: 273, column: 17, scope: !11367)
!11937 = !DILocation(line: 273, column: 17, scope: !11363)
!11938 = !DILocation(line: 274, column: 33, scope: !11367)
!11939 = !DILocation(line: 274, column: 17, scope: !11367)
!11940 = !DILocation(line: 275, column: 17, scope: !11372)
!11941 = !DILocation(line: 275, column: 17, scope: !11363)
!11942 = !DILocation(line: 276, column: 36, scope: !11372)
!11943 = !DILocation(line: 276, column: 17, scope: !11372)
!11944 = !DILocation(line: 278, column: 13, scope: !11377)
!11945 = !DILocation(line: 278, column: 13, scope: !11363)
!11946 = !DILocation(line: 279, column: 13, scope: !11363)
!11947 = !DILocation(line: 280, column: 13, scope: !11363)
!11948 = !DILocation(line: 281, column: 13, scope: !11363)
!11949 = !DILocation(line: 281, column: 13, scope: !11382)
!11950 = !DILocation(line: 281, column: 13, scope: !11385)
!11951 = !DILocation(line: 281, column: 13, scope: !11386)
!11952 = !DILocation(line: 282, column: 13, scope: !11363)
!11953 = !DILocation(line: 283, column: 13, scope: !11363)
!11954 = !DILocation(line: 284, column: 13, scope: !11363)
!11955 = !DILocation(line: 284, column: 13, scope: !11391)
!11956 = !DILocation(line: 284, column: 13, scope: !11394)
!11957 = !DILocation(line: 284, column: 13, scope: !11395)
!11958 = !DILocation(line: 285, column: 9, scope: !11363)
!11959 = !DILocation(line: 270, column: 69, scope: !11358)
!11960 = !DILocation(line: 270, column: 9, scope: !11358)
!11961 = distinct !{!11961, !11932, !11962, !3203}
!11962 = !DILocation(line: 285, column: 9, scope: !11352)
!11963 = !DILocation(line: 286, column: 5, scope: !11349)
!11964 = !DILocation(line: 286, column: 16, scope: !11404)
!11965 = !DILocation(line: 286, column: 23, scope: !11404)
!11966 = !DILocation(line: 286, column: 16, scope: !11341)
!11967 = !DILocation(line: 287, column: 27, scope: !11408)
!11968 = !DILocation(line: 289, column: 23, scope: !11411)
!11969 = !DILocation(line: 289, column: 32, scope: !11411)
!11970 = !DILocation(line: 289, column: 41, scope: !11411)
!11971 = !DILocation(line: 289, column: 21, scope: !11411)
!11972 = !DILocation(line: 289, column: 14, scope: !11411)
!11973 = !DILocation(line: 289, column: 50, scope: !11417)
!11974 = !DILocation(line: 289, column: 58, scope: !11417)
!11975 = !DILocation(line: 289, column: 9, scope: !11411)
!11976 = !DILocation(line: 290, column: 25, scope: !11421)
!11977 = !DILocation(line: 290, column: 33, scope: !11421)
!11978 = !DILocation(line: 290, column: 18, scope: !11421)
!11979 = !DILocation(line: 290, column: 17, scope: !11422)
!11980 = !DILocation(line: 291, column: 17, scope: !11429)
!11981 = !DILocation(line: 291, column: 17, scope: !11427)
!11982 = !DILocation(line: 291, column: 17, scope: !11428)
!11983 = !DILocation(line: 292, column: 17, scope: !11429)
!11984 = !DILocation(line: 292, column: 17, scope: !11432)
!11985 = !DILocation(line: 292, column: 17, scope: !11435)
!11986 = !DILocation(line: 292, column: 17, scope: !11436)
!11987 = !DILocation(line: 293, column: 17, scope: !11429)
!11988 = !DILocation(line: 295, column: 9, scope: !11422)
!11989 = !DILocation(line: 289, column: 69, scope: !11417)
!11990 = !DILocation(line: 289, column: 9, scope: !11417)
!11991 = distinct !{!11991, !11975, !11992, !3203}
!11992 = !DILocation(line: 295, column: 9, scope: !11411)
!11993 = !DILocation(line: 296, column: 5, scope: !11408)
!11994 = !DILocation(line: 298, column: 9, scope: !11445)
!11995 = !DILocation(line: 298, column: 9, scope: !11220)
!11996 = !DILocation(line: 299, column: 9, scope: !11450)
!11997 = !DILocation(line: 299, column: 9, scope: !11448)
!11998 = !DILocation(line: 299, column: 9, scope: !11449)
!11999 = !DILocation(line: 300, column: 9, scope: !11450)
!12000 = !DILocation(line: 300, column: 9, scope: !11453)
!12001 = !DILocation(line: 300, column: 9, scope: !11454)
!12002 = !DILocation(line: 301, column: 5, scope: !11450)
!12003 = !DILocation(line: 303, column: 9, scope: !11458)
!12004 = !DILocation(line: 303, column: 9, scope: !11220)
!12005 = !DILocation(line: 304, column: 9, scope: !11463)
!12006 = !DILocation(line: 304, column: 9, scope: !11461)
!12007 = !DILocation(line: 304, column: 9, scope: !11462)
!12008 = !DILocation(line: 305, column: 9, scope: !11463)
!12009 = !DILocation(line: 305, column: 9, scope: !11466)
!12010 = !DILocation(line: 305, column: 9, scope: !11467)
!12011 = !DILocation(line: 306, column: 5, scope: !11463)
!12012 = !DILocation(line: 308, column: 5, scope: !11220)
!12013 = !DILocation(line: 308, column: 5, scope: !11471)
!12014 = !DILocation(line: 308, column: 5, scope: !11472)
!12015 = !DILocation(line: 310, column: 21, scope: !11220)
!12016 = !DILocation(line: 310, column: 33, scope: !11220)
!12017 = !DILocation(line: 310, column: 31, scope: !11220)
!12018 = !DILocation(line: 310, column: 41, scope: !11220)
!12019 = !DILocation(line: 310, column: 5, scope: !11220)
!12020 = !DILocation(line: 311, column: 1, scope: !11220)
!12021 = distinct !DISubprogram(name: "lwan_response_set_event_stream", scope: !1577, file: !1577, line: 382, type: !11643, scopeLine: 384, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1580, retainedNodes: !74)
!12022 = !DILocalVariable(name: "request", arg: 1, scope: !12021, file: !1577, line: 382, type: !1694)
!12023 = !DILocation(line: 382, column: 48, scope: !12021)
!12024 = !DILocalVariable(name: "status", arg: 2, scope: !12021, file: !1577, line: 383, type: !497)
!12025 = !DILocation(line: 383, column: 51, scope: !12021)
!12026 = !DILocalVariable(name: "buffer", scope: !12021, file: !1577, line: 385, type: !8448)
!12027 = !DILocation(line: 385, column: 10, scope: !12021)
!12028 = !DILocalVariable(name: "buffer_len", scope: !12021, file: !1577, line: 386, type: !6)
!12029 = !DILocation(line: 386, column: 12, scope: !12021)
!12030 = !DILocation(line: 388, column: 9, scope: !12031)
!12031 = distinct !DILexicalBlock(scope: !12021, file: !1577, line: 388, column: 9)
!12032 = !DILocation(line: 388, column: 18, scope: !12031)
!12033 = !DILocation(line: 388, column: 24, scope: !12031)
!12034 = !DILocation(line: 388, column: 9, scope: !12021)
!12035 = !DILocation(line: 389, column: 9, scope: !12031)
!12036 = !DILocation(line: 391, column: 5, scope: !12021)
!12037 = !DILocation(line: 391, column: 14, scope: !12021)
!12038 = !DILocation(line: 391, column: 23, scope: !12021)
!12039 = !DILocation(line: 391, column: 33, scope: !12021)
!12040 = !DILocation(line: 392, column: 5, scope: !12021)
!12041 = !DILocation(line: 392, column: 14, scope: !12021)
!12042 = !DILocation(line: 392, column: 20, scope: !12021)
!12043 = !DILocation(line: 393, column: 47, scope: !12021)
!12044 = !DILocation(line: 393, column: 56, scope: !12021)
!12045 = !DILocation(line: 394, column: 49, scope: !12021)
!12046 = !DILocation(line: 231, column: 46, scope: !11220, inlinedAt: !12047)
!12047 = distinct !DILocation(line: 393, column: 18, scope: !12021)
!12048 = !DILocation(line: 231, column: 74, scope: !11220, inlinedAt: !12047)
!12049 = !DILocation(line: 231, column: 87, scope: !11220, inlinedAt: !12047)
!12050 = !DILocation(line: 231, column: 105, scope: !11220, inlinedAt: !12047)
!12051 = !DILocation(line: 233, column: 11, scope: !11220, inlinedAt: !12047)
!12052 = !DILocation(line: 234, column: 11, scope: !11220, inlinedAt: !12047)
!12053 = !DILocation(line: 234, column: 27, scope: !11220, inlinedAt: !12047)
!12054 = !DILocation(line: 234, column: 37, scope: !11220, inlinedAt: !12047)
!12055 = !DILocation(line: 234, column: 35, scope: !11220, inlinedAt: !12047)
!12056 = !DILocation(line: 235, column: 10, scope: !11220, inlinedAt: !12047)
!12057 = !DILocation(line: 236, column: 10, scope: !11220, inlinedAt: !12047)
!12058 = !DILocation(line: 237, column: 10, scope: !11220, inlinedAt: !12047)
!12059 = !DILocation(line: 239, column: 17, scope: !11220, inlinedAt: !12047)
!12060 = !DILocation(line: 239, column: 15, scope: !11220, inlinedAt: !12047)
!12061 = !DILocation(line: 241, column: 9, scope: !11247, inlinedAt: !12047)
!12062 = !DILocation(line: 241, column: 18, scope: !11247, inlinedAt: !12047)
!12063 = !DILocation(line: 241, column: 24, scope: !11247, inlinedAt: !12047)
!12064 = !DILocation(line: 241, column: 9, scope: !11220, inlinedAt: !12047)
!12065 = !DILocation(line: 242, column: 9, scope: !11252, inlinedAt: !12047)
!12066 = !DILocation(line: 242, column: 9, scope: !11253, inlinedAt: !12047)
!12067 = !DILocation(line: 244, column: 9, scope: !11256, inlinedAt: !12047)
!12068 = !DILocation(line: 244, column: 9, scope: !11257, inlinedAt: !12047)
!12069 = !DILocation(line: 245, column: 5, scope: !11260, inlinedAt: !12047)
!12070 = !DILocation(line: 245, column: 5, scope: !11263, inlinedAt: !12047)
!12071 = !DILocation(line: 245, column: 5, scope: !11264, inlinedAt: !12047)
!12072 = !DILocation(line: 247, column: 9, scope: !11267, inlinedAt: !12047)
!12073 = !DILocation(line: 247, column: 18, scope: !11267, inlinedAt: !12047)
!12074 = !DILocation(line: 247, column: 24, scope: !11267, inlinedAt: !12047)
!12075 = !DILocation(line: 247, column: 9, scope: !11220, inlinedAt: !12047)
!12076 = !DILocation(line: 248, column: 9, scope: !11272, inlinedAt: !12047)
!12077 = !DILocation(line: 248, column: 9, scope: !11273, inlinedAt: !12047)
!12078 = !DILocation(line: 249, column: 5, scope: !11274, inlinedAt: !12047)
!12079 = !DILocation(line: 249, column: 16, scope: !11278, inlinedAt: !12047)
!12080 = !DILocation(line: 249, column: 25, scope: !11278, inlinedAt: !12047)
!12081 = !DILocation(line: 249, column: 31, scope: !11278, inlinedAt: !12047)
!12082 = !DILocation(line: 249, column: 16, scope: !11267, inlinedAt: !12047)
!12083 = !DILocation(line: 251, column: 5, scope: !11283, inlinedAt: !12047)
!12084 = !DILocation(line: 252, column: 9, scope: !11285, inlinedAt: !12047)
!12085 = !DILocation(line: 252, column: 9, scope: !11286, inlinedAt: !12047)
!12086 = !DILocation(line: 253, column: 13, scope: !11290, inlinedAt: !12047)
!12087 = !DILocation(line: 253, column: 22, scope: !11290, inlinedAt: !12047)
!12088 = !DILocation(line: 253, column: 31, scope: !11290, inlinedAt: !12047)
!12089 = !DILocation(line: 253, column: 38, scope: !11290, inlinedAt: !12047)
!12090 = !DILocation(line: 253, column: 13, scope: !11287, inlinedAt: !12047)
!12091 = !DILocation(line: 254, column: 13, scope: !11296, inlinedAt: !12047)
!12092 = !DILocation(line: 254, column: 13, scope: !11300, inlinedAt: !12047)
!12093 = !DILocation(line: 254, column: 13, scope: !11302, inlinedAt: !12047)
!12094 = !DILocation(line: 254, column: 13, scope: !11303, inlinedAt: !12047)
!12095 = !DILocation(line: 256, column: 13, scope: !11306, inlinedAt: !12047)
!12096 = !DILocation(line: 256, column: 13, scope: !11310, inlinedAt: !12047)
!12097 = !DILocation(line: 256, column: 13, scope: !11312, inlinedAt: !12047)
!12098 = !DILocation(line: 256, column: 13, scope: !11313, inlinedAt: !12047)
!12099 = !DILocation(line: 259, column: 5, scope: !11316, inlinedAt: !12047)
!12100 = !DILocation(line: 259, column: 5, scope: !11317, inlinedAt: !12047)
!12101 = !DILocation(line: 260, column: 5, scope: !11320, inlinedAt: !12047)
!12102 = !DILocation(line: 260, column: 5, scope: !11323, inlinedAt: !12047)
!12103 = !DILocation(line: 260, column: 5, scope: !11324, inlinedAt: !12047)
!12104 = !DILocation(line: 262, column: 9, scope: !11327, inlinedAt: !12047)
!12105 = !DILocation(line: 262, column: 18, scope: !11327, inlinedAt: !12047)
!12106 = !DILocation(line: 262, column: 24, scope: !11327, inlinedAt: !12047)
!12107 = !DILocation(line: 262, column: 30, scope: !11327, inlinedAt: !12047)
!12108 = !DILocation(line: 262, column: 9, scope: !11220, inlinedAt: !12047)
!12109 = !DILocation(line: 263, column: 9, scope: !11333, inlinedAt: !12047)
!12110 = !DILocation(line: 263, column: 9, scope: !11334, inlinedAt: !12047)
!12111 = !DILocation(line: 265, column: 9, scope: !11337, inlinedAt: !12047)
!12112 = !DILocation(line: 265, column: 9, scope: !11338, inlinedAt: !12047)
!12113 = !DILocation(line: 267, column: 10, scope: !11341, inlinedAt: !12047)
!12114 = !DILocation(line: 267, column: 17, scope: !11341, inlinedAt: !12047)
!12115 = !DILocation(line: 267, column: 36, scope: !11341, inlinedAt: !12047)
!12116 = !DILocation(line: 267, column: 39, scope: !11341, inlinedAt: !12047)
!12117 = !DILocation(line: 267, column: 48, scope: !11341, inlinedAt: !12047)
!12118 = !DILocation(line: 267, column: 57, scope: !11341, inlinedAt: !12047)
!12119 = !DILocation(line: 267, column: 9, scope: !11220, inlinedAt: !12047)
!12120 = !DILocation(line: 268, column: 27, scope: !11349, inlinedAt: !12047)
!12121 = !DILocation(line: 270, column: 23, scope: !11352, inlinedAt: !12047)
!12122 = !DILocation(line: 270, column: 32, scope: !11352, inlinedAt: !12047)
!12123 = !DILocation(line: 270, column: 41, scope: !11352, inlinedAt: !12047)
!12124 = !DILocation(line: 270, column: 21, scope: !11352, inlinedAt: !12047)
!12125 = !DILocation(line: 270, column: 14, scope: !11352, inlinedAt: !12047)
!12126 = !DILocation(line: 270, column: 50, scope: !11358, inlinedAt: !12047)
!12127 = !DILocation(line: 270, column: 58, scope: !11358, inlinedAt: !12047)
!12128 = !DILocation(line: 270, column: 9, scope: !11352, inlinedAt: !12047)
!12129 = !DILocation(line: 271, column: 17, scope: !11362, inlinedAt: !12047)
!12130 = !DILocation(line: 271, column: 17, scope: !11363, inlinedAt: !12047)
!12131 = !DILocation(line: 272, column: 17, scope: !11362, inlinedAt: !12047)
!12132 = !DILocation(line: 273, column: 17, scope: !11367, inlinedAt: !12047)
!12133 = !DILocation(line: 273, column: 17, scope: !11363, inlinedAt: !12047)
!12134 = !DILocation(line: 274, column: 33, scope: !11367, inlinedAt: !12047)
!12135 = !DILocation(line: 274, column: 17, scope: !11367, inlinedAt: !12047)
!12136 = !DILocation(line: 275, column: 17, scope: !11372, inlinedAt: !12047)
!12137 = !DILocation(line: 275, column: 17, scope: !11363, inlinedAt: !12047)
!12138 = !DILocation(line: 276, column: 36, scope: !11372, inlinedAt: !12047)
!12139 = !DILocation(line: 276, column: 17, scope: !11372, inlinedAt: !12047)
!12140 = !DILocation(line: 278, column: 13, scope: !11377, inlinedAt: !12047)
!12141 = !DILocation(line: 278, column: 13, scope: !11363, inlinedAt: !12047)
!12142 = !DILocation(line: 279, column: 13, scope: !11363, inlinedAt: !12047)
!12143 = !DILocation(line: 280, column: 13, scope: !11363, inlinedAt: !12047)
!12144 = !DILocation(line: 281, column: 13, scope: !11382, inlinedAt: !12047)
!12145 = !DILocation(line: 281, column: 13, scope: !11385, inlinedAt: !12047)
!12146 = !DILocation(line: 281, column: 13, scope: !11386, inlinedAt: !12047)
!12147 = !DILocation(line: 282, column: 13, scope: !11363, inlinedAt: !12047)
!12148 = !DILocation(line: 283, column: 13, scope: !11363, inlinedAt: !12047)
!12149 = !DILocation(line: 284, column: 13, scope: !11391, inlinedAt: !12047)
!12150 = !DILocation(line: 284, column: 13, scope: !11394, inlinedAt: !12047)
!12151 = !DILocation(line: 284, column: 13, scope: !11395, inlinedAt: !12047)
!12152 = !DILocation(line: 285, column: 9, scope: !11363, inlinedAt: !12047)
!12153 = !DILocation(line: 270, column: 69, scope: !11358, inlinedAt: !12047)
!12154 = !DILocation(line: 270, column: 9, scope: !11358, inlinedAt: !12047)
!12155 = distinct !{!12155, !12128, !12156, !3203}
!12156 = !DILocation(line: 285, column: 9, scope: !11352, inlinedAt: !12047)
!12157 = !DILocation(line: 286, column: 5, scope: !11349, inlinedAt: !12047)
!12158 = !DILocation(line: 286, column: 16, scope: !11404, inlinedAt: !12047)
!12159 = !DILocation(line: 286, column: 23, scope: !11404, inlinedAt: !12047)
!12160 = !DILocation(line: 286, column: 16, scope: !11341, inlinedAt: !12047)
!12161 = !DILocation(line: 287, column: 27, scope: !11408, inlinedAt: !12047)
!12162 = !DILocation(line: 289, column: 23, scope: !11411, inlinedAt: !12047)
!12163 = !DILocation(line: 289, column: 32, scope: !11411, inlinedAt: !12047)
!12164 = !DILocation(line: 289, column: 41, scope: !11411, inlinedAt: !12047)
!12165 = !DILocation(line: 289, column: 21, scope: !11411, inlinedAt: !12047)
!12166 = !DILocation(line: 289, column: 14, scope: !11411, inlinedAt: !12047)
!12167 = !DILocation(line: 289, column: 50, scope: !11417, inlinedAt: !12047)
!12168 = !DILocation(line: 289, column: 58, scope: !11417, inlinedAt: !12047)
!12169 = !DILocation(line: 289, column: 9, scope: !11411, inlinedAt: !12047)
!12170 = !DILocation(line: 290, column: 25, scope: !11421, inlinedAt: !12047)
!12171 = !DILocation(line: 290, column: 33, scope: !11421, inlinedAt: !12047)
!12172 = !DILocation(line: 290, column: 18, scope: !11421, inlinedAt: !12047)
!12173 = !DILocation(line: 290, column: 17, scope: !11422, inlinedAt: !12047)
!12174 = !DILocation(line: 291, column: 17, scope: !11427, inlinedAt: !12047)
!12175 = !DILocation(line: 291, column: 17, scope: !11428, inlinedAt: !12047)
!12176 = !DILocation(line: 292, column: 17, scope: !11432, inlinedAt: !12047)
!12177 = !DILocation(line: 292, column: 17, scope: !11435, inlinedAt: !12047)
!12178 = !DILocation(line: 292, column: 17, scope: !11436, inlinedAt: !12047)
!12179 = !DILocation(line: 293, column: 17, scope: !11429, inlinedAt: !12047)
!12180 = !DILocation(line: 289, column: 69, scope: !11417, inlinedAt: !12047)
!12181 = !DILocation(line: 289, column: 9, scope: !11417, inlinedAt: !12047)
!12182 = distinct !{!12182, !12169, !12183, !3203}
!12183 = !DILocation(line: 295, column: 9, scope: !11411, inlinedAt: !12047)
!12184 = !DILocation(line: 296, column: 5, scope: !11408, inlinedAt: !12047)
!12185 = !DILocation(line: 298, column: 9, scope: !11445, inlinedAt: !12047)
!12186 = !DILocation(line: 298, column: 9, scope: !11220, inlinedAt: !12047)
!12187 = !DILocation(line: 299, column: 9, scope: !11448, inlinedAt: !12047)
!12188 = !DILocation(line: 299, column: 9, scope: !11449, inlinedAt: !12047)
!12189 = !DILocation(line: 300, column: 9, scope: !11453, inlinedAt: !12047)
!12190 = !DILocation(line: 300, column: 9, scope: !11454, inlinedAt: !12047)
!12191 = !DILocation(line: 301, column: 5, scope: !11450, inlinedAt: !12047)
!12192 = !DILocation(line: 303, column: 9, scope: !11458, inlinedAt: !12047)
!12193 = !DILocation(line: 303, column: 9, scope: !11220, inlinedAt: !12047)
!12194 = !DILocation(line: 304, column: 9, scope: !11461, inlinedAt: !12047)
!12195 = !DILocation(line: 304, column: 9, scope: !11462, inlinedAt: !12047)
!12196 = !DILocation(line: 305, column: 9, scope: !11466, inlinedAt: !12047)
!12197 = !DILocation(line: 305, column: 9, scope: !11467, inlinedAt: !12047)
!12198 = !DILocation(line: 306, column: 5, scope: !11463, inlinedAt: !12047)
!12199 = !DILocation(line: 308, column: 5, scope: !11471, inlinedAt: !12047)
!12200 = !DILocation(line: 308, column: 5, scope: !11472, inlinedAt: !12047)
!12201 = !DILocation(line: 310, column: 21, scope: !11220, inlinedAt: !12047)
!12202 = !DILocation(line: 310, column: 33, scope: !11220, inlinedAt: !12047)
!12203 = !DILocation(line: 310, column: 31, scope: !11220, inlinedAt: !12047)
!12204 = !DILocation(line: 310, column: 41, scope: !11220, inlinedAt: !12047)
!12205 = !DILocation(line: 310, column: 5, scope: !11220, inlinedAt: !12047)
!12206 = !DILocation(line: 311, column: 1, scope: !11220, inlinedAt: !12047)
!12207 = !DILocation(line: 393, column: 16, scope: !12021)
!12208 = !DILocation(line: 395, column: 9, scope: !12209)
!12209 = distinct !DILexicalBlock(scope: !12021, file: !1577, line: 395, column: 9)
!12210 = !DILocation(line: 395, column: 9, scope: !12021)
!12211 = !DILocation(line: 396, column: 9, scope: !12209)
!12212 = !DILocation(line: 398, column: 5, scope: !12021)
!12213 = !DILocation(line: 398, column: 14, scope: !12021)
!12214 = !DILocation(line: 398, column: 20, scope: !12021)
!12215 = !DILocation(line: 399, column: 15, scope: !12021)
!12216 = !DILocation(line: 399, column: 24, scope: !12021)
!12217 = !DILocation(line: 399, column: 32, scope: !12021)
!12218 = !DILocation(line: 399, column: 5, scope: !12021)
!12219 = !DILocation(line: 401, column: 5, scope: !12021)
!12220 = !DILocation(line: 402, column: 1, scope: !12021)
!12221 = distinct !DISubprogram(name: "lwan_response_send_event", scope: !1577, file: !1577, line: 405, type: !12222, scopeLine: 406, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1580, retainedNodes: !74)
!12222 = !DISubroutineType(types: !12223)
!12223 = !{null, !1694, !480}
!12224 = !DILocalVariable(name: "request", arg: 1, scope: !12221, file: !1577, line: 405, type: !1694)
!12225 = !DILocation(line: 405, column: 42, scope: !12221)
!12226 = !DILocalVariable(name: "event", arg: 2, scope: !12221, file: !1577, line: 405, type: !480)
!12227 = !DILocation(line: 405, column: 63, scope: !12221)
!12228 = !DILocation(line: 407, column: 11, scope: !12229)
!12229 = distinct !DILexicalBlock(scope: !12221, file: !1577, line: 407, column: 9)
!12230 = !DILocation(line: 407, column: 20, scope: !12229)
!12231 = !DILocation(line: 407, column: 26, scope: !12229)
!12232 = !DILocation(line: 407, column: 9, scope: !12221)
!12233 = !DILocation(line: 408, column: 13, scope: !12234)
!12234 = distinct !DILexicalBlock(scope: !12235, file: !1577, line: 408, column: 13)
!12235 = distinct !DILexicalBlock(scope: !12229, file: !1577, line: 407, column: 52)
!12236 = !DILocation(line: 408, column: 13, scope: !12235)
!12237 = !DILocation(line: 409, column: 13, scope: !12234)
!12238 = !DILocation(line: 410, column: 5, scope: !12235)
!12239 = !DILocalVariable(name: "vec", scope: !12221, file: !1577, line: 412, type: !12240)
!12240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11500, size: 768, elements: !111)
!12241 = !DILocation(line: 412, column: 18, scope: !12221)
!12242 = !DILocalVariable(name: "last", scope: !12221, file: !1577, line: 413, type: !37)
!12243 = !DILocation(line: 413, column: 9, scope: !12221)
!12244 = !DILocation(line: 415, column: 9, scope: !12245)
!12245 = distinct !DILexicalBlock(scope: !12221, file: !1577, line: 415, column: 9)
!12246 = !DILocation(line: 415, column: 9, scope: !12221)
!12247 = !DILocation(line: 416, column: 13, scope: !12248)
!12248 = distinct !DILexicalBlock(scope: !12245, file: !1577, line: 415, column: 16)
!12249 = !DILocation(line: 416, column: 9, scope: !12248)
!12250 = !DILocation(line: 416, column: 19, scope: !12248)
!12251 = !DILocation(line: 416, column: 28, scope: !12248)
!12252 = !DILocation(line: 417, column: 13, scope: !12248)
!12253 = !DILocation(line: 417, column: 9, scope: !12248)
!12254 = !DILocation(line: 417, column: 19, scope: !12248)
!12255 = !DILocation(line: 417, column: 27, scope: !12248)
!12256 = !DILocation(line: 418, column: 13, scope: !12248)
!12257 = !DILocation(line: 420, column: 38, scope: !12248)
!12258 = !DILocation(line: 420, column: 13, scope: !12248)
!12259 = !DILocation(line: 420, column: 9, scope: !12248)
!12260 = !DILocation(line: 420, column: 19, scope: !12248)
!12261 = !DILocation(line: 420, column: 28, scope: !12248)
!12262 = !DILocation(line: 421, column: 36, scope: !12248)
!12263 = !DILocation(line: 421, column: 29, scope: !12248)
!12264 = !DILocation(line: 421, column: 13, scope: !12248)
!12265 = !DILocation(line: 421, column: 9, scope: !12248)
!12266 = !DILocation(line: 421, column: 19, scope: !12248)
!12267 = !DILocation(line: 421, column: 27, scope: !12248)
!12268 = !DILocation(line: 422, column: 13, scope: !12248)
!12269 = !DILocation(line: 424, column: 13, scope: !12248)
!12270 = !DILocation(line: 424, column: 9, scope: !12248)
!12271 = !DILocation(line: 424, column: 19, scope: !12248)
!12272 = !DILocation(line: 424, column: 28, scope: !12248)
!12273 = !DILocation(line: 425, column: 13, scope: !12248)
!12274 = !DILocation(line: 425, column: 9, scope: !12248)
!12275 = !DILocation(line: 425, column: 19, scope: !12248)
!12276 = !DILocation(line: 425, column: 27, scope: !12248)
!12277 = !DILocation(line: 426, column: 13, scope: !12248)
!12278 = !DILocation(line: 427, column: 5, scope: !12248)
!12279 = !DILocalVariable(name: "buffer_len", scope: !12221, file: !1577, line: 429, type: !6)
!12280 = !DILocation(line: 429, column: 12, scope: !12221)
!12281 = !DILocation(line: 429, column: 25, scope: !12221)
!12282 = !DILocation(line: 430, column: 9, scope: !12283)
!12283 = distinct !DILexicalBlock(scope: !12221, file: !1577, line: 430, column: 9)
!12284 = !DILocation(line: 430, column: 9, scope: !12221)
!12285 = !DILocation(line: 431, column: 13, scope: !12286)
!12286 = distinct !DILexicalBlock(scope: !12283, file: !1577, line: 430, column: 21)
!12287 = !DILocation(line: 431, column: 9, scope: !12286)
!12288 = !DILocation(line: 431, column: 19, scope: !12286)
!12289 = !DILocation(line: 431, column: 28, scope: !12286)
!12290 = !DILocation(line: 432, column: 13, scope: !12286)
!12291 = !DILocation(line: 432, column: 9, scope: !12286)
!12292 = !DILocation(line: 432, column: 19, scope: !12286)
!12293 = !DILocation(line: 432, column: 27, scope: !12286)
!12294 = !DILocation(line: 433, column: 13, scope: !12286)
!12295 = !DILocation(line: 435, column: 30, scope: !12286)
!12296 = !DILocation(line: 435, column: 13, scope: !12286)
!12297 = !DILocation(line: 435, column: 9, scope: !12286)
!12298 = !DILocation(line: 435, column: 19, scope: !12286)
!12299 = !DILocation(line: 435, column: 28, scope: !12286)
!12300 = !DILocation(line: 436, column: 29, scope: !12286)
!12301 = !DILocation(line: 436, column: 13, scope: !12286)
!12302 = !DILocation(line: 436, column: 9, scope: !12286)
!12303 = !DILocation(line: 436, column: 19, scope: !12286)
!12304 = !DILocation(line: 436, column: 27, scope: !12286)
!12305 = !DILocation(line: 437, column: 13, scope: !12286)
!12306 = !DILocation(line: 439, column: 5, scope: !12286)
!12307 = !DILocation(line: 441, column: 9, scope: !12221)
!12308 = !DILocation(line: 441, column: 5, scope: !12221)
!12309 = !DILocation(line: 441, column: 15, scope: !12221)
!12310 = !DILocation(line: 441, column: 24, scope: !12221)
!12311 = !DILocation(line: 442, column: 9, scope: !12221)
!12312 = !DILocation(line: 442, column: 5, scope: !12221)
!12313 = !DILocation(line: 442, column: 15, scope: !12221)
!12314 = !DILocation(line: 442, column: 23, scope: !12221)
!12315 = !DILocation(line: 443, column: 9, scope: !12221)
!12316 = !DILocation(line: 445, column: 17, scope: !12221)
!12317 = !DILocation(line: 445, column: 26, scope: !12221)
!12318 = !DILocation(line: 445, column: 31, scope: !12221)
!12319 = !DILocation(line: 445, column: 5, scope: !12221)
!12320 = !DILocation(line: 447, column: 9, scope: !12321)
!12321 = distinct !DILexicalBlock(scope: !12221, file: !1577, line: 447, column: 9)
!12322 = !DILocation(line: 447, column: 9, scope: !12221)
!12323 = !DILocation(line: 448, column: 20, scope: !12324)
!12324 = distinct !DILexicalBlock(scope: !12321, file: !1577, line: 447, column: 67)
!12325 = !DILocation(line: 448, column: 29, scope: !12324)
!12326 = !DILocation(line: 448, column: 35, scope: !12324)
!12327 = !DILocation(line: 448, column: 9, scope: !12324)
!12328 = !DILocation(line: 449, column: 9, scope: !12324)
!12329 = !DILocation(line: 452, column: 16, scope: !12221)
!12330 = !DILocation(line: 452, column: 25, scope: !12221)
!12331 = !DILocation(line: 452, column: 31, scope: !12221)
!12332 = !DILocation(line: 452, column: 5, scope: !12221)
!12333 = !DILocation(line: 453, column: 1, scope: !12221)
!12334 = !DILocation(line: 1023, column: 5, scope: !1881)
!12335 = distinct !DISubprogram(name: "serve_files_init", scope: !1882, file: !1882, line: 637, type: !1133, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2037, retainedNodes: !74)
!12336 = !DILocalVariable(name: "args", arg: 1, scope: !12335, file: !1882, line: 637, type: !5)
!12337 = !DILocation(line: 637, column: 24, scope: !12335)
!12338 = !DILocalVariable(name: "settings", scope: !12335, file: !1882, line: 639, type: !12339)
!12339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12340, size: 64)
!12340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_serve_files_settings_t", file: !12341, line: 28, size: 192, elements: !12342)
!12341 = !DIFile(filename: "common/lwan-serve-files.h", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "605079e730f5b74778523d0897dc40c2")
!12342 = !{!12343, !12344, !12345}
!12343 = !DIDerivedType(tag: DW_TAG_member, name: "root_path", scope: !12340, file: !12341, line: 29, baseType: !480, size: 64)
!12344 = !DIDerivedType(tag: DW_TAG_member, name: "index_html", scope: !12340, file: !12341, line: 30, baseType: !480, size: 64, offset: 64)
!12345 = !DIDerivedType(tag: DW_TAG_member, name: "serve_precompressed_files", scope: !12340, file: !12341, line: 31, baseType: !341, size: 8, offset: 128)
!12346 = !DILocation(line: 639, column: 41, scope: !12335)
!12347 = !DILocation(line: 639, column: 52, scope: !12335)
!12348 = !DILocalVariable(name: "canonical_root", scope: !12335, file: !1882, line: 640, type: !61)
!12349 = !DILocation(line: 640, column: 11, scope: !12335)
!12350 = !DILocalVariable(name: "root_fd", scope: !12335, file: !1882, line: 641, type: !37)
!12351 = !DILocation(line: 641, column: 9, scope: !12335)
!12352 = !DILocalVariable(name: "priv", scope: !12335, file: !1882, line: 642, type: !2106)
!12353 = !DILocation(line: 642, column: 25, scope: !12335)
!12354 = !DILocalVariable(name: "open_mode", scope: !12335, file: !1882, line: 643, type: !37)
!12355 = !DILocation(line: 643, column: 9, scope: !12335)
!12356 = !DILocation(line: 645, column: 10, scope: !12357)
!12357 = distinct !DILexicalBlock(scope: !12335, file: !1882, line: 645, column: 9)
!12358 = !DILocation(line: 645, column: 20, scope: !12357)
!12359 = !DILocation(line: 645, column: 9, scope: !12335)
!12360 = !DILocation(line: 646, column: 9, scope: !12361)
!12361 = distinct !DILexicalBlock(scope: !12357, file: !1882, line: 645, column: 31)
!12362 = !DILocation(line: 647, column: 9, scope: !12361)
!12363 = !DILocation(line: 650, column: 31, scope: !12335)
!12364 = !DILocation(line: 650, column: 41, scope: !12335)
!12365 = !DILocation(line: 650, column: 22, scope: !12335)
!12366 = !DILocation(line: 650, column: 20, scope: !12335)
!12367 = !DILocation(line: 651, column: 10, scope: !12368)
!12368 = distinct !DILexicalBlock(scope: !12335, file: !1882, line: 651, column: 9)
!12369 = !DILocation(line: 651, column: 9, scope: !12335)
!12370 = !DILocation(line: 652, column: 9, scope: !12371)
!12371 = distinct !DILexicalBlock(scope: !12368, file: !1882, line: 651, column: 26)
!12372 = !DILocation(line: 654, column: 9, scope: !12371)
!12373 = !DILocation(line: 657, column: 34, scope: !12335)
!12374 = !DILocation(line: 657, column: 15, scope: !12335)
!12375 = !DILocation(line: 657, column: 13, scope: !12335)
!12376 = !DILocation(line: 658, column: 9, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12335, file: !1882, line: 658, column: 9)
!12378 = !DILocation(line: 658, column: 17, scope: !12377)
!12379 = !DILocation(line: 658, column: 9, scope: !12335)
!12380 = !DILocation(line: 659, column: 9, scope: !12381)
!12381 = distinct !DILexicalBlock(scope: !12377, file: !1882, line: 658, column: 22)
!12382 = !DILocation(line: 661, column: 9, scope: !12381)
!12383 = !DILocation(line: 664, column: 12, scope: !12335)
!12384 = !DILocation(line: 664, column: 10, scope: !12335)
!12385 = !DILocation(line: 665, column: 10, scope: !12386)
!12386 = distinct !DILexicalBlock(scope: !12335, file: !1882, line: 665, column: 9)
!12387 = !DILocation(line: 665, column: 9, scope: !12335)
!12388 = !DILocation(line: 666, column: 9, scope: !12389)
!12389 = distinct !DILexicalBlock(scope: !12386, file: !1882, line: 665, column: 16)
!12390 = !DILocation(line: 667, column: 9, scope: !12389)
!12391 = !DILocation(line: 671, column: 17, scope: !12335)
!12392 = !DILocation(line: 670, column: 19, scope: !12335)
!12393 = !DILocation(line: 670, column: 5, scope: !12335)
!12394 = !DILocation(line: 670, column: 11, scope: !12335)
!12395 = !DILocation(line: 670, column: 17, scope: !12335)
!12396 = !DILocation(line: 672, column: 10, scope: !12397)
!12397 = distinct !DILexicalBlock(scope: !12335, file: !1882, line: 672, column: 9)
!12398 = !DILocation(line: 672, column: 16, scope: !12397)
!12399 = !DILocation(line: 672, column: 9, scope: !12335)
!12400 = !DILocation(line: 673, column: 9, scope: !12401)
!12401 = distinct !DILexicalBlock(scope: !12397, file: !1882, line: 672, column: 23)
!12402 = !DILocation(line: 674, column: 9, scope: !12401)
!12403 = !DILocation(line: 678, column: 17, scope: !12335)
!12404 = !DILocation(line: 677, column: 32, scope: !12335)
!12405 = !DILocation(line: 677, column: 5, scope: !12335)
!12406 = !DILocation(line: 677, column: 11, scope: !12335)
!12407 = !DILocation(line: 677, column: 30, scope: !12335)
!12408 = !DILocation(line: 679, column: 10, scope: !12409)
!12409 = distinct !DILexicalBlock(scope: !12335, file: !1882, line: 679, column: 9)
!12410 = !DILocation(line: 679, column: 16, scope: !12409)
!12411 = !DILocation(line: 679, column: 9, scope: !12335)
!12412 = !DILocation(line: 680, column: 9, scope: !12413)
!12413 = distinct !DILexicalBlock(scope: !12409, file: !1882, line: 679, column: 36)
!12414 = !DILocation(line: 681, column: 9, scope: !12413)
!12415 = !DILocation(line: 684, column: 23, scope: !12335)
!12416 = !DILocation(line: 684, column: 5, scope: !12335)
!12417 = !DILocation(line: 684, column: 11, scope: !12335)
!12418 = !DILocation(line: 684, column: 16, scope: !12335)
!12419 = !DILocation(line: 684, column: 21, scope: !12335)
!12420 = !DILocation(line: 685, column: 34, scope: !12335)
!12421 = !DILocation(line: 685, column: 27, scope: !12335)
!12422 = !DILocation(line: 685, column: 5, scope: !12335)
!12423 = !DILocation(line: 685, column: 11, scope: !12335)
!12424 = !DILocation(line: 685, column: 16, scope: !12335)
!12425 = !DILocation(line: 685, column: 25, scope: !12335)
!12426 = !DILocation(line: 686, column: 21, scope: !12335)
!12427 = !DILocation(line: 686, column: 5, scope: !12335)
!12428 = !DILocation(line: 686, column: 11, scope: !12335)
!12429 = !DILocation(line: 686, column: 16, scope: !12335)
!12430 = !DILocation(line: 686, column: 19, scope: !12335)
!12431 = !DILocation(line: 687, column: 23, scope: !12335)
!12432 = !DILocation(line: 687, column: 5, scope: !12335)
!12433 = !DILocation(line: 687, column: 11, scope: !12335)
!12434 = !DILocation(line: 687, column: 21, scope: !12335)
!12435 = !DILocation(line: 688, column: 24, scope: !12335)
!12436 = !DILocation(line: 688, column: 34, scope: !12335)
!12437 = !DILocation(line: 688, column: 47, scope: !12335)
!12438 = !DILocation(line: 688, column: 57, scope: !12335)
!12439 = !DILocation(line: 688, column: 5, scope: !12335)
!12440 = !DILocation(line: 688, column: 11, scope: !12335)
!12441 = !DILocation(line: 688, column: 22, scope: !12335)
!12442 = !DILocation(line: 689, column: 39, scope: !12335)
!12443 = !DILocation(line: 689, column: 49, scope: !12335)
!12444 = !DILocation(line: 689, column: 5, scope: !12335)
!12445 = !DILocation(line: 689, column: 11, scope: !12335)
!12446 = !DILocation(line: 689, column: 37, scope: !12335)
!12447 = !DILocation(line: 691, column: 12, scope: !12335)
!12448 = !DILocation(line: 691, column: 5, scope: !12335)
!12449 = !DILabel(scope: !12335, name: "out_tpl_compile", file: !1882, line: 693)
!12450 = !DILocation(line: 693, column: 1, scope: !12335)
!12451 = !DILocation(line: 694, column: 19, scope: !12335)
!12452 = !DILocation(line: 694, column: 25, scope: !12335)
!12453 = !DILocation(line: 694, column: 5, scope: !12335)
!12454 = !DILabel(scope: !12335, name: "out_cache_create", file: !1882, line: 695)
!12455 = !DILocation(line: 695, column: 1, scope: !12335)
!12456 = !DILocation(line: 696, column: 10, scope: !12335)
!12457 = !DILocation(line: 696, column: 5, scope: !12335)
!12458 = !DILabel(scope: !12335, name: "out_malloc", file: !1882, line: 697)
!12459 = !DILocation(line: 697, column: 1, scope: !12335)
!12460 = !DILocation(line: 698, column: 11, scope: !12335)
!12461 = !DILocation(line: 698, column: 5, scope: !12335)
!12462 = !DILabel(scope: !12335, name: "out_open", file: !1882, line: 699)
!12463 = !DILocation(line: 699, column: 1, scope: !12335)
!12464 = !DILocation(line: 700, column: 10, scope: !12335)
!12465 = !DILocation(line: 700, column: 5, scope: !12335)
!12466 = !DILabel(scope: !12335, name: "out_realpath", file: !1882, line: 701)
!12467 = !DILocation(line: 701, column: 1, scope: !12335)
!12468 = !DILocation(line: 702, column: 5, scope: !12335)
!12469 = !DILocation(line: 703, column: 1, scope: !12335)
!12470 = distinct !DISubprogram(name: "serve_files_init_from_hash", scope: !1882, file: !1882, line: 706, type: !1137, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2037, retainedNodes: !74)
!12471 = !DILocalVariable(name: "hash", arg: 1, scope: !12470, file: !1882, line: 706, type: !1139)
!12472 = !DILocation(line: 706, column: 47, scope: !12470)
!12473 = !DILocalVariable(name: "settings", scope: !12470, file: !1882, line: 708, type: !12340)
!12474 = !DILocation(line: 708, column: 40, scope: !12470)
!12475 = !DILocation(line: 708, column: 51, scope: !12470)
!12476 = !DILocation(line: 709, column: 32, scope: !12470)
!12477 = !DILocation(line: 709, column: 22, scope: !12470)
!12478 = !DILocation(line: 710, column: 33, scope: !12470)
!12479 = !DILocation(line: 710, column: 23, scope: !12470)
!12480 = !DILocation(line: 712, column: 34, scope: !12470)
!12481 = !DILocation(line: 712, column: 24, scope: !12470)
!12482 = !DILocation(line: 712, column: 13, scope: !12470)
!12483 = !DILocation(line: 714, column: 12, scope: !12470)
!12484 = !DILocation(line: 714, column: 5, scope: !12470)
!12485 = distinct !DISubprogram(name: "serve_files_shutdown", scope: !1882, file: !1882, line: 718, type: !404, scopeLine: 719, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2037, retainedNodes: !74)
!12486 = !DILocalVariable(name: "data", arg: 1, scope: !12485, file: !1882, line: 718, type: !5)
!12487 = !DILocation(line: 718, column: 28, scope: !12485)
!12488 = !DILocalVariable(name: "priv", scope: !12485, file: !1882, line: 720, type: !2106)
!12489 = !DILocation(line: 720, column: 25, scope: !12485)
!12490 = !DILocation(line: 720, column: 32, scope: !12485)
!12491 = !DILocation(line: 722, column: 10, scope: !12492)
!12492 = distinct !DILexicalBlock(scope: !12485, file: !1882, line: 722, column: 9)
!12493 = !DILocation(line: 722, column: 9, scope: !12485)
!12494 = !DILocation(line: 723, column: 9, scope: !12495)
!12495 = distinct !DILexicalBlock(scope: !12492, file: !1882, line: 722, column: 16)
!12496 = !DILocation(line: 724, column: 9, scope: !12495)
!12497 = !DILocation(line: 727, column: 19, scope: !12485)
!12498 = !DILocation(line: 727, column: 25, scope: !12485)
!12499 = !DILocation(line: 727, column: 5, scope: !12485)
!12500 = !DILocation(line: 728, column: 19, scope: !12485)
!12501 = !DILocation(line: 728, column: 25, scope: !12485)
!12502 = !DILocation(line: 728, column: 5, scope: !12485)
!12503 = !DILocation(line: 729, column: 11, scope: !12485)
!12504 = !DILocation(line: 729, column: 17, scope: !12485)
!12505 = !DILocation(line: 729, column: 22, scope: !12485)
!12506 = !DILocation(line: 729, column: 5, scope: !12485)
!12507 = !DILocation(line: 730, column: 10, scope: !12485)
!12508 = !DILocation(line: 730, column: 16, scope: !12485)
!12509 = !DILocation(line: 730, column: 21, scope: !12485)
!12510 = !DILocation(line: 730, column: 5, scope: !12485)
!12511 = !DILocation(line: 731, column: 10, scope: !12485)
!12512 = !DILocation(line: 731, column: 5, scope: !12485)
!12513 = !DILocation(line: 732, column: 1, scope: !12485)
!12514 = distinct !DISubprogram(name: "serve_files_handle_cb", scope: !1882, file: !1882, line: 981, type: !1896, scopeLine: 982, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2037, retainedNodes: !74)
!12515 = !DILocalVariable(name: "request", arg: 1, scope: !12514, file: !1882, line: 981, type: !1898)
!12516 = !DILocation(line: 981, column: 39, scope: !12514)
!12517 = !DILocalVariable(name: "response", arg: 2, scope: !12514, file: !1882, line: 981, type: !2035)
!12518 = !DILocation(line: 981, column: 65, scope: !12514)
!12519 = !DILocalVariable(name: "data", arg: 3, scope: !12514, file: !1882, line: 981, type: !5)
!12520 = !DILocation(line: 981, column: 81, scope: !12514)
!12521 = !DILocalVariable(name: "return_status", scope: !12514, file: !1882, line: 983, type: !497)
!12522 = !DILocation(line: 983, column: 24, scope: !12514)
!12523 = !DILocalVariable(name: "priv", scope: !12514, file: !1882, line: 984, type: !2106)
!12524 = !DILocation(line: 984, column: 25, scope: !12514)
!12525 = !DILocation(line: 984, column: 32, scope: !12514)
!12526 = !DILocalVariable(name: "ce", scope: !12514, file: !1882, line: 985, type: !2041)
!12527 = !DILocation(line: 985, column: 27, scope: !12514)
!12528 = !DILocation(line: 987, column: 9, scope: !12529)
!12529 = distinct !DILexicalBlock(scope: !12514, file: !1882, line: 987, column: 9)
!12530 = !DILocation(line: 987, column: 9, scope: !12514)
!12531 = !DILocation(line: 988, column: 23, scope: !12532)
!12532 = distinct !DILexicalBlock(scope: !12529, file: !1882, line: 987, column: 26)
!12533 = !DILocation(line: 989, column: 9, scope: !12532)
!12534 = !DILocation(line: 992, column: 39, scope: !12514)
!12535 = !DILocation(line: 992, column: 45, scope: !12514)
!12536 = !DILocation(line: 992, column: 52, scope: !12514)
!12537 = !DILocation(line: 992, column: 61, scope: !12514)
!12538 = !DILocation(line: 992, column: 67, scope: !12514)
!12539 = !DILocation(line: 993, column: 17, scope: !12514)
!12540 = !DILocation(line: 993, column: 26, scope: !12514)
!12541 = !DILocation(line: 993, column: 30, scope: !12514)
!12542 = !DILocation(line: 992, column: 10, scope: !12514)
!12543 = !DILocation(line: 992, column: 8, scope: !12514)
!12544 = !DILocation(line: 994, column: 9, scope: !12545)
!12545 = distinct !DILexicalBlock(scope: !12514, file: !1882, line: 994, column: 9)
!12546 = !DILocation(line: 994, column: 9, scope: !12514)
!12547 = !DILocalVariable(name: "fce", scope: !12548, file: !1882, line: 995, type: !2084)
!12548 = distinct !DILexicalBlock(scope: !12545, file: !1882, line: 994, column: 21)
!12549 = !DILocation(line: 995, column: 29, scope: !12548)
!12550 = !DILocation(line: 995, column: 57, scope: !12548)
!12551 = !DILocation(line: 996, column: 31, scope: !12548)
!12552 = !DILocation(line: 996, column: 36, scope: !12548)
!12553 = !DILocation(line: 996, column: 9, scope: !12548)
!12554 = !DILocation(line: 996, column: 19, scope: !12548)
!12555 = !DILocation(line: 996, column: 29, scope: !12548)
!12556 = !DILocation(line: 997, column: 37, scope: !12548)
!12557 = !DILocation(line: 997, column: 42, scope: !12548)
!12558 = !DILocation(line: 997, column: 49, scope: !12548)
!12559 = !DILocation(line: 997, column: 9, scope: !12548)
!12560 = !DILocation(line: 997, column: 19, scope: !12548)
!12561 = !DILocation(line: 997, column: 26, scope: !12548)
!12562 = !DILocation(line: 997, column: 35, scope: !12548)
!12563 = !DILocation(line: 998, column: 33, scope: !12548)
!12564 = !DILocation(line: 998, column: 9, scope: !12548)
!12565 = !DILocation(line: 998, column: 19, scope: !12548)
!12566 = !DILocation(line: 998, column: 26, scope: !12548)
!12567 = !DILocation(line: 998, column: 31, scope: !12548)
!12568 = !DILocation(line: 999, column: 33, scope: !12548)
!12569 = !DILocation(line: 999, column: 9, scope: !12548)
!12570 = !DILocation(line: 999, column: 19, scope: !12548)
!12571 = !DILocation(line: 999, column: 26, scope: !12548)
!12572 = !DILocation(line: 999, column: 31, scope: !12548)
!12573 = !DILocation(line: 1001, column: 9, scope: !12548)
!12574 = !DILabel(scope: !12514, name: "fail", file: !1882, line: 1004)
!12575 = !DILocation(line: 1004, column: 1, scope: !12514)
!12576 = !DILocation(line: 1005, column: 5, scope: !12514)
!12577 = !DILocation(line: 1005, column: 15, scope: !12514)
!12578 = !DILocation(line: 1005, column: 22, scope: !12514)
!12579 = !DILocation(line: 1005, column: 31, scope: !12514)
!12580 = !DILocation(line: 1006, column: 12, scope: !12514)
!12581 = !DILocation(line: 1006, column: 5, scope: !12514)
!12582 = !DILocation(line: 1007, column: 1, scope: !12514)
!12583 = distinct !DISubprogram(name: "try_open_directory", scope: !1882, file: !1882, line: 605, type: !12584, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2037, retainedNodes: !74)
!12584 = !DISubroutineType(types: !12585)
!12585 = !{!37, !480, !2691}
!12586 = !DILocalVariable(name: "path", arg: 1, scope: !12583, file: !1882, line: 605, type: !480)
!12587 = !DILocation(line: 605, column: 32, scope: !12583)
!12588 = !DILocalVariable(name: "open_mode", arg: 2, scope: !12583, file: !1882, line: 605, type: !2691)
!12589 = !DILocation(line: 605, column: 43, scope: !12583)
!12590 = !DILocalVariable(name: "fd", scope: !12583, file: !1882, line: 607, type: !37)
!12591 = !DILocation(line: 607, column: 9, scope: !12583)
!12592 = !DILocation(line: 609, column: 6, scope: !12583)
!12593 = !DILocation(line: 609, column: 16, scope: !12583)
!12594 = !DILocation(line: 611, column: 15, scope: !12583)
!12595 = !DILocation(line: 611, column: 22, scope: !12583)
!12596 = !DILocation(line: 611, column: 21, scope: !12583)
!12597 = !DILocation(line: 611, column: 32, scope: !12583)
!12598 = !DILocation(line: 611, column: 10, scope: !12583)
!12599 = !DILocation(line: 611, column: 8, scope: !12583)
!12600 = !DILocation(line: 612, column: 9, scope: !12601)
!12601 = distinct !DILexicalBlock(scope: !12583, file: !1882, line: 612, column: 9)
!12602 = !DILocation(line: 612, column: 12, scope: !12601)
!12603 = !DILocation(line: 612, column: 9, scope: !12583)
!12604 = !DILocation(line: 614, column: 10, scope: !12605)
!12605 = distinct !DILexicalBlock(scope: !12601, file: !1882, line: 612, column: 17)
!12606 = !DILocation(line: 614, column: 20, scope: !12605)
!12607 = !DILocation(line: 616, column: 19, scope: !12605)
!12608 = !DILocation(line: 616, column: 26, scope: !12605)
!12609 = !DILocation(line: 616, column: 25, scope: !12605)
!12610 = !DILocation(line: 616, column: 36, scope: !12605)
!12611 = !DILocation(line: 616, column: 14, scope: !12605)
!12612 = !DILocation(line: 616, column: 12, scope: !12605)
!12613 = !DILocation(line: 617, column: 13, scope: !12614)
!12614 = distinct !DILexicalBlock(scope: !12605, file: !1882, line: 617, column: 13)
!12615 = !DILocation(line: 617, column: 16, scope: !12614)
!12616 = !DILocation(line: 617, column: 13, scope: !12605)
!12617 = !DILocation(line: 619, column: 14, scope: !12618)
!12618 = distinct !DILexicalBlock(scope: !12614, file: !1882, line: 617, column: 21)
!12619 = !DILocation(line: 619, column: 24, scope: !12618)
!12620 = !DILocation(line: 621, column: 23, scope: !12618)
!12621 = !DILocation(line: 621, column: 30, scope: !12618)
!12622 = !DILocation(line: 621, column: 29, scope: !12618)
!12623 = !DILocation(line: 621, column: 40, scope: !12618)
!12624 = !DILocation(line: 621, column: 18, scope: !12618)
!12625 = !DILocation(line: 621, column: 16, scope: !12618)
!12626 = !DILocation(line: 622, column: 9, scope: !12618)
!12627 = !DILocation(line: 623, column: 5, scope: !12605)
!12628 = !DILocation(line: 625, column: 9, scope: !12629)
!12629 = distinct !DILexicalBlock(scope: !12583, file: !1882, line: 625, column: 9)
!12630 = !DILocation(line: 625, column: 12, scope: !12629)
!12631 = !DILocation(line: 625, column: 9, scope: !12583)
!12632 = !DILocation(line: 626, column: 9, scope: !12629)
!12633 = !DILocation(line: 632, column: 11, scope: !12583)
!12634 = !DILocation(line: 632, column: 5, scope: !12583)
!12635 = !DILocation(line: 633, column: 17, scope: !12583)
!12636 = !DILocation(line: 633, column: 24, scope: !12583)
!12637 = !DILocation(line: 633, column: 23, scope: !12583)
!12638 = !DILocation(line: 633, column: 34, scope: !12583)
!12639 = !DILocation(line: 633, column: 48, scope: !12583)
!12640 = !DILocation(line: 633, column: 12, scope: !12583)
!12641 = !DILocation(line: 633, column: 5, scope: !12583)
!12642 = !DILocation(line: 634, column: 1, scope: !12583)
!12643 = distinct !DISubprogram(name: "create_cache_entry", scope: !1882, file: !1882, line: 532, type: !12644, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2037, retainedNodes: !74)
!12644 = !DISubroutineType(types: !12645)
!12645 = !{!2041, !480, !5}
!12646 = !DILocalVariable(name: "key", arg: 1, scope: !12643, file: !1882, line: 532, type: !480)
!12647 = !DILocation(line: 532, column: 32, scope: !12643)
!12648 = !DILocalVariable(name: "context", arg: 2, scope: !12643, file: !1882, line: 532, type: !5)
!12649 = !DILocation(line: 532, column: 43, scope: !12643)
!12650 = !DILocalVariable(name: "priv", scope: !12643, file: !1882, line: 534, type: !2106)
!12651 = !DILocation(line: 534, column: 25, scope: !12643)
!12652 = !DILocation(line: 534, column: 32, scope: !12643)
!12653 = !DILocalVariable(name: "fce", scope: !12643, file: !1882, line: 535, type: !2084)
!12654 = !DILocation(line: 535, column: 25, scope: !12643)
!12655 = !DILocalVariable(name: "st", scope: !12643, file: !1882, line: 536, type: !2122)
!12656 = !DILocation(line: 536, column: 17, scope: !12643)
!12657 = !DILocalVariable(name: "funcs", scope: !12643, file: !1882, line: 537, type: !2096)
!12658 = !DILocation(line: 537, column: 26, scope: !12643)
!12659 = !DILocalVariable(name: "full_path", scope: !12643, file: !1882, line: 538, type: !8448)
!12660 = !DILocation(line: 538, column: 10, scope: !12643)
!12661 = !DILocation(line: 540, column: 9, scope: !12662)
!12662 = distinct !DILexicalBlock(scope: !12643, file: !1882, line: 540, column: 9)
!12663 = !DILocation(line: 540, column: 9, scope: !12643)
!12664 = !DILocation(line: 542, column: 9, scope: !12662)
!12665 = !DILocation(line: 544, column: 9, scope: !12666)
!12666 = distinct !DILexicalBlock(scope: !12643, file: !1882, line: 544, column: 9)
!12667 = !DILocation(line: 544, column: 9, scope: !12643)
!12668 = !DILocation(line: 545, column: 9, scope: !12666)
!12669 = !DILocation(line: 547, column: 23, scope: !12643)
!12670 = !DILocation(line: 547, column: 29, scope: !12643)
!12671 = !DILocation(line: 547, column: 34, scope: !12643)
!12672 = !DILocation(line: 547, column: 13, scope: !12643)
!12673 = !DILocation(line: 547, column: 11, scope: !12643)
!12674 = !DILocation(line: 548, column: 9, scope: !12675)
!12675 = distinct !DILexicalBlock(scope: !12643, file: !1882, line: 548, column: 9)
!12676 = !DILocation(line: 548, column: 9, scope: !12643)
!12677 = !DILocation(line: 549, column: 9, scope: !12675)
!12678 = !DILocation(line: 551, column: 41, scope: !12643)
!12679 = !DILocation(line: 551, column: 47, scope: !12643)
!12680 = !DILocation(line: 551, column: 63, scope: !12643)
!12681 = !DILocation(line: 551, column: 11, scope: !12643)
!12682 = !DILocation(line: 551, column: 9, scope: !12643)
!12683 = !DILocation(line: 552, column: 9, scope: !12684)
!12684 = distinct !DILexicalBlock(scope: !12643, file: !1882, line: 552, column: 9)
!12685 = !DILocation(line: 552, column: 9, scope: !12643)
!12686 = !DILocation(line: 553, column: 9, scope: !12684)
!12687 = !DILocation(line: 555, column: 29, scope: !12643)
!12688 = !DILocation(line: 555, column: 39, scope: !12643)
!12689 = !DILocation(line: 555, column: 44, scope: !12643)
!12690 = !DILocation(line: 555, column: 58, scope: !12643)
!12691 = !DILocation(line: 555, column: 5, scope: !12643)
!12692 = !DILocation(line: 556, column: 37, scope: !12643)
!12693 = !DILocation(line: 556, column: 5, scope: !12643)
!12694 = !DILocation(line: 556, column: 10, scope: !12643)
!12695 = !DILocation(line: 556, column: 24, scope: !12643)
!12696 = !DILocation(line: 556, column: 32, scope: !12643)
!12697 = !DILocation(line: 558, column: 36, scope: !12643)
!12698 = !DILocation(line: 558, column: 5, scope: !12643)
!12699 = !DILocation(line: 559, column: 1, scope: !12643)
!12700 = distinct !DISubprogram(name: "destroy_cache_entry", scope: !1882, file: !1882, line: 596, type: !12701, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2037, retainedNodes: !74)
!12701 = !DISubroutineType(types: !12702)
!12702 = !{null, !2041, !5}
!12703 = !DILocalVariable(name: "entry", arg: 1, scope: !12700, file: !1882, line: 596, type: !2041)
!12704 = !DILocation(line: 596, column: 43, scope: !12700)
!12705 = !DILocalVariable(name: "context", arg: 2, scope: !12700, file: !1882, line: 596, type: !5)
!12706 = !DILocation(line: 596, column: 56, scope: !12700)
!12707 = !DILocalVariable(name: "fce", scope: !12700, file: !1882, line: 598, type: !2084)
!12708 = !DILocation(line: 598, column: 25, scope: !12700)
!12709 = !DILocation(line: 598, column: 53, scope: !12700)
!12710 = !DILocation(line: 600, column: 5, scope: !12700)
!12711 = !DILocation(line: 600, column: 10, scope: !12700)
!12712 = !DILocation(line: 600, column: 17, scope: !12700)
!12713 = !DILocation(line: 600, column: 22, scope: !12700)
!12714 = !DILocation(line: 600, column: 26, scope: !12700)
!12715 = !DILocation(line: 601, column: 10, scope: !12700)
!12716 = !DILocation(line: 601, column: 5, scope: !12700)
!12717 = !DILocation(line: 602, column: 1, scope: !12700)
!12718 = distinct !DISubprogram(name: "directory_list_generator", scope: !1882, file: !1882, line: 243, type: !1874, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2037, retainedNodes: !74)
!12719 = !DILocalVariable(name: "coro", arg: 1, scope: !12718, file: !1882, line: 243, type: !365)
!12720 = !DILocation(line: 243, column: 34, scope: !12718)
!12721 = !DILocalVariable(name: "dir", scope: !12718, file: !1882, line: 245, type: !12722)
!12722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12723, size: 64)
!12723 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !12724, line: 127, baseType: !12725)
!12724 = !DIFile(filename: "/usr/include/dirent.h", directory: "", checksumkind: CSK_MD5, checksum: "6eb1a2faa0cf53b967234cc6c0fe978e")
!12725 = !DICompositeType(tag: DW_TAG_structure_type, name: "__dirstream", file: !12724, line: 127, flags: DIFlagFwdDecl)
!12726 = !DILocation(line: 245, column: 10, scope: !12718)
!12727 = !DILocalVariable(name: "entry", scope: !12718, file: !1882, line: 246, type: !12728)
!12728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !12729, line: 22, size: 2240, elements: !12730)
!12729 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/dirent.h", directory: "", checksumkind: CSK_MD5, checksum: "bc8b10a1ddd2747862e3ae7b91dbf464")
!12730 = !{!12731, !12732, !12733, !12734, !12735}
!12731 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !12728, file: !12729, line: 25, baseType: !2128, size: 64)
!12732 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !12728, file: !12729, line: 26, baseType: !463, size: 64, offset: 64)
!12733 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !12728, file: !12729, line: 31, baseType: !413, size: 16, offset: 128)
!12734 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !12728, file: !12729, line: 32, baseType: !9, size: 8, offset: 144)
!12735 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !12728, file: !12729, line: 33, baseType: !12736, size: 2048, offset: 152)
!12736 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 2048, elements: !16)
!12737 = !DILocation(line: 246, column: 19, scope: !12718)
!12738 = !DILocalVariable(name: "buffer", scope: !12718, file: !1882, line: 246, type: !12739)
!12739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12728, size: 64)
!12740 = !DILocation(line: 246, column: 27, scope: !12718)
!12741 = !DILocalVariable(name: "fl", scope: !12718, file: !1882, line: 247, type: !12742)
!12742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12743, size: 64)
!12743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_list_t", file: !1882, line: 126, size: 576, elements: !12744)
!12744 = !{!12745, !12746, !12747}
!12745 = !DIDerivedType(tag: DW_TAG_member, name: "full_path", scope: !12743, file: !1882, line: 127, baseType: !480, size: 64)
!12746 = !DIDerivedType(tag: DW_TAG_member, name: "rel_path", scope: !12743, file: !1882, line: 128, baseType: !480, size: 64, offset: 64)
!12747 = !DIDerivedType(tag: DW_TAG_member, name: "file_list", scope: !12743, file: !1882, line: 139, baseType: !12748, size: 448, offset: 128)
!12748 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12743, file: !1882, line: 129, size: 448, elements: !12749)
!12749 = !{!12750, !12751, !12752, !12753, !12754, !12755, !12756}
!12750 = !DIDerivedType(tag: DW_TAG_member, name: "generator", scope: !12748, file: !1882, line: 130, baseType: !1872, size: 64)
!12751 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !12748, file: !1882, line: 132, baseType: !480, size: 64, offset: 64)
!12752 = !DIDerivedType(tag: DW_TAG_member, name: "icon_alt", scope: !12748, file: !1882, line: 133, baseType: !480, size: 64, offset: 128)
!12753 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12748, file: !1882, line: 134, baseType: !480, size: 64, offset: 192)
!12754 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !12748, file: !1882, line: 135, baseType: !480, size: 64, offset: 256)
!12755 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12748, file: !1882, line: 137, baseType: !37, size: 32, offset: 320)
!12756 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !12748, file: !1882, line: 138, baseType: !480, size: 64, offset: 384)
!12757 = !DILocation(line: 247, column: 25, scope: !12718)
!12758 = !DILocation(line: 247, column: 44, scope: !12718)
!12759 = !DILocation(line: 247, column: 30, scope: !12718)
!12760 = !DILocalVariable(name: "fd", scope: !12718, file: !1882, line: 248, type: !37)
!12761 = !DILocation(line: 248, column: 9, scope: !12718)
!12762 = !DILocation(line: 250, column: 19, scope: !12718)
!12763 = !DILocation(line: 250, column: 23, scope: !12718)
!12764 = !DILocation(line: 250, column: 11, scope: !12718)
!12765 = !DILocation(line: 250, column: 9, scope: !12718)
!12766 = !DILocation(line: 251, column: 10, scope: !12767)
!12767 = distinct !DILexicalBlock(scope: !12718, file: !1882, line: 251, column: 9)
!12768 = !DILocation(line: 251, column: 9, scope: !12718)
!12769 = !DILocation(line: 252, column: 9, scope: !12767)
!12770 = !DILocation(line: 254, column: 16, scope: !12718)
!12771 = !DILocation(line: 254, column: 10, scope: !12718)
!12772 = !DILocation(line: 254, column: 8, scope: !12718)
!12773 = !DILocation(line: 255, column: 9, scope: !12774)
!12774 = distinct !DILexicalBlock(scope: !12718, file: !1882, line: 255, column: 9)
!12775 = !DILocation(line: 255, column: 12, scope: !12774)
!12776 = !DILocation(line: 255, column: 9, scope: !12718)
!12777 = !DILocation(line: 256, column: 9, scope: !12774)
!12778 = !DILocation(line: 258, column: 5, scope: !12718)
!12779 = !DILocation(line: 258, column: 23, scope: !12718)
!12780 = !DILocation(line: 258, column: 13, scope: !12718)
!12781 = !DILocation(line: 258, column: 12, scope: !12718)
!12782 = !DILocalVariable(name: "st", scope: !12783, file: !1882, line: 259, type: !2122)
!12783 = distinct !DILexicalBlock(scope: !12718, file: !1882, line: 258, column: 46)
!12784 = !DILocation(line: 259, column: 21, scope: !12783)
!12785 = !DILocation(line: 261, column: 14, scope: !12786)
!12786 = distinct !DILexicalBlock(scope: !12783, file: !1882, line: 261, column: 13)
!12787 = !DILocation(line: 261, column: 13, scope: !12783)
!12788 = !DILocation(line: 262, column: 13, scope: !12786)
!12789 = !DILocation(line: 264, column: 19, scope: !12790)
!12790 = distinct !DILexicalBlock(scope: !12783, file: !1882, line: 264, column: 13)
!12791 = !DILocation(line: 264, column: 13, scope: !12790)
!12792 = !DILocation(line: 264, column: 29, scope: !12790)
!12793 = !DILocation(line: 264, column: 13, scope: !12783)
!12794 = !DILocation(line: 265, column: 13, scope: !12790)
!12795 = distinct !{!12795, !12778, !12796, !3203}
!12796 = !DILocation(line: 300, column: 5, scope: !12718)
!12797 = !DILocation(line: 267, column: 21, scope: !12798)
!12798 = distinct !DILexicalBlock(scope: !12783, file: !1882, line: 267, column: 13)
!12799 = !DILocation(line: 267, column: 31, scope: !12798)
!12800 = !DILocation(line: 267, column: 25, scope: !12798)
!12801 = !DILocation(line: 267, column: 13, scope: !12798)
!12802 = !DILocation(line: 267, column: 47, scope: !12798)
!12803 = !DILocation(line: 267, column: 13, scope: !12783)
!12804 = !DILocation(line: 268, column: 13, scope: !12798)
!12805 = !DILocation(line: 270, column: 13, scope: !12806)
!12806 = distinct !DILexicalBlock(scope: !12783, file: !1882, line: 270, column: 13)
!12807 = !DILocation(line: 270, column: 13, scope: !12783)
!12808 = !DILocation(line: 271, column: 13, scope: !12809)
!12809 = distinct !DILexicalBlock(scope: !12806, file: !1882, line: 270, column: 34)
!12810 = !DILocation(line: 271, column: 17, scope: !12809)
!12811 = !DILocation(line: 271, column: 27, scope: !12809)
!12812 = !DILocation(line: 271, column: 32, scope: !12809)
!12813 = !DILocation(line: 272, column: 13, scope: !12809)
!12814 = !DILocation(line: 272, column: 17, scope: !12809)
!12815 = !DILocation(line: 272, column: 27, scope: !12809)
!12816 = !DILocation(line: 272, column: 36, scope: !12809)
!12817 = !DILocation(line: 273, column: 13, scope: !12809)
!12818 = !DILocation(line: 273, column: 17, scope: !12809)
!12819 = !DILocation(line: 273, column: 27, scope: !12809)
!12820 = !DILocation(line: 273, column: 32, scope: !12809)
!12821 = !DILocation(line: 274, column: 9, scope: !12809)
!12822 = !DILocation(line: 274, column: 20, scope: !12823)
!12823 = distinct !DILexicalBlock(scope: !12806, file: !1882, line: 274, column: 20)
!12824 = !DILocation(line: 274, column: 20, scope: !12806)
!12825 = !DILocation(line: 275, column: 13, scope: !12826)
!12826 = distinct !DILexicalBlock(scope: !12823, file: !1882, line: 274, column: 41)
!12827 = !DILocation(line: 275, column: 17, scope: !12826)
!12828 = !DILocation(line: 275, column: 27, scope: !12826)
!12829 = !DILocation(line: 275, column: 32, scope: !12826)
!12830 = !DILocation(line: 276, column: 13, scope: !12826)
!12831 = !DILocation(line: 276, column: 17, scope: !12826)
!12832 = !DILocation(line: 276, column: 27, scope: !12826)
!12833 = !DILocation(line: 276, column: 36, scope: !12826)
!12834 = !DILocation(line: 277, column: 79, scope: !12826)
!12835 = !DILocation(line: 277, column: 73, scope: !12826)
!12836 = !DILocation(line: 277, column: 34, scope: !12826)
!12837 = !DILocation(line: 277, column: 13, scope: !12826)
!12838 = !DILocation(line: 277, column: 17, scope: !12826)
!12839 = !DILocation(line: 277, column: 27, scope: !12826)
!12840 = !DILocation(line: 277, column: 32, scope: !12826)
!12841 = !DILocation(line: 278, column: 9, scope: !12826)
!12842 = !DILocation(line: 279, column: 13, scope: !12843)
!12843 = distinct !DILexicalBlock(scope: !12823, file: !1882, line: 278, column: 16)
!12844 = !DILocation(line: 282, column: 16, scope: !12845)
!12845 = distinct !DILexicalBlock(scope: !12783, file: !1882, line: 282, column: 13)
!12846 = !DILocation(line: 282, column: 24, scope: !12845)
!12847 = !DILocation(line: 282, column: 13, scope: !12783)
!12848 = !DILocation(line: 283, column: 42, scope: !12849)
!12849 = distinct !DILexicalBlock(scope: !12845, file: !1882, line: 282, column: 32)
!12850 = !DILocation(line: 283, column: 34, scope: !12849)
!12851 = !DILocation(line: 283, column: 13, scope: !12849)
!12852 = !DILocation(line: 283, column: 17, scope: !12849)
!12853 = !DILocation(line: 283, column: 27, scope: !12849)
!12854 = !DILocation(line: 283, column: 32, scope: !12849)
!12855 = !DILocation(line: 284, column: 13, scope: !12849)
!12856 = !DILocation(line: 284, column: 17, scope: !12849)
!12857 = !DILocation(line: 284, column: 27, scope: !12849)
!12858 = !DILocation(line: 284, column: 32, scope: !12849)
!12859 = !DILocation(line: 285, column: 9, scope: !12849)
!12860 = !DILocation(line: 285, column: 23, scope: !12861)
!12861 = distinct !DILexicalBlock(scope: !12845, file: !1882, line: 285, column: 20)
!12862 = !DILocation(line: 285, column: 31, scope: !12861)
!12863 = !DILocation(line: 285, column: 20, scope: !12845)
!12864 = !DILocation(line: 286, column: 43, scope: !12865)
!12865 = distinct !DILexicalBlock(scope: !12861, file: !1882, line: 285, column: 46)
!12866 = !DILocation(line: 286, column: 51, scope: !12865)
!12867 = !DILocation(line: 286, column: 34, scope: !12865)
!12868 = !DILocation(line: 286, column: 13, scope: !12865)
!12869 = !DILocation(line: 286, column: 17, scope: !12865)
!12870 = !DILocation(line: 286, column: 27, scope: !12865)
!12871 = !DILocation(line: 286, column: 32, scope: !12865)
!12872 = !DILocation(line: 287, column: 13, scope: !12865)
!12873 = !DILocation(line: 287, column: 17, scope: !12865)
!12874 = !DILocation(line: 287, column: 27, scope: !12865)
!12875 = !DILocation(line: 287, column: 32, scope: !12865)
!12876 = !DILocation(line: 288, column: 9, scope: !12865)
!12877 = !DILocation(line: 288, column: 23, scope: !12878)
!12878 = distinct !DILexicalBlock(scope: !12861, file: !1882, line: 288, column: 20)
!12879 = !DILocation(line: 288, column: 31, scope: !12878)
!12880 = !DILocation(line: 288, column: 20, scope: !12861)
!12881 = !DILocation(line: 289, column: 43, scope: !12882)
!12882 = distinct !DILexicalBlock(scope: !12878, file: !1882, line: 288, column: 53)
!12883 = !DILocation(line: 289, column: 51, scope: !12882)
!12884 = !DILocation(line: 289, column: 34, scope: !12882)
!12885 = !DILocation(line: 289, column: 13, scope: !12882)
!12886 = !DILocation(line: 289, column: 17, scope: !12882)
!12887 = !DILocation(line: 289, column: 27, scope: !12882)
!12888 = !DILocation(line: 289, column: 32, scope: !12882)
!12889 = !DILocation(line: 290, column: 13, scope: !12882)
!12890 = !DILocation(line: 290, column: 17, scope: !12882)
!12891 = !DILocation(line: 290, column: 27, scope: !12882)
!12892 = !DILocation(line: 290, column: 32, scope: !12882)
!12893 = !DILocation(line: 291, column: 9, scope: !12882)
!12894 = !DILocation(line: 292, column: 43, scope: !12895)
!12895 = distinct !DILexicalBlock(scope: !12878, file: !1882, line: 291, column: 16)
!12896 = !DILocation(line: 292, column: 51, scope: !12895)
!12897 = !DILocation(line: 292, column: 34, scope: !12895)
!12898 = !DILocation(line: 292, column: 13, scope: !12895)
!12899 = !DILocation(line: 292, column: 17, scope: !12895)
!12900 = !DILocation(line: 292, column: 27, scope: !12895)
!12901 = !DILocation(line: 292, column: 32, scope: !12895)
!12902 = !DILocation(line: 293, column: 13, scope: !12895)
!12903 = !DILocation(line: 293, column: 17, scope: !12895)
!12904 = !DILocation(line: 293, column: 27, scope: !12895)
!12905 = !DILocation(line: 293, column: 32, scope: !12895)
!12906 = !DILocation(line: 296, column: 36, scope: !12783)
!12907 = !DILocation(line: 296, column: 30, scope: !12783)
!12908 = !DILocation(line: 296, column: 9, scope: !12783)
!12909 = !DILocation(line: 296, column: 13, scope: !12783)
!12910 = !DILocation(line: 296, column: 23, scope: !12783)
!12911 = !DILocation(line: 296, column: 28, scope: !12783)
!12912 = !DILocation(line: 298, column: 24, scope: !12913)
!12913 = distinct !DILexicalBlock(scope: !12783, file: !1882, line: 298, column: 13)
!12914 = !DILocation(line: 298, column: 13, scope: !12913)
!12915 = !DILocation(line: 298, column: 13, scope: !12783)
!12916 = !DILocation(line: 299, column: 13, scope: !12913)
!12917 = !DILabel(scope: !12718, name: "out", file: !1882, line: 302)
!12918 = !DILocation(line: 302, column: 1, scope: !12718)
!12919 = !DILocation(line: 303, column: 14, scope: !12718)
!12920 = !DILocation(line: 303, column: 5, scope: !12718)
!12921 = !DILocation(line: 304, column: 5, scope: !12718)
!12922 = !DILocation(line: 305, column: 1, scope: !12718)
!12923 = distinct !DISubprogram(name: "get_funcs", scope: !1882, file: !1882, line: 454, type: !12924, scopeLine: 456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2037, retainedNodes: !74)
!12924 = !DISubroutineType(types: !12925)
!12925 = !{!2096, !2106, !480, !61, !2121}
!12926 = !DILocalVariable(name: "priv", arg: 1, scope: !12923, file: !1882, line: 454, type: !2106)
!12927 = !DILocation(line: 454, column: 31, scope: !12923)
!12928 = !DILocalVariable(name: "key", arg: 2, scope: !12923, file: !1882, line: 454, type: !480)
!12929 = !DILocation(line: 454, column: 49, scope: !12923)
!12930 = !DILocalVariable(name: "full_path", arg: 3, scope: !12923, file: !1882, line: 454, type: !61)
!12931 = !DILocation(line: 454, column: 60, scope: !12923)
!12932 = !DILocalVariable(name: "st", arg: 4, scope: !12923, file: !1882, line: 455, type: !2121)
!12933 = !DILocation(line: 455, column: 18, scope: !12923)
!12934 = !DILocalVariable(name: "index_html_path_buf", scope: !12923, file: !1882, line: 457, type: !8448)
!12935 = !DILocation(line: 457, column: 10, scope: !12923)
!12936 = !DILocalVariable(name: "index_html_path", scope: !12923, file: !1882, line: 458, type: !61)
!12937 = !DILocation(line: 458, column: 11, scope: !12923)
!12938 = !DILocation(line: 458, column: 29, scope: !12923)
!12939 = !DILocation(line: 460, column: 9, scope: !12940)
!12940 = distinct !DILexicalBlock(scope: !12923, file: !1882, line: 460, column: 9)
!12941 = !DILocation(line: 460, column: 9, scope: !12923)
!12942 = !DILocation(line: 464, column: 14, scope: !12943)
!12943 = distinct !DILexicalBlock(scope: !12944, file: !1882, line: 464, column: 13)
!12944 = distinct !DILexicalBlock(scope: !12940, file: !1882, line: 460, column: 31)
!12945 = !DILocation(line: 464, column: 13, scope: !12943)
!12946 = !DILocation(line: 464, column: 18, scope: !12943)
!12947 = !DILocation(line: 464, column: 13, scope: !12944)
!12948 = !DILocation(line: 465, column: 39, scope: !12949)
!12949 = distinct !DILexicalBlock(scope: !12943, file: !1882, line: 464, column: 27)
!12950 = !DILocation(line: 465, column: 45, scope: !12949)
!12951 = !DILocation(line: 465, column: 29, scope: !12949)
!12952 = !DILocation(line: 466, column: 9, scope: !12949)
!12953 = !DILocalVariable(name: "key_end", scope: !12954, file: !1882, line: 470, type: !480)
!12954 = distinct !DILexicalBlock(scope: !12943, file: !1882, line: 466, column: 16)
!12955 = !DILocation(line: 470, column: 25, scope: !12954)
!12956 = !DILocation(line: 470, column: 45, scope: !12954)
!12957 = !DILocation(line: 470, column: 35, scope: !12954)
!12958 = !DILocation(line: 471, column: 19, scope: !12959)
!12959 = distinct !DILexicalBlock(scope: !12954, file: !1882, line: 471, column: 17)
!12960 = !DILocation(line: 471, column: 27, scope: !12959)
!12961 = !DILocation(line: 471, column: 17, scope: !12959)
!12962 = !DILocation(line: 471, column: 32, scope: !12959)
!12963 = !DILocation(line: 471, column: 17, scope: !12954)
!12964 = !DILocation(line: 472, column: 17, scope: !12959)
!12965 = !DILocalVariable(name: "ret", scope: !12954, file: !1882, line: 474, type: !37)
!12966 = !DILocation(line: 474, column: 17, scope: !12954)
!12967 = !DILocation(line: 474, column: 32, scope: !12954)
!12968 = !DILocation(line: 474, column: 67, scope: !12954)
!12969 = !DILocation(line: 474, column: 72, scope: !12954)
!12970 = !DILocation(line: 474, column: 78, scope: !12954)
!12971 = !DILocation(line: 474, column: 23, scope: !12954)
!12972 = !DILocation(line: 475, column: 17, scope: !12973)
!12973 = distinct !DILexicalBlock(scope: !12954, file: !1882, line: 475, column: 17)
!12974 = !DILocation(line: 475, column: 17, scope: !12954)
!12975 = !DILocation(line: 476, column: 17, scope: !12973)
!12976 = !DILocation(line: 480, column: 21, scope: !12977)
!12977 = distinct !DILexicalBlock(scope: !12944, file: !1882, line: 480, column: 13)
!12978 = !DILocation(line: 480, column: 27, scope: !12977)
!12979 = !DILocation(line: 480, column: 32, scope: !12977)
!12980 = !DILocation(line: 480, column: 36, scope: !12977)
!12981 = !DILocation(line: 480, column: 53, scope: !12977)
!12982 = !DILocation(line: 480, column: 13, scope: !12977)
!12983 = !DILocation(line: 480, column: 60, scope: !12977)
!12984 = !DILocation(line: 480, column: 13, scope: !12944)
!12985 = !DILocation(line: 481, column: 17, scope: !12986)
!12986 = distinct !DILexicalBlock(scope: !12987, file: !1882, line: 481, column: 17)
!12987 = distinct !DILexicalBlock(scope: !12977, file: !1882, line: 480, column: 65)
!12988 = !DILocation(line: 481, column: 17, scope: !12987)
!12989 = !DILocation(line: 482, column: 17, scope: !12986)
!12990 = !DILocation(line: 485, column: 13, scope: !12987)
!12991 = !DILocation(line: 491, column: 13, scope: !12992)
!12992 = distinct !DILexicalBlock(scope: !12944, file: !1882, line: 491, column: 13)
!12993 = !DILocation(line: 491, column: 13, scope: !12944)
!12994 = !DILocation(line: 493, column: 13, scope: !12992)
!12995 = !DILocation(line: 495, column: 9, scope: !12944)
!12996 = !DILocation(line: 495, column: 19, scope: !12944)
!12997 = !DILocation(line: 495, column: 25, scope: !12944)
!12998 = !DILocation(line: 495, column: 30, scope: !12944)
!12999 = !DILocation(line: 495, column: 40, scope: !12944)
!13000 = !DILocation(line: 496, column: 17, scope: !12944)
!13001 = !DILocation(line: 496, column: 29, scope: !12944)
!13002 = !DILocation(line: 496, column: 35, scope: !12944)
!13003 = !DILocation(line: 496, column: 40, scope: !12944)
!13004 = !DILocation(line: 496, column: 27, scope: !12944)
!13005 = !DILocation(line: 496, column: 49, scope: !12944)
!13006 = !DILocation(line: 496, column: 54, scope: !12944)
!13007 = !DILocation(line: 497, column: 32, scope: !12944)
!13008 = !DILocation(line: 497, column: 38, scope: !12944)
!13009 = !DILocation(line: 497, column: 43, scope: !12944)
!13010 = !DILocation(line: 497, column: 30, scope: !12944)
!13011 = !DILocation(line: 497, column: 52, scope: !12944)
!13012 = !DILocation(line: 496, column: 9, scope: !12944)
!13013 = !DILocation(line: 498, column: 5, scope: !12944)
!13014 = !DILocation(line: 502, column: 9, scope: !13015)
!13015 = distinct !DILexicalBlock(scope: !12923, file: !1882, line: 502, column: 9)
!13016 = !DILocation(line: 502, column: 13, scope: !13015)
!13017 = !DILocation(line: 502, column: 21, scope: !13015)
!13018 = !DILocation(line: 502, column: 9, scope: !12923)
!13019 = !DILocation(line: 503, column: 9, scope: !13015)
!13020 = !DILocation(line: 505, column: 5, scope: !12923)
!13021 = !DILocation(line: 506, column: 1, scope: !12923)
!13022 = distinct !DISubprogram(name: "create_cache_entry_from_funcs", scope: !1882, file: !1882, line: 509, type: !13023, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2037, retainedNodes: !74)
!13023 = !DISubroutineType(types: !13024)
!13024 = !{!2084, !2106, !480, !2121, !2096}
!13025 = !DILocalVariable(name: "priv", arg: 1, scope: !13022, file: !1882, line: 509, type: !2106)
!13026 = !DILocation(line: 509, column: 51, scope: !13022)
!13027 = !DILocalVariable(name: "full_path", arg: 2, scope: !13022, file: !1882, line: 509, type: !480)
!13028 = !DILocation(line: 509, column: 69, scope: !13022)
!13029 = !DILocalVariable(name: "st", arg: 3, scope: !13022, file: !1882, line: 510, type: !2121)
!13030 = !DILocation(line: 510, column: 18, scope: !13022)
!13031 = !DILocalVariable(name: "funcs", arg: 4, scope: !13022, file: !1882, line: 510, type: !2096)
!13032 = !DILocation(line: 510, column: 43, scope: !13022)
!13033 = !DILocalVariable(name: "fce", scope: !13022, file: !1882, line: 512, type: !2084)
!13034 = !DILocation(line: 512, column: 25, scope: !13022)
!13035 = !DILocation(line: 514, column: 33, scope: !13022)
!13036 = !DILocation(line: 514, column: 40, scope: !13022)
!13037 = !DILocation(line: 514, column: 31, scope: !13022)
!13038 = !DILocation(line: 514, column: 11, scope: !13022)
!13039 = !DILocation(line: 514, column: 9, scope: !13022)
!13040 = !DILocation(line: 515, column: 9, scope: !13041)
!13041 = distinct !DILexicalBlock(scope: !13022, file: !1882, line: 515, column: 9)
!13042 = !DILocation(line: 515, column: 9, scope: !13022)
!13043 = !DILocation(line: 516, column: 9, scope: !13041)
!13044 = !DILocation(line: 518, column: 9, scope: !13045)
!13045 = distinct !DILexicalBlock(scope: !13022, file: !1882, line: 518, column: 9)
!13046 = !DILocation(line: 518, column: 9, scope: !13022)
!13047 = !DILocation(line: 519, column: 22, scope: !13048)
!13048 = distinct !DILexicalBlock(scope: !13045, file: !1882, line: 518, column: 56)
!13049 = !DILocation(line: 519, column: 9, scope: !13048)
!13050 = !DILocation(line: 519, column: 14, scope: !13048)
!13051 = !DILocation(line: 519, column: 20, scope: !13048)
!13052 = !DILocation(line: 520, column: 16, scope: !13048)
!13053 = !DILocation(line: 520, column: 9, scope: !13048)
!13054 = !DILocation(line: 523, column: 10, scope: !13022)
!13055 = !DILocation(line: 523, column: 5, scope: !13022)
!13056 = !DILocation(line: 525, column: 9, scope: !13057)
!13057 = distinct !DILexicalBlock(scope: !13022, file: !1882, line: 525, column: 9)
!13058 = !DILocation(line: 525, column: 15, scope: !13057)
!13059 = !DILocation(line: 525, column: 9, scope: !13022)
!13060 = !DILocation(line: 526, column: 9, scope: !13057)
!13061 = !DILocation(line: 528, column: 42, scope: !13022)
!13062 = !DILocation(line: 528, column: 48, scope: !13022)
!13063 = !DILocation(line: 528, column: 59, scope: !13022)
!13064 = !DILocation(line: 528, column: 12, scope: !13022)
!13065 = !DILocation(line: 528, column: 5, scope: !13022)
!13066 = !DILocation(line: 529, column: 1, scope: !13022)
!13067 = distinct !DISubprogram(name: "sendfile_serve", scope: !1882, file: !1882, line: 818, type: !2031, scopeLine: 819, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2037, retainedNodes: !74)
!13068 = !DILocalVariable(name: "request", arg: 1, scope: !13067, file: !1882, line: 818, type: !1898)
!13069 = !DILocation(line: 818, column: 32, scope: !13067)
!13070 = !DILocalVariable(name: "data", arg: 2, scope: !13067, file: !1882, line: 818, type: !5)
!13071 = !DILocation(line: 818, column: 47, scope: !13067)
!13072 = !DILocalVariable(name: "fce", scope: !13067, file: !1882, line: 820, type: !2084)
!13073 = !DILocation(line: 820, column: 25, scope: !13067)
!13074 = !DILocation(line: 820, column: 31, scope: !13067)
!13075 = !DILocalVariable(name: "sd", scope: !13067, file: !1882, line: 821, type: !2074)
!13076 = !DILocation(line: 821, column: 28, scope: !13067)
!13077 = !DILocation(line: 821, column: 59, scope: !13067)
!13078 = !DILocation(line: 821, column: 63, scope: !13067)
!13079 = !DILocalVariable(name: "headers", scope: !13067, file: !1882, line: 822, type: !8448)
!13080 = !DILocation(line: 822, column: 10, scope: !13067)
!13081 = !DILocalVariable(name: "header_len", scope: !13067, file: !1882, line: 823, type: !6)
!13082 = !DILocation(line: 823, column: 12, scope: !13067)
!13083 = !DILocalVariable(name: "return_status", scope: !13067, file: !1882, line: 824, type: !497)
!13084 = !DILocation(line: 824, column: 24, scope: !13067)
!13085 = !DILocalVariable(name: "from", scope: !13067, file: !1882, line: 825, type: !2000)
!13086 = !DILocation(line: 825, column: 11, scope: !13067)
!13087 = !DILocalVariable(name: "to", scope: !13067, file: !1882, line: 825, type: !2000)
!13088 = !DILocation(line: 825, column: 17, scope: !13067)
!13089 = !DILocalVariable(name: "compressed", scope: !13067, file: !1882, line: 826, type: !480)
!13090 = !DILocation(line: 826, column: 17, scope: !13067)
!13091 = !DILocalVariable(name: "filename", scope: !13067, file: !1882, line: 827, type: !61)
!13092 = !DILocation(line: 827, column: 11, scope: !13067)
!13093 = !DILocalVariable(name: "size", scope: !13067, file: !1882, line: 828, type: !6)
!13094 = !DILocation(line: 828, column: 12, scope: !13067)
!13095 = !DILocation(line: 830, column: 9, scope: !13096)
!13096 = distinct !DILexicalBlock(scope: !13067, file: !1882, line: 830, column: 9)
!13097 = !DILocation(line: 830, column: 13, scope: !13096)
!13098 = !DILocation(line: 830, column: 24, scope: !13096)
!13099 = !DILocation(line: 830, column: 29, scope: !13096)
!13100 = !DILocation(line: 830, column: 33, scope: !13096)
!13101 = !DILocation(line: 830, column: 42, scope: !13096)
!13102 = !DILocation(line: 830, column: 48, scope: !13096)
!13103 = !DILocation(line: 830, column: 9, scope: !13067)
!13104 = !DILocation(line: 831, column: 14, scope: !13105)
!13105 = distinct !DILexicalBlock(scope: !13096, file: !1882, line: 830, column: 72)
!13106 = !DILocation(line: 832, column: 21, scope: !13105)
!13107 = !DILocation(line: 832, column: 25, scope: !13105)
!13108 = !DILocation(line: 832, column: 36, scope: !13105)
!13109 = !DILocation(line: 832, column: 12, scope: !13105)
!13110 = !DILocation(line: 834, column: 22, scope: !13105)
!13111 = !DILocation(line: 834, column: 20, scope: !13105)
!13112 = !DILocation(line: 835, column: 20, scope: !13105)
!13113 = !DILocation(line: 835, column: 24, scope: !13105)
!13114 = !DILocation(line: 835, column: 35, scope: !13105)
!13115 = !DILocation(line: 835, column: 18, scope: !13105)
!13116 = !DILocation(line: 836, column: 16, scope: !13105)
!13117 = !DILocation(line: 836, column: 20, scope: !13105)
!13118 = !DILocation(line: 836, column: 31, scope: !13105)
!13119 = !DILocation(line: 836, column: 14, scope: !13105)
!13120 = !DILocation(line: 838, column: 23, scope: !13105)
!13121 = !DILocation(line: 839, column: 5, scope: !13105)
!13122 = !DILocation(line: 840, column: 39, scope: !13123)
!13123 = distinct !DILexicalBlock(scope: !13096, file: !1882, line: 839, column: 12)
!13124 = !DILocation(line: 840, column: 67, scope: !13123)
!13125 = !DILocation(line: 840, column: 71, scope: !13123)
!13126 = !DILocation(line: 840, column: 84, scope: !13123)
!13127 = !DILocalVariable(name: "request", arg: 1, scope: !13128, file: !1882, line: 768, type: !1898)
!13128 = distinct !DISubprogram(name: "compute_range", scope: !1882, file: !1882, line: 768, type: !13129, scopeLine: 769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2037, retainedNodes: !74)
!13129 = !DISubroutineType(types: !13130)
!13130 = !{!497, !1898, !13131, !13131, !2000}
!13131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 64)
!13132 = !DILocation(line: 768, column: 31, scope: !13128, inlinedAt: !13133)
!13133 = distinct !DILocation(line: 840, column: 25, scope: !13123)
!13134 = !DILocalVariable(name: "from", arg: 2, scope: !13128, file: !1882, line: 768, type: !13131)
!13135 = !DILocation(line: 768, column: 47, scope: !13128, inlinedAt: !13133)
!13136 = !DILocalVariable(name: "to", arg: 3, scope: !13128, file: !1882, line: 768, type: !13131)
!13137 = !DILocation(line: 768, column: 60, scope: !13128, inlinedAt: !13133)
!13138 = !DILocalVariable(name: "size", arg: 4, scope: !13128, file: !1882, line: 768, type: !2000)
!13139 = !DILocation(line: 768, column: 70, scope: !13128, inlinedAt: !13133)
!13140 = !DILocalVariable(name: "f", scope: !13128, file: !1882, line: 770, type: !2000)
!13141 = !DILocation(line: 770, column: 11, scope: !13128, inlinedAt: !13133)
!13142 = !DILocalVariable(name: "t", scope: !13128, file: !1882, line: 770, type: !2000)
!13143 = !DILocation(line: 770, column: 14, scope: !13128, inlinedAt: !13133)
!13144 = !DILocation(line: 772, column: 9, scope: !13128, inlinedAt: !13133)
!13145 = !DILocation(line: 772, column: 18, scope: !13128, inlinedAt: !13133)
!13146 = !DILocation(line: 772, column: 25, scope: !13128, inlinedAt: !13133)
!13147 = !DILocation(line: 772, column: 31, scope: !13128, inlinedAt: !13133)
!13148 = !DILocation(line: 772, column: 7, scope: !13128, inlinedAt: !13133)
!13149 = !DILocation(line: 773, column: 9, scope: !13128, inlinedAt: !13133)
!13150 = !DILocation(line: 773, column: 18, scope: !13128, inlinedAt: !13133)
!13151 = !DILocation(line: 773, column: 25, scope: !13128, inlinedAt: !13133)
!13152 = !DILocation(line: 773, column: 31, scope: !13128, inlinedAt: !13133)
!13153 = !DILocation(line: 773, column: 7, scope: !13128, inlinedAt: !13133)
!13154 = !DILocation(line: 778, column: 9, scope: !13155, inlinedAt: !13133)
!13155 = distinct !DILexicalBlock(scope: !13128, file: !1882, line: 778, column: 9)
!13156 = !DILocation(line: 0, scope: !13155, inlinedAt: !13133)
!13157 = !DILocation(line: 778, column: 9, scope: !13128, inlinedAt: !13133)
!13158 = !DILocation(line: 779, column: 10, scope: !13159, inlinedAt: !13133)
!13159 = distinct !DILexicalBlock(scope: !13155, file: !1882, line: 778, column: 35)
!13160 = !DILocation(line: 779, column: 15, scope: !13159, inlinedAt: !13133)
!13161 = !DILocation(line: 780, column: 15, scope: !13159, inlinedAt: !13133)
!13162 = !DILocation(line: 780, column: 10, scope: !13159, inlinedAt: !13133)
!13163 = !DILocation(line: 780, column: 13, scope: !13159, inlinedAt: !13133)
!13164 = !DILocation(line: 781, column: 9, scope: !13159, inlinedAt: !13133)
!13165 = !DILocation(line: 787, column: 9, scope: !13166, inlinedAt: !13133)
!13166 = distinct !DILexicalBlock(scope: !13128, file: !1882, line: 787, column: 9)
!13167 = !DILocation(line: 787, column: 9, scope: !13128, inlinedAt: !13133)
!13168 = !DILocation(line: 788, column: 9, scope: !13166, inlinedAt: !13133)
!13169 = !DILocation(line: 793, column: 9, scope: !13170, inlinedAt: !13133)
!13170 = distinct !DILexicalBlock(scope: !13128, file: !1882, line: 793, column: 9)
!13171 = !DILocation(line: 793, column: 9, scope: !13128, inlinedAt: !13133)
!13172 = !DILocation(line: 794, column: 9, scope: !13170, inlinedAt: !13133)
!13173 = !DILocation(line: 799, column: 9, scope: !13174, inlinedAt: !13133)
!13174 = distinct !DILexicalBlock(scope: !13128, file: !1882, line: 799, column: 9)
!13175 = !DILocation(line: 799, column: 11, scope: !13174, inlinedAt: !13133)
!13176 = !DILocation(line: 799, column: 9, scope: !13128, inlinedAt: !13133)
!13177 = !DILocation(line: 800, column: 13, scope: !13174, inlinedAt: !13133)
!13178 = !DILocation(line: 800, column: 20, scope: !13174, inlinedAt: !13133)
!13179 = !DILocation(line: 800, column: 18, scope: !13174, inlinedAt: !13133)
!13180 = !DILocation(line: 800, column: 11, scope: !13174, inlinedAt: !13133)
!13181 = !DILocation(line: 800, column: 9, scope: !13174, inlinedAt: !13133)
!13182 = !DILocation(line: 802, column: 14, scope: !13174, inlinedAt: !13133)
!13183 = !DILocation(line: 802, column: 11, scope: !13174, inlinedAt: !13133)
!13184 = !DILocation(line: 808, column: 9, scope: !13185, inlinedAt: !13133)
!13185 = distinct !DILexicalBlock(scope: !13128, file: !1882, line: 808, column: 9)
!13186 = !DILocation(line: 808, column: 9, scope: !13128, inlinedAt: !13133)
!13187 = !DILocation(line: 809, column: 9, scope: !13185, inlinedAt: !13133)
!13188 = !DILocation(line: 811, column: 13, scope: !13128, inlinedAt: !13133)
!13189 = !DILocation(line: 811, column: 6, scope: !13128, inlinedAt: !13133)
!13190 = !DILocation(line: 811, column: 11, scope: !13128, inlinedAt: !13133)
!13191 = !DILocation(line: 812, column: 11, scope: !13128, inlinedAt: !13133)
!13192 = !DILocation(line: 812, column: 6, scope: !13128, inlinedAt: !13133)
!13193 = !DILocation(line: 812, column: 9, scope: !13128, inlinedAt: !13133)
!13194 = !DILocation(line: 814, column: 5, scope: !13128, inlinedAt: !13133)
!13195 = !DILocation(line: 815, column: 1, scope: !13128, inlinedAt: !13133)
!13196 = !DILocation(line: 840, column: 23, scope: !13123)
!13197 = !DILocation(line: 841, column: 13, scope: !13198)
!13198 = distinct !DILexicalBlock(scope: !13123, file: !1882, line: 841, column: 13)
!13199 = !DILocation(line: 841, column: 13, scope: !13123)
!13200 = !DILocation(line: 842, column: 13, scope: !13198)
!13201 = !DILocation(line: 844, column: 22, scope: !13123)
!13202 = !DILocation(line: 844, column: 20, scope: !13123)
!13203 = !DILocation(line: 845, column: 20, scope: !13123)
!13204 = !DILocation(line: 845, column: 24, scope: !13123)
!13205 = !DILocation(line: 845, column: 37, scope: !13123)
!13206 = !DILocation(line: 845, column: 18, scope: !13123)
!13207 = !DILocation(line: 846, column: 16, scope: !13123)
!13208 = !DILocation(line: 846, column: 20, scope: !13123)
!13209 = !DILocation(line: 846, column: 33, scope: !13123)
!13210 = !DILocation(line: 846, column: 14, scope: !13123)
!13211 = !DILocation(line: 849, column: 34, scope: !13212)
!13212 = distinct !DILexicalBlock(scope: !13067, file: !1882, line: 849, column: 9)
!13213 = !DILocation(line: 849, column: 43, scope: !13212)
!13214 = !DILocation(line: 849, column: 48, scope: !13212)
!13215 = !DILocation(line: 849, column: 62, scope: !13212)
!13216 = !DILocalVariable(name: "request", arg: 1, scope: !13217, file: !1882, line: 735, type: !1898)
!13217 = distinct !DISubprogram(name: "client_has_fresh_content", scope: !1882, file: !1882, line: 735, type: !13218, scopeLine: 736, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2037, retainedNodes: !74)
!13218 = !DISubroutineType(types: !13219)
!13219 = !{!341, !1898, !322}
!13220 = !DILocation(line: 735, column: 42, scope: !13217, inlinedAt: !13221)
!13221 = distinct !DILocation(line: 849, column: 9, scope: !13212)
!13222 = !DILocalVariable(name: "mtime", arg: 2, scope: !13217, file: !1882, line: 735, type: !322)
!13223 = !DILocation(line: 735, column: 58, scope: !13217, inlinedAt: !13221)
!13224 = !DILocation(line: 737, column: 12, scope: !13217, inlinedAt: !13221)
!13225 = !DILocation(line: 737, column: 21, scope: !13217, inlinedAt: !13221)
!13226 = !DILocation(line: 737, column: 28, scope: !13217, inlinedAt: !13221)
!13227 = !DILocation(line: 737, column: 46, scope: !13217, inlinedAt: !13221)
!13228 = !DILocation(line: 737, column: 49, scope: !13217, inlinedAt: !13221)
!13229 = !DILocation(line: 737, column: 58, scope: !13217, inlinedAt: !13221)
!13230 = !DILocation(line: 737, column: 67, scope: !13217, inlinedAt: !13221)
!13231 = !DILocation(line: 737, column: 74, scope: !13217, inlinedAt: !13221)
!13232 = !DILocation(line: 737, column: 55, scope: !13217, inlinedAt: !13221)
!13233 = !DILocation(line: 0, scope: !13217, inlinedAt: !13221)
!13234 = !DILocation(line: 849, column: 9, scope: !13067)
!13235 = !DILocation(line: 850, column: 23, scope: !13212)
!13236 = !DILocation(line: 850, column: 9, scope: !13212)
!13237 = !DILocation(line: 852, column: 34, scope: !13067)
!13238 = !DILocation(line: 852, column: 43, scope: !13067)
!13239 = !DILocation(line: 852, column: 58, scope: !13067)
!13240 = !DILocation(line: 852, column: 63, scope: !13067)
!13241 = !DILocation(line: 853, column: 17, scope: !13067)
!13242 = !DILocation(line: 853, column: 29, scope: !13067)
!13243 = !DILocation(line: 852, column: 18, scope: !13067)
!13244 = !DILocation(line: 852, column: 16, scope: !13067)
!13245 = !DILocation(line: 854, column: 9, scope: !13246)
!13246 = distinct !DILexicalBlock(scope: !13067, file: !1882, line: 854, column: 9)
!13247 = !DILocation(line: 854, column: 9, scope: !13067)
!13248 = !DILocation(line: 855, column: 9, scope: !13246)
!13249 = !DILocation(line: 857, column: 9, scope: !13250)
!13250 = distinct !DILexicalBlock(scope: !13067, file: !1882, line: 857, column: 9)
!13251 = !DILocation(line: 857, column: 18, scope: !13250)
!13252 = !DILocation(line: 857, column: 24, scope: !13250)
!13253 = !DILocation(line: 857, column: 46, scope: !13250)
!13254 = !DILocation(line: 857, column: 49, scope: !13250)
!13255 = !DILocation(line: 857, column: 63, scope: !13250)
!13256 = !DILocation(line: 857, column: 9, scope: !13067)
!13257 = !DILocation(line: 858, column: 20, scope: !13258)
!13258 = distinct !DILexicalBlock(scope: !13250, file: !1882, line: 857, column: 85)
!13259 = !DILocation(line: 858, column: 29, scope: !13258)
!13260 = !DILocation(line: 858, column: 38, scope: !13258)
!13261 = !DILocation(line: 858, column: 9, scope: !13258)
!13262 = !DILocation(line: 859, column: 5, scope: !13258)
!13263 = !DILocalVariable(name: "priv", scope: !13264, file: !1882, line: 860, type: !2106)
!13264 = distinct !DILexicalBlock(scope: !13250, file: !1882, line: 859, column: 12)
!13265 = !DILocation(line: 860, column: 29, scope: !13264)
!13266 = !DILocation(line: 860, column: 36, scope: !13264)
!13267 = !DILocation(line: 860, column: 45, scope: !13264)
!13268 = !DILocation(line: 860, column: 54, scope: !13264)
!13269 = !DILocation(line: 860, column: 61, scope: !13264)
!13270 = !DILocalVariable(name: "file_fd", scope: !13264, file: !1882, line: 868, type: !37)
!13271 = !DILocation(line: 868, column: 13, scope: !13264)
!13272 = !DILocation(line: 868, column: 35, scope: !13264)
!13273 = !DILocation(line: 868, column: 44, scope: !13264)
!13274 = !DILocation(line: 868, column: 50, scope: !13264)
!13275 = !DILocation(line: 868, column: 55, scope: !13264)
!13276 = !DILocation(line: 868, column: 59, scope: !13264)
!13277 = !DILocation(line: 868, column: 69, scope: !13264)
!13278 = !DILocation(line: 868, column: 75, scope: !13264)
!13279 = !DILocation(line: 868, column: 23, scope: !13264)
!13280 = !DILocation(line: 869, column: 13, scope: !13281)
!13281 = distinct !DILexicalBlock(scope: !13264, file: !1882, line: 869, column: 13)
!13282 = !DILocation(line: 869, column: 13, scope: !13264)
!13283 = !DILocation(line: 870, column: 21, scope: !13284)
!13284 = distinct !DILexicalBlock(scope: !13281, file: !1882, line: 869, column: 36)
!13285 = !DILocation(line: 870, column: 13, scope: !13284)
!13286 = !DILocation(line: 872, column: 17, scope: !13287)
!13287 = distinct !DILexicalBlock(scope: !13284, file: !1882, line: 870, column: 30)
!13288 = !DILocation(line: 874, column: 17, scope: !13287)
!13289 = !DILocation(line: 876, column: 17, scope: !13287)
!13290 = !DILocation(line: 880, column: 19, scope: !13264)
!13291 = !DILocation(line: 880, column: 28, scope: !13264)
!13292 = !DILocation(line: 880, column: 37, scope: !13264)
!13293 = !DILocation(line: 880, column: 9, scope: !13264)
!13294 = !DILocation(line: 881, column: 23, scope: !13264)
!13295 = !DILocation(line: 881, column: 32, scope: !13264)
!13296 = !DILocation(line: 881, column: 41, scope: !13264)
!13297 = !DILocation(line: 881, column: 55, scope: !13264)
!13298 = !DILocation(line: 881, column: 9, scope: !13264)
!13299 = !DILocation(line: 884, column: 12, scope: !13067)
!13300 = !DILocation(line: 884, column: 5, scope: !13067)
!13301 = !DILocation(line: 885, column: 1, scope: !13067)
!13302 = distinct !DISubprogram(name: "sendfile_init", scope: !1882, file: !1882, line: 378, type: !2104, scopeLine: 382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2037, retainedNodes: !74)
!13303 = !DILocalVariable(name: "ce", arg: 1, scope: !13302, file: !1882, line: 378, type: !2084)
!13304 = !DILocation(line: 378, column: 35, scope: !13302)
!13305 = !DILocalVariable(name: "priv", arg: 2, scope: !13302, file: !1882, line: 379, type: !2106)
!13306 = !DILocation(line: 379, column: 36, scope: !13302)
!13307 = !DILocalVariable(name: "full_path", arg: 3, scope: !13302, file: !1882, line: 380, type: !480)
!13308 = !DILocation(line: 380, column: 28, scope: !13302)
!13309 = !DILocalVariable(name: "st", arg: 4, scope: !13302, file: !1882, line: 381, type: !2121)
!13310 = !DILocation(line: 381, column: 29, scope: !13302)
!13311 = !DILocalVariable(name: "sd", scope: !13302, file: !1882, line: 383, type: !2074)
!13312 = !DILocation(line: 383, column: 28, scope: !13302)
!13313 = !DILocation(line: 383, column: 59, scope: !13302)
!13314 = !DILocation(line: 383, column: 62, scope: !13302)
!13315 = !DILocalVariable(name: "compressed_st", scope: !13302, file: !1882, line: 384, type: !2122)
!13316 = !DILocation(line: 384, column: 17, scope: !13302)
!13317 = !DILocation(line: 387, column: 17, scope: !13302)
!13318 = !DILocation(line: 387, column: 29, scope: !13302)
!13319 = !DILocation(line: 387, column: 35, scope: !13302)
!13320 = !DILocation(line: 387, column: 40, scope: !13302)
!13321 = !DILocation(line: 387, column: 27, scope: !13302)
!13322 = !DILocation(line: 386, column: 21, scope: !13302)
!13323 = !DILocation(line: 386, column: 5, scope: !13302)
!13324 = !DILocation(line: 386, column: 9, scope: !13302)
!13325 = !DILocation(line: 386, column: 19, scope: !13302)
!13326 = !DILocation(line: 389, column: 9, scope: !13327)
!13327 = distinct !DILexicalBlock(scope: !13302, file: !1882, line: 389, column: 9)
!13328 = !DILocation(line: 389, column: 9, scope: !13302)
!13329 = !DILocation(line: 390, column: 9, scope: !13327)
!13330 = !DILocalVariable(name: "len", scope: !13302, file: !1882, line: 393, type: !37)
!13331 = !DILocation(line: 393, column: 9, scope: !13302)
!13332 = !DILocation(line: 393, column: 25, scope: !13302)
!13333 = !DILocation(line: 393, column: 29, scope: !13302)
!13334 = !DILocation(line: 393, column: 40, scope: !13302)
!13335 = !DILocation(line: 393, column: 59, scope: !13302)
!13336 = !DILocation(line: 393, column: 71, scope: !13302)
!13337 = !DILocation(line: 393, column: 77, scope: !13302)
!13338 = !DILocation(line: 393, column: 82, scope: !13302)
!13339 = !DILocation(line: 393, column: 69, scope: !13302)
!13340 = !DILocation(line: 393, column: 91, scope: !13302)
!13341 = !DILocation(line: 393, column: 15, scope: !13302)
!13342 = !DILocation(line: 394, column: 9, scope: !13343)
!13343 = distinct !DILexicalBlock(scope: !13302, file: !1882, line: 394, column: 9)
!13344 = !DILocation(line: 394, column: 9, scope: !13302)
!13345 = !DILocation(line: 395, column: 9, scope: !13343)
!13346 = !DILocalVariable(name: "ret", scope: !13302, file: !1882, line: 397, type: !37)
!13347 = !DILocation(line: 397, column: 9, scope: !13302)
!13348 = !DILocation(line: 397, column: 23, scope: !13302)
!13349 = !DILocation(line: 397, column: 29, scope: !13302)
!13350 = !DILocation(line: 397, column: 34, scope: !13302)
!13351 = !DILocation(line: 397, column: 38, scope: !13302)
!13352 = !DILocation(line: 397, column: 42, scope: !13302)
!13353 = !DILocation(line: 397, column: 53, scope: !13302)
!13354 = !DILocation(line: 397, column: 15, scope: !13302)
!13355 = !DILocation(line: 398, column: 9, scope: !13356)
!13356 = distinct !DILexicalBlock(scope: !13302, file: !1882, line: 398, column: 9)
!13357 = !DILocalVariable(name: "compressed_sz", arg: 1, scope: !2211, file: !1882, line: 308, type: !73)
!13358 = !DILocation(line: 308, column: 36, scope: !2211, inlinedAt: !13359)
!13359 = distinct !DILocation(line: 398, column: 9, scope: !13356)
!13360 = !DILocalVariable(name: "uncompressed_sz", arg: 2, scope: !2211, file: !1882, line: 308, type: !73)
!13361 = !DILocation(line: 308, column: 64, scope: !2211, inlinedAt: !13359)
!13362 = !DILocation(line: 312, column: 14, scope: !2211, inlinedAt: !13359)
!13363 = !DILocation(line: 312, column: 28, scope: !2211, inlinedAt: !13359)
!13364 = !DILocation(line: 312, column: 54, scope: !2211, inlinedAt: !13359)
!13365 = !DILocation(line: 312, column: 52, scope: !2211, inlinedAt: !13359)
!13366 = !DILocation(line: 0, scope: !13356)
!13367 = !DILocation(line: 398, column: 9, scope: !13302)
!13368 = !DILocation(line: 400, column: 53, scope: !13369)
!13369 = distinct !DILexicalBlock(scope: !13356, file: !1882, line: 399, column: 89)
!13370 = !DILocation(line: 400, column: 9, scope: !13369)
!13371 = !DILocation(line: 400, column: 13, scope: !13369)
!13372 = !DILocation(line: 400, column: 24, scope: !13369)
!13373 = !DILocation(line: 400, column: 29, scope: !13369)
!13374 = !DILocation(line: 401, column: 5, scope: !13369)
!13375 = !DILocation(line: 402, column: 14, scope: !13376)
!13376 = distinct !DILexicalBlock(scope: !13356, file: !1882, line: 401, column: 12)
!13377 = !DILocation(line: 402, column: 18, scope: !13376)
!13378 = !DILocation(line: 402, column: 29, scope: !13376)
!13379 = !DILocation(line: 402, column: 9, scope: !13376)
!13380 = !DILabel(scope: !13376, name: "only_uncompressed", file: !1882, line: 404)
!13381 = !DILocation(line: 404, column: 1, scope: !13376)
!13382 = !DILocation(line: 405, column: 9, scope: !13376)
!13383 = !DILocation(line: 405, column: 13, scope: !13376)
!13384 = !DILocation(line: 405, column: 24, scope: !13376)
!13385 = !DILocation(line: 405, column: 33, scope: !13376)
!13386 = !DILocation(line: 406, column: 9, scope: !13376)
!13387 = !DILocation(line: 406, column: 13, scope: !13376)
!13388 = !DILocation(line: 406, column: 24, scope: !13376)
!13389 = !DILocation(line: 406, column: 29, scope: !13376)
!13390 = !DILocation(line: 410, column: 37, scope: !13302)
!13391 = !DILocation(line: 410, column: 41, scope: !13302)
!13392 = !DILocation(line: 410, column: 5, scope: !13302)
!13393 = !DILocation(line: 410, column: 9, scope: !13302)
!13394 = !DILocation(line: 410, column: 22, scope: !13302)
!13395 = !DILocation(line: 410, column: 27, scope: !13302)
!13396 = !DILocation(line: 411, column: 40, scope: !13302)
!13397 = !DILocation(line: 411, column: 52, scope: !13302)
!13398 = !DILocation(line: 411, column: 58, scope: !13302)
!13399 = !DILocation(line: 411, column: 63, scope: !13302)
!13400 = !DILocation(line: 411, column: 50, scope: !13302)
!13401 = !DILocation(line: 411, column: 72, scope: !13302)
!13402 = !DILocation(line: 411, column: 33, scope: !13302)
!13403 = !DILocation(line: 411, column: 5, scope: !13302)
!13404 = !DILocation(line: 411, column: 9, scope: !13302)
!13405 = !DILocation(line: 411, column: 22, scope: !13302)
!13406 = !DILocation(line: 411, column: 31, scope: !13302)
!13407 = !DILocation(line: 412, column: 9, scope: !13408)
!13408 = distinct !DILexicalBlock(scope: !13302, file: !1882, line: 412, column: 9)
!13409 = !DILocation(line: 412, column: 9, scope: !13302)
!13410 = !DILocation(line: 413, column: 14, scope: !13411)
!13411 = distinct !DILexicalBlock(scope: !13408, file: !1882, line: 412, column: 47)
!13412 = !DILocation(line: 413, column: 18, scope: !13411)
!13413 = !DILocation(line: 413, column: 29, scope: !13411)
!13414 = !DILocation(line: 413, column: 9, scope: !13411)
!13415 = !DILocation(line: 414, column: 9, scope: !13411)
!13416 = !DILocation(line: 417, column: 5, scope: !13302)
!13417 = !DILocation(line: 418, column: 1, scope: !13302)
!13418 = distinct !DISubprogram(name: "sendfile_free", scope: !1882, file: !1882, line: 571, type: !404, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2037, retainedNodes: !74)
!13419 = !DILocalVariable(name: "data", arg: 1, scope: !13418, file: !1882, line: 571, type: !5)
!13420 = !DILocation(line: 571, column: 21, scope: !13418)
!13421 = !DILocalVariable(name: "sd", scope: !13418, file: !1882, line: 573, type: !2074)
!13422 = !DILocation(line: 573, column: 28, scope: !13418)
!13423 = !DILocation(line: 573, column: 33, scope: !13418)
!13424 = !DILocation(line: 575, column: 10, scope: !13418)
!13425 = !DILocation(line: 575, column: 14, scope: !13418)
!13426 = !DILocation(line: 575, column: 25, scope: !13418)
!13427 = !DILocation(line: 575, column: 5, scope: !13418)
!13428 = !DILocation(line: 576, column: 10, scope: !13418)
!13429 = !DILocation(line: 576, column: 14, scope: !13418)
!13430 = !DILocation(line: 576, column: 27, scope: !13418)
!13431 = !DILocation(line: 576, column: 5, scope: !13418)
!13432 = !DILocation(line: 577, column: 1, scope: !13418)
!13433 = distinct !DISubprogram(name: "prepare_headers", scope: !1882, file: !1882, line: 741, type: !13434, scopeLine: 748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2037, retainedNodes: !74)
!13434 = !DISubroutineType(types: !13435)
!13435 = !{!6, !1898, !497, !2084, !6, !480, !61, !6}
!13436 = !DILocalVariable(name: "request", arg: 1, scope: !13433, file: !1882, line: 741, type: !1898)
!13437 = !DILocation(line: 741, column: 33, scope: !13433)
!13438 = !DILocalVariable(name: "return_status", arg: 2, scope: !13433, file: !1882, line: 742, type: !497)
!13439 = !DILocation(line: 742, column: 37, scope: !13433)
!13440 = !DILocalVariable(name: "fce", arg: 3, scope: !13433, file: !1882, line: 743, type: !2084)
!13441 = !DILocation(line: 743, column: 38, scope: !13433)
!13442 = !DILocalVariable(name: "size", arg: 4, scope: !13433, file: !1882, line: 744, type: !6)
!13443 = !DILocation(line: 744, column: 25, scope: !13433)
!13444 = !DILocalVariable(name: "compression_type", arg: 5, scope: !13433, file: !1882, line: 745, type: !480)
!13445 = !DILocation(line: 745, column: 30, scope: !13433)
!13446 = !DILocalVariable(name: "header_buf", arg: 6, scope: !13433, file: !1882, line: 746, type: !61)
!13447 = !DILocation(line: 746, column: 24, scope: !13433)
!13448 = !DILocalVariable(name: "header_buf_size", arg: 7, scope: !13433, file: !1882, line: 747, type: !6)
!13449 = !DILocation(line: 747, column: 25, scope: !13433)
!13450 = !DILocalVariable(name: "headers", scope: !13433, file: !1882, line: 749, type: !13451)
!13451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1985, size: 384, elements: !194)
!13452 = !DILocation(line: 749, column: 22, scope: !13433)
!13453 = !DILocation(line: 751, column: 33, scope: !13433)
!13454 = !DILocation(line: 751, column: 5, scope: !13433)
!13455 = !DILocation(line: 751, column: 14, scope: !13433)
!13456 = !DILocation(line: 751, column: 23, scope: !13433)
!13457 = !DILocation(line: 751, column: 31, scope: !13433)
!13458 = !DILocation(line: 752, column: 40, scope: !13433)
!13459 = !DILocation(line: 752, column: 5, scope: !13433)
!13460 = !DILocation(line: 752, column: 14, scope: !13433)
!13461 = !DILocation(line: 752, column: 23, scope: !13433)
!13462 = !DILocation(line: 752, column: 38, scope: !13433)
!13463 = !DILocation(line: 754, column: 5, scope: !13433)
!13464 = !DILocation(line: 754, column: 5, scope: !13465)
!13465 = distinct !DILexicalBlock(scope: !13433, file: !1882, line: 754, column: 5)
!13466 = !DILocation(line: 756, column: 9, scope: !13467)
!13467 = distinct !DILexicalBlock(scope: !13433, file: !1882, line: 756, column: 9)
!13468 = !DILocation(line: 756, column: 9, scope: !13433)
!13469 = !DILocation(line: 757, column: 9, scope: !13470)
!13470 = distinct !DILexicalBlock(scope: !13467, file: !1882, line: 756, column: 27)
!13471 = !DILocation(line: 757, column: 9, scope: !13472)
!13472 = distinct !DILexicalBlock(scope: !13470, file: !1882, line: 757, column: 9)
!13473 = !DILocation(line: 758, column: 9, scope: !13470)
!13474 = !DILocation(line: 758, column: 9, scope: !13475)
!13475 = distinct !DILexicalBlock(scope: !13470, file: !1882, line: 758, column: 9)
!13476 = !DILocation(line: 759, column: 5, scope: !13470)
!13477 = !DILocation(line: 760, column: 9, scope: !13478)
!13478 = distinct !DILexicalBlock(scope: !13467, file: !1882, line: 759, column: 12)
!13479 = !DILocation(line: 760, column: 9, scope: !13480)
!13480 = distinct !DILexicalBlock(scope: !13478, file: !1882, line: 760, column: 9)
!13481 = !DILocation(line: 763, column: 41, scope: !13433)
!13482 = !DILocation(line: 763, column: 50, scope: !13433)
!13483 = !DILocation(line: 764, column: 37, scope: !13433)
!13484 = !DILocation(line: 764, column: 49, scope: !13433)
!13485 = !DILocation(line: 763, column: 12, scope: !13433)
!13486 = !DILocation(line: 763, column: 5, scope: !13433)
!13487 = distinct !DISubprogram(name: "mmap_serve", scope: !1882, file: !1882, line: 919, type: !2031, scopeLine: 920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2037, retainedNodes: !74)
!13488 = !DILocalVariable(name: "request", arg: 1, scope: !13487, file: !1882, line: 919, type: !1898)
!13489 = !DILocation(line: 919, column: 28, scope: !13487)
!13490 = !DILocalVariable(name: "data", arg: 2, scope: !13487, file: !1882, line: 919, type: !5)
!13491 = !DILocation(line: 919, column: 43, scope: !13487)
!13492 = !DILocalVariable(name: "fce", scope: !13487, file: !1882, line: 921, type: !2084)
!13493 = !DILocation(line: 921, column: 25, scope: !13487)
!13494 = !DILocation(line: 921, column: 31, scope: !13487)
!13495 = !DILocalVariable(name: "md", scope: !13487, file: !1882, line: 922, type: !2064)
!13496 = !DILocation(line: 922, column: 24, scope: !13487)
!13497 = !DILocation(line: 922, column: 51, scope: !13487)
!13498 = !DILocation(line: 922, column: 55, scope: !13487)
!13499 = !DILocalVariable(name: "contents", scope: !13487, file: !1882, line: 923, type: !5)
!13500 = !DILocation(line: 923, column: 11, scope: !13487)
!13501 = !DILocalVariable(name: "size", scope: !13487, file: !1882, line: 924, type: !6)
!13502 = !DILocation(line: 924, column: 12, scope: !13487)
!13503 = !DILocalVariable(name: "compressed", scope: !13487, file: !1882, line: 925, type: !480)
!13504 = !DILocation(line: 925, column: 17, scope: !13487)
!13505 = !DILocation(line: 927, column: 9, scope: !13506)
!13506 = distinct !DILexicalBlock(scope: !13487, file: !1882, line: 927, column: 9)
!13507 = !DILocation(line: 927, column: 13, scope: !13506)
!13508 = !DILocation(line: 927, column: 24, scope: !13506)
!13509 = !DILocation(line: 927, column: 29, scope: !13506)
!13510 = !DILocation(line: 927, column: 33, scope: !13506)
!13511 = !DILocation(line: 927, column: 42, scope: !13506)
!13512 = !DILocation(line: 927, column: 48, scope: !13506)
!13513 = !DILocation(line: 927, column: 9, scope: !13487)
!13514 = !DILocation(line: 928, column: 20, scope: !13515)
!13515 = distinct !DILexicalBlock(scope: !13506, file: !1882, line: 927, column: 75)
!13516 = !DILocation(line: 928, column: 24, scope: !13515)
!13517 = !DILocation(line: 928, column: 35, scope: !13515)
!13518 = !DILocation(line: 928, column: 18, scope: !13515)
!13519 = !DILocation(line: 929, column: 16, scope: !13515)
!13520 = !DILocation(line: 929, column: 20, scope: !13515)
!13521 = !DILocation(line: 929, column: 31, scope: !13515)
!13522 = !DILocation(line: 929, column: 14, scope: !13515)
!13523 = !DILocation(line: 930, column: 22, scope: !13515)
!13524 = !DILocation(line: 930, column: 20, scope: !13515)
!13525 = !DILocation(line: 931, column: 5, scope: !13515)
!13526 = !DILocation(line: 932, column: 20, scope: !13527)
!13527 = distinct !DILexicalBlock(scope: !13506, file: !1882, line: 931, column: 12)
!13528 = !DILocation(line: 932, column: 24, scope: !13527)
!13529 = !DILocation(line: 932, column: 37, scope: !13527)
!13530 = !DILocation(line: 932, column: 18, scope: !13527)
!13531 = !DILocation(line: 933, column: 16, scope: !13527)
!13532 = !DILocation(line: 933, column: 20, scope: !13527)
!13533 = !DILocation(line: 933, column: 33, scope: !13527)
!13534 = !DILocation(line: 933, column: 14, scope: !13527)
!13535 = !DILocation(line: 934, column: 22, scope: !13527)
!13536 = !DILocation(line: 934, column: 20, scope: !13527)
!13537 = !DILocation(line: 937, column: 36, scope: !13487)
!13538 = !DILocation(line: 937, column: 45, scope: !13487)
!13539 = !DILocation(line: 937, column: 50, scope: !13487)
!13540 = !DILocation(line: 937, column: 62, scope: !13487)
!13541 = !DILocation(line: 937, column: 72, scope: !13487)
!13542 = !DILocation(line: 937, column: 12, scope: !13487)
!13543 = !DILocation(line: 937, column: 5, scope: !13487)
!13544 = distinct !DISubprogram(name: "mmap_init", scope: !1882, file: !1882, line: 338, type: !2104, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2037, retainedNodes: !74)
!13545 = !DILocalVariable(name: "ce", arg: 1, scope: !13544, file: !1882, line: 338, type: !2084)
!13546 = !DILocation(line: 338, column: 31, scope: !13544)
!13547 = !DILocalVariable(name: "priv", arg: 2, scope: !13544, file: !1882, line: 339, type: !2106)
!13548 = !DILocation(line: 339, column: 32, scope: !13544)
!13549 = !DILocalVariable(name: "full_path", arg: 3, scope: !13544, file: !1882, line: 340, type: !480)
!13550 = !DILocation(line: 340, column: 24, scope: !13544)
!13551 = !DILocalVariable(name: "st", arg: 4, scope: !13544, file: !1882, line: 341, type: !2121)
!13552 = !DILocation(line: 341, column: 25, scope: !13544)
!13553 = !DILocalVariable(name: "md", scope: !13544, file: !1882, line: 343, type: !2064)
!13554 = !DILocation(line: 343, column: 24, scope: !13544)
!13555 = !DILocation(line: 343, column: 51, scope: !13544)
!13556 = !DILocation(line: 343, column: 54, scope: !13544)
!13557 = !DILocalVariable(name: "file_fd", scope: !13544, file: !1882, line: 344, type: !37)
!13558 = !DILocation(line: 344, column: 9, scope: !13544)
!13559 = !DILocalVariable(name: "success", scope: !13544, file: !1882, line: 345, type: !341)
!13560 = !DILocation(line: 345, column: 10, scope: !13544)
!13561 = !DILocation(line: 347, column: 22, scope: !13544)
!13562 = !DILocation(line: 347, column: 28, scope: !13544)
!13563 = !DILocation(line: 347, column: 33, scope: !13544)
!13564 = !DILocation(line: 347, column: 37, scope: !13544)
!13565 = !DILocation(line: 347, column: 49, scope: !13544)
!13566 = !DILocation(line: 347, column: 55, scope: !13544)
!13567 = !DILocation(line: 347, column: 60, scope: !13544)
!13568 = !DILocation(line: 347, column: 47, scope: !13544)
!13569 = !DILocation(line: 347, column: 69, scope: !13544)
!13570 = !DILocation(line: 348, column: 17, scope: !13544)
!13571 = !DILocation(line: 348, column: 23, scope: !13544)
!13572 = !DILocation(line: 347, column: 15, scope: !13544)
!13573 = !DILocation(line: 347, column: 13, scope: !13544)
!13574 = !DILocation(line: 349, column: 9, scope: !13575)
!13575 = distinct !DILexicalBlock(scope: !13544, file: !1882, line: 349, column: 9)
!13576 = !DILocation(line: 349, column: 9, scope: !13544)
!13577 = !DILocation(line: 350, column: 9, scope: !13575)
!13578 = !DILocation(line: 352, column: 52, scope: !13544)
!13579 = !DILocation(line: 352, column: 56, scope: !13544)
!13580 = !DILocation(line: 353, column: 50, scope: !13544)
!13581 = !DILocation(line: 352, column: 33, scope: !13544)
!13582 = !DILocation(line: 352, column: 5, scope: !13544)
!13583 = !DILocation(line: 352, column: 9, scope: !13544)
!13584 = !DILocation(line: 352, column: 22, scope: !13544)
!13585 = !DILocation(line: 352, column: 31, scope: !13544)
!13586 = !DILocation(line: 354, column: 9, scope: !13587)
!13587 = distinct !DILexicalBlock(scope: !13544, file: !1882, line: 354, column: 9)
!13588 = !DILocation(line: 354, column: 9, scope: !13544)
!13589 = !DILocation(line: 355, column: 17, scope: !13590)
!13590 = distinct !DILexicalBlock(scope: !13587, file: !1882, line: 354, column: 60)
!13591 = !DILocation(line: 356, column: 9, scope: !13590)
!13592 = !DILocation(line: 359, column: 9, scope: !13593)
!13593 = distinct !DILexicalBlock(scope: !13544, file: !1882, line: 359, column: 9)
!13594 = !DILocation(line: 359, column: 9, scope: !13544)
!13595 = !DILocation(line: 361, column: 9, scope: !13593)
!13596 = !DILocation(line: 363, column: 37, scope: !13544)
!13597 = !DILocation(line: 363, column: 41, scope: !13544)
!13598 = !DILocation(line: 363, column: 5, scope: !13544)
!13599 = !DILocation(line: 363, column: 9, scope: !13544)
!13600 = !DILocation(line: 363, column: 22, scope: !13544)
!13601 = !DILocation(line: 363, column: 27, scope: !13544)
!13602 = !DILocation(line: 364, column: 27, scope: !13544)
!13603 = !DILocation(line: 364, column: 5, scope: !13544)
!13604 = !DILocation(line: 367, column: 17, scope: !13544)
!13605 = !DILocation(line: 367, column: 29, scope: !13544)
!13606 = !DILocation(line: 367, column: 35, scope: !13544)
!13607 = !DILocation(line: 367, column: 40, scope: !13544)
!13608 = !DILocation(line: 367, column: 27, scope: !13544)
!13609 = !DILocation(line: 366, column: 21, scope: !13544)
!13610 = !DILocation(line: 366, column: 5, scope: !13544)
!13611 = !DILocation(line: 366, column: 9, scope: !13544)
!13612 = !DILocation(line: 366, column: 19, scope: !13544)
!13613 = !DILocation(line: 369, column: 13, scope: !13544)
!13614 = !DILocation(line: 369, column: 5, scope: !13544)
!13615 = !DILabel(scope: !13544, name: "close_file", file: !1882, line: 371)
!13616 = !DILocation(line: 371, column: 1, scope: !13544)
!13617 = !DILocation(line: 372, column: 11, scope: !13544)
!13618 = !DILocation(line: 372, column: 5, scope: !13544)
!13619 = !DILocation(line: 374, column: 12, scope: !13544)
!13620 = !DILocation(line: 374, column: 5, scope: !13544)
!13621 = !DILocation(line: 375, column: 1, scope: !13544)
!13622 = distinct !DISubprogram(name: "mmap_free", scope: !1882, file: !1882, line: 562, type: !404, scopeLine: 563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2037, retainedNodes: !74)
!13623 = !DILocalVariable(name: "data", arg: 1, scope: !13622, file: !1882, line: 562, type: !5)
!13624 = !DILocation(line: 562, column: 17, scope: !13622)
!13625 = !DILocalVariable(name: "md", scope: !13622, file: !1882, line: 564, type: !2064)
!13626 = !DILocation(line: 564, column: 24, scope: !13622)
!13627 = !DILocation(line: 564, column: 29, scope: !13622)
!13628 = !DILocation(line: 566, column: 12, scope: !13622)
!13629 = !DILocation(line: 566, column: 16, scope: !13622)
!13630 = !DILocation(line: 566, column: 29, scope: !13622)
!13631 = !DILocation(line: 566, column: 39, scope: !13622)
!13632 = !DILocation(line: 566, column: 43, scope: !13622)
!13633 = !DILocation(line: 566, column: 56, scope: !13622)
!13634 = !DILocation(line: 566, column: 5, scope: !13622)
!13635 = !DILocation(line: 567, column: 10, scope: !13622)
!13636 = !DILocation(line: 567, column: 14, scope: !13622)
!13637 = !DILocation(line: 567, column: 25, scope: !13622)
!13638 = !DILocation(line: 567, column: 5, scope: !13622)
!13639 = !DILocation(line: 568, column: 1, scope: !13622)
!13640 = distinct !DISubprogram(name: "compress_cached_entry", scope: !1882, file: !1882, line: 316, type: !13641, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2037, retainedNodes: !74)
!13641 = !DISubroutineType(types: !13642)
!13642 = !{null, !2064}
!13643 = !DILocalVariable(name: "md", arg: 1, scope: !13640, file: !1882, line: 316, type: !2064)
!13644 = !DILocation(line: 316, column: 42, scope: !13640)
!13645 = !DILocation(line: 318, column: 41, scope: !13640)
!13646 = !DILocation(line: 318, column: 45, scope: !13640)
!13647 = !DILocation(line: 318, column: 58, scope: !13640)
!13648 = !DILocation(line: 318, column: 27, scope: !13640)
!13649 = !DILocation(line: 318, column: 5, scope: !13640)
!13650 = !DILocation(line: 318, column: 9, scope: !13640)
!13651 = !DILocation(line: 318, column: 20, scope: !13640)
!13652 = !DILocation(line: 318, column: 25, scope: !13640)
!13653 = !DILocation(line: 320, column: 9, scope: !13654)
!13654 = distinct !DILexicalBlock(scope: !13640, file: !1882, line: 320, column: 9)
!13655 = !DILocation(line: 320, column: 9, scope: !13640)
!13656 = !DILocation(line: 321, column: 9, scope: !13654)
!13657 = !DILocation(line: 323, column: 9, scope: !13658)
!13658 = distinct !DILexicalBlock(scope: !13640, file: !1882, line: 323, column: 9)
!13659 = !DILocation(line: 323, column: 9, scope: !13640)
!13660 = !DILocation(line: 325, column: 9, scope: !13658)
!13661 = !DILocation(line: 327, column: 31, scope: !13662)
!13662 = distinct !DILexicalBlock(scope: !13640, file: !1882, line: 327, column: 9)
!13663 = !DILocation(line: 327, column: 35, scope: !13662)
!13664 = !DILocation(line: 327, column: 46, scope: !13662)
!13665 = !DILocation(line: 327, column: 52, scope: !13662)
!13666 = !DILocation(line: 327, column: 56, scope: !13662)
!13667 = !DILocation(line: 327, column: 69, scope: !13662)
!13668 = !DILocation(line: 308, column: 36, scope: !2211, inlinedAt: !13669)
!13669 = distinct !DILocation(line: 327, column: 9, scope: !13662)
!13670 = !DILocation(line: 308, column: 64, scope: !2211, inlinedAt: !13669)
!13671 = !DILocation(line: 312, column: 14, scope: !2211, inlinedAt: !13669)
!13672 = !DILocation(line: 312, column: 28, scope: !2211, inlinedAt: !13669)
!13673 = !DILocation(line: 312, column: 54, scope: !2211, inlinedAt: !13669)
!13674 = !DILocation(line: 312, column: 52, scope: !2211, inlinedAt: !13669)
!13675 = !DILocation(line: 327, column: 9, scope: !13640)
!13676 = !DILocation(line: 328, column: 9, scope: !13662)
!13677 = !DILocation(line: 327, column: 73, scope: !13662)
!13678 = !DILabel(scope: !13640, name: "error_free_compressed", file: !1882, line: 330)
!13679 = !DILocation(line: 330, column: 1, scope: !13640)
!13680 = !DILocation(line: 331, column: 10, scope: !13640)
!13681 = !DILocation(line: 331, column: 14, scope: !13640)
!13682 = !DILocation(line: 331, column: 25, scope: !13640)
!13683 = !DILocation(line: 331, column: 5, scope: !13640)
!13684 = !DILocation(line: 332, column: 5, scope: !13640)
!13685 = !DILocation(line: 332, column: 9, scope: !13640)
!13686 = !DILocation(line: 332, column: 20, scope: !13640)
!13687 = !DILocation(line: 332, column: 29, scope: !13640)
!13688 = !DILabel(scope: !13640, name: "error_zero_out", file: !1882, line: 333)
!13689 = !DILocation(line: 333, column: 1, scope: !13640)
!13690 = !DILocation(line: 334, column: 5, scope: !13640)
!13691 = !DILocation(line: 334, column: 9, scope: !13640)
!13692 = !DILocation(line: 334, column: 20, scope: !13640)
!13693 = !DILocation(line: 334, column: 25, scope: !13640)
!13694 = !DILocation(line: 335, column: 1, scope: !13640)
!13695 = distinct !DISubprogram(name: "serve_contents_and_size", scope: !1882, file: !1882, line: 888, type: !13696, scopeLine: 890, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2037, retainedNodes: !74)
!13696 = !DISubroutineType(types: !13697)
!13697 = !{!497, !1898, !2084, !480, !5, !6}
!13698 = !DILocalVariable(name: "request", arg: 1, scope: !13695, file: !1882, line: 888, type: !1898)
!13699 = !DILocation(line: 888, column: 41, scope: !13695)
!13700 = !DILocalVariable(name: "fce", arg: 2, scope: !13695, file: !1882, line: 888, type: !2084)
!13701 = !DILocation(line: 888, column: 70, scope: !13695)
!13702 = !DILocalVariable(name: "compression_type", arg: 3, scope: !13695, file: !1882, line: 889, type: !480)
!13703 = !DILocation(line: 889, column: 25, scope: !13695)
!13704 = !DILocalVariable(name: "contents", arg: 4, scope: !13695, file: !1882, line: 889, type: !5)
!13705 = !DILocation(line: 889, column: 49, scope: !13695)
!13706 = !DILocalVariable(name: "size", arg: 5, scope: !13695, file: !1882, line: 889, type: !6)
!13707 = !DILocation(line: 889, column: 66, scope: !13695)
!13708 = !DILocalVariable(name: "headers", scope: !13695, file: !1882, line: 891, type: !8448)
!13709 = !DILocation(line: 891, column: 10, scope: !13695)
!13710 = !DILocalVariable(name: "header_len", scope: !13695, file: !1882, line: 892, type: !6)
!13711 = !DILocation(line: 892, column: 12, scope: !13695)
!13712 = !DILocalVariable(name: "return_status", scope: !13695, file: !1882, line: 893, type: !497)
!13713 = !DILocation(line: 893, column: 24, scope: !13695)
!13714 = !DILocation(line: 895, column: 34, scope: !13715)
!13715 = distinct !DILexicalBlock(scope: !13695, file: !1882, line: 895, column: 9)
!13716 = !DILocation(line: 895, column: 43, scope: !13715)
!13717 = !DILocation(line: 895, column: 48, scope: !13715)
!13718 = !DILocation(line: 895, column: 62, scope: !13715)
!13719 = !DILocation(line: 735, column: 42, scope: !13217, inlinedAt: !13720)
!13720 = distinct !DILocation(line: 895, column: 9, scope: !13715)
!13721 = !DILocation(line: 735, column: 58, scope: !13217, inlinedAt: !13720)
!13722 = !DILocation(line: 737, column: 12, scope: !13217, inlinedAt: !13720)
!13723 = !DILocation(line: 737, column: 21, scope: !13217, inlinedAt: !13720)
!13724 = !DILocation(line: 737, column: 28, scope: !13217, inlinedAt: !13720)
!13725 = !DILocation(line: 737, column: 46, scope: !13217, inlinedAt: !13720)
!13726 = !DILocation(line: 737, column: 49, scope: !13217, inlinedAt: !13720)
!13727 = !DILocation(line: 737, column: 58, scope: !13217, inlinedAt: !13720)
!13728 = !DILocation(line: 737, column: 67, scope: !13217, inlinedAt: !13720)
!13729 = !DILocation(line: 737, column: 74, scope: !13217, inlinedAt: !13720)
!13730 = !DILocation(line: 737, column: 55, scope: !13217, inlinedAt: !13720)
!13731 = !DILocation(line: 0, scope: !13217, inlinedAt: !13720)
!13732 = !DILocation(line: 895, column: 9, scope: !13695)
!13733 = !DILocation(line: 896, column: 23, scope: !13715)
!13734 = !DILocation(line: 896, column: 9, scope: !13715)
!13735 = !DILocation(line: 898, column: 34, scope: !13695)
!13736 = !DILocation(line: 898, column: 43, scope: !13695)
!13737 = !DILocation(line: 899, column: 35, scope: !13695)
!13738 = !DILocation(line: 899, column: 40, scope: !13695)
!13739 = !DILocation(line: 899, column: 46, scope: !13695)
!13740 = !DILocation(line: 900, column: 35, scope: !13695)
!13741 = !DILocation(line: 898, column: 18, scope: !13695)
!13742 = !DILocation(line: 898, column: 16, scope: !13695)
!13743 = !DILocation(line: 901, column: 9, scope: !13744)
!13744 = distinct !DILexicalBlock(scope: !13695, file: !1882, line: 901, column: 9)
!13745 = !DILocation(line: 901, column: 9, scope: !13695)
!13746 = !DILocation(line: 902, column: 9, scope: !13744)
!13747 = !DILocation(line: 904, column: 9, scope: !13748)
!13748 = distinct !DILexicalBlock(scope: !13695, file: !1882, line: 904, column: 9)
!13749 = !DILocation(line: 904, column: 18, scope: !13748)
!13750 = !DILocation(line: 904, column: 24, scope: !13748)
!13751 = !DILocation(line: 904, column: 46, scope: !13748)
!13752 = !DILocation(line: 904, column: 49, scope: !13748)
!13753 = !DILocation(line: 904, column: 63, scope: !13748)
!13754 = !DILocation(line: 904, column: 9, scope: !13695)
!13755 = !DILocation(line: 905, column: 20, scope: !13756)
!13756 = distinct !DILexicalBlock(scope: !13748, file: !1882, line: 904, column: 85)
!13757 = !DILocation(line: 905, column: 29, scope: !13756)
!13758 = !DILocation(line: 905, column: 38, scope: !13756)
!13759 = !DILocation(line: 905, column: 9, scope: !13756)
!13760 = !DILocation(line: 906, column: 5, scope: !13756)
!13761 = !DILocalVariable(name: "response_vec", scope: !13762, file: !1882, line: 907, type: !13763)
!13762 = distinct !DILexicalBlock(scope: !13748, file: !1882, line: 906, column: 12)
!13763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13764, size: 256, elements: !189)
!13764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !7152, line: 26, size: 128, elements: !13765)
!13765 = !{!13766, !13767}
!13766 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !13764, file: !7152, line: 28, baseType: !5, size: 64)
!13767 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !13764, file: !7152, line: 29, baseType: !6, size: 64, offset: 64)
!13768 = !DILocation(line: 907, column: 22, scope: !13762)
!13769 = !DILocation(line: 907, column: 39, scope: !13762)
!13770 = !DILocation(line: 908, column: 13, scope: !13762)
!13771 = !DILocation(line: 908, column: 27, scope: !13762)
!13772 = !DILocation(line: 908, column: 47, scope: !13762)
!13773 = !DILocation(line: 909, column: 13, scope: !13762)
!13774 = !DILocation(line: 909, column: 27, scope: !13762)
!13775 = !DILocation(line: 909, column: 48, scope: !13762)
!13776 = !DILocation(line: 912, column: 21, scope: !13762)
!13777 = !DILocation(line: 912, column: 30, scope: !13762)
!13778 = !DILocation(line: 912, column: 9, scope: !13762)
!13779 = !DILocation(line: 915, column: 12, scope: !13695)
!13780 = !DILocation(line: 915, column: 5, scope: !13695)
!13781 = !DILocation(line: 916, column: 1, scope: !13695)
!13782 = distinct !DISubprogram(name: "dirlist_serve", scope: !1882, file: !1882, line: 941, type: !2031, scopeLine: 942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2037, retainedNodes: !74)
!13783 = !DILocalVariable(name: "request", arg: 1, scope: !13782, file: !1882, line: 941, type: !1898)
!13784 = !DILocation(line: 941, column: 31, scope: !13782)
!13785 = !DILocalVariable(name: "data", arg: 2, scope: !13782, file: !1882, line: 941, type: !5)
!13786 = !DILocation(line: 941, column: 46, scope: !13782)
!13787 = !DILocalVariable(name: "fce", scope: !13782, file: !1882, line: 943, type: !2084)
!13788 = !DILocation(line: 943, column: 25, scope: !13782)
!13789 = !DILocation(line: 943, column: 31, scope: !13782)
!13790 = !DILocalVariable(name: "dd", scope: !13782, file: !1882, line: 944, type: !2059)
!13791 = !DILocation(line: 944, column: 28, scope: !13782)
!13792 = !DILocation(line: 944, column: 59, scope: !13782)
!13793 = !DILocation(line: 944, column: 63, scope: !13782)
!13794 = !DILocation(line: 946, column: 36, scope: !13782)
!13795 = !DILocation(line: 946, column: 45, scope: !13782)
!13796 = !DILocation(line: 946, column: 50, scope: !13782)
!13797 = !DILocation(line: 947, column: 13, scope: !13782)
!13798 = !DILocation(line: 947, column: 46, scope: !13782)
!13799 = !DILocation(line: 946, column: 12, scope: !13782)
!13800 = !DILocation(line: 946, column: 5, scope: !13782)
!13801 = distinct !DISubprogram(name: "dirlist_init", scope: !1882, file: !1882, line: 421, type: !2104, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2037, retainedNodes: !74)
!13802 = !DILocalVariable(name: "ce", arg: 1, scope: !13801, file: !1882, line: 421, type: !2084)
!13803 = !DILocation(line: 421, column: 34, scope: !13801)
!13804 = !DILocalVariable(name: "priv", arg: 2, scope: !13801, file: !1882, line: 422, type: !2106)
!13805 = !DILocation(line: 422, column: 36, scope: !13801)
!13806 = !DILocalVariable(name: "full_path", arg: 3, scope: !13801, file: !1882, line: 423, type: !480)
!13807 = !DILocation(line: 423, column: 28, scope: !13801)
!13808 = !DILocalVariable(name: "st", arg: 4, scope: !13801, file: !1882, line: 424, type: !2121)
!13809 = !DILocation(line: 424, column: 29, scope: !13801)
!13810 = !DILocalVariable(name: "dd", scope: !13801, file: !1882, line: 426, type: !2059)
!13811 = !DILocation(line: 426, column: 28, scope: !13801)
!13812 = !DILocation(line: 426, column: 59, scope: !13801)
!13813 = !DILocation(line: 426, column: 62, scope: !13801)
!13814 = !DILocalVariable(name: "vars", scope: !13801, file: !1882, line: 427, type: !12743)
!13815 = !DILocation(line: 427, column: 24, scope: !13801)
!13816 = !DILocation(line: 427, column: 31, scope: !13801)
!13817 = !DILocation(line: 428, column: 22, scope: !13801)
!13818 = !DILocation(line: 429, column: 21, scope: !13801)
!13819 = !DILocation(line: 429, column: 33, scope: !13801)
!13820 = !DILocation(line: 429, column: 39, scope: !13801)
!13821 = !DILocation(line: 429, column: 44, scope: !13801)
!13822 = !DILocation(line: 429, column: 31, scope: !13801)
!13823 = !DILocation(line: 432, column: 35, scope: !13801)
!13824 = !DILocation(line: 432, column: 41, scope: !13801)
!13825 = !DILocation(line: 432, column: 20, scope: !13801)
!13826 = !DILocation(line: 432, column: 5, scope: !13801)
!13827 = !DILocation(line: 432, column: 9, scope: !13801)
!13828 = !DILocation(line: 432, column: 18, scope: !13801)
!13829 = !DILocation(line: 433, column: 5, scope: !13801)
!13830 = !DILocation(line: 433, column: 9, scope: !13801)
!13831 = !DILocation(line: 433, column: 19, scope: !13801)
!13832 = !DILocation(line: 435, column: 14, scope: !13801)
!13833 = !DILocation(line: 435, column: 18, scope: !13801)
!13834 = !DILocation(line: 435, column: 13, scope: !13801)
!13835 = !DILocation(line: 435, column: 12, scope: !13801)
!13836 = !DILocation(line: 435, column: 5, scope: !13801)
!13837 = distinct !DISubprogram(name: "dirlist_free", scope: !1882, file: !1882, line: 580, type: !404, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2037, retainedNodes: !74)
!13838 = !DILocalVariable(name: "data", arg: 1, scope: !13837, file: !1882, line: 580, type: !5)
!13839 = !DILocation(line: 580, column: 20, scope: !13837)
!13840 = !DILocalVariable(name: "dd", scope: !13837, file: !1882, line: 582, type: !2059)
!13841 = !DILocation(line: 582, column: 28, scope: !13837)
!13842 = !DILocation(line: 582, column: 33, scope: !13837)
!13843 = !DILocation(line: 584, column: 17, scope: !13837)
!13844 = !DILocation(line: 584, column: 21, scope: !13837)
!13845 = !DILocation(line: 584, column: 5, scope: !13837)
!13846 = !DILocation(line: 585, column: 1, scope: !13837)
!13847 = distinct !DISubprogram(name: "redir_serve", scope: !1882, file: !1882, line: 951, type: !2031, scopeLine: 952, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2037, retainedNodes: !74)
!13848 = !DILocalVariable(name: "request", arg: 1, scope: !13847, file: !1882, line: 951, type: !1898)
!13849 = !DILocation(line: 951, column: 29, scope: !13847)
!13850 = !DILocalVariable(name: "data", arg: 2, scope: !13847, file: !1882, line: 951, type: !5)
!13851 = !DILocation(line: 951, column: 44, scope: !13847)
!13852 = !DILocalVariable(name: "fce", scope: !13847, file: !1882, line: 953, type: !2084)
!13853 = !DILocation(line: 953, column: 25, scope: !13847)
!13854 = !DILocation(line: 953, column: 31, scope: !13847)
!13855 = !DILocalVariable(name: "rd", scope: !13847, file: !1882, line: 954, type: !2054)
!13856 = !DILocation(line: 954, column: 25, scope: !13847)
!13857 = !DILocation(line: 954, column: 53, scope: !13847)
!13858 = !DILocation(line: 954, column: 57, scope: !13847)
!13859 = !DILocalVariable(name: "header_buf", scope: !13847, file: !1882, line: 955, type: !8448)
!13860 = !DILocation(line: 955, column: 10, scope: !13847)
!13861 = !DILocalVariable(name: "header_buf_size", scope: !13847, file: !1882, line: 956, type: !6)
!13862 = !DILocation(line: 956, column: 12, scope: !13847)
!13863 = !DILocalVariable(name: "headers", scope: !13847, file: !1882, line: 957, type: !13864)
!13864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1985, size: 256, elements: !189)
!13865 = !DILocation(line: 957, column: 22, scope: !13847)
!13866 = !DILocation(line: 959, column: 33, scope: !13847)
!13867 = !DILocation(line: 959, column: 5, scope: !13847)
!13868 = !DILocation(line: 959, column: 14, scope: !13847)
!13869 = !DILocation(line: 959, column: 23, scope: !13847)
!13870 = !DILocation(line: 959, column: 31, scope: !13847)
!13871 = !DILocation(line: 960, column: 47, scope: !13847)
!13872 = !DILocation(line: 960, column: 51, scope: !13847)
!13873 = !DILocation(line: 960, column: 40, scope: !13847)
!13874 = !DILocation(line: 960, column: 5, scope: !13847)
!13875 = !DILocation(line: 960, column: 14, scope: !13847)
!13876 = !DILocation(line: 960, column: 23, scope: !13847)
!13877 = !DILocation(line: 960, column: 38, scope: !13847)
!13878 = !DILocation(line: 962, column: 5, scope: !13847)
!13879 = !DILocation(line: 962, column: 5, scope: !13880)
!13880 = distinct !DILexicalBlock(scope: !13847, file: !1882, line: 962, column: 5)
!13881 = !DILocation(line: 963, column: 5, scope: !13847)
!13882 = !DILocation(line: 963, column: 5, scope: !13883)
!13883 = distinct !DILexicalBlock(scope: !13847, file: !1882, line: 963, column: 5)
!13884 = !DILocation(line: 965, column: 52, scope: !13847)
!13885 = !DILocation(line: 966, column: 41, scope: !13847)
!13886 = !DILocation(line: 965, column: 23, scope: !13847)
!13887 = !DILocation(line: 965, column: 21, scope: !13847)
!13888 = !DILocation(line: 967, column: 9, scope: !13889)
!13889 = distinct !DILexicalBlock(scope: !13847, file: !1882, line: 967, column: 9)
!13890 = !DILocation(line: 967, column: 9, scope: !13847)
!13891 = !DILocation(line: 968, column: 9, scope: !13889)
!13892 = !DILocalVariable(name: "response_vec", scope: !13847, file: !1882, line: 970, type: !13763)
!13893 = !DILocation(line: 970, column: 18, scope: !13847)
!13894 = !DILocation(line: 970, column: 35, scope: !13847)
!13895 = !DILocation(line: 971, column: 9, scope: !13847)
!13896 = !DILocation(line: 971, column: 23, scope: !13847)
!13897 = !DILocation(line: 971, column: 46, scope: !13847)
!13898 = !DILocation(line: 972, column: 9, scope: !13847)
!13899 = !DILocation(line: 972, column: 23, scope: !13847)
!13900 = !DILocation(line: 972, column: 27, scope: !13847)
!13901 = !DILocation(line: 972, column: 48, scope: !13847)
!13902 = !DILocation(line: 972, column: 57, scope: !13847)
!13903 = !DILocation(line: 972, column: 66, scope: !13847)
!13904 = !DILocation(line: 975, column: 17, scope: !13847)
!13905 = !DILocation(line: 975, column: 26, scope: !13847)
!13906 = !DILocation(line: 975, column: 5, scope: !13847)
!13907 = !DILocation(line: 977, column: 5, scope: !13847)
!13908 = !DILocation(line: 978, column: 1, scope: !13847)
!13909 = distinct !DISubprogram(name: "redir_init", scope: !1882, file: !1882, line: 439, type: !2104, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2037, retainedNodes: !74)
!13910 = !DILocalVariable(name: "ce", arg: 1, scope: !13909, file: !1882, line: 439, type: !2084)
!13911 = !DILocation(line: 439, column: 32, scope: !13909)
!13912 = !DILocalVariable(name: "priv", arg: 2, scope: !13909, file: !1882, line: 440, type: !2106)
!13913 = !DILocation(line: 440, column: 33, scope: !13909)
!13914 = !DILocalVariable(name: "full_path", arg: 3, scope: !13909, file: !1882, line: 441, type: !480)
!13915 = !DILocation(line: 441, column: 25, scope: !13909)
!13916 = !DILocalVariable(name: "st", arg: 4, scope: !13909, file: !1882, line: 442, type: !2121)
!13917 = !DILocation(line: 442, column: 26, scope: !13909)
!13918 = !DILocalVariable(name: "rd", scope: !13909, file: !1882, line: 444, type: !2054)
!13919 = !DILocation(line: 444, column: 25, scope: !13909)
!13920 = !DILocation(line: 444, column: 53, scope: !13909)
!13921 = !DILocation(line: 444, column: 56, scope: !13909)
!13922 = !DILocation(line: 446, column: 19, scope: !13923)
!13923 = distinct !DILexicalBlock(scope: !13909, file: !1882, line: 446, column: 9)
!13924 = !DILocation(line: 446, column: 23, scope: !13923)
!13925 = !DILocation(line: 446, column: 40, scope: !13923)
!13926 = !DILocation(line: 446, column: 52, scope: !13923)
!13927 = !DILocation(line: 446, column: 58, scope: !13923)
!13928 = !DILocation(line: 446, column: 63, scope: !13923)
!13929 = !DILocation(line: 446, column: 50, scope: !13923)
!13930 = !DILocation(line: 446, column: 9, scope: !13923)
!13931 = !DILocation(line: 446, column: 73, scope: !13923)
!13932 = !DILocation(line: 446, column: 9, scope: !13909)
!13933 = !DILocation(line: 447, column: 9, scope: !13923)
!13934 = !DILocation(line: 449, column: 5, scope: !13909)
!13935 = !DILocation(line: 449, column: 9, scope: !13909)
!13936 = !DILocation(line: 449, column: 19, scope: !13909)
!13937 = !DILocation(line: 450, column: 5, scope: !13909)
!13938 = !DILocation(line: 451, column: 1, scope: !13909)
!13939 = distinct !DISubprogram(name: "redir_free", scope: !1882, file: !1882, line: 588, type: !404, scopeLine: 589, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2037, retainedNodes: !74)
!13940 = !DILocalVariable(name: "data", arg: 1, scope: !13939, file: !1882, line: 588, type: !5)
!13941 = !DILocation(line: 588, column: 18, scope: !13939)
!13942 = !DILocalVariable(name: "rd", scope: !13939, file: !1882, line: 590, type: !2054)
!13943 = !DILocation(line: 590, column: 25, scope: !13939)
!13944 = !DILocation(line: 590, column: 30, scope: !13939)
!13945 = !DILocation(line: 592, column: 10, scope: !13939)
!13946 = !DILocation(line: 592, column: 14, scope: !13939)
!13947 = !DILocation(line: 592, column: 5, scope: !13939)
!13948 = !DILocation(line: 593, column: 1, scope: !13939)
!13949 = distinct !DISubprogram(name: "lwan_socket_init", scope: !2298, file: !2298, line: 229, type: !13950, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3057, retainedNodes: !74)
!13950 = !DISubroutineType(types: !13951)
!13951 = !{null, !13952}
!13952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13953, size: 64)
!13953 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_t", file: !262, line: 103, baseType: !13954)
!13954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_t_", file: !262, line: 275, size: 640, elements: !13955)
!13955 = !{!13956, !13977, !14002, !14008, !14009, !14019}
!13956 = !DIDerivedType(tag: DW_TAG_member, name: "url_map_trie", scope: !13954, file: !262, line: 276, baseType: !13957, size: 128)
!13957 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_t", file: !381, line: 25, baseType: !13958)
!13958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_t_", file: !381, line: 41, size: 128, elements: !13959)
!13959 = !{!13960, !13976}
!13960 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !13958, file: !381, line: 42, baseType: !13961, size: 64)
!13961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13962, size: 64)
!13962 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_node_t", file: !381, line: 26, baseType: !13963)
!13963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_node_t_", file: !381, line: 29, size: 640, elements: !13964)
!13964 = !{!13965, !13967, !13975}
!13965 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13963, file: !381, line: 30, baseType: !13966, size: 512)
!13966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13961, size: 512, elements: !391)
!13967 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !13963, file: !381, line: 31, baseType: !13968, size: 64, offset: 512)
!13968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13969, size: 64)
!13969 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_leaf_t", file: !381, line: 27, baseType: !13970)
!13970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_leaf_t_", file: !381, line: 35, size: 192, elements: !13971)
!13971 = !{!13972, !13973, !13974}
!13972 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13970, file: !381, line: 36, baseType: !61, size: 64)
!13973 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13970, file: !381, line: 37, baseType: !5, size: 64, offset: 64)
!13974 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13970, file: !381, line: 38, baseType: !13968, size: 64, offset: 128)
!13975 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !13963, file: !381, line: 32, baseType: !37, size: 32, offset: 576)
!13976 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !13958, file: !381, line: 43, baseType: !403, size: 64, offset: 64)
!13977 = !DIDerivedType(tag: DW_TAG_member, name: "conns", scope: !13954, file: !262, line: 277, baseType: !13978, size: 64, offset: 128)
!13978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13979, size: 64)
!13979 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_connection_t", file: !262, line: 112, baseType: !13980)
!13980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_connection_t_", file: !262, line: 196, size: 256, elements: !13981)
!13981 = !{!13982, !13983, !13984, !13985, !14000, !14001}
!13982 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !13980, file: !262, line: 199, baseType: !362, size: 32)
!13983 = !DIDerivedType(tag: DW_TAG_member, name: "time_to_die", scope: !13980, file: !262, line: 200, baseType: !28, size: 32, offset: 32)
!13984 = !DIDerivedType(tag: DW_TAG_member, name: "coro", scope: !13980, file: !262, line: 201, baseType: !365, size: 64, offset: 64)
!13985 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !13980, file: !262, line: 202, baseType: !13986, size: 64, offset: 128)
!13986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13987, size: 64)
!13987 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_thread_t", file: !262, line: 108, baseType: !13988)
!13988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_thread_t_", file: !262, line: 253, size: 832, elements: !13989)
!13989 = !{!13990, !13991, !13997, !13998, !13999}
!13990 = !DIDerivedType(tag: DW_TAG_member, name: "lwan", scope: !13988, file: !262, line: 254, baseType: !13952, size: 64)
!13991 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !13988, file: !262, line: 259, baseType: !13992, size: 576, offset: 64)
!13992 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13988, file: !262, line: 255, size: 576, elements: !13993)
!13993 = !{!13994, !13995, !13996}
!13994 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !13992, file: !262, line: 256, baseType: !430, size: 240)
!13995 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !13992, file: !262, line: 257, baseType: !430, size: 240, offset: 240)
!13996 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !13992, file: !262, line: 258, baseType: !322, size: 64, offset: 512)
!13997 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_fd", scope: !13988, file: !262, line: 261, baseType: !37, size: 32, offset: 640)
!13998 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_fd", scope: !13988, file: !262, line: 262, baseType: !435, size: 64, offset: 672)
!13999 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !13988, file: !262, line: 263, baseType: !437, size: 64, offset: 768)
!14000 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13980, file: !262, line: 203, baseType: !37, size: 32, offset: 192)
!14001 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13980, file: !262, line: 203, baseType: !37, size: 32, offset: 224)
!14002 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !13954, file: !262, line: 283, baseType: !14003, size: 128, offset: 192)
!14003 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13954, file: !262, line: 279, size: 128, elements: !14004)
!14004 = !{!14005, !14006, !14007}
!14005 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !14003, file: !262, line: 280, baseType: !13986, size: 64)
!14006 = !DIDerivedType(tag: DW_TAG_member, name: "max_fd", scope: !14003, file: !262, line: 281, baseType: !28, size: 32, offset: 64)
!14007 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !14003, file: !262, line: 282, baseType: !413, size: 16, offset: 96)
!14008 = !DIDerivedType(tag: DW_TAG_member, name: "module_registry", scope: !13954, file: !262, line: 285, baseType: !331, size: 64, offset: 320)
!14009 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13954, file: !262, line: 286, baseType: !14010, size: 192, offset: 384)
!14010 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_config_t", file: !262, line: 111, baseType: !14011)
!14011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_config_t_", file: !262, line: 266, size: 192, elements: !14012)
!14012 = !{!14013, !14014, !14015, !14016, !14017, !14018}
!14013 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !14011, file: !262, line: 267, baseType: !61, size: 64)
!14014 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive_timeout", scope: !14011, file: !262, line: 268, baseType: !413, size: 16, offset: 64)
!14015 = !DIDerivedType(tag: DW_TAG_member, name: "quiet", scope: !14011, file: !262, line: 269, baseType: !341, size: 8, offset: 80)
!14016 = !DIDerivedType(tag: DW_TAG_member, name: "reuse_port", scope: !14011, file: !262, line: 270, baseType: !341, size: 8, offset: 88)
!14017 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !14011, file: !262, line: 271, baseType: !28, size: 32, offset: 96)
!14018 = !DIDerivedType(tag: DW_TAG_member, name: "n_threads", scope: !14011, file: !262, line: 272, baseType: !413, size: 16, offset: 128)
!14019 = !DIDerivedType(tag: DW_TAG_member, name: "main_socket", scope: !13954, file: !262, line: 287, baseType: !37, size: 32, offset: 576)
!14020 = !DILocalVariable(name: "l", arg: 1, scope: !13949, file: !2298, line: 229, type: !13952)
!14021 = !DILocation(line: 229, column: 26, scope: !13949)
!14022 = !DILocalVariable(name: "fd", scope: !13949, file: !2298, line: 231, type: !37)
!14023 = !DILocation(line: 231, column: 9, scope: !13949)
!14024 = !DILocalVariable(name: "n", scope: !13949, file: !2298, line: 231, type: !37)
!14025 = !DILocation(line: 231, column: 13, scope: !13949)
!14026 = !DILocation(line: 233, column: 5, scope: !13949)
!14027 = !DILocation(line: 235, column: 9, scope: !13949)
!14028 = !DILocation(line: 235, column: 7, scope: !13949)
!14029 = !DILocation(line: 236, column: 9, scope: !14030)
!14030 = distinct !DILexicalBlock(scope: !13949, file: !2298, line: 236, column: 9)
!14031 = !DILocation(line: 236, column: 11, scope: !14030)
!14032 = !DILocation(line: 236, column: 9, scope: !13949)
!14033 = !DILocation(line: 237, column: 9, scope: !14034)
!14034 = distinct !DILexicalBlock(scope: !14030, file: !2298, line: 236, column: 16)
!14035 = !DILocation(line: 238, column: 16, scope: !14036)
!14036 = distinct !DILexicalBlock(scope: !14030, file: !2298, line: 238, column: 16)
!14037 = !DILocation(line: 238, column: 18, scope: !14036)
!14038 = !DILocation(line: 238, column: 16, scope: !14030)
!14039 = !DILocation(line: 239, column: 14, scope: !14040)
!14040 = distinct !DILexicalBlock(scope: !14036, file: !2298, line: 238, column: 24)
!14041 = !DILocation(line: 239, column: 12, scope: !14040)
!14042 = !DILocation(line: 240, column: 5, scope: !14040)
!14043 = !DILocation(line: 241, column: 36, scope: !14044)
!14044 = distinct !DILexicalBlock(scope: !14036, file: !2298, line: 240, column: 12)
!14045 = !DILocation(line: 241, column: 14, scope: !14044)
!14046 = !DILocation(line: 241, column: 12, scope: !14044)
!14047 = !DILocation(line: 244, column: 5, scope: !13949)
!14048 = !DILocation(line: 244, column: 5, scope: !14049)
!14049 = distinct !DILexicalBlock(scope: !14050, file: !2298, line: 244, column: 5)
!14050 = distinct !DILexicalBlock(scope: !13949, file: !2298, line: 244, column: 5)
!14051 = !DILocation(line: 244, column: 5, scope: !14050)
!14052 = !DILocation(line: 247, column: 5, scope: !13949)
!14053 = !DILocation(line: 247, column: 5, scope: !14054)
!14054 = distinct !DILexicalBlock(scope: !14055, file: !2298, line: 247, column: 5)
!14055 = distinct !DILexicalBlock(scope: !13949, file: !2298, line: 247, column: 5)
!14056 = !DILocation(line: 247, column: 5, scope: !14055)
!14057 = !DILocation(line: 249, column: 5, scope: !13949)
!14058 = !DILocation(line: 249, column: 5, scope: !14059)
!14059 = distinct !DILexicalBlock(scope: !14060, file: !2298, line: 249, column: 5)
!14060 = distinct !DILexicalBlock(scope: !13949, file: !2298, line: 249, column: 5)
!14061 = !DILocation(line: 249, column: 5, scope: !14060)
!14062 = !DILocation(line: 252, column: 22, scope: !13949)
!14063 = !DILocation(line: 252, column: 5, scope: !13949)
!14064 = !DILocation(line: 252, column: 8, scope: !13949)
!14065 = !DILocation(line: 252, column: 20, scope: !13949)
!14066 = !DILocation(line: 253, column: 1, scope: !13949)
!14067 = distinct !DISubprogram(name: "setup_socket_from_systemd", scope: !2298, file: !2298, line: 59, type: !14068, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3057, retainedNodes: !74)
!14068 = !DISubroutineType(types: !14069)
!14069 = !{!37}
!14070 = !DILocalVariable(name: "fd", scope: !14067, file: !2298, line: 61, type: !37)
!14071 = !DILocation(line: 61, column: 9, scope: !14067)
!14072 = !DILocation(line: 63, column: 28, scope: !14073)
!14073 = distinct !DILexicalBlock(scope: !14067, file: !2298, line: 63, column: 9)
!14074 = !DILocation(line: 63, column: 10, scope: !14073)
!14075 = !DILocation(line: 63, column: 9, scope: !14067)
!14076 = !DILocation(line: 64, column: 9, scope: !14073)
!14077 = !DILocalVariable(name: "flags", scope: !14067, file: !2298, line: 67, type: !37)
!14078 = !DILocation(line: 67, column: 9, scope: !14067)
!14079 = !DILocation(line: 67, column: 23, scope: !14067)
!14080 = !DILocation(line: 67, column: 17, scope: !14067)
!14081 = !DILocation(line: 68, column: 9, scope: !14082)
!14082 = distinct !DILexicalBlock(scope: !14067, file: !2298, line: 68, column: 9)
!14083 = !DILocation(line: 68, column: 15, scope: !14082)
!14084 = !DILocation(line: 68, column: 9, scope: !14067)
!14085 = !DILocation(line: 69, column: 9, scope: !14082)
!14086 = !DILocation(line: 70, column: 15, scope: !14087)
!14087 = distinct !DILexicalBlock(scope: !14067, file: !2298, line: 70, column: 9)
!14088 = !DILocation(line: 70, column: 28, scope: !14087)
!14089 = !DILocation(line: 70, column: 34, scope: !14087)
!14090 = !DILocation(line: 70, column: 9, scope: !14087)
!14091 = !DILocation(line: 70, column: 48, scope: !14087)
!14092 = !DILocation(line: 70, column: 9, scope: !14067)
!14093 = !DILocation(line: 71, column: 9, scope: !14087)
!14094 = !DILocation(line: 73, column: 12, scope: !14067)
!14095 = !DILocation(line: 73, column: 5, scope: !14067)
!14096 = distinct !DISubprogram(name: "setup_socket_normally", scope: !2298, file: !2298, line: 200, type: !14097, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3057, retainedNodes: !74)
!14097 = !DISubroutineType(types: !14098)
!14098 = !{!37, !13952}
!14099 = !DILocalVariable(name: "l", arg: 1, scope: !14096, file: !2298, line: 200, type: !13952)
!14100 = !DILocation(line: 200, column: 31, scope: !14096)
!14101 = !DILocalVariable(name: "node", scope: !14096, file: !2298, line: 202, type: !61)
!14102 = !DILocation(line: 202, column: 11, scope: !14096)
!14103 = !DILocalVariable(name: "port", scope: !14096, file: !2298, line: 202, type: !61)
!14104 = !DILocation(line: 202, column: 18, scope: !14096)
!14105 = !DILocalVariable(name: "listener", scope: !14096, file: !2298, line: 203, type: !61)
!14106 = !DILocation(line: 203, column: 11, scope: !14096)
!14107 = !DILocalVariable(name: "__old", scope: !14108, file: !2298, line: 203, type: !480)
!14108 = distinct !DILexicalBlock(scope: !14096, file: !2298, line: 203, column: 22)
!14109 = !DILocation(line: 203, column: 22, scope: !14108)
!14110 = !DILocalVariable(name: "__len", scope: !14108, file: !2298, line: 203, type: !6)
!14111 = !DILocalVariable(name: "__new", scope: !14108, file: !2298, line: 203, type: !61)
!14112 = !DILocalVariable(name: "family", scope: !14096, file: !2298, line: 204, type: !1508)
!14113 = !DILocation(line: 204, column: 17, scope: !14096)
!14114 = !DILocation(line: 204, column: 41, scope: !14096)
!14115 = !DILocation(line: 204, column: 26, scope: !14096)
!14116 = !DILocation(line: 205, column: 9, scope: !14117)
!14117 = distinct !DILexicalBlock(scope: !14096, file: !2298, line: 205, column: 9)
!14118 = !DILocation(line: 205, column: 16, scope: !14117)
!14119 = !DILocation(line: 205, column: 9, scope: !14096)
!14120 = !DILocation(line: 206, column: 9, scope: !14117)
!14121 = !DILocalVariable(name: "addrs", scope: !14096, file: !2298, line: 208, type: !14122)
!14122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14123, size: 64)
!14123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "addrinfo", file: !14124, line: 565, size: 384, elements: !14125)
!14124 = !DIFile(filename: "/usr/include/netdb.h", directory: "", checksumkind: CSK_MD5, checksum: "dd84cdc2a8dcb66c232d326e9ca8b469")
!14125 = !{!14126, !14127, !14128, !14129, !14130, !14131, !14137, !14138}
!14126 = !DIDerivedType(tag: DW_TAG_member, name: "ai_flags", scope: !14123, file: !14124, line: 567, baseType: !37, size: 32)
!14127 = !DIDerivedType(tag: DW_TAG_member, name: "ai_family", scope: !14123, file: !14124, line: 568, baseType: !37, size: 32, offset: 32)
!14128 = !DIDerivedType(tag: DW_TAG_member, name: "ai_socktype", scope: !14123, file: !14124, line: 569, baseType: !37, size: 32, offset: 64)
!14129 = !DIDerivedType(tag: DW_TAG_member, name: "ai_protocol", scope: !14123, file: !14124, line: 570, baseType: !37, size: 32, offset: 96)
!14130 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addrlen", scope: !14123, file: !14124, line: 571, baseType: !3079, size: 32, offset: 128)
!14131 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addr", scope: !14123, file: !14124, line: 572, baseType: !14132, size: 64, offset: 192)
!14132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14133, size: 64)
!14133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !1505, line: 180, size: 128, elements: !14134)
!14134 = !{!14135, !14136}
!14135 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !14133, file: !1505, line: 182, baseType: !1508, size: 16)
!14136 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !14133, file: !1505, line: 183, baseType: !152, size: 112, offset: 16)
!14137 = !DIDerivedType(tag: DW_TAG_member, name: "ai_canonname", scope: !14123, file: !14124, line: 573, baseType: !61, size: 64, offset: 256)
!14138 = !DIDerivedType(tag: DW_TAG_member, name: "ai_next", scope: !14123, file: !14124, line: 574, baseType: !14122, size: 64, offset: 320)
!14139 = !DILocation(line: 208, column: 22, scope: !14096)
!14140 = !DILocalVariable(name: "hints", scope: !14096, file: !2298, line: 209, type: !14123)
!14141 = !DILocation(line: 209, column: 21, scope: !14096)
!14142 = !DILocation(line: 209, column: 29, scope: !14096)
!14143 = !DILocation(line: 210, column: 22, scope: !14096)
!14144 = !DILocalVariable(name: "ret", scope: !14096, file: !2298, line: 215, type: !37)
!14145 = !DILocation(line: 215, column: 9, scope: !14096)
!14146 = !DILocation(line: 215, column: 27, scope: !14096)
!14147 = !DILocation(line: 215, column: 33, scope: !14096)
!14148 = !DILocation(line: 215, column: 15, scope: !14096)
!14149 = !DILocation(line: 216, column: 9, scope: !14150)
!14150 = distinct !DILexicalBlock(scope: !14096, file: !2298, line: 216, column: 9)
!14151 = !DILocation(line: 216, column: 9, scope: !14096)
!14152 = !DILocation(line: 217, column: 9, scope: !14150)
!14153 = !DILocalVariable(name: "fd", scope: !14096, file: !2298, line: 219, type: !37)
!14154 = !DILocation(line: 219, column: 9, scope: !14096)
!14155 = !DILocation(line: 219, column: 40, scope: !14096)
!14156 = !DILocation(line: 219, column: 47, scope: !14096)
!14157 = !DILocation(line: 219, column: 50, scope: !14096)
!14158 = !DILocation(line: 219, column: 57, scope: !14096)
!14159 = !DILocation(line: 219, column: 14, scope: !14096)
!14160 = !DILocation(line: 220, column: 18, scope: !14096)
!14161 = !DILocation(line: 220, column: 5, scope: !14096)
!14162 = !DILocation(line: 221, column: 12, scope: !14096)
!14163 = !DILocation(line: 221, column: 5, scope: !14096)
!14164 = distinct !DISubprogram(name: "parse_listener", scope: !2298, file: !2298, line: 130, type: !14165, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3057, retainedNodes: !74)
!14165 = !DISubroutineType(types: !14166)
!14166 = !{!1508, !61, !2694, !2694}
!14167 = !DILocalVariable(name: "listener", arg: 1, scope: !14164, file: !2298, line: 130, type: !61)
!14168 = !DILocation(line: 130, column: 22, scope: !14164)
!14169 = !DILocalVariable(name: "node", arg: 2, scope: !14164, file: !2298, line: 130, type: !2694)
!14170 = !DILocation(line: 130, column: 39, scope: !14164)
!14171 = !DILocalVariable(name: "port", arg: 3, scope: !14164, file: !2298, line: 130, type: !2694)
!14172 = !DILocation(line: 130, column: 52, scope: !14164)
!14173 = !DILocation(line: 132, column: 10, scope: !14174)
!14174 = distinct !DILexicalBlock(scope: !14164, file: !2298, line: 132, column: 9)
!14175 = !DILocation(line: 132, column: 9, scope: !14174)
!14176 = !DILocation(line: 132, column: 19, scope: !14174)
!14177 = !DILocation(line: 132, column: 9, scope: !14164)
!14178 = !DILocation(line: 133, column: 36, scope: !14174)
!14179 = !DILocation(line: 133, column: 46, scope: !14174)
!14180 = !DILocation(line: 133, column: 52, scope: !14174)
!14181 = !DILocation(line: 133, column: 16, scope: !14174)
!14182 = !DILocation(line: 133, column: 9, scope: !14174)
!14183 = !DILocation(line: 134, column: 32, scope: !14164)
!14184 = !DILocation(line: 134, column: 42, scope: !14164)
!14185 = !DILocation(line: 134, column: 48, scope: !14164)
!14186 = !DILocation(line: 134, column: 12, scope: !14164)
!14187 = !DILocation(line: 134, column: 5, scope: !14164)
!14188 = !DILocation(line: 135, column: 1, scope: !14164)
!14189 = distinct !DISubprogram(name: "bind_and_listen_addrinfos", scope: !2298, file: !2298, line: 175, type: !14190, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3057, retainedNodes: !74)
!14190 = !DISubroutineType(types: !14191)
!14191 = !{!37, !14122, !341}
!14192 = !DILocalVariable(name: "addrs", arg: 1, scope: !14189, file: !2298, line: 175, type: !14122)
!14193 = !DILocation(line: 175, column: 44, scope: !14189)
!14194 = !DILocalVariable(name: "reuse_port", arg: 2, scope: !14189, file: !2298, line: 175, type: !341)
!14195 = !DILocation(line: 175, column: 56, scope: !14189)
!14196 = !DILocalVariable(name: "addr", scope: !14189, file: !2298, line: 177, type: !14197)
!14197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14198, size: 64)
!14198 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14123)
!14199 = !DILocation(line: 177, column: 28, scope: !14189)
!14200 = !DILocation(line: 180, column: 17, scope: !14201)
!14201 = distinct !DILexicalBlock(scope: !14189, file: !2298, line: 180, column: 5)
!14202 = !DILocation(line: 180, column: 15, scope: !14201)
!14203 = !DILocation(line: 180, column: 10, scope: !14201)
!14204 = !DILocation(line: 180, column: 24, scope: !14205)
!14205 = distinct !DILexicalBlock(scope: !14201, file: !2298, line: 180, column: 5)
!14206 = !DILocation(line: 180, column: 5, scope: !14201)
!14207 = !DILocalVariable(name: "fd", scope: !14208, file: !2298, line: 181, type: !37)
!14208 = distinct !DILexicalBlock(scope: !14205, file: !2298, line: 180, column: 52)
!14209 = !DILocation(line: 181, column: 13, scope: !14208)
!14210 = !DILocation(line: 181, column: 25, scope: !14208)
!14211 = !DILocation(line: 181, column: 31, scope: !14208)
!14212 = !DILocation(line: 182, column: 13, scope: !14208)
!14213 = !DILocation(line: 182, column: 19, scope: !14208)
!14214 = !DILocation(line: 182, column: 31, scope: !14208)
!14215 = !DILocation(line: 182, column: 47, scope: !14208)
!14216 = !DILocation(line: 182, column: 53, scope: !14208)
!14217 = !DILocation(line: 181, column: 18, scope: !14208)
!14218 = !DILocation(line: 183, column: 13, scope: !14219)
!14219 = distinct !DILexicalBlock(scope: !14208, file: !2298, line: 183, column: 13)
!14220 = !DILocation(line: 183, column: 16, scope: !14219)
!14221 = !DILocation(line: 183, column: 13, scope: !14208)
!14222 = !DILocation(line: 184, column: 13, scope: !14219)
!14223 = !DILocation(line: 186, column: 9, scope: !14208)
!14224 = !DILocation(line: 186, column: 9, scope: !14225)
!14225 = distinct !DILexicalBlock(scope: !14226, file: !2298, line: 186, column: 9)
!14226 = distinct !DILexicalBlock(scope: !14208, file: !2298, line: 186, column: 9)
!14227 = !DILocation(line: 186, column: 9, scope: !14226)
!14228 = !DILocation(line: 187, column: 9, scope: !14208)
!14229 = !DILocation(line: 187, column: 9, scope: !14230)
!14230 = distinct !DILexicalBlock(scope: !14231, file: !2298, line: 187, column: 9)
!14231 = distinct !DILexicalBlock(scope: !14208, file: !2298, line: 187, column: 9)
!14232 = !DILocation(line: 187, column: 9, scope: !14231)
!14233 = !DILocation(line: 190, column: 19, scope: !14234)
!14234 = distinct !DILexicalBlock(scope: !14208, file: !2298, line: 190, column: 13)
!14235 = !DILocation(line: 190, column: 23, scope: !14234)
!14236 = !DILocation(line: 190, column: 29, scope: !14234)
!14237 = !DILocation(line: 190, column: 38, scope: !14234)
!14238 = !DILocation(line: 190, column: 44, scope: !14234)
!14239 = !DILocation(line: 190, column: 14, scope: !14234)
!14240 = !DILocation(line: 190, column: 13, scope: !14208)
!14241 = !DILocation(line: 191, column: 36, scope: !14234)
!14242 = !DILocation(line: 191, column: 40, scope: !14234)
!14243 = !DILocation(line: 191, column: 20, scope: !14234)
!14244 = !DILocation(line: 191, column: 13, scope: !14234)
!14245 = !DILocation(line: 193, column: 15, scope: !14208)
!14246 = !DILocation(line: 193, column: 9, scope: !14208)
!14247 = !DILocation(line: 194, column: 5, scope: !14208)
!14248 = !DILocation(line: 180, column: 37, scope: !14205)
!14249 = !DILocation(line: 180, column: 43, scope: !14205)
!14250 = !DILocation(line: 180, column: 35, scope: !14205)
!14251 = !DILocation(line: 180, column: 5, scope: !14205)
!14252 = distinct !{!14252, !14206, !14253, !3203}
!14253 = !DILocation(line: 194, column: 5, scope: !14201)
!14254 = !DILocation(line: 196, column: 5, scope: !14189)
!14255 = distinct !DISubprogram(name: "listen_addrinfo", scope: !2298, file: !2298, line: 138, type: !14256, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3057, retainedNodes: !74)
!14256 = !DISubroutineType(types: !14257)
!14257 = !{!37, !37, !14197}
!14258 = !DILocalVariable(name: "fd", arg: 1, scope: !14255, file: !2298, line: 138, type: !37)
!14259 = !DILocation(line: 138, column: 21, scope: !14255)
!14260 = !DILocalVariable(name: "addr", arg: 2, scope: !14255, file: !2298, line: 138, type: !14197)
!14261 = !DILocation(line: 138, column: 48, scope: !14255)
!14262 = !DILocation(line: 140, column: 16, scope: !14263)
!14263 = distinct !DILexicalBlock(scope: !14255, file: !2298, line: 140, column: 9)
!14264 = !DILocation(line: 140, column: 20, scope: !14263)
!14265 = !DILocation(line: 140, column: 9, scope: !14263)
!14266 = !DILocation(line: 140, column: 40, scope: !14263)
!14267 = !DILocation(line: 140, column: 9, scope: !14255)
!14268 = !DILocation(line: 141, column: 9, scope: !14263)
!14269 = !DILocalVariable(name: "host_buf", scope: !14255, file: !2298, line: 143, type: !14270)
!14270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 8200, elements: !14271)
!14271 = !{!14272}
!14272 = !DISubrange(count: 1025)
!14273 = !DILocation(line: 143, column: 10, scope: !14255)
!14274 = !DILocalVariable(name: "serv_buf", scope: !14255, file: !2298, line: 143, type: !181)
!14275 = !DILocation(line: 143, column: 32, scope: !14255)
!14276 = !DILocalVariable(name: "ret", scope: !14255, file: !2298, line: 144, type: !37)
!14277 = !DILocation(line: 144, column: 9, scope: !14255)
!14278 = !DILocation(line: 144, column: 27, scope: !14255)
!14279 = !DILocation(line: 144, column: 33, scope: !14255)
!14280 = !DILocation(line: 144, column: 42, scope: !14255)
!14281 = !DILocation(line: 144, column: 48, scope: !14255)
!14282 = !DILocation(line: 144, column: 60, scope: !14255)
!14283 = !DILocation(line: 145, column: 23, scope: !14255)
!14284 = !DILocation(line: 144, column: 15, scope: !14255)
!14285 = !DILocation(line: 146, column: 9, scope: !14286)
!14286 = distinct !DILexicalBlock(scope: !14255, file: !2298, line: 146, column: 9)
!14287 = !DILocation(line: 146, column: 9, scope: !14255)
!14288 = !DILocation(line: 147, column: 9, scope: !14286)
!14289 = !DILocation(line: 149, column: 9, scope: !14290)
!14290 = distinct !DILexicalBlock(scope: !14255, file: !2298, line: 149, column: 9)
!14291 = !DILocation(line: 149, column: 15, scope: !14290)
!14292 = !DILocation(line: 149, column: 25, scope: !14290)
!14293 = !DILocation(line: 149, column: 9, scope: !14255)
!14294 = !DILocation(line: 150, column: 9, scope: !14290)
!14295 = !DILocation(line: 152, column: 9, scope: !14290)
!14296 = !DILocation(line: 154, column: 12, scope: !14255)
!14297 = !DILocation(line: 154, column: 5, scope: !14255)
!14298 = distinct !DISubprogram(name: "get_backlog_size", scope: !2298, file: !2298, line: 38, type: !14068, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3057, retainedNodes: !74)
!14299 = !DILocalVariable(name: "backlog", scope: !14298, file: !2298, line: 41, type: !37)
!14300 = !DILocation(line: 41, column: 9, scope: !14298)
!14301 = !DILocalVariable(name: "somaxconn", scope: !14298, file: !2298, line: 45, type: !14302)
!14302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14303, size: 64)
!14303 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5673, line: 7, baseType: !14304)
!14304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5675, line: 49, size: 1728, elements: !14305)
!14305 = !{!14306, !14307, !14308, !14309, !14310, !14311, !14312, !14313, !14314, !14315, !14316, !14317, !14318, !14319, !14321, !14322, !14323, !14324, !14325, !14326, !14327, !14328, !14329, !14330, !14331, !14332, !14333, !14334, !14335}
!14306 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !14304, file: !5675, line: 51, baseType: !37, size: 32)
!14307 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !14304, file: !5675, line: 54, baseType: !61, size: 64, offset: 64)
!14308 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !14304, file: !5675, line: 55, baseType: !61, size: 64, offset: 128)
!14309 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !14304, file: !5675, line: 56, baseType: !61, size: 64, offset: 192)
!14310 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !14304, file: !5675, line: 57, baseType: !61, size: 64, offset: 256)
!14311 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !14304, file: !5675, line: 58, baseType: !61, size: 64, offset: 320)
!14312 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !14304, file: !5675, line: 59, baseType: !61, size: 64, offset: 384)
!14313 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !14304, file: !5675, line: 60, baseType: !61, size: 64, offset: 448)
!14314 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !14304, file: !5675, line: 61, baseType: !61, size: 64, offset: 512)
!14315 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !14304, file: !5675, line: 64, baseType: !61, size: 64, offset: 576)
!14316 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !14304, file: !5675, line: 65, baseType: !61, size: 64, offset: 640)
!14317 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !14304, file: !5675, line: 66, baseType: !61, size: 64, offset: 704)
!14318 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !14304, file: !5675, line: 68, baseType: !5690, size: 64, offset: 768)
!14319 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !14304, file: !5675, line: 70, baseType: !14320, size: 64, offset: 832)
!14320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14304, size: 64)
!14321 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !14304, file: !5675, line: 72, baseType: !37, size: 32, offset: 896)
!14322 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !14304, file: !5675, line: 73, baseType: !37, size: 32, offset: 928)
!14323 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !14304, file: !5675, line: 74, baseType: !463, size: 64, offset: 960)
!14324 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !14304, file: !5675, line: 77, baseType: !413, size: 16, offset: 1024)
!14325 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !14304, file: !5675, line: 78, baseType: !4708, size: 8, offset: 1040)
!14326 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !14304, file: !5675, line: 79, baseType: !1556, size: 8, offset: 1048)
!14327 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !14304, file: !5675, line: 81, baseType: !5701, size: 64, offset: 1088)
!14328 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !14304, file: !5675, line: 89, baseType: !5704, size: 64, offset: 1152)
!14329 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !14304, file: !5675, line: 91, baseType: !5706, size: 64, offset: 1216)
!14330 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !14304, file: !5675, line: 92, baseType: !5709, size: 64, offset: 1280)
!14331 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !14304, file: !5675, line: 93, baseType: !14320, size: 64, offset: 1344)
!14332 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !14304, file: !5675, line: 94, baseType: !5, size: 64, offset: 1408)
!14333 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !14304, file: !5675, line: 95, baseType: !6, size: 64, offset: 1472)
!14334 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !14304, file: !5675, line: 96, baseType: !37, size: 32, offset: 1536)
!14335 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !14304, file: !5675, line: 98, baseType: !1672, size: 160, offset: 1568)
!14336 = !DILocation(line: 45, column: 11, scope: !14298)
!14337 = !DILocation(line: 47, column: 17, scope: !14298)
!14338 = !DILocation(line: 47, column: 15, scope: !14298)
!14339 = !DILocation(line: 48, column: 9, scope: !14340)
!14340 = distinct !DILexicalBlock(scope: !14298, file: !2298, line: 48, column: 9)
!14341 = !DILocation(line: 48, column: 9, scope: !14298)
!14342 = !DILocalVariable(name: "tmp", scope: !14343, file: !2298, line: 49, type: !37)
!14343 = distinct !DILexicalBlock(scope: !14340, file: !2298, line: 48, column: 20)
!14344 = !DILocation(line: 49, column: 13, scope: !14343)
!14345 = !DILocation(line: 50, column: 20, scope: !14346)
!14346 = distinct !DILexicalBlock(scope: !14343, file: !2298, line: 50, column: 13)
!14347 = !DILocation(line: 50, column: 13, scope: !14346)
!14348 = !DILocation(line: 50, column: 43, scope: !14346)
!14349 = !DILocation(line: 50, column: 13, scope: !14343)
!14350 = !DILocation(line: 51, column: 23, scope: !14346)
!14351 = !DILocation(line: 51, column: 21, scope: !14346)
!14352 = !DILocation(line: 51, column: 13, scope: !14346)
!14353 = !DILocation(line: 52, column: 16, scope: !14343)
!14354 = !DILocation(line: 52, column: 9, scope: !14343)
!14355 = !DILocation(line: 53, column: 5, scope: !14343)
!14356 = !DILocation(line: 55, column: 12, scope: !14298)
!14357 = !DILocation(line: 55, column: 5, scope: !14298)
!14358 = distinct !DISubprogram(name: "parse_listener_ipv6", scope: !2298, file: !2298, line: 108, type: !14165, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3057, retainedNodes: !74)
!14359 = !DILocalVariable(name: "listener", arg: 1, scope: !14358, file: !2298, line: 108, type: !61)
!14360 = !DILocation(line: 108, column: 27, scope: !14358)
!14361 = !DILocalVariable(name: "node", arg: 2, scope: !14358, file: !2298, line: 108, type: !2694)
!14362 = !DILocation(line: 108, column: 44, scope: !14358)
!14363 = !DILocalVariable(name: "port", arg: 3, scope: !14358, file: !2298, line: 108, type: !2694)
!14364 = !DILocation(line: 108, column: 57, scope: !14358)
!14365 = !DILocalVariable(name: "last_colon", scope: !14358, file: !2298, line: 110, type: !61)
!14366 = !DILocation(line: 110, column: 11, scope: !14358)
!14367 = !DILocation(line: 110, column: 32, scope: !14358)
!14368 = !DILocation(line: 110, column: 24, scope: !14358)
!14369 = !DILocation(line: 111, column: 10, scope: !14370)
!14370 = distinct !DILexicalBlock(scope: !14358, file: !2298, line: 111, column: 9)
!14371 = !DILocation(line: 111, column: 9, scope: !14358)
!14372 = !DILocation(line: 112, column: 9, scope: !14370)
!14373 = !DILocation(line: 114, column: 11, scope: !14374)
!14374 = distinct !DILexicalBlock(scope: !14358, file: !2298, line: 114, column: 9)
!14375 = !DILocation(line: 114, column: 22, scope: !14374)
!14376 = !DILocation(line: 114, column: 9, scope: !14374)
!14377 = !DILocation(line: 114, column: 27, scope: !14374)
!14378 = !DILocation(line: 114, column: 9, scope: !14358)
!14379 = !DILocation(line: 116, column: 11, scope: !14380)
!14380 = distinct !DILexicalBlock(scope: !14374, file: !2298, line: 114, column: 35)
!14381 = !DILocation(line: 116, column: 22, scope: !14380)
!14382 = !DILocation(line: 116, column: 27, scope: !14380)
!14383 = !DILocation(line: 117, column: 17, scope: !14380)
!14384 = !DILocation(line: 117, column: 26, scope: !14380)
!14385 = !DILocation(line: 117, column: 10, scope: !14380)
!14386 = !DILocation(line: 117, column: 15, scope: !14380)
!14387 = !DILocation(line: 118, column: 17, scope: !14380)
!14388 = !DILocation(line: 118, column: 28, scope: !14380)
!14389 = !DILocation(line: 118, column: 10, scope: !14380)
!14390 = !DILocation(line: 118, column: 15, scope: !14380)
!14391 = !DILocation(line: 119, column: 5, scope: !14380)
!14392 = !DILocation(line: 121, column: 9, scope: !14393)
!14393 = distinct !DILexicalBlock(scope: !14374, file: !2298, line: 119, column: 12)
!14394 = !DILocation(line: 121, column: 25, scope: !14393)
!14395 = !DILocation(line: 121, column: 18, scope: !14393)
!14396 = !DILocation(line: 121, column: 35, scope: !14393)
!14397 = !DILocation(line: 121, column: 40, scope: !14393)
!14398 = !DILocation(line: 122, column: 17, scope: !14393)
!14399 = !DILocation(line: 122, column: 26, scope: !14393)
!14400 = !DILocation(line: 122, column: 10, scope: !14393)
!14401 = !DILocation(line: 122, column: 15, scope: !14393)
!14402 = !DILocation(line: 123, column: 10, scope: !14393)
!14403 = !DILocation(line: 123, column: 15, scope: !14393)
!14404 = !DILocation(line: 126, column: 5, scope: !14358)
!14405 = !DILocation(line: 127, column: 1, scope: !14358)
!14406 = distinct !DISubprogram(name: "parse_listener_ipv4", scope: !2298, file: !2298, line: 77, type: !14165, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3057, retainedNodes: !74)
!14407 = !DILocalVariable(name: "listener", arg: 1, scope: !14406, file: !2298, line: 77, type: !61)
!14408 = !DILocation(line: 77, column: 27, scope: !14406)
!14409 = !DILocalVariable(name: "node", arg: 2, scope: !14406, file: !2298, line: 77, type: !2694)
!14410 = !DILocation(line: 77, column: 44, scope: !14406)
!14411 = !DILocalVariable(name: "port", arg: 3, scope: !14406, file: !2298, line: 77, type: !2694)
!14412 = !DILocation(line: 77, column: 57, scope: !14406)
!14413 = !DILocalVariable(name: "colon", scope: !14406, file: !2298, line: 79, type: !61)
!14414 = !DILocation(line: 79, column: 11, scope: !14406)
!14415 = !DILocation(line: 79, column: 27, scope: !14406)
!14416 = !DILocation(line: 79, column: 19, scope: !14406)
!14417 = !DILocation(line: 80, column: 10, scope: !14418)
!14418 = distinct !DILexicalBlock(scope: !14406, file: !2298, line: 80, column: 9)
!14419 = !DILocation(line: 80, column: 9, scope: !14406)
!14420 = !DILocation(line: 81, column: 10, scope: !14421)
!14421 = distinct !DILexicalBlock(scope: !14418, file: !2298, line: 80, column: 17)
!14422 = !DILocation(line: 81, column: 15, scope: !14421)
!14423 = !DILocation(line: 82, column: 21, scope: !14424)
!14424 = distinct !DILexicalBlock(scope: !14421, file: !2298, line: 82, column: 13)
!14425 = !DILocation(line: 82, column: 14, scope: !14424)
!14426 = !DILocation(line: 82, column: 13, scope: !14421)
!14427 = !DILocation(line: 84, column: 14, scope: !14428)
!14428 = distinct !DILexicalBlock(scope: !14424, file: !2298, line: 82, column: 37)
!14429 = !DILocation(line: 84, column: 19, scope: !14428)
!14430 = !DILocation(line: 85, column: 9, scope: !14428)
!14431 = !DILocation(line: 87, column: 21, scope: !14432)
!14432 = distinct !DILexicalBlock(scope: !14424, file: !2298, line: 85, column: 16)
!14433 = !DILocation(line: 87, column: 14, scope: !14432)
!14434 = !DILocation(line: 87, column: 19, scope: !14432)
!14435 = !DILocation(line: 89, column: 5, scope: !14421)
!14436 = !DILocation(line: 94, column: 10, scope: !14437)
!14437 = distinct !DILexicalBlock(scope: !14418, file: !2298, line: 89, column: 12)
!14438 = !DILocation(line: 94, column: 16, scope: !14437)
!14439 = !DILocation(line: 95, column: 17, scope: !14437)
!14440 = !DILocation(line: 95, column: 10, scope: !14437)
!14441 = !DILocation(line: 95, column: 15, scope: !14437)
!14442 = !DILocation(line: 96, column: 17, scope: !14437)
!14443 = !DILocation(line: 96, column: 23, scope: !14437)
!14444 = !DILocation(line: 96, column: 10, scope: !14437)
!14445 = !DILocation(line: 96, column: 15, scope: !14437)
!14446 = !DILocation(line: 98, column: 22, scope: !14447)
!14447 = distinct !DILexicalBlock(scope: !14437, file: !2298, line: 98, column: 13)
!14448 = !DILocation(line: 98, column: 21, scope: !14447)
!14449 = !DILocation(line: 98, column: 14, scope: !14447)
!14450 = !DILocation(line: 98, column: 13, scope: !14437)
!14451 = !DILocation(line: 100, column: 14, scope: !14452)
!14452 = distinct !DILexicalBlock(scope: !14447, file: !2298, line: 98, column: 34)
!14453 = !DILocation(line: 100, column: 19, scope: !14452)
!14454 = !DILocation(line: 101, column: 9, scope: !14452)
!14455 = !DILocation(line: 104, column: 5, scope: !14406)
!14456 = distinct !DISubprogram(name: "lwan_status_init", scope: !2365, file: !2365, line: 48, type: !14457, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2361, retainedNodes: !74)
!14457 = !DISubroutineType(types: !14458)
!14458 = !{null, !14459}
!14459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14460, size: 64)
!14460 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_t", file: !262, line: 103, baseType: !14461)
!14461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_t_", file: !262, line: 275, size: 640, elements: !14462)
!14462 = !{!14463, !14484, !14509, !14515, !14516, !14526}
!14463 = !DIDerivedType(tag: DW_TAG_member, name: "url_map_trie", scope: !14461, file: !262, line: 276, baseType: !14464, size: 128)
!14464 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_t", file: !381, line: 25, baseType: !14465)
!14465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_t_", file: !381, line: 41, size: 128, elements: !14466)
!14466 = !{!14467, !14483}
!14467 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !14465, file: !381, line: 42, baseType: !14468, size: 64)
!14468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14469, size: 64)
!14469 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_node_t", file: !381, line: 26, baseType: !14470)
!14470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_node_t_", file: !381, line: 29, size: 640, elements: !14471)
!14471 = !{!14472, !14474, !14482}
!14472 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14470, file: !381, line: 30, baseType: !14473, size: 512)
!14473 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14468, size: 512, elements: !391)
!14474 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !14470, file: !381, line: 31, baseType: !14475, size: 64, offset: 512)
!14475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14476, size: 64)
!14476 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_leaf_t", file: !381, line: 27, baseType: !14477)
!14477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_leaf_t_", file: !381, line: 35, size: 192, elements: !14478)
!14478 = !{!14479, !14480, !14481}
!14479 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14477, file: !381, line: 36, baseType: !61, size: 64)
!14480 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14477, file: !381, line: 37, baseType: !5, size: 64, offset: 64)
!14481 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14477, file: !381, line: 38, baseType: !14475, size: 64, offset: 128)
!14482 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !14470, file: !381, line: 32, baseType: !37, size: 32, offset: 576)
!14483 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !14465, file: !381, line: 43, baseType: !403, size: 64, offset: 64)
!14484 = !DIDerivedType(tag: DW_TAG_member, name: "conns", scope: !14461, file: !262, line: 277, baseType: !14485, size: 64, offset: 128)
!14485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14486, size: 64)
!14486 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_connection_t", file: !262, line: 112, baseType: !14487)
!14487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_connection_t_", file: !262, line: 196, size: 256, elements: !14488)
!14488 = !{!14489, !14490, !14491, !14492, !14507, !14508}
!14489 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !14487, file: !262, line: 199, baseType: !362, size: 32)
!14490 = !DIDerivedType(tag: DW_TAG_member, name: "time_to_die", scope: !14487, file: !262, line: 200, baseType: !28, size: 32, offset: 32)
!14491 = !DIDerivedType(tag: DW_TAG_member, name: "coro", scope: !14487, file: !262, line: 201, baseType: !365, size: 64, offset: 64)
!14492 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !14487, file: !262, line: 202, baseType: !14493, size: 64, offset: 128)
!14493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14494, size: 64)
!14494 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_thread_t", file: !262, line: 108, baseType: !14495)
!14495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_thread_t_", file: !262, line: 253, size: 832, elements: !14496)
!14496 = !{!14497, !14498, !14504, !14505, !14506}
!14497 = !DIDerivedType(tag: DW_TAG_member, name: "lwan", scope: !14495, file: !262, line: 254, baseType: !14459, size: 64)
!14498 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !14495, file: !262, line: 259, baseType: !14499, size: 576, offset: 64)
!14499 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !14495, file: !262, line: 255, size: 576, elements: !14500)
!14500 = !{!14501, !14502, !14503}
!14501 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !14499, file: !262, line: 256, baseType: !430, size: 240)
!14502 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !14499, file: !262, line: 257, baseType: !430, size: 240, offset: 240)
!14503 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !14499, file: !262, line: 258, baseType: !322, size: 64, offset: 512)
!14504 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_fd", scope: !14495, file: !262, line: 261, baseType: !37, size: 32, offset: 640)
!14505 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_fd", scope: !14495, file: !262, line: 262, baseType: !435, size: 64, offset: 672)
!14506 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !14495, file: !262, line: 263, baseType: !437, size: 64, offset: 768)
!14507 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !14487, file: !262, line: 203, baseType: !37, size: 32, offset: 192)
!14508 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14487, file: !262, line: 203, baseType: !37, size: 32, offset: 224)
!14509 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !14461, file: !262, line: 283, baseType: !14510, size: 128, offset: 192)
!14510 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !14461, file: !262, line: 279, size: 128, elements: !14511)
!14511 = !{!14512, !14513, !14514}
!14512 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !14510, file: !262, line: 280, baseType: !14493, size: 64)
!14513 = !DIDerivedType(tag: DW_TAG_member, name: "max_fd", scope: !14510, file: !262, line: 281, baseType: !28, size: 32, offset: 64)
!14514 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !14510, file: !262, line: 282, baseType: !413, size: 16, offset: 96)
!14515 = !DIDerivedType(tag: DW_TAG_member, name: "module_registry", scope: !14461, file: !262, line: 285, baseType: !331, size: 64, offset: 320)
!14516 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !14461, file: !262, line: 286, baseType: !14517, size: 192, offset: 384)
!14517 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_config_t", file: !262, line: 111, baseType: !14518)
!14518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_config_t_", file: !262, line: 266, size: 192, elements: !14519)
!14519 = !{!14520, !14521, !14522, !14523, !14524, !14525}
!14520 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !14518, file: !262, line: 267, baseType: !61, size: 64)
!14521 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive_timeout", scope: !14518, file: !262, line: 268, baseType: !413, size: 16, offset: 64)
!14522 = !DIDerivedType(tag: DW_TAG_member, name: "quiet", scope: !14518, file: !262, line: 269, baseType: !341, size: 8, offset: 80)
!14523 = !DIDerivedType(tag: DW_TAG_member, name: "reuse_port", scope: !14518, file: !262, line: 270, baseType: !341, size: 8, offset: 88)
!14524 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !14518, file: !262, line: 271, baseType: !28, size: 32, offset: 96)
!14525 = !DIDerivedType(tag: DW_TAG_member, name: "n_threads", scope: !14518, file: !262, line: 272, baseType: !413, size: 16, offset: 128)
!14526 = !DIDerivedType(tag: DW_TAG_member, name: "main_socket", scope: !14461, file: !262, line: 287, baseType: !37, size: 32, offset: 576)
!14527 = !DILocalVariable(name: "l", arg: 1, scope: !14456, file: !2365, line: 48, type: !14459)
!14528 = !DILocation(line: 48, column: 26, scope: !14456)
!14529 = !DILocation(line: 53, column: 11, scope: !14456)
!14530 = !DILocation(line: 54, column: 12, scope: !14456)
!14531 = !DILocation(line: 56, column: 1, scope: !14456)
!14532 = distinct !DISubprogram(name: "lwan_status_shutdown", scope: !2365, file: !2365, line: 59, type: !14457, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2361, retainedNodes: !74)
!14533 = !DILocalVariable(name: "l", arg: 1, scope: !14532, file: !2365, line: 59, type: !14459)
!14534 = !DILocation(line: 59, column: 30, scope: !14532)
!14535 = !DILocation(line: 61, column: 1, scope: !14532)
!14536 = distinct !DISubprogram(name: "lwan_status_debug_debug", scope: !2365, file: !2365, line: 188, type: !14537, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2361, retainedNodes: !74)
!14537 = !DISubroutineType(types: !14538)
!14538 = !{null, !480, !3054, !480, !480, null}
!14539 = !DILocalVariable(name: "file", arg: 1, scope: !14536, file: !2365, line: 188, type: !480)
!14540 = !DILocation(line: 188, column: 1, scope: !14536)
!14541 = !DILocalVariable(name: "line", arg: 2, scope: !14536, file: !2365, line: 188, type: !3054)
!14542 = !DILocalVariable(name: "func", arg: 3, scope: !14536, file: !2365, line: 188, type: !480)
!14543 = !DILocalVariable(name: "fmt", arg: 4, scope: !14536, file: !2365, line: 188, type: !480)
!14544 = !DILocation(line: 188, column: 1, scope: !14545)
!14545 = distinct !DILexicalBlock(scope: !14536, file: !2365, line: 188, column: 1)
!14546 = !DILocalVariable(name: "values", scope: !14547, file: !2365, line: 188, type: !14548)
!14547 = distinct !DILexicalBlock(scope: !14545, file: !2365, line: 188, column: 1)
!14548 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2698, line: 52, baseType: !14549)
!14549 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !5725, line: 14, baseType: !14550)
!14550 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !14551, baseType: !14552)
!14551 = !DIFile(filename: "common/lwan-status.c", directory: "/home/raj/lwan")
!14552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14553, size: 192, elements: !1557)
!14553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", size: 192, elements: !14554)
!14554 = !{!14555, !14556, !14557, !14558}
!14555 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !14553, file: !14551, line: 188, baseType: !28, size: 32)
!14556 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !14553, file: !14551, line: 188, baseType: !28, size: 32, offset: 32)
!14557 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !14553, file: !14551, line: 188, baseType: !5, size: 64, offset: 64)
!14558 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !14553, file: !14551, line: 188, baseType: !5, size: 64, offset: 128)
!14559 = !DILocation(line: 188, column: 1, scope: !14547)
!14560 = distinct !DISubprogram(name: "status_out", scope: !2365, file: !2365, line: 141, type: !14561, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2361, retainedNodes: !74)
!14561 = !DISubroutineType(types: !14562)
!14562 = !{null, !480, !3054, !480, !2406, !480, !14563}
!14563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14553, size: 64)
!14564 = !DILocalVariable(name: "file", arg: 1, scope: !14560, file: !2365, line: 141, type: !480)
!14565 = !DILocation(line: 141, column: 24, scope: !14560)
!14566 = !DILocalVariable(name: "line", arg: 2, scope: !14560, file: !2365, line: 141, type: !3054)
!14567 = !DILocation(line: 141, column: 40, scope: !14560)
!14568 = !DILocalVariable(name: "func", arg: 3, scope: !14560, file: !2365, line: 141, type: !480)
!14569 = !DILocation(line: 141, column: 58, scope: !14560)
!14570 = !DILocalVariable(name: "type", arg: 4, scope: !14560, file: !2365, line: 142, type: !2406)
!14571 = !DILocation(line: 142, column: 32, scope: !14560)
!14572 = !DILocalVariable(name: "fmt", arg: 5, scope: !14560, file: !2365, line: 142, type: !480)
!14573 = !DILocation(line: 142, column: 50, scope: !14560)
!14574 = !DILocalVariable(name: "values", arg: 6, scope: !14560, file: !2365, line: 142, type: !14563)
!14575 = !DILocation(line: 142, column: 63, scope: !14560)
!14576 = !DILocalVariable(name: "output", scope: !14560, file: !2365, line: 145, type: !61)
!14577 = !DILocation(line: 145, column: 11, scope: !14560)
!14578 = !DILocalVariable(name: "len", scope: !14560, file: !2365, line: 146, type: !37)
!14579 = !DILocation(line: 146, column: 9, scope: !14560)
!14580 = !DILocation(line: 148, column: 30, scope: !14560)
!14581 = !DILocation(line: 148, column: 35, scope: !14560)
!14582 = !DILocation(line: 148, column: 11, scope: !14560)
!14583 = !DILocation(line: 148, column: 9, scope: !14560)
!14584 = !DILocation(line: 149, column: 9, scope: !14585)
!14585 = distinct !DILexicalBlock(scope: !14560, file: !2365, line: 149, column: 9)
!14586 = !DILocation(line: 149, column: 13, scope: !14585)
!14587 = !DILocation(line: 149, column: 9, scope: !14560)
!14588 = !DILocation(line: 153, column: 24, scope: !14589)
!14589 = distinct !DILexicalBlock(scope: !14585, file: !2365, line: 149, column: 19)
!14590 = !DILocation(line: 153, column: 30, scope: !14589)
!14591 = !DILocation(line: 153, column: 36, scope: !14589)
!14592 = !DILocation(line: 153, column: 42, scope: !14589)
!14593 = !DILocation(line: 153, column: 48, scope: !14589)
!14594 = !DILocation(line: 153, column: 64, scope: !14589)
!14595 = !DILocation(line: 153, column: 56, scope: !14589)
!14596 = !DILocation(line: 153, column: 9, scope: !14589)
!14597 = !DILocation(line: 155, column: 14, scope: !14589)
!14598 = !DILocation(line: 155, column: 9, scope: !14589)
!14599 = !DILocation(line: 156, column: 5, scope: !14589)
!14600 = !DILocation(line: 157, column: 1, scope: !14560)
!14601 = distinct !DISubprogram(name: "status_out_msg", scope: !2365, file: !2365, line: 99, type: !14602, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2361, retainedNodes: !74)
!14602 = !DISubroutineType(types: !14603)
!14603 = !{null, !480, !3054, !480, !2406, !480, !6}
!14604 = !DILocalVariable(name: "file", arg: 1, scope: !14601, file: !2365, line: 99, type: !480)
!14605 = !DILocation(line: 99, column: 28, scope: !14601)
!14606 = !DILocalVariable(name: "line", arg: 2, scope: !14601, file: !2365, line: 99, type: !3054)
!14607 = !DILocation(line: 99, column: 44, scope: !14601)
!14608 = !DILocalVariable(name: "func", arg: 3, scope: !14601, file: !2365, line: 99, type: !480)
!14609 = !DILocation(line: 99, column: 62, scope: !14601)
!14610 = !DILocalVariable(name: "type", arg: 4, scope: !14601, file: !2365, line: 100, type: !2406)
!14611 = !DILocation(line: 100, column: 36, scope: !14601)
!14612 = !DILocalVariable(name: "msg", arg: 5, scope: !14601, file: !2365, line: 100, type: !480)
!14613 = !DILocation(line: 100, column: 54, scope: !14601)
!14614 = !DILocalVariable(name: "msg_len", arg: 6, scope: !14601, file: !2365, line: 100, type: !6)
!14615 = !DILocation(line: 100, column: 66, scope: !14601)
!14616 = !DILocalVariable(name: "error_number", scope: !14601, file: !2365, line: 103, type: !37)
!14617 = !DILocation(line: 103, column: 9, scope: !14601)
!14618 = !DILocation(line: 103, column: 24, scope: !14601)
!14619 = !DILocalVariable(name: "start_len", scope: !14601, file: !2365, line: 104, type: !6)
!14620 = !DILocation(line: 104, column: 12, scope: !14601)
!14621 = !DILocalVariable(name: "end_len", scope: !14601, file: !2365, line: 104, type: !6)
!14622 = !DILocation(line: 104, column: 23, scope: !14601)
!14623 = !DILocalVariable(name: "start_color", scope: !14601, file: !2365, line: 105, type: !480)
!14624 = !DILocation(line: 105, column: 17, scope: !14601)
!14625 = !DILocation(line: 105, column: 56, scope: !14601)
!14626 = !DILocation(line: 105, column: 31, scope: !14601)
!14627 = !DILocalVariable(name: "end_color", scope: !14601, file: !2365, line: 106, type: !480)
!14628 = !DILocation(line: 106, column: 17, scope: !14601)
!14629 = !DILocation(line: 106, column: 52, scope: !14601)
!14630 = !DILocation(line: 106, column: 29, scope: !14601)
!14631 = !DILocation(line: 108, column: 9, scope: !14632)
!14632 = distinct !DILexicalBlock(scope: !14601, file: !2365, line: 108, column: 9)
!14633 = !DILocation(line: 108, column: 9, scope: !14601)
!14634 = !DILocation(line: 109, column: 9, scope: !14632)
!14635 = !DILocation(line: 112, column: 13, scope: !14601)
!14636 = !DILocation(line: 112, column: 45, scope: !14601)
!14637 = !DILocation(line: 112, column: 5, scope: !14601)
!14638 = !DILocation(line: 113, column: 13, scope: !14601)
!14639 = !DILocation(line: 113, column: 54, scope: !14601)
!14640 = !DILocation(line: 113, column: 45, scope: !14601)
!14641 = !DILocation(line: 113, column: 61, scope: !14601)
!14642 = !DILocation(line: 113, column: 5, scope: !14601)
!14643 = !DILocation(line: 114, column: 13, scope: !14601)
!14644 = !DILocation(line: 114, column: 45, scope: !14601)
!14645 = !DILocation(line: 114, column: 5, scope: !14601)
!14646 = !DILocation(line: 115, column: 13, scope: !14601)
!14647 = !DILocation(line: 115, column: 5, scope: !14601)
!14648 = !DILocation(line: 118, column: 12, scope: !14601)
!14649 = !DILocation(line: 118, column: 25, scope: !14601)
!14650 = !DILocation(line: 118, column: 39, scope: !14601)
!14651 = !DILocation(line: 118, column: 5, scope: !14601)
!14652 = !DILocation(line: 119, column: 12, scope: !14601)
!14653 = !DILocation(line: 119, column: 17, scope: !14601)
!14654 = !DILocation(line: 119, column: 29, scope: !14601)
!14655 = !DILocation(line: 119, column: 5, scope: !14601)
!14656 = !DILocation(line: 121, column: 9, scope: !14657)
!14657 = distinct !DILexicalBlock(scope: !14601, file: !2365, line: 121, column: 9)
!14658 = !DILocation(line: 121, column: 14, scope: !14657)
!14659 = !DILocation(line: 121, column: 9, scope: !14601)
!14660 = !DILocalVariable(name: "buffer", scope: !14661, file: !2365, line: 122, type: !11142)
!14661 = distinct !DILexicalBlock(scope: !14657, file: !2365, line: 121, column: 31)
!14662 = !DILocation(line: 122, column: 14, scope: !14661)
!14663 = !DILocalVariable(name: "error_msg", scope: !14661, file: !2365, line: 123, type: !61)
!14664 = !DILocation(line: 123, column: 15, scope: !14661)
!14665 = !DILocation(line: 123, column: 38, scope: !14661)
!14666 = !DILocation(line: 123, column: 52, scope: !14661)
!14667 = !DILocation(line: 123, column: 27, scope: !14661)
!14668 = !DILocation(line: 124, column: 20, scope: !14661)
!14669 = !DILocation(line: 124, column: 9, scope: !14661)
!14670 = !DILocation(line: 125, column: 20, scope: !14661)
!14671 = !DILocation(line: 125, column: 9, scope: !14661)
!14672 = !DILocation(line: 126, column: 16, scope: !14661)
!14673 = !DILocation(line: 126, column: 34, scope: !14661)
!14674 = !DILocation(line: 126, column: 27, scope: !14661)
!14675 = !DILocation(line: 126, column: 49, scope: !14661)
!14676 = !DILocation(line: 126, column: 9, scope: !14661)
!14677 = !DILocation(line: 127, column: 5, scope: !14661)
!14678 = !DILocation(line: 129, column: 16, scope: !14601)
!14679 = !DILocation(line: 129, column: 5, scope: !14601)
!14680 = !DILocation(line: 130, column: 12, scope: !14601)
!14681 = !DILocation(line: 130, column: 23, scope: !14601)
!14682 = !DILocation(line: 130, column: 35, scope: !14601)
!14683 = !DILocation(line: 130, column: 5, scope: !14601)
!14684 = !DILocation(line: 131, column: 17, scope: !14601)
!14685 = !DILocation(line: 131, column: 5, scope: !14601)
!14686 = !DILocation(line: 133, column: 9, scope: !14687)
!14687 = distinct !DILexicalBlock(scope: !14601, file: !2365, line: 133, column: 9)
!14688 = !DILocation(line: 133, column: 9, scope: !14601)
!14689 = !DILocation(line: 134, column: 9, scope: !14687)
!14690 = !DILocation(line: 135, column: 1, scope: !14601)
!14691 = distinct !DISubprogram(name: "get_color_start_for_type", scope: !2365, file: !2365, line: 64, type: !2404, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2361, retainedNodes: !74)
!14692 = !DILocalVariable(name: "type", arg: 1, scope: !14691, file: !2365, line: 64, type: !2406)
!14693 = !DILocation(line: 64, column: 45, scope: !14691)
!14694 = !DILocalVariable(name: "len_out", arg: 2, scope: !14691, file: !2365, line: 64, type: !62)
!14695 = !DILocation(line: 64, column: 59, scope: !14691)
!14696 = !DILocalVariable(name: "retval", scope: !14691, file: !2365, line: 66, type: !480)
!14697 = !DILocation(line: 66, column: 17, scope: !14691)
!14698 = !DILocation(line: 68, column: 9, scope: !14699)
!14699 = distinct !DILexicalBlock(scope: !14691, file: !2365, line: 68, column: 9)
!14700 = !DILocation(line: 68, column: 14, scope: !14699)
!14701 = !DILocation(line: 68, column: 9, scope: !14691)
!14702 = !DILocation(line: 69, column: 16, scope: !14699)
!14703 = !DILocation(line: 69, column: 9, scope: !14699)
!14704 = !DILocation(line: 70, column: 14, scope: !14705)
!14705 = distinct !DILexicalBlock(scope: !14699, file: !2365, line: 70, column: 14)
!14706 = !DILocation(line: 70, column: 19, scope: !14705)
!14707 = !DILocation(line: 70, column: 14, scope: !14699)
!14708 = !DILocation(line: 71, column: 16, scope: !14705)
!14709 = !DILocation(line: 71, column: 9, scope: !14705)
!14710 = !DILocation(line: 72, column: 14, scope: !14711)
!14711 = distinct !DILexicalBlock(scope: !14705, file: !2365, line: 72, column: 14)
!14712 = !DILocation(line: 72, column: 19, scope: !14711)
!14713 = !DILocation(line: 72, column: 14, scope: !14705)
!14714 = !DILocation(line: 73, column: 16, scope: !14711)
!14715 = !DILocation(line: 73, column: 9, scope: !14711)
!14716 = !DILocation(line: 74, column: 14, scope: !14717)
!14717 = distinct !DILexicalBlock(scope: !14711, file: !2365, line: 74, column: 14)
!14718 = !DILocation(line: 74, column: 19, scope: !14717)
!14719 = !DILocation(line: 74, column: 14, scope: !14711)
!14720 = !DILocation(line: 75, column: 16, scope: !14717)
!14721 = !DILocation(line: 75, column: 9, scope: !14717)
!14722 = !DILocation(line: 76, column: 14, scope: !14723)
!14723 = distinct !DILexicalBlock(scope: !14717, file: !2365, line: 76, column: 14)
!14724 = !DILocation(line: 76, column: 19, scope: !14723)
!14725 = !DILocation(line: 76, column: 14, scope: !14717)
!14726 = !DILocation(line: 77, column: 16, scope: !14723)
!14727 = !DILocation(line: 77, column: 9, scope: !14723)
!14728 = !DILocation(line: 79, column: 16, scope: !14723)
!14729 = !DILocation(line: 81, column: 23, scope: !14691)
!14730 = !DILocation(line: 81, column: 16, scope: !14691)
!14731 = !DILocation(line: 81, column: 6, scope: !14691)
!14732 = !DILocation(line: 81, column: 14, scope: !14691)
!14733 = !DILocation(line: 83, column: 12, scope: !14691)
!14734 = !DILocation(line: 83, column: 5, scope: !14691)
!14735 = !DILocalVariable(name: "type", arg: 1, scope: !2403, file: !2365, line: 87, type: !2406)
!14736 = !DILocation(line: 87, column: 43, scope: !2403)
!14737 = !DILocalVariable(name: "len_out", arg: 2, scope: !2403, file: !2365, line: 88, type: !62)
!14738 = !DILocation(line: 88, column: 33, scope: !2403)
!14739 = !DILocation(line: 91, column: 23, scope: !2403)
!14740 = !DILocation(line: 91, column: 16, scope: !2403)
!14741 = !DILocation(line: 91, column: 6, scope: !2403)
!14742 = !DILocation(line: 91, column: 14, scope: !2403)
!14743 = !DILocation(line: 92, column: 12, scope: !2403)
!14744 = !DILocation(line: 92, column: 5, scope: !2403)
!14745 = distinct !DISubprogram(name: "lwan_status_info_debug", scope: !2365, file: !2365, line: 191, type: !14537, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2361, retainedNodes: !74)
!14746 = !DILocalVariable(name: "file", arg: 1, scope: !14745, file: !2365, line: 191, type: !480)
!14747 = !DILocation(line: 191, column: 1, scope: !14745)
!14748 = !DILocalVariable(name: "line", arg: 2, scope: !14745, file: !2365, line: 191, type: !3054)
!14749 = !DILocalVariable(name: "func", arg: 3, scope: !14745, file: !2365, line: 191, type: !480)
!14750 = !DILocalVariable(name: "fmt", arg: 4, scope: !14745, file: !2365, line: 191, type: !480)
!14751 = !DILocation(line: 191, column: 1, scope: !14752)
!14752 = distinct !DILexicalBlock(scope: !14745, file: !2365, line: 191, column: 1)
!14753 = !DILocalVariable(name: "values", scope: !14754, file: !2365, line: 191, type: !14548)
!14754 = distinct !DILexicalBlock(scope: !14752, file: !2365, line: 191, column: 1)
!14755 = !DILocation(line: 191, column: 1, scope: !14754)
!14756 = distinct !DISubprogram(name: "lwan_status_warning_debug", scope: !2365, file: !2365, line: 192, type: !14537, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2361, retainedNodes: !74)
!14757 = !DILocalVariable(name: "file", arg: 1, scope: !14756, file: !2365, line: 192, type: !480)
!14758 = !DILocation(line: 192, column: 1, scope: !14756)
!14759 = !DILocalVariable(name: "line", arg: 2, scope: !14756, file: !2365, line: 192, type: !3054)
!14760 = !DILocalVariable(name: "func", arg: 3, scope: !14756, file: !2365, line: 192, type: !480)
!14761 = !DILocalVariable(name: "fmt", arg: 4, scope: !14756, file: !2365, line: 192, type: !480)
!14762 = !DILocation(line: 192, column: 1, scope: !14763)
!14763 = distinct !DILexicalBlock(scope: !14756, file: !2365, line: 192, column: 1)
!14764 = !DILocalVariable(name: "values", scope: !14765, file: !2365, line: 192, type: !14548)
!14765 = distinct !DILexicalBlock(scope: !14763, file: !2365, line: 192, column: 1)
!14766 = !DILocation(line: 192, column: 1, scope: !14765)
!14767 = distinct !DISubprogram(name: "lwan_status_error_debug", scope: !2365, file: !2365, line: 193, type: !14537, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2361, retainedNodes: !74)
!14768 = !DILocalVariable(name: "file", arg: 1, scope: !14767, file: !2365, line: 193, type: !480)
!14769 = !DILocation(line: 193, column: 1, scope: !14767)
!14770 = !DILocalVariable(name: "line", arg: 2, scope: !14767, file: !2365, line: 193, type: !3054)
!14771 = !DILocalVariable(name: "func", arg: 3, scope: !14767, file: !2365, line: 193, type: !480)
!14772 = !DILocalVariable(name: "fmt", arg: 4, scope: !14767, file: !2365, line: 193, type: !480)
!14773 = !DILocation(line: 193, column: 1, scope: !14774)
!14774 = distinct !DILexicalBlock(scope: !14767, file: !2365, line: 193, column: 1)
!14775 = !DILocalVariable(name: "values", scope: !14776, file: !2365, line: 193, type: !14548)
!14776 = distinct !DILexicalBlock(scope: !14774, file: !2365, line: 193, column: 1)
!14777 = !DILocation(line: 193, column: 1, scope: !14776)
!14778 = distinct !DISubprogram(name: "lwan_status_perror_debug", scope: !2365, file: !2365, line: 194, type: !14537, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2361, retainedNodes: !74)
!14779 = !DILocalVariable(name: "file", arg: 1, scope: !14778, file: !2365, line: 194, type: !480)
!14780 = !DILocation(line: 194, column: 1, scope: !14778)
!14781 = !DILocalVariable(name: "line", arg: 2, scope: !14778, file: !2365, line: 194, type: !3054)
!14782 = !DILocalVariable(name: "func", arg: 3, scope: !14778, file: !2365, line: 194, type: !480)
!14783 = !DILocalVariable(name: "fmt", arg: 4, scope: !14778, file: !2365, line: 194, type: !480)
!14784 = !DILocation(line: 194, column: 1, scope: !14785)
!14785 = distinct !DILexicalBlock(scope: !14778, file: !2365, line: 194, column: 1)
!14786 = !DILocalVariable(name: "values", scope: !14787, file: !2365, line: 194, type: !14548)
!14787 = distinct !DILexicalBlock(scope: !14785, file: !2365, line: 194, column: 1)
!14788 = !DILocation(line: 194, column: 1, scope: !14787)
!14789 = distinct !DISubprogram(name: "lwan_status_critical_debug", scope: !2365, file: !2365, line: 196, type: !14537, scopeLine: 196, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2361, retainedNodes: !74)
!14790 = !DILocalVariable(name: "file", arg: 1, scope: !14789, file: !2365, line: 196, type: !480)
!14791 = !DILocation(line: 196, column: 1, scope: !14789)
!14792 = !DILocalVariable(name: "line", arg: 2, scope: !14789, file: !2365, line: 196, type: !3054)
!14793 = !DILocalVariable(name: "func", arg: 3, scope: !14789, file: !2365, line: 196, type: !480)
!14794 = !DILocalVariable(name: "fmt", arg: 4, scope: !14789, file: !2365, line: 196, type: !480)
!14795 = !DILocation(line: 196, column: 1, scope: !14796)
!14796 = distinct !DILexicalBlock(scope: !14789, file: !2365, line: 196, column: 1)
!14797 = !DILocalVariable(name: "values", scope: !14798, file: !2365, line: 196, type: !14548)
!14798 = distinct !DILexicalBlock(scope: !14796, file: !2365, line: 196, column: 1)
!14799 = !DILocation(line: 196, column: 1, scope: !14798)
!14800 = !DILocation(line: 196, column: 1, scope: !14801)
!14801 = distinct !DILexicalBlock(scope: !14789, file: !2365, line: 196, column: 1)
!14802 = distinct !DISubprogram(name: "lwan_status_critical_perror_debug", scope: !2365, file: !2365, line: 197, type: !14537, scopeLine: 197, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2361, retainedNodes: !74)
!14803 = !DILocalVariable(name: "file", arg: 1, scope: !14802, file: !2365, line: 197, type: !480)
!14804 = !DILocation(line: 197, column: 1, scope: !14802)
!14805 = !DILocalVariable(name: "line", arg: 2, scope: !14802, file: !2365, line: 197, type: !3054)
!14806 = !DILocalVariable(name: "func", arg: 3, scope: !14802, file: !2365, line: 197, type: !480)
!14807 = !DILocalVariable(name: "fmt", arg: 4, scope: !14802, file: !2365, line: 197, type: !480)
!14808 = !DILocation(line: 197, column: 1, scope: !14809)
!14809 = distinct !DILexicalBlock(scope: !14802, file: !2365, line: 197, column: 1)
!14810 = !DILocalVariable(name: "values", scope: !14811, file: !2365, line: 197, type: !14548)
!14811 = distinct !DILexicalBlock(scope: !14809, file: !2365, line: 197, column: 1)
!14812 = !DILocation(line: 197, column: 1, scope: !14811)
!14813 = !DILocation(line: 197, column: 1, scope: !14814)
!14814 = distinct !DILexicalBlock(scope: !14802, file: !2365, line: 197, column: 1)
!14815 = distinct !DISubprogram(name: "lwan_tables_init", scope: !2438, file: !2438, line: 35, type: !1578, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2434, retainedNodes: !74)
!14816 = !DILocation(line: 37, column: 9, scope: !14817)
!14817 = distinct !DILexicalBlock(scope: !14815, file: !2438, line: 37, column: 9)
!14818 = !DILocation(line: 37, column: 9, scope: !14815)
!14819 = !DILocation(line: 38, column: 9, scope: !14817)
!14820 = !DILocation(line: 40, column: 5, scope: !14815)
!14821 = !DILocalVariable(name: "uncompressed_length", scope: !14815, file: !2438, line: 41, type: !14822)
!14822 = !DIDerivedType(tag: DW_TAG_typedef, name: "uLongf", file: !2452, line: 405, baseType: !14823)
!14823 = !DIDerivedType(tag: DW_TAG_typedef, name: "uLong", file: !2452, line: 394, baseType: !8)
!14824 = !DILocation(line: 41, column: 12, scope: !14815)
!14825 = !DILocalVariable(name: "ret", scope: !14815, file: !2438, line: 42, type: !37)
!14826 = !DILocation(line: 42, column: 9, scope: !14815)
!14827 = !DILocation(line: 42, column: 15, scope: !14815)
!14828 = !DILocation(line: 45, column: 9, scope: !14829)
!14829 = distinct !DILexicalBlock(scope: !14815, file: !2438, line: 45, column: 9)
!14830 = !DILocation(line: 45, column: 13, scope: !14829)
!14831 = !DILocation(line: 45, column: 9, scope: !14815)
!14832 = !DILocation(line: 46, column: 9, scope: !14829)
!14833 = !DILocation(line: 49, column: 9, scope: !14834)
!14834 = distinct !DILexicalBlock(scope: !14815, file: !2438, line: 49, column: 9)
!14835 = !DILocation(line: 49, column: 29, scope: !14834)
!14836 = !DILocation(line: 49, column: 9, scope: !14815)
!14837 = !DILocation(line: 50, column: 9, scope: !14834)
!14838 = !DILocalVariable(name: "ptr", scope: !14815, file: !2438, line: 53, type: !334)
!14839 = !DILocation(line: 53, column: 20, scope: !14815)
!14840 = !DILocalVariable(name: "i", scope: !14841, file: !2438, line: 54, type: !6)
!14841 = distinct !DILexicalBlock(scope: !14815, file: !2438, line: 54, column: 5)
!14842 = !DILocation(line: 54, column: 17, scope: !14841)
!14843 = !DILocation(line: 54, column: 10, scope: !14841)
!14844 = !DILocation(line: 54, column: 24, scope: !14845)
!14845 = distinct !DILexicalBlock(scope: !14841, file: !2438, line: 54, column: 5)
!14846 = !DILocation(line: 54, column: 26, scope: !14845)
!14847 = !DILocation(line: 54, column: 5, scope: !14841)
!14848 = !DILocation(line: 55, column: 44, scope: !14849)
!14849 = distinct !DILexicalBlock(scope: !14845, file: !2438, line: 54, column: 47)
!14850 = !DILocation(line: 55, column: 22, scope: !14849)
!14851 = !DILocation(line: 55, column: 9, scope: !14849)
!14852 = !DILocation(line: 55, column: 25, scope: !14849)
!14853 = !DILocation(line: 55, column: 35, scope: !14849)
!14854 = !DILocation(line: 56, column: 42, scope: !14849)
!14855 = !DILocation(line: 56, column: 46, scope: !14849)
!14856 = !DILocation(line: 56, column: 32, scope: !14849)
!14857 = !DILocation(line: 56, column: 57, scope: !14849)
!14858 = !DILocation(line: 56, column: 13, scope: !14849)
!14859 = !DILocation(line: 57, column: 39, scope: !14849)
!14860 = !DILocation(line: 57, column: 22, scope: !14849)
!14861 = !DILocation(line: 57, column: 9, scope: !14849)
!14862 = !DILocation(line: 57, column: 25, scope: !14849)
!14863 = !DILocation(line: 57, column: 30, scope: !14849)
!14864 = !DILocation(line: 58, column: 42, scope: !14849)
!14865 = !DILocation(line: 58, column: 46, scope: !14849)
!14866 = !DILocation(line: 58, column: 32, scope: !14849)
!14867 = !DILocation(line: 58, column: 57, scope: !14849)
!14868 = !DILocation(line: 58, column: 13, scope: !14849)
!14869 = !DILocation(line: 59, column: 5, scope: !14849)
!14870 = !DILocation(line: 54, column: 43, scope: !14845)
!14871 = !DILocation(line: 54, column: 5, scope: !14845)
!14872 = distinct !{!14872, !14847, !14873, !3203}
!14873 = !DILocation(line: 59, column: 5, scope: !14841)
!14874 = !DILocation(line: 61, column: 30, scope: !14815)
!14875 = !DILocation(line: 62, column: 1, scope: !14815)
!14876 = distinct !DISubprogram(name: "lwan_tables_shutdown", scope: !2438, file: !2438, line: 65, type: !1578, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2434, retainedNodes: !74)
!14877 = !DILocation(line: 67, column: 1, scope: !14876)
!14878 = !DILocalVariable(name: "file_name", arg: 1, scope: !2439, file: !2438, line: 78, type: !480)
!14879 = !DILocation(line: 78, column: 52, scope: !2439)
!14880 = !DILocalVariable(name: "last_dot", scope: !2439, file: !2438, line: 80, type: !61)
!14881 = !DILocation(line: 80, column: 11, scope: !2439)
!14882 = !DILocation(line: 80, column: 30, scope: !2439)
!14883 = !DILocation(line: 80, column: 22, scope: !2439)
!14884 = !DILocation(line: 81, column: 9, scope: !14885)
!14885 = distinct !DILexicalBlock(scope: !2439, file: !2438, line: 81, column: 9)
!14886 = !DILocation(line: 81, column: 9, scope: !2439)
!14887 = !DILocation(line: 82, column: 9, scope: !14885)
!14888 = !DILocation(line: 93, column: 5, scope: !2439)
!14889 = !DILocalVariable(name: "s", arg: 1, scope: !14890, file: !262, line: 68, type: !480)
!14890 = distinct !DISubprogram(name: "string_as_int32", scope: !262, file: !262, line: 68, type: !9482, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2434, retainedNodes: !74)
!14891 = !DILocation(line: 68, column: 58, scope: !14890, inlinedAt: !14892)
!14892 = distinct !DILocation(line: 93, column: 5, scope: !2439)
!14893 = !DILocalVariable(name: "i", scope: !14890, file: !262, line: 70, type: !9484)
!14894 = !DILocation(line: 70, column: 13, scope: !14890, inlinedAt: !14892)
!14895 = !DILocation(line: 71, column: 16, scope: !14890, inlinedAt: !14892)
!14896 = !DILocation(line: 71, column: 5, scope: !14890, inlinedAt: !14892)
!14897 = !DILocation(line: 72, column: 12, scope: !14890, inlinedAt: !14892)
!14898 = !DILocation(line: 94, column: 19, scope: !14899)
!14899 = distinct !DILexicalBlock(scope: !2439, file: !2438, line: 93, column: 31)
!14900 = !DILocation(line: 95, column: 19, scope: !14899)
!14901 = !DILocation(line: 96, column: 19, scope: !14899)
!14902 = !DILocation(line: 97, column: 19, scope: !14899)
!14903 = !DILocation(line: 98, column: 19, scope: !14899)
!14904 = !DILocation(line: 99, column: 19, scope: !14899)
!14905 = !DILocation(line: 102, column: 9, scope: !14906)
!14906 = distinct !DILexicalBlock(scope: !2439, file: !2438, line: 102, column: 9)
!14907 = !DILocation(line: 102, column: 9, scope: !2439)
!14908 = !DILocalVariable(name: "entry", scope: !14909, file: !2438, line: 103, type: !14910)
!14909 = distinct !DILexicalBlock(scope: !14906, file: !2438, line: 102, column: 28)
!14910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2576, size: 64)
!14911 = !DILocation(line: 103, column: 28, scope: !14909)
!14912 = !DILocalVariable(name: "key", scope: !14909, file: !2438, line: 103, type: !2576)
!14913 = !DILocation(line: 103, column: 35, scope: !14909)
!14914 = !DILocation(line: 103, column: 41, scope: !14909)
!14915 = !DILocation(line: 103, column: 56, scope: !14909)
!14916 = !DILocation(line: 103, column: 65, scope: !14909)
!14917 = !DILocation(line: 105, column: 17, scope: !14909)
!14918 = !DILocation(line: 105, column: 15, scope: !14909)
!14919 = !DILocation(line: 107, column: 13, scope: !14920)
!14920 = distinct !DILexicalBlock(scope: !14909, file: !2438, line: 107, column: 13)
!14921 = !DILocation(line: 107, column: 13, scope: !14909)
!14922 = !DILocation(line: 108, column: 20, scope: !14920)
!14923 = !DILocation(line: 108, column: 27, scope: !14920)
!14924 = !DILocation(line: 108, column: 13, scope: !14920)
!14925 = !DILocation(line: 109, column: 5, scope: !14909)
!14926 = !DILabel(scope: !2439, name: "fallback", file: !2438, line: 111)
!14927 = !DILocation(line: 111, column: 1, scope: !2439)
!14928 = !DILocation(line: 112, column: 5, scope: !2439)
!14929 = !DILocation(line: 113, column: 1, scope: !2439)
!14930 = distinct !DISubprogram(name: "compare_mime_entry", scope: !2438, file: !2438, line: 70, type: !35, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2434, retainedNodes: !74)
!14931 = !DILocalVariable(name: "a", arg: 1, scope: !14930, file: !2438, line: 70, type: !38)
!14932 = !DILocation(line: 70, column: 32, scope: !14930)
!14933 = !DILocalVariable(name: "b", arg: 2, scope: !14930, file: !2438, line: 70, type: !38)
!14934 = !DILocation(line: 70, column: 47, scope: !14930)
!14935 = !DILocalVariable(name: "me1", scope: !14930, file: !2438, line: 72, type: !14936)
!14936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14937, size: 64)
!14937 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2576)
!14938 = !DILocation(line: 72, column: 30, scope: !14930)
!14939 = !DILocation(line: 72, column: 36, scope: !14930)
!14940 = !DILocalVariable(name: "me2", scope: !14930, file: !2438, line: 73, type: !14936)
!14941 = !DILocation(line: 73, column: 30, scope: !14930)
!14942 = !DILocation(line: 73, column: 36, scope: !14930)
!14943 = !DILocation(line: 74, column: 19, scope: !14930)
!14944 = !DILocation(line: 74, column: 24, scope: !14930)
!14945 = !DILocation(line: 74, column: 35, scope: !14930)
!14946 = !DILocation(line: 74, column: 40, scope: !14930)
!14947 = !DILocation(line: 74, column: 12, scope: !14930)
!14948 = !DILocation(line: 74, column: 5, scope: !14930)
!14949 = distinct !DISubprogram(name: "lwan_http_status_as_string_with_code", scope: !2438, file: !2438, line: 116, type: !14950, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2434, retainedNodes: !74)
!14950 = !DISubroutineType(types: !14951)
!14951 = !{!480, !497}
!14952 = !DILocalVariable(name: "status", arg: 1, scope: !14949, file: !2438, line: 116, type: !497)
!14953 = !DILocation(line: 116, column: 57, scope: !14949)
!14954 = !DILocation(line: 118, column: 13, scope: !14949)
!14955 = !DILocation(line: 118, column: 5, scope: !14949)
!14956 = !DILocation(line: 119, column: 19, scope: !14957)
!14957 = distinct !DILexicalBlock(scope: !14949, file: !2438, line: 118, column: 21)
!14958 = !DILocation(line: 120, column: 32, scope: !14957)
!14959 = !DILocation(line: 121, column: 34, scope: !14957)
!14960 = !DILocation(line: 122, column: 29, scope: !14957)
!14961 = !DILocation(line: 123, column: 28, scope: !14957)
!14962 = !DILocation(line: 124, column: 31, scope: !14957)
!14963 = !DILocation(line: 125, column: 26, scope: !14957)
!14964 = !DILocation(line: 126, column: 26, scope: !14957)
!14965 = !DILocation(line: 127, column: 28, scope: !14957)
!14966 = !DILocation(line: 128, column: 24, scope: !14957)
!14967 = !DILocation(line: 129, column: 26, scope: !14957)
!14968 = !DILocation(line: 130, column: 36, scope: !14957)
!14969 = !DILocation(line: 131, column: 30, scope: !14957)
!14970 = !DILocation(line: 132, column: 31, scope: !14957)
!14971 = !DILocation(line: 133, column: 32, scope: !14957)
!14972 = !DILocation(line: 134, column: 28, scope: !14957)
!14973 = !DILocation(line: 136, column: 5, scope: !14949)
!14974 = !DILocation(line: 137, column: 1, scope: !14949)
!14975 = distinct !DISubprogram(name: "lwan_http_status_as_string", scope: !2438, file: !2438, line: 140, type: !14950, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2434, retainedNodes: !74)
!14976 = !DILocalVariable(name: "status", arg: 1, scope: !14975, file: !2438, line: 140, type: !497)
!14977 = !DILocation(line: 140, column: 47, scope: !14975)
!14978 = !DILocation(line: 142, column: 49, scope: !14975)
!14979 = !DILocation(line: 142, column: 12, scope: !14975)
!14980 = !DILocation(line: 142, column: 57, scope: !14975)
!14981 = !DILocation(line: 142, column: 5, scope: !14975)
!14982 = distinct !DISubprogram(name: "lwan_http_status_as_descriptive_string", scope: !2438, file: !2438, line: 146, type: !14950, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2434, retainedNodes: !74)
!14983 = !DILocalVariable(name: "status", arg: 1, scope: !14982, file: !2438, line: 146, type: !497)
!14984 = !DILocation(line: 146, column: 59, scope: !14982)
!14985 = !DILocation(line: 148, column: 13, scope: !14982)
!14986 = !DILocation(line: 148, column: 5, scope: !14982)
!14987 = !DILocation(line: 149, column: 19, scope: !14988)
!14988 = distinct !DILexicalBlock(scope: !14982, file: !2438, line: 148, column: 21)
!14989 = !DILocation(line: 150, column: 32, scope: !14988)
!14990 = !DILocation(line: 151, column: 34, scope: !14988)
!14991 = !DILocation(line: 152, column: 29, scope: !14988)
!14992 = !DILocation(line: 153, column: 28, scope: !14988)
!14993 = !DILocation(line: 154, column: 31, scope: !14988)
!14994 = !DILocation(line: 155, column: 26, scope: !14988)
!14995 = !DILocation(line: 156, column: 26, scope: !14988)
!14996 = !DILocation(line: 157, column: 28, scope: !14988)
!14997 = !DILocation(line: 158, column: 24, scope: !14988)
!14998 = !DILocation(line: 159, column: 26, scope: !14988)
!14999 = !DILocation(line: 160, column: 36, scope: !14988)
!15000 = !DILocation(line: 161, column: 30, scope: !14988)
!15001 = !DILocation(line: 162, column: 31, scope: !14988)
!15002 = !DILocation(line: 163, column: 32, scope: !14988)
!15003 = !DILocation(line: 164, column: 28, scope: !14988)
!15004 = !DILocation(line: 166, column: 5, scope: !14982)
!15005 = !DILocation(line: 167, column: 1, scope: !14982)
!15006 = distinct !DISubprogram(name: "lwan_append_int_to_strbuf", scope: !2590, file: !2590, line: 799, type: !15007, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!15007 = !DISubroutineType(types: !15008)
!15008 = !{null, !2718, !5}
!15009 = !DILocalVariable(name: "buf", arg: 1, scope: !15006, file: !2590, line: 799, type: !2718)
!15010 = !DILocation(line: 799, column: 37, scope: !15006)
!15011 = !DILocalVariable(name: "ptr", arg: 2, scope: !15006, file: !2590, line: 799, type: !5)
!15012 = !DILocation(line: 799, column: 48, scope: !15006)
!15013 = !DILocalVariable(name: "convertbuf", scope: !15006, file: !2590, line: 801, type: !213)
!15014 = !DILocation(line: 801, column: 10, scope: !15006)
!15015 = !DILocalVariable(name: "len", scope: !15006, file: !2590, line: 802, type: !6)
!15016 = !DILocation(line: 802, column: 12, scope: !15006)
!15017 = !DILocalVariable(name: "converted", scope: !15006, file: !2590, line: 803, type: !61)
!15018 = !DILocation(line: 803, column: 11, scope: !15006)
!15019 = !DILocation(line: 805, column: 39, scope: !15006)
!15020 = !DILocation(line: 805, column: 31, scope: !15006)
!15021 = !DILocation(line: 805, column: 44, scope: !15006)
!15022 = !DILocation(line: 805, column: 17, scope: !15006)
!15023 = !DILocation(line: 805, column: 15, scope: !15006)
!15024 = !DILocation(line: 806, column: 23, scope: !15006)
!15025 = !DILocation(line: 806, column: 28, scope: !15006)
!15026 = !DILocation(line: 806, column: 39, scope: !15006)
!15027 = !DILocation(line: 806, column: 5, scope: !15006)
!15028 = !DILocation(line: 807, column: 1, scope: !15006)
!15029 = distinct !DISubprogram(name: "lwan_tpl_int_is_empty", scope: !2590, file: !2590, line: 810, type: !1869, scopeLine: 811, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!15030 = !DILocalVariable(name: "ptr", arg: 1, scope: !15029, file: !2590, line: 810, type: !5)
!15031 = !DILocation(line: 810, column: 29, scope: !15029)
!15032 = !DILocation(line: 812, column: 21, scope: !15029)
!15033 = !DILocation(line: 812, column: 13, scope: !15029)
!15034 = !DILocation(line: 812, column: 26, scope: !15029)
!15035 = !DILocation(line: 812, column: 5, scope: !15029)
!15036 = distinct !DISubprogram(name: "lwan_append_double_to_strbuf", scope: !2590, file: !2590, line: 816, type: !15007, scopeLine: 817, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!15037 = !DILocalVariable(name: "buf", arg: 1, scope: !15036, file: !2590, line: 816, type: !2718)
!15038 = !DILocation(line: 816, column: 40, scope: !15036)
!15039 = !DILocalVariable(name: "ptr", arg: 2, scope: !15036, file: !2590, line: 816, type: !5)
!15040 = !DILocation(line: 816, column: 51, scope: !15036)
!15041 = !DILocation(line: 818, column: 26, scope: !15036)
!15042 = !DILocation(line: 818, column: 48, scope: !15036)
!15043 = !DILocation(line: 818, column: 37, scope: !15036)
!15044 = !DILocation(line: 818, column: 5, scope: !15036)
!15045 = !DILocation(line: 819, column: 1, scope: !15036)
!15046 = distinct !DISubprogram(name: "lwan_tpl_double_is_empty", scope: !2590, file: !2590, line: 822, type: !1869, scopeLine: 823, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!15047 = !DILocalVariable(name: "ptr", arg: 1, scope: !15046, file: !2590, line: 822, type: !5)
!15048 = !DILocation(line: 822, column: 32, scope: !15046)
!15049 = !DILocation(line: 824, column: 24, scope: !15046)
!15050 = !DILocation(line: 824, column: 13, scope: !15046)
!15051 = !DILocation(line: 824, column: 29, scope: !15046)
!15052 = !DILocation(line: 824, column: 5, scope: !15046)
!15053 = distinct !DISubprogram(name: "lwan_append_str_to_strbuf", scope: !2590, file: !2590, line: 828, type: !15007, scopeLine: 829, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!15054 = !DILocalVariable(name: "buf", arg: 1, scope: !15053, file: !2590, line: 828, type: !2718)
!15055 = !DILocation(line: 828, column: 37, scope: !15053)
!15056 = !DILocalVariable(name: "ptr", arg: 2, scope: !15053, file: !2590, line: 828, type: !5)
!15057 = !DILocation(line: 828, column: 48, scope: !15053)
!15058 = !DILocalVariable(name: "str", scope: !15053, file: !2590, line: 830, type: !480)
!15059 = !DILocation(line: 830, column: 17, scope: !15053)
!15060 = !DILocation(line: 830, column: 33, scope: !15053)
!15061 = !DILocation(line: 830, column: 23, scope: !15053)
!15062 = !DILocation(line: 832, column: 9, scope: !15063)
!15063 = distinct !DILexicalBlock(scope: !15053, file: !2590, line: 832, column: 9)
!15064 = !DILocation(line: 832, column: 9, scope: !15053)
!15065 = !DILocation(line: 833, column: 27, scope: !15063)
!15066 = !DILocation(line: 833, column: 32, scope: !15063)
!15067 = !DILocation(line: 833, column: 9, scope: !15063)
!15068 = !DILocation(line: 834, column: 1, scope: !15053)
!15069 = distinct !DISubprogram(name: "lwan_append_str_escaped_to_strbuf", scope: !2590, file: !2590, line: 837, type: !15007, scopeLine: 838, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!15070 = !DILocalVariable(name: "buf", arg: 1, scope: !15069, file: !2590, line: 837, type: !2718)
!15071 = !DILocation(line: 837, column: 45, scope: !15069)
!15072 = !DILocalVariable(name: "ptr", arg: 2, scope: !15069, file: !2590, line: 837, type: !5)
!15073 = !DILocation(line: 837, column: 56, scope: !15069)
!15074 = !DILocation(line: 839, column: 9, scope: !15075)
!15075 = distinct !DILexicalBlock(scope: !15069, file: !2590, line: 839, column: 9)
!15076 = !DILocation(line: 839, column: 9, scope: !15069)
!15077 = !DILocation(line: 840, column: 9, scope: !15075)
!15078 = !DILocalVariable(name: "str", scope: !15069, file: !2590, line: 842, type: !480)
!15079 = !DILocation(line: 842, column: 17, scope: !15069)
!15080 = !DILocation(line: 842, column: 33, scope: !15069)
!15081 = !DILocation(line: 842, column: 23, scope: !15069)
!15082 = !DILocation(line: 843, column: 9, scope: !15083)
!15083 = distinct !DILexicalBlock(scope: !15069, file: !2590, line: 843, column: 9)
!15084 = !DILocation(line: 843, column: 9, scope: !15069)
!15085 = !DILocation(line: 844, column: 9, scope: !15083)
!15086 = !DILocalVariable(name: "p", scope: !15087, file: !2590, line: 846, type: !480)
!15087 = distinct !DILexicalBlock(scope: !15069, file: !2590, line: 846, column: 5)
!15088 = !DILocation(line: 846, column: 22, scope: !15087)
!15089 = !DILocation(line: 846, column: 26, scope: !15087)
!15090 = !DILocation(line: 846, column: 10, scope: !15087)
!15091 = !DILocation(line: 846, column: 32, scope: !15092)
!15092 = distinct !DILexicalBlock(scope: !15087, file: !2590, line: 846, column: 5)
!15093 = !DILocation(line: 846, column: 31, scope: !15092)
!15094 = !DILocation(line: 846, column: 5, scope: !15087)
!15095 = !DILocation(line: 847, column: 14, scope: !15096)
!15096 = distinct !DILexicalBlock(scope: !15097, file: !2590, line: 847, column: 13)
!15097 = distinct !DILexicalBlock(scope: !15092, file: !2590, line: 846, column: 40)
!15098 = !DILocation(line: 847, column: 13, scope: !15096)
!15099 = !DILocation(line: 847, column: 16, scope: !15096)
!15100 = !DILocation(line: 847, column: 13, scope: !15097)
!15101 = !DILocation(line: 848, column: 31, scope: !15096)
!15102 = !DILocation(line: 848, column: 13, scope: !15096)
!15103 = !DILocation(line: 849, column: 19, scope: !15104)
!15104 = distinct !DILexicalBlock(scope: !15096, file: !2590, line: 849, column: 18)
!15105 = !DILocation(line: 849, column: 18, scope: !15104)
!15106 = !DILocation(line: 849, column: 21, scope: !15104)
!15107 = !DILocation(line: 849, column: 18, scope: !15096)
!15108 = !DILocation(line: 850, column: 31, scope: !15104)
!15109 = !DILocation(line: 850, column: 13, scope: !15104)
!15110 = !DILocation(line: 851, column: 19, scope: !15111)
!15111 = distinct !DILexicalBlock(scope: !15104, file: !2590, line: 851, column: 18)
!15112 = !DILocation(line: 851, column: 18, scope: !15111)
!15113 = !DILocation(line: 851, column: 21, scope: !15111)
!15114 = !DILocation(line: 851, column: 18, scope: !15104)
!15115 = !DILocation(line: 852, column: 31, scope: !15111)
!15116 = !DILocation(line: 852, column: 13, scope: !15111)
!15117 = !DILocation(line: 853, column: 19, scope: !15118)
!15118 = distinct !DILexicalBlock(scope: !15111, file: !2590, line: 853, column: 18)
!15119 = !DILocation(line: 853, column: 18, scope: !15118)
!15120 = !DILocation(line: 853, column: 21, scope: !15118)
!15121 = !DILocation(line: 853, column: 18, scope: !15111)
!15122 = !DILocation(line: 854, column: 31, scope: !15118)
!15123 = !DILocation(line: 854, column: 13, scope: !15118)
!15124 = !DILocation(line: 855, column: 19, scope: !15125)
!15125 = distinct !DILexicalBlock(scope: !15118, file: !2590, line: 855, column: 18)
!15126 = !DILocation(line: 855, column: 18, scope: !15125)
!15127 = !DILocation(line: 855, column: 21, scope: !15125)
!15128 = !DILocation(line: 855, column: 18, scope: !15118)
!15129 = !DILocation(line: 856, column: 31, scope: !15125)
!15130 = !DILocation(line: 856, column: 13, scope: !15125)
!15131 = !DILocation(line: 857, column: 19, scope: !15132)
!15132 = distinct !DILexicalBlock(scope: !15125, file: !2590, line: 857, column: 18)
!15133 = !DILocation(line: 857, column: 18, scope: !15132)
!15134 = !DILocation(line: 857, column: 21, scope: !15132)
!15135 = !DILocation(line: 857, column: 18, scope: !15125)
!15136 = !DILocation(line: 858, column: 31, scope: !15132)
!15137 = !DILocation(line: 858, column: 13, scope: !15132)
!15138 = !DILocation(line: 860, column: 32, scope: !15132)
!15139 = !DILocation(line: 860, column: 38, scope: !15132)
!15140 = !DILocation(line: 860, column: 37, scope: !15132)
!15141 = !DILocation(line: 860, column: 13, scope: !15132)
!15142 = !DILocation(line: 861, column: 5, scope: !15097)
!15143 = !DILocation(line: 846, column: 36, scope: !15092)
!15144 = !DILocation(line: 846, column: 5, scope: !15092)
!15145 = distinct !{!15145, !15094, !15146, !3203}
!15146 = !DILocation(line: 861, column: 5, scope: !15087)
!15147 = !DILocation(line: 862, column: 1, scope: !15069)
!15148 = distinct !DISubprogram(name: "lwan_tpl_str_is_empty", scope: !2590, file: !2590, line: 865, type: !1869, scopeLine: 866, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!15149 = !DILocalVariable(name: "ptr", arg: 1, scope: !15148, file: !2590, line: 865, type: !5)
!15150 = !DILocation(line: 865, column: 29, scope: !15148)
!15151 = !DILocation(line: 867, column: 9, scope: !15152)
!15152 = distinct !DILexicalBlock(scope: !15148, file: !2590, line: 867, column: 9)
!15153 = !DILocation(line: 867, column: 9, scope: !15148)
!15154 = !DILocation(line: 868, column: 9, scope: !15152)
!15155 = !DILocalVariable(name: "str", scope: !15148, file: !2590, line: 870, type: !480)
!15156 = !DILocation(line: 870, column: 17, scope: !15148)
!15157 = !DILocation(line: 870, column: 39, scope: !15148)
!15158 = !DILocation(line: 870, column: 23, scope: !15148)
!15159 = !DILocation(line: 871, column: 12, scope: !15148)
!15160 = !DILocation(line: 871, column: 24, scope: !15148)
!15161 = !DILocation(line: 871, column: 28, scope: !15148)
!15162 = !DILocation(line: 871, column: 27, scope: !15148)
!15163 = !DILocation(line: 0, scope: !15148)
!15164 = !DILocation(line: 871, column: 5, scope: !15148)
!15165 = !DILocation(line: 872, column: 1, scope: !15148)
!15166 = distinct !DISubprogram(name: "lwan_tpl_free", scope: !2590, file: !2590, line: 906, type: !15167, scopeLine: 907, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!15167 = !DISubroutineType(types: !15168)
!15168 = !{null, !2835}
!15169 = !DILocalVariable(name: "tpl", arg: 1, scope: !15166, file: !2590, line: 906, type: !2835)
!15170 = !DILocation(line: 906, column: 27, scope: !15166)
!15171 = !DILocalVariable(name: "iter", scope: !15166, file: !2590, line: 908, type: !2733)
!15172 = !DILocation(line: 908, column: 19, scope: !15166)
!15173 = !DILocation(line: 910, column: 10, scope: !15174)
!15174 = distinct !DILexicalBlock(scope: !15166, file: !2590, line: 910, column: 9)
!15175 = !DILocation(line: 910, column: 9, scope: !15166)
!15176 = !DILocation(line: 911, column: 9, scope: !15174)
!15177 = !DILocation(line: 913, column: 9, scope: !15178)
!15178 = distinct !DILexicalBlock(scope: !15166, file: !2590, line: 913, column: 9)
!15179 = !DILocation(line: 913, column: 14, scope: !15178)
!15180 = !DILocation(line: 913, column: 9, scope: !15166)
!15181 = !DILocation(line: 914, column: 21, scope: !15182)
!15182 = distinct !DILexicalBlock(scope: !15183, file: !2590, line: 914, column: 9)
!15183 = distinct !DILexicalBlock(scope: !15178, file: !2590, line: 913, column: 22)
!15184 = !DILocation(line: 914, column: 26, scope: !15182)
!15185 = !DILocation(line: 914, column: 19, scope: !15182)
!15186 = !DILocation(line: 914, column: 14, scope: !15182)
!15187 = !DILocation(line: 914, column: 34, scope: !15188)
!15188 = distinct !DILexicalBlock(scope: !15182, file: !2590, line: 914, column: 9)
!15189 = !DILocation(line: 914, column: 40, scope: !15188)
!15190 = !DILocation(line: 914, column: 47, scope: !15188)
!15191 = !DILocation(line: 914, column: 9, scope: !15182)
!15192 = !DILocation(line: 915, column: 24, scope: !15188)
!15193 = !DILocation(line: 915, column: 13, scope: !15188)
!15194 = !DILocation(line: 914, column: 67, scope: !15188)
!15195 = !DILocation(line: 914, column: 9, scope: !15188)
!15196 = distinct !{!15196, !15191, !15197, !3203}
!15197 = !DILocation(line: 915, column: 28, scope: !15182)
!15198 = !DILocation(line: 916, column: 14, scope: !15183)
!15199 = !DILocation(line: 916, column: 19, scope: !15183)
!15200 = !DILocation(line: 916, column: 9, scope: !15183)
!15201 = !DILocation(line: 917, column: 5, scope: !15183)
!15202 = !DILocation(line: 919, column: 10, scope: !15166)
!15203 = !DILocation(line: 919, column: 5, scope: !15166)
!15204 = !DILocation(line: 920, column: 1, scope: !15166)
!15205 = distinct !DISubprogram(name: "free_chunk", scope: !2590, file: !2590, line: 875, type: !15206, scopeLine: 876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!15206 = !DISubroutineType(types: !15207)
!15207 = !{null, !2733}
!15208 = !DILocalVariable(name: "chunk", arg: 1, scope: !15205, file: !2590, line: 875, type: !2733)
!15209 = !DILocation(line: 875, column: 26, scope: !15205)
!15210 = !DILocation(line: 877, column: 10, scope: !15211)
!15211 = distinct !DILexicalBlock(scope: !15205, file: !2590, line: 877, column: 9)
!15212 = !DILocation(line: 877, column: 9, scope: !15205)
!15213 = !DILocation(line: 878, column: 9, scope: !15211)
!15214 = !DILocation(line: 879, column: 9, scope: !15215)
!15215 = distinct !DILexicalBlock(scope: !15205, file: !2590, line: 879, column: 9)
!15216 = !DILocation(line: 879, column: 16, scope: !15215)
!15217 = !DILocation(line: 879, column: 22, scope: !15215)
!15218 = !DILocation(line: 879, column: 9, scope: !15205)
!15219 = !DILocation(line: 880, column: 9, scope: !15215)
!15220 = !DILocation(line: 882, column: 13, scope: !15205)
!15221 = !DILocation(line: 882, column: 20, scope: !15205)
!15222 = !DILocation(line: 882, column: 5, scope: !15205)
!15223 = !DILocation(line: 891, column: 9, scope: !15224)
!15224 = distinct !DILexicalBlock(scope: !15205, file: !2590, line: 882, column: 28)
!15225 = !DILocation(line: 894, column: 14, scope: !15224)
!15226 = !DILocation(line: 894, column: 21, scope: !15224)
!15227 = !DILocation(line: 894, column: 9, scope: !15224)
!15228 = !DILocation(line: 895, column: 9, scope: !15224)
!15229 = !DILocation(line: 897, column: 21, scope: !15224)
!15230 = !DILocation(line: 897, column: 28, scope: !15224)
!15231 = !DILocation(line: 897, column: 9, scope: !15224)
!15232 = !DILocation(line: 898, column: 9, scope: !15224)
!15233 = !DILocation(line: 900, column: 23, scope: !15224)
!15234 = !DILocation(line: 900, column: 30, scope: !15224)
!15235 = !DILocation(line: 900, column: 9, scope: !15224)
!15236 = !DILocation(line: 901, column: 9, scope: !15224)
!15237 = !DILocation(line: 903, column: 1, scope: !15205)
!15238 = distinct !DISubprogram(name: "lwan_tpl_compile_string", scope: !2590, file: !2590, line: 1111, type: !15239, scopeLine: 1112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!15239 = !DISubroutineType(types: !15240)
!15240 = !{!2835, !480, !15241}
!15241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15242, size: 64)
!15242 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15243)
!15243 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_var_descriptor_t", file: !1831, line: 26, baseType: !15244)
!15244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_var_descriptor_t_", file: !1831, line: 30, size: 384, elements: !15245)
!15245 = !{!15246, !15247, !15248, !15250, !15251, !15252}
!15246 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !15244, file: !1831, line: 31, baseType: !480, size: 64)
!15247 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !15244, file: !1831, line: 32, baseType: !2244, size: 64, offset: 64)
!15248 = !DIDerivedType(tag: DW_TAG_member, name: "append_to_strbuf", scope: !15244, file: !1831, line: 34, baseType: !15249, size: 64, offset: 128)
!15249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15007, size: 64)
!15250 = !DIDerivedType(tag: DW_TAG_member, name: "get_is_empty", scope: !15244, file: !1831, line: 35, baseType: !1868, size: 64, offset: 192)
!15251 = !DIDerivedType(tag: DW_TAG_member, name: "generator", scope: !15244, file: !1831, line: 37, baseType: !1872, size: 64, offset: 256)
!15252 = !DIDerivedType(tag: DW_TAG_member, name: "list_desc", scope: !15244, file: !1831, line: 38, baseType: !15241, size: 64, offset: 320)
!15253 = !DILocalVariable(name: "string", arg: 1, scope: !15238, file: !2590, line: 1111, type: !480)
!15254 = !DILocation(line: 1111, column: 37, scope: !15238)
!15255 = !DILocalVariable(name: "descriptor", arg: 2, scope: !15238, file: !2590, line: 1111, type: !15241)
!15256 = !DILocation(line: 1111, column: 74, scope: !15238)
!15257 = !DILocalVariable(name: "tpl", scope: !15238, file: !2590, line: 1113, type: !2835)
!15258 = !DILocation(line: 1113, column: 17, scope: !15238)
!15259 = !DILocation(line: 1115, column: 11, scope: !15238)
!15260 = !DILocation(line: 1115, column: 9, scope: !15238)
!15261 = !DILocation(line: 1116, column: 9, scope: !15262)
!15262 = distinct !DILexicalBlock(scope: !15238, file: !2590, line: 1116, column: 9)
!15263 = !DILocation(line: 1116, column: 9, scope: !15238)
!15264 = !DILocation(line: 1117, column: 26, scope: !15265)
!15265 = distinct !DILexicalBlock(scope: !15266, file: !2590, line: 1117, column: 13)
!15266 = distinct !DILexicalBlock(scope: !15262, file: !2590, line: 1116, column: 14)
!15267 = !DILocation(line: 1117, column: 31, scope: !15265)
!15268 = !DILocation(line: 1117, column: 39, scope: !15265)
!15269 = !DILocation(line: 1117, column: 13, scope: !15265)
!15270 = !DILocation(line: 1117, column: 13, scope: !15266)
!15271 = !DILocation(line: 1118, column: 20, scope: !15265)
!15272 = !DILocation(line: 1118, column: 13, scope: !15265)
!15273 = !DILocation(line: 1119, column: 5, scope: !15266)
!15274 = !DILocation(line: 1121, column: 19, scope: !15238)
!15275 = !DILocation(line: 1121, column: 5, scope: !15238)
!15276 = !DILocation(line: 1122, column: 5, scope: !15238)
!15277 = !DILocation(line: 1123, column: 1, scope: !15238)
!15278 = distinct !DISubprogram(name: "parse_string", scope: !2590, file: !2590, line: 1090, type: !15279, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!15279 = !DISubroutineType(types: !15280)
!15280 = !{!341, !2835, !480, !15241}
!15281 = !DILocalVariable(name: "tpl", arg: 1, scope: !15278, file: !2590, line: 1090, type: !2835)
!15282 = !DILocation(line: 1090, column: 38, scope: !15278)
!15283 = !DILocalVariable(name: "string", arg: 2, scope: !15278, file: !2590, line: 1090, type: !480)
!15284 = !DILocation(line: 1090, column: 55, scope: !15278)
!15285 = !DILocalVariable(name: "descriptor", arg: 3, scope: !15278, file: !2590, line: 1090, type: !15241)
!15286 = !DILocation(line: 1090, column: 92, scope: !15278)
!15287 = !DILocalVariable(name: "parser", scope: !15278, file: !2590, line: 1092, type: !15288)
!15288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "parser", file: !2590, line: 137, size: 1792, elements: !15289)
!15289 = !{!15290, !15291, !15292, !15298, !15317, !15318, !15322}
!15290 = !DIDerivedType(tag: DW_TAG_member, name: "tpl", scope: !15288, file: !2590, line: 138, baseType: !2835, size: 64)
!15291 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor", scope: !15288, file: !2590, line: 139, baseType: !15241, size: 64, offset: 64)
!15292 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !15288, file: !2590, line: 140, baseType: !15293, size: 64, offset: 128)
!15293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15294, size: 64)
!15294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "symtab", file: !2590, line: 112, size: 128, elements: !15295)
!15295 = !{!15296, !15297}
!15296 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !15294, file: !2590, line: 113, baseType: !331, size: 64)
!15297 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !15294, file: !2590, line: 114, baseType: !15293, size: 64, offset: 64)
!15298 = !DIDerivedType(tag: DW_TAG_member, name: "lexer", scope: !15288, file: !2590, line: 141, baseType: !15299, size: 1216, offset: 192)
!15299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lexer", file: !2590, line: 125, size: 1216, elements: !15300)
!15300 = !{!15301, !15306, !15307, !15308, !15309}
!15301 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !15299, file: !2590, line: 126, baseType: !15302, size: 64)
!15302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15303, size: 64)
!15303 = !DISubroutineType(types: !15304)
!15304 = !{!5, !15305}
!15305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15299, size: 64)
!15306 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !15299, file: !2590, line: 127, baseType: !480, size: 64, offset: 64)
!15307 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !15299, file: !2590, line: 127, baseType: !480, size: 64, offset: 128)
!15308 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !15299, file: !2590, line: 127, baseType: !480, size: 64, offset: 192)
!15309 = !DIDerivedType(tag: DW_TAG_member, name: "ring_buffer", scope: !15299, file: !2590, line: 134, baseType: !15310, size: 960, offset: 256)
!15310 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !15299, file: !2590, line: 129, size: 960, elements: !15311)
!15311 = !{!15312, !15314, !15315, !15316}
!15312 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !15310, file: !2590, line: 130, baseType: !15313, size: 768)
!15313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2710, size: 768, elements: !138)
!15314 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !15310, file: !2590, line: 131, baseType: !6, size: 64, offset: 768)
!15315 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !15310, file: !2590, line: 132, baseType: !6, size: 64, offset: 832)
!15316 = !DIDerivedType(tag: DW_TAG_member, name: "population", scope: !15310, file: !2590, line: 133, baseType: !6, size: 64, offset: 896)
!15317 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !15288, file: !2590, line: 142, baseType: !2653, size: 32, offset: 1408)
!15318 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15288, file: !2590, line: 143, baseType: !15319, size: 128, offset: 1472)
!15319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !313, line: 208, size: 128, elements: !15320)
!15320 = !{!15321}
!15321 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !15319, file: !313, line: 210, baseType: !2704, size: 128)
!15322 = !DIDerivedType(tag: DW_TAG_member, name: "chunks", scope: !15288, file: !2590, line: 147, baseType: !15323, size: 192, offset: 1600)
!15323 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !15288, file: !2590, line: 144, size: 192, elements: !15324)
!15324 = !{!15325, !15326, !15327}
!15325 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !15323, file: !2590, line: 145, baseType: !2733, size: 64)
!15326 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !15323, file: !2590, line: 146, baseType: !6, size: 64, offset: 64)
!15327 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !15323, file: !2590, line: 146, baseType: !6, size: 64, offset: 128)
!15328 = !DILocation(line: 1092, column: 19, scope: !15278)
!15329 = !DILocation(line: 1092, column: 28, scope: !15278)
!15330 = !DILocation(line: 1093, column: 16, scope: !15278)
!15331 = !DILocation(line: 1096, column: 23, scope: !15278)
!15332 = !DILocation(line: 1095, column: 19, scope: !15278)
!15333 = !DILocalVariable(name: "state", scope: !15278, file: !2590, line: 1098, type: !15334)
!15334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15335, size: 64)
!15335 = !DISubroutineType(types: !15336)
!15336 = !{!5, !15337, !15338}
!15337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15288, size: 64)
!15338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2710, size: 64)
!15339 = !DILocation(line: 1098, column: 13, scope: !15278)
!15340 = !DILocalVariable(name: "item", scope: !15278, file: !2590, line: 1099, type: !15338)
!15341 = !DILocation(line: 1099, column: 18, scope: !15278)
!15342 = !DILocation(line: 1101, column: 31, scope: !15343)
!15343 = distinct !DILexicalBlock(scope: !15278, file: !2590, line: 1101, column: 9)
!15344 = !DILocation(line: 1101, column: 43, scope: !15343)
!15345 = !DILocation(line: 1101, column: 10, scope: !15343)
!15346 = !DILocation(line: 1101, column: 9, scope: !15278)
!15347 = !DILocation(line: 1102, column: 9, scope: !15343)
!15348 = !DILocation(line: 1104, column: 5, scope: !15278)
!15349 = !DILocation(line: 1104, column: 12, scope: !15278)
!15350 = !DILocation(line: 1104, column: 18, scope: !15278)
!15351 = !DILocation(line: 1104, column: 38, scope: !15278)
!15352 = !DILocation(line: 1104, column: 21, scope: !15278)
!15353 = !DILocation(line: 1104, column: 52, scope: !15278)
!15354 = !DILocation(line: 1104, column: 55, scope: !15278)
!15355 = !DILocation(line: 1104, column: 61, scope: !15278)
!15356 = !DILocation(line: 1104, column: 66, scope: !15278)
!15357 = !DILocation(line: 0, scope: !15278)
!15358 = !DILocation(line: 1105, column: 17, scope: !15278)
!15359 = !DILocation(line: 1105, column: 32, scope: !15278)
!15360 = !DILocation(line: 1105, column: 15, scope: !15278)
!15361 = distinct !{!15361, !15348, !15362, !3203}
!15362 = !DILocation(line: 1105, column: 36, scope: !15278)
!15363 = !DILocation(line: 1107, column: 37, scope: !15278)
!15364 = !DILocation(line: 1107, column: 12, scope: !15278)
!15365 = !DILocation(line: 1107, column: 5, scope: !15278)
!15366 = !DILocation(line: 1108, column: 1, scope: !15278)
!15367 = distinct !DISubprogram(name: "parser_text", scope: !2590, file: !2590, line: 773, type: !15335, scopeLine: 774, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!15368 = !DILocalVariable(name: "parser", arg: 1, scope: !15367, file: !2590, line: 773, type: !15337)
!15369 = !DILocation(line: 773, column: 41, scope: !15367)
!15370 = !DILocalVariable(name: "item", arg: 2, scope: !15367, file: !2590, line: 773, type: !15338)
!15371 = !DILocation(line: 773, column: 62, scope: !15367)
!15372 = !DILocation(line: 775, column: 9, scope: !15373)
!15373 = distinct !DILexicalBlock(scope: !15367, file: !2590, line: 775, column: 9)
!15374 = !DILocation(line: 775, column: 15, scope: !15373)
!15375 = !DILocation(line: 775, column: 20, scope: !15373)
!15376 = !DILocation(line: 775, column: 9, scope: !15367)
!15377 = !DILocation(line: 776, column: 9, scope: !15373)
!15378 = !DILocation(line: 777, column: 9, scope: !15379)
!15379 = distinct !DILexicalBlock(scope: !15367, file: !2590, line: 777, column: 9)
!15380 = !DILocation(line: 777, column: 15, scope: !15379)
!15381 = !DILocation(line: 777, column: 20, scope: !15379)
!15382 = !DILocation(line: 777, column: 9, scope: !15367)
!15383 = !DILocation(line: 778, column: 13, scope: !15384)
!15384 = distinct !DILexicalBlock(scope: !15385, file: !2590, line: 778, column: 13)
!15385 = distinct !DILexicalBlock(scope: !15379, file: !2590, line: 777, column: 34)
!15386 = !DILocation(line: 778, column: 19, scope: !15384)
!15387 = !DILocation(line: 778, column: 25, scope: !15384)
!15388 = !DILocation(line: 778, column: 29, scope: !15384)
!15389 = !DILocation(line: 778, column: 13, scope: !15385)
!15390 = !DILocation(line: 779, column: 24, scope: !15391)
!15391 = distinct !DILexicalBlock(scope: !15384, file: !2590, line: 778, column: 35)
!15392 = !DILocation(line: 779, column: 75, scope: !15391)
!15393 = !DILocation(line: 779, column: 81, scope: !15391)
!15394 = !DILocation(line: 779, column: 87, scope: !15391)
!15395 = !DILocation(line: 779, column: 74, scope: !15391)
!15396 = !DILocation(line: 779, column: 63, scope: !15391)
!15397 = !DILocation(line: 779, column: 55, scope: !15391)
!15398 = !DILocation(line: 779, column: 13, scope: !15391)
!15399 = !DILocation(line: 780, column: 9, scope: !15391)
!15400 = !DILocalVariable(name: "buf", scope: !15401, file: !2590, line: 781, type: !2718)
!15401 = distinct !DILexicalBlock(scope: !15384, file: !2590, line: 780, column: 16)
!15402 = !DILocation(line: 781, column: 23, scope: !15401)
!15403 = !DILocation(line: 781, column: 50, scope: !15401)
!15404 = !DILocation(line: 781, column: 56, scope: !15401)
!15405 = !DILocation(line: 781, column: 62, scope: !15401)
!15406 = !DILocation(line: 781, column: 29, scope: !15401)
!15407 = !DILocation(line: 782, column: 18, scope: !15408)
!15408 = distinct !DILexicalBlock(scope: !15401, file: !2590, line: 782, column: 17)
!15409 = !DILocation(line: 782, column: 17, scope: !15401)
!15410 = !DILocation(line: 783, column: 35, scope: !15408)
!15411 = !DILocation(line: 783, column: 24, scope: !15408)
!15412 = !DILocation(line: 783, column: 17, scope: !15408)
!15413 = !DILocation(line: 784, column: 24, scope: !15401)
!15414 = !DILocation(line: 784, column: 29, scope: !15401)
!15415 = !DILocation(line: 784, column: 35, scope: !15401)
!15416 = !DILocation(line: 784, column: 41, scope: !15401)
!15417 = !DILocation(line: 784, column: 48, scope: !15401)
!15418 = !DILocation(line: 784, column: 54, scope: !15401)
!15419 = !DILocation(line: 784, column: 60, scope: !15401)
!15420 = !DILocation(line: 784, column: 13, scope: !15401)
!15421 = !DILocation(line: 785, column: 24, scope: !15401)
!15422 = !DILocation(line: 785, column: 50, scope: !15401)
!15423 = !DILocation(line: 785, column: 13, scope: !15401)
!15424 = !DILocation(line: 787, column: 38, scope: !15385)
!15425 = !DILocation(line: 787, column: 44, scope: !15385)
!15426 = !DILocation(line: 787, column: 50, scope: !15385)
!15427 = !DILocation(line: 787, column: 9, scope: !15385)
!15428 = !DILocation(line: 787, column: 17, scope: !15385)
!15429 = !DILocation(line: 787, column: 22, scope: !15385)
!15430 = !DILocation(line: 787, column: 35, scope: !15385)
!15431 = !DILocation(line: 788, column: 9, scope: !15385)
!15432 = !DILocation(line: 790, column: 9, scope: !15433)
!15433 = distinct !DILexicalBlock(scope: !15367, file: !2590, line: 790, column: 9)
!15434 = !DILocation(line: 790, column: 15, scope: !15433)
!15435 = !DILocation(line: 790, column: 20, scope: !15433)
!15436 = !DILocation(line: 790, column: 9, scope: !15367)
!15437 = !DILocation(line: 791, column: 20, scope: !15438)
!15438 = distinct !DILexicalBlock(scope: !15433, file: !2590, line: 790, column: 33)
!15439 = !DILocation(line: 791, column: 9, scope: !15438)
!15440 = !DILocation(line: 792, column: 9, scope: !15438)
!15441 = !DILocation(line: 795, column: 30, scope: !15367)
!15442 = !DILocation(line: 795, column: 12, scope: !15367)
!15443 = !DILocation(line: 795, column: 5, scope: !15367)
!15444 = !DILocation(line: 796, column: 1, scope: !15367)
!15445 = distinct !DISubprogram(name: "parser_init", scope: !2590, file: !2590, line: 1015, type: !15446, scopeLine: 1017, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!15446 = !DISubroutineType(types: !15447)
!15447 = !{!341, !15337, !15241, !480}
!15448 = !DILocalVariable(name: "parser", arg: 1, scope: !15445, file: !2590, line: 1015, type: !15337)
!15449 = !DILocation(line: 1015, column: 40, scope: !15445)
!15450 = !DILocalVariable(name: "descriptor", arg: 2, scope: !15445, file: !2590, line: 1015, type: !15241)
!15451 = !DILocation(line: 1015, column: 77, scope: !15445)
!15452 = !DILocalVariable(name: "string", arg: 3, scope: !15445, file: !2590, line: 1016, type: !480)
!15453 = !DILocation(line: 1016, column: 17, scope: !15445)
!15454 = !DILocalVariable(name: "chunks", scope: !15445, file: !2590, line: 1018, type: !2733)
!15455 = !DILocation(line: 1018, column: 19, scope: !15445)
!15456 = !DILocation(line: 1020, column: 21, scope: !15457)
!15457 = distinct !DILexicalBlock(scope: !15445, file: !2590, line: 1020, column: 9)
!15458 = !DILocation(line: 1020, column: 29, scope: !15457)
!15459 = !DILocation(line: 1020, column: 9, scope: !15457)
!15460 = !DILocation(line: 1020, column: 41, scope: !15457)
!15461 = !DILocation(line: 1020, column: 9, scope: !15445)
!15462 = !DILocation(line: 1021, column: 9, scope: !15457)
!15463 = !DILocation(line: 1023, column: 33, scope: !15445)
!15464 = !DILocation(line: 1023, column: 41, scope: !15445)
!15465 = !DILocation(line: 1023, column: 48, scope: !15445)
!15466 = !DILocation(line: 1023, column: 14, scope: !15445)
!15467 = !DILocation(line: 1023, column: 12, scope: !15445)
!15468 = !DILocation(line: 1024, column: 49, scope: !15445)
!15469 = !DILocation(line: 1024, column: 27, scope: !15445)
!15470 = !DILocation(line: 1024, column: 35, scope: !15445)
!15471 = !DILocation(line: 1024, column: 42, scope: !15445)
!15472 = !DILocation(line: 1024, column: 47, scope: !15445)
!15473 = !DILocation(line: 1024, column: 5, scope: !15445)
!15474 = !DILocation(line: 1024, column: 13, scope: !15445)
!15475 = !DILocation(line: 1024, column: 18, scope: !15445)
!15476 = !DILocation(line: 1024, column: 25, scope: !15445)
!15477 = !DILocation(line: 1025, column: 10, scope: !15478)
!15478 = distinct !DILexicalBlock(scope: !15445, file: !2590, line: 1025, column: 9)
!15479 = !DILocation(line: 1025, column: 9, scope: !15445)
!15480 = !DILocation(line: 1026, column: 20, scope: !15481)
!15481 = distinct !DILexicalBlock(scope: !15478, file: !2590, line: 1025, column: 18)
!15482 = !DILocation(line: 1026, column: 9, scope: !15481)
!15483 = !DILocation(line: 1027, column: 9, scope: !15481)
!15484 = !DILocation(line: 1030, column: 15, scope: !15445)
!15485 = !DILocation(line: 1030, column: 23, scope: !15445)
!15486 = !DILocation(line: 1030, column: 30, scope: !15445)
!15487 = !DILocation(line: 1030, column: 5, scope: !15445)
!15488 = !DILocation(line: 1031, column: 21, scope: !15445)
!15489 = !DILocation(line: 1031, column: 29, scope: !15445)
!15490 = !DILocation(line: 1031, column: 5, scope: !15445)
!15491 = !DILocation(line: 1033, column: 5, scope: !15445)
!15492 = !DILocation(line: 1034, column: 1, scope: !15445)
!15493 = distinct !DISubprogram(name: "lex_next", scope: !2590, file: !2590, line: 460, type: !15494, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!15494 = !DISubroutineType(types: !15495)
!15495 = !{!341, !15305, !15496}
!15496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15338, size: 64)
!15497 = !DILocalVariable(name: "lexer", arg: 1, scope: !15493, file: !2590, line: 460, type: !15305)
!15498 = !DILocation(line: 460, column: 36, scope: !15493)
!15499 = !DILocalVariable(name: "item", arg: 2, scope: !15493, file: !2590, line: 460, type: !15496)
!15500 = !DILocation(line: 460, column: 57, scope: !15493)
!15501 = !DILocation(line: 462, column: 5, scope: !15493)
!15502 = !DILocation(line: 462, column: 12, scope: !15493)
!15503 = !DILocation(line: 462, column: 19, scope: !15493)
!15504 = !DILocation(line: 463, column: 26, scope: !15505)
!15505 = distinct !DILexicalBlock(scope: !15506, file: !2590, line: 463, column: 13)
!15506 = distinct !DILexicalBlock(scope: !15493, file: !2590, line: 462, column: 26)
!15507 = !DILocation(line: 463, column: 33, scope: !15505)
!15508 = !DILocation(line: 463, column: 13, scope: !15505)
!15509 = !DILocation(line: 463, column: 13, scope: !15506)
!15510 = !DILocation(line: 464, column: 13, scope: !15505)
!15511 = !DILocation(line: 465, column: 24, scope: !15506)
!15512 = !DILocation(line: 465, column: 31, scope: !15506)
!15513 = !DILocation(line: 465, column: 37, scope: !15506)
!15514 = !DILocation(line: 465, column: 9, scope: !15506)
!15515 = !DILocation(line: 465, column: 16, scope: !15506)
!15516 = !DILocation(line: 465, column: 22, scope: !15506)
!15517 = distinct !{!15517, !15501, !15518, !3203}
!15518 = !DILocation(line: 466, column: 5, scope: !15493)
!15519 = !DILocation(line: 468, column: 25, scope: !15493)
!15520 = !DILocation(line: 468, column: 32, scope: !15493)
!15521 = !DILocation(line: 468, column: 12, scope: !15493)
!15522 = !DILocation(line: 468, column: 5, scope: !15493)
!15523 = !DILocation(line: 469, column: 1, scope: !15493)
!15524 = distinct !DISubprogram(name: "parser_shutdown", scope: !2590, file: !2590, line: 1036, type: !15525, scopeLine: 1037, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!15525 = !DISubroutineType(types: !15526)
!15526 = !{!341, !15337, !15338}
!15527 = !DILocalVariable(name: "parser", arg: 1, scope: !15524, file: !2590, line: 1036, type: !15337)
!15528 = !DILocation(line: 1036, column: 44, scope: !15524)
!15529 = !DILocalVariable(name: "item", arg: 2, scope: !15524, file: !2590, line: 1036, type: !15338)
!15530 = !DILocation(line: 1036, column: 65, scope: !15524)
!15531 = !DILocalVariable(name: "success", scope: !15524, file: !2590, line: 1038, type: !341)
!15532 = !DILocation(line: 1038, column: 10, scope: !15524)
!15533 = !DILocation(line: 1040, column: 9, scope: !15534)
!15534 = distinct !DILexicalBlock(scope: !15524, file: !2590, line: 1040, column: 9)
!15535 = !DILocation(line: 1040, column: 15, scope: !15534)
!15536 = !DILocation(line: 1040, column: 20, scope: !15534)
!15537 = !DILocation(line: 1040, column: 34, scope: !15534)
!15538 = !DILocation(line: 1040, column: 37, scope: !15534)
!15539 = !DILocation(line: 1040, column: 43, scope: !15534)
!15540 = !DILocation(line: 1040, column: 49, scope: !15534)
!15541 = !DILocation(line: 1040, column: 9, scope: !15524)
!15542 = !DILocation(line: 1041, column: 9, scope: !15543)
!15543 = distinct !DILexicalBlock(scope: !15534, file: !2590, line: 1040, column: 56)
!15544 = !DILocation(line: 1042, column: 22, scope: !15543)
!15545 = !DILocation(line: 1042, column: 28, scope: !15543)
!15546 = !DILocation(line: 1042, column: 34, scope: !15543)
!15547 = !DILocation(line: 1042, column: 9, scope: !15543)
!15548 = !DILocation(line: 1044, column: 17, scope: !15543)
!15549 = !DILocation(line: 1045, column: 5, scope: !15543)
!15550 = !DILocation(line: 1047, column: 22, scope: !15551)
!15551 = distinct !DILexicalBlock(scope: !15524, file: !2590, line: 1047, column: 9)
!15552 = !DILocation(line: 1047, column: 30, scope: !15551)
!15553 = !DILocation(line: 1047, column: 10, scope: !15551)
!15554 = !DILocation(line: 1047, column: 9, scope: !15524)
!15555 = !DILocalVariable(name: "stacked", scope: !15556, file: !2590, line: 1048, type: !2700)
!15556 = distinct !DILexicalBlock(scope: !15551, file: !2590, line: 1047, column: 38)
!15557 = !DILocation(line: 1048, column: 30, scope: !15556)
!15558 = !DILocalVariable(name: "stacked_next", scope: !15556, file: !2590, line: 1048, type: !2700)
!15559 = !DILocation(line: 1048, column: 40, scope: !15556)
!15560 = !DILocation(line: 1050, column: 9, scope: !15561)
!15561 = distinct !DILexicalBlock(scope: !15556, file: !2590, line: 1050, column: 9)
!15562 = !DILocation(line: 1050, column: 9, scope: !15563)
!15563 = distinct !DILexicalBlock(scope: !15561, file: !2590, line: 1050, column: 9)
!15564 = !DILocation(line: 1051, column: 13, scope: !15565)
!15565 = distinct !DILexicalBlock(scope: !15563, file: !2590, line: 1050, column: 74)
!15566 = !DILocation(line: 1053, column: 23, scope: !15565)
!15567 = !DILocation(line: 1053, column: 32, scope: !15565)
!15568 = !DILocation(line: 1053, column: 13, scope: !15565)
!15569 = !DILocation(line: 1054, column: 18, scope: !15565)
!15570 = !DILocation(line: 1054, column: 13, scope: !15565)
!15571 = !DILocation(line: 1055, column: 9, scope: !15565)
!15572 = distinct !{!15572, !15560, !15573, !3203}
!15573 = !DILocation(line: 1055, column: 9, scope: !15561)
!15574 = !DILocation(line: 1057, column: 17, scope: !15556)
!15575 = !DILocation(line: 1058, column: 5, scope: !15556)
!15576 = !DILocation(line: 1060, column: 16, scope: !15524)
!15577 = !DILocation(line: 1060, column: 5, scope: !15524)
!15578 = !DILocation(line: 1061, column: 9, scope: !15579)
!15579 = distinct !DILexicalBlock(scope: !15524, file: !2590, line: 1061, column: 9)
!15580 = !DILocation(line: 1061, column: 17, scope: !15579)
!15581 = !DILocation(line: 1061, column: 9, scope: !15524)
!15582 = !DILocation(line: 1062, column: 9, scope: !15583)
!15583 = distinct !DILexicalBlock(scope: !15579, file: !2590, line: 1061, column: 25)
!15584 = !DILocation(line: 1064, column: 9, scope: !15583)
!15585 = !DILocation(line: 1064, column: 16, scope: !15583)
!15586 = !DILocation(line: 1064, column: 24, scope: !15583)
!15587 = !DILocation(line: 1065, column: 24, scope: !15583)
!15588 = !DILocation(line: 1065, column: 13, scope: !15583)
!15589 = distinct !{!15589, !15584, !15590, !3203}
!15590 = !DILocation(line: 1065, column: 30, scope: !15583)
!15591 = !DILocation(line: 1067, column: 17, scope: !15583)
!15592 = !DILocation(line: 1068, column: 5, scope: !15583)
!15593 = !DILocation(line: 1070, column: 9, scope: !15594)
!15594 = distinct !DILexicalBlock(scope: !15524, file: !2590, line: 1070, column: 9)
!15595 = !DILocation(line: 1070, column: 17, scope: !15594)
!15596 = !DILocation(line: 1070, column: 23, scope: !15594)
!15597 = !DILocation(line: 1070, column: 9, scope: !15524)
!15598 = !DILocation(line: 1071, column: 9, scope: !15599)
!15599 = distinct !DILexicalBlock(scope: !15594, file: !2590, line: 1070, column: 39)
!15600 = !DILocation(line: 1072, column: 17, scope: !15599)
!15601 = !DILocation(line: 1073, column: 5, scope: !15599)
!15602 = !DILocation(line: 1074, column: 9, scope: !15603)
!15603 = distinct !DILexicalBlock(scope: !15524, file: !2590, line: 1074, column: 9)
!15604 = !DILocation(line: 1074, column: 17, scope: !15603)
!15605 = !DILocation(line: 1074, column: 23, scope: !15603)
!15606 = !DILocation(line: 1074, column: 9, scope: !15524)
!15607 = !DILocation(line: 1075, column: 9, scope: !15608)
!15608 = distinct !DILexicalBlock(scope: !15603, file: !2590, line: 1074, column: 38)
!15609 = !DILocation(line: 1076, column: 17, scope: !15608)
!15610 = !DILocation(line: 1077, column: 5, scope: !15608)
!15611 = !DILocation(line: 1079, column: 9, scope: !15612)
!15612 = distinct !DILexicalBlock(scope: !15524, file: !2590, line: 1079, column: 9)
!15613 = !DILocation(line: 1079, column: 9, scope: !15524)
!15614 = !DILocation(line: 1080, column: 41, scope: !15612)
!15615 = !DILocation(line: 1080, column: 19, scope: !15612)
!15616 = !DILocation(line: 1080, column: 17, scope: !15612)
!15617 = !DILocation(line: 1080, column: 9, scope: !15612)
!15618 = !DILocation(line: 1082, column: 10, scope: !15619)
!15619 = distinct !DILexicalBlock(scope: !15524, file: !2590, line: 1082, column: 9)
!15620 = !DILocation(line: 1082, column: 9, scope: !15524)
!15621 = !DILocation(line: 1084, column: 20, scope: !15622)
!15622 = distinct !DILexicalBlock(scope: !15619, file: !2590, line: 1082, column: 19)
!15623 = !DILocation(line: 1084, column: 9, scope: !15622)
!15624 = !DILocation(line: 1085, column: 5, scope: !15622)
!15625 = !DILocation(line: 1087, column: 12, scope: !15524)
!15626 = !DILocation(line: 1087, column: 5, scope: !15524)
!15627 = distinct !DISubprogram(name: "list_empty", scope: !313, file: !313, line: 364, type: !15628, scopeLine: 365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!15628 = !DISubroutineType(types: !15629)
!15629 = !{!341, !15630}
!15630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15631, size: 64)
!15631 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15319)
!15632 = !DILocalVariable(name: "h", arg: 1, scope: !15627, file: !313, line: 364, type: !15630)
!15633 = !DILocation(line: 364, column: 55, scope: !15627)
!15634 = !DILocation(line: 366, column: 8, scope: !15627)
!15635 = !DILocation(line: 367, column: 9, scope: !15627)
!15636 = !DILocation(line: 367, column: 12, scope: !15627)
!15637 = !DILocation(line: 367, column: 14, scope: !15627)
!15638 = !DILocation(line: 367, column: 23, scope: !15627)
!15639 = !DILocation(line: 367, column: 26, scope: !15627)
!15640 = !DILocation(line: 367, column: 19, scope: !15627)
!15641 = !DILocation(line: 367, column: 2, scope: !15627)
!15642 = distinct !DISubprogram(name: "list_node_to_off_", scope: !313, file: !313, line: 716, type: !15643, scopeLine: 717, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!15643 = !DISubroutineType(types: !15644)
!15644 = !{!5, !2707, !6}
!15645 = !DILocalVariable(name: "node", arg: 1, scope: !15642, file: !313, line: 716, type: !2707)
!15646 = !DILocation(line: 716, column: 57, scope: !15642)
!15647 = !DILocalVariable(name: "off", arg: 2, scope: !15642, file: !313, line: 716, type: !6)
!15648 = !DILocation(line: 716, column: 70, scope: !15642)
!15649 = !DILocation(line: 718, column: 26, scope: !15642)
!15650 = !DILocation(line: 718, column: 33, scope: !15642)
!15651 = !DILocation(line: 718, column: 31, scope: !15642)
!15652 = !DILocation(line: 718, column: 2, scope: !15642)
!15653 = distinct !DISubprogram(name: "list_node_from_off_", scope: !313, file: !313, line: 720, type: !15654, scopeLine: 721, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!15654 = !DISubroutineType(types: !15655)
!15655 = !{!2707, !5, !6}
!15656 = !DILocalVariable(name: "ptr", arg: 1, scope: !15653, file: !313, line: 720, type: !5)
!15657 = !DILocation(line: 720, column: 59, scope: !15653)
!15658 = !DILocalVariable(name: "off", arg: 2, scope: !15653, file: !313, line: 720, type: !6)
!15659 = !DILocation(line: 720, column: 71, scope: !15653)
!15660 = !DILocation(line: 722, column: 38, scope: !15653)
!15661 = !DILocation(line: 722, column: 44, scope: !15653)
!15662 = !DILocation(line: 722, column: 42, scope: !15653)
!15663 = !DILocation(line: 722, column: 2, scope: !15653)
!15664 = distinct !DISubprogram(name: "list_del", scope: !313, file: !313, line: 384, type: !15665, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!15665 = !DISubroutineType(types: !15666)
!15666 = !{null, !2707}
!15667 = !DILocalVariable(name: "n", arg: 1, scope: !15664, file: !313, line: 384, type: !2707)
!15668 = !DILocation(line: 384, column: 47, scope: !15664)
!15669 = !DILocation(line: 386, column: 8, scope: !15664)
!15670 = !DILocation(line: 387, column: 18, scope: !15664)
!15671 = !DILocation(line: 387, column: 21, scope: !15664)
!15672 = !DILocation(line: 387, column: 2, scope: !15664)
!15673 = !DILocation(line: 387, column: 5, scope: !15664)
!15674 = !DILocation(line: 387, column: 11, scope: !15664)
!15675 = !DILocation(line: 387, column: 16, scope: !15664)
!15676 = !DILocation(line: 388, column: 18, scope: !15664)
!15677 = !DILocation(line: 388, column: 21, scope: !15664)
!15678 = !DILocation(line: 388, column: 2, scope: !15664)
!15679 = !DILocation(line: 388, column: 5, scope: !15664)
!15680 = !DILocation(line: 388, column: 11, scope: !15664)
!15681 = !DILocation(line: 388, column: 16, scope: !15664)
!15682 = !DILocation(line: 393, column: 1, scope: !15664)
!15683 = distinct !DISubprogram(name: "symtab_pop", scope: !2590, file: !2590, line: 232, type: !15684, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!15684 = !DISubroutineType(types: !15685)
!15685 = !{null, !15337}
!15686 = !DILocalVariable(name: "parser", arg: 1, scope: !15683, file: !2590, line: 232, type: !15337)
!15687 = !DILocation(line: 232, column: 27, scope: !15683)
!15688 = !DILocalVariable(name: "tab", scope: !15683, file: !2590, line: 234, type: !15293)
!15689 = !DILocation(line: 234, column: 20, scope: !15683)
!15690 = !DILocation(line: 234, column: 26, scope: !15683)
!15691 = !DILocation(line: 234, column: 34, scope: !15683)
!15692 = !DILocation(line: 236, column: 5, scope: !15693)
!15693 = distinct !DILexicalBlock(scope: !15694, file: !2590, line: 236, column: 5)
!15694 = distinct !DILexicalBlock(scope: !15683, file: !2590, line: 236, column: 5)
!15695 = !DILocation(line: 236, column: 5, scope: !15694)
!15696 = !DILocation(line: 238, column: 15, scope: !15683)
!15697 = !DILocation(line: 238, column: 20, scope: !15683)
!15698 = !DILocation(line: 238, column: 5, scope: !15683)
!15699 = !DILocation(line: 239, column: 22, scope: !15683)
!15700 = !DILocation(line: 239, column: 27, scope: !15683)
!15701 = !DILocation(line: 239, column: 5, scope: !15683)
!15702 = !DILocation(line: 239, column: 13, scope: !15683)
!15703 = !DILocation(line: 239, column: 20, scope: !15683)
!15704 = !DILocation(line: 240, column: 10, scope: !15683)
!15705 = !DILocation(line: 240, column: 5, scope: !15683)
!15706 = !DILocation(line: 241, column: 1, scope: !15683)
!15707 = distinct !DISubprogram(name: "post_process_template", scope: !2590, file: !2590, line: 923, type: !15708, scopeLine: 924, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!15708 = !DISubroutineType(types: !15709)
!15709 = !{!341, !15337}
!15710 = !DILocalVariable(name: "parser", arg: 1, scope: !15707, file: !2590, line: 923, type: !15337)
!15711 = !DILocation(line: 923, column: 38, scope: !15707)
!15712 = !DILocalVariable(name: "idx", scope: !15707, file: !2590, line: 925, type: !6)
!15713 = !DILocation(line: 925, column: 12, scope: !15707)
!15714 = !DILocalVariable(name: "prev_chunk", scope: !15707, file: !2590, line: 926, type: !2733)
!15715 = !DILocation(line: 926, column: 19, scope: !15707)
!15716 = !DILocalVariable(name: "resized", scope: !15707, file: !2590, line: 926, type: !2733)
!15717 = !DILocation(line: 926, column: 32, scope: !15707)
!15718 = !DILocation(line: 930, column: 14, scope: !15719)
!15719 = distinct !DILexicalBlock(scope: !15707, file: !2590, line: 930, column: 5)
!15720 = !DILocation(line: 930, column: 10, scope: !15719)
!15721 = !DILocation(line: 930, column: 19, scope: !15722)
!15722 = distinct !DILexicalBlock(scope: !15719, file: !2590, line: 930, column: 5)
!15723 = !DILocation(line: 930, column: 25, scope: !15722)
!15724 = !DILocation(line: 930, column: 33, scope: !15722)
!15725 = !DILocation(line: 930, column: 40, scope: !15722)
!15726 = !DILocation(line: 930, column: 23, scope: !15722)
!15727 = !DILocation(line: 930, column: 5, scope: !15719)
!15728 = !DILocalVariable(name: "chunk", scope: !15729, file: !2590, line: 931, type: !2733)
!15729 = distinct !DILexicalBlock(scope: !15722, file: !2590, line: 930, column: 53)
!15730 = !DILocation(line: 931, column: 23, scope: !15729)
!15731 = !DILocation(line: 931, column: 32, scope: !15729)
!15732 = !DILocation(line: 931, column: 40, scope: !15729)
!15733 = !DILocation(line: 931, column: 47, scope: !15729)
!15734 = !DILocation(line: 931, column: 52, scope: !15729)
!15735 = !DILocation(line: 933, column: 13, scope: !15736)
!15736 = distinct !DILexicalBlock(scope: !15729, file: !2590, line: 933, column: 13)
!15737 = !DILocation(line: 933, column: 20, scope: !15736)
!15738 = !DILocation(line: 933, column: 27, scope: !15736)
!15739 = !DILocation(line: 933, column: 13, scope: !15729)
!15740 = !DILocation(line: 934, column: 31, scope: !15741)
!15741 = distinct !DILexicalBlock(scope: !15742, file: !2590, line: 934, column: 13)
!15742 = distinct !DILexicalBlock(scope: !15736, file: !2590, line: 933, column: 60)
!15743 = !DILocation(line: 934, column: 29, scope: !15741)
!15744 = !DILocation(line: 934, column: 18, scope: !15741)
!15745 = !DILocation(line: 935, column: 21, scope: !15746)
!15746 = distinct !DILexicalBlock(scope: !15747, file: !2590, line: 935, column: 21)
!15747 = distinct !DILexicalBlock(scope: !15748, file: !2590, line: 934, column: 49)
!15748 = distinct !DILexicalBlock(scope: !15741, file: !2590, line: 934, column: 13)
!15749 = !DILocation(line: 935, column: 28, scope: !15746)
!15750 = !DILocation(line: 935, column: 35, scope: !15746)
!15751 = !DILocation(line: 935, column: 21, scope: !15747)
!15752 = !DILocation(line: 936, column: 21, scope: !15746)
!15753 = !DILocation(line: 937, column: 21, scope: !15754)
!15754 = distinct !DILexicalBlock(scope: !15747, file: !2590, line: 937, column: 21)
!15755 = !DILocation(line: 937, column: 28, scope: !15754)
!15756 = !DILocation(line: 937, column: 35, scope: !15754)
!15757 = !DILocation(line: 938, column: 29, scope: !15754)
!15758 = !DILocation(line: 938, column: 32, scope: !15754)
!15759 = !DILocation(line: 938, column: 39, scope: !15754)
!15760 = !DILocation(line: 938, column: 47, scope: !15754)
!15761 = !DILocation(line: 938, column: 59, scope: !15754)
!15762 = !DILocation(line: 938, column: 44, scope: !15754)
!15763 = !DILocation(line: 937, column: 21, scope: !15747)
!15764 = !DILocation(line: 939, column: 21, scope: !15754)
!15765 = !DILocation(line: 940, column: 13, scope: !15747)
!15766 = !DILocation(line: 934, column: 45, scope: !15748)
!15767 = !DILocation(line: 934, column: 13, scope: !15748)
!15768 = distinct !{!15768, !15769, !15770}
!15769 = !DILocation(line: 934, column: 13, scope: !15741)
!15770 = !DILocation(line: 940, column: 13, scope: !15741)
!15771 = !DILocalVariable(name: "cd", scope: !15742, file: !2590, line: 942, type: !15772)
!15772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15773, size: 64)
!15773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "chunk_descriptor", file: !2590, line: 155, size: 128, elements: !15774)
!15774 = !{!15775, !15776}
!15775 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !15773, file: !2590, line: 156, baseType: !2733, size: 64)
!15776 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor", scope: !15773, file: !2590, line: 157, baseType: !15777, size: 64, offset: 64)
!15777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15243, size: 64)
!15778 = !DILocation(line: 942, column: 38, scope: !15742)
!15779 = !DILocation(line: 942, column: 43, scope: !15742)
!15780 = !DILocation(line: 943, column: 18, scope: !15781)
!15781 = distinct !DILexicalBlock(scope: !15742, file: !2590, line: 943, column: 17)
!15782 = !DILocation(line: 943, column: 17, scope: !15742)
!15783 = !DILocation(line: 944, column: 17, scope: !15781)
!15784 = !DILocation(line: 946, column: 30, scope: !15742)
!15785 = !DILocation(line: 946, column: 42, scope: !15742)
!15786 = !DILocation(line: 946, column: 13, scope: !15742)
!15787 = !DILocation(line: 946, column: 17, scope: !15742)
!15788 = !DILocation(line: 946, column: 28, scope: !15742)
!15789 = !DILocation(line: 947, column: 25, scope: !15742)
!15790 = !DILocation(line: 947, column: 13, scope: !15742)
!15791 = !DILocation(line: 947, column: 17, scope: !15742)
!15792 = !DILocation(line: 947, column: 23, scope: !15742)
!15793 = !DILocation(line: 948, column: 32, scope: !15742)
!15794 = !DILocation(line: 948, column: 13, scope: !15742)
!15795 = !DILocation(line: 948, column: 25, scope: !15742)
!15796 = !DILocation(line: 948, column: 30, scope: !15742)
!15797 = !DILocation(line: 949, column: 13, scope: !15742)
!15798 = !DILocation(line: 949, column: 25, scope: !15742)
!15799 = !DILocation(line: 949, column: 31, scope: !15742)
!15800 = !DILocation(line: 951, column: 19, scope: !15742)
!15801 = !DILocation(line: 951, column: 41, scope: !15742)
!15802 = !DILocation(line: 951, column: 17, scope: !15742)
!15803 = !DILocation(line: 952, column: 9, scope: !15742)
!15804 = !DILocation(line: 952, column: 20, scope: !15805)
!15805 = distinct !DILexicalBlock(scope: !15736, file: !2590, line: 952, column: 20)
!15806 = !DILocation(line: 952, column: 27, scope: !15805)
!15807 = !DILocation(line: 952, column: 34, scope: !15805)
!15808 = !DILocation(line: 952, column: 20, scope: !15736)
!15809 = !DILocalVariable(name: "flags", scope: !15810, file: !2590, line: 953, type: !2653)
!15810 = distinct !DILexicalBlock(scope: !15805, file: !2590, line: 952, column: 56)
!15811 = !DILocation(line: 953, column: 24, scope: !15810)
!15812 = !DILocation(line: 953, column: 32, scope: !15810)
!15813 = !DILocation(line: 953, column: 39, scope: !15810)
!15814 = !DILocation(line: 955, column: 31, scope: !15815)
!15815 = distinct !DILexicalBlock(scope: !15810, file: !2590, line: 955, column: 13)
!15816 = !DILocation(line: 955, column: 29, scope: !15815)
!15817 = !DILocation(line: 955, column: 18, scope: !15815)
!15818 = !DILocation(line: 956, column: 21, scope: !15819)
!15819 = distinct !DILexicalBlock(scope: !15820, file: !2590, line: 956, column: 21)
!15820 = distinct !DILexicalBlock(scope: !15821, file: !2590, line: 955, column: 49)
!15821 = distinct !DILexicalBlock(scope: !15815, file: !2590, line: 955, column: 13)
!15822 = !DILocation(line: 956, column: 28, scope: !15819)
!15823 = !DILocation(line: 956, column: 35, scope: !15819)
!15824 = !DILocation(line: 956, column: 21, scope: !15820)
!15825 = !DILocation(line: 957, column: 21, scope: !15819)
!15826 = !DILocation(line: 958, column: 21, scope: !15827)
!15827 = distinct !DILexicalBlock(scope: !15820, file: !2590, line: 958, column: 21)
!15828 = !DILocation(line: 958, column: 28, scope: !15827)
!15829 = !DILocation(line: 958, column: 35, scope: !15827)
!15830 = !DILocation(line: 958, column: 54, scope: !15827)
!15831 = !DILocation(line: 958, column: 57, scope: !15827)
!15832 = !DILocation(line: 958, column: 64, scope: !15827)
!15833 = !DILocation(line: 958, column: 72, scope: !15827)
!15834 = !DILocation(line: 958, column: 69, scope: !15827)
!15835 = !DILocation(line: 958, column: 21, scope: !15820)
!15836 = !DILocation(line: 959, column: 37, scope: !15837)
!15837 = distinct !DILexicalBlock(scope: !15827, file: !2590, line: 958, column: 84)
!15838 = !DILocation(line: 959, column: 21, scope: !15837)
!15839 = !DILocation(line: 959, column: 28, scope: !15837)
!15840 = !DILocation(line: 959, column: 34, scope: !15837)
!15841 = !DILocation(line: 960, column: 21, scope: !15837)
!15842 = !DILocation(line: 962, column: 13, scope: !15820)
!15843 = !DILocation(line: 955, column: 45, scope: !15821)
!15844 = !DILocation(line: 955, column: 13, scope: !15821)
!15845 = distinct !{!15845, !15846, !15847}
!15846 = !DILocation(line: 955, column: 13, scope: !15815)
!15847 = !DILocation(line: 962, column: 13, scope: !15815)
!15848 = !DILocalVariable(name: "cd", scope: !15810, file: !2590, line: 964, type: !15772)
!15849 = !DILocation(line: 964, column: 38, scope: !15810)
!15850 = !DILocation(line: 964, column: 43, scope: !15810)
!15851 = !DILocation(line: 965, column: 18, scope: !15852)
!15852 = distinct !DILexicalBlock(scope: !15810, file: !2590, line: 965, column: 17)
!15853 = !DILocation(line: 965, column: 17, scope: !15810)
!15854 = !DILocation(line: 966, column: 17, scope: !15852)
!15855 = !DILocation(line: 968, column: 30, scope: !15810)
!15856 = !DILocation(line: 968, column: 42, scope: !15810)
!15857 = !DILocation(line: 968, column: 13, scope: !15810)
!15858 = !DILocation(line: 968, column: 17, scope: !15810)
!15859 = !DILocation(line: 968, column: 28, scope: !15810)
!15860 = !DILocation(line: 969, column: 32, scope: !15810)
!15861 = !DILocation(line: 969, column: 13, scope: !15810)
!15862 = !DILocation(line: 969, column: 25, scope: !15810)
!15863 = !DILocation(line: 969, column: 30, scope: !15810)
!15864 = !DILocation(line: 970, column: 13, scope: !15810)
!15865 = !DILocation(line: 970, column: 25, scope: !15810)
!15866 = !DILocation(line: 970, column: 31, scope: !15810)
!15867 = !DILocation(line: 972, column: 17, scope: !15868)
!15868 = distinct !DILexicalBlock(scope: !15810, file: !2590, line: 972, column: 17)
!15869 = !DILocation(line: 972, column: 24, scope: !15868)
!15870 = !DILocation(line: 972, column: 31, scope: !15868)
!15871 = !DILocation(line: 972, column: 17, scope: !15810)
!15872 = !DILocation(line: 973, column: 29, scope: !15868)
!15873 = !DILocation(line: 973, column: 17, scope: !15868)
!15874 = !DILocation(line: 973, column: 21, scope: !15868)
!15875 = !DILocation(line: 973, column: 27, scope: !15868)
!15876 = !DILocation(line: 975, column: 29, scope: !15868)
!15877 = !DILocation(line: 975, column: 35, scope: !15868)
!15878 = !DILocation(line: 975, column: 17, scope: !15868)
!15879 = !DILocation(line: 975, column: 21, scope: !15868)
!15880 = !DILocation(line: 975, column: 27, scope: !15868)
!15881 = !DILocation(line: 977, column: 19, scope: !15810)
!15882 = !DILocation(line: 977, column: 41, scope: !15810)
!15883 = !DILocation(line: 977, column: 17, scope: !15810)
!15884 = !DILocation(line: 978, column: 9, scope: !15810)
!15885 = !DILocation(line: 978, column: 20, scope: !15886)
!15886 = distinct !DILexicalBlock(scope: !15805, file: !2590, line: 978, column: 20)
!15887 = !DILocation(line: 978, column: 27, scope: !15886)
!15888 = !DILocation(line: 978, column: 34, scope: !15886)
!15889 = !DILocation(line: 978, column: 20, scope: !15805)
!15890 = !DILocalVariable(name: "descriptor", scope: !15891, file: !2590, line: 979, type: !15777)
!15891 = distinct !DILexicalBlock(scope: !15886, file: !2590, line: 978, column: 54)
!15892 = !DILocation(line: 979, column: 36, scope: !15891)
!15893 = !DILocation(line: 979, column: 49, scope: !15891)
!15894 = !DILocation(line: 979, column: 56, scope: !15891)
!15895 = !DILocalVariable(name: "escape", scope: !15891, file: !2590, line: 980, type: !341)
!15896 = !DILocation(line: 980, column: 18, scope: !15891)
!15897 = !DILocation(line: 980, column: 27, scope: !15891)
!15898 = !DILocation(line: 980, column: 34, scope: !15891)
!15899 = !DILocation(line: 980, column: 40, scope: !15891)
!15900 = !DILocation(line: 982, column: 17, scope: !15901)
!15901 = distinct !DILexicalBlock(scope: !15891, file: !2590, line: 982, column: 17)
!15902 = !DILocation(line: 982, column: 29, scope: !15901)
!15903 = !DILocation(line: 982, column: 46, scope: !15901)
!15904 = !DILocation(line: 982, column: 17, scope: !15891)
!15905 = !DILocation(line: 983, column: 21, scope: !15906)
!15906 = distinct !DILexicalBlock(scope: !15907, file: !2590, line: 983, column: 21)
!15907 = distinct !DILexicalBlock(scope: !15901, file: !2590, line: 982, column: 76)
!15908 = !DILocation(line: 983, column: 21, scope: !15907)
!15909 = !DILocation(line: 984, column: 21, scope: !15906)
!15910 = !DILocation(line: 984, column: 28, scope: !15906)
!15911 = !DILocation(line: 984, column: 35, scope: !15906)
!15912 = !DILocation(line: 986, column: 21, scope: !15906)
!15913 = !DILocation(line: 986, column: 28, scope: !15906)
!15914 = !DILocation(line: 986, column: 35, scope: !15906)
!15915 = !DILocation(line: 987, column: 50, scope: !15907)
!15916 = !DILocation(line: 987, column: 62, scope: !15907)
!15917 = !DILocation(line: 987, column: 31, scope: !15907)
!15918 = !DILocation(line: 987, column: 17, scope: !15907)
!15919 = !DILocation(line: 987, column: 24, scope: !15907)
!15920 = !DILocation(line: 987, column: 29, scope: !15907)
!15921 = !DILocation(line: 988, column: 13, scope: !15907)
!15922 = !DILocation(line: 988, column: 24, scope: !15923)
!15923 = distinct !DILexicalBlock(scope: !15901, file: !2590, line: 988, column: 24)
!15924 = !DILocation(line: 988, column: 24, scope: !15901)
!15925 = !DILocation(line: 989, column: 17, scope: !15926)
!15926 = distinct !DILexicalBlock(scope: !15923, file: !2590, line: 988, column: 32)
!15927 = !DILocation(line: 990, column: 17, scope: !15926)
!15928 = !DILocation(line: 991, column: 25, scope: !15929)
!15929 = distinct !DILexicalBlock(scope: !15923, file: !2590, line: 991, column: 24)
!15930 = !DILocation(line: 991, column: 37, scope: !15929)
!15931 = !DILocation(line: 991, column: 24, scope: !15923)
!15932 = !DILocation(line: 992, column: 17, scope: !15933)
!15933 = distinct !DILexicalBlock(scope: !15929, file: !2590, line: 991, column: 55)
!15934 = !DILocation(line: 993, column: 17, scope: !15933)
!15935 = !DILocation(line: 995, column: 9, scope: !15891)
!15936 = !DILocation(line: 995, column: 20, scope: !15937)
!15937 = distinct !DILexicalBlock(scope: !15886, file: !2590, line: 995, column: 20)
!15938 = !DILocation(line: 995, column: 27, scope: !15937)
!15939 = !DILocation(line: 995, column: 34, scope: !15937)
!15940 = !DILocation(line: 995, column: 20, scope: !15886)
!15941 = !DILocation(line: 996, column: 13, scope: !15942)
!15942 = distinct !DILexicalBlock(scope: !15937, file: !2590, line: 995, column: 50)
!15943 = !DILocation(line: 998, column: 5, scope: !15729)
!15944 = !DILocation(line: 930, column: 49, scope: !15722)
!15945 = !DILocation(line: 930, column: 5, scope: !15722)
!15946 = distinct !{!15946, !15727, !15947, !3203}
!15947 = !DILocation(line: 998, column: 5, scope: !15719)
!15948 = !DILocation(line: 1000, column: 9, scope: !15949)
!15949 = distinct !DILexicalBlock(scope: !15707, file: !2590, line: 1000, column: 9)
!15950 = !DILocation(line: 1000, column: 17, scope: !15949)
!15951 = !DILocation(line: 1000, column: 24, scope: !15949)
!15952 = !DILocation(line: 1000, column: 36, scope: !15949)
!15953 = !DILocation(line: 1000, column: 44, scope: !15949)
!15954 = !DILocation(line: 1000, column: 51, scope: !15949)
!15955 = !DILocation(line: 1000, column: 33, scope: !15949)
!15956 = !DILocation(line: 1000, column: 9, scope: !15707)
!15957 = !DILocation(line: 1001, column: 9, scope: !15958)
!15958 = distinct !DILexicalBlock(scope: !15949, file: !2590, line: 1000, column: 57)
!15959 = !DILocation(line: 1003, column: 32, scope: !15958)
!15960 = !DILocation(line: 1003, column: 40, scope: !15958)
!15961 = !DILocation(line: 1003, column: 47, scope: !15958)
!15962 = !DILocation(line: 1003, column: 53, scope: !15958)
!15963 = !DILocation(line: 1003, column: 61, scope: !15958)
!15964 = !DILocation(line: 1003, column: 68, scope: !15958)
!15965 = !DILocation(line: 1003, column: 19, scope: !15958)
!15966 = !DILocation(line: 1003, column: 17, scope: !15958)
!15967 = !DILocation(line: 1004, column: 13, scope: !15968)
!15968 = distinct !DILexicalBlock(scope: !15958, file: !2590, line: 1004, column: 13)
!15969 = !DILocation(line: 1004, column: 13, scope: !15958)
!15970 = !DILocation(line: 1005, column: 35, scope: !15968)
!15971 = !DILocation(line: 1005, column: 13, scope: !15968)
!15972 = !DILocation(line: 1005, column: 21, scope: !15968)
!15973 = !DILocation(line: 1005, column: 28, scope: !15968)
!15974 = !DILocation(line: 1005, column: 33, scope: !15968)
!15975 = !DILocation(line: 1006, column: 5, scope: !15958)
!15976 = !DILocation(line: 1008, column: 27, scope: !15707)
!15977 = !DILocation(line: 1008, column: 35, scope: !15707)
!15978 = !DILocation(line: 1008, column: 42, scope: !15707)
!15979 = !DILocation(line: 1008, column: 5, scope: !15707)
!15980 = !DILocation(line: 1008, column: 13, scope: !15707)
!15981 = !DILocation(line: 1008, column: 18, scope: !15707)
!15982 = !DILocation(line: 1008, column: 25, scope: !15707)
!15983 = !DILocation(line: 1010, column: 5, scope: !15707)
!15984 = !DILocation(line: 1013, column: 1, scope: !15707)
!15985 = distinct !DISubprogram(name: "emit_chunk", scope: !2590, file: !2590, line: 510, type: !15986, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!15986 = !DISubroutineType(types: !15987)
!15987 = !{null, !15337, !2640, !2653, !5}
!15988 = !DILocalVariable(name: "parser", arg: 1, scope: !15985, file: !2590, line: 510, type: !15337)
!15989 = !DILocation(line: 510, column: 39, scope: !15985)
!15990 = !DILocalVariable(name: "action", arg: 2, scope: !15985, file: !2590, line: 510, type: !2640)
!15991 = !DILocation(line: 510, column: 59, scope: !15985)
!15992 = !DILocalVariable(name: "flags", arg: 3, scope: !15985, file: !2590, line: 511, type: !2653)
!15993 = !DILocation(line: 511, column: 20, scope: !15985)
!15994 = !DILocalVariable(name: "data", arg: 4, scope: !15985, file: !2590, line: 511, type: !5)
!15995 = !DILocation(line: 511, column: 33, scope: !15985)
!15996 = !DILocalVariable(name: "chunk", scope: !15985, file: !2590, line: 513, type: !2733)
!15997 = !DILocation(line: 513, column: 19, scope: !15985)
!15998 = !DILocation(line: 515, column: 9, scope: !15999)
!15999 = distinct !DILexicalBlock(scope: !15985, file: !2590, line: 515, column: 9)
!16000 = !DILocation(line: 515, column: 17, scope: !15999)
!16001 = !DILocation(line: 515, column: 24, scope: !15999)
!16002 = !DILocation(line: 515, column: 32, scope: !15999)
!16003 = !DILocation(line: 515, column: 40, scope: !15999)
!16004 = !DILocation(line: 515, column: 47, scope: !15999)
!16005 = !DILocation(line: 515, column: 29, scope: !15999)
!16006 = !DILocation(line: 515, column: 9, scope: !15985)
!16007 = !DILocation(line: 516, column: 9, scope: !16008)
!16008 = distinct !DILexicalBlock(scope: !15999, file: !2590, line: 515, column: 57)
!16009 = !DILocation(line: 516, column: 17, scope: !16008)
!16010 = !DILocation(line: 516, column: 24, scope: !16008)
!16011 = !DILocation(line: 516, column: 33, scope: !16008)
!16012 = !DILocation(line: 518, column: 30, scope: !16008)
!16013 = !DILocation(line: 518, column: 38, scope: !16008)
!16014 = !DILocation(line: 518, column: 45, scope: !16008)
!16015 = !DILocation(line: 519, column: 13, scope: !16008)
!16016 = !DILocation(line: 519, column: 21, scope: !16008)
!16017 = !DILocation(line: 519, column: 28, scope: !16008)
!16018 = !DILocation(line: 518, column: 17, scope: !16008)
!16019 = !DILocation(line: 518, column: 15, scope: !16008)
!16020 = !DILocation(line: 520, column: 14, scope: !16021)
!16021 = distinct !DILexicalBlock(scope: !16008, file: !2590, line: 520, column: 13)
!16022 = !DILocation(line: 520, column: 13, scope: !16008)
!16023 = !DILocation(line: 521, column: 13, scope: !16021)
!16024 = !DILocation(line: 523, column: 53, scope: !16008)
!16025 = !DILocation(line: 523, column: 31, scope: !16008)
!16026 = !DILocation(line: 523, column: 39, scope: !16008)
!16027 = !DILocation(line: 523, column: 46, scope: !16008)
!16028 = !DILocation(line: 523, column: 51, scope: !16008)
!16029 = !DILocation(line: 523, column: 9, scope: !16008)
!16030 = !DILocation(line: 523, column: 17, scope: !16008)
!16031 = !DILocation(line: 523, column: 22, scope: !16008)
!16032 = !DILocation(line: 523, column: 29, scope: !16008)
!16033 = !DILocation(line: 524, column: 5, scope: !16008)
!16034 = !DILocation(line: 526, column: 14, scope: !15985)
!16035 = !DILocation(line: 526, column: 22, scope: !15985)
!16036 = !DILocation(line: 526, column: 29, scope: !15985)
!16037 = !DILocation(line: 526, column: 34, scope: !15985)
!16038 = !DILocation(line: 526, column: 42, scope: !15985)
!16039 = !DILocation(line: 526, column: 49, scope: !15985)
!16040 = !DILocation(line: 526, column: 53, scope: !15985)
!16041 = !DILocation(line: 526, column: 11, scope: !15985)
!16042 = !DILocation(line: 527, column: 21, scope: !15985)
!16043 = !DILocation(line: 527, column: 5, scope: !15985)
!16044 = !DILocation(line: 527, column: 12, scope: !15985)
!16045 = !DILocation(line: 527, column: 19, scope: !15985)
!16046 = !DILocation(line: 528, column: 20, scope: !15985)
!16047 = !DILocation(line: 528, column: 5, scope: !15985)
!16048 = !DILocation(line: 528, column: 12, scope: !15985)
!16049 = !DILocation(line: 528, column: 18, scope: !15985)
!16050 = !DILocation(line: 529, column: 19, scope: !15985)
!16051 = !DILocation(line: 529, column: 5, scope: !15985)
!16052 = !DILocation(line: 529, column: 12, scope: !15985)
!16053 = !DILocation(line: 529, column: 17, scope: !15985)
!16054 = !DILocation(line: 530, column: 1, scope: !15985)
!16055 = distinct !DISubprogram(name: "consume_item", scope: !2590, file: !2590, line: 252, type: !15494, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!16056 = !DILocalVariable(name: "lexer", arg: 1, scope: !16055, file: !2590, line: 252, type: !15305)
!16057 = !DILocation(line: 252, column: 40, scope: !16055)
!16058 = !DILocalVariable(name: "item", arg: 2, scope: !16055, file: !2590, line: 252, type: !15496)
!16059 = !DILocation(line: 252, column: 61, scope: !16055)
!16060 = !DILocation(line: 254, column: 10, scope: !16061)
!16061 = distinct !DILexicalBlock(scope: !16055, file: !2590, line: 254, column: 9)
!16062 = !DILocation(line: 254, column: 17, scope: !16061)
!16063 = !DILocation(line: 254, column: 29, scope: !16061)
!16064 = !DILocation(line: 254, column: 9, scope: !16055)
!16065 = !DILocation(line: 255, column: 9, scope: !16061)
!16066 = !DILocation(line: 257, column: 14, scope: !16055)
!16067 = !DILocation(line: 257, column: 21, scope: !16055)
!16068 = !DILocation(line: 257, column: 33, scope: !16055)
!16069 = !DILocation(line: 257, column: 39, scope: !16055)
!16070 = !DILocation(line: 257, column: 46, scope: !16055)
!16071 = !DILocation(line: 257, column: 58, scope: !16055)
!16072 = !DILocation(line: 257, column: 6, scope: !16055)
!16073 = !DILocation(line: 257, column: 11, scope: !16055)
!16074 = !DILocation(line: 258, column: 33, scope: !16055)
!16075 = !DILocation(line: 258, column: 40, scope: !16055)
!16076 = !DILocation(line: 258, column: 52, scope: !16055)
!16077 = !DILocation(line: 258, column: 58, scope: !16055)
!16078 = !DILocation(line: 258, column: 63, scope: !16055)
!16079 = !DILocation(line: 258, column: 5, scope: !16055)
!16080 = !DILocation(line: 258, column: 12, scope: !16055)
!16081 = !DILocation(line: 258, column: 24, scope: !16055)
!16082 = !DILocation(line: 258, column: 30, scope: !16055)
!16083 = !DILocation(line: 259, column: 5, scope: !16055)
!16084 = !DILocation(line: 259, column: 12, scope: !16055)
!16085 = !DILocation(line: 259, column: 24, scope: !16055)
!16086 = !DILocation(line: 259, column: 34, scope: !16055)
!16087 = !DILocation(line: 261, column: 5, scope: !16055)
!16088 = !DILocation(line: 262, column: 1, scope: !16055)
!16089 = distinct !DISubprogram(name: "symtab_push", scope: !2590, file: !2590, line: 205, type: !16090, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!16090 = !DISubroutineType(types: !16091)
!16091 = !{!37, !15337, !15241}
!16092 = !DILocalVariable(name: "parser", arg: 1, scope: !16089, file: !2590, line: 205, type: !15337)
!16093 = !DILocation(line: 205, column: 28, scope: !16089)
!16094 = !DILocalVariable(name: "descriptor", arg: 2, scope: !16089, file: !2590, line: 205, type: !15241)
!16095 = !DILocation(line: 205, column: 65, scope: !16089)
!16096 = !DILocalVariable(name: "tab", scope: !16089, file: !2590, line: 207, type: !15293)
!16097 = !DILocation(line: 207, column: 20, scope: !16089)
!16098 = !DILocation(line: 209, column: 10, scope: !16099)
!16099 = distinct !DILexicalBlock(scope: !16089, file: !2590, line: 209, column: 9)
!16100 = !DILocation(line: 209, column: 9, scope: !16089)
!16101 = !DILocation(line: 210, column: 9, scope: !16099)
!16102 = !DILocation(line: 212, column: 11, scope: !16089)
!16103 = !DILocation(line: 212, column: 9, scope: !16089)
!16104 = !DILocation(line: 213, column: 10, scope: !16105)
!16105 = distinct !DILexicalBlock(scope: !16089, file: !2590, line: 213, column: 9)
!16106 = !DILocation(line: 213, column: 9, scope: !16089)
!16107 = !DILocation(line: 214, column: 17, scope: !16105)
!16108 = !DILocation(line: 214, column: 16, scope: !16105)
!16109 = !DILocation(line: 214, column: 9, scope: !16105)
!16110 = !DILocation(line: 216, column: 17, scope: !16089)
!16111 = !DILocation(line: 216, column: 5, scope: !16089)
!16112 = !DILocation(line: 216, column: 10, scope: !16089)
!16113 = !DILocation(line: 216, column: 15, scope: !16089)
!16114 = !DILocation(line: 217, column: 10, scope: !16115)
!16115 = distinct !DILexicalBlock(scope: !16089, file: !2590, line: 217, column: 9)
!16116 = !DILocation(line: 217, column: 15, scope: !16115)
!16117 = !DILocation(line: 217, column: 9, scope: !16089)
!16118 = !DILocation(line: 218, column: 14, scope: !16119)
!16119 = distinct !DILexicalBlock(scope: !16115, file: !2590, line: 217, column: 21)
!16120 = !DILocation(line: 218, column: 9, scope: !16119)
!16121 = !DILocation(line: 219, column: 9, scope: !16119)
!16122 = !DILocation(line: 222, column: 17, scope: !16089)
!16123 = !DILocation(line: 222, column: 25, scope: !16089)
!16124 = !DILocation(line: 222, column: 5, scope: !16089)
!16125 = !DILocation(line: 222, column: 10, scope: !16089)
!16126 = !DILocation(line: 222, column: 15, scope: !16089)
!16127 = !DILocation(line: 223, column: 22, scope: !16089)
!16128 = !DILocation(line: 223, column: 5, scope: !16089)
!16129 = !DILocation(line: 223, column: 13, scope: !16089)
!16130 = !DILocation(line: 223, column: 20, scope: !16089)
!16131 = !DILocation(line: 225, column: 5, scope: !16089)
!16132 = !DILocation(line: 225, column: 12, scope: !16133)
!16133 = distinct !DILexicalBlock(scope: !16134, file: !2590, line: 225, column: 5)
!16134 = distinct !DILexicalBlock(scope: !16089, file: !2590, line: 225, column: 5)
!16135 = !DILocation(line: 225, column: 24, scope: !16133)
!16136 = !DILocation(line: 225, column: 5, scope: !16134)
!16137 = !DILocation(line: 226, column: 18, scope: !16133)
!16138 = !DILocation(line: 226, column: 26, scope: !16133)
!16139 = !DILocation(line: 226, column: 34, scope: !16133)
!16140 = !DILocation(line: 226, column: 40, scope: !16133)
!16141 = !DILocation(line: 226, column: 52, scope: !16133)
!16142 = !DILocation(line: 226, column: 58, scope: !16133)
!16143 = !DILocation(line: 226, column: 9, scope: !16133)
!16144 = !DILocation(line: 225, column: 40, scope: !16133)
!16145 = !DILocation(line: 225, column: 5, scope: !16133)
!16146 = distinct !{!16146, !16136, !16147, !3203}
!16147 = !DILocation(line: 226, column: 68, scope: !16134)
!16148 = !DILocation(line: 228, column: 5, scope: !16089)
!16149 = !DILocation(line: 229, column: 1, scope: !16089)
!16150 = distinct !DISubprogram(name: "lex_init", scope: !2590, file: !2590, line: 471, type: !16151, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!16151 = !DISubroutineType(types: !16152)
!16152 = !{null, !15305, !480}
!16153 = !DILocalVariable(name: "lexer", arg: 1, scope: !16150, file: !2590, line: 471, type: !15305)
!16154 = !DILocation(line: 471, column: 36, scope: !16150)
!16155 = !DILocalVariable(name: "input", arg: 2, scope: !16150, file: !2590, line: 471, type: !480)
!16156 = !DILocation(line: 471, column: 55, scope: !16150)
!16157 = !DILocation(line: 473, column: 5, scope: !16150)
!16158 = !DILocation(line: 473, column: 12, scope: !16150)
!16159 = !DILocation(line: 473, column: 18, scope: !16150)
!16160 = !DILocation(line: 474, column: 33, scope: !16150)
!16161 = !DILocation(line: 474, column: 18, scope: !16150)
!16162 = !DILocation(line: 474, column: 25, scope: !16150)
!16163 = !DILocation(line: 474, column: 31, scope: !16150)
!16164 = !DILocation(line: 474, column: 5, scope: !16150)
!16165 = !DILocation(line: 474, column: 12, scope: !16150)
!16166 = !DILocation(line: 474, column: 16, scope: !16150)
!16167 = !DILocation(line: 475, column: 28, scope: !16150)
!16168 = !DILocation(line: 475, column: 18, scope: !16150)
!16169 = !DILocation(line: 475, column: 5, scope: !16150)
!16170 = !DILocation(line: 475, column: 12, scope: !16150)
!16171 = !DILocation(line: 475, column: 16, scope: !16150)
!16172 = !DILocation(line: 476, column: 1, scope: !16150)
!16173 = distinct !DISubprogram(name: "list_head_init", scope: !313, file: !313, line: 309, type: !16174, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!16174 = !DISubroutineType(types: !16175)
!16175 = !{null, !16176}
!16176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15319, size: 64)
!16177 = !DILocalVariable(name: "h", arg: 1, scope: !16173, file: !313, line: 309, type: !16176)
!16178 = !DILocation(line: 309, column: 53, scope: !16173)
!16179 = !DILocation(line: 311, column: 27, scope: !16173)
!16180 = !DILocation(line: 311, column: 30, scope: !16173)
!16181 = !DILocation(line: 311, column: 14, scope: !16173)
!16182 = !DILocation(line: 311, column: 17, scope: !16173)
!16183 = !DILocation(line: 311, column: 19, scope: !16173)
!16184 = !DILocation(line: 311, column: 24, scope: !16173)
!16185 = !DILocation(line: 311, column: 2, scope: !16173)
!16186 = !DILocation(line: 311, column: 5, scope: !16173)
!16187 = !DILocation(line: 311, column: 7, scope: !16173)
!16188 = !DILocation(line: 311, column: 12, scope: !16173)
!16189 = !DILocation(line: 312, column: 1, scope: !16173)
!16190 = distinct !DISubprogram(name: "lex_text", scope: !2590, file: !2590, line: 443, type: !15303, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!16191 = !DILocalVariable(name: "lexer", arg: 1, scope: !16190, file: !2590, line: 443, type: !15305)
!16192 = !DILocation(line: 443, column: 37, scope: !16190)
!16193 = !DILocation(line: 445, column: 5, scope: !16190)
!16194 = !DILocation(line: 446, column: 22, scope: !16195)
!16195 = distinct !DILexicalBlock(scope: !16196, file: !2590, line: 446, column: 13)
!16196 = distinct !DILexicalBlock(scope: !16190, file: !2590, line: 445, column: 8)
!16197 = !DILocation(line: 446, column: 29, scope: !16195)
!16198 = !DILocation(line: 446, column: 45, scope: !16195)
!16199 = !DILocation(line: 446, column: 14, scope: !16195)
!16200 = !DILocation(line: 446, column: 13, scope: !16196)
!16201 = !DILocation(line: 447, column: 17, scope: !16202)
!16202 = distinct !DILexicalBlock(scope: !16203, file: !2590, line: 447, column: 17)
!16203 = distinct !DILexicalBlock(scope: !16195, file: !2590, line: 446, column: 65)
!16204 = !DILocation(line: 447, column: 24, scope: !16202)
!16205 = !DILocation(line: 447, column: 30, scope: !16202)
!16206 = !DILocation(line: 447, column: 37, scope: !16202)
!16207 = !DILocation(line: 447, column: 28, scope: !16202)
!16208 = !DILocation(line: 447, column: 17, scope: !16203)
!16209 = !DILocation(line: 448, column: 22, scope: !16202)
!16210 = !DILocation(line: 448, column: 17, scope: !16202)
!16211 = !DILocation(line: 449, column: 13, scope: !16203)
!16212 = !DILocation(line: 451, column: 22, scope: !16213)
!16213 = distinct !DILexicalBlock(scope: !16196, file: !2590, line: 451, column: 13)
!16214 = !DILocation(line: 451, column: 29, scope: !16213)
!16215 = !DILocation(line: 451, column: 46, scope: !16213)
!16216 = !DILocation(line: 451, column: 14, scope: !16213)
!16217 = !DILocation(line: 451, column: 13, scope: !16196)
!16218 = !DILocation(line: 452, column: 30, scope: !16213)
!16219 = !DILocation(line: 452, column: 20, scope: !16213)
!16220 = !DILocation(line: 452, column: 13, scope: !16213)
!16221 = !DILocation(line: 453, column: 5, scope: !16196)
!16222 = !DILocation(line: 453, column: 19, scope: !16190)
!16223 = !DILocation(line: 453, column: 14, scope: !16190)
!16224 = !DILocation(line: 453, column: 26, scope: !16190)
!16225 = distinct !{!16225, !16193, !16226, !3203}
!16226 = !DILocation(line: 453, column: 32, scope: !16190)
!16227 = !DILocation(line: 454, column: 9, scope: !16228)
!16228 = distinct !DILexicalBlock(scope: !16190, file: !2590, line: 454, column: 9)
!16229 = !DILocation(line: 454, column: 16, scope: !16228)
!16230 = !DILocation(line: 454, column: 22, scope: !16228)
!16231 = !DILocation(line: 454, column: 29, scope: !16228)
!16232 = !DILocation(line: 454, column: 20, scope: !16228)
!16233 = !DILocation(line: 454, column: 9, scope: !16190)
!16234 = !DILocation(line: 455, column: 14, scope: !16228)
!16235 = !DILocation(line: 455, column: 9, scope: !16228)
!16236 = !DILocation(line: 456, column: 10, scope: !16190)
!16237 = !DILocation(line: 456, column: 5, scope: !16190)
!16238 = !DILocation(line: 457, column: 5, scope: !16190)
!16239 = !DILocation(line: 458, column: 1, scope: !16190)
!16240 = distinct !DISubprogram(name: "emit", scope: !2590, file: !2590, line: 264, type: !16241, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!16241 = !DISubroutineType(types: !16242)
!16242 = !{null, !15305, !2659}
!16243 = !DILocalVariable(name: "lexer", arg: 1, scope: !16240, file: !2590, line: 264, type: !15305)
!16244 = !DILocation(line: 264, column: 32, scope: !16240)
!16245 = !DILocalVariable(name: "item_type", arg: 2, scope: !16240, file: !2590, line: 264, type: !2659)
!16246 = !DILocation(line: 264, column: 54, scope: !16240)
!16247 = !DILocalVariable(name: "item", scope: !16240, file: !2590, line: 266, type: !2710)
!16248 = !DILocation(line: 266, column: 17, scope: !16240)
!16249 = !DILocation(line: 266, column: 24, scope: !16240)
!16250 = !DILocation(line: 267, column: 17, scope: !16240)
!16251 = !DILocation(line: 268, column: 18, scope: !16240)
!16252 = !DILocation(line: 269, column: 22, scope: !16240)
!16253 = !DILocation(line: 269, column: 29, scope: !16240)
!16254 = !DILocation(line: 270, column: 29, scope: !16240)
!16255 = !DILocation(line: 270, column: 36, scope: !16240)
!16256 = !DILocation(line: 270, column: 42, scope: !16240)
!16257 = !DILocation(line: 270, column: 49, scope: !16240)
!16258 = !DILocation(line: 270, column: 40, scope: !16240)
!16259 = !DILocation(line: 273, column: 15, scope: !16240)
!16260 = !DILocation(line: 273, column: 5, scope: !16240)
!16261 = !DILocation(line: 274, column: 1, scope: !16240)
!16262 = distinct !DISubprogram(name: "lex_left_meta", scope: !2590, file: !2590, line: 424, type: !15303, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!16263 = !DILocalVariable(name: "lexer", arg: 1, scope: !16262, file: !2590, line: 424, type: !15305)
!16264 = !DILocation(line: 424, column: 42, scope: !16262)
!16265 = !DILocation(line: 426, column: 19, scope: !16262)
!16266 = !DILocation(line: 426, column: 5, scope: !16262)
!16267 = !DILocation(line: 426, column: 12, scope: !16262)
!16268 = !DILocation(line: 426, column: 16, scope: !16262)
!16269 = !DILocalVariable(name: "r", scope: !16262, file: !2590, line: 427, type: !37)
!16270 = !DILocation(line: 427, column: 9, scope: !16262)
!16271 = !DILocation(line: 427, column: 18, scope: !16262)
!16272 = !DILocation(line: 427, column: 13, scope: !16262)
!16273 = !DILocation(line: 428, column: 9, scope: !16274)
!16274 = distinct !DILexicalBlock(scope: !16262, file: !2590, line: 428, column: 9)
!16275 = !DILocation(line: 428, column: 11, scope: !16274)
!16276 = !DILocation(line: 428, column: 9, scope: !16262)
!16277 = !DILocation(line: 429, column: 9, scope: !16274)
!16278 = !DILocation(line: 430, column: 12, scope: !16262)
!16279 = !DILocation(line: 430, column: 5, scope: !16262)
!16280 = !DILocation(line: 432, column: 10, scope: !16262)
!16281 = !DILocation(line: 432, column: 5, scope: !16262)
!16282 = !DILocation(line: 433, column: 5, scope: !16262)
!16283 = !DILocation(line: 434, column: 1, scope: !16262)
!16284 = distinct !DISubprogram(name: "lex_error", scope: !2590, file: !2590, line: 327, type: !16285, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!16285 = !DISubroutineType(types: !16286)
!16286 = !{!5, !15305, !480, null}
!16287 = !DILocalVariable(name: "lexer", arg: 1, scope: !16284, file: !2590, line: 327, type: !15305)
!16288 = !DILocation(line: 327, column: 38, scope: !16284)
!16289 = !DILocalVariable(name: "msg", arg: 2, scope: !16284, file: !2590, line: 327, type: !480)
!16290 = !DILocation(line: 327, column: 57, scope: !16284)
!16291 = !DILocalVariable(name: "item", scope: !16284, file: !2590, line: 329, type: !2710)
!16292 = !DILocation(line: 329, column: 17, scope: !16284)
!16293 = !DILocalVariable(name: "ap", scope: !16284, file: !2590, line: 330, type: !16294)
!16294 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2698, line: 52, baseType: !16295)
!16295 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !5725, line: 14, baseType: !16296)
!16296 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !16297, baseType: !16298)
!16297 = !DIFile(filename: "common/lwan-template.c", directory: "/home/raj/lwan")
!16298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16299, size: 192, elements: !1557)
!16299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", size: 192, elements: !16300)
!16300 = !{!16301, !16302, !16303, !16304}
!16301 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !16299, file: !16297, line: 318, baseType: !28, size: 32)
!16302 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !16299, file: !16297, line: 318, baseType: !28, size: 32, offset: 32)
!16303 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !16299, file: !16297, line: 318, baseType: !5, size: 64, offset: 64)
!16304 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !16299, file: !16297, line: 318, baseType: !5, size: 64, offset: 128)
!16305 = !DILocation(line: 330, column: 13, scope: !16284)
!16306 = !DILocation(line: 332, column: 5, scope: !16284)
!16307 = !DILocation(line: 333, column: 24, scope: !16284)
!16308 = !DILocation(line: 333, column: 29, scope: !16284)
!16309 = !DILocation(line: 333, column: 5, scope: !16284)
!16310 = !DILocation(line: 334, column: 5, scope: !16284)
!16311 = !DILocation(line: 336, column: 15, scope: !16284)
!16312 = !DILocation(line: 336, column: 5, scope: !16284)
!16313 = !DILocation(line: 337, column: 5, scope: !16284)
!16314 = distinct !DISubprogram(name: "next", scope: !2590, file: !2590, line: 276, type: !16315, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!16315 = !DISubroutineType(types: !16316)
!16316 = !{!37, !15305}
!16317 = !DILocalVariable(name: "lexer", arg: 1, scope: !16314, file: !2590, line: 276, type: !15305)
!16318 = !DILocation(line: 276, column: 31, scope: !16314)
!16319 = !DILocation(line: 278, column: 9, scope: !16320)
!16320 = distinct !DILexicalBlock(scope: !16314, file: !2590, line: 278, column: 9)
!16321 = !DILocation(line: 278, column: 16, scope: !16320)
!16322 = !DILocation(line: 278, column: 23, scope: !16320)
!16323 = !DILocation(line: 278, column: 30, scope: !16320)
!16324 = !DILocation(line: 278, column: 20, scope: !16320)
!16325 = !DILocation(line: 278, column: 9, scope: !16314)
!16326 = !DILocation(line: 279, column: 9, scope: !16320)
!16327 = !DILocalVariable(name: "r", scope: !16314, file: !2590, line: 280, type: !37)
!16328 = !DILocation(line: 280, column: 9, scope: !16314)
!16329 = !DILocation(line: 280, column: 14, scope: !16314)
!16330 = !DILocation(line: 280, column: 21, scope: !16314)
!16331 = !DILocation(line: 280, column: 13, scope: !16314)
!16332 = !DILocation(line: 281, column: 5, scope: !16314)
!16333 = !DILocation(line: 281, column: 12, scope: !16314)
!16334 = !DILocation(line: 281, column: 15, scope: !16314)
!16335 = !DILocation(line: 282, column: 12, scope: !16314)
!16336 = !DILocation(line: 282, column: 5, scope: !16314)
!16337 = !DILocation(line: 283, column: 1, scope: !16314)
!16338 = distinct !DISubprogram(name: "error_vitem", scope: !2590, file: !2590, line: 295, type: !16339, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!16339 = !DISubroutineType(types: !16340)
!16340 = !{!5, !15338, !480, !16341}
!16341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16299, size: 64)
!16342 = !DILocalVariable(name: "item", arg: 1, scope: !16338, file: !2590, line: 295, type: !15338)
!16343 = !DILocation(line: 295, column: 39, scope: !16338)
!16344 = !DILocalVariable(name: "msg", arg: 2, scope: !16338, file: !2590, line: 295, type: !480)
!16345 = !DILocation(line: 295, column: 57, scope: !16338)
!16346 = !DILocalVariable(name: "ap", arg: 3, scope: !16338, file: !2590, line: 295, type: !16341)
!16347 = !DILocation(line: 295, column: 70, scope: !16338)
!16348 = !DILocalVariable(name: "r", scope: !16338, file: !2590, line: 297, type: !37)
!16349 = !DILocation(line: 297, column: 9, scope: !16338)
!16350 = !DILocation(line: 299, column: 5, scope: !16338)
!16351 = !DILocation(line: 299, column: 11, scope: !16338)
!16352 = !DILocation(line: 299, column: 16, scope: !16338)
!16353 = !DILocation(line: 301, column: 29, scope: !16338)
!16354 = !DILocation(line: 301, column: 35, scope: !16338)
!16355 = !DILocation(line: 301, column: 41, scope: !16338)
!16356 = !DILocation(line: 301, column: 48, scope: !16338)
!16357 = !DILocation(line: 301, column: 53, scope: !16338)
!16358 = !DILocation(line: 301, column: 9, scope: !16338)
!16359 = !DILocation(line: 301, column: 7, scope: !16338)
!16360 = !DILocation(line: 302, column: 9, scope: !16361)
!16361 = distinct !DILexicalBlock(scope: !16338, file: !2590, line: 302, column: 9)
!16362 = !DILocation(line: 302, column: 11, scope: !16361)
!16363 = !DILocation(line: 302, column: 9, scope: !16338)
!16364 = !DILocation(line: 303, column: 45, scope: !16365)
!16365 = distinct !DILexicalBlock(scope: !16361, file: !2590, line: 302, column: 16)
!16366 = !DILocation(line: 303, column: 36, scope: !16365)
!16367 = !DILocation(line: 303, column: 29, scope: !16365)
!16368 = !DILocation(line: 303, column: 9, scope: !16365)
!16369 = !DILocation(line: 303, column: 15, scope: !16365)
!16370 = !DILocation(line: 303, column: 21, scope: !16365)
!16371 = !DILocation(line: 303, column: 27, scope: !16365)
!16372 = !DILocation(line: 304, column: 14, scope: !16373)
!16373 = distinct !DILexicalBlock(scope: !16365, file: !2590, line: 304, column: 13)
!16374 = !DILocation(line: 304, column: 20, scope: !16373)
!16375 = !DILocation(line: 304, column: 26, scope: !16373)
!16376 = !DILocation(line: 304, column: 13, scope: !16365)
!16377 = !DILocation(line: 305, column: 13, scope: !16373)
!16378 = !DILocation(line: 307, column: 34, scope: !16365)
!16379 = !DILocation(line: 307, column: 40, scope: !16365)
!16380 = !DILocation(line: 307, column: 46, scope: !16365)
!16381 = !DILocation(line: 307, column: 27, scope: !16365)
!16382 = !DILocation(line: 307, column: 9, scope: !16365)
!16383 = !DILocation(line: 307, column: 15, scope: !16365)
!16384 = !DILocation(line: 307, column: 21, scope: !16365)
!16385 = !DILocation(line: 307, column: 25, scope: !16365)
!16386 = !DILocation(line: 308, column: 5, scope: !16365)
!16387 = !DILocation(line: 309, column: 35, scope: !16388)
!16388 = distinct !DILexicalBlock(scope: !16361, file: !2590, line: 308, column: 12)
!16389 = !DILocation(line: 309, column: 27, scope: !16388)
!16390 = !DILocation(line: 309, column: 9, scope: !16388)
!16391 = !DILocation(line: 309, column: 15, scope: !16388)
!16392 = !DILocation(line: 309, column: 21, scope: !16388)
!16393 = !DILocation(line: 309, column: 25, scope: !16388)
!16394 = !DILocation(line: 312, column: 5, scope: !16338)
!16395 = !DILocation(line: 313, column: 1, scope: !16338)
!16396 = distinct !DISubprogram(name: "emit_item", scope: !2590, file: !2590, line: 243, type: !16397, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!16397 = !DISubroutineType(types: !16398)
!16398 = !{null, !15305, !15338}
!16399 = !DILocalVariable(name: "lexer", arg: 1, scope: !16396, file: !2590, line: 243, type: !15305)
!16400 = !DILocation(line: 243, column: 37, scope: !16396)
!16401 = !DILocalVariable(name: "item", arg: 2, scope: !16396, file: !2590, line: 243, type: !15338)
!16402 = !DILocation(line: 243, column: 57, scope: !16396)
!16403 = !DILocation(line: 245, column: 5, scope: !16396)
!16404 = !DILocation(line: 245, column: 12, scope: !16396)
!16405 = !DILocation(line: 245, column: 24, scope: !16396)
!16406 = !DILocation(line: 245, column: 30, scope: !16396)
!16407 = !DILocation(line: 245, column: 37, scope: !16396)
!16408 = !DILocation(line: 245, column: 49, scope: !16396)
!16409 = !DILocation(line: 245, column: 58, scope: !16396)
!16410 = !DILocation(line: 245, column: 57, scope: !16396)
!16411 = !DILocation(line: 246, column: 32, scope: !16396)
!16412 = !DILocation(line: 246, column: 39, scope: !16396)
!16413 = !DILocation(line: 246, column: 51, scope: !16396)
!16414 = !DILocation(line: 246, column: 56, scope: !16396)
!16415 = !DILocation(line: 246, column: 61, scope: !16396)
!16416 = !DILocation(line: 246, column: 5, scope: !16396)
!16417 = !DILocation(line: 246, column: 12, scope: !16396)
!16418 = !DILocation(line: 246, column: 24, scope: !16396)
!16419 = !DILocation(line: 246, column: 29, scope: !16396)
!16420 = !DILocation(line: 247, column: 5, scope: !16396)
!16421 = !DILocation(line: 247, column: 12, scope: !16396)
!16422 = !DILocation(line: 247, column: 24, scope: !16396)
!16423 = !DILocation(line: 247, column: 34, scope: !16396)
!16424 = !DILocation(line: 249, column: 20, scope: !16396)
!16425 = !DILocation(line: 249, column: 27, scope: !16396)
!16426 = !DILocation(line: 249, column: 5, scope: !16396)
!16427 = !DILocation(line: 249, column: 12, scope: !16396)
!16428 = !DILocation(line: 249, column: 18, scope: !16396)
!16429 = !DILocation(line: 250, column: 1, scope: !16396)
!16430 = distinct !DISubprogram(name: "lex_comment", scope: !2590, file: !2590, line: 369, type: !15303, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!16431 = !DILocalVariable(name: "lexer", arg: 1, scope: !16430, file: !2590, line: 369, type: !15305)
!16432 = !DILocation(line: 369, column: 40, scope: !16430)
!16433 = !DILocalVariable(name: "brackets", scope: !16430, file: !2590, line: 371, type: !6)
!16434 = !DILocation(line: 371, column: 12, scope: !16430)
!16435 = !DILocation(line: 371, column: 23, scope: !16430)
!16436 = !DILocation(line: 373, column: 5, scope: !16430)
!16437 = !DILocalVariable(name: "r", scope: !16438, file: !2590, line: 374, type: !37)
!16438 = distinct !DILexicalBlock(scope: !16430, file: !2590, line: 373, column: 8)
!16439 = !DILocation(line: 374, column: 13, scope: !16438)
!16440 = !DILocation(line: 374, column: 22, scope: !16438)
!16441 = !DILocation(line: 374, column: 17, scope: !16438)
!16442 = !DILocation(line: 375, column: 13, scope: !16443)
!16443 = distinct !DILexicalBlock(scope: !16438, file: !2590, line: 375, column: 13)
!16444 = !DILocation(line: 375, column: 15, scope: !16443)
!16445 = !DILocation(line: 375, column: 13, scope: !16438)
!16446 = !DILocation(line: 376, column: 21, scope: !16443)
!16447 = !DILocation(line: 376, column: 13, scope: !16443)
!16448 = !DILocation(line: 377, column: 18, scope: !16449)
!16449 = distinct !DILexicalBlock(scope: !16443, file: !2590, line: 377, column: 18)
!16450 = !DILocation(line: 377, column: 20, scope: !16449)
!16451 = !DILocation(line: 377, column: 18, scope: !16443)
!16452 = !DILocation(line: 378, column: 21, scope: !16449)
!16453 = !DILocation(line: 378, column: 13, scope: !16449)
!16454 = !DILocation(line: 379, column: 18, scope: !16455)
!16455 = distinct !DILexicalBlock(scope: !16449, file: !2590, line: 379, column: 18)
!16456 = !DILocation(line: 379, column: 20, scope: !16455)
!16457 = !DILocation(line: 379, column: 18, scope: !16449)
!16458 = !DILocation(line: 380, column: 30, scope: !16455)
!16459 = !DILocation(line: 380, column: 20, scope: !16455)
!16460 = !DILocation(line: 380, column: 13, scope: !16455)
!16461 = !DILocation(line: 381, column: 5, scope: !16438)
!16462 = !DILocation(line: 381, column: 14, scope: !16430)
!16463 = distinct !{!16463, !16436, !16464, !3203}
!16464 = !DILocation(line: 381, column: 22, scope: !16430)
!16465 = !DILocation(line: 383, column: 12, scope: !16430)
!16466 = !DILocation(line: 383, column: 5, scope: !16430)
!16467 = !DILocation(line: 384, column: 5, scope: !16430)
!16468 = !DILocation(line: 385, column: 1, scope: !16430)
!16469 = distinct !DISubprogram(name: "backup", scope: !2590, file: !2590, line: 290, type: !16470, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!16470 = !DISubroutineType(types: !16471)
!16471 = !{null, !15305}
!16472 = !DILocalVariable(name: "lexer", arg: 1, scope: !16469, file: !2590, line: 290, type: !15305)
!16473 = !DILocation(line: 290, column: 34, scope: !16469)
!16474 = !DILocation(line: 292, column: 5, scope: !16469)
!16475 = !DILocation(line: 292, column: 12, scope: !16469)
!16476 = !DILocation(line: 292, column: 15, scope: !16469)
!16477 = !DILocation(line: 293, column: 1, scope: !16469)
!16478 = distinct !DISubprogram(name: "lex_inside_action", scope: !2590, file: !2590, line: 387, type: !15303, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!16479 = !DILocalVariable(name: "lexer", arg: 1, scope: !16478, file: !2590, line: 387, type: !15305)
!16480 = !DILocation(line: 387, column: 46, scope: !16478)
!16481 = !DILocation(line: 389, column: 5, scope: !16478)
!16482 = !DILocalVariable(name: "r", scope: !16483, file: !2590, line: 390, type: !37)
!16483 = distinct !DILexicalBlock(scope: !16478, file: !2590, line: 389, column: 18)
!16484 = !DILocation(line: 390, column: 13, scope: !16483)
!16485 = !DILocation(line: 392, column: 22, scope: !16486)
!16486 = distinct !DILexicalBlock(scope: !16483, file: !2590, line: 392, column: 13)
!16487 = !DILocation(line: 392, column: 29, scope: !16486)
!16488 = !DILocation(line: 392, column: 46, scope: !16486)
!16489 = !DILocation(line: 392, column: 14, scope: !16486)
!16490 = !DILocation(line: 392, column: 13, scope: !16483)
!16491 = !DILocation(line: 393, column: 13, scope: !16486)
!16492 = !DILocation(line: 395, column: 18, scope: !16483)
!16493 = !DILocation(line: 395, column: 13, scope: !16483)
!16494 = !DILocation(line: 395, column: 11, scope: !16483)
!16495 = !DILocation(line: 396, column: 13, scope: !16496)
!16496 = distinct !DILexicalBlock(scope: !16483, file: !2590, line: 396, column: 13)
!16497 = !DILocation(line: 396, column: 15, scope: !16496)
!16498 = !DILocation(line: 396, column: 13, scope: !16483)
!16499 = !DILocation(line: 397, column: 30, scope: !16496)
!16500 = !DILocation(line: 397, column: 20, scope: !16496)
!16501 = !DILocation(line: 397, column: 13, scope: !16496)
!16502 = !DILocation(line: 398, column: 13, scope: !16503)
!16503 = distinct !DILexicalBlock(scope: !16483, file: !2590, line: 398, column: 13)
!16504 = !DILocation(line: 398, column: 15, scope: !16503)
!16505 = !DILocation(line: 398, column: 13, scope: !16483)
!16506 = !DILocation(line: 399, column: 30, scope: !16503)
!16507 = !DILocation(line: 399, column: 20, scope: !16503)
!16508 = !DILocation(line: 399, column: 13, scope: !16503)
!16509 = !DILocation(line: 401, column: 13, scope: !16510)
!16510 = distinct !DILexicalBlock(scope: !16483, file: !2590, line: 401, column: 13)
!16511 = !DILocation(line: 401, column: 13, scope: !16483)
!16512 = !DILocation(line: 402, column: 20, scope: !16513)
!16513 = distinct !DILexicalBlock(scope: !16510, file: !2590, line: 401, column: 25)
!16514 = !DILocation(line: 402, column: 13, scope: !16513)
!16515 = !DILocation(line: 403, column: 9, scope: !16513)
!16516 = !DILocation(line: 403, column: 20, scope: !16517)
!16517 = distinct !DILexicalBlock(scope: !16510, file: !2590, line: 403, column: 20)
!16518 = !DILocation(line: 403, column: 22, scope: !16517)
!16519 = !DILocation(line: 403, column: 20, scope: !16510)
!16520 = !DILocation(line: 404, column: 18, scope: !16521)
!16521 = distinct !DILexicalBlock(scope: !16517, file: !2590, line: 403, column: 30)
!16522 = !DILocation(line: 404, column: 13, scope: !16521)
!16523 = !DILocation(line: 405, column: 9, scope: !16521)
!16524 = !DILocation(line: 405, column: 20, scope: !16525)
!16525 = distinct !DILexicalBlock(scope: !16517, file: !2590, line: 405, column: 20)
!16526 = !DILocation(line: 405, column: 22, scope: !16525)
!16527 = !DILocation(line: 405, column: 20, scope: !16517)
!16528 = !DILocation(line: 406, column: 18, scope: !16529)
!16529 = distinct !DILexicalBlock(scope: !16525, file: !2590, line: 405, column: 30)
!16530 = !DILocation(line: 406, column: 13, scope: !16529)
!16531 = !DILocation(line: 407, column: 9, scope: !16529)
!16532 = !DILocation(line: 407, column: 20, scope: !16533)
!16533 = distinct !DILexicalBlock(scope: !16525, file: !2590, line: 407, column: 20)
!16534 = !DILocation(line: 407, column: 22, scope: !16533)
!16535 = !DILocation(line: 407, column: 20, scope: !16525)
!16536 = !DILocation(line: 408, column: 18, scope: !16537)
!16537 = distinct !DILexicalBlock(scope: !16533, file: !2590, line: 407, column: 30)
!16538 = !DILocation(line: 408, column: 13, scope: !16537)
!16539 = !DILocation(line: 409, column: 9, scope: !16537)
!16540 = !DILocation(line: 409, column: 20, scope: !16541)
!16541 = distinct !DILexicalBlock(scope: !16533, file: !2590, line: 409, column: 20)
!16542 = !DILocation(line: 409, column: 22, scope: !16541)
!16543 = !DILocation(line: 409, column: 20, scope: !16533)
!16544 = !DILocation(line: 410, column: 18, scope: !16545)
!16545 = distinct !DILexicalBlock(scope: !16541, file: !2590, line: 409, column: 30)
!16546 = !DILocation(line: 410, column: 13, scope: !16545)
!16547 = !DILocation(line: 411, column: 9, scope: !16545)
!16548 = !DILocation(line: 411, column: 20, scope: !16549)
!16549 = distinct !DILexicalBlock(scope: !16541, file: !2590, line: 411, column: 20)
!16550 = !DILocation(line: 411, column: 22, scope: !16549)
!16551 = !DILocation(line: 411, column: 20, scope: !16541)
!16552 = !DILocation(line: 412, column: 18, scope: !16553)
!16553 = distinct !DILexicalBlock(scope: !16549, file: !2590, line: 411, column: 30)
!16554 = !DILocation(line: 412, column: 13, scope: !16553)
!16555 = !DILocation(line: 413, column: 9, scope: !16553)
!16556 = !DILocation(line: 413, column: 20, scope: !16557)
!16557 = distinct !DILexicalBlock(scope: !16549, file: !2590, line: 413, column: 20)
!16558 = !DILocation(line: 413, column: 22, scope: !16557)
!16559 = !DILocation(line: 413, column: 20, scope: !16549)
!16560 = !DILocation(line: 414, column: 13, scope: !16561)
!16561 = distinct !DILexicalBlock(scope: !16557, file: !2590, line: 413, column: 30)
!16562 = !DILocation(line: 415, column: 20, scope: !16563)
!16563 = distinct !DILexicalBlock(scope: !16557, file: !2590, line: 415, column: 20)
!16564 = !DILocation(line: 415, column: 31, scope: !16563)
!16565 = !DILocation(line: 415, column: 34, scope: !16563)
!16566 = !DILocation(line: 415, column: 36, scope: !16563)
!16567 = !DILocation(line: 415, column: 20, scope: !16557)
!16568 = !DILocation(line: 416, column: 20, scope: !16569)
!16569 = distinct !DILexicalBlock(scope: !16563, file: !2590, line: 415, column: 44)
!16570 = !DILocation(line: 416, column: 13, scope: !16569)
!16571 = !DILocation(line: 417, column: 13, scope: !16569)
!16572 = !DILocation(line: 419, column: 30, scope: !16573)
!16573 = distinct !DILexicalBlock(scope: !16563, file: !2590, line: 418, column: 16)
!16574 = !DILocation(line: 419, column: 65, scope: !16573)
!16575 = !DILocation(line: 419, column: 20, scope: !16573)
!16576 = !DILocation(line: 419, column: 13, scope: !16573)
!16577 = distinct !{!16577, !16481, !16578}
!16578 = !DILocation(line: 421, column: 5, scope: !16478)
!16579 = !DILocation(line: 422, column: 1, scope: !16478)
!16580 = distinct !DISubprogram(name: "lex_right_meta", scope: !2590, file: !2590, line: 436, type: !15303, scopeLine: 437, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!16581 = !DILocalVariable(name: "lexer", arg: 1, scope: !16580, file: !2590, line: 436, type: !15305)
!16582 = !DILocation(line: 436, column: 43, scope: !16580)
!16583 = !DILocation(line: 438, column: 19, scope: !16580)
!16584 = !DILocation(line: 438, column: 5, scope: !16580)
!16585 = !DILocation(line: 438, column: 12, scope: !16580)
!16586 = !DILocation(line: 438, column: 16, scope: !16580)
!16587 = !DILocation(line: 439, column: 10, scope: !16580)
!16588 = !DILocation(line: 439, column: 5, scope: !16580)
!16589 = !DILocation(line: 440, column: 5, scope: !16580)
!16590 = distinct !DISubprogram(name: "ignore", scope: !2590, file: !2590, line: 285, type: !16470, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!16591 = !DILocalVariable(name: "lexer", arg: 1, scope: !16590, file: !2590, line: 285, type: !15305)
!16592 = !DILocation(line: 285, column: 34, scope: !16590)
!16593 = !DILocation(line: 287, column: 20, scope: !16590)
!16594 = !DILocation(line: 287, column: 27, scope: !16590)
!16595 = !DILocation(line: 287, column: 5, scope: !16590)
!16596 = !DILocation(line: 287, column: 12, scope: !16590)
!16597 = !DILocation(line: 287, column: 18, scope: !16590)
!16598 = !DILocation(line: 288, column: 1, scope: !16590)
!16599 = distinct !DISubprogram(name: "lex_quoted_identifier", scope: !2590, file: !2590, line: 354, type: !15303, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!16600 = !DILocalVariable(name: "lexer", arg: 1, scope: !16599, file: !2590, line: 354, type: !15305)
!16601 = !DILocation(line: 354, column: 50, scope: !16599)
!16602 = !DILocalVariable(name: "r", scope: !16599, file: !2590, line: 356, type: !37)
!16603 = !DILocation(line: 356, column: 9, scope: !16599)
!16604 = !DILocation(line: 358, column: 10, scope: !16599)
!16605 = !DILocation(line: 358, column: 5, scope: !16599)
!16606 = !DILocation(line: 359, column: 20, scope: !16599)
!16607 = !DILocation(line: 359, column: 5, scope: !16599)
!16608 = !DILocation(line: 361, column: 14, scope: !16599)
!16609 = !DILocation(line: 361, column: 9, scope: !16599)
!16610 = !DILocation(line: 361, column: 7, scope: !16599)
!16611 = !DILocation(line: 362, column: 9, scope: !16612)
!16612 = distinct !DILexicalBlock(scope: !16599, file: !2590, line: 362, column: 9)
!16613 = !DILocation(line: 362, column: 11, scope: !16612)
!16614 = !DILocation(line: 362, column: 9, scope: !16599)
!16615 = !DILocation(line: 363, column: 26, scope: !16612)
!16616 = !DILocation(line: 363, column: 62, scope: !16612)
!16617 = !DILocation(line: 363, column: 16, scope: !16612)
!16618 = !DILocation(line: 363, column: 9, scope: !16612)
!16619 = !DILocation(line: 365, column: 10, scope: !16599)
!16620 = !DILocation(line: 365, column: 5, scope: !16599)
!16621 = !DILocation(line: 366, column: 5, scope: !16599)
!16622 = !DILocation(line: 367, column: 1, scope: !16599)
!16623 = distinct !DISubprogram(name: "lex_identifier", scope: !2590, file: !2590, line: 345, type: !15303, scopeLine: 346, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!16624 = !DILocalVariable(name: "lexer", arg: 1, scope: !16623, file: !2590, line: 345, type: !15305)
!16625 = !DILocation(line: 345, column: 43, scope: !16623)
!16626 = !DILocation(line: 347, column: 5, scope: !16623)
!16627 = !DILocation(line: 347, column: 25, scope: !16623)
!16628 = !DILocation(line: 347, column: 20, scope: !16623)
!16629 = !DILocation(line: 347, column: 12, scope: !16623)
!16630 = distinct !{!16630, !16626, !16631, !3203}
!16631 = !DILocation(line: 348, column: 9, scope: !16623)
!16632 = !DILocation(line: 349, column: 12, scope: !16623)
!16633 = !DILocation(line: 349, column: 5, scope: !16623)
!16634 = !DILocation(line: 350, column: 10, scope: !16623)
!16635 = !DILocation(line: 350, column: 5, scope: !16623)
!16636 = !DILocation(line: 351, column: 5, scope: !16623)
!16637 = distinct !DISubprogram(name: "isident", scope: !2590, file: !2590, line: 340, type: !16638, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!16638 = !DISubroutineType(types: !16639)
!16639 = !{!341, !37}
!16640 = !DILocalVariable(name: "ch", arg: 1, scope: !16637, file: !2590, line: 340, type: !37)
!16641 = !DILocation(line: 340, column: 25, scope: !16637)
!16642 = !DILocation(line: 342, column: 12, scope: !16637)
!16643 = !DILocation(line: 342, column: 24, scope: !16637)
!16644 = !DILocation(line: 342, column: 27, scope: !16637)
!16645 = !DILocation(line: 342, column: 30, scope: !16637)
!16646 = !DILocation(line: 342, column: 37, scope: !16637)
!16647 = !DILocation(line: 342, column: 40, scope: !16637)
!16648 = !DILocation(line: 342, column: 43, scope: !16637)
!16649 = !DILocation(line: 342, column: 5, scope: !16637)
!16650 = distinct !DISubprogram(name: "parser_meta", scope: !2590, file: !2590, line: 748, type: !15335, scopeLine: 749, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!16651 = !DILocalVariable(name: "parser", arg: 1, scope: !16650, file: !2590, line: 748, type: !15337)
!16652 = !DILocation(line: 748, column: 41, scope: !16650)
!16653 = !DILocalVariable(name: "item", arg: 2, scope: !16650, file: !2590, line: 748, type: !15338)
!16654 = !DILocation(line: 748, column: 62, scope: !16650)
!16655 = !DILocation(line: 750, column: 9, scope: !16656)
!16656 = distinct !DILexicalBlock(scope: !16650, file: !2590, line: 750, column: 9)
!16657 = !DILocation(line: 750, column: 15, scope: !16656)
!16658 = !DILocation(line: 750, column: 20, scope: !16656)
!16659 = !DILocation(line: 750, column: 9, scope: !16650)
!16660 = !DILocation(line: 751, column: 9, scope: !16661)
!16661 = distinct !DILexicalBlock(scope: !16656, file: !2590, line: 750, column: 46)
!16662 = !DILocation(line: 751, column: 17, scope: !16661)
!16663 = !DILocation(line: 751, column: 23, scope: !16661)
!16664 = !DILocation(line: 752, column: 9, scope: !16661)
!16665 = !DILocation(line: 755, column: 9, scope: !16666)
!16666 = distinct !DILexicalBlock(scope: !16650, file: !2590, line: 755, column: 9)
!16667 = !DILocation(line: 755, column: 15, scope: !16666)
!16668 = !DILocation(line: 755, column: 20, scope: !16666)
!16669 = !DILocation(line: 755, column: 9, scope: !16650)
!16670 = !DILocation(line: 756, column: 34, scope: !16666)
!16671 = !DILocation(line: 756, column: 42, scope: !16666)
!16672 = !DILocation(line: 756, column: 16, scope: !16666)
!16673 = !DILocation(line: 756, column: 9, scope: !16666)
!16674 = !DILocation(line: 758, column: 9, scope: !16675)
!16675 = distinct !DILexicalBlock(scope: !16650, file: !2590, line: 758, column: 9)
!16676 = !DILocation(line: 758, column: 15, scope: !16675)
!16677 = !DILocation(line: 758, column: 20, scope: !16675)
!16678 = !DILocation(line: 758, column: 9, scope: !16650)
!16679 = !DILocation(line: 759, column: 9, scope: !16675)
!16680 = !DILocation(line: 761, column: 9, scope: !16681)
!16681 = distinct !DILexicalBlock(scope: !16650, file: !2590, line: 761, column: 9)
!16682 = !DILocation(line: 761, column: 15, scope: !16681)
!16683 = !DILocation(line: 761, column: 20, scope: !16681)
!16684 = !DILocation(line: 761, column: 9, scope: !16650)
!16685 = !DILocation(line: 762, column: 9, scope: !16681)
!16686 = !DILocation(line: 764, column: 9, scope: !16687)
!16687 = distinct !DILexicalBlock(scope: !16650, file: !2590, line: 764, column: 9)
!16688 = !DILocation(line: 764, column: 15, scope: !16687)
!16689 = !DILocation(line: 764, column: 20, scope: !16687)
!16690 = !DILocation(line: 764, column: 9, scope: !16650)
!16691 = !DILocation(line: 765, column: 9, scope: !16687)
!16692 = !DILocation(line: 767, column: 9, scope: !16693)
!16693 = distinct !DILexicalBlock(scope: !16650, file: !2590, line: 767, column: 9)
!16694 = !DILocation(line: 767, column: 15, scope: !16693)
!16695 = !DILocation(line: 767, column: 20, scope: !16693)
!16696 = !DILocation(line: 767, column: 9, scope: !16650)
!16697 = !DILocation(line: 768, column: 9, scope: !16693)
!16698 = !DILocation(line: 770, column: 30, scope: !16650)
!16699 = !DILocation(line: 770, column: 12, scope: !16650)
!16700 = !DILocation(line: 770, column: 5, scope: !16650)
!16701 = !DILocation(line: 771, column: 1, scope: !16650)
!16702 = distinct !DISubprogram(name: "error_item", scope: !2590, file: !2590, line: 315, type: !16703, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!16703 = !DISubroutineType(types: !16704)
!16704 = !{!5, !15338, !480, null}
!16705 = !DILocalVariable(name: "item", arg: 1, scope: !16702, file: !2590, line: 315, type: !15338)
!16706 = !DILocation(line: 315, column: 38, scope: !16702)
!16707 = !DILocalVariable(name: "msg", arg: 2, scope: !16702, file: !2590, line: 315, type: !480)
!16708 = !DILocation(line: 315, column: 56, scope: !16702)
!16709 = !DILocalVariable(name: "ret", scope: !16702, file: !2590, line: 317, type: !5)
!16710 = !DILocation(line: 317, column: 11, scope: !16702)
!16711 = !DILocalVariable(name: "ap", scope: !16702, file: !2590, line: 318, type: !16294)
!16712 = !DILocation(line: 318, column: 13, scope: !16702)
!16713 = !DILocation(line: 320, column: 5, scope: !16702)
!16714 = !DILocation(line: 321, column: 23, scope: !16702)
!16715 = !DILocation(line: 321, column: 29, scope: !16702)
!16716 = !DILocation(line: 321, column: 34, scope: !16702)
!16717 = !DILocation(line: 321, column: 11, scope: !16702)
!16718 = !DILocation(line: 321, column: 9, scope: !16702)
!16719 = !DILocation(line: 322, column: 5, scope: !16702)
!16720 = !DILocation(line: 324, column: 12, scope: !16702)
!16721 = !DILocation(line: 324, column: 5, scope: !16702)
!16722 = distinct !DISubprogram(name: "unexpected_lexeme", scope: !2590, file: !2590, line: 478, type: !16723, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!16723 = !DISubroutineType(types: !16724)
!16724 = !{!5, !15338}
!16725 = !DILocalVariable(name: "item", arg: 1, scope: !16722, file: !2590, line: 478, type: !15338)
!16726 = !DILocation(line: 478, column: 45, scope: !16722)
!16727 = !DILocation(line: 480, column: 23, scope: !16722)
!16728 = !DILocation(line: 481, column: 23, scope: !16722)
!16729 = !DILocation(line: 481, column: 29, scope: !16722)
!16730 = !DILocation(line: 481, column: 9, scope: !16722)
!16731 = !DILocation(line: 481, column: 41, scope: !16722)
!16732 = !DILocation(line: 481, column: 47, scope: !16722)
!16733 = !DILocation(line: 481, column: 53, scope: !16722)
!16734 = !DILocation(line: 481, column: 36, scope: !16722)
!16735 = !DILocation(line: 481, column: 58, scope: !16722)
!16736 = !DILocation(line: 481, column: 64, scope: !16722)
!16737 = !DILocation(line: 481, column: 70, scope: !16722)
!16738 = !DILocation(line: 480, column: 12, scope: !16722)
!16739 = !DILocation(line: 480, column: 5, scope: !16722)
!16740 = distinct !DISubprogram(name: "parser_identifier", scope: !2590, file: !2590, line: 678, type: !15335, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!16741 = !DILocalVariable(name: "parser", arg: 1, scope: !16740, file: !2590, line: 678, type: !15337)
!16742 = !DILocation(line: 678, column: 47, scope: !16740)
!16743 = !DILocalVariable(name: "item", arg: 2, scope: !16740, file: !2590, line: 678, type: !15338)
!16744 = !DILocation(line: 678, column: 68, scope: !16740)
!16745 = !DILocalVariable(name: "next", scope: !16740, file: !2590, line: 680, type: !15338)
!16746 = !DILocation(line: 680, column: 18, scope: !16740)
!16747 = !DILocation(line: 682, column: 20, scope: !16748)
!16748 = distinct !DILexicalBlock(scope: !16740, file: !2590, line: 682, column: 9)
!16749 = !DILocation(line: 682, column: 28, scope: !16748)
!16750 = !DILocation(line: 682, column: 10, scope: !16748)
!16751 = !DILocation(line: 682, column: 9, scope: !16740)
!16752 = !DILocation(line: 683, column: 13, scope: !16753)
!16753 = distinct !DILexicalBlock(scope: !16754, file: !2590, line: 683, column: 13)
!16754 = distinct !DILexicalBlock(scope: !16748, file: !2590, line: 682, column: 43)
!16755 = !DILocation(line: 683, column: 13, scope: !16754)
!16756 = !DILocation(line: 684, column: 14, scope: !16753)
!16757 = !DILocation(line: 684, column: 22, scope: !16753)
!16758 = !DILocation(line: 684, column: 21, scope: !16753)
!16759 = !DILocation(line: 684, column: 13, scope: !16753)
!16760 = !DILocation(line: 685, column: 9, scope: !16754)
!16761 = !DILocation(line: 688, column: 9, scope: !16762)
!16762 = distinct !DILexicalBlock(scope: !16740, file: !2590, line: 688, column: 9)
!16763 = !DILocation(line: 688, column: 17, scope: !16762)
!16764 = !DILocation(line: 688, column: 23, scope: !16762)
!16765 = !DILocation(line: 688, column: 9, scope: !16740)
!16766 = !DILocation(line: 689, column: 13, scope: !16767)
!16767 = distinct !DILexicalBlock(scope: !16768, file: !2590, line: 689, column: 13)
!16768 = distinct !DILexicalBlock(scope: !16762, file: !2590, line: 688, column: 38)
!16769 = !DILocation(line: 689, column: 19, scope: !16767)
!16770 = !DILocation(line: 689, column: 24, scope: !16767)
!16771 = !DILocation(line: 689, column: 13, scope: !16768)
!16772 = !DILocation(line: 690, column: 31, scope: !16767)
!16773 = !DILocation(line: 690, column: 20, scope: !16767)
!16774 = !DILocation(line: 690, column: 13, scope: !16767)
!16775 = !DILocation(line: 691, column: 24, scope: !16776)
!16776 = distinct !DILexicalBlock(scope: !16768, file: !2590, line: 691, column: 13)
!16777 = !DILocation(line: 691, column: 32, scope: !16776)
!16778 = !DILocation(line: 691, column: 14, scope: !16776)
!16779 = !DILocation(line: 691, column: 13, scope: !16768)
!16780 = !DILocation(line: 692, column: 51, scope: !16776)
!16781 = !DILocation(line: 692, column: 57, scope: !16776)
!16782 = !DILocation(line: 692, column: 20, scope: !16776)
!16783 = !DILocation(line: 692, column: 13, scope: !16776)
!16784 = !DILocation(line: 693, column: 5, scope: !16768)
!16785 = !DILocation(line: 695, column: 9, scope: !16786)
!16786 = distinct !DILexicalBlock(scope: !16740, file: !2590, line: 695, column: 9)
!16787 = !DILocation(line: 695, column: 15, scope: !16786)
!16788 = !DILocation(line: 695, column: 20, scope: !16786)
!16789 = !DILocation(line: 695, column: 9, scope: !16740)
!16790 = !DILocalVariable(name: "symbol", scope: !16791, file: !2590, line: 696, type: !15777)
!16791 = distinct !DILexicalBlock(scope: !16786, file: !2590, line: 695, column: 40)
!16792 = !DILocation(line: 696, column: 32, scope: !16791)
!16793 = !DILocation(line: 696, column: 55, scope: !16791)
!16794 = !DILocalVariable(name: "__old", scope: !16795, file: !2590, line: 696, type: !480)
!16795 = distinct !DILexicalBlock(scope: !16791, file: !2590, line: 696, column: 63)
!16796 = !DILocation(line: 696, column: 63, scope: !16795)
!16797 = !DILocalVariable(name: "__len", scope: !16795, file: !2590, line: 696, type: !6)
!16798 = !DILocalVariable(name: "__new", scope: !16795, file: !2590, line: 696, type: !61)
!16799 = !DILocation(line: 696, column: 41, scope: !16791)
!16800 = !DILocation(line: 697, column: 14, scope: !16801)
!16801 = distinct !DILexicalBlock(scope: !16791, file: !2590, line: 697, column: 13)
!16802 = !DILocation(line: 697, column: 13, scope: !16791)
!16803 = !DILocation(line: 698, column: 31, scope: !16804)
!16804 = distinct !DILexicalBlock(scope: !16801, file: !2590, line: 697, column: 22)
!16805 = !DILocation(line: 698, column: 68, scope: !16804)
!16806 = !DILocation(line: 698, column: 74, scope: !16804)
!16807 = !DILocation(line: 698, column: 80, scope: !16804)
!16808 = !DILocation(line: 698, column: 63, scope: !16804)
!16809 = !DILocation(line: 699, column: 17, scope: !16804)
!16810 = !DILocation(line: 699, column: 23, scope: !16804)
!16811 = !DILocation(line: 699, column: 29, scope: !16804)
!16812 = !DILocation(line: 698, column: 20, scope: !16804)
!16813 = !DILocation(line: 698, column: 13, scope: !16804)
!16814 = !DILocation(line: 702, column: 20, scope: !16791)
!16815 = !DILocation(line: 702, column: 45, scope: !16791)
!16816 = !DILocation(line: 702, column: 53, scope: !16791)
!16817 = !DILocation(line: 702, column: 60, scope: !16791)
!16818 = !DILocation(line: 702, column: 9, scope: !16791)
!16819 = !DILocation(line: 704, column: 9, scope: !16791)
!16820 = !DILocation(line: 704, column: 17, scope: !16791)
!16821 = !DILocation(line: 704, column: 23, scope: !16791)
!16822 = !DILocation(line: 705, column: 38, scope: !16791)
!16823 = !DILocation(line: 705, column: 44, scope: !16791)
!16824 = !DILocation(line: 705, column: 50, scope: !16791)
!16825 = !DILocation(line: 705, column: 54, scope: !16791)
!16826 = !DILocation(line: 705, column: 9, scope: !16791)
!16827 = !DILocation(line: 705, column: 17, scope: !16791)
!16828 = !DILocation(line: 705, column: 22, scope: !16791)
!16829 = !DILocation(line: 705, column: 35, scope: !16791)
!16830 = !DILocation(line: 706, column: 9, scope: !16791)
!16831 = !DILocation(line: 709, column: 9, scope: !16832)
!16832 = distinct !DILexicalBlock(scope: !16740, file: !2590, line: 709, column: 9)
!16833 = !DILocation(line: 709, column: 15, scope: !16832)
!16834 = !DILocation(line: 709, column: 20, scope: !16832)
!16835 = !DILocation(line: 709, column: 9, scope: !16740)
!16836 = !DILocalVariable(name: "symbol", scope: !16837, file: !2590, line: 710, type: !15777)
!16837 = distinct !DILexicalBlock(scope: !16832, file: !2590, line: 709, column: 43)
!16838 = !DILocation(line: 710, column: 32, scope: !16837)
!16839 = !DILocation(line: 710, column: 55, scope: !16837)
!16840 = !DILocalVariable(name: "__old", scope: !16841, file: !2590, line: 710, type: !480)
!16841 = distinct !DILexicalBlock(scope: !16837, file: !2590, line: 710, column: 63)
!16842 = !DILocation(line: 710, column: 63, scope: !16841)
!16843 = !DILocalVariable(name: "__len", scope: !16841, file: !2590, line: 710, type: !6)
!16844 = !DILocalVariable(name: "__new", scope: !16841, file: !2590, line: 710, type: !61)
!16845 = !DILocation(line: 710, column: 41, scope: !16837)
!16846 = !DILocation(line: 711, column: 14, scope: !16847)
!16847 = distinct !DILexicalBlock(scope: !16837, file: !2590, line: 711, column: 13)
!16848 = !DILocation(line: 711, column: 13, scope: !16837)
!16849 = !DILocation(line: 712, column: 31, scope: !16850)
!16850 = distinct !DILexicalBlock(scope: !16847, file: !2590, line: 711, column: 22)
!16851 = !DILocation(line: 712, column: 68, scope: !16850)
!16852 = !DILocation(line: 712, column: 74, scope: !16850)
!16853 = !DILocation(line: 712, column: 80, scope: !16850)
!16854 = !DILocation(line: 712, column: 63, scope: !16850)
!16855 = !DILocation(line: 713, column: 17, scope: !16850)
!16856 = !DILocation(line: 713, column: 23, scope: !16850)
!16857 = !DILocation(line: 713, column: 29, scope: !16850)
!16858 = !DILocation(line: 712, column: 20, scope: !16850)
!16859 = !DILocation(line: 712, column: 13, scope: !16850)
!16860 = !DILocation(line: 716, column: 29, scope: !16861)
!16861 = distinct !DILexicalBlock(scope: !16837, file: !2590, line: 716, column: 13)
!16862 = !DILocation(line: 716, column: 14, scope: !16861)
!16863 = !DILocation(line: 716, column: 13, scope: !16837)
!16864 = !DILocation(line: 717, column: 51, scope: !16861)
!16865 = !DILocation(line: 717, column: 57, scope: !16861)
!16866 = !DILocation(line: 717, column: 20, scope: !16861)
!16867 = !DILocation(line: 717, column: 13, scope: !16861)
!16868 = !DILocation(line: 719, column: 20, scope: !16837)
!16869 = !DILocation(line: 719, column: 73, scope: !16837)
!16870 = !DILocation(line: 719, column: 9, scope: !16837)
!16871 = !DILocation(line: 720, column: 26, scope: !16837)
!16872 = !DILocation(line: 720, column: 34, scope: !16837)
!16873 = !DILocation(line: 720, column: 9, scope: !16837)
!16874 = !DILocation(line: 722, column: 9, scope: !16837)
!16875 = !DILocation(line: 725, column: 43, scope: !16740)
!16876 = !DILocation(line: 725, column: 49, scope: !16740)
!16877 = !DILocation(line: 725, column: 12, scope: !16740)
!16878 = !DILocation(line: 725, column: 5, scope: !16740)
!16879 = !DILocation(line: 726, column: 1, scope: !16740)
!16880 = distinct !DISubprogram(name: "parser_partial", scope: !2590, file: !2590, line: 728, type: !15335, scopeLine: 729, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!16881 = !DILocalVariable(name: "parser", arg: 1, scope: !16880, file: !2590, line: 728, type: !15337)
!16882 = !DILocation(line: 728, column: 44, scope: !16880)
!16883 = !DILocalVariable(name: "item", arg: 2, scope: !16880, file: !2590, line: 728, type: !15338)
!16884 = !DILocation(line: 728, column: 65, scope: !16880)
!16885 = !DILocalVariable(name: "tpl", scope: !16880, file: !2590, line: 730, type: !2835)
!16886 = !DILocation(line: 730, column: 17, scope: !16880)
!16887 = !DILocalVariable(name: "filename", scope: !16880, file: !2590, line: 731, type: !61)
!16888 = !DILocation(line: 731, column: 11, scope: !16880)
!16889 = !DILocalVariable(name: "__old", scope: !16890, file: !2590, line: 731, type: !480)
!16890 = distinct !DILexicalBlock(scope: !16880, file: !2590, line: 731, column: 22)
!16891 = !DILocation(line: 731, column: 22, scope: !16890)
!16892 = !DILocalVariable(name: "__len", scope: !16890, file: !2590, line: 731, type: !6)
!16893 = !DILocalVariable(name: "__new", scope: !16890, file: !2590, line: 731, type: !61)
!16894 = !DILocation(line: 733, column: 9, scope: !16895)
!16895 = distinct !DILexicalBlock(scope: !16880, file: !2590, line: 733, column: 9)
!16896 = !DILocation(line: 733, column: 15, scope: !16895)
!16897 = !DILocation(line: 733, column: 20, scope: !16895)
!16898 = !DILocation(line: 733, column: 9, scope: !16880)
!16899 = !DILocation(line: 734, column: 34, scope: !16895)
!16900 = !DILocation(line: 734, column: 16, scope: !16895)
!16901 = !DILocation(line: 734, column: 9, scope: !16895)
!16902 = !DILocation(line: 736, column: 25, scope: !16903)
!16903 = distinct !DILexicalBlock(scope: !16880, file: !2590, line: 736, column: 9)
!16904 = !DILocation(line: 736, column: 10, scope: !16903)
!16905 = !DILocation(line: 736, column: 9, scope: !16880)
!16906 = !DILocation(line: 737, column: 34, scope: !16903)
!16907 = !DILocation(line: 737, column: 16, scope: !16903)
!16908 = !DILocation(line: 737, column: 9, scope: !16903)
!16909 = !DILocation(line: 739, column: 33, scope: !16880)
!16910 = !DILocation(line: 739, column: 43, scope: !16880)
!16911 = !DILocation(line: 739, column: 51, scope: !16880)
!16912 = !DILocation(line: 739, column: 11, scope: !16880)
!16913 = !DILocation(line: 739, column: 9, scope: !16880)
!16914 = !DILocation(line: 740, column: 9, scope: !16915)
!16915 = distinct !DILexicalBlock(scope: !16880, file: !2590, line: 740, column: 9)
!16916 = !DILocation(line: 740, column: 9, scope: !16880)
!16917 = !DILocation(line: 741, column: 20, scope: !16918)
!16918 = distinct !DILexicalBlock(scope: !16915, file: !2590, line: 740, column: 14)
!16919 = !DILocation(line: 741, column: 49, scope: !16918)
!16920 = !DILocation(line: 741, column: 9, scope: !16918)
!16921 = !DILocation(line: 742, column: 9, scope: !16918)
!16922 = !DILocation(line: 745, column: 23, scope: !16880)
!16923 = !DILocation(line: 745, column: 66, scope: !16880)
!16924 = !DILocation(line: 745, column: 12, scope: !16880)
!16925 = !DILocation(line: 745, column: 5, scope: !16880)
!16926 = !DILocation(line: 746, column: 1, scope: !16880)
!16927 = distinct !DISubprogram(name: "parser_iter", scope: !2590, file: !2590, line: 638, type: !15335, scopeLine: 639, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!16928 = !DILocalVariable(name: "parser", arg: 1, scope: !16927, file: !2590, line: 638, type: !15337)
!16929 = !DILocation(line: 638, column: 41, scope: !16927)
!16930 = !DILocalVariable(name: "item", arg: 2, scope: !16927, file: !2590, line: 638, type: !15338)
!16931 = !DILocation(line: 638, column: 62, scope: !16927)
!16932 = !DILocation(line: 640, column: 9, scope: !16933)
!16933 = distinct !DILexicalBlock(scope: !16927, file: !2590, line: 640, column: 9)
!16934 = !DILocation(line: 640, column: 15, scope: !16933)
!16935 = !DILocation(line: 640, column: 20, scope: !16933)
!16936 = !DILocation(line: 640, column: 9, scope: !16927)
!16937 = !DILocalVariable(name: "negate", scope: !16938, file: !2590, line: 641, type: !2653)
!16938 = distinct !DILexicalBlock(scope: !16933, file: !2590, line: 640, column: 40)
!16939 = !DILocation(line: 641, column: 20, scope: !16938)
!16940 = !DILocation(line: 641, column: 29, scope: !16938)
!16941 = !DILocation(line: 641, column: 37, scope: !16938)
!16942 = !DILocation(line: 641, column: 43, scope: !16938)
!16943 = !DILocalVariable(name: "symname", scope: !16938, file: !2590, line: 642, type: !480)
!16944 = !DILocation(line: 642, column: 21, scope: !16938)
!16945 = !DILocalVariable(name: "__old", scope: !16946, file: !2590, line: 642, type: !480)
!16946 = distinct !DILexicalBlock(scope: !16938, file: !2590, line: 642, column: 31)
!16947 = !DILocation(line: 642, column: 31, scope: !16946)
!16948 = !DILocalVariable(name: "__len", scope: !16946, file: !2590, line: 642, type: !6)
!16949 = !DILocalVariable(name: "__new", scope: !16946, file: !2590, line: 642, type: !61)
!16950 = !DILocalVariable(name: "symbol", scope: !16938, file: !2590, line: 643, type: !15777)
!16951 = !DILocation(line: 643, column: 32, scope: !16938)
!16952 = !DILocation(line: 643, column: 55, scope: !16938)
!16953 = !DILocation(line: 643, column: 63, scope: !16938)
!16954 = !DILocation(line: 643, column: 41, scope: !16938)
!16955 = !DILocation(line: 644, column: 14, scope: !16956)
!16956 = distinct !DILexicalBlock(scope: !16938, file: !2590, line: 644, column: 13)
!16957 = !DILocation(line: 644, column: 13, scope: !16938)
!16958 = !DILocation(line: 645, column: 31, scope: !16959)
!16959 = distinct !DILexicalBlock(scope: !16956, file: !2590, line: 644, column: 22)
!16960 = !DILocation(line: 645, column: 68, scope: !16959)
!16961 = !DILocation(line: 645, column: 74, scope: !16959)
!16962 = !DILocation(line: 645, column: 80, scope: !16959)
!16963 = !DILocation(line: 645, column: 63, scope: !16959)
!16964 = !DILocation(line: 646, column: 17, scope: !16959)
!16965 = !DILocation(line: 646, column: 23, scope: !16959)
!16966 = !DILocation(line: 646, column: 29, scope: !16959)
!16967 = !DILocation(line: 645, column: 20, scope: !16959)
!16968 = !DILocation(line: 645, column: 13, scope: !16959)
!16969 = !DILocation(line: 649, column: 29, scope: !16970)
!16970 = distinct !DILexicalBlock(scope: !16938, file: !2590, line: 649, column: 13)
!16971 = !DILocation(line: 649, column: 14, scope: !16970)
!16972 = !DILocation(line: 649, column: 13, scope: !16938)
!16973 = !DILocation(line: 650, column: 31, scope: !16970)
!16974 = !DILocation(line: 650, column: 20, scope: !16970)
!16975 = !DILocation(line: 650, column: 13, scope: !16970)
!16976 = !DILocalVariable(name: "r", scope: !16938, file: !2590, line: 652, type: !37)
!16977 = !DILocation(line: 652, column: 13, scope: !16938)
!16978 = !DILocation(line: 652, column: 29, scope: !16938)
!16979 = !DILocation(line: 652, column: 37, scope: !16938)
!16980 = !DILocation(line: 652, column: 45, scope: !16938)
!16981 = !DILocation(line: 652, column: 17, scope: !16938)
!16982 = !DILocation(line: 653, column: 13, scope: !16983)
!16983 = distinct !DILexicalBlock(scope: !16938, file: !2590, line: 653, column: 13)
!16984 = !DILocation(line: 653, column: 15, scope: !16983)
!16985 = !DILocation(line: 653, column: 13, scope: !16938)
!16986 = !DILocation(line: 654, column: 17, scope: !16987)
!16987 = distinct !DILexicalBlock(scope: !16988, file: !2590, line: 654, column: 17)
!16988 = distinct !DILexicalBlock(scope: !16983, file: !2590, line: 653, column: 20)
!16989 = !DILocation(line: 654, column: 19, scope: !16987)
!16990 = !DILocation(line: 654, column: 17, scope: !16988)
!16991 = !DILocation(line: 655, column: 35, scope: !16987)
!16992 = !DILocation(line: 655, column: 87, scope: !16987)
!16993 = !DILocation(line: 655, column: 24, scope: !16987)
!16994 = !DILocation(line: 655, column: 17, scope: !16987)
!16995 = !DILocation(line: 656, column: 31, scope: !16988)
!16996 = !DILocation(line: 656, column: 20, scope: !16988)
!16997 = !DILocation(line: 656, column: 13, scope: !16988)
!16998 = !DILocation(line: 659, column: 20, scope: !16938)
!16999 = !DILocation(line: 659, column: 47, scope: !16938)
!17000 = !DILocation(line: 659, column: 54, scope: !16938)
!17001 = !DILocation(line: 659, column: 71, scope: !16938)
!17002 = !DILocation(line: 659, column: 9, scope: !16938)
!17003 = !DILocation(line: 661, column: 26, scope: !16938)
!17004 = !DILocation(line: 661, column: 34, scope: !16938)
!17005 = !DILocation(line: 661, column: 9, scope: !16938)
!17006 = !DILocation(line: 662, column: 9, scope: !16938)
!17007 = !DILocation(line: 662, column: 17, scope: !16938)
!17008 = !DILocation(line: 662, column: 23, scope: !16938)
!17009 = !DILocation(line: 663, column: 9, scope: !16938)
!17010 = !DILocation(line: 666, column: 30, scope: !16927)
!17011 = !DILocation(line: 666, column: 12, scope: !16927)
!17012 = !DILocation(line: 666, column: 5, scope: !16927)
!17013 = !DILocation(line: 667, column: 1, scope: !16927)
!17014 = distinct !DISubprogram(name: "parser_negate_iter", scope: !2590, file: !2590, line: 669, type: !15335, scopeLine: 670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!17015 = !DILocalVariable(name: "parser", arg: 1, scope: !17014, file: !2590, line: 669, type: !15337)
!17016 = !DILocation(line: 669, column: 48, scope: !17014)
!17017 = !DILocalVariable(name: "item", arg: 2, scope: !17014, file: !2590, line: 669, type: !15338)
!17018 = !DILocation(line: 669, column: 69, scope: !17014)
!17019 = !DILocation(line: 671, column: 9, scope: !17020)
!17020 = distinct !DILexicalBlock(scope: !17014, file: !2590, line: 671, column: 9)
!17021 = !DILocation(line: 671, column: 15, scope: !17020)
!17022 = !DILocation(line: 671, column: 20, scope: !17020)
!17023 = !DILocation(line: 671, column: 9, scope: !17014)
!17024 = !DILocation(line: 672, column: 34, scope: !17020)
!17025 = !DILocation(line: 672, column: 16, scope: !17020)
!17026 = !DILocation(line: 672, column: 9, scope: !17020)
!17027 = !DILocation(line: 674, column: 5, scope: !17014)
!17028 = !DILocation(line: 674, column: 13, scope: !17014)
!17029 = !DILocation(line: 674, column: 19, scope: !17014)
!17030 = !DILocation(line: 675, column: 5, scope: !17014)
!17031 = !DILocation(line: 676, column: 1, scope: !17014)
!17032 = distinct !DISubprogram(name: "parser_slash", scope: !2590, file: !2590, line: 618, type: !15335, scopeLine: 619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!17033 = !DILocalVariable(name: "parser", arg: 1, scope: !17032, file: !2590, line: 618, type: !15337)
!17034 = !DILocation(line: 618, column: 42, scope: !17032)
!17035 = !DILocalVariable(name: "item", arg: 2, scope: !17032, file: !2590, line: 618, type: !15338)
!17036 = !DILocation(line: 618, column: 63, scope: !17032)
!17037 = !DILocation(line: 620, column: 9, scope: !17038)
!17038 = distinct !DILexicalBlock(scope: !17032, file: !2590, line: 620, column: 9)
!17039 = !DILocation(line: 620, column: 15, scope: !17038)
!17040 = !DILocation(line: 620, column: 20, scope: !17038)
!17041 = !DILocation(line: 620, column: 9, scope: !17032)
!17042 = !DILocalVariable(name: "next", scope: !17043, file: !2590, line: 621, type: !15338)
!17043 = distinct !DILexicalBlock(scope: !17038, file: !2590, line: 620, column: 40)
!17044 = !DILocation(line: 621, column: 22, scope: !17043)
!17045 = !DILocation(line: 623, column: 24, scope: !17046)
!17046 = distinct !DILexicalBlock(scope: !17043, file: !2590, line: 623, column: 13)
!17047 = !DILocation(line: 623, column: 32, scope: !17046)
!17048 = !DILocation(line: 623, column: 14, scope: !17046)
!17049 = !DILocation(line: 623, column: 13, scope: !17043)
!17050 = !DILocation(line: 624, column: 51, scope: !17046)
!17051 = !DILocation(line: 624, column: 57, scope: !17046)
!17052 = !DILocation(line: 624, column: 20, scope: !17046)
!17053 = !DILocation(line: 624, column: 13, scope: !17046)
!17054 = !DILocation(line: 626, column: 13, scope: !17055)
!17055 = distinct !DILexicalBlock(scope: !17043, file: !2590, line: 626, column: 13)
!17056 = !DILocation(line: 626, column: 19, scope: !17055)
!17057 = !DILocation(line: 626, column: 24, scope: !17055)
!17058 = !DILocation(line: 626, column: 13, scope: !17043)
!17059 = !DILocation(line: 627, column: 36, scope: !17055)
!17060 = !DILocation(line: 627, column: 44, scope: !17055)
!17061 = !DILocation(line: 627, column: 20, scope: !17055)
!17062 = !DILocation(line: 627, column: 13, scope: !17055)
!17063 = !DILocation(line: 629, column: 13, scope: !17064)
!17064 = distinct !DILexicalBlock(scope: !17043, file: !2590, line: 629, column: 13)
!17065 = !DILocation(line: 629, column: 19, scope: !17064)
!17066 = !DILocation(line: 629, column: 24, scope: !17064)
!17067 = !DILocation(line: 629, column: 13, scope: !17043)
!17068 = !DILocation(line: 630, column: 45, scope: !17064)
!17069 = !DILocation(line: 630, column: 53, scope: !17064)
!17070 = !DILocation(line: 630, column: 20, scope: !17064)
!17071 = !DILocation(line: 630, column: 13, scope: !17064)
!17072 = !DILocation(line: 632, column: 47, scope: !17043)
!17073 = !DILocation(line: 632, column: 53, scope: !17043)
!17074 = !DILocation(line: 632, column: 16, scope: !17043)
!17075 = !DILocation(line: 632, column: 9, scope: !17043)
!17076 = !DILocation(line: 635, column: 30, scope: !17032)
!17077 = !DILocation(line: 635, column: 12, scope: !17032)
!17078 = !DILocation(line: 635, column: 5, scope: !17032)
!17079 = !DILocation(line: 636, column: 1, scope: !17032)
!17080 = distinct !DISubprogram(name: "unexpected_lexeme_or_lex_error", scope: !2590, file: !2590, line: 484, type: !17081, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!17081 = !DISubroutineType(types: !17082)
!17082 = !{!5, !15338, !15338}
!17083 = !DILocalVariable(name: "item", arg: 1, scope: !17080, file: !2590, line: 484, type: !15338)
!17084 = !DILocation(line: 484, column: 58, scope: !17080)
!17085 = !DILocalVariable(name: "lex_error", arg: 2, scope: !17080, file: !2590, line: 484, type: !15338)
!17086 = !DILocation(line: 484, column: 77, scope: !17080)
!17087 = !DILocation(line: 486, column: 9, scope: !17088)
!17088 = distinct !DILexicalBlock(scope: !17080, file: !2590, line: 486, column: 9)
!17089 = !DILocation(line: 486, column: 19, scope: !17088)
!17090 = !DILocation(line: 486, column: 23, scope: !17088)
!17091 = !DILocation(line: 486, column: 34, scope: !17088)
!17092 = !DILocation(line: 486, column: 39, scope: !17088)
!17093 = !DILocation(line: 486, column: 53, scope: !17088)
!17094 = !DILocation(line: 486, column: 56, scope: !17088)
!17095 = !DILocation(line: 486, column: 67, scope: !17088)
!17096 = !DILocation(line: 486, column: 72, scope: !17088)
!17097 = !DILocation(line: 486, column: 9, scope: !17080)
!17098 = !DILocation(line: 487, column: 10, scope: !17099)
!17099 = distinct !DILexicalBlock(scope: !17088, file: !2590, line: 486, column: 86)
!17100 = !DILocation(line: 487, column: 18, scope: !17099)
!17101 = !DILocation(line: 487, column: 17, scope: !17099)
!17102 = !DILocation(line: 488, column: 9, scope: !17099)
!17103 = !DILocation(line: 491, column: 30, scope: !17080)
!17104 = !DILocation(line: 491, column: 12, scope: !17080)
!17105 = !DILocation(line: 491, column: 5, scope: !17080)
!17106 = !DILocation(line: 492, column: 1, scope: !17080)
!17107 = distinct !DISubprogram(name: "parser_end_iter", scope: !2590, file: !2590, line: 556, type: !15335, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!17108 = !DILocalVariable(name: "parser", arg: 1, scope: !17107, file: !2590, line: 556, type: !15337)
!17109 = !DILocation(line: 556, column: 45, scope: !17107)
!17110 = !DILocalVariable(name: "item", arg: 2, scope: !17107, file: !2590, line: 556, type: !15338)
!17111 = !DILocation(line: 556, column: 66, scope: !17107)
!17112 = !DILocalVariable(name: "iter", scope: !17107, file: !2590, line: 558, type: !2733)
!17113 = !DILocation(line: 558, column: 19, scope: !17107)
!17114 = !DILocalVariable(name: "symbol", scope: !17107, file: !2590, line: 559, type: !15777)
!17115 = !DILocation(line: 559, column: 28, scope: !17107)
!17116 = !DILocalVariable(name: "idx", scope: !17107, file: !2590, line: 560, type: !2697)
!17117 = !DILocation(line: 560, column: 13, scope: !17107)
!17118 = !DILocation(line: 562, column: 35, scope: !17119)
!17119 = distinct !DILexicalBlock(scope: !17107, file: !2590, line: 562, column: 9)
!17120 = !DILocation(line: 562, column: 43, scope: !17119)
!17121 = !DILocation(line: 562, column: 10, scope: !17119)
!17122 = !DILocation(line: 562, column: 9, scope: !17107)
!17123 = !DILocation(line: 563, column: 9, scope: !17119)
!17124 = !DILocation(line: 565, column: 28, scope: !17107)
!17125 = !DILocalVariable(name: "__old", scope: !17126, file: !2590, line: 565, type: !480)
!17126 = distinct !DILexicalBlock(scope: !17107, file: !2590, line: 565, column: 36)
!17127 = !DILocation(line: 565, column: 36, scope: !17126)
!17128 = !DILocalVariable(name: "__len", scope: !17126, file: !2590, line: 565, type: !6)
!17129 = !DILocalVariable(name: "__new", scope: !17126, file: !2590, line: 565, type: !61)
!17130 = !DILocation(line: 565, column: 14, scope: !17107)
!17131 = !DILocation(line: 565, column: 12, scope: !17107)
!17132 = !DILocation(line: 566, column: 10, scope: !17133)
!17133 = distinct !DILexicalBlock(scope: !17107, file: !2590, line: 566, column: 9)
!17134 = !DILocation(line: 566, column: 9, scope: !17107)
!17135 = !DILocation(line: 567, column: 27, scope: !17136)
!17136 = distinct !DILexicalBlock(scope: !17133, file: !2590, line: 566, column: 18)
!17137 = !DILocation(line: 567, column: 64, scope: !17136)
!17138 = !DILocation(line: 567, column: 70, scope: !17136)
!17139 = !DILocation(line: 567, column: 76, scope: !17136)
!17140 = !DILocation(line: 567, column: 59, scope: !17136)
!17141 = !DILocation(line: 568, column: 13, scope: !17136)
!17142 = !DILocation(line: 568, column: 19, scope: !17136)
!17143 = !DILocation(line: 568, column: 25, scope: !17136)
!17144 = !DILocation(line: 567, column: 16, scope: !17136)
!17145 = !DILocation(line: 567, column: 9, scope: !17136)
!17146 = !DILocation(line: 571, column: 10, scope: !17147)
!17147 = distinct !DILexicalBlock(scope: !17107, file: !2590, line: 571, column: 9)
!17148 = !DILocation(line: 571, column: 18, scope: !17147)
!17149 = !DILocation(line: 571, column: 25, scope: !17147)
!17150 = !DILocation(line: 571, column: 9, scope: !17107)
!17151 = !DILocation(line: 572, column: 27, scope: !17147)
!17152 = !DILocation(line: 572, column: 16, scope: !17147)
!17153 = !DILocation(line: 572, column: 9, scope: !17147)
!17154 = !DILocation(line: 573, column: 25, scope: !17155)
!17155 = distinct !DILexicalBlock(scope: !17107, file: !2590, line: 573, column: 5)
!17156 = !DILocation(line: 573, column: 33, scope: !17155)
!17157 = !DILocation(line: 573, column: 40, scope: !17155)
!17158 = !DILocation(line: 573, column: 45, scope: !17155)
!17159 = !DILocation(line: 573, column: 14, scope: !17155)
!17160 = !DILocation(line: 573, column: 10, scope: !17155)
!17161 = !DILocation(line: 573, column: 50, scope: !17162)
!17162 = distinct !DILexicalBlock(scope: !17155, file: !2590, line: 573, column: 5)
!17163 = !DILocation(line: 573, column: 54, scope: !17162)
!17164 = !DILocation(line: 573, column: 5, scope: !17155)
!17165 = !DILocation(line: 574, column: 17, scope: !17166)
!17166 = distinct !DILexicalBlock(scope: !17162, file: !2590, line: 573, column: 67)
!17167 = !DILocation(line: 574, column: 25, scope: !17166)
!17168 = !DILocation(line: 574, column: 32, scope: !17166)
!17169 = !DILocation(line: 574, column: 37, scope: !17166)
!17170 = !DILocation(line: 574, column: 14, scope: !17166)
!17171 = !DILocation(line: 576, column: 13, scope: !17172)
!17172 = distinct !DILexicalBlock(scope: !17166, file: !2590, line: 576, column: 13)
!17173 = !DILocation(line: 576, column: 19, scope: !17172)
!17174 = !DILocation(line: 576, column: 26, scope: !17172)
!17175 = !DILocation(line: 576, column: 13, scope: !17166)
!17176 = !DILocation(line: 577, column: 13, scope: !17172)
!17177 = !DILocation(line: 578, column: 13, scope: !17178)
!17178 = distinct !DILexicalBlock(scope: !17166, file: !2590, line: 578, column: 13)
!17179 = !DILocation(line: 578, column: 19, scope: !17178)
!17180 = !DILocation(line: 578, column: 27, scope: !17178)
!17181 = !DILocation(line: 578, column: 24, scope: !17178)
!17182 = !DILocation(line: 578, column: 13, scope: !17166)
!17183 = !DILocation(line: 579, column: 24, scope: !17184)
!17184 = distinct !DILexicalBlock(scope: !17178, file: !2590, line: 578, column: 35)
!17185 = !DILocation(line: 579, column: 52, scope: !17184)
!17186 = !DILocation(line: 579, column: 13, scope: !17184)
!17187 = !DILocation(line: 580, column: 24, scope: !17184)
!17188 = !DILocation(line: 580, column: 13, scope: !17184)
!17189 = !DILocation(line: 581, column: 13, scope: !17184)
!17190 = !DILocation(line: 583, column: 5, scope: !17166)
!17191 = !DILocation(line: 573, column: 63, scope: !17162)
!17192 = !DILocation(line: 573, column: 5, scope: !17162)
!17193 = distinct !{!17193, !17164, !17194, !3203}
!17194 = !DILocation(line: 583, column: 5, scope: !17155)
!17195 = !DILocation(line: 585, column: 23, scope: !17107)
!17196 = !DILocation(line: 585, column: 62, scope: !17107)
!17197 = !DILocation(line: 585, column: 68, scope: !17107)
!17198 = !DILocation(line: 585, column: 74, scope: !17107)
!17199 = !DILocation(line: 585, column: 57, scope: !17107)
!17200 = !DILocation(line: 585, column: 79, scope: !17107)
!17201 = !DILocation(line: 585, column: 85, scope: !17107)
!17202 = !DILocation(line: 585, column: 91, scope: !17107)
!17203 = !DILocation(line: 585, column: 12, scope: !17107)
!17204 = !DILocation(line: 585, column: 5, scope: !17107)
!17205 = !DILocation(line: 586, column: 1, scope: !17107)
!17206 = distinct !DISubprogram(name: "parser_end_var_not_empty", scope: !2590, file: !2590, line: 588, type: !15335, scopeLine: 589, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!17207 = !DILocalVariable(name: "parser", arg: 1, scope: !17206, file: !2590, line: 588, type: !15337)
!17208 = !DILocation(line: 588, column: 54, scope: !17206)
!17209 = !DILocalVariable(name: "item", arg: 2, scope: !17206, file: !2590, line: 588, type: !15338)
!17210 = !DILocation(line: 588, column: 75, scope: !17206)
!17211 = !DILocalVariable(name: "iter", scope: !17206, file: !2590, line: 590, type: !2733)
!17212 = !DILocation(line: 590, column: 19, scope: !17206)
!17213 = !DILocalVariable(name: "symbol", scope: !17206, file: !2590, line: 591, type: !15777)
!17214 = !DILocation(line: 591, column: 28, scope: !17206)
!17215 = !DILocalVariable(name: "idx", scope: !17206, file: !2590, line: 592, type: !2697)
!17216 = !DILocation(line: 592, column: 13, scope: !17206)
!17217 = !DILocation(line: 594, column: 25, scope: !17218)
!17218 = distinct !DILexicalBlock(scope: !17206, file: !2590, line: 594, column: 9)
!17219 = !DILocation(line: 594, column: 10, scope: !17218)
!17220 = !DILocation(line: 594, column: 9, scope: !17206)
!17221 = !DILocation(line: 595, column: 34, scope: !17218)
!17222 = !DILocation(line: 595, column: 16, scope: !17218)
!17223 = !DILocation(line: 595, column: 9, scope: !17218)
!17224 = !DILocation(line: 596, column: 35, scope: !17225)
!17225 = distinct !DILexicalBlock(scope: !17206, file: !2590, line: 596, column: 9)
!17226 = !DILocation(line: 596, column: 43, scope: !17225)
!17227 = !DILocation(line: 596, column: 10, scope: !17225)
!17228 = !DILocation(line: 596, column: 9, scope: !17206)
!17229 = !DILocation(line: 597, column: 9, scope: !17225)
!17230 = !DILocation(line: 599, column: 28, scope: !17206)
!17231 = !DILocalVariable(name: "__old", scope: !17232, file: !2590, line: 599, type: !480)
!17232 = distinct !DILexicalBlock(scope: !17206, file: !2590, line: 599, column: 36)
!17233 = !DILocation(line: 599, column: 36, scope: !17232)
!17234 = !DILocalVariable(name: "__len", scope: !17232, file: !2590, line: 599, type: !6)
!17235 = !DILocalVariable(name: "__new", scope: !17232, file: !2590, line: 599, type: !61)
!17236 = !DILocation(line: 599, column: 14, scope: !17206)
!17237 = !DILocation(line: 599, column: 12, scope: !17206)
!17238 = !DILocation(line: 600, column: 10, scope: !17239)
!17239 = distinct !DILexicalBlock(scope: !17206, file: !2590, line: 600, column: 9)
!17240 = !DILocation(line: 600, column: 9, scope: !17206)
!17241 = !DILocation(line: 601, column: 27, scope: !17242)
!17242 = distinct !DILexicalBlock(scope: !17239, file: !2590, line: 600, column: 18)
!17243 = !DILocation(line: 601, column: 64, scope: !17242)
!17244 = !DILocation(line: 601, column: 70, scope: !17242)
!17245 = !DILocation(line: 601, column: 76, scope: !17242)
!17246 = !DILocation(line: 601, column: 59, scope: !17242)
!17247 = !DILocation(line: 602, column: 13, scope: !17242)
!17248 = !DILocation(line: 602, column: 19, scope: !17242)
!17249 = !DILocation(line: 602, column: 25, scope: !17242)
!17250 = !DILocation(line: 601, column: 16, scope: !17242)
!17251 = !DILocation(line: 601, column: 9, scope: !17242)
!17252 = !DILocation(line: 605, column: 25, scope: !17253)
!17253 = distinct !DILexicalBlock(scope: !17206, file: !2590, line: 605, column: 5)
!17254 = !DILocation(line: 605, column: 33, scope: !17253)
!17255 = !DILocation(line: 605, column: 40, scope: !17253)
!17256 = !DILocation(line: 605, column: 45, scope: !17253)
!17257 = !DILocation(line: 605, column: 14, scope: !17253)
!17258 = !DILocation(line: 605, column: 10, scope: !17253)
!17259 = !DILocation(line: 605, column: 50, scope: !17260)
!17260 = distinct !DILexicalBlock(scope: !17253, file: !2590, line: 605, column: 5)
!17261 = !DILocation(line: 605, column: 54, scope: !17260)
!17262 = !DILocation(line: 605, column: 5, scope: !17253)
!17263 = !DILocation(line: 606, column: 17, scope: !17264)
!17264 = distinct !DILexicalBlock(scope: !17260, file: !2590, line: 605, column: 67)
!17265 = !DILocation(line: 606, column: 25, scope: !17264)
!17266 = !DILocation(line: 606, column: 32, scope: !17264)
!17267 = !DILocation(line: 606, column: 37, scope: !17264)
!17268 = !DILocation(line: 606, column: 14, scope: !17264)
!17269 = !DILocation(line: 607, column: 13, scope: !17270)
!17270 = distinct !DILexicalBlock(scope: !17264, file: !2590, line: 607, column: 13)
!17271 = !DILocation(line: 607, column: 19, scope: !17270)
!17272 = !DILocation(line: 607, column: 26, scope: !17270)
!17273 = !DILocation(line: 607, column: 13, scope: !17264)
!17274 = !DILocation(line: 608, column: 13, scope: !17270)
!17275 = !DILocation(line: 609, column: 13, scope: !17276)
!17276 = distinct !DILexicalBlock(scope: !17264, file: !2590, line: 609, column: 13)
!17277 = !DILocation(line: 609, column: 19, scope: !17276)
!17278 = !DILocation(line: 609, column: 27, scope: !17276)
!17279 = !DILocation(line: 609, column: 24, scope: !17276)
!17280 = !DILocation(line: 609, column: 13, scope: !17264)
!17281 = !DILocation(line: 610, column: 24, scope: !17282)
!17282 = distinct !DILexicalBlock(scope: !17276, file: !2590, line: 609, column: 35)
!17283 = !DILocation(line: 610, column: 69, scope: !17282)
!17284 = !DILocation(line: 610, column: 13, scope: !17282)
!17285 = !DILocation(line: 611, column: 13, scope: !17282)
!17286 = !DILocation(line: 613, column: 5, scope: !17264)
!17287 = !DILocation(line: 605, column: 63, scope: !17260)
!17288 = !DILocation(line: 605, column: 5, scope: !17260)
!17289 = distinct !{!17289, !17262, !17290, !3203}
!17290 = !DILocation(line: 613, column: 5, scope: !17253)
!17291 = !DILocation(line: 615, column: 23, scope: !17206)
!17292 = !DILocation(line: 615, column: 62, scope: !17206)
!17293 = !DILocation(line: 615, column: 68, scope: !17206)
!17294 = !DILocation(line: 615, column: 74, scope: !17206)
!17295 = !DILocation(line: 615, column: 57, scope: !17206)
!17296 = !DILocation(line: 615, column: 79, scope: !17206)
!17297 = !DILocation(line: 615, column: 85, scope: !17206)
!17298 = !DILocation(line: 615, column: 91, scope: !17206)
!17299 = !DILocation(line: 615, column: 12, scope: !17206)
!17300 = !DILocation(line: 615, column: 5, scope: !17206)
!17301 = !DILocation(line: 616, column: 1, scope: !17206)
!17302 = distinct !DISubprogram(name: "parser_next_is", scope: !2590, file: !2590, line: 494, type: !17303, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!17303 = !DISubroutineType(types: !17304)
!17304 = !{!341, !15337, !2659}
!17305 = !DILocalVariable(name: "parser", arg: 1, scope: !17302, file: !2590, line: 494, type: !15337)
!17306 = !DILocation(line: 494, column: 43, scope: !17302)
!17307 = !DILocalVariable(name: "type", arg: 2, scope: !17302, file: !2590, line: 494, type: !2659)
!17308 = !DILocation(line: 494, column: 66, scope: !17302)
!17309 = !DILocalVariable(name: "item", scope: !17302, file: !2590, line: 496, type: !15338)
!17310 = !DILocation(line: 496, column: 18, scope: !17302)
!17311 = !DILocation(line: 497, column: 22, scope: !17302)
!17312 = !DILocation(line: 497, column: 30, scope: !17302)
!17313 = !DILocation(line: 497, column: 12, scope: !17302)
!17314 = !DILocation(line: 497, column: 46, scope: !17302)
!17315 = !DILocation(line: 497, column: 52, scope: !17302)
!17316 = !DILocation(line: 497, column: 60, scope: !17302)
!17317 = !DILocation(line: 497, column: 57, scope: !17302)
!17318 = !DILocation(line: 497, column: 5, scope: !17302)
!17319 = distinct !DISubprogram(name: "parser_stack_top_matches", scope: !2590, file: !2590, line: 532, type: !17320, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!17320 = !DISubroutineType(types: !17321)
!17321 = !{!341, !15337, !15338, !2659}
!17322 = !DILocalVariable(name: "parser", arg: 1, scope: !17319, file: !2590, line: 532, type: !15337)
!17323 = !DILocation(line: 532, column: 53, scope: !17319)
!17324 = !DILocalVariable(name: "item", arg: 2, scope: !17319, file: !2590, line: 532, type: !15338)
!17325 = !DILocation(line: 532, column: 74, scope: !17319)
!17326 = !DILocalVariable(name: "type", arg: 3, scope: !17319, file: !2590, line: 532, type: !2659)
!17327 = !DILocation(line: 532, column: 95, scope: !17319)
!17328 = !DILocation(line: 534, column: 21, scope: !17329)
!17329 = distinct !DILexicalBlock(scope: !17319, file: !2590, line: 534, column: 9)
!17330 = !DILocation(line: 534, column: 29, scope: !17329)
!17331 = !DILocation(line: 534, column: 9, scope: !17329)
!17332 = !DILocation(line: 534, column: 9, scope: !17319)
!17333 = !DILocation(line: 535, column: 20, scope: !17334)
!17334 = distinct !DILexicalBlock(scope: !17329, file: !2590, line: 534, column: 37)
!17335 = !DILocation(line: 535, column: 55, scope: !17334)
!17336 = !DILocation(line: 535, column: 61, scope: !17334)
!17337 = !DILocation(line: 535, column: 67, scope: !17334)
!17338 = !DILocation(line: 535, column: 50, scope: !17334)
!17339 = !DILocation(line: 535, column: 72, scope: !17334)
!17340 = !DILocation(line: 535, column: 78, scope: !17334)
!17341 = !DILocation(line: 535, column: 84, scope: !17334)
!17342 = !DILocation(line: 535, column: 9, scope: !17334)
!17343 = !DILocation(line: 536, column: 9, scope: !17334)
!17344 = !DILocalVariable(name: "stacked_item", scope: !17319, file: !2590, line: 539, type: !2700)
!17345 = !DILocation(line: 539, column: 26, scope: !17319)
!17346 = !DILocation(line: 539, column: 64, scope: !17319)
!17347 = !DILocation(line: 539, column: 72, scope: !17319)
!17348 = !DILocation(line: 539, column: 78, scope: !17319)
!17349 = !DILocation(line: 539, column: 80, scope: !17319)
!17350 = !DILocalVariable(name: "matches", scope: !17319, file: !2590, line: 540, type: !341)
!17351 = !DILocation(line: 540, column: 10, scope: !17319)
!17352 = !DILocation(line: 540, column: 21, scope: !17319)
!17353 = !DILocation(line: 540, column: 35, scope: !17319)
!17354 = !DILocation(line: 540, column: 40, scope: !17319)
!17355 = !DILocation(line: 540, column: 48, scope: !17319)
!17356 = !DILocation(line: 540, column: 45, scope: !17319)
!17357 = !DILocation(line: 541, column: 13, scope: !17319)
!17358 = !DILocation(line: 541, column: 16, scope: !17319)
!17359 = !DILocation(line: 541, column: 22, scope: !17319)
!17360 = !DILocation(line: 541, column: 28, scope: !17319)
!17361 = !DILocation(line: 541, column: 35, scope: !17319)
!17362 = !DILocation(line: 541, column: 49, scope: !17319)
!17363 = !DILocation(line: 541, column: 54, scope: !17319)
!17364 = !DILocation(line: 541, column: 60, scope: !17319)
!17365 = !DILocation(line: 541, column: 32, scope: !17319)
!17366 = !DILocation(line: 542, column: 13, scope: !17319)
!17367 = !DILocation(line: 542, column: 24, scope: !17319)
!17368 = !DILocation(line: 542, column: 38, scope: !17319)
!17369 = !DILocation(line: 542, column: 43, scope: !17319)
!17370 = !DILocation(line: 542, column: 49, scope: !17319)
!17371 = !DILocation(line: 542, column: 56, scope: !17319)
!17372 = !DILocation(line: 542, column: 62, scope: !17319)
!17373 = !DILocation(line: 542, column: 68, scope: !17319)
!17374 = !DILocation(line: 542, column: 75, scope: !17319)
!17375 = !DILocation(line: 542, column: 81, scope: !17319)
!17376 = !DILocation(line: 542, column: 87, scope: !17319)
!17377 = !DILocation(line: 542, column: 17, scope: !17319)
!17378 = !DILocation(line: 542, column: 16, scope: !17319)
!17379 = !DILocation(line: 0, scope: !17319)
!17380 = !DILocation(line: 543, column: 9, scope: !17381)
!17381 = distinct !DILexicalBlock(scope: !17319, file: !2590, line: 543, column: 9)
!17382 = !DILocation(line: 543, column: 9, scope: !17319)
!17383 = !DILocation(line: 544, column: 19, scope: !17384)
!17384 = distinct !DILexicalBlock(scope: !17381, file: !2590, line: 543, column: 18)
!17385 = !DILocation(line: 544, column: 33, scope: !17384)
!17386 = !DILocation(line: 544, column: 9, scope: !17384)
!17387 = !DILocation(line: 545, column: 14, scope: !17384)
!17388 = !DILocation(line: 545, column: 9, scope: !17384)
!17389 = !DILocation(line: 546, column: 9, scope: !17384)
!17390 = !DILocation(line: 549, column: 16, scope: !17319)
!17391 = !DILocation(line: 550, column: 23, scope: !17319)
!17392 = !DILocation(line: 550, column: 37, scope: !17319)
!17393 = !DILocation(line: 550, column: 42, scope: !17319)
!17394 = !DILocation(line: 550, column: 9, scope: !17319)
!17395 = !DILocation(line: 551, column: 14, scope: !17319)
!17396 = !DILocation(line: 551, column: 28, scope: !17319)
!17397 = !DILocation(line: 551, column: 33, scope: !17319)
!17398 = !DILocation(line: 551, column: 39, scope: !17319)
!17399 = !DILocation(line: 551, column: 9, scope: !17319)
!17400 = !DILocation(line: 551, column: 44, scope: !17319)
!17401 = !DILocation(line: 551, column: 58, scope: !17319)
!17402 = !DILocation(line: 551, column: 63, scope: !17319)
!17403 = !DILocation(line: 551, column: 69, scope: !17319)
!17404 = !DILocation(line: 552, column: 14, scope: !17319)
!17405 = !DILocation(line: 552, column: 20, scope: !17319)
!17406 = !DILocation(line: 552, column: 26, scope: !17319)
!17407 = !DILocation(line: 552, column: 9, scope: !17319)
!17408 = !DILocation(line: 552, column: 31, scope: !17319)
!17409 = !DILocation(line: 552, column: 37, scope: !17319)
!17410 = !DILocation(line: 552, column: 43, scope: !17319)
!17411 = !DILocation(line: 549, column: 5, scope: !17319)
!17412 = !DILocation(line: 553, column: 5, scope: !17319)
!17413 = !DILocation(line: 554, column: 1, scope: !17319)
!17414 = distinct !DISubprogram(name: "symtab_lookup", scope: !2590, file: !2590, line: 193, type: !17415, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!17415 = !DISubroutineType(types: !17416)
!17416 = !{!15777, !15337, !480}
!17417 = !DILocalVariable(name: "parser", arg: 1, scope: !17414, file: !2590, line: 193, type: !15337)
!17418 = !DILocation(line: 193, column: 30, scope: !17414)
!17419 = !DILocalVariable(name: "var_name", arg: 2, scope: !17414, file: !2590, line: 193, type: !480)
!17420 = !DILocation(line: 193, column: 50, scope: !17414)
!17421 = !DILocalVariable(name: "tab", scope: !17422, file: !2590, line: 195, type: !15293)
!17422 = distinct !DILexicalBlock(scope: !17414, file: !2590, line: 195, column: 5)
!17423 = !DILocation(line: 195, column: 25, scope: !17422)
!17424 = !DILocation(line: 195, column: 31, scope: !17422)
!17425 = !DILocation(line: 195, column: 39, scope: !17422)
!17426 = !DILocation(line: 195, column: 10, scope: !17422)
!17427 = !DILocation(line: 195, column: 47, scope: !17428)
!17428 = distinct !DILexicalBlock(scope: !17422, file: !2590, line: 195, column: 5)
!17429 = !DILocation(line: 195, column: 5, scope: !17422)
!17430 = !DILocalVariable(name: "var", scope: !17431, file: !2590, line: 196, type: !15777)
!17431 = distinct !DILexicalBlock(scope: !17428, file: !2590, line: 195, column: 69)
!17432 = !DILocation(line: 196, column: 32, scope: !17431)
!17433 = !DILocation(line: 196, column: 48, scope: !17431)
!17434 = !DILocation(line: 196, column: 53, scope: !17431)
!17435 = !DILocation(line: 196, column: 59, scope: !17431)
!17436 = !DILocation(line: 196, column: 38, scope: !17431)
!17437 = !DILocation(line: 197, column: 13, scope: !17438)
!17438 = distinct !DILexicalBlock(scope: !17431, file: !2590, line: 197, column: 13)
!17439 = !DILocation(line: 197, column: 13, scope: !17431)
!17440 = !DILocation(line: 198, column: 20, scope: !17438)
!17441 = !DILocation(line: 198, column: 13, scope: !17438)
!17442 = !DILocation(line: 199, column: 5, scope: !17431)
!17443 = !DILocation(line: 195, column: 58, scope: !17428)
!17444 = !DILocation(line: 195, column: 63, scope: !17428)
!17445 = !DILocation(line: 195, column: 56, scope: !17428)
!17446 = !DILocation(line: 195, column: 5, scope: !17428)
!17447 = distinct !{!17447, !17429, !17448, !3203}
!17448 = !DILocation(line: 199, column: 5, scope: !17422)
!17449 = !DILocation(line: 201, column: 5, scope: !17414)
!17450 = !DILocation(line: 202, column: 1, scope: !17414)
!17451 = distinct !DISubprogram(name: "parser_push_item", scope: !2590, file: !2590, line: 500, type: !17452, scopeLine: 501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!17452 = !DISubroutineType(types: !17453)
!17453 = !{null, !15337, !15338}
!17454 = !DILocalVariable(name: "parser", arg: 1, scope: !17451, file: !2590, line: 500, type: !15337)
!17455 = !DILocation(line: 500, column: 45, scope: !17451)
!17456 = !DILocalVariable(name: "item", arg: 2, scope: !17451, file: !2590, line: 500, type: !15338)
!17457 = !DILocation(line: 500, column: 66, scope: !17451)
!17458 = !DILocalVariable(name: "stacked_item", scope: !17451, file: !2590, line: 502, type: !2700)
!17459 = !DILocation(line: 502, column: 26, scope: !17451)
!17460 = !DILocation(line: 502, column: 41, scope: !17451)
!17461 = !DILocation(line: 503, column: 10, scope: !17462)
!17462 = distinct !DILexicalBlock(scope: !17451, file: !2590, line: 503, column: 9)
!17463 = !DILocation(line: 503, column: 9, scope: !17451)
!17464 = !DILocation(line: 504, column: 9, scope: !17462)
!17465 = !DILocation(line: 506, column: 5, scope: !17451)
!17466 = !DILocation(line: 506, column: 19, scope: !17451)
!17467 = !DILocation(line: 506, column: 27, scope: !17451)
!17468 = !DILocation(line: 506, column: 26, scope: !17451)
!17469 = !DILocation(line: 507, column: 15, scope: !17451)
!17470 = !DILocation(line: 507, column: 23, scope: !17451)
!17471 = !DILocation(line: 507, column: 31, scope: !17451)
!17472 = !DILocation(line: 507, column: 45, scope: !17451)
!17473 = !DILocation(line: 507, column: 5, scope: !17451)
!17474 = !DILocation(line: 508, column: 1, scope: !17451)
!17475 = distinct !DISubprogram(name: "list_add", scope: !313, file: !313, line: 327, type: !17476, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!17476 = !DISubroutineType(types: !17477)
!17477 = !{null, !16176, !2707}
!17478 = !DILocalVariable(name: "h", arg: 1, scope: !17475, file: !313, line: 327, type: !16176)
!17479 = !DILocation(line: 327, column: 47, scope: !17475)
!17480 = !DILocalVariable(name: "n", arg: 2, scope: !17475, file: !313, line: 327, type: !2707)
!17481 = !DILocation(line: 327, column: 68, scope: !17475)
!17482 = !DILocation(line: 329, column: 12, scope: !17475)
!17483 = !DILocation(line: 329, column: 15, scope: !17475)
!17484 = !DILocation(line: 329, column: 17, scope: !17475)
!17485 = !DILocation(line: 329, column: 2, scope: !17475)
!17486 = !DILocation(line: 329, column: 5, scope: !17475)
!17487 = !DILocation(line: 329, column: 10, scope: !17475)
!17488 = !DILocation(line: 330, column: 13, scope: !17475)
!17489 = !DILocation(line: 330, column: 16, scope: !17475)
!17490 = !DILocation(line: 330, column: 2, scope: !17475)
!17491 = !DILocation(line: 330, column: 5, scope: !17475)
!17492 = !DILocation(line: 330, column: 10, scope: !17475)
!17493 = !DILocation(line: 331, column: 20, scope: !17475)
!17494 = !DILocation(line: 331, column: 2, scope: !17475)
!17495 = !DILocation(line: 331, column: 5, scope: !17475)
!17496 = !DILocation(line: 331, column: 7, scope: !17475)
!17497 = !DILocation(line: 331, column: 13, scope: !17475)
!17498 = !DILocation(line: 331, column: 18, scope: !17475)
!17499 = !DILocation(line: 332, column: 14, scope: !17475)
!17500 = !DILocation(line: 332, column: 2, scope: !17475)
!17501 = !DILocation(line: 332, column: 5, scope: !17475)
!17502 = !DILocation(line: 332, column: 7, scope: !17475)
!17503 = !DILocation(line: 332, column: 12, scope: !17475)
!17504 = !DILocation(line: 333, column: 8, scope: !17475)
!17505 = !DILocation(line: 334, column: 1, scope: !17475)
!17506 = distinct !DISubprogram(name: "lwan_tpl_compile_file", scope: !2590, file: !2590, line: 1126, type: !15239, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!17507 = !DILocalVariable(name: "filename", arg: 1, scope: !17506, file: !2590, line: 1126, type: !480)
!17508 = !DILocation(line: 1126, column: 35, scope: !17506)
!17509 = !DILocalVariable(name: "descriptor", arg: 2, scope: !17506, file: !2590, line: 1126, type: !15241)
!17510 = !DILocation(line: 1126, column: 74, scope: !17506)
!17511 = !DILocalVariable(name: "fd", scope: !17506, file: !2590, line: 1128, type: !37)
!17512 = !DILocation(line: 1128, column: 9, scope: !17506)
!17513 = !DILocalVariable(name: "st", scope: !17506, file: !2590, line: 1129, type: !17514)
!17514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2123, line: 26, size: 1152, elements: !17515)
!17515 = !{!17516, !17517, !17518, !17519, !17520, !17521, !17522, !17523, !17524, !17525, !17526, !17527, !17532, !17533, !17534}
!17516 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !17514, file: !2123, line: 31, baseType: !2126, size: 64)
!17517 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !17514, file: !2123, line: 36, baseType: !2128, size: 64, offset: 64)
!17518 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !17514, file: !2123, line: 44, baseType: !2130, size: 64, offset: 128)
!17519 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !17514, file: !2123, line: 45, baseType: !2132, size: 32, offset: 192)
!17520 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !17514, file: !2123, line: 47, baseType: !2134, size: 32, offset: 224)
!17521 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !17514, file: !2123, line: 48, baseType: !2136, size: 32, offset: 256)
!17522 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !17514, file: !2123, line: 50, baseType: !37, size: 32, offset: 288)
!17523 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !17514, file: !2123, line: 52, baseType: !2126, size: 64, offset: 320)
!17524 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !17514, file: !2123, line: 57, baseType: !463, size: 64, offset: 384)
!17525 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !17514, file: !2123, line: 61, baseType: !2141, size: 64, offset: 448)
!17526 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !17514, file: !2123, line: 63, baseType: !2143, size: 64, offset: 512)
!17527 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !17514, file: !2123, line: 74, baseType: !17528, size: 128, offset: 576)
!17528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2146, line: 11, size: 128, elements: !17529)
!17529 = !{!17530, !17531}
!17530 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !17528, file: !2146, line: 16, baseType: !324, size: 64)
!17531 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !17528, file: !2146, line: 21, baseType: !2150, size: 64, offset: 64)
!17532 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !17514, file: !2123, line: 75, baseType: !17528, size: 128, offset: 704)
!17533 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !17514, file: !2123, line: 76, baseType: !17528, size: 128, offset: 832)
!17534 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !17514, file: !2123, line: 89, baseType: !2154, size: 192, offset: 960)
!17535 = !DILocation(line: 1129, column: 17, scope: !17506)
!17536 = !DILocalVariable(name: "mapped", scope: !17506, file: !2590, line: 1130, type: !61)
!17537 = !DILocation(line: 1130, column: 11, scope: !17506)
!17538 = !DILocalVariable(name: "tpl", scope: !17506, file: !2590, line: 1131, type: !2835)
!17539 = !DILocation(line: 1131, column: 17, scope: !17506)
!17540 = !DILocation(line: 1133, column: 15, scope: !17506)
!17541 = !DILocation(line: 1133, column: 10, scope: !17506)
!17542 = !DILocation(line: 1133, column: 8, scope: !17506)
!17543 = !DILocation(line: 1134, column: 9, scope: !17544)
!17544 = distinct !DILexicalBlock(scope: !17506, file: !2590, line: 1134, column: 9)
!17545 = !DILocation(line: 1134, column: 12, scope: !17544)
!17546 = !DILocation(line: 1134, column: 9, scope: !17506)
!17547 = !DILocation(line: 1135, column: 9, scope: !17544)
!17548 = !DILocation(line: 1137, column: 15, scope: !17549)
!17549 = distinct !DILexicalBlock(scope: !17506, file: !2590, line: 1137, column: 9)
!17550 = !DILocation(line: 1137, column: 9, scope: !17549)
!17551 = !DILocation(line: 1137, column: 24, scope: !17549)
!17552 = !DILocation(line: 1137, column: 9, scope: !17506)
!17553 = !DILocation(line: 1138, column: 9, scope: !17549)
!17554 = !DILocation(line: 1140, column: 36, scope: !17506)
!17555 = !DILocation(line: 1140, column: 68, scope: !17506)
!17556 = !DILocation(line: 1140, column: 14, scope: !17506)
!17557 = !DILocation(line: 1140, column: 12, scope: !17506)
!17558 = !DILocation(line: 1141, column: 9, scope: !17559)
!17559 = distinct !DILexicalBlock(scope: !17506, file: !2590, line: 1141, column: 9)
!17560 = !DILocation(line: 1141, column: 16, scope: !17559)
!17561 = !DILocation(line: 1141, column: 9, scope: !17506)
!17562 = !DILocation(line: 1142, column: 9, scope: !17559)
!17563 = !DILocation(line: 1144, column: 35, scope: !17506)
!17564 = !DILocation(line: 1144, column: 43, scope: !17506)
!17565 = !DILocation(line: 1144, column: 11, scope: !17506)
!17566 = !DILocation(line: 1144, column: 9, scope: !17506)
!17567 = !DILocation(line: 1146, column: 16, scope: !17568)
!17568 = distinct !DILexicalBlock(scope: !17506, file: !2590, line: 1146, column: 9)
!17569 = !DILocation(line: 1146, column: 35, scope: !17568)
!17570 = !DILocation(line: 1146, column: 9, scope: !17568)
!17571 = !DILocation(line: 1146, column: 44, scope: !17568)
!17572 = !DILocation(line: 1146, column: 9, scope: !17506)
!17573 = !DILocation(line: 1147, column: 9, scope: !17568)
!17574 = !DILocation(line: 1146, column: 46, scope: !17568)
!17575 = !DILabel(scope: !17506, name: "close_file", file: !2590, line: 1149)
!17576 = !DILocation(line: 1149, column: 1, scope: !17506)
!17577 = !DILocation(line: 1150, column: 11, scope: !17506)
!17578 = !DILocation(line: 1150, column: 5, scope: !17506)
!17579 = !DILabel(scope: !17506, name: "end", file: !2590, line: 1151)
!17580 = !DILocation(line: 1151, column: 1, scope: !17506)
!17581 = !DILocation(line: 1152, column: 12, scope: !17506)
!17582 = !DILocation(line: 1152, column: 5, scope: !17506)
!17583 = distinct !DISubprogram(name: "lwan_tpl_apply_with_buffer", scope: !2590, file: !2590, line: 1288, type: !17584, scopeLine: 1289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!17584 = !DISubroutineType(types: !17585)
!17585 = !{!2718, !2835, !2718, !5}
!17586 = !DILocalVariable(name: "tpl", arg: 1, scope: !17583, file: !2590, line: 1288, type: !2835)
!17587 = !DILocation(line: 1288, column: 40, scope: !17583)
!17588 = !DILocalVariable(name: "buf", arg: 2, scope: !17583, file: !2590, line: 1288, type: !2718)
!17589 = !DILocation(line: 1288, column: 55, scope: !17583)
!17590 = !DILocalVariable(name: "variables", arg: 3, scope: !17583, file: !2590, line: 1288, type: !5)
!17591 = !DILocation(line: 1288, column: 66, scope: !17583)
!17592 = !DILocation(line: 1290, column: 9, scope: !17593)
!17593 = distinct !DILexicalBlock(scope: !17583, file: !2590, line: 1290, column: 9)
!17594 = !DILocation(line: 1290, column: 9, scope: !17583)
!17595 = !DILocation(line: 1291, column: 9, scope: !17593)
!17596 = !DILocation(line: 1293, column: 9, scope: !17597)
!17597 = distinct !DILexicalBlock(scope: !17583, file: !2590, line: 1293, column: 9)
!17598 = !DILocation(line: 1293, column: 9, scope: !17583)
!17599 = !DILocation(line: 1294, column: 9, scope: !17597)
!17600 = !DILocation(line: 1296, column: 17, scope: !17583)
!17601 = !DILocation(line: 1296, column: 22, scope: !17583)
!17602 = !DILocation(line: 1296, column: 27, scope: !17583)
!17603 = !DILocation(line: 1296, column: 35, scope: !17583)
!17604 = !DILocation(line: 1296, column: 40, scope: !17583)
!17605 = !DILocation(line: 1296, column: 5, scope: !17583)
!17606 = !DILocation(line: 1298, column: 12, scope: !17583)
!17607 = !DILocation(line: 1298, column: 5, scope: !17583)
!17608 = !DILocation(line: 1299, column: 1, scope: !17583)
!17609 = !DILocalVariable(name: "tpl", arg: 1, scope: !2832, file: !2590, line: 1156, type: !2835)
!17610 = !DILocation(line: 1156, column: 25, scope: !2832)
!17611 = !DILocalVariable(name: "chunks", arg: 2, scope: !2832, file: !2590, line: 1156, type: !2733)
!17612 = !DILocation(line: 1156, column: 44, scope: !2832)
!17613 = !DILocalVariable(name: "buf", arg: 3, scope: !2832, file: !2590, line: 1156, type: !2718)
!17614 = !DILocation(line: 1156, column: 62, scope: !2832)
!17615 = !DILocalVariable(name: "variables", arg: 4, scope: !2832, file: !2590, line: 1156, type: !5)
!17616 = !DILocation(line: 1156, column: 73, scope: !2832)
!17617 = !DILocalVariable(name: "until_data", arg: 5, scope: !2832, file: !2590, line: 1157, type: !5)
!17618 = !DILocation(line: 1157, column: 19, scope: !2832)
!17619 = !DILocalVariable(name: "switcher", scope: !2832, file: !2590, line: 1172, type: !17620)
!17620 = !DIDerivedType(tag: DW_TAG_typedef, name: "coro_switcher_t", file: !367, line: 35, baseType: !17621)
!17621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "coro_switcher_t_", file: !367, line: 39, size: 1280, elements: !17622)
!17622 = !{!17623, !17624}
!17623 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !17621, file: !367, line: 40, baseType: !6108, size: 640)
!17624 = !DIDerivedType(tag: DW_TAG_member, name: "callee", scope: !17621, file: !367, line: 41, baseType: !6108, size: 640, offset: 640)
!17625 = !DILocation(line: 1172, column: 21, scope: !2832)
!17626 = !DILocalVariable(name: "coro", scope: !2832, file: !2590, line: 1173, type: !365)
!17627 = !DILocation(line: 1173, column: 13, scope: !2832)
!17628 = !DILocalVariable(name: "chunk", scope: !2832, file: !2590, line: 1174, type: !2733)
!17629 = !DILocation(line: 1174, column: 19, scope: !2832)
!17630 = !DILocation(line: 1174, column: 27, scope: !2832)
!17631 = !DILocation(line: 1176, column: 9, scope: !17632)
!17632 = distinct !DILexicalBlock(scope: !2832, file: !2590, line: 1176, column: 9)
!17633 = !DILocation(line: 1176, column: 9, scope: !2832)
!17634 = !DILocation(line: 1177, column: 9, scope: !17632)
!17635 = !DILocation(line: 1182, column: 5, scope: !2832)
!17636 = !DILocation(line: 1182, column: 5, scope: !17637)
!17637 = distinct !DILexicalBlock(scope: !2832, file: !2590, line: 1182, column: 5)
!17638 = !DILabel(scope: !2832, name: "action_append", file: !2590, line: 1184)
!17639 = !DILocation(line: 1184, column: 1, scope: !2832)
!17640 = !DILocation(line: 1185, column: 23, scope: !2832)
!17641 = !DILocation(line: 1185, column: 28, scope: !2832)
!17642 = !DILocation(line: 1186, column: 17, scope: !2832)
!17643 = !DILocation(line: 1185, column: 5, scope: !2832)
!17644 = !DILocation(line: 1187, column: 5, scope: !2832)
!17645 = !DILocation(line: 1187, column: 5, scope: !17646)
!17646 = distinct !DILexicalBlock(scope: !2832, file: !2590, line: 1187, column: 5)
!17647 = !DILocation(line: 1187, column: 5, scope: !17648)
!17648 = distinct !DILexicalBlock(scope: !17646, file: !2590, line: 1187, column: 5)
!17649 = !DILabel(scope: !2832, name: "action_append_char", file: !2590, line: 1189)
!17650 = !DILocation(line: 1189, column: 1, scope: !2832)
!17651 = !DILocation(line: 1190, column: 24, scope: !2832)
!17652 = !DILocation(line: 1190, column: 46, scope: !2832)
!17653 = !DILocation(line: 1190, column: 53, scope: !2832)
!17654 = !DILocation(line: 1190, column: 35, scope: !2832)
!17655 = !DILocation(line: 1190, column: 29, scope: !2832)
!17656 = !DILocation(line: 1190, column: 5, scope: !2832)
!17657 = !DILocation(line: 1191, column: 5, scope: !2832)
!17658 = !DILocation(line: 1191, column: 5, scope: !17659)
!17659 = distinct !DILexicalBlock(scope: !2832, file: !2590, line: 1191, column: 5)
!17660 = !DILocation(line: 1191, column: 5, scope: !17661)
!17661 = distinct !DILexicalBlock(scope: !17659, file: !2590, line: 1191, column: 5)
!17662 = !DILabel(scope: !2832, name: "action_variable", file: !2590, line: 1193)
!17663 = !DILocation(line: 1193, column: 1, scope: !2832)
!17664 = !DILocalVariable(name: "descriptor", scope: !17665, file: !2590, line: 1194, type: !15777)
!17665 = distinct !DILexicalBlock(scope: !2832, file: !2590, line: 1193, column: 18)
!17666 = !DILocation(line: 1194, column: 32, scope: !17665)
!17667 = !DILocation(line: 1194, column: 45, scope: !17665)
!17668 = !DILocation(line: 1194, column: 52, scope: !17665)
!17669 = !DILocation(line: 1195, column: 9, scope: !17665)
!17670 = !DILocation(line: 1195, column: 21, scope: !17665)
!17671 = !DILocation(line: 1195, column: 38, scope: !17665)
!17672 = !DILocation(line: 1195, column: 51, scope: !17665)
!17673 = !DILocation(line: 1195, column: 63, scope: !17665)
!17674 = !DILocation(line: 1195, column: 75, scope: !17665)
!17675 = !DILocation(line: 1195, column: 61, scope: !17665)
!17676 = !DILocation(line: 1196, column: 9, scope: !17665)
!17677 = !DILocation(line: 1196, column: 9, scope: !17678)
!17678 = distinct !DILexicalBlock(scope: !17665, file: !2590, line: 1196, column: 9)
!17679 = !DILocation(line: 1196, column: 9, scope: !17680)
!17680 = distinct !DILexicalBlock(scope: !17678, file: !2590, line: 1196, column: 9)
!17681 = !DILocation(line: 1197, column: 5, scope: !17665)
!17682 = !DILabel(scope: !2832, name: "action_variable_str", file: !2590, line: 1199)
!17683 = !DILocation(line: 1199, column: 1, scope: !2832)
!17684 = !DILocation(line: 1200, column: 31, scope: !2832)
!17685 = !DILocation(line: 1200, column: 44, scope: !2832)
!17686 = !DILocation(line: 1200, column: 67, scope: !2832)
!17687 = !DILocation(line: 1200, column: 74, scope: !2832)
!17688 = !DILocation(line: 1200, column: 56, scope: !2832)
!17689 = !DILocation(line: 1200, column: 54, scope: !2832)
!17690 = !DILocation(line: 1200, column: 5, scope: !2832)
!17691 = !DILocation(line: 1201, column: 5, scope: !2832)
!17692 = !DILocation(line: 1201, column: 5, scope: !17693)
!17693 = distinct !DILexicalBlock(scope: !2832, file: !2590, line: 1201, column: 5)
!17694 = !DILocation(line: 1201, column: 5, scope: !17695)
!17695 = distinct !DILexicalBlock(scope: !17693, file: !2590, line: 1201, column: 5)
!17696 = !DILabel(scope: !2832, name: "action_variable_str_escape", file: !2590, line: 1203)
!17697 = !DILocation(line: 1203, column: 1, scope: !2832)
!17698 = !DILocation(line: 1204, column: 39, scope: !2832)
!17699 = !DILocation(line: 1204, column: 52, scope: !2832)
!17700 = !DILocation(line: 1204, column: 75, scope: !2832)
!17701 = !DILocation(line: 1204, column: 82, scope: !2832)
!17702 = !DILocation(line: 1204, column: 64, scope: !2832)
!17703 = !DILocation(line: 1204, column: 62, scope: !2832)
!17704 = !DILocation(line: 1204, column: 5, scope: !2832)
!17705 = !DILocation(line: 1205, column: 5, scope: !2832)
!17706 = !DILocation(line: 1205, column: 5, scope: !17707)
!17707 = distinct !DILexicalBlock(scope: !2832, file: !2590, line: 1205, column: 5)
!17708 = !DILocation(line: 1205, column: 5, scope: !17709)
!17709 = distinct !DILexicalBlock(scope: !17707, file: !2590, line: 1205, column: 5)
!17710 = !DILabel(scope: !2832, name: "action_if_variable_not_empty", file: !2590, line: 1207)
!17711 = !DILocation(line: 1207, column: 1, scope: !2832)
!17712 = !DILocalVariable(name: "cd", scope: !17713, file: !2590, line: 1208, type: !15772)
!17713 = distinct !DILexicalBlock(scope: !2832, file: !2590, line: 1207, column: 31)
!17714 = !DILocation(line: 1208, column: 34, scope: !17713)
!17715 = !DILocation(line: 1208, column: 39, scope: !17713)
!17716 = !DILocation(line: 1208, column: 46, scope: !17713)
!17717 = !DILocalVariable(name: "empty", scope: !17713, file: !2590, line: 1209, type: !341)
!17718 = !DILocation(line: 1209, column: 14, scope: !17713)
!17719 = !DILocation(line: 1209, column: 22, scope: !17713)
!17720 = !DILocation(line: 1209, column: 26, scope: !17713)
!17721 = !DILocation(line: 1209, column: 38, scope: !17713)
!17722 = !DILocation(line: 1209, column: 59, scope: !17713)
!17723 = !DILocation(line: 1209, column: 71, scope: !17713)
!17724 = !DILocation(line: 1209, column: 75, scope: !17713)
!17725 = !DILocation(line: 1209, column: 87, scope: !17713)
!17726 = !DILocation(line: 1209, column: 69, scope: !17713)
!17727 = !DILocation(line: 1210, column: 13, scope: !17728)
!17728 = distinct !DILexicalBlock(scope: !17713, file: !2590, line: 1210, column: 13)
!17729 = !DILocation(line: 1210, column: 20, scope: !17728)
!17730 = !DILocation(line: 1210, column: 26, scope: !17728)
!17731 = !DILocation(line: 1210, column: 13, scope: !17713)
!17732 = !DILocation(line: 1211, column: 22, scope: !17728)
!17733 = !DILocation(line: 1211, column: 21, scope: !17728)
!17734 = !DILocation(line: 1211, column: 19, scope: !17728)
!17735 = !DILocation(line: 1211, column: 13, scope: !17728)
!17736 = !DILocation(line: 1212, column: 13, scope: !17737)
!17737 = distinct !DILexicalBlock(scope: !17713, file: !2590, line: 1212, column: 13)
!17738 = !DILocation(line: 1212, column: 13, scope: !17713)
!17739 = !DILocation(line: 1213, column: 21, scope: !17740)
!17740 = distinct !DILexicalBlock(scope: !17737, file: !2590, line: 1212, column: 20)
!17741 = !DILocation(line: 1213, column: 25, scope: !17740)
!17742 = !DILocation(line: 1213, column: 19, scope: !17740)
!17743 = !DILocation(line: 1214, column: 9, scope: !17740)
!17744 = !DILocation(line: 1215, column: 33, scope: !17745)
!17745 = distinct !DILexicalBlock(scope: !17737, file: !2590, line: 1214, column: 16)
!17746 = !DILocation(line: 1215, column: 38, scope: !17745)
!17747 = !DILocation(line: 1215, column: 44, scope: !17745)
!17748 = !DILocation(line: 1215, column: 49, scope: !17745)
!17749 = !DILocation(line: 1215, column: 54, scope: !17745)
!17750 = !DILocation(line: 1215, column: 65, scope: !17745)
!17751 = !DILocation(line: 1215, column: 69, scope: !17745)
!17752 = !DILocation(line: 1215, column: 21, scope: !17745)
!17753 = !DILocation(line: 1215, column: 19, scope: !17745)
!17754 = !DILocation(line: 1217, column: 9, scope: !17713)
!17755 = !DILocation(line: 1217, column: 9, scope: !17756)
!17756 = distinct !DILexicalBlock(scope: !17713, file: !2590, line: 1217, column: 9)
!17757 = !DILocation(line: 1217, column: 9, scope: !17758)
!17758 = distinct !DILexicalBlock(scope: !17756, file: !2590, line: 1217, column: 9)
!17759 = !DILocation(line: 1218, column: 5, scope: !17713)
!17760 = !DILabel(scope: !2832, name: "action_end_if_variable_not_empty", file: !2590, line: 1220)
!17761 = !DILocation(line: 1220, column: 1, scope: !2832)
!17762 = !DILocation(line: 1221, column: 9, scope: !17763)
!17763 = distinct !DILexicalBlock(scope: !2832, file: !2590, line: 1221, column: 9)
!17764 = !DILocation(line: 1221, column: 9, scope: !2832)
!17765 = !DILocation(line: 1222, column: 9, scope: !17763)
!17766 = !DILocation(line: 1223, column: 5, scope: !2832)
!17767 = !DILocation(line: 1223, column: 5, scope: !17768)
!17768 = distinct !DILexicalBlock(scope: !2832, file: !2590, line: 1223, column: 5)
!17769 = !DILocation(line: 1223, column: 5, scope: !17770)
!17770 = distinct !DILexicalBlock(scope: !17768, file: !2590, line: 1223, column: 5)
!17771 = !DILabel(scope: !2832, name: "action_apply_tpl", file: !2590, line: 1225)
!17772 = !DILocation(line: 1225, column: 1, scope: !2832)
!17773 = !DILocalVariable(name: "tmp", scope: !17774, file: !2590, line: 1226, type: !2718)
!17774 = distinct !DILexicalBlock(scope: !2832, file: !2590, line: 1225, column: 19)
!17775 = !DILocation(line: 1226, column: 19, scope: !17774)
!17776 = !DILocation(line: 1226, column: 40, scope: !17774)
!17777 = !DILocation(line: 1226, column: 47, scope: !17774)
!17778 = !DILocation(line: 1226, column: 53, scope: !17774)
!17779 = !DILocation(line: 1226, column: 25, scope: !17774)
!17780 = !DILocation(line: 1227, column: 27, scope: !17774)
!17781 = !DILocation(line: 1227, column: 32, scope: !17774)
!17782 = !DILocation(line: 1227, column: 56, scope: !17774)
!17783 = !DILocation(line: 1227, column: 9, scope: !17774)
!17784 = !DILocation(line: 1228, column: 21, scope: !17774)
!17785 = !DILocation(line: 1228, column: 9, scope: !17774)
!17786 = !DILocation(line: 1229, column: 9, scope: !17774)
!17787 = !DILocation(line: 1229, column: 9, scope: !17788)
!17788 = distinct !DILexicalBlock(scope: !17774, file: !2590, line: 1229, column: 9)
!17789 = !DILocation(line: 1229, column: 9, scope: !17790)
!17790 = distinct !DILexicalBlock(scope: !17788, file: !2590, line: 1229, column: 9)
!17791 = !DILocation(line: 1230, column: 5, scope: !17774)
!17792 = !DILabel(scope: !2832, name: "action_start_iter", file: !2590, line: 1232)
!17793 = !DILocation(line: 1232, column: 1, scope: !2832)
!17794 = !DILocation(line: 1233, column: 9, scope: !17795)
!17795 = distinct !DILexicalBlock(scope: !2832, file: !2590, line: 1233, column: 9)
!17796 = !DILocation(line: 1233, column: 9, scope: !2832)
!17797 = !DILocation(line: 1234, column: 9, scope: !17798)
!17798 = distinct !DILexicalBlock(scope: !17795, file: !2590, line: 1233, column: 33)
!17799 = !DILocation(line: 1235, column: 9, scope: !17798)
!17800 = !DILocation(line: 1235, column: 9, scope: !17801)
!17801 = distinct !DILexicalBlock(scope: !17798, file: !2590, line: 1235, column: 9)
!17802 = !DILocation(line: 1235, column: 9, scope: !17803)
!17803 = distinct !DILexicalBlock(scope: !17801, file: !2590, line: 1235, column: 9)
!17804 = !DILocation(line: 1236, column: 5, scope: !17798)
!17805 = !DILocalVariable(name: "cd", scope: !2832, file: !2590, line: 1238, type: !15772)
!17806 = !DILocation(line: 1238, column: 30, scope: !2832)
!17807 = !DILocation(line: 1238, column: 35, scope: !2832)
!17808 = !DILocation(line: 1238, column: 42, scope: !2832)
!17809 = !DILocation(line: 1239, column: 32, scope: !2832)
!17810 = !DILocation(line: 1239, column: 36, scope: !2832)
!17811 = !DILocation(line: 1239, column: 48, scope: !2832)
!17812 = !DILocation(line: 1239, column: 59, scope: !2832)
!17813 = !DILocation(line: 1239, column: 12, scope: !2832)
!17814 = !DILocation(line: 1239, column: 10, scope: !2832)
!17815 = !DILocalVariable(name: "resumed", scope: !2832, file: !2590, line: 1241, type: !341)
!17816 = !DILocation(line: 1241, column: 10, scope: !2832)
!17817 = !DILocation(line: 1241, column: 38, scope: !2832)
!17818 = !DILocation(line: 1241, column: 20, scope: !2832)
!17819 = !DILocalVariable(name: "negate", scope: !2832, file: !2590, line: 1242, type: !2653)
!17820 = !DILocation(line: 1242, column: 16, scope: !2832)
!17821 = !DILocation(line: 1242, column: 25, scope: !2832)
!17822 = !DILocation(line: 1242, column: 32, scope: !2832)
!17823 = !DILocation(line: 1242, column: 38, scope: !2832)
!17824 = !DILocation(line: 1243, column: 9, scope: !17825)
!17825 = distinct !DILexicalBlock(scope: !2832, file: !2590, line: 1243, column: 9)
!17826 = !DILocation(line: 1243, column: 9, scope: !2832)
!17827 = !DILocation(line: 1244, column: 20, scope: !17825)
!17828 = !DILocation(line: 1244, column: 19, scope: !17825)
!17829 = !DILocation(line: 1244, column: 17, scope: !17825)
!17830 = !DILocation(line: 1244, column: 9, scope: !17825)
!17831 = !DILocation(line: 1245, column: 10, scope: !17832)
!17832 = distinct !DILexicalBlock(scope: !2832, file: !2590, line: 1245, column: 9)
!17833 = !DILocation(line: 1245, column: 9, scope: !2832)
!17834 = !DILocation(line: 1246, column: 17, scope: !17835)
!17835 = distinct !DILexicalBlock(scope: !17832, file: !2590, line: 1245, column: 19)
!17836 = !DILocation(line: 1246, column: 21, scope: !17835)
!17837 = !DILocation(line: 1246, column: 15, scope: !17835)
!17838 = !DILocation(line: 1248, column: 13, scope: !17839)
!17839 = distinct !DILexicalBlock(scope: !17835, file: !2590, line: 1248, column: 13)
!17840 = !DILocation(line: 1248, column: 13, scope: !17835)
!17841 = !DILocation(line: 1249, column: 31, scope: !17839)
!17842 = !DILocation(line: 1249, column: 13, scope: !17839)
!17843 = !DILocation(line: 1251, column: 19, scope: !17835)
!17844 = !DILocation(line: 1251, column: 9, scope: !17835)
!17845 = !DILocation(line: 1252, column: 14, scope: !17835)
!17846 = !DILocation(line: 1254, column: 13, scope: !17847)
!17847 = distinct !DILexicalBlock(scope: !17835, file: !2590, line: 1254, column: 13)
!17848 = !DILocation(line: 1254, column: 13, scope: !17835)
!17849 = !DILocation(line: 1255, column: 13, scope: !17847)
!17850 = !DILocation(line: 1255, column: 13, scope: !17851)
!17851 = distinct !DILexicalBlock(scope: !17847, file: !2590, line: 1255, column: 13)
!17852 = !DILocation(line: 1256, column: 9, scope: !17835)
!17853 = !DILocation(line: 1256, column: 9, scope: !17854)
!17854 = distinct !DILexicalBlock(scope: !17835, file: !2590, line: 1256, column: 9)
!17855 = !DILocation(line: 1256, column: 9, scope: !17856)
!17856 = distinct !DILexicalBlock(scope: !17854, file: !2590, line: 1256, column: 9)
!17857 = !DILocation(line: 1257, column: 5, scope: !17835)
!17858 = !DILocation(line: 1259, column: 25, scope: !2832)
!17859 = !DILocation(line: 1259, column: 30, scope: !2832)
!17860 = !DILocation(line: 1259, column: 36, scope: !2832)
!17861 = !DILocation(line: 1259, column: 41, scope: !2832)
!17862 = !DILocation(line: 1259, column: 46, scope: !2832)
!17863 = !DILocation(line: 1259, column: 57, scope: !2832)
!17864 = !DILocation(line: 1259, column: 13, scope: !2832)
!17865 = !DILocation(line: 1259, column: 11, scope: !2832)
!17866 = !DILocation(line: 1260, column: 5, scope: !2832)
!17867 = !DILocation(line: 1260, column: 5, scope: !17868)
!17868 = distinct !DILexicalBlock(scope: !2832, file: !2590, line: 1260, column: 5)
!17869 = !DILabel(scope: !2832, name: "action_end_iter", file: !2590, line: 1262)
!17870 = !DILocation(line: 1262, column: 1, scope: !2832)
!17871 = !DILocation(line: 1263, column: 9, scope: !17872)
!17872 = distinct !DILexicalBlock(scope: !2832, file: !2590, line: 1263, column: 9)
!17873 = !DILocation(line: 1263, column: 23, scope: !17872)
!17874 = !DILocation(line: 1263, column: 30, scope: !17872)
!17875 = !DILocation(line: 1263, column: 20, scope: !17872)
!17876 = !DILocation(line: 1263, column: 9, scope: !2832)
!17877 = !DILocation(line: 1264, column: 9, scope: !17872)
!17878 = !DILocation(line: 1266, column: 9, scope: !17879)
!17879 = distinct !DILexicalBlock(scope: !2832, file: !2590, line: 1266, column: 9)
!17880 = !DILocation(line: 1266, column: 9, scope: !2832)
!17881 = !DILocation(line: 1267, column: 14, scope: !17882)
!17882 = distinct !DILexicalBlock(scope: !17883, file: !2590, line: 1267, column: 13)
!17883 = distinct !DILexicalBlock(scope: !17879, file: !2590, line: 1266, column: 26)
!17884 = !DILocation(line: 1267, column: 21, scope: !17882)
!17885 = !DILocation(line: 1267, column: 13, scope: !17883)
!17886 = !DILocation(line: 1268, column: 13, scope: !17882)
!17887 = !DILocation(line: 1269, column: 9, scope: !17883)
!17888 = !DILocation(line: 1269, column: 9, scope: !17889)
!17889 = distinct !DILexicalBlock(scope: !17883, file: !2590, line: 1269, column: 9)
!17890 = !DILocation(line: 1269, column: 9, scope: !17891)
!17891 = distinct !DILexicalBlock(scope: !17889, file: !2590, line: 1269, column: 9)
!17892 = !DILocation(line: 1270, column: 5, scope: !17883)
!17893 = !DILocation(line: 1272, column: 28, scope: !17894)
!17894 = distinct !DILexicalBlock(scope: !2832, file: !2590, line: 1272, column: 9)
!17895 = !DILocation(line: 1272, column: 10, scope: !17894)
!17896 = !DILocation(line: 1272, column: 9, scope: !2832)
!17897 = !DILocation(line: 1273, column: 19, scope: !17898)
!17898 = distinct !DILexicalBlock(scope: !17894, file: !2590, line: 1272, column: 38)
!17899 = !DILocation(line: 1273, column: 9, scope: !17898)
!17900 = !DILocation(line: 1274, column: 14, scope: !17898)
!17901 = !DILocation(line: 1275, column: 9, scope: !17898)
!17902 = !DILocation(line: 1275, column: 9, scope: !17903)
!17903 = distinct !DILexicalBlock(scope: !17898, file: !2590, line: 1275, column: 9)
!17904 = !DILocation(line: 1275, column: 9, scope: !17905)
!17905 = distinct !DILexicalBlock(scope: !17903, file: !2590, line: 1275, column: 9)
!17906 = !DILocation(line: 1276, column: 5, scope: !17898)
!17907 = !DILocation(line: 1278, column: 25, scope: !2832)
!17908 = !DILocation(line: 1278, column: 47, scope: !2832)
!17909 = !DILocation(line: 1278, column: 54, scope: !2832)
!17910 = !DILocation(line: 1278, column: 60, scope: !2832)
!17911 = !DILocation(line: 1278, column: 65, scope: !2832)
!17912 = !DILocation(line: 1278, column: 70, scope: !2832)
!17913 = !DILocation(line: 1278, column: 81, scope: !2832)
!17914 = !DILocation(line: 1278, column: 88, scope: !2832)
!17915 = !DILocation(line: 1278, column: 13, scope: !2832)
!17916 = !DILocation(line: 1278, column: 11, scope: !2832)
!17917 = !DILocation(line: 1279, column: 5, scope: !2832)
!17918 = !DILocation(line: 1279, column: 5, scope: !17919)
!17919 = distinct !DILexicalBlock(scope: !2832, file: !2590, line: 1279, column: 5)
!17920 = !DILabel(scope: !2832, name: "finalize", file: !2590, line: 1281)
!17921 = !DILocation(line: 1281, column: 1, scope: !2832)
!17922 = !DILocation(line: 1282, column: 12, scope: !2832)
!17923 = !DILocation(line: 1282, column: 5, scope: !2832)
!17924 = !DILocation(line: 1285, column: 1, scope: !2832)
!17925 = distinct !DISubprogram(name: "lwan_tpl_apply", scope: !2590, file: !2590, line: 1302, type: !17926, scopeLine: 1303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2637, retainedNodes: !74)
!17926 = !DISubroutineType(types: !17927)
!17927 = !{!2718, !2835, !5}
!17928 = !DILocalVariable(name: "tpl", arg: 1, scope: !17925, file: !2590, line: 1302, type: !2835)
!17929 = !DILocation(line: 1302, column: 28, scope: !17925)
!17930 = !DILocalVariable(name: "variables", arg: 2, scope: !17925, file: !2590, line: 1302, type: !5)
!17931 = !DILocation(line: 1302, column: 39, scope: !17925)
!17932 = !DILocalVariable(name: "buf", scope: !17925, file: !2590, line: 1304, type: !2718)
!17933 = !DILocation(line: 1304, column: 15, scope: !17925)
!17934 = !DILocation(line: 1304, column: 42, scope: !17925)
!17935 = !DILocation(line: 1304, column: 47, scope: !17925)
!17936 = !DILocation(line: 1304, column: 21, scope: !17925)
!17937 = !DILocation(line: 1305, column: 39, scope: !17925)
!17938 = !DILocation(line: 1305, column: 44, scope: !17925)
!17939 = !DILocation(line: 1305, column: 49, scope: !17925)
!17940 = !DILocation(line: 1305, column: 12, scope: !17925)
!17941 = !DILocation(line: 1305, column: 5, scope: !17925)
!17942 = distinct !DISubprogram(name: "lwan_format_rfc_time", scope: !2852, file: !2852, line: 236, type: !17943, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2905, retainedNodes: !74)
!17943 = !DISubroutineType(types: !17944)
!17944 = !{null, !322, !61}
!17945 = !DILocalVariable(name: "t", arg: 1, scope: !17942, file: !2852, line: 236, type: !322)
!17946 = !DILocation(line: 236, column: 29, scope: !17942)
!17947 = !DILocalVariable(name: "buffer", arg: 2, scope: !17942, file: !2852, line: 236, type: !61)
!17948 = !DILocation(line: 236, column: 37, scope: !17942)
!17949 = !DILocalVariable(name: "tm", scope: !17942, file: !2852, line: 238, type: !17950)
!17950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !9973, line: 7, size: 448, elements: !17951)
!17951 = !{!17952, !17953, !17954, !17955, !17956, !17957, !17958, !17959, !17960, !17961, !17962}
!17952 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !17950, file: !9973, line: 9, baseType: !37, size: 32)
!17953 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !17950, file: !9973, line: 10, baseType: !37, size: 32, offset: 32)
!17954 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !17950, file: !9973, line: 11, baseType: !37, size: 32, offset: 64)
!17955 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !17950, file: !9973, line: 12, baseType: !37, size: 32, offset: 96)
!17956 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !17950, file: !9973, line: 13, baseType: !37, size: 32, offset: 128)
!17957 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !17950, file: !9973, line: 14, baseType: !37, size: 32, offset: 160)
!17958 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !17950, file: !9973, line: 15, baseType: !37, size: 32, offset: 192)
!17959 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !17950, file: !9973, line: 16, baseType: !37, size: 32, offset: 224)
!17960 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !17950, file: !9973, line: 17, baseType: !37, size: 32, offset: 256)
!17961 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !17950, file: !9973, line: 20, baseType: !40, size: 64, offset: 320)
!17962 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !17950, file: !9973, line: 21, baseType: !480, size: 64, offset: 384)
!17963 = !DILocation(line: 238, column: 15, scope: !17942)
!17964 = !DILocation(line: 240, column: 9, scope: !17965)
!17965 = distinct !DILexicalBlock(scope: !17942, file: !2852, line: 240, column: 9)
!17966 = !DILocation(line: 240, column: 9, scope: !17942)
!17967 = !DILocation(line: 241, column: 9, scope: !17968)
!17968 = distinct !DILexicalBlock(scope: !17965, file: !2852, line: 240, column: 39)
!17969 = !DILocation(line: 242, column: 9, scope: !17968)
!17970 = !DILocation(line: 245, column: 9, scope: !17971)
!17971 = distinct !DILexicalBlock(scope: !17942, file: !2852, line: 245, column: 9)
!17972 = !DILocation(line: 245, column: 9, scope: !17942)
!17973 = !DILocation(line: 246, column: 9, scope: !17971)
!17974 = !DILocation(line: 247, column: 1, scope: !17942)
!17975 = distinct !DISubprogram(name: "lwan_thread_add_client", scope: !2852, file: !2852, line: 402, type: !17976, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2905, retainedNodes: !74)
!17976 = !DISubroutineType(types: !17977)
!17977 = !{null, !17978, !37}
!17978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17979, size: 64)
!17979 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_thread_t", file: !262, line: 108, baseType: !17980)
!17980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_thread_t_", file: !262, line: 253, size: 832, elements: !17981)
!17981 = !{!17982, !18037, !18043, !18044, !18045}
!17982 = !DIDerivedType(tag: DW_TAG_member, name: "lwan", scope: !17980, file: !262, line: 254, baseType: !17983, size: 64)
!17983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17984, size: 64)
!17984 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_t", file: !262, line: 103, baseType: !17985)
!17985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_t_", file: !262, line: 275, size: 640, elements: !17986)
!17986 = !{!17987, !18008, !18019, !18025, !18026, !18036}
!17987 = !DIDerivedType(tag: DW_TAG_member, name: "url_map_trie", scope: !17985, file: !262, line: 276, baseType: !17988, size: 128)
!17988 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_t", file: !381, line: 25, baseType: !17989)
!17989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_t_", file: !381, line: 41, size: 128, elements: !17990)
!17990 = !{!17991, !18007}
!17991 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !17989, file: !381, line: 42, baseType: !17992, size: 64)
!17992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17993, size: 64)
!17993 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_node_t", file: !381, line: 26, baseType: !17994)
!17994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_node_t_", file: !381, line: 29, size: 640, elements: !17995)
!17995 = !{!17996, !17998, !18006}
!17996 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !17994, file: !381, line: 30, baseType: !17997, size: 512)
!17997 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17992, size: 512, elements: !391)
!17998 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !17994, file: !381, line: 31, baseType: !17999, size: 64, offset: 512)
!17999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18000, size: 64)
!18000 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_leaf_t", file: !381, line: 27, baseType: !18001)
!18001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_leaf_t_", file: !381, line: 35, size: 192, elements: !18002)
!18002 = !{!18003, !18004, !18005}
!18003 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !18001, file: !381, line: 36, baseType: !61, size: 64)
!18004 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !18001, file: !381, line: 37, baseType: !5, size: 64, offset: 64)
!18005 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !18001, file: !381, line: 38, baseType: !17999, size: 64, offset: 128)
!18006 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !17994, file: !381, line: 32, baseType: !37, size: 32, offset: 576)
!18007 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !17989, file: !381, line: 43, baseType: !403, size: 64, offset: 64)
!18008 = !DIDerivedType(tag: DW_TAG_member, name: "conns", scope: !17985, file: !262, line: 277, baseType: !18009, size: 64, offset: 128)
!18009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18010, size: 64)
!18010 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_connection_t", file: !262, line: 112, baseType: !18011)
!18011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_connection_t_", file: !262, line: 196, size: 256, elements: !18012)
!18012 = !{!18013, !18014, !18015, !18016, !18017, !18018}
!18013 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !18011, file: !262, line: 199, baseType: !362, size: 32)
!18014 = !DIDerivedType(tag: DW_TAG_member, name: "time_to_die", scope: !18011, file: !262, line: 200, baseType: !28, size: 32, offset: 32)
!18015 = !DIDerivedType(tag: DW_TAG_member, name: "coro", scope: !18011, file: !262, line: 201, baseType: !365, size: 64, offset: 64)
!18016 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !18011, file: !262, line: 202, baseType: !17978, size: 64, offset: 128)
!18017 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !18011, file: !262, line: 203, baseType: !37, size: 32, offset: 192)
!18018 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !18011, file: !262, line: 203, baseType: !37, size: 32, offset: 224)
!18019 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !17985, file: !262, line: 283, baseType: !18020, size: 128, offset: 192)
!18020 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !17985, file: !262, line: 279, size: 128, elements: !18021)
!18021 = !{!18022, !18023, !18024}
!18022 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !18020, file: !262, line: 280, baseType: !17978, size: 64)
!18023 = !DIDerivedType(tag: DW_TAG_member, name: "max_fd", scope: !18020, file: !262, line: 281, baseType: !28, size: 32, offset: 64)
!18024 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !18020, file: !262, line: 282, baseType: !413, size: 16, offset: 96)
!18025 = !DIDerivedType(tag: DW_TAG_member, name: "module_registry", scope: !17985, file: !262, line: 285, baseType: !331, size: 64, offset: 320)
!18026 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !17985, file: !262, line: 286, baseType: !18027, size: 192, offset: 384)
!18027 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_config_t", file: !262, line: 111, baseType: !18028)
!18028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_config_t_", file: !262, line: 266, size: 192, elements: !18029)
!18029 = !{!18030, !18031, !18032, !18033, !18034, !18035}
!18030 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !18028, file: !262, line: 267, baseType: !61, size: 64)
!18031 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive_timeout", scope: !18028, file: !262, line: 268, baseType: !413, size: 16, offset: 64)
!18032 = !DIDerivedType(tag: DW_TAG_member, name: "quiet", scope: !18028, file: !262, line: 269, baseType: !341, size: 8, offset: 80)
!18033 = !DIDerivedType(tag: DW_TAG_member, name: "reuse_port", scope: !18028, file: !262, line: 270, baseType: !341, size: 8, offset: 88)
!18034 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !18028, file: !262, line: 271, baseType: !28, size: 32, offset: 96)
!18035 = !DIDerivedType(tag: DW_TAG_member, name: "n_threads", scope: !18028, file: !262, line: 272, baseType: !413, size: 16, offset: 128)
!18036 = !DIDerivedType(tag: DW_TAG_member, name: "main_socket", scope: !17985, file: !262, line: 287, baseType: !37, size: 32, offset: 576)
!18037 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !17980, file: !262, line: 259, baseType: !18038, size: 576, offset: 64)
!18038 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !17980, file: !262, line: 255, size: 576, elements: !18039)
!18039 = !{!18040, !18041, !18042}
!18040 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !18038, file: !262, line: 256, baseType: !430, size: 240)
!18041 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !18038, file: !262, line: 257, baseType: !430, size: 240, offset: 240)
!18042 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !18038, file: !262, line: 258, baseType: !322, size: 64, offset: 512)
!18043 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_fd", scope: !17980, file: !262, line: 261, baseType: !37, size: 32, offset: 640)
!18044 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_fd", scope: !17980, file: !262, line: 262, baseType: !435, size: 64, offset: 672)
!18045 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !17980, file: !262, line: 263, baseType: !437, size: 64, offset: 768)
!18046 = !DILocalVariable(name: "t", arg: 1, scope: !17975, file: !2852, line: 402, type: !17978)
!18047 = !DILocation(line: 402, column: 39, scope: !17975)
!18048 = !DILocalVariable(name: "fd", arg: 2, scope: !17975, file: !2852, line: 402, type: !37)
!18049 = !DILocation(line: 402, column: 46, scope: !17975)
!18050 = !DILocation(line: 404, column: 5, scope: !17975)
!18051 = !DILocation(line: 404, column: 8, scope: !17975)
!18052 = !DILocation(line: 404, column: 14, scope: !17975)
!18053 = !DILocation(line: 404, column: 20, scope: !17975)
!18054 = !DILocation(line: 404, column: 24, scope: !17975)
!18055 = !DILocation(line: 404, column: 30, scope: !17975)
!18056 = !DILocation(line: 405, column: 33, scope: !17975)
!18057 = !DILocation(line: 405, column: 5, scope: !17975)
!18058 = !DILocation(line: 405, column: 8, scope: !17975)
!18059 = !DILocation(line: 405, column: 14, scope: !17975)
!18060 = !DILocation(line: 405, column: 20, scope: !17975)
!18061 = !DILocation(line: 405, column: 24, scope: !17975)
!18062 = !DILocation(line: 405, column: 31, scope: !17975)
!18063 = !DILocation(line: 407, column: 9, scope: !18064)
!18064 = distinct !DILexicalBlock(scope: !17975, file: !2852, line: 407, column: 9)
!18065 = !DILocation(line: 407, column: 9, scope: !17975)
!18066 = !DILocation(line: 408, column: 9, scope: !18064)
!18067 = !DILocation(line: 409, column: 1, scope: !17975)
!18068 = distinct !DISubprogram(name: "lwan_thread_init", scope: !2852, file: !2852, line: 412, type: !18069, scopeLine: 413, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2905, retainedNodes: !74)
!18069 = !DISubroutineType(types: !18070)
!18070 = !{null, !17983}
!18071 = !DILocalVariable(name: "l", arg: 1, scope: !18068, file: !2852, line: 412, type: !17983)
!18072 = !DILocation(line: 412, column: 26, scope: !18068)
!18073 = !DILocation(line: 414, column: 5, scope: !18068)
!18074 = !DILocation(line: 416, column: 40, scope: !18068)
!18075 = !DILocation(line: 416, column: 43, scope: !18068)
!18076 = !DILocation(line: 416, column: 50, scope: !18068)
!18077 = !DILocation(line: 416, column: 32, scope: !18068)
!18078 = !DILocation(line: 416, column: 25, scope: !18068)
!18079 = !DILocation(line: 416, column: 5, scope: !18068)
!18080 = !DILocation(line: 416, column: 8, scope: !18068)
!18081 = !DILocation(line: 416, column: 15, scope: !18068)
!18082 = !DILocation(line: 416, column: 23, scope: !18068)
!18083 = !DILocation(line: 417, column: 10, scope: !18084)
!18084 = distinct !DILexicalBlock(scope: !18068, file: !2852, line: 417, column: 9)
!18085 = !DILocation(line: 417, column: 13, scope: !18084)
!18086 = !DILocation(line: 417, column: 20, scope: !18084)
!18087 = !DILocation(line: 417, column: 9, scope: !18068)
!18088 = !DILocation(line: 418, column: 9, scope: !18084)
!18089 = !DILocalVariable(name: "i", scope: !18090, file: !2852, line: 420, type: !628)
!18090 = distinct !DILexicalBlock(scope: !18068, file: !2852, line: 420, column: 5)
!18091 = !DILocation(line: 420, column: 16, scope: !18090)
!18092 = !DILocation(line: 420, column: 10, scope: !18090)
!18093 = !DILocation(line: 420, column: 23, scope: !18094)
!18094 = distinct !DILexicalBlock(scope: !18090, file: !2852, line: 420, column: 5)
!18095 = !DILocation(line: 420, column: 27, scope: !18094)
!18096 = !DILocation(line: 420, column: 30, scope: !18094)
!18097 = !DILocation(line: 420, column: 37, scope: !18094)
!18098 = !DILocation(line: 420, column: 25, scope: !18094)
!18099 = !DILocation(line: 420, column: 5, scope: !18090)
!18100 = !DILocation(line: 421, column: 23, scope: !18094)
!18101 = !DILocation(line: 421, column: 27, scope: !18094)
!18102 = !DILocation(line: 421, column: 30, scope: !18094)
!18103 = !DILocation(line: 421, column: 37, scope: !18094)
!18104 = !DILocation(line: 421, column: 45, scope: !18094)
!18105 = !DILocation(line: 421, column: 9, scope: !18094)
!18106 = !DILocation(line: 420, column: 45, scope: !18094)
!18107 = !DILocation(line: 420, column: 5, scope: !18094)
!18108 = distinct !{!18108, !18099, !18109, !3203}
!18109 = !DILocation(line: 421, column: 47, scope: !18090)
!18110 = !DILocation(line: 422, column: 1, scope: !18068)
!18111 = distinct !DISubprogram(name: "create_thread", scope: !2852, file: !2852, line: 368, type: !18112, scopeLine: 369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !74)
!18112 = !DISubroutineType(types: !18113)
!18113 = !{null, !17983, !17978}
!18114 = !DILocalVariable(name: "l", arg: 1, scope: !18111, file: !2852, line: 368, type: !17983)
!18115 = !DILocation(line: 368, column: 23, scope: !18111)
!18116 = !DILocalVariable(name: "thread", arg: 2, scope: !18111, file: !2852, line: 368, type: !17978)
!18117 = !DILocation(line: 368, column: 41, scope: !18111)
!18118 = !DILocalVariable(name: "attr", scope: !18111, file: !2852, line: 370, type: !18119)
!18119 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_attr_t", file: !438, line: 62, baseType: !18120)
!18120 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "pthread_attr_t", file: !438, line: 56, size: 448, elements: !18121)
!18121 = !{!18122, !18123}
!18122 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !18120, file: !438, line: 58, baseType: !2551, size: 448)
!18123 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !18120, file: !438, line: 59, baseType: !40, size: 64)
!18124 = !DILocation(line: 370, column: 20, scope: !18111)
!18125 = !DILocation(line: 372, column: 12, scope: !18111)
!18126 = !DILocation(line: 372, column: 5, scope: !18111)
!18127 = !DILocation(line: 373, column: 20, scope: !18111)
!18128 = !DILocation(line: 373, column: 5, scope: !18111)
!18129 = !DILocation(line: 373, column: 13, scope: !18111)
!18130 = !DILocation(line: 373, column: 18, scope: !18111)
!18131 = !DILocation(line: 375, column: 29, scope: !18132)
!18132 = distinct !DILexicalBlock(scope: !18111, file: !2852, line: 375, column: 9)
!18133 = !DILocation(line: 375, column: 10, scope: !18132)
!18134 = !DILocation(line: 375, column: 18, scope: !18132)
!18135 = !DILocation(line: 375, column: 27, scope: !18132)
!18136 = !DILocation(line: 375, column: 59, scope: !18132)
!18137 = !DILocation(line: 375, column: 9, scope: !18111)
!18138 = !DILocation(line: 376, column: 9, scope: !18132)
!18139 = !DILocation(line: 378, column: 9, scope: !18140)
!18140 = distinct !DILexicalBlock(scope: !18111, file: !2852, line: 378, column: 9)
!18141 = !DILocation(line: 378, column: 9, scope: !18111)
!18142 = !DILocation(line: 379, column: 9, scope: !18140)
!18143 = !DILocation(line: 381, column: 9, scope: !18144)
!18144 = distinct !DILexicalBlock(scope: !18111, file: !2852, line: 381, column: 9)
!18145 = !DILocation(line: 381, column: 9, scope: !18111)
!18146 = !DILocation(line: 382, column: 9, scope: !18144)
!18147 = !DILocation(line: 384, column: 9, scope: !18148)
!18148 = distinct !DILexicalBlock(scope: !18111, file: !2852, line: 384, column: 9)
!18149 = !DILocation(line: 384, column: 9, scope: !18111)
!18150 = !DILocation(line: 385, column: 9, scope: !18148)
!18151 = !DILocation(line: 387, column: 15, scope: !18152)
!18152 = distinct !DILexicalBlock(scope: !18111, file: !2852, line: 387, column: 9)
!18153 = !DILocation(line: 387, column: 23, scope: !18152)
!18154 = !DILocation(line: 387, column: 9, scope: !18152)
!18155 = !DILocation(line: 387, column: 56, scope: !18152)
!18156 = !DILocation(line: 387, column: 9, scope: !18111)
!18157 = !DILocation(line: 388, column: 9, scope: !18152)
!18158 = !DILocalVariable(name: "event", scope: !18111, file: !2852, line: 390, type: !18159)
!18159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "epoll_event", file: !2922, line: 84, size: 96, elements: !18160)
!18160 = !{!18161, !18162}
!18161 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !18159, file: !2922, line: 86, baseType: !66, size: 32)
!18162 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !18159, file: !2922, line: 87, baseType: !18163, size: 64, offset: 32)
!18163 = !DIDerivedType(tag: DW_TAG_typedef, name: "epoll_data_t", file: !2922, line: 82, baseType: !18164)
!18164 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "epoll_data", file: !2922, line: 76, size: 64, elements: !18165)
!18165 = !{!18166, !18167, !18168, !18169}
!18166 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !18164, file: !2922, line: 78, baseType: !5, size: 64)
!18167 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !18164, file: !2922, line: 79, baseType: !37, size: 32)
!18168 = !DIDerivedType(tag: DW_TAG_member, name: "u32", scope: !18164, file: !2922, line: 80, baseType: !66, size: 32)
!18169 = !DIDerivedType(tag: DW_TAG_member, name: "u64", scope: !18164, file: !2922, line: 81, baseType: !2975, size: 64)
!18170 = !DILocation(line: 390, column: 24, scope: !18111)
!18171 = !DILocation(line: 391, column: 19, scope: !18172)
!18172 = distinct !DILexicalBlock(scope: !18111, file: !2852, line: 391, column: 9)
!18173 = !DILocation(line: 391, column: 27, scope: !18172)
!18174 = !DILocation(line: 391, column: 52, scope: !18172)
!18175 = !DILocation(line: 391, column: 60, scope: !18172)
!18176 = !DILocation(line: 391, column: 9, scope: !18172)
!18177 = !DILocation(line: 391, column: 80, scope: !18172)
!18178 = !DILocation(line: 391, column: 9, scope: !18111)
!18179 = !DILocation(line: 392, column: 9, scope: !18172)
!18180 = !DILocation(line: 394, column: 25, scope: !18181)
!18181 = distinct !DILexicalBlock(scope: !18111, file: !2852, line: 394, column: 9)
!18182 = !DILocation(line: 394, column: 33, scope: !18181)
!18183 = !DILocation(line: 394, column: 62, scope: !18181)
!18184 = !DILocation(line: 394, column: 9, scope: !18181)
!18185 = !DILocation(line: 394, column: 9, scope: !18111)
!18186 = !DILocation(line: 395, column: 9, scope: !18181)
!18187 = !DILocation(line: 397, column: 9, scope: !18188)
!18188 = distinct !DILexicalBlock(scope: !18111, file: !2852, line: 397, column: 9)
!18189 = !DILocation(line: 397, column: 9, scope: !18111)
!18190 = !DILocation(line: 398, column: 9, scope: !18188)
!18191 = !DILocation(line: 399, column: 1, scope: !18111)
!18192 = distinct !DISubprogram(name: "thread_io_loop", scope: !2852, file: !2852, line: 300, type: !1133, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !74)
!18193 = !DILocalVariable(name: "data", arg: 1, scope: !18192, file: !2852, line: 300, type: !5)
!18194 = !DILocation(line: 300, column: 22, scope: !18192)
!18195 = !DILocalVariable(name: "t", scope: !18192, file: !2852, line: 302, type: !17978)
!18196 = !DILocation(line: 302, column: 20, scope: !18192)
!18197 = !DILocation(line: 302, column: 24, scope: !18192)
!18198 = !DILocalVariable(name: "epoll_fd", scope: !18192, file: !2852, line: 303, type: !3054)
!18199 = !DILocation(line: 303, column: 15, scope: !18192)
!18200 = !DILocation(line: 303, column: 26, scope: !18192)
!18201 = !DILocation(line: 303, column: 29, scope: !18192)
!18202 = !DILocalVariable(name: "read_pipe_fd", scope: !18192, file: !2852, line: 304, type: !3054)
!18203 = !DILocation(line: 304, column: 15, scope: !18192)
!18204 = !DILocation(line: 304, column: 30, scope: !18192)
!18205 = !DILocation(line: 304, column: 33, scope: !18192)
!18206 = !DILocalVariable(name: "max_events", scope: !18192, file: !2852, line: 305, type: !3054)
!18207 = !DILocation(line: 305, column: 15, scope: !18192)
!18208 = !DILocation(line: 305, column: 37, scope: !18192)
!18209 = !DILocation(line: 305, column: 40, scope: !18192)
!18210 = !DILocation(line: 305, column: 46, scope: !18192)
!18211 = !DILocation(line: 305, column: 53, scope: !18192)
!18212 = !DILocalVariable(name: "a", arg: 1, scope: !18213, file: !2852, line: 128, type: !3054)
!18213 = distinct !DISubprogram(name: "min", scope: !2852, file: !2852, line: 128, type: !18214, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !74)
!18214 = !DISubroutineType(types: !18215)
!18215 = !{!37, !3054, !3054}
!18216 = !DILocation(line: 128, column: 15, scope: !18213, inlinedAt: !18217)
!18217 = distinct !DILocation(line: 305, column: 28, scope: !18192)
!18218 = !DILocalVariable(name: "b", arg: 2, scope: !18213, file: !2852, line: 128, type: !3054)
!18219 = !DILocation(line: 128, column: 28, scope: !18213, inlinedAt: !18217)
!18220 = !DILocation(line: 130, column: 12, scope: !18213, inlinedAt: !18217)
!18221 = !DILocation(line: 130, column: 16, scope: !18213, inlinedAt: !18217)
!18222 = !DILocation(line: 130, column: 14, scope: !18213, inlinedAt: !18217)
!18223 = !DILocation(line: 130, column: 20, scope: !18213, inlinedAt: !18217)
!18224 = !DILocation(line: 130, column: 24, scope: !18213, inlinedAt: !18217)
!18225 = !DILocalVariable(name: "conns", scope: !18192, file: !2852, line: 306, type: !18009)
!18226 = !DILocation(line: 306, column: 24, scope: !18192)
!18227 = !DILocation(line: 306, column: 32, scope: !18192)
!18228 = !DILocation(line: 306, column: 35, scope: !18192)
!18229 = !DILocation(line: 306, column: 41, scope: !18192)
!18230 = !DILocalVariable(name: "events", scope: !18192, file: !2852, line: 307, type: !18231)
!18231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18159, size: 64)
!18232 = !DILocation(line: 307, column: 25, scope: !18192)
!18233 = !DILocalVariable(name: "switcher", scope: !18192, file: !2852, line: 308, type: !18234)
!18234 = !DIDerivedType(tag: DW_TAG_typedef, name: "coro_switcher_t", file: !367, line: 35, baseType: !18235)
!18235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "coro_switcher_t_", file: !367, line: 39, size: 1280, elements: !18236)
!18236 = !{!18237, !18238}
!18237 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !18235, file: !367, line: 40, baseType: !6108, size: 640)
!18238 = !DIDerivedType(tag: DW_TAG_member, name: "callee", scope: !18235, file: !367, line: 41, baseType: !6108, size: 640, offset: 640)
!18239 = !DILocation(line: 308, column: 21, scope: !18192)
!18240 = !DILocalVariable(name: "dq", scope: !18192, file: !2852, line: 309, type: !18241)
!18241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "death_queue_t", file: !2852, line: 32, size: 384, elements: !18242)
!18242 = !{!18243, !18244, !18245, !18246}
!18243 = !DIDerivedType(tag: DW_TAG_member, name: "conns", scope: !18241, file: !2852, line: 33, baseType: !18009, size: 64)
!18244 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !18241, file: !2852, line: 34, baseType: !18010, size: 256, offset: 64)
!18245 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !18241, file: !2852, line: 35, baseType: !28, size: 32, offset: 320)
!18246 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive_timeout", scope: !18241, file: !2852, line: 36, baseType: !413, size: 16, offset: 352)
!18247 = !DILocation(line: 309, column: 26, scope: !18192)
!18248 = !DILocalVariable(name: "n_fds", scope: !18192, file: !2852, line: 310, type: !37)
!18249 = !DILocation(line: 310, column: 9, scope: !18192)
!18250 = !DILocation(line: 312, column: 5, scope: !18192)
!18251 = !DILocation(line: 315, column: 29, scope: !18192)
!18252 = !DILocation(line: 315, column: 21, scope: !18192)
!18253 = !DILocation(line: 315, column: 14, scope: !18192)
!18254 = !DILocation(line: 315, column: 12, scope: !18192)
!18255 = !DILocation(line: 316, column: 9, scope: !18256)
!18256 = distinct !DILexicalBlock(scope: !18192, file: !2852, line: 316, column: 9)
!18257 = !DILocation(line: 316, column: 9, scope: !18192)
!18258 = !DILocation(line: 317, column: 9, scope: !18256)
!18259 = !DILocation(line: 319, column: 27, scope: !18192)
!18260 = !DILocation(line: 319, column: 34, scope: !18192)
!18261 = !DILocation(line: 319, column: 37, scope: !18192)
!18262 = !DILocation(line: 319, column: 43, scope: !18192)
!18263 = !DILocation(line: 319, column: 50, scope: !18192)
!18264 = !DILocation(line: 319, column: 5, scope: !18192)
!18265 = !DILocation(line: 321, column: 5, scope: !18192)
!18266 = !DILocation(line: 322, column: 36, scope: !18267)
!18267 = distinct !DILexicalBlock(scope: !18268, file: !2852, line: 321, column: 14)
!18268 = distinct !DILexicalBlock(scope: !18269, file: !2852, line: 321, column: 5)
!18269 = distinct !DILexicalBlock(scope: !18192, file: !2852, line: 321, column: 5)
!18270 = !DILocation(line: 322, column: 46, scope: !18267)
!18271 = !DILocation(line: 322, column: 54, scope: !18267)
!18272 = !DILocalVariable(name: "dq", arg: 1, scope: !18273, file: !2852, line: 108, type: !18276)
!18273 = distinct !DISubprogram(name: "death_queue_epoll_timeout", scope: !2852, file: !2852, line: 108, type: !18274, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !74)
!18274 = !DISubroutineType(types: !18275)
!18275 = !{!37, !18276}
!18276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18241, size: 64)
!18277 = !DILocation(line: 108, column: 49, scope: !18273, inlinedAt: !18278)
!18278 = distinct !DILocation(line: 323, column: 36, scope: !18267)
!18279 = !DILocation(line: 110, column: 30, scope: !18273, inlinedAt: !18278)
!18280 = !DILocation(line: 110, column: 12, scope: !18273, inlinedAt: !18278)
!18281 = !DILocation(line: 322, column: 25, scope: !18267)
!18282 = !DILocation(line: 322, column: 23, scope: !18267)
!18283 = !DILocation(line: 322, column: 9, scope: !18267)
!18284 = !DILocation(line: 325, column: 21, scope: !18285)
!18285 = distinct !DILexicalBlock(scope: !18267, file: !2852, line: 323, column: 69)
!18286 = !DILocation(line: 325, column: 13, scope: !18285)
!18287 = !DILocation(line: 328, column: 17, scope: !18288)
!18288 = distinct !DILexicalBlock(scope: !18285, file: !2852, line: 325, column: 28)
!18289 = !DILocation(line: 330, column: 13, scope: !18285)
!18290 = distinct !{!18290, !18291, !18292}
!18291 = !DILocation(line: 321, column: 5, scope: !18269)
!18292 = !DILocation(line: 359, column: 5, scope: !18269)
!18293 = !DILocation(line: 332, column: 13, scope: !18285)
!18294 = !DILocation(line: 333, column: 13, scope: !18285)
!18295 = !DILocation(line: 335, column: 31, scope: !18285)
!18296 = !DILocation(line: 335, column: 13, scope: !18285)
!18297 = !DILocalVariable(name: "ep_event", scope: !18298, file: !2852, line: 337, type: !18231)
!18298 = distinct !DILexicalBlock(scope: !18285, file: !2852, line: 337, column: 13)
!18299 = !DILocation(line: 337, column: 38, scope: !18298)
!18300 = !DILocation(line: 337, column: 49, scope: !18298)
!18301 = !DILocation(line: 337, column: 18, scope: !18298)
!18302 = !DILocation(line: 337, column: 62, scope: !18303)
!18303 = distinct !DILexicalBlock(scope: !18298, file: !2852, line: 337, column: 13)
!18304 = !DILocation(line: 337, column: 13, scope: !18298)
!18305 = !DILocalVariable(name: "conn", scope: !18306, file: !2852, line: 338, type: !18009)
!18306 = distinct !DILexicalBlock(scope: !18303, file: !2852, line: 337, column: 78)
!18307 = !DILocation(line: 338, column: 36, scope: !18306)
!18308 = !DILocation(line: 340, column: 22, scope: !18309)
!18309 = distinct !DILexicalBlock(scope: !18306, file: !2852, line: 340, column: 21)
!18310 = !DILocation(line: 340, column: 32, scope: !18309)
!18311 = !DILocation(line: 340, column: 37, scope: !18309)
!18312 = !DILocation(line: 340, column: 21, scope: !18306)
!18313 = !DILocation(line: 341, column: 50, scope: !18314)
!18314 = distinct !DILexicalBlock(scope: !18309, file: !2852, line: 340, column: 42)
!18315 = !DILocation(line: 341, column: 60, scope: !18314)
!18316 = !DILocation(line: 341, column: 74, scope: !18314)
!18317 = !DILocation(line: 341, column: 28, scope: !18314)
!18318 = !DILocation(line: 341, column: 26, scope: !18314)
!18319 = !DILocation(line: 342, column: 25, scope: !18320)
!18320 = distinct !DILexicalBlock(scope: !18314, file: !2852, line: 342, column: 25)
!18321 = !DILocation(line: 342, column: 25, scope: !18314)
!18322 = !DILocation(line: 343, column: 25, scope: !18320)
!18323 = !DILocation(line: 344, column: 51, scope: !18314)
!18324 = !DILocalVariable(name: "conn", arg: 1, scope: !18325, file: !2852, line: 262, type: !18009)
!18325 = distinct !DISubprogram(name: "spawn_or_reset_coro_if_needed", scope: !2852, file: !2852, line: 262, type: !18326, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !74)
!18326 = !DISubroutineType(types: !18327)
!18327 = !{null, !18009, !18328, !18276}
!18328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18234, size: 64)
!18329 = !DILocation(line: 262, column: 50, scope: !18325, inlinedAt: !18330)
!18330 = distinct !DILocation(line: 344, column: 21, scope: !18314)
!18331 = !DILocalVariable(name: "switcher", arg: 2, scope: !18325, file: !2852, line: 263, type: !18328)
!18332 = !DILocation(line: 263, column: 30, scope: !18325, inlinedAt: !18330)
!18333 = !DILocalVariable(name: "dq", arg: 3, scope: !18325, file: !2852, line: 263, type: !18276)
!18334 = !DILocation(line: 263, column: 62, scope: !18325, inlinedAt: !18330)
!18335 = !DILocation(line: 265, column: 9, scope: !18336, inlinedAt: !18330)
!18336 = distinct !DILexicalBlock(scope: !18325, file: !2852, line: 265, column: 9)
!18337 = !DILocation(line: 265, column: 15, scope: !18336, inlinedAt: !18330)
!18338 = !DILocation(line: 265, column: 9, scope: !18325, inlinedAt: !18330)
!18339 = !DILocation(line: 266, column: 13, scope: !18340, inlinedAt: !18330)
!18340 = distinct !DILexicalBlock(scope: !18341, file: !2852, line: 266, column: 13)
!18341 = distinct !DILexicalBlock(scope: !18336, file: !2852, line: 265, column: 21)
!18342 = !DILocation(line: 266, column: 19, scope: !18340, inlinedAt: !18330)
!18343 = !DILocation(line: 266, column: 25, scope: !18340, inlinedAt: !18330)
!18344 = !DILocation(line: 266, column: 13, scope: !18341, inlinedAt: !18330)
!18345 = !DILocation(line: 267, column: 13, scope: !18340, inlinedAt: !18330)
!18346 = !DILocation(line: 269, column: 20, scope: !18341, inlinedAt: !18330)
!18347 = !DILocation(line: 269, column: 26, scope: !18341, inlinedAt: !18330)
!18348 = !DILocation(line: 269, column: 54, scope: !18341, inlinedAt: !18330)
!18349 = !DILocation(line: 269, column: 9, scope: !18341, inlinedAt: !18330)
!18350 = !DILocation(line: 270, column: 5, scope: !18341, inlinedAt: !18330)
!18351 = !DILocation(line: 271, column: 31, scope: !18352, inlinedAt: !18330)
!18352 = distinct !DILexicalBlock(scope: !18336, file: !2852, line: 270, column: 12)
!18353 = !DILocation(line: 271, column: 63, scope: !18352, inlinedAt: !18330)
!18354 = !DILocation(line: 271, column: 22, scope: !18352, inlinedAt: !18330)
!18355 = !DILocation(line: 271, column: 9, scope: !18352, inlinedAt: !18330)
!18356 = !DILocation(line: 271, column: 15, scope: !18352, inlinedAt: !18330)
!18357 = !DILocation(line: 271, column: 20, scope: !18352, inlinedAt: !18330)
!18358 = !DILocation(line: 273, column: 28, scope: !18352, inlinedAt: !18330)
!18359 = !DILocation(line: 273, column: 32, scope: !18352, inlinedAt: !18330)
!18360 = !DILocation(line: 273, column: 9, scope: !18352, inlinedAt: !18330)
!18361 = !DILocation(line: 274, column: 9, scope: !18352, inlinedAt: !18330)
!18362 = !DILocation(line: 274, column: 21, scope: !18352, inlinedAt: !18330)
!18363 = !DILocation(line: 276, column: 5, scope: !18325, inlinedAt: !18330)
!18364 = !DILocation(line: 276, column: 17, scope: !18325, inlinedAt: !18330)
!18365 = !DILocation(line: 277, column: 5, scope: !18325, inlinedAt: !18330)
!18366 = !DILocation(line: 277, column: 17, scope: !18325, inlinedAt: !18330)
!18367 = !DILocation(line: 278, column: 1, scope: !18325, inlinedAt: !18330)
!18368 = !DILocation(line: 345, column: 17, scope: !18314)
!18369 = !DILocation(line: 346, column: 28, scope: !18370)
!18370 = distinct !DILexicalBlock(scope: !18309, file: !2852, line: 345, column: 24)
!18371 = !DILocation(line: 346, column: 38, scope: !18370)
!18372 = !DILocation(line: 346, column: 43, scope: !18370)
!18373 = !DILocation(line: 346, column: 26, scope: !18370)
!18374 = !DILocation(line: 347, column: 25, scope: !18375)
!18375 = distinct !DILexicalBlock(scope: !18370, file: !2852, line: 347, column: 25)
!18376 = !DILocation(line: 347, column: 25, scope: !18370)
!18377 = !DILocation(line: 348, column: 43, scope: !18378)
!18378 = distinct !DILexicalBlock(scope: !18375, file: !2852, line: 347, column: 79)
!18379 = !DILocalVariable(name: "dq", arg: 1, scope: !18380, file: !2852, line: 114, type: !18276)
!18380 = distinct !DISubprogram(name: "destroy_coro", scope: !2852, file: !2852, line: 114, type: !18381, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !74)
!18381 = !DISubroutineType(types: !18382)
!18382 = !{null, !18276, !18009}
!18383 = !DILocation(line: 114, column: 36, scope: !18380, inlinedAt: !18384)
!18384 = distinct !DILocation(line: 348, column: 25, scope: !18378)
!18385 = !DILocalVariable(name: "conn", arg: 2, scope: !18380, file: !2852, line: 114, type: !18009)
!18386 = !DILocation(line: 114, column: 59, scope: !18380, inlinedAt: !18384)
!18387 = !DILocation(line: 116, column: 24, scope: !18380, inlinedAt: !18384)
!18388 = !DILocation(line: 116, column: 28, scope: !18380, inlinedAt: !18384)
!18389 = !DILocation(line: 116, column: 5, scope: !18380, inlinedAt: !18384)
!18390 = !DILocation(line: 117, column: 9, scope: !18391, inlinedAt: !18384)
!18391 = distinct !DILexicalBlock(scope: !18380, file: !2852, line: 117, column: 9)
!18392 = !DILocation(line: 117, column: 9, scope: !18380, inlinedAt: !18384)
!18393 = !DILocation(line: 118, column: 19, scope: !18394, inlinedAt: !18384)
!18394 = distinct !DILexicalBlock(scope: !18391, file: !2852, line: 117, column: 29)
!18395 = !DILocation(line: 118, column: 25, scope: !18394, inlinedAt: !18384)
!18396 = !DILocation(line: 118, column: 9, scope: !18394, inlinedAt: !18384)
!18397 = !DILocation(line: 119, column: 9, scope: !18394, inlinedAt: !18384)
!18398 = !DILocation(line: 119, column: 15, scope: !18394, inlinedAt: !18384)
!18399 = !DILocation(line: 119, column: 20, scope: !18394, inlinedAt: !18384)
!18400 = !DILocation(line: 120, column: 5, scope: !18394, inlinedAt: !18384)
!18401 = !DILocation(line: 121, column: 9, scope: !18402, inlinedAt: !18384)
!18402 = distinct !DILexicalBlock(scope: !18380, file: !2852, line: 121, column: 9)
!18403 = !DILocation(line: 121, column: 15, scope: !18402, inlinedAt: !18384)
!18404 = !DILocation(line: 121, column: 21, scope: !18402, inlinedAt: !18384)
!18405 = !DILocation(line: 121, column: 9, scope: !18380, inlinedAt: !18384)
!18406 = !DILocation(line: 122, column: 9, scope: !18407, inlinedAt: !18384)
!18407 = distinct !DILexicalBlock(scope: !18402, file: !2852, line: 121, column: 38)
!18408 = !DILocation(line: 122, column: 21, scope: !18407, inlinedAt: !18384)
!18409 = !DILocation(line: 123, column: 38, scope: !18407, inlinedAt: !18384)
!18410 = !DILocation(line: 123, column: 15, scope: !18407, inlinedAt: !18384)
!18411 = !DILocation(line: 123, column: 9, scope: !18407, inlinedAt: !18384)
!18412 = !DILocation(line: 124, column: 5, scope: !18407, inlinedAt: !18384)
!18413 = !DILocation(line: 349, column: 25, scope: !18378)
!18414 = !DILocation(line: 352, column: 51, scope: !18370)
!18415 = !DILocation(line: 262, column: 50, scope: !18325, inlinedAt: !18416)
!18416 = distinct !DILocation(line: 352, column: 21, scope: !18370)
!18417 = !DILocation(line: 263, column: 30, scope: !18325, inlinedAt: !18416)
!18418 = !DILocation(line: 263, column: 62, scope: !18325, inlinedAt: !18416)
!18419 = !DILocation(line: 265, column: 9, scope: !18336, inlinedAt: !18416)
!18420 = !DILocation(line: 265, column: 15, scope: !18336, inlinedAt: !18416)
!18421 = !DILocation(line: 265, column: 9, scope: !18325, inlinedAt: !18416)
!18422 = !DILocation(line: 266, column: 13, scope: !18340, inlinedAt: !18416)
!18423 = !DILocation(line: 266, column: 19, scope: !18340, inlinedAt: !18416)
!18424 = !DILocation(line: 266, column: 25, scope: !18340, inlinedAt: !18416)
!18425 = !DILocation(line: 266, column: 13, scope: !18341, inlinedAt: !18416)
!18426 = !DILocation(line: 267, column: 13, scope: !18340, inlinedAt: !18416)
!18427 = !DILocation(line: 269, column: 20, scope: !18341, inlinedAt: !18416)
!18428 = !DILocation(line: 269, column: 26, scope: !18341, inlinedAt: !18416)
!18429 = !DILocation(line: 269, column: 54, scope: !18341, inlinedAt: !18416)
!18430 = !DILocation(line: 269, column: 9, scope: !18341, inlinedAt: !18416)
!18431 = !DILocation(line: 270, column: 5, scope: !18341, inlinedAt: !18416)
!18432 = !DILocation(line: 271, column: 31, scope: !18352, inlinedAt: !18416)
!18433 = !DILocation(line: 271, column: 63, scope: !18352, inlinedAt: !18416)
!18434 = !DILocation(line: 271, column: 22, scope: !18352, inlinedAt: !18416)
!18435 = !DILocation(line: 271, column: 9, scope: !18352, inlinedAt: !18416)
!18436 = !DILocation(line: 271, column: 15, scope: !18352, inlinedAt: !18416)
!18437 = !DILocation(line: 271, column: 20, scope: !18352, inlinedAt: !18416)
!18438 = !DILocation(line: 273, column: 28, scope: !18352, inlinedAt: !18416)
!18439 = !DILocation(line: 273, column: 32, scope: !18352, inlinedAt: !18416)
!18440 = !DILocation(line: 273, column: 9, scope: !18352, inlinedAt: !18416)
!18441 = !DILocation(line: 274, column: 9, scope: !18352, inlinedAt: !18416)
!18442 = !DILocation(line: 274, column: 21, scope: !18352, inlinedAt: !18416)
!18443 = !DILocation(line: 276, column: 5, scope: !18325, inlinedAt: !18416)
!18444 = !DILocation(line: 276, column: 17, scope: !18325, inlinedAt: !18416)
!18445 = !DILocation(line: 277, column: 5, scope: !18325, inlinedAt: !18416)
!18446 = !DILocation(line: 277, column: 17, scope: !18325, inlinedAt: !18416)
!18447 = !DILocation(line: 278, column: 1, scope: !18325, inlinedAt: !18416)
!18448 = !DILocation(line: 353, column: 48, scope: !18370)
!18449 = !DILocation(line: 353, column: 54, scope: !18370)
!18450 = !DILocalVariable(name: "dq", arg: 1, scope: !18451, file: !2852, line: 174, type: !18276)
!18451 = distinct !DISubprogram(name: "resume_coro_if_needed", scope: !2852, file: !2852, line: 174, type: !18452, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !74)
!18452 = !DISubroutineType(types: !18453)
!18453 = !{null, !18276, !18009, !37}
!18454 = !DILocation(line: 174, column: 45, scope: !18451, inlinedAt: !18455)
!18455 = distinct !DILocation(line: 353, column: 21, scope: !18370)
!18456 = !DILocalVariable(name: "conn", arg: 2, scope: !18451, file: !2852, line: 174, type: !18009)
!18457 = !DILocation(line: 174, column: 68, scope: !18451, inlinedAt: !18455)
!18458 = !DILocalVariable(name: "epoll_fd", arg: 3, scope: !18451, file: !2852, line: 175, type: !37)
!18459 = !DILocation(line: 175, column: 9, scope: !18451, inlinedAt: !18455)
!18460 = !DILocation(line: 177, column: 5, scope: !18461, inlinedAt: !18455)
!18461 = distinct !DILexicalBlock(scope: !18462, file: !2852, line: 177, column: 5)
!18462 = distinct !DILexicalBlock(scope: !18451, file: !2852, line: 177, column: 5)
!18463 = !DILocation(line: 177, column: 5, scope: !18462, inlinedAt: !18455)
!18464 = !DILocation(line: 179, column: 11, scope: !18465, inlinedAt: !18455)
!18465 = distinct !DILexicalBlock(scope: !18451, file: !2852, line: 179, column: 9)
!18466 = !DILocation(line: 179, column: 17, scope: !18465, inlinedAt: !18455)
!18467 = !DILocation(line: 179, column: 23, scope: !18465, inlinedAt: !18455)
!18468 = !DILocation(line: 179, column: 9, scope: !18451, inlinedAt: !18455)
!18469 = !DILocation(line: 180, column: 9, scope: !18465, inlinedAt: !18455)
!18470 = !DILocalVariable(name: "yield_result", scope: !18451, file: !2852, line: 182, type: !18471)
!18471 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_connection_coro_yield_t", file: !262, line: 171, baseType: !1448)
!18472 = !DILocation(line: 182, column: 34, scope: !18451, inlinedAt: !18455)
!18473 = !DILocation(line: 182, column: 61, scope: !18451, inlinedAt: !18455)
!18474 = !DILocation(line: 182, column: 67, scope: !18451, inlinedAt: !18455)
!18475 = !DILocation(line: 182, column: 49, scope: !18451, inlinedAt: !18455)
!18476 = !DILocation(line: 184, column: 9, scope: !18477, inlinedAt: !18455)
!18477 = distinct !DILexicalBlock(scope: !18451, file: !2852, line: 184, column: 9)
!18478 = !DILocation(line: 184, column: 22, scope: !18477, inlinedAt: !18455)
!18479 = !DILocation(line: 184, column: 9, scope: !18451, inlinedAt: !18455)
!18480 = !DILocation(line: 185, column: 22, scope: !18481, inlinedAt: !18455)
!18481 = distinct !DILexicalBlock(scope: !18477, file: !2852, line: 184, column: 46)
!18482 = !DILocation(line: 185, column: 26, scope: !18481, inlinedAt: !18455)
!18483 = !DILocation(line: 114, column: 36, scope: !18380, inlinedAt: !18484)
!18484 = distinct !DILocation(line: 185, column: 9, scope: !18481, inlinedAt: !18455)
!18485 = !DILocation(line: 114, column: 59, scope: !18380, inlinedAt: !18484)
!18486 = !DILocation(line: 116, column: 24, scope: !18380, inlinedAt: !18484)
!18487 = !DILocation(line: 116, column: 28, scope: !18380, inlinedAt: !18484)
!18488 = !DILocation(line: 116, column: 5, scope: !18380, inlinedAt: !18484)
!18489 = !DILocation(line: 117, column: 9, scope: !18391, inlinedAt: !18484)
!18490 = !DILocation(line: 117, column: 9, scope: !18380, inlinedAt: !18484)
!18491 = !DILocation(line: 118, column: 19, scope: !18394, inlinedAt: !18484)
!18492 = !DILocation(line: 118, column: 25, scope: !18394, inlinedAt: !18484)
!18493 = !DILocation(line: 118, column: 9, scope: !18394, inlinedAt: !18484)
!18494 = !DILocation(line: 119, column: 9, scope: !18394, inlinedAt: !18484)
!18495 = !DILocation(line: 119, column: 15, scope: !18394, inlinedAt: !18484)
!18496 = !DILocation(line: 119, column: 20, scope: !18394, inlinedAt: !18484)
!18497 = !DILocation(line: 120, column: 5, scope: !18394, inlinedAt: !18484)
!18498 = !DILocation(line: 121, column: 9, scope: !18402, inlinedAt: !18484)
!18499 = !DILocation(line: 121, column: 15, scope: !18402, inlinedAt: !18484)
!18500 = !DILocation(line: 121, column: 21, scope: !18402, inlinedAt: !18484)
!18501 = !DILocation(line: 121, column: 9, scope: !18380, inlinedAt: !18484)
!18502 = !DILocation(line: 122, column: 9, scope: !18407, inlinedAt: !18484)
!18503 = !DILocation(line: 122, column: 21, scope: !18407, inlinedAt: !18484)
!18504 = !DILocation(line: 123, column: 38, scope: !18407, inlinedAt: !18484)
!18505 = !DILocation(line: 123, column: 15, scope: !18407, inlinedAt: !18484)
!18506 = !DILocation(line: 123, column: 9, scope: !18407, inlinedAt: !18484)
!18507 = !DILocation(line: 124, column: 5, scope: !18407, inlinedAt: !18484)
!18508 = !DILocation(line: 186, column: 9, scope: !18481, inlinedAt: !18455)
!18509 = !DILocalVariable(name: "write_events", scope: !18451, file: !2852, line: 189, type: !341)
!18510 = !DILocation(line: 189, column: 10, scope: !18451, inlinedAt: !18455)
!18511 = !DILocation(line: 190, column: 9, scope: !18512, inlinedAt: !18455)
!18512 = distinct !DILexicalBlock(scope: !18451, file: !2852, line: 190, column: 9)
!18513 = !DILocation(line: 190, column: 15, scope: !18512, inlinedAt: !18455)
!18514 = !DILocation(line: 190, column: 21, scope: !18512, inlinedAt: !18455)
!18515 = !DILocation(line: 190, column: 9, scope: !18451, inlinedAt: !18455)
!18516 = !DILocation(line: 191, column: 22, scope: !18517, inlinedAt: !18455)
!18517 = distinct !DILexicalBlock(scope: !18512, file: !2852, line: 190, column: 39)
!18518 = !DILocation(line: 192, column: 5, scope: !18517, inlinedAt: !18455)
!18519 = !DILocalVariable(name: "should_resume_coro", scope: !18520, file: !2852, line: 193, type: !341)
!18520 = distinct !DILexicalBlock(scope: !18512, file: !2852, line: 192, column: 12)
!18521 = !DILocation(line: 193, column: 14, scope: !18520, inlinedAt: !18455)
!18522 = !DILocation(line: 193, column: 36, scope: !18520, inlinedAt: !18455)
!18523 = !DILocation(line: 193, column: 49, scope: !18520, inlinedAt: !18455)
!18524 = !DILocation(line: 195, column: 13, scope: !18525, inlinedAt: !18455)
!18525 = distinct !DILexicalBlock(scope: !18520, file: !2852, line: 195, column: 13)
!18526 = !DILocation(line: 195, column: 13, scope: !18520, inlinedAt: !18455)
!18527 = !DILocation(line: 196, column: 13, scope: !18525, inlinedAt: !18455)
!18528 = !DILocation(line: 196, column: 25, scope: !18525, inlinedAt: !18455)
!18529 = !DILocation(line: 198, column: 13, scope: !18525, inlinedAt: !18455)
!18530 = !DILocation(line: 198, column: 25, scope: !18525, inlinedAt: !18455)
!18531 = !DILocation(line: 200, column: 25, scope: !18520, inlinedAt: !18455)
!18532 = !DILocation(line: 200, column: 31, scope: !18520, inlinedAt: !18455)
!18533 = !DILocation(line: 200, column: 37, scope: !18520, inlinedAt: !18455)
!18534 = !DILocation(line: 200, column: 24, scope: !18520, inlinedAt: !18455)
!18535 = !DILocation(line: 200, column: 22, scope: !18520, inlinedAt: !18455)
!18536 = !DILocation(line: 201, column: 13, scope: !18537, inlinedAt: !18455)
!18537 = distinct !DILexicalBlock(scope: !18520, file: !2852, line: 201, column: 13)
!18538 = !DILocation(line: 201, column: 35, scope: !18537, inlinedAt: !18455)
!18539 = !DILocation(line: 201, column: 32, scope: !18537, inlinedAt: !18455)
!18540 = !DILocation(line: 201, column: 13, scope: !18520, inlinedAt: !18455)
!18541 = !DILocation(line: 202, column: 13, scope: !18537, inlinedAt: !18455)
!18542 = !DILocalVariable(name: "event", scope: !18451, file: !2852, line: 205, type: !18159)
!18543 = !DILocation(line: 205, column: 24, scope: !18451, inlinedAt: !18455)
!18544 = !DILocation(line: 206, column: 40, scope: !18451, inlinedAt: !18455)
!18545 = !DILocation(line: 206, column: 19, scope: !18451, inlinedAt: !18455)
!18546 = !DILocation(line: 205, column: 32, scope: !18451, inlinedAt: !18455)
!18547 = !DILocation(line: 207, column: 21, scope: !18451, inlinedAt: !18455)
!18548 = !DILocation(line: 207, column: 14, scope: !18451, inlinedAt: !18455)
!18549 = !DILocalVariable(name: "fd", scope: !18451, file: !2852, line: 210, type: !37)
!18550 = !DILocation(line: 210, column: 9, scope: !18451, inlinedAt: !18455)
!18551 = !DILocation(line: 210, column: 37, scope: !18451, inlinedAt: !18455)
!18552 = !DILocation(line: 210, column: 14, scope: !18451, inlinedAt: !18455)
!18553 = !DILocation(line: 211, column: 9, scope: !18554, inlinedAt: !18455)
!18554 = distinct !DILexicalBlock(scope: !18451, file: !2852, line: 211, column: 9)
!18555 = !DILocation(line: 211, column: 9, scope: !18451, inlinedAt: !18455)
!18556 = !DILocation(line: 212, column: 9, scope: !18554, inlinedAt: !18455)
!18557 = !DILocation(line: 214, column: 5, scope: !18451, inlinedAt: !18455)
!18558 = !DILocation(line: 214, column: 17, scope: !18451, inlinedAt: !18455)
!18559 = !DILocation(line: 215, column: 1, scope: !18451, inlinedAt: !18455)
!18560 = !DILocation(line: 356, column: 47, scope: !18306)
!18561 = !DILocation(line: 356, column: 17, scope: !18306)
!18562 = !DILocation(line: 357, column: 13, scope: !18306)
!18563 = !DILocation(line: 337, column: 74, scope: !18303)
!18564 = !DILocation(line: 337, column: 13, scope: !18303)
!18565 = distinct !{!18565, !18304, !18566, !3203}
!18566 = !DILocation(line: 357, column: 13, scope: !18298)
!18567 = !DILocation(line: 358, column: 9, scope: !18285)
!18568 = !DILocation(line: 321, column: 5, scope: !18268)
!18569 = !DILabel(scope: !18192, name: "epoll_fd_closed", file: !2852, line: 361)
!18570 = !DILocation(line: 361, column: 1, scope: !18192)
!18571 = !DILocation(line: 362, column: 10, scope: !18192)
!18572 = !DILocation(line: 362, column: 5, scope: !18192)
!18573 = !DILocation(line: 364, column: 5, scope: !18192)
!18574 = distinct !DISubprogram(name: "death_queue_init", scope: !2852, file: !2852, line: 98, type: !18575, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !74)
!18575 = !DISubroutineType(types: !18576)
!18576 = !{null, !18276, !18009, !413}
!18577 = !DILocalVariable(name: "dq", arg: 1, scope: !18574, file: !2852, line: 98, type: !18276)
!18578 = !DILocation(line: 98, column: 40, scope: !18574)
!18579 = !DILocalVariable(name: "conns", arg: 2, scope: !18574, file: !2852, line: 98, type: !18009)
!18580 = !DILocation(line: 98, column: 63, scope: !18574)
!18581 = !DILocalVariable(name: "keep_alive_timeout", arg: 3, scope: !18574, file: !2852, line: 99, type: !413)
!18582 = !DILocation(line: 99, column: 20, scope: !18574)
!18583 = !DILocation(line: 101, column: 17, scope: !18574)
!18584 = !DILocation(line: 101, column: 5, scope: !18574)
!18585 = !DILocation(line: 101, column: 9, scope: !18574)
!18586 = !DILocation(line: 101, column: 15, scope: !18574)
!18587 = !DILocation(line: 102, column: 5, scope: !18574)
!18588 = !DILocation(line: 102, column: 9, scope: !18574)
!18589 = !DILocation(line: 102, column: 14, scope: !18574)
!18590 = !DILocation(line: 103, column: 30, scope: !18574)
!18591 = !DILocation(line: 103, column: 5, scope: !18574)
!18592 = !DILocation(line: 103, column: 9, scope: !18574)
!18593 = !DILocation(line: 103, column: 28, scope: !18574)
!18594 = !DILocation(line: 104, column: 21, scope: !18574)
!18595 = !DILocation(line: 104, column: 25, scope: !18574)
!18596 = !DILocation(line: 104, column: 30, scope: !18574)
!18597 = !DILocation(line: 104, column: 35, scope: !18574)
!18598 = !DILocation(line: 104, column: 5, scope: !18574)
!18599 = !DILocation(line: 104, column: 9, scope: !18574)
!18600 = !DILocation(line: 104, column: 14, scope: !18574)
!18601 = !DILocation(line: 104, column: 19, scope: !18574)
!18602 = !DILocation(line: 105, column: 1, scope: !18574)
!18603 = distinct !DISubprogram(name: "death_queue_empty", scope: !2852, file: !2852, line: 74, type: !18604, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !74)
!18604 = !DISubroutineType(types: !18605)
!18605 = !{!341, !18276}
!18606 = !DILocalVariable(name: "dq", arg: 1, scope: !18603, file: !2852, line: 74, type: !18276)
!18607 = !DILocation(line: 74, column: 53, scope: !18603)
!18608 = !DILocation(line: 76, column: 12, scope: !18603)
!18609 = !DILocation(line: 76, column: 16, scope: !18603)
!18610 = !DILocation(line: 76, column: 21, scope: !18603)
!18611 = !DILocation(line: 76, column: 26, scope: !18603)
!18612 = !DILocation(line: 76, column: 5, scope: !18603)
!18613 = distinct !DISubprogram(name: "death_queue_kill_waiting", scope: !2852, file: !2852, line: 218, type: !18614, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !74)
!18614 = !DISubroutineType(types: !18615)
!18615 = !{null, !18276}
!18616 = !DILocalVariable(name: "dq", arg: 1, scope: !18613, file: !2852, line: 218, type: !18276)
!18617 = !DILocation(line: 218, column: 48, scope: !18613)
!18618 = !DILocation(line: 220, column: 5, scope: !18613)
!18619 = !DILocation(line: 220, column: 9, scope: !18613)
!18620 = !DILocation(line: 220, column: 13, scope: !18613)
!18621 = !DILocation(line: 222, column: 5, scope: !18613)
!18622 = !DILocation(line: 222, column: 31, scope: !18613)
!18623 = !DILocation(line: 222, column: 13, scope: !18613)
!18624 = !DILocation(line: 222, column: 12, scope: !18613)
!18625 = !DILocalVariable(name: "conn", scope: !18626, file: !2852, line: 223, type: !18009)
!18626 = distinct !DILexicalBlock(scope: !18613, file: !2852, line: 222, column: 36)
!18627 = !DILocation(line: 223, column: 28, scope: !18626)
!18628 = !DILocation(line: 223, column: 59, scope: !18626)
!18629 = !DILocation(line: 223, column: 63, scope: !18626)
!18630 = !DILocation(line: 223, column: 67, scope: !18626)
!18631 = !DILocation(line: 223, column: 72, scope: !18626)
!18632 = !DILocation(line: 223, column: 35, scope: !18626)
!18633 = !DILocation(line: 225, column: 13, scope: !18634)
!18634 = distinct !DILexicalBlock(scope: !18626, file: !2852, line: 225, column: 13)
!18635 = !DILocation(line: 225, column: 19, scope: !18634)
!18636 = !DILocation(line: 225, column: 33, scope: !18634)
!18637 = !DILocation(line: 225, column: 37, scope: !18634)
!18638 = !DILocation(line: 225, column: 31, scope: !18634)
!18639 = !DILocation(line: 225, column: 13, scope: !18626)
!18640 = !DILocation(line: 226, column: 13, scope: !18634)
!18641 = !DILocation(line: 228, column: 22, scope: !18626)
!18642 = !DILocation(line: 228, column: 26, scope: !18626)
!18643 = !DILocation(line: 114, column: 36, scope: !18380, inlinedAt: !18644)
!18644 = distinct !DILocation(line: 228, column: 9, scope: !18626)
!18645 = !DILocation(line: 114, column: 59, scope: !18380, inlinedAt: !18644)
!18646 = !DILocation(line: 116, column: 24, scope: !18380, inlinedAt: !18644)
!18647 = !DILocation(line: 116, column: 28, scope: !18380, inlinedAt: !18644)
!18648 = !DILocation(line: 116, column: 5, scope: !18380, inlinedAt: !18644)
!18649 = !DILocation(line: 117, column: 9, scope: !18391, inlinedAt: !18644)
!18650 = !DILocation(line: 117, column: 9, scope: !18380, inlinedAt: !18644)
!18651 = !DILocation(line: 118, column: 19, scope: !18394, inlinedAt: !18644)
!18652 = !DILocation(line: 118, column: 25, scope: !18394, inlinedAt: !18644)
!18653 = !DILocation(line: 118, column: 9, scope: !18394, inlinedAt: !18644)
!18654 = !DILocation(line: 119, column: 9, scope: !18394, inlinedAt: !18644)
!18655 = !DILocation(line: 119, column: 15, scope: !18394, inlinedAt: !18644)
!18656 = !DILocation(line: 119, column: 20, scope: !18394, inlinedAt: !18644)
!18657 = !DILocation(line: 120, column: 5, scope: !18394, inlinedAt: !18644)
!18658 = !DILocation(line: 121, column: 9, scope: !18402, inlinedAt: !18644)
!18659 = !DILocation(line: 121, column: 15, scope: !18402, inlinedAt: !18644)
!18660 = !DILocation(line: 121, column: 21, scope: !18402, inlinedAt: !18644)
!18661 = !DILocation(line: 121, column: 9, scope: !18380, inlinedAt: !18644)
!18662 = !DILocation(line: 122, column: 9, scope: !18407, inlinedAt: !18644)
!18663 = !DILocation(line: 122, column: 21, scope: !18407, inlinedAt: !18644)
!18664 = !DILocation(line: 123, column: 38, scope: !18407, inlinedAt: !18644)
!18665 = !DILocation(line: 123, column: 15, scope: !18407, inlinedAt: !18644)
!18666 = !DILocation(line: 123, column: 9, scope: !18407, inlinedAt: !18644)
!18667 = !DILocation(line: 124, column: 5, scope: !18407, inlinedAt: !18644)
!18668 = distinct !{!18668, !18621, !18669, !3203}
!18669 = !DILocation(line: 229, column: 5, scope: !18613)
!18670 = !DILocation(line: 232, column: 5, scope: !18613)
!18671 = !DILocation(line: 232, column: 9, scope: !18613)
!18672 = !DILocation(line: 232, column: 14, scope: !18613)
!18673 = !DILocation(line: 233, column: 1, scope: !18613)
!18674 = distinct !DISubprogram(name: "update_date_cache", scope: !2852, file: !2852, line: 250, type: !18675, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !74)
!18675 = !DISubroutineType(types: !18676)
!18676 = !{null, !17978}
!18677 = !DILocalVariable(name: "thread", arg: 1, scope: !18674, file: !2852, line: 250, type: !17978)
!18678 = !DILocation(line: 250, column: 34, scope: !18674)
!18679 = !DILocalVariable(name: "now", scope: !18674, file: !2852, line: 252, type: !322)
!18680 = !DILocation(line: 252, column: 12, scope: !18674)
!18681 = !DILocation(line: 252, column: 18, scope: !18674)
!18682 = !DILocation(line: 253, column: 9, scope: !18683)
!18683 = distinct !DILexicalBlock(scope: !18674, file: !2852, line: 253, column: 9)
!18684 = !DILocation(line: 253, column: 16, scope: !18683)
!18685 = !DILocation(line: 253, column: 24, scope: !18683)
!18686 = !DILocation(line: 253, column: 29, scope: !18683)
!18687 = !DILocation(line: 253, column: 13, scope: !18683)
!18688 = !DILocation(line: 253, column: 9, scope: !18674)
!18689 = !DILocation(line: 254, column: 29, scope: !18690)
!18690 = distinct !DILexicalBlock(scope: !18683, file: !2852, line: 253, column: 35)
!18691 = !DILocation(line: 254, column: 9, scope: !18690)
!18692 = !DILocation(line: 254, column: 17, scope: !18690)
!18693 = !DILocation(line: 254, column: 22, scope: !18690)
!18694 = !DILocation(line: 254, column: 27, scope: !18690)
!18695 = !DILocation(line: 255, column: 30, scope: !18690)
!18696 = !DILocation(line: 255, column: 35, scope: !18690)
!18697 = !DILocation(line: 255, column: 43, scope: !18690)
!18698 = !DILocation(line: 255, column: 48, scope: !18690)
!18699 = !DILocation(line: 255, column: 9, scope: !18690)
!18700 = !DILocation(line: 256, column: 30, scope: !18690)
!18701 = !DILocation(line: 256, column: 44, scope: !18690)
!18702 = !DILocation(line: 256, column: 52, scope: !18690)
!18703 = !DILocation(line: 256, column: 58, scope: !18690)
!18704 = !DILocation(line: 256, column: 65, scope: !18690)
!18705 = !DILocation(line: 256, column: 36, scope: !18690)
!18706 = !DILocation(line: 256, column: 34, scope: !18690)
!18707 = !DILocation(line: 257, column: 21, scope: !18690)
!18708 = !DILocation(line: 257, column: 29, scope: !18690)
!18709 = !DILocation(line: 257, column: 34, scope: !18690)
!18710 = !DILocation(line: 256, column: 9, scope: !18690)
!18711 = !DILocation(line: 258, column: 5, scope: !18690)
!18712 = !DILocation(line: 259, column: 1, scope: !18674)
!18713 = distinct !DISubprogram(name: "grab_and_watch_client", scope: !2852, file: !2852, line: 281, type: !18714, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !74)
!18714 = !DISubroutineType(types: !18715)
!18715 = !{!18009, !37, !37, !18009}
!18716 = !DILocalVariable(name: "epoll_fd", arg: 1, scope: !18713, file: !2852, line: 281, type: !37)
!18717 = !DILocation(line: 281, column: 27, scope: !18713)
!18718 = !DILocalVariable(name: "pipe_fd", arg: 2, scope: !18713, file: !2852, line: 281, type: !37)
!18719 = !DILocation(line: 281, column: 41, scope: !18713)
!18720 = !DILocalVariable(name: "conns", arg: 3, scope: !18713, file: !2852, line: 281, type: !18009)
!18721 = !DILocation(line: 281, column: 69, scope: !18713)
!18722 = !DILocalVariable(name: "fd", scope: !18713, file: !2852, line: 283, type: !37)
!18723 = !DILocation(line: 283, column: 9, scope: !18713)
!18724 = !DILocation(line: 284, column: 9, scope: !18725)
!18725 = distinct !DILexicalBlock(scope: !18713, file: !2852, line: 284, column: 9)
!18726 = !DILocation(line: 284, column: 9, scope: !18713)
!18727 = !DILocation(line: 285, column: 9, scope: !18728)
!18728 = distinct !DILexicalBlock(scope: !18725, file: !2852, line: 284, column: 67)
!18729 = !DILocation(line: 286, column: 9, scope: !18728)
!18730 = !DILocalVariable(name: "event", scope: !18713, file: !2852, line: 289, type: !18159)
!18731 = !DILocation(line: 289, column: 24, scope: !18713)
!18732 = !DILocation(line: 289, column: 32, scope: !18713)
!18733 = !DILocation(line: 290, column: 19, scope: !18713)
!18734 = !DILocation(line: 291, column: 22, scope: !18713)
!18735 = !DILocation(line: 291, column: 28, scope: !18713)
!18736 = !DILocation(line: 291, column: 14, scope: !18713)
!18737 = !DILocation(line: 293, column: 9, scope: !18738)
!18738 = distinct !DILexicalBlock(scope: !18713, file: !2852, line: 293, column: 9)
!18739 = !DILocation(line: 293, column: 9, scope: !18713)
!18740 = !DILocation(line: 294, column: 9, scope: !18738)
!18741 = !DILocation(line: 296, column: 13, scope: !18713)
!18742 = !DILocation(line: 296, column: 19, scope: !18713)
!18743 = !DILocation(line: 296, column: 5, scope: !18713)
!18744 = !DILocation(line: 297, column: 1, scope: !18713)
!18745 = distinct !DISubprogram(name: "process_request_coro", scope: !2852, file: !2852, line: 134, type: !1874, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !74)
!18746 = !DILocalVariable(name: "coro", arg: 1, scope: !18745, file: !2852, line: 134, type: !365)
!18747 = !DILocation(line: 134, column: 30, scope: !18745)
!18748 = !DILocalVariable(name: "strbuf", scope: !18745, file: !2852, line: 136, type: !18749)
!18749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18750, size: 64)
!18750 = !DIDerivedType(tag: DW_TAG_typedef, name: "strbuf_t", file: !472, line: 25, baseType: !18751)
!18751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "strbuf_t_", file: !472, line: 27, size: 256, elements: !18752)
!18752 = !{!18753, !18758, !18763}
!18753 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !18751, file: !472, line: 31, baseType: !18754, size: 64)
!18754 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !18751, file: !472, line: 28, size: 64, elements: !18755)
!18755 = !{!18756, !18757}
!18756 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !18754, file: !472, line: 29, baseType: !61, size: 64)
!18757 = !DIDerivedType(tag: DW_TAG_member, name: "static_buffer", scope: !18754, file: !472, line: 30, baseType: !480, size: 64)
!18758 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !18751, file: !472, line: 34, baseType: !18759, size: 128, offset: 64)
!18759 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !18751, file: !472, line: 32, size: 128, elements: !18760)
!18760 = !{!18761, !18762}
!18761 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !18759, file: !472, line: 33, baseType: !6, size: 64)
!18762 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !18759, file: !472, line: 33, baseType: !6, size: 64, offset: 64)
!18763 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !18751, file: !472, line: 35, baseType: !28, size: 32, offset: 192)
!18764 = !DILocation(line: 136, column: 15, scope: !18745)
!18765 = !DILocation(line: 136, column: 41, scope: !18745)
!18766 = !DILocation(line: 136, column: 24, scope: !18745)
!18767 = !DILocalVariable(name: "conn", scope: !18745, file: !2852, line: 137, type: !18009)
!18768 = !DILocation(line: 137, column: 24, scope: !18745)
!18769 = !DILocation(line: 137, column: 45, scope: !18745)
!18770 = !DILocation(line: 137, column: 31, scope: !18745)
!18771 = !DILocalVariable(name: "lwan", scope: !18745, file: !2852, line: 138, type: !17983)
!18772 = !DILocation(line: 138, column: 13, scope: !18745)
!18773 = !DILocation(line: 138, column: 20, scope: !18745)
!18774 = !DILocation(line: 138, column: 26, scope: !18745)
!18775 = !DILocation(line: 138, column: 34, scope: !18745)
!18776 = !DILocalVariable(name: "fd", scope: !18745, file: !2852, line: 139, type: !37)
!18777 = !DILocation(line: 139, column: 9, scope: !18745)
!18778 = !DILocation(line: 139, column: 37, scope: !18745)
!18779 = !DILocation(line: 139, column: 14, scope: !18745)
!18780 = !DILocalVariable(name: "request_buffer", scope: !18745, file: !2852, line: 140, type: !8448)
!18781 = !DILocation(line: 140, column: 10, scope: !18745)
!18782 = !DILocalVariable(name: "buffer", scope: !18745, file: !2852, line: 141, type: !18783)
!18783 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_value_t", file: !262, line: 110, baseType: !18784)
!18784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_value_t_", file: !262, line: 191, size: 128, elements: !18785)
!18785 = !{!18786, !18787}
!18786 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !18784, file: !262, line: 192, baseType: !61, size: 64)
!18787 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !18784, file: !262, line: 193, baseType: !6, size: 64, offset: 64)
!18788 = !DILocation(line: 141, column: 18, scope: !18745)
!18789 = !DILocation(line: 141, column: 27, scope: !18745)
!18790 = !DILocation(line: 142, column: 18, scope: !18745)
!18791 = !DILocalVariable(name: "next_request", scope: !18745, file: !2852, line: 145, type: !61)
!18792 = !DILocation(line: 145, column: 11, scope: !18745)
!18793 = !DILocation(line: 147, column: 17, scope: !18745)
!18794 = !DILocation(line: 147, column: 5, scope: !18745)
!18795 = !DILocation(line: 149, column: 5, scope: !18745)
!18796 = !DILocalVariable(name: "request", scope: !18797, file: !2852, line: 150, type: !18798)
!18797 = distinct !DILexicalBlock(scope: !18745, file: !2852, line: 149, column: 18)
!18798 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_request_t", file: !262, line: 106, baseType: !18799)
!18799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_request_t_", file: !262, line: 206, size: 1280, elements: !18800)
!18800 = !{!18801, !18802, !18803, !18804, !18805, !18806, !18817, !18818, !18827}
!18801 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !18799, file: !262, line: 207, baseType: !347, size: 32)
!18802 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !18799, file: !262, line: 208, baseType: !37, size: 32, offset: 32)
!18803 = !DIDerivedType(tag: DW_TAG_member, name: "url", scope: !18799, file: !262, line: 209, baseType: !18783, size: 128, offset: 64)
!18804 = !DIDerivedType(tag: DW_TAG_member, name: "original_url", scope: !18799, file: !262, line: 210, baseType: !18783, size: 128, offset: 192)
!18805 = !DIDerivedType(tag: DW_TAG_member, name: "conn", scope: !18799, file: !262, line: 211, baseType: !18009, size: 64, offset: 320)
!18806 = !DIDerivedType(tag: DW_TAG_member, name: "query_params", scope: !18799, file: !262, line: 216, baseType: !18807, size: 128, offset: 384)
!18807 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !18799, file: !262, line: 213, size: 128, elements: !18808)
!18808 = !{!18809, !18816}
!18809 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !18807, file: !262, line: 214, baseType: !18810, size: 64)
!18810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18811, size: 64)
!18811 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_key_value_t", file: !262, line: 105, baseType: !18812)
!18812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_key_value_t_", file: !262, line: 173, size: 128, elements: !18813)
!18813 = !{!18814, !18815}
!18814 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !18812, file: !262, line: 174, baseType: !61, size: 64)
!18815 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !18812, file: !262, line: 175, baseType: !61, size: 64, offset: 64)
!18816 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !18807, file: !262, line: 215, baseType: !6, size: 64, offset: 64)
!18817 = !DIDerivedType(tag: DW_TAG_member, name: "post_data", scope: !18799, file: !262, line: 216, baseType: !18807, size: 128, offset: 512)
!18818 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !18799, file: !262, line: 223, baseType: !18819, size: 192, offset: 640)
!18819 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !18799, file: !262, line: 217, size: 192, elements: !18820)
!18820 = !{!18821, !18822}
!18821 = !DIDerivedType(tag: DW_TAG_member, name: "if_modified_since", scope: !18819, file: !262, line: 218, baseType: !322, size: 64)
!18822 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !18819, file: !262, line: 222, baseType: !18823, size: 128, offset: 64)
!18823 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !18819, file: !262, line: 219, size: 128, elements: !18824)
!18824 = !{!18825, !18826}
!18825 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !18823, file: !262, line: 220, baseType: !2000, size: 64)
!18826 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !18823, file: !262, line: 221, baseType: !2000, size: 64, offset: 64)
!18827 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !18799, file: !262, line: 224, baseType: !18828, size: 448, offset: 832)
!18828 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_response_t", file: !262, line: 107, baseType: !18829)
!18829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_response_t_", file: !262, line: 178, size: 448, elements: !18830)
!18830 = !{!18831, !18832, !18833, !18834, !18835}
!18831 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !18829, file: !262, line: 179, baseType: !18749, size: 64)
!18832 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !18829, file: !262, line: 180, baseType: !480, size: 64, offset: 64)
!18833 = !DIDerivedType(tag: DW_TAG_member, name: "content_length", scope: !18829, file: !262, line: 181, baseType: !6, size: 64, offset: 128)
!18834 = !DIDerivedType(tag: DW_TAG_member, name: "headers", scope: !18829, file: !262, line: 182, baseType: !18810, size: 64, offset: 192)
!18835 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !18829, file: !262, line: 188, baseType: !18836, size: 192, offset: 256)
!18836 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !18829, file: !262, line: 184, size: 192, elements: !18837)
!18837 = !{!18838, !18843, !18844}
!18838 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !18836, file: !262, line: 185, baseType: !18839, size: 64)
!18839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18840, size: 64)
!18840 = !DISubroutineType(types: !18841)
!18841 = !{!497, !18842, !5}
!18842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18798, size: 64)
!18843 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !18836, file: !262, line: 186, baseType: !5, size: 64, offset: 64)
!18844 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !18836, file: !262, line: 187, baseType: !5, size: 64, offset: 128)
!18845 = !DILocation(line: 150, column: 24, scope: !18797)
!18846 = !DILocation(line: 150, column: 34, scope: !18797)
!18847 = !DILocation(line: 152, column: 19, scope: !18797)
!18848 = !DILocation(line: 151, column: 21, scope: !18797)
!18849 = !DILocation(line: 153, column: 25, scope: !18797)
!18850 = !DILocation(line: 154, column: 27, scope: !18797)
!18851 = !DILocation(line: 158, column: 9, scope: !18852)
!18852 = distinct !DILexicalBlock(scope: !18853, file: !2852, line: 158, column: 9)
!18853 = distinct !DILexicalBlock(scope: !18797, file: !2852, line: 158, column: 9)
!18854 = !DILocation(line: 158, column: 9, scope: !18853)
!18855 = !DILocation(line: 160, column: 45, scope: !18797)
!18856 = !DILocation(line: 160, column: 70, scope: !18797)
!18857 = !DILocation(line: 160, column: 24, scope: !18797)
!18858 = !DILocation(line: 160, column: 22, scope: !18797)
!18859 = !DILocation(line: 161, column: 14, scope: !18860)
!18860 = distinct !DILexicalBlock(scope: !18797, file: !2852, line: 161, column: 13)
!18861 = !DILocation(line: 161, column: 13, scope: !18797)
!18862 = !DILocation(line: 162, column: 13, scope: !18860)
!18863 = !DILocation(line: 164, column: 20, scope: !18797)
!18864 = !DILocation(line: 164, column: 9, scope: !18797)
!18865 = !DILocation(line: 166, column: 13, scope: !18866)
!18866 = distinct !DILexicalBlock(scope: !18797, file: !2852, line: 166, column: 13)
!18867 = !DILocation(line: 166, column: 13, scope: !18797)
!18868 = !DILocation(line: 167, column: 13, scope: !18866)
!18869 = distinct !{!18869, !18795, !18870}
!18870 = !DILocation(line: 168, column: 5, scope: !18745)
!18871 = !DILocation(line: 170, column: 5, scope: !18745)
!18872 = !DILocation(line: 171, column: 1, scope: !18745)
!18873 = distinct !DISubprogram(name: "death_queue_insert", scope: !2852, file: !2852, line: 56, type: !18381, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !74)
!18874 = !DILocalVariable(name: "dq", arg: 1, scope: !18873, file: !2852, line: 56, type: !18276)
!18875 = !DILocation(line: 56, column: 54, scope: !18873)
!18876 = !DILocalVariable(name: "new_node", arg: 2, scope: !18873, file: !2852, line: 57, type: !18009)
!18877 = !DILocation(line: 57, column: 24, scope: !18873)
!18878 = !DILocation(line: 59, column: 5, scope: !18873)
!18879 = !DILocation(line: 59, column: 15, scope: !18873)
!18880 = !DILocation(line: 59, column: 20, scope: !18873)
!18881 = !DILocation(line: 60, column: 22, scope: !18873)
!18882 = !DILocation(line: 60, column: 26, scope: !18873)
!18883 = !DILocation(line: 60, column: 31, scope: !18873)
!18884 = !DILocation(line: 60, column: 5, scope: !18873)
!18885 = !DILocation(line: 60, column: 15, scope: !18873)
!18886 = !DILocation(line: 60, column: 20, scope: !18873)
!18887 = !DILocalVariable(name: "prev", scope: !18873, file: !2852, line: 61, type: !18009)
!18888 = !DILocation(line: 61, column: 24, scope: !18873)
!18889 = !DILocation(line: 61, column: 55, scope: !18873)
!18890 = !DILocation(line: 61, column: 59, scope: !18873)
!18891 = !DILocation(line: 61, column: 63, scope: !18873)
!18892 = !DILocation(line: 61, column: 68, scope: !18873)
!18893 = !DILocation(line: 61, column: 31, scope: !18873)
!18894 = !DILocation(line: 62, column: 58, scope: !18873)
!18895 = !DILocation(line: 62, column: 62, scope: !18873)
!18896 = !DILocation(line: 62, column: 34, scope: !18873)
!18897 = !DILocation(line: 62, column: 21, scope: !18873)
!18898 = !DILocation(line: 62, column: 27, scope: !18873)
!18899 = !DILocation(line: 62, column: 32, scope: !18873)
!18900 = !DILocation(line: 62, column: 5, scope: !18873)
!18901 = !DILocation(line: 62, column: 9, scope: !18873)
!18902 = !DILocation(line: 62, column: 14, scope: !18873)
!18903 = !DILocation(line: 62, column: 19, scope: !18873)
!18904 = !DILocation(line: 63, column: 1, scope: !18873)
!18905 = distinct !DISubprogram(name: "death_queue_remove", scope: !2852, file: !2852, line: 65, type: !18381, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !74)
!18906 = !DILocalVariable(name: "dq", arg: 1, scope: !18905, file: !2852, line: 65, type: !18276)
!18907 = !DILocation(line: 65, column: 54, scope: !18905)
!18908 = !DILocalVariable(name: "node", arg: 2, scope: !18905, file: !2852, line: 66, type: !18009)
!18909 = !DILocation(line: 66, column: 24, scope: !18905)
!18910 = !DILocalVariable(name: "prev", scope: !18905, file: !2852, line: 68, type: !18009)
!18911 = !DILocation(line: 68, column: 24, scope: !18905)
!18912 = !DILocation(line: 68, column: 55, scope: !18905)
!18913 = !DILocation(line: 68, column: 59, scope: !18905)
!18914 = !DILocation(line: 68, column: 65, scope: !18905)
!18915 = !DILocation(line: 68, column: 31, scope: !18905)
!18916 = !DILocalVariable(name: "next", scope: !18905, file: !2852, line: 69, type: !18009)
!18917 = !DILocation(line: 69, column: 24, scope: !18905)
!18918 = !DILocation(line: 69, column: 55, scope: !18905)
!18919 = !DILocation(line: 69, column: 59, scope: !18905)
!18920 = !DILocation(line: 69, column: 65, scope: !18905)
!18921 = !DILocation(line: 69, column: 31, scope: !18905)
!18922 = !DILocation(line: 70, column: 18, scope: !18905)
!18923 = !DILocation(line: 70, column: 24, scope: !18905)
!18924 = !DILocation(line: 70, column: 5, scope: !18905)
!18925 = !DILocation(line: 70, column: 11, scope: !18905)
!18926 = !DILocation(line: 70, column: 16, scope: !18905)
!18927 = !DILocation(line: 71, column: 18, scope: !18905)
!18928 = !DILocation(line: 71, column: 24, scope: !18905)
!18929 = !DILocation(line: 71, column: 5, scope: !18905)
!18930 = !DILocation(line: 71, column: 11, scope: !18905)
!18931 = !DILocation(line: 71, column: 16, scope: !18905)
!18932 = !DILocation(line: 72, column: 1, scope: !18905)
!18933 = distinct !DISubprogram(name: "death_queue_move_to_last", scope: !2852, file: !2852, line: 79, type: !18381, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !74)
!18934 = !DILocalVariable(name: "dq", arg: 1, scope: !18933, file: !2852, line: 79, type: !18276)
!18935 = !DILocation(line: 79, column: 60, scope: !18933)
!18936 = !DILocalVariable(name: "conn", arg: 2, scope: !18933, file: !2852, line: 80, type: !18009)
!18937 = !DILocation(line: 80, column: 24, scope: !18933)
!18938 = !DILocation(line: 90, column: 25, scope: !18933)
!18939 = !DILocation(line: 90, column: 29, scope: !18933)
!18940 = !DILocation(line: 90, column: 36, scope: !18933)
!18941 = !DILocation(line: 90, column: 40, scope: !18933)
!18942 = !DILocation(line: 91, column: 26, scope: !18933)
!18943 = !DILocation(line: 91, column: 32, scope: !18933)
!18944 = !DILocation(line: 91, column: 38, scope: !18933)
!18945 = !DILocation(line: 91, column: 24, scope: !18933)
!18946 = !DILocation(line: 91, column: 23, scope: !18933)
!18947 = !DILocation(line: 90, column: 59, scope: !18933)
!18948 = !DILocation(line: 90, column: 34, scope: !18933)
!18949 = !DILocation(line: 90, column: 5, scope: !18933)
!18950 = !DILocation(line: 90, column: 11, scope: !18933)
!18951 = !DILocation(line: 90, column: 23, scope: !18933)
!18952 = !DILocation(line: 93, column: 24, scope: !18933)
!18953 = !DILocation(line: 93, column: 28, scope: !18933)
!18954 = !DILocation(line: 93, column: 5, scope: !18933)
!18955 = !DILocation(line: 94, column: 24, scope: !18933)
!18956 = !DILocation(line: 94, column: 28, scope: !18933)
!18957 = !DILocation(line: 94, column: 5, scope: !18933)
!18958 = !DILocation(line: 95, column: 1, scope: !18933)
!18959 = distinct !DISubprogram(name: "death_queue_idx_to_node", scope: !2852, file: !2852, line: 50, type: !18960, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !74)
!18960 = !DISubroutineType(types: !18961)
!18961 = !{!18009, !18276, !37}
!18962 = !DILocalVariable(name: "dq", arg: 1, scope: !18959, file: !2852, line: 50, type: !18276)
!18963 = !DILocation(line: 50, column: 80, scope: !18959)
!18964 = !DILocalVariable(name: "idx", arg: 2, scope: !18959, file: !2852, line: 51, type: !37)
!18965 = !DILocation(line: 51, column: 9, scope: !18959)
!18966 = !DILocation(line: 53, column: 13, scope: !18959)
!18967 = !DILocation(line: 53, column: 17, scope: !18959)
!18968 = !DILocation(line: 53, column: 12, scope: !18959)
!18969 = !DILocation(line: 53, column: 25, scope: !18959)
!18970 = !DILocation(line: 53, column: 29, scope: !18959)
!18971 = !DILocation(line: 53, column: 37, scope: !18959)
!18972 = !DILocation(line: 53, column: 41, scope: !18959)
!18973 = !DILocation(line: 53, column: 47, scope: !18959)
!18974 = !DILocation(line: 53, column: 5, scope: !18959)
!18975 = distinct !DISubprogram(name: "death_queue_node_to_idx", scope: !2852, file: !2852, line: 44, type: !18976, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2905, retainedNodes: !74)
!18976 = !DISubroutineType(types: !18977)
!18977 = !{!37, !18276, !18009}
!18978 = !DILocalVariable(name: "dq", arg: 1, scope: !18975, file: !2852, line: 44, type: !18276)
!18979 = !DILocation(line: 44, column: 65, scope: !18975)
!18980 = !DILocalVariable(name: "conn", arg: 2, scope: !18975, file: !2852, line: 45, type: !18009)
!18981 = !DILocation(line: 45, column: 24, scope: !18975)
!18982 = !DILocation(line: 47, column: 13, scope: !18975)
!18983 = !DILocation(line: 47, column: 22, scope: !18975)
!18984 = !DILocation(line: 47, column: 26, scope: !18975)
!18985 = !DILocation(line: 47, column: 18, scope: !18975)
!18986 = !DILocation(line: 47, column: 12, scope: !18975)
!18987 = !DILocation(line: 47, column: 56, scope: !18975)
!18988 = !DILocation(line: 47, column: 63, scope: !18975)
!18989 = !DILocation(line: 47, column: 67, scope: !18975)
!18990 = !DILocation(line: 47, column: 61, scope: !18975)
!18991 = !DILocation(line: 47, column: 39, scope: !18975)
!18992 = !DILocation(line: 47, column: 5, scope: !18975)
!18993 = distinct !DISubprogram(name: "lwan_thread_shutdown", scope: !2852, file: !2852, line: 425, type: !18069, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2905, retainedNodes: !74)
!18994 = !DILocalVariable(name: "l", arg: 1, scope: !18993, file: !2852, line: 425, type: !17983)
!18995 = !DILocation(line: 425, column: 30, scope: !18993)
!18996 = !DILocation(line: 427, column: 5, scope: !18993)
!18997 = !DILocalVariable(name: "i", scope: !18998, file: !2852, line: 429, type: !37)
!18998 = distinct !DILexicalBlock(scope: !18993, file: !2852, line: 429, column: 5)
!18999 = !DILocation(line: 429, column: 14, scope: !18998)
!19000 = !DILocation(line: 429, column: 18, scope: !18998)
!19001 = !DILocation(line: 429, column: 21, scope: !18998)
!19002 = !DILocation(line: 429, column: 28, scope: !18998)
!19003 = !DILocation(line: 429, column: 34, scope: !18998)
!19004 = !DILocation(line: 429, column: 10, scope: !18998)
!19005 = !DILocation(line: 429, column: 39, scope: !19006)
!19006 = distinct !DILexicalBlock(scope: !18998, file: !2852, line: 429, column: 5)
!19007 = !DILocation(line: 429, column: 41, scope: !19006)
!19008 = !DILocation(line: 429, column: 5, scope: !18998)
!19009 = !DILocalVariable(name: "t", scope: !19010, file: !2852, line: 430, type: !17978)
!19010 = distinct !DILexicalBlock(scope: !19006, file: !2852, line: 429, column: 52)
!19011 = !DILocation(line: 430, column: 24, scope: !19010)
!19012 = !DILocation(line: 430, column: 29, scope: !19010)
!19013 = !DILocation(line: 430, column: 32, scope: !19010)
!19014 = !DILocation(line: 430, column: 39, scope: !19010)
!19015 = !DILocation(line: 430, column: 47, scope: !19010)
!19016 = !DILocation(line: 433, column: 15, scope: !19010)
!19017 = !DILocation(line: 433, column: 18, scope: !19010)
!19018 = !DILocation(line: 433, column: 9, scope: !19010)
!19019 = !DILocation(line: 435, column: 15, scope: !19010)
!19020 = !DILocation(line: 435, column: 18, scope: !19010)
!19021 = !DILocation(line: 435, column: 9, scope: !19010)
!19022 = !DILocation(line: 436, column: 15, scope: !19010)
!19023 = !DILocation(line: 436, column: 18, scope: !19010)
!19024 = !DILocation(line: 436, column: 9, scope: !19010)
!19025 = !DILocation(line: 438, column: 28, scope: !19010)
!19026 = !DILocation(line: 438, column: 31, scope: !19010)
!19027 = !DILocation(line: 438, column: 38, scope: !19010)
!19028 = !DILocation(line: 438, column: 46, scope: !19010)
!19029 = !DILocation(line: 438, column: 49, scope: !19010)
!19030 = !DILocation(line: 438, column: 9, scope: !19010)
!19031 = !DILocation(line: 439, column: 5, scope: !19010)
!19032 = !DILocation(line: 429, column: 48, scope: !19006)
!19033 = !DILocation(line: 429, column: 5, scope: !19006)
!19034 = distinct !{!19034, !19008, !19035, !3203}
!19035 = !DILocation(line: 439, column: 5, scope: !18998)
!19036 = !DILocation(line: 441, column: 10, scope: !18993)
!19037 = !DILocation(line: 441, column: 13, scope: !18993)
!19038 = !DILocation(line: 441, column: 20, scope: !18993)
!19039 = !DILocation(line: 441, column: 5, scope: !18993)
!19040 = !DILocation(line: 442, column: 1, scope: !18993)
!19041 = distinct !DISubprogram(name: "lwan_trie_init", scope: !2959, file: !2959, line: 26, type: !19042, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3062, retainedNodes: !74)
!19042 = !DISubroutineType(types: !19043)
!19043 = !{!341, !19044, !403}
!19044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19045, size: 64)
!19045 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_t", file: !381, line: 25, baseType: !19046)
!19046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_t_", file: !381, line: 41, size: 128, elements: !19047)
!19047 = !{!19048, !19064}
!19048 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !19046, file: !381, line: 42, baseType: !19049, size: 64)
!19049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19050, size: 64)
!19050 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_node_t", file: !381, line: 26, baseType: !19051)
!19051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_node_t_", file: !381, line: 29, size: 640, elements: !19052)
!19052 = !{!19053, !19055, !19063}
!19053 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !19051, file: !381, line: 30, baseType: !19054, size: 512)
!19054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19049, size: 512, elements: !391)
!19055 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !19051, file: !381, line: 31, baseType: !19056, size: 64, offset: 512)
!19056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19057, size: 64)
!19057 = !DIDerivedType(tag: DW_TAG_typedef, name: "lwan_trie_leaf_t", file: !381, line: 27, baseType: !19058)
!19058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwan_trie_leaf_t_", file: !381, line: 35, size: 192, elements: !19059)
!19059 = !{!19060, !19061, !19062}
!19060 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !19058, file: !381, line: 36, baseType: !61, size: 64)
!19061 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !19058, file: !381, line: 37, baseType: !5, size: 64, offset: 64)
!19062 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !19058, file: !381, line: 38, baseType: !19056, size: 64, offset: 128)
!19063 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !19051, file: !381, line: 32, baseType: !37, size: 32, offset: 576)
!19064 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !19046, file: !381, line: 43, baseType: !403, size: 64, offset: 64)
!19065 = !DILocalVariable(name: "trie", arg: 1, scope: !19041, file: !2959, line: 26, type: !19044)
!19066 = !DILocation(line: 26, column: 29, scope: !19041)
!19067 = !DILocalVariable(name: "free_node", arg: 2, scope: !19041, file: !2959, line: 26, type: !403)
!19068 = !DILocation(line: 26, column: 42, scope: !19041)
!19069 = !DILocation(line: 28, column: 10, scope: !19070)
!19070 = distinct !DILexicalBlock(scope: !19041, file: !2959, line: 28, column: 9)
!19071 = !DILocation(line: 28, column: 9, scope: !19041)
!19072 = !DILocation(line: 29, column: 9, scope: !19070)
!19073 = !DILocation(line: 30, column: 5, scope: !19041)
!19074 = !DILocation(line: 30, column: 11, scope: !19041)
!19075 = !DILocation(line: 30, column: 16, scope: !19041)
!19076 = !DILocation(line: 31, column: 23, scope: !19041)
!19077 = !DILocation(line: 31, column: 5, scope: !19041)
!19078 = !DILocation(line: 31, column: 11, scope: !19041)
!19079 = !DILocation(line: 31, column: 21, scope: !19041)
!19080 = !DILocation(line: 32, column: 5, scope: !19041)
!19081 = !DILocation(line: 33, column: 1, scope: !19041)
!19082 = distinct !DISubprogram(name: "lwan_trie_add", scope: !2959, file: !2959, line: 65, type: !19083, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3062, retainedNodes: !74)
!19083 = !DISubroutineType(types: !19084)
!19084 = !{null, !19044, !480, !5}
!19085 = !DILocalVariable(name: "trie", arg: 1, scope: !19082, file: !2959, line: 65, type: !19044)
!19086 = !DILocation(line: 65, column: 28, scope: !19082)
!19087 = !DILocalVariable(name: "key", arg: 2, scope: !19082, file: !2959, line: 65, type: !480)
!19088 = !DILocation(line: 65, column: 46, scope: !19082)
!19089 = !DILocalVariable(name: "data", arg: 3, scope: !19082, file: !2959, line: 65, type: !5)
!19090 = !DILocation(line: 65, column: 57, scope: !19082)
!19091 = !DILocation(line: 67, column: 9, scope: !19092)
!19092 = distinct !DILexicalBlock(scope: !19082, file: !2959, line: 67, column: 9)
!19093 = !DILocation(line: 67, column: 9, scope: !19082)
!19094 = !DILocation(line: 68, column: 9, scope: !19092)
!19095 = !DILocalVariable(name: "knode", scope: !19082, file: !2959, line: 70, type: !19096)
!19096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19049, size: 64)
!19097 = !DILocation(line: 70, column: 24, scope: !19082)
!19098 = !DILocalVariable(name: "node", scope: !19082, file: !2959, line: 70, type: !19049)
!19099 = !DILocation(line: 70, column: 32, scope: !19082)
!19100 = !DILocalVariable(name: "orig_key", scope: !19082, file: !2959, line: 71, type: !480)
!19101 = !DILocation(line: 71, column: 17, scope: !19082)
!19102 = !DILocation(line: 71, column: 28, scope: !19082)
!19103 = !DILocation(line: 74, column: 19, scope: !19104)
!19104 = distinct !DILexicalBlock(scope: !19082, file: !2959, line: 74, column: 5)
!19105 = !DILocation(line: 74, column: 25, scope: !19104)
!19106 = !DILocation(line: 74, column: 16, scope: !19104)
!19107 = !DILocation(line: 74, column: 10, scope: !19104)
!19108 = !DILocation(line: 74, column: 32, scope: !19109)
!19109 = distinct !DILexicalBlock(scope: !19104, file: !2959, line: 74, column: 5)
!19110 = !DILocation(line: 74, column: 31, scope: !19109)
!19111 = !DILocation(line: 74, column: 5, scope: !19104)
!19112 = !DILocation(line: 75, column: 9, scope: !19109)
!19113 = !DILocation(line: 75, column: 9, scope: !19114)
!19114 = distinct !DILexicalBlock(scope: !19115, file: !2959, line: 75, column: 9)
!19115 = distinct !DILexicalBlock(scope: !19109, file: !2959, line: 75, column: 9)
!19116 = !DILocation(line: 75, column: 9, scope: !19115)
!19117 = !DILocation(line: 75, column: 9, scope: !19118)
!19118 = distinct !DILexicalBlock(scope: !19114, file: !2959, line: 75, column: 9)
!19119 = !DILocation(line: 75, column: 9, scope: !19120)
!19120 = distinct !DILexicalBlock(scope: !19118, file: !2959, line: 75, column: 9)
!19121 = !DILocation(line: 74, column: 46, scope: !19109)
!19122 = !DILocation(line: 74, column: 52, scope: !19109)
!19123 = !DILocation(line: 74, column: 67, scope: !19109)
!19124 = !DILocation(line: 74, column: 63, scope: !19109)
!19125 = !DILocation(line: 74, column: 70, scope: !19109)
!19126 = !DILocation(line: 74, column: 43, scope: !19109)
!19127 = !DILocation(line: 74, column: 5, scope: !19109)
!19128 = distinct !{!19128, !19111, !19129, !3203}
!19129 = !DILocation(line: 75, column: 9, scope: !19104)
!19130 = !DILocation(line: 78, column: 5, scope: !19082)
!19131 = !DILocation(line: 78, column: 5, scope: !19132)
!19132 = distinct !DILexicalBlock(scope: !19133, file: !2959, line: 78, column: 5)
!19133 = distinct !DILexicalBlock(scope: !19082, file: !2959, line: 78, column: 5)
!19134 = !DILocation(line: 78, column: 5, scope: !19133)
!19135 = !DILocation(line: 78, column: 5, scope: !19136)
!19136 = distinct !DILexicalBlock(scope: !19132, file: !2959, line: 78, column: 5)
!19137 = !DILocation(line: 78, column: 5, scope: !19138)
!19138 = distinct !DILexicalBlock(scope: !19136, file: !2959, line: 78, column: 5)
!19139 = !DILocalVariable(name: "leaf", scope: !19082, file: !2959, line: 80, type: !19056)
!19140 = !DILocation(line: 80, column: 23, scope: !19082)
!19141 = !DILocation(line: 80, column: 49, scope: !19082)
!19142 = !DILocation(line: 80, column: 55, scope: !19082)
!19143 = !DILocation(line: 80, column: 74, scope: !19082)
!19144 = !DILocation(line: 80, column: 80, scope: !19082)
!19145 = !DILocation(line: 80, column: 78, scope: !19082)
!19146 = !DILocalVariable(name: "node", arg: 1, scope: !19147, file: !2959, line: 36, type: !19049)
!19147 = distinct !DISubprogram(name: "find_leaf_with_key", scope: !2959, file: !2959, line: 36, type: !19148, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3062, retainedNodes: !74)
!19148 = !DISubroutineType(types: !19149)
!19149 = !{!19056, !19049, !480, !6}
!19150 = !DILocation(line: 36, column: 38, scope: !19147, inlinedAt: !19151)
!19151 = distinct !DILocation(line: 80, column: 30, scope: !19082)
!19152 = !DILocalVariable(name: "key", arg: 2, scope: !19147, file: !2959, line: 36, type: !480)
!19153 = !DILocation(line: 36, column: 56, scope: !19147, inlinedAt: !19151)
!19154 = !DILocalVariable(name: "len", arg: 3, scope: !19147, file: !2959, line: 36, type: !6)
!19155 = !DILocation(line: 36, column: 68, scope: !19147, inlinedAt: !19151)
!19156 = !DILocalVariable(name: "leaf", scope: !19147, file: !2959, line: 38, type: !19056)
!19157 = !DILocation(line: 38, column: 23, scope: !19147, inlinedAt: !19151)
!19158 = !DILocation(line: 38, column: 30, scope: !19147, inlinedAt: !19151)
!19159 = !DILocation(line: 38, column: 36, scope: !19147, inlinedAt: !19151)
!19160 = !DILocation(line: 40, column: 10, scope: !19161, inlinedAt: !19151)
!19161 = distinct !DILexicalBlock(scope: !19147, file: !2959, line: 40, column: 9)
!19162 = !DILocation(line: 40, column: 9, scope: !19147, inlinedAt: !19151)
!19163 = !DILocation(line: 41, column: 9, scope: !19161, inlinedAt: !19151)
!19164 = !DILocation(line: 43, column: 10, scope: !19165, inlinedAt: !19151)
!19165 = distinct !DILexicalBlock(scope: !19147, file: !2959, line: 43, column: 9)
!19166 = !DILocation(line: 43, column: 16, scope: !19165, inlinedAt: !19151)
!19167 = !DILocation(line: 43, column: 9, scope: !19147, inlinedAt: !19151)
!19168 = !DILocation(line: 44, column: 16, scope: !19165, inlinedAt: !19151)
!19169 = !DILocation(line: 44, column: 9, scope: !19165, inlinedAt: !19151)
!19170 = !DILocation(line: 46, column: 5, scope: !19147, inlinedAt: !19151)
!19171 = !DILocation(line: 46, column: 12, scope: !19172, inlinedAt: !19151)
!19172 = distinct !DILexicalBlock(scope: !19173, file: !2959, line: 46, column: 5)
!19173 = distinct !DILexicalBlock(scope: !19147, file: !2959, line: 46, column: 5)
!19174 = !DILocation(line: 46, column: 5, scope: !19173, inlinedAt: !19151)
!19175 = !DILocation(line: 47, column: 22, scope: !19176, inlinedAt: !19151)
!19176 = distinct !DILexicalBlock(scope: !19177, file: !2959, line: 47, column: 13)
!19177 = distinct !DILexicalBlock(scope: !19172, file: !2959, line: 46, column: 37)
!19178 = !DILocation(line: 47, column: 28, scope: !19176, inlinedAt: !19151)
!19179 = !DILocation(line: 47, column: 33, scope: !19176, inlinedAt: !19151)
!19180 = !DILocation(line: 47, column: 38, scope: !19176, inlinedAt: !19151)
!19181 = !DILocation(line: 47, column: 42, scope: !19176, inlinedAt: !19151)
!19182 = !DILocation(line: 47, column: 14, scope: !19176, inlinedAt: !19151)
!19183 = !DILocation(line: 47, column: 13, scope: !19177, inlinedAt: !19151)
!19184 = !DILocation(line: 48, column: 20, scope: !19176, inlinedAt: !19151)
!19185 = !DILocation(line: 48, column: 13, scope: !19176, inlinedAt: !19151)
!19186 = !DILocation(line: 46, column: 25, scope: !19172, inlinedAt: !19151)
!19187 = !DILocation(line: 46, column: 31, scope: !19172, inlinedAt: !19151)
!19188 = !DILocation(line: 46, column: 23, scope: !19172, inlinedAt: !19151)
!19189 = !DILocation(line: 46, column: 5, scope: !19172, inlinedAt: !19151)
!19190 = distinct !{!19190, !19174, !19191, !3203}
!19191 = !DILocation(line: 49, column: 5, scope: !19173, inlinedAt: !19151)
!19192 = !DILocation(line: 51, column: 5, scope: !19147, inlinedAt: !19151)
!19193 = !DILocation(line: 52, column: 1, scope: !19147, inlinedAt: !19151)
!19194 = !DILocalVariable(name: "had_key", scope: !19082, file: !2959, line: 81, type: !341)
!19195 = !DILocation(line: 81, column: 10, scope: !19082)
!19196 = !DILocation(line: 81, column: 20, scope: !19082)
!19197 = !DILocation(line: 82, column: 10, scope: !19198)
!19198 = distinct !DILexicalBlock(scope: !19082, file: !2959, line: 82, column: 9)
!19199 = !DILocation(line: 82, column: 9, scope: !19082)
!19200 = !DILocation(line: 83, column: 16, scope: !19201)
!19201 = distinct !DILexicalBlock(scope: !19198, file: !2959, line: 82, column: 16)
!19202 = !DILocation(line: 83, column: 14, scope: !19201)
!19203 = !DILocation(line: 84, column: 14, scope: !19204)
!19204 = distinct !DILexicalBlock(scope: !19201, file: !2959, line: 84, column: 13)
!19205 = !DILocation(line: 84, column: 13, scope: !19201)
!19206 = !DILocation(line: 85, column: 13, scope: !19204)
!19207 = !DILocation(line: 86, column: 5, scope: !19201)
!19208 = !DILocation(line: 88, column: 18, scope: !19082)
!19209 = !DILocation(line: 88, column: 5, scope: !19082)
!19210 = !DILocation(line: 88, column: 11, scope: !19082)
!19211 = !DILocation(line: 88, column: 16, scope: !19082)
!19212 = !DILocation(line: 89, column: 10, scope: !19213)
!19213 = distinct !DILexicalBlock(scope: !19082, file: !2959, line: 89, column: 9)
!19214 = !DILocation(line: 89, column: 9, scope: !19082)
!19215 = !DILocation(line: 90, column: 28, scope: !19216)
!19216 = distinct !DILexicalBlock(scope: !19213, file: !2959, line: 89, column: 19)
!19217 = !DILocation(line: 90, column: 21, scope: !19216)
!19218 = !DILocation(line: 90, column: 9, scope: !19216)
!19219 = !DILocation(line: 90, column: 15, scope: !19216)
!19220 = !DILocation(line: 90, column: 19, scope: !19216)
!19221 = !DILocation(line: 91, column: 22, scope: !19216)
!19222 = !DILocation(line: 91, column: 28, scope: !19216)
!19223 = !DILocation(line: 91, column: 9, scope: !19216)
!19224 = !DILocation(line: 91, column: 15, scope: !19216)
!19225 = !DILocation(line: 91, column: 20, scope: !19216)
!19226 = !DILocation(line: 92, column: 22, scope: !19216)
!19227 = !DILocation(line: 92, column: 9, scope: !19216)
!19228 = !DILocation(line: 92, column: 15, scope: !19216)
!19229 = !DILocation(line: 92, column: 20, scope: !19216)
!19230 = !DILocation(line: 93, column: 5, scope: !19216)
!19231 = !DILocation(line: 94, column: 5, scope: !19082)
!19232 = !DILabel(scope: !19082, name: "oom", file: !2959, line: 96)
!19233 = !DILocation(line: 96, column: 1, scope: !19082)
!19234 = !DILocation(line: 97, column: 5, scope: !19082)
!19235 = !DILocation(line: 98, column: 1, scope: !19082)
!19236 = distinct !DISubprogram(name: "lwan_trie_lookup_full", scope: !2959, file: !2959, line: 123, type: !19237, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3062, retainedNodes: !74)
!19237 = !DISubroutineType(types: !19238)
!19238 = !{!5, !19044, !480, !341}
!19239 = !DILocalVariable(name: "trie", arg: 1, scope: !19236, file: !2959, line: 123, type: !19044)
!19240 = !DILocation(line: 123, column: 36, scope: !19236)
!19241 = !DILocalVariable(name: "key", arg: 2, scope: !19236, file: !2959, line: 123, type: !480)
!19242 = !DILocation(line: 123, column: 54, scope: !19236)
!19243 = !DILocalVariable(name: "prefix", arg: 3, scope: !19236, file: !2959, line: 123, type: !341)
!19244 = !DILocation(line: 123, column: 64, scope: !19236)
!19245 = !DILocation(line: 125, column: 9, scope: !19246)
!19246 = distinct !DILexicalBlock(scope: !19236, file: !2959, line: 125, column: 9)
!19247 = !DILocation(line: 125, column: 9, scope: !19236)
!19248 = !DILocation(line: 126, column: 9, scope: !19246)
!19249 = !DILocalVariable(name: "prefix_len", scope: !19236, file: !2959, line: 128, type: !6)
!19250 = !DILocation(line: 128, column: 12, scope: !19236)
!19251 = !DILocalVariable(name: "node", scope: !19236, file: !2959, line: 129, type: !19049)
!19252 = !DILocation(line: 129, column: 23, scope: !19236)
!19253 = !DILocation(line: 129, column: 42, scope: !19236)
!19254 = !DILocation(line: 129, column: 48, scope: !19236)
!19255 = !DILocation(line: 129, column: 54, scope: !19236)
!19256 = !DILocation(line: 129, column: 59, scope: !19236)
!19257 = !DILocalVariable(name: "root", arg: 1, scope: !19258, file: !2959, line: 103, type: !19049)
!19258 = distinct !DISubprogram(name: "lookup_node", scope: !2959, file: !2959, line: 103, type: !19259, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3062, retainedNodes: !74)
!19259 = !DISubroutineType(types: !19260)
!19260 = !{!19049, !19049, !480, !341, !62}
!19261 = !DILocation(line: 103, column: 31, scope: !19258, inlinedAt: !19262)
!19262 = distinct !DILocation(line: 129, column: 30, scope: !19236)
!19263 = !DILocalVariable(name: "key", arg: 2, scope: !19258, file: !2959, line: 103, type: !480)
!19264 = !DILocation(line: 103, column: 49, scope: !19258, inlinedAt: !19262)
!19265 = !DILocalVariable(name: "prefix", arg: 3, scope: !19258, file: !2959, line: 103, type: !341)
!19266 = !DILocation(line: 103, column: 59, scope: !19258, inlinedAt: !19262)
!19267 = !DILocalVariable(name: "prefix_len", arg: 4, scope: !19258, file: !2959, line: 103, type: !62)
!19268 = !DILocation(line: 103, column: 75, scope: !19258, inlinedAt: !19262)
!19269 = !DILocalVariable(name: "node", scope: !19258, file: !2959, line: 105, type: !19049)
!19270 = !DILocation(line: 105, column: 23, scope: !19258, inlinedAt: !19262)
!19271 = !DILocalVariable(name: "previous_node", scope: !19258, file: !2959, line: 105, type: !19049)
!19272 = !DILocation(line: 105, column: 30, scope: !19258, inlinedAt: !19262)
!19273 = !DILocalVariable(name: "orig_key", scope: !19258, file: !2959, line: 106, type: !480)
!19274 = !DILocation(line: 106, column: 17, scope: !19258, inlinedAt: !19262)
!19275 = !DILocation(line: 106, column: 28, scope: !19258, inlinedAt: !19262)
!19276 = !DILocation(line: 108, column: 17, scope: !19277, inlinedAt: !19262)
!19277 = distinct !DILexicalBlock(scope: !19258, file: !2959, line: 108, column: 5)
!19278 = !DILocation(line: 108, column: 15, scope: !19277, inlinedAt: !19262)
!19279 = !DILocation(line: 108, column: 10, scope: !19277, inlinedAt: !19262)
!19280 = !DILocation(line: 108, column: 23, scope: !19281, inlinedAt: !19262)
!19281 = distinct !DILexicalBlock(scope: !19277, file: !2959, line: 108, column: 5)
!19282 = !DILocation(line: 108, column: 28, scope: !19281, inlinedAt: !19262)
!19283 = !DILocation(line: 108, column: 32, scope: !19281, inlinedAt: !19262)
!19284 = !DILocation(line: 108, column: 31, scope: !19281, inlinedAt: !19262)
!19285 = !DILocation(line: 0, scope: !19281, inlinedAt: !19262)
!19286 = !DILocation(line: 108, column: 5, scope: !19277, inlinedAt: !19262)
!19287 = !DILocation(line: 109, column: 13, scope: !19288, inlinedAt: !19262)
!19288 = distinct !DILexicalBlock(scope: !19289, file: !2959, line: 109, column: 13)
!19289 = distinct !DILexicalBlock(scope: !19281, file: !2959, line: 108, column: 75)
!19290 = !DILocation(line: 109, column: 19, scope: !19288, inlinedAt: !19262)
!19291 = !DILocation(line: 109, column: 13, scope: !19289, inlinedAt: !19262)
!19292 = !DILocation(line: 110, column: 29, scope: !19288, inlinedAt: !19262)
!19293 = !DILocation(line: 110, column: 27, scope: !19288, inlinedAt: !19262)
!19294 = !DILocation(line: 110, column: 13, scope: !19288, inlinedAt: !19262)
!19295 = !DILocation(line: 108, column: 44, scope: !19281, inlinedAt: !19262)
!19296 = !DILocation(line: 108, column: 65, scope: !19281, inlinedAt: !19262)
!19297 = !DILocation(line: 108, column: 61, scope: !19281, inlinedAt: !19262)
!19298 = !DILocation(line: 108, column: 68, scope: !19281, inlinedAt: !19262)
!19299 = !DILocation(line: 108, column: 42, scope: !19281, inlinedAt: !19262)
!19300 = !DILocation(line: 108, column: 5, scope: !19281, inlinedAt: !19262)
!19301 = distinct !{!19301, !19286, !19302, !3203}
!19302 = !DILocation(line: 111, column: 5, scope: !19277, inlinedAt: !19262)
!19303 = !DILocation(line: 113, column: 28, scope: !19258, inlinedAt: !19262)
!19304 = !DILocation(line: 113, column: 34, scope: !19258, inlinedAt: !19262)
!19305 = !DILocation(line: 113, column: 32, scope: !19258, inlinedAt: !19262)
!19306 = !DILocation(line: 113, column: 6, scope: !19258, inlinedAt: !19262)
!19307 = !DILocation(line: 113, column: 17, scope: !19258, inlinedAt: !19262)
!19308 = !DILocation(line: 114, column: 9, scope: !19309, inlinedAt: !19262)
!19309 = distinct !DILexicalBlock(scope: !19258, file: !2959, line: 114, column: 9)
!19310 = !DILocation(line: 114, column: 14, scope: !19309, inlinedAt: !19262)
!19311 = !DILocation(line: 114, column: 17, scope: !19309, inlinedAt: !19262)
!19312 = !DILocation(line: 114, column: 23, scope: !19309, inlinedAt: !19262)
!19313 = !DILocation(line: 114, column: 9, scope: !19258, inlinedAt: !19262)
!19314 = !DILocation(line: 115, column: 16, scope: !19309, inlinedAt: !19262)
!19315 = !DILocation(line: 115, column: 9, scope: !19309, inlinedAt: !19262)
!19316 = !DILocation(line: 116, column: 9, scope: !19317, inlinedAt: !19262)
!19317 = distinct !DILexicalBlock(scope: !19258, file: !2959, line: 116, column: 9)
!19318 = !DILocation(line: 116, column: 16, scope: !19317, inlinedAt: !19262)
!19319 = !DILocation(line: 116, column: 19, scope: !19317, inlinedAt: !19262)
!19320 = !DILocation(line: 116, column: 9, scope: !19258, inlinedAt: !19262)
!19321 = !DILocation(line: 117, column: 16, scope: !19317, inlinedAt: !19262)
!19322 = !DILocation(line: 117, column: 9, scope: !19317, inlinedAt: !19262)
!19323 = !DILocation(line: 118, column: 5, scope: !19258, inlinedAt: !19262)
!19324 = !DILocation(line: 119, column: 1, scope: !19258, inlinedAt: !19262)
!19325 = !DILocation(line: 130, column: 10, scope: !19326)
!19326 = distinct !DILexicalBlock(scope: !19236, file: !2959, line: 130, column: 9)
!19327 = !DILocation(line: 130, column: 9, scope: !19236)
!19328 = !DILocation(line: 131, column: 9, scope: !19326)
!19329 = !DILocalVariable(name: "leaf", scope: !19236, file: !2959, line: 132, type: !19056)
!19330 = !DILocation(line: 132, column: 23, scope: !19236)
!19331 = !DILocation(line: 132, column: 49, scope: !19236)
!19332 = !DILocation(line: 132, column: 55, scope: !19236)
!19333 = !DILocation(line: 132, column: 60, scope: !19236)
!19334 = !DILocation(line: 36, column: 38, scope: !19147, inlinedAt: !19335)
!19335 = distinct !DILocation(line: 132, column: 30, scope: !19236)
!19336 = !DILocation(line: 36, column: 56, scope: !19147, inlinedAt: !19335)
!19337 = !DILocation(line: 36, column: 68, scope: !19147, inlinedAt: !19335)
!19338 = !DILocation(line: 38, column: 23, scope: !19147, inlinedAt: !19335)
!19339 = !DILocation(line: 38, column: 30, scope: !19147, inlinedAt: !19335)
!19340 = !DILocation(line: 38, column: 36, scope: !19147, inlinedAt: !19335)
!19341 = !DILocation(line: 40, column: 10, scope: !19161, inlinedAt: !19335)
!19342 = !DILocation(line: 40, column: 9, scope: !19147, inlinedAt: !19335)
!19343 = !DILocation(line: 41, column: 9, scope: !19161, inlinedAt: !19335)
!19344 = !DILocation(line: 43, column: 10, scope: !19165, inlinedAt: !19335)
!19345 = !DILocation(line: 43, column: 16, scope: !19165, inlinedAt: !19335)
!19346 = !DILocation(line: 43, column: 9, scope: !19147, inlinedAt: !19335)
!19347 = !DILocation(line: 44, column: 16, scope: !19165, inlinedAt: !19335)
!19348 = !DILocation(line: 44, column: 9, scope: !19165, inlinedAt: !19335)
!19349 = !DILocation(line: 46, column: 5, scope: !19147, inlinedAt: !19335)
!19350 = !DILocation(line: 46, column: 12, scope: !19172, inlinedAt: !19335)
!19351 = !DILocation(line: 46, column: 5, scope: !19173, inlinedAt: !19335)
!19352 = !DILocation(line: 47, column: 22, scope: !19176, inlinedAt: !19335)
!19353 = !DILocation(line: 47, column: 28, scope: !19176, inlinedAt: !19335)
!19354 = !DILocation(line: 47, column: 33, scope: !19176, inlinedAt: !19335)
!19355 = !DILocation(line: 47, column: 38, scope: !19176, inlinedAt: !19335)
!19356 = !DILocation(line: 47, column: 42, scope: !19176, inlinedAt: !19335)
!19357 = !DILocation(line: 47, column: 14, scope: !19176, inlinedAt: !19335)
!19358 = !DILocation(line: 47, column: 13, scope: !19177, inlinedAt: !19335)
!19359 = !DILocation(line: 48, column: 20, scope: !19176, inlinedAt: !19335)
!19360 = !DILocation(line: 48, column: 13, scope: !19176, inlinedAt: !19335)
!19361 = !DILocation(line: 46, column: 25, scope: !19172, inlinedAt: !19335)
!19362 = !DILocation(line: 46, column: 31, scope: !19172, inlinedAt: !19335)
!19363 = !DILocation(line: 46, column: 23, scope: !19172, inlinedAt: !19335)
!19364 = !DILocation(line: 46, column: 5, scope: !19172, inlinedAt: !19335)
!19365 = distinct !{!19365, !19351, !19366, !3203}
!19366 = !DILocation(line: 49, column: 5, scope: !19173, inlinedAt: !19335)
!19367 = !DILocation(line: 51, column: 5, scope: !19147, inlinedAt: !19335)
!19368 = !DILocation(line: 52, column: 1, scope: !19147, inlinedAt: !19335)
!19369 = !DILocation(line: 133, column: 12, scope: !19236)
!19370 = !DILocation(line: 133, column: 19, scope: !19236)
!19371 = !DILocation(line: 133, column: 25, scope: !19236)
!19372 = !DILocation(line: 133, column: 5, scope: !19236)
!19373 = !DILocation(line: 134, column: 1, scope: !19236)
!19374 = distinct !DISubprogram(name: "lwan_trie_lookup_prefix", scope: !2959, file: !2959, line: 137, type: !19375, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3062, retainedNodes: !74)
!19375 = !DISubroutineType(types: !19376)
!19376 = !{!5, !19044, !480}
!19377 = !DILocalVariable(name: "trie", arg: 1, scope: !19374, file: !2959, line: 137, type: !19044)
!19378 = !DILocation(line: 137, column: 38, scope: !19374)
!19379 = !DILocalVariable(name: "key", arg: 2, scope: !19374, file: !2959, line: 137, type: !480)
!19380 = !DILocation(line: 137, column: 56, scope: !19374)
!19381 = !DILocation(line: 139, column: 34, scope: !19374)
!19382 = !DILocation(line: 139, column: 40, scope: !19374)
!19383 = !DILocation(line: 123, column: 36, scope: !19236, inlinedAt: !19384)
!19384 = distinct !DILocation(line: 139, column: 12, scope: !19374)
!19385 = !DILocation(line: 123, column: 54, scope: !19236, inlinedAt: !19384)
!19386 = !DILocation(line: 123, column: 64, scope: !19236, inlinedAt: !19384)
!19387 = !DILocation(line: 125, column: 9, scope: !19246, inlinedAt: !19384)
!19388 = !DILocation(line: 125, column: 9, scope: !19236, inlinedAt: !19384)
!19389 = !DILocation(line: 126, column: 9, scope: !19246, inlinedAt: !19384)
!19390 = !DILocation(line: 128, column: 12, scope: !19236, inlinedAt: !19384)
!19391 = !DILocation(line: 129, column: 23, scope: !19236, inlinedAt: !19384)
!19392 = !DILocation(line: 129, column: 42, scope: !19236, inlinedAt: !19384)
!19393 = !DILocation(line: 129, column: 48, scope: !19236, inlinedAt: !19384)
!19394 = !DILocation(line: 129, column: 54, scope: !19236, inlinedAt: !19384)
!19395 = !DILocation(line: 129, column: 59, scope: !19236, inlinedAt: !19384)
!19396 = !DILocation(line: 103, column: 31, scope: !19258, inlinedAt: !19397)
!19397 = distinct !DILocation(line: 129, column: 30, scope: !19236, inlinedAt: !19384)
!19398 = !DILocation(line: 103, column: 49, scope: !19258, inlinedAt: !19397)
!19399 = !DILocation(line: 103, column: 59, scope: !19258, inlinedAt: !19397)
!19400 = !DILocation(line: 103, column: 75, scope: !19258, inlinedAt: !19397)
!19401 = !DILocation(line: 105, column: 23, scope: !19258, inlinedAt: !19397)
!19402 = !DILocation(line: 105, column: 30, scope: !19258, inlinedAt: !19397)
!19403 = !DILocation(line: 106, column: 17, scope: !19258, inlinedAt: !19397)
!19404 = !DILocation(line: 106, column: 28, scope: !19258, inlinedAt: !19397)
!19405 = !DILocation(line: 108, column: 17, scope: !19277, inlinedAt: !19397)
!19406 = !DILocation(line: 108, column: 15, scope: !19277, inlinedAt: !19397)
!19407 = !DILocation(line: 108, column: 10, scope: !19277, inlinedAt: !19397)
!19408 = !DILocation(line: 108, column: 23, scope: !19281, inlinedAt: !19397)
!19409 = !DILocation(line: 108, column: 28, scope: !19281, inlinedAt: !19397)
!19410 = !DILocation(line: 108, column: 32, scope: !19281, inlinedAt: !19397)
!19411 = !DILocation(line: 108, column: 31, scope: !19281, inlinedAt: !19397)
!19412 = !DILocation(line: 0, scope: !19281, inlinedAt: !19397)
!19413 = !DILocation(line: 108, column: 5, scope: !19277, inlinedAt: !19397)
!19414 = !DILocation(line: 109, column: 13, scope: !19288, inlinedAt: !19397)
!19415 = !DILocation(line: 109, column: 19, scope: !19288, inlinedAt: !19397)
!19416 = !DILocation(line: 109, column: 13, scope: !19289, inlinedAt: !19397)
!19417 = !DILocation(line: 110, column: 29, scope: !19288, inlinedAt: !19397)
!19418 = !DILocation(line: 110, column: 27, scope: !19288, inlinedAt: !19397)
!19419 = !DILocation(line: 110, column: 13, scope: !19288, inlinedAt: !19397)
!19420 = !DILocation(line: 108, column: 44, scope: !19281, inlinedAt: !19397)
!19421 = !DILocation(line: 108, column: 65, scope: !19281, inlinedAt: !19397)
!19422 = !DILocation(line: 108, column: 61, scope: !19281, inlinedAt: !19397)
!19423 = !DILocation(line: 108, column: 68, scope: !19281, inlinedAt: !19397)
!19424 = !DILocation(line: 108, column: 42, scope: !19281, inlinedAt: !19397)
!19425 = !DILocation(line: 108, column: 5, scope: !19281, inlinedAt: !19397)
!19426 = distinct !{!19426, !19413, !19427, !3203}
!19427 = !DILocation(line: 111, column: 5, scope: !19277, inlinedAt: !19397)
!19428 = !DILocation(line: 113, column: 28, scope: !19258, inlinedAt: !19397)
!19429 = !DILocation(line: 113, column: 34, scope: !19258, inlinedAt: !19397)
!19430 = !DILocation(line: 113, column: 32, scope: !19258, inlinedAt: !19397)
!19431 = !DILocation(line: 113, column: 6, scope: !19258, inlinedAt: !19397)
!19432 = !DILocation(line: 113, column: 17, scope: !19258, inlinedAt: !19397)
!19433 = !DILocation(line: 114, column: 9, scope: !19309, inlinedAt: !19397)
!19434 = !DILocation(line: 114, column: 14, scope: !19309, inlinedAt: !19397)
!19435 = !DILocation(line: 114, column: 17, scope: !19309, inlinedAt: !19397)
!19436 = !DILocation(line: 114, column: 23, scope: !19309, inlinedAt: !19397)
!19437 = !DILocation(line: 114, column: 9, scope: !19258, inlinedAt: !19397)
!19438 = !DILocation(line: 115, column: 16, scope: !19309, inlinedAt: !19397)
!19439 = !DILocation(line: 115, column: 9, scope: !19309, inlinedAt: !19397)
!19440 = !DILocation(line: 116, column: 9, scope: !19317, inlinedAt: !19397)
!19441 = !DILocation(line: 116, column: 16, scope: !19317, inlinedAt: !19397)
!19442 = !DILocation(line: 116, column: 19, scope: !19317, inlinedAt: !19397)
!19443 = !DILocation(line: 116, column: 9, scope: !19258, inlinedAt: !19397)
!19444 = !DILocation(line: 117, column: 16, scope: !19317, inlinedAt: !19397)
!19445 = !DILocation(line: 117, column: 9, scope: !19317, inlinedAt: !19397)
!19446 = !DILocation(line: 118, column: 5, scope: !19258, inlinedAt: !19397)
!19447 = !DILocation(line: 119, column: 1, scope: !19258, inlinedAt: !19397)
!19448 = !DILocation(line: 130, column: 10, scope: !19326, inlinedAt: !19384)
!19449 = !DILocation(line: 130, column: 9, scope: !19236, inlinedAt: !19384)
!19450 = !DILocation(line: 131, column: 9, scope: !19326, inlinedAt: !19384)
!19451 = !DILocation(line: 132, column: 23, scope: !19236, inlinedAt: !19384)
!19452 = !DILocation(line: 132, column: 49, scope: !19236, inlinedAt: !19384)
!19453 = !DILocation(line: 132, column: 55, scope: !19236, inlinedAt: !19384)
!19454 = !DILocation(line: 132, column: 60, scope: !19236, inlinedAt: !19384)
!19455 = !DILocation(line: 36, column: 38, scope: !19147, inlinedAt: !19456)
!19456 = distinct !DILocation(line: 132, column: 30, scope: !19236, inlinedAt: !19384)
!19457 = !DILocation(line: 36, column: 56, scope: !19147, inlinedAt: !19456)
!19458 = !DILocation(line: 36, column: 68, scope: !19147, inlinedAt: !19456)
!19459 = !DILocation(line: 38, column: 23, scope: !19147, inlinedAt: !19456)
!19460 = !DILocation(line: 38, column: 30, scope: !19147, inlinedAt: !19456)
!19461 = !DILocation(line: 38, column: 36, scope: !19147, inlinedAt: !19456)
!19462 = !DILocation(line: 40, column: 10, scope: !19161, inlinedAt: !19456)
!19463 = !DILocation(line: 40, column: 9, scope: !19147, inlinedAt: !19456)
!19464 = !DILocation(line: 41, column: 9, scope: !19161, inlinedAt: !19456)
!19465 = !DILocation(line: 43, column: 10, scope: !19165, inlinedAt: !19456)
!19466 = !DILocation(line: 43, column: 16, scope: !19165, inlinedAt: !19456)
!19467 = !DILocation(line: 43, column: 9, scope: !19147, inlinedAt: !19456)
!19468 = !DILocation(line: 44, column: 16, scope: !19165, inlinedAt: !19456)
!19469 = !DILocation(line: 44, column: 9, scope: !19165, inlinedAt: !19456)
!19470 = !DILocation(line: 46, column: 5, scope: !19147, inlinedAt: !19456)
!19471 = !DILocation(line: 46, column: 12, scope: !19172, inlinedAt: !19456)
!19472 = !DILocation(line: 46, column: 5, scope: !19173, inlinedAt: !19456)
!19473 = !DILocation(line: 47, column: 22, scope: !19176, inlinedAt: !19456)
!19474 = !DILocation(line: 47, column: 28, scope: !19176, inlinedAt: !19456)
!19475 = !DILocation(line: 47, column: 33, scope: !19176, inlinedAt: !19456)
!19476 = !DILocation(line: 47, column: 38, scope: !19176, inlinedAt: !19456)
!19477 = !DILocation(line: 47, column: 42, scope: !19176, inlinedAt: !19456)
!19478 = !DILocation(line: 47, column: 14, scope: !19176, inlinedAt: !19456)
!19479 = !DILocation(line: 47, column: 13, scope: !19177, inlinedAt: !19456)
!19480 = !DILocation(line: 48, column: 20, scope: !19176, inlinedAt: !19456)
!19481 = !DILocation(line: 48, column: 13, scope: !19176, inlinedAt: !19456)
!19482 = !DILocation(line: 46, column: 25, scope: !19172, inlinedAt: !19456)
!19483 = !DILocation(line: 46, column: 31, scope: !19172, inlinedAt: !19456)
!19484 = !DILocation(line: 46, column: 23, scope: !19172, inlinedAt: !19456)
!19485 = !DILocation(line: 46, column: 5, scope: !19172, inlinedAt: !19456)
!19486 = distinct !{!19486, !19472, !19487, !3203}
!19487 = !DILocation(line: 49, column: 5, scope: !19173, inlinedAt: !19456)
!19488 = !DILocation(line: 51, column: 5, scope: !19147, inlinedAt: !19456)
!19489 = !DILocation(line: 52, column: 1, scope: !19147, inlinedAt: !19456)
!19490 = !DILocation(line: 133, column: 12, scope: !19236, inlinedAt: !19384)
!19491 = !DILocation(line: 133, column: 19, scope: !19236, inlinedAt: !19384)
!19492 = !DILocation(line: 133, column: 25, scope: !19236, inlinedAt: !19384)
!19493 = !DILocation(line: 133, column: 5, scope: !19236, inlinedAt: !19384)
!19494 = !DILocation(line: 134, column: 1, scope: !19236, inlinedAt: !19384)
!19495 = !DILocation(line: 139, column: 5, scope: !19374)
!19496 = distinct !DISubprogram(name: "lwan_trie_lookup_exact", scope: !2959, file: !2959, line: 143, type: !19375, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3062, retainedNodes: !74)
!19497 = !DILocalVariable(name: "trie", arg: 1, scope: !19496, file: !2959, line: 143, type: !19044)
!19498 = !DILocation(line: 143, column: 37, scope: !19496)
!19499 = !DILocalVariable(name: "key", arg: 2, scope: !19496, file: !2959, line: 143, type: !480)
!19500 = !DILocation(line: 143, column: 55, scope: !19496)
!19501 = !DILocation(line: 145, column: 34, scope: !19496)
!19502 = !DILocation(line: 145, column: 40, scope: !19496)
!19503 = !DILocation(line: 123, column: 36, scope: !19236, inlinedAt: !19504)
!19504 = distinct !DILocation(line: 145, column: 12, scope: !19496)
!19505 = !DILocation(line: 123, column: 54, scope: !19236, inlinedAt: !19504)
!19506 = !DILocation(line: 123, column: 64, scope: !19236, inlinedAt: !19504)
!19507 = !DILocation(line: 125, column: 9, scope: !19246, inlinedAt: !19504)
!19508 = !DILocation(line: 125, column: 9, scope: !19236, inlinedAt: !19504)
!19509 = !DILocation(line: 126, column: 9, scope: !19246, inlinedAt: !19504)
!19510 = !DILocation(line: 128, column: 12, scope: !19236, inlinedAt: !19504)
!19511 = !DILocation(line: 129, column: 23, scope: !19236, inlinedAt: !19504)
!19512 = !DILocation(line: 129, column: 42, scope: !19236, inlinedAt: !19504)
!19513 = !DILocation(line: 129, column: 48, scope: !19236, inlinedAt: !19504)
!19514 = !DILocation(line: 129, column: 54, scope: !19236, inlinedAt: !19504)
!19515 = !DILocation(line: 129, column: 59, scope: !19236, inlinedAt: !19504)
!19516 = !DILocation(line: 103, column: 31, scope: !19258, inlinedAt: !19517)
!19517 = distinct !DILocation(line: 129, column: 30, scope: !19236, inlinedAt: !19504)
!19518 = !DILocation(line: 103, column: 49, scope: !19258, inlinedAt: !19517)
!19519 = !DILocation(line: 103, column: 59, scope: !19258, inlinedAt: !19517)
!19520 = !DILocation(line: 103, column: 75, scope: !19258, inlinedAt: !19517)
!19521 = !DILocation(line: 105, column: 23, scope: !19258, inlinedAt: !19517)
!19522 = !DILocation(line: 105, column: 30, scope: !19258, inlinedAt: !19517)
!19523 = !DILocation(line: 106, column: 17, scope: !19258, inlinedAt: !19517)
!19524 = !DILocation(line: 106, column: 28, scope: !19258, inlinedAt: !19517)
!19525 = !DILocation(line: 108, column: 17, scope: !19277, inlinedAt: !19517)
!19526 = !DILocation(line: 108, column: 15, scope: !19277, inlinedAt: !19517)
!19527 = !DILocation(line: 108, column: 10, scope: !19277, inlinedAt: !19517)
!19528 = !DILocation(line: 108, column: 23, scope: !19281, inlinedAt: !19517)
!19529 = !DILocation(line: 108, column: 28, scope: !19281, inlinedAt: !19517)
!19530 = !DILocation(line: 108, column: 32, scope: !19281, inlinedAt: !19517)
!19531 = !DILocation(line: 108, column: 31, scope: !19281, inlinedAt: !19517)
!19532 = !DILocation(line: 0, scope: !19281, inlinedAt: !19517)
!19533 = !DILocation(line: 108, column: 5, scope: !19277, inlinedAt: !19517)
!19534 = !DILocation(line: 109, column: 13, scope: !19288, inlinedAt: !19517)
!19535 = !DILocation(line: 109, column: 19, scope: !19288, inlinedAt: !19517)
!19536 = !DILocation(line: 109, column: 13, scope: !19289, inlinedAt: !19517)
!19537 = !DILocation(line: 110, column: 29, scope: !19288, inlinedAt: !19517)
!19538 = !DILocation(line: 110, column: 27, scope: !19288, inlinedAt: !19517)
!19539 = !DILocation(line: 110, column: 13, scope: !19288, inlinedAt: !19517)
!19540 = !DILocation(line: 108, column: 44, scope: !19281, inlinedAt: !19517)
!19541 = !DILocation(line: 108, column: 65, scope: !19281, inlinedAt: !19517)
!19542 = !DILocation(line: 108, column: 61, scope: !19281, inlinedAt: !19517)
!19543 = !DILocation(line: 108, column: 68, scope: !19281, inlinedAt: !19517)
!19544 = !DILocation(line: 108, column: 42, scope: !19281, inlinedAt: !19517)
!19545 = !DILocation(line: 108, column: 5, scope: !19281, inlinedAt: !19517)
!19546 = distinct !{!19546, !19533, !19547, !3203}
!19547 = !DILocation(line: 111, column: 5, scope: !19277, inlinedAt: !19517)
!19548 = !DILocation(line: 113, column: 28, scope: !19258, inlinedAt: !19517)
!19549 = !DILocation(line: 113, column: 34, scope: !19258, inlinedAt: !19517)
!19550 = !DILocation(line: 113, column: 32, scope: !19258, inlinedAt: !19517)
!19551 = !DILocation(line: 113, column: 6, scope: !19258, inlinedAt: !19517)
!19552 = !DILocation(line: 113, column: 17, scope: !19258, inlinedAt: !19517)
!19553 = !DILocation(line: 114, column: 9, scope: !19309, inlinedAt: !19517)
!19554 = !DILocation(line: 114, column: 14, scope: !19309, inlinedAt: !19517)
!19555 = !DILocation(line: 114, column: 17, scope: !19309, inlinedAt: !19517)
!19556 = !DILocation(line: 114, column: 23, scope: !19309, inlinedAt: !19517)
!19557 = !DILocation(line: 114, column: 9, scope: !19258, inlinedAt: !19517)
!19558 = !DILocation(line: 115, column: 16, scope: !19309, inlinedAt: !19517)
!19559 = !DILocation(line: 115, column: 9, scope: !19309, inlinedAt: !19517)
!19560 = !DILocation(line: 116, column: 9, scope: !19317, inlinedAt: !19517)
!19561 = !DILocation(line: 116, column: 16, scope: !19317, inlinedAt: !19517)
!19562 = !DILocation(line: 116, column: 19, scope: !19317, inlinedAt: !19517)
!19563 = !DILocation(line: 116, column: 9, scope: !19258, inlinedAt: !19517)
!19564 = !DILocation(line: 117, column: 16, scope: !19317, inlinedAt: !19517)
!19565 = !DILocation(line: 117, column: 9, scope: !19317, inlinedAt: !19517)
!19566 = !DILocation(line: 118, column: 5, scope: !19258, inlinedAt: !19517)
!19567 = !DILocation(line: 119, column: 1, scope: !19258, inlinedAt: !19517)
!19568 = !DILocation(line: 130, column: 10, scope: !19326, inlinedAt: !19504)
!19569 = !DILocation(line: 130, column: 9, scope: !19236, inlinedAt: !19504)
!19570 = !DILocation(line: 131, column: 9, scope: !19326, inlinedAt: !19504)
!19571 = !DILocation(line: 132, column: 23, scope: !19236, inlinedAt: !19504)
!19572 = !DILocation(line: 132, column: 49, scope: !19236, inlinedAt: !19504)
!19573 = !DILocation(line: 132, column: 55, scope: !19236, inlinedAt: !19504)
!19574 = !DILocation(line: 132, column: 60, scope: !19236, inlinedAt: !19504)
!19575 = !DILocation(line: 36, column: 38, scope: !19147, inlinedAt: !19576)
!19576 = distinct !DILocation(line: 132, column: 30, scope: !19236, inlinedAt: !19504)
!19577 = !DILocation(line: 36, column: 56, scope: !19147, inlinedAt: !19576)
!19578 = !DILocation(line: 36, column: 68, scope: !19147, inlinedAt: !19576)
!19579 = !DILocation(line: 38, column: 23, scope: !19147, inlinedAt: !19576)
!19580 = !DILocation(line: 38, column: 30, scope: !19147, inlinedAt: !19576)
!19581 = !DILocation(line: 38, column: 36, scope: !19147, inlinedAt: !19576)
!19582 = !DILocation(line: 40, column: 10, scope: !19161, inlinedAt: !19576)
!19583 = !DILocation(line: 40, column: 9, scope: !19147, inlinedAt: !19576)
!19584 = !DILocation(line: 41, column: 9, scope: !19161, inlinedAt: !19576)
!19585 = !DILocation(line: 43, column: 10, scope: !19165, inlinedAt: !19576)
!19586 = !DILocation(line: 43, column: 16, scope: !19165, inlinedAt: !19576)
!19587 = !DILocation(line: 43, column: 9, scope: !19147, inlinedAt: !19576)
!19588 = !DILocation(line: 44, column: 16, scope: !19165, inlinedAt: !19576)
!19589 = !DILocation(line: 44, column: 9, scope: !19165, inlinedAt: !19576)
!19590 = !DILocation(line: 46, column: 5, scope: !19147, inlinedAt: !19576)
!19591 = !DILocation(line: 46, column: 12, scope: !19172, inlinedAt: !19576)
!19592 = !DILocation(line: 46, column: 5, scope: !19173, inlinedAt: !19576)
!19593 = !DILocation(line: 47, column: 22, scope: !19176, inlinedAt: !19576)
!19594 = !DILocation(line: 47, column: 28, scope: !19176, inlinedAt: !19576)
!19595 = !DILocation(line: 47, column: 33, scope: !19176, inlinedAt: !19576)
!19596 = !DILocation(line: 47, column: 38, scope: !19176, inlinedAt: !19576)
!19597 = !DILocation(line: 47, column: 42, scope: !19176, inlinedAt: !19576)
!19598 = !DILocation(line: 47, column: 14, scope: !19176, inlinedAt: !19576)
!19599 = !DILocation(line: 47, column: 13, scope: !19177, inlinedAt: !19576)
!19600 = !DILocation(line: 48, column: 20, scope: !19176, inlinedAt: !19576)
!19601 = !DILocation(line: 48, column: 13, scope: !19176, inlinedAt: !19576)
!19602 = !DILocation(line: 46, column: 25, scope: !19172, inlinedAt: !19576)
!19603 = !DILocation(line: 46, column: 31, scope: !19172, inlinedAt: !19576)
!19604 = !DILocation(line: 46, column: 23, scope: !19172, inlinedAt: !19576)
!19605 = !DILocation(line: 46, column: 5, scope: !19172, inlinedAt: !19576)
!19606 = distinct !{!19606, !19592, !19607, !3203}
!19607 = !DILocation(line: 49, column: 5, scope: !19173, inlinedAt: !19576)
!19608 = !DILocation(line: 51, column: 5, scope: !19147, inlinedAt: !19576)
!19609 = !DILocation(line: 52, column: 1, scope: !19147, inlinedAt: !19576)
!19610 = !DILocation(line: 133, column: 12, scope: !19236, inlinedAt: !19504)
!19611 = !DILocation(line: 133, column: 19, scope: !19236, inlinedAt: !19504)
!19612 = !DILocation(line: 133, column: 25, scope: !19236, inlinedAt: !19504)
!19613 = !DILocation(line: 133, column: 5, scope: !19236, inlinedAt: !19504)
!19614 = !DILocation(line: 134, column: 1, scope: !19236, inlinedAt: !19504)
!19615 = !DILocation(line: 145, column: 5, scope: !19496)
!19616 = distinct !DISubprogram(name: "lwan_trie_entry_count", scope: !2959, file: !2959, line: 149, type: !19617, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3062, retainedNodes: !74)
!19617 = !DISubroutineType(types: !19618)
!19618 = !{!9484, !19044}
!19619 = !DILocalVariable(name: "trie", arg: 1, scope: !19616, file: !2959, line: 149, type: !19044)
!19620 = !DILocation(line: 149, column: 36, scope: !19616)
!19621 = !DILocation(line: 151, column: 13, scope: !19616)
!19622 = !DILocation(line: 151, column: 18, scope: !19616)
!19623 = !DILocation(line: 151, column: 21, scope: !19616)
!19624 = !DILocation(line: 151, column: 27, scope: !19616)
!19625 = !DILocation(line: 151, column: 12, scope: !19616)
!19626 = !DILocation(line: 151, column: 35, scope: !19616)
!19627 = !DILocation(line: 151, column: 41, scope: !19616)
!19628 = !DILocation(line: 151, column: 47, scope: !19616)
!19629 = !DILocation(line: 151, column: 5, scope: !19616)
!19630 = distinct !DISubprogram(name: "lwan_trie_destroy", scope: !2959, file: !2959, line: 184, type: !19631, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3062, retainedNodes: !74)
!19631 = !DISubroutineType(types: !19632)
!19632 = !{null, !19044}
!19633 = !DILocalVariable(name: "trie", arg: 1, scope: !19630, file: !2959, line: 184, type: !19044)
!19634 = !DILocation(line: 184, column: 32, scope: !19630)
!19635 = !DILocation(line: 186, column: 10, scope: !19636)
!19636 = distinct !DILexicalBlock(scope: !19630, file: !2959, line: 186, column: 9)
!19637 = !DILocation(line: 186, column: 15, scope: !19636)
!19638 = !DILocation(line: 186, column: 19, scope: !19636)
!19639 = !DILocation(line: 186, column: 25, scope: !19636)
!19640 = !DILocation(line: 186, column: 9, scope: !19630)
!19641 = !DILocation(line: 187, column: 9, scope: !19636)
!19642 = !DILocation(line: 188, column: 28, scope: !19630)
!19643 = !DILocation(line: 188, column: 34, scope: !19630)
!19644 = !DILocation(line: 188, column: 40, scope: !19630)
!19645 = !DILocation(line: 188, column: 5, scope: !19630)
!19646 = !DILocation(line: 189, column: 1, scope: !19630)
!19647 = distinct !DISubprogram(name: "lwan_trie_node_destroy", scope: !2959, file: !2959, line: 155, type: !19648, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3062, retainedNodes: !74)
!19648 = !DISubroutineType(types: !19649)
!19649 = !{null, !19044, !19049}
!19650 = !DILocalVariable(name: "trie", arg: 1, scope: !19647, file: !2959, line: 155, type: !19044)
!19651 = !DILocation(line: 155, column: 37, scope: !19647)
!19652 = !DILocalVariable(name: "node", arg: 2, scope: !19647, file: !2959, line: 155, type: !19049)
!19653 = !DILocation(line: 155, column: 61, scope: !19647)
!19654 = !DILocation(line: 157, column: 10, scope: !19655)
!19655 = distinct !DILexicalBlock(scope: !19647, file: !2959, line: 157, column: 9)
!19656 = !DILocation(line: 157, column: 9, scope: !19647)
!19657 = !DILocation(line: 158, column: 9, scope: !19655)
!19658 = !DILocalVariable(name: "nodes_destroyed", scope: !19647, file: !2959, line: 160, type: !9484)
!19659 = !DILocation(line: 160, column: 13, scope: !19647)
!19660 = !DILocation(line: 160, column: 31, scope: !19647)
!19661 = !DILocation(line: 160, column: 37, scope: !19647)
!19662 = !DILocalVariable(name: "leaf", scope: !19663, file: !2959, line: 162, type: !19056)
!19663 = distinct !DILexicalBlock(scope: !19647, file: !2959, line: 162, column: 5)
!19664 = !DILocation(line: 162, column: 28, scope: !19663)
!19665 = !DILocation(line: 162, column: 35, scope: !19663)
!19666 = !DILocation(line: 162, column: 41, scope: !19663)
!19667 = !DILocation(line: 162, column: 10, scope: !19663)
!19668 = !DILocation(line: 162, column: 47, scope: !19669)
!19669 = distinct !DILexicalBlock(scope: !19663, file: !2959, line: 162, column: 5)
!19670 = !DILocation(line: 162, column: 5, scope: !19663)
!19671 = !DILocalVariable(name: "tmp", scope: !19672, file: !2959, line: 163, type: !19056)
!19672 = distinct !DILexicalBlock(scope: !19669, file: !2959, line: 162, column: 54)
!19673 = !DILocation(line: 163, column: 27, scope: !19672)
!19674 = !DILocation(line: 163, column: 33, scope: !19672)
!19675 = !DILocation(line: 163, column: 39, scope: !19672)
!19676 = !DILocation(line: 165, column: 13, scope: !19677)
!19677 = distinct !DILexicalBlock(scope: !19672, file: !2959, line: 165, column: 13)
!19678 = !DILocation(line: 165, column: 19, scope: !19677)
!19679 = !DILocation(line: 165, column: 13, scope: !19672)
!19680 = !DILocation(line: 166, column: 13, scope: !19677)
!19681 = !DILocation(line: 166, column: 19, scope: !19677)
!19682 = !DILocation(line: 166, column: 29, scope: !19677)
!19683 = !DILocation(line: 166, column: 35, scope: !19677)
!19684 = !DILocation(line: 168, column: 14, scope: !19672)
!19685 = !DILocation(line: 168, column: 20, scope: !19672)
!19686 = !DILocation(line: 168, column: 9, scope: !19672)
!19687 = !DILocation(line: 169, column: 14, scope: !19672)
!19688 = !DILocation(line: 169, column: 9, scope: !19672)
!19689 = !DILocation(line: 170, column: 16, scope: !19672)
!19690 = !DILocation(line: 170, column: 14, scope: !19672)
!19691 = !DILocation(line: 162, column: 5, scope: !19669)
!19692 = distinct !{!19692, !19670, !19693, !3203}
!19693 = !DILocation(line: 171, column: 5, scope: !19663)
!19694 = !DILocalVariable(name: "i", scope: !19695, file: !2959, line: 173, type: !9484)
!19695 = distinct !DILexicalBlock(scope: !19647, file: !2959, line: 173, column: 5)
!19696 = !DILocation(line: 173, column: 18, scope: !19695)
!19697 = !DILocation(line: 173, column: 10, scope: !19695)
!19698 = !DILocation(line: 173, column: 25, scope: !19699)
!19699 = distinct !DILexicalBlock(scope: !19695, file: !2959, line: 173, column: 5)
!19700 = !DILocation(line: 173, column: 41, scope: !19699)
!19701 = !DILocation(line: 173, column: 45, scope: !19699)
!19702 = !DILocation(line: 173, column: 48, scope: !19699)
!19703 = !DILocation(line: 173, column: 50, scope: !19699)
!19704 = !DILocation(line: 0, scope: !19699)
!19705 = !DILocation(line: 173, column: 5, scope: !19695)
!19706 = !DILocation(line: 174, column: 13, scope: !19707)
!19707 = distinct !DILexicalBlock(scope: !19708, file: !2959, line: 174, column: 13)
!19708 = distinct !DILexicalBlock(scope: !19699, file: !2959, line: 173, column: 60)
!19709 = !DILocation(line: 174, column: 19, scope: !19707)
!19710 = !DILocation(line: 174, column: 24, scope: !19707)
!19711 = !DILocation(line: 174, column: 13, scope: !19708)
!19712 = !DILocation(line: 175, column: 36, scope: !19713)
!19713 = distinct !DILexicalBlock(scope: !19707, file: !2959, line: 174, column: 28)
!19714 = !DILocation(line: 175, column: 42, scope: !19713)
!19715 = !DILocation(line: 175, column: 48, scope: !19713)
!19716 = !DILocation(line: 175, column: 53, scope: !19713)
!19717 = !DILocation(line: 175, column: 13, scope: !19713)
!19718 = !DILocation(line: 176, column: 13, scope: !19713)
!19719 = !DILocation(line: 177, column: 9, scope: !19713)
!19720 = !DILocation(line: 178, column: 5, scope: !19708)
!19721 = !DILocation(line: 173, column: 56, scope: !19699)
!19722 = !DILocation(line: 173, column: 5, scope: !19699)
!19723 = distinct !{!19723, !19705, !19724, !3203}
!19724 = !DILocation(line: 178, column: 5, scope: !19695)
!19725 = !DILocation(line: 180, column: 10, scope: !19647)
!19726 = !DILocation(line: 180, column: 5, scope: !19647)
!19727 = !DILocation(line: 181, column: 1, scope: !19647)
!19728 = distinct !DISubprogram(name: "murmur3_simple", scope: !2979, file: !2979, line: 322, type: !3487, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2968, retainedNodes: !74)
!19729 = !DILocalVariable(name: "keyptr", arg: 1, scope: !19728, file: !2979, line: 322, type: !38)
!19730 = !DILocation(line: 322, column: 28, scope: !19728)
!19731 = !DILocalVariable(name: "len", scope: !19728, file: !2979, line: 324, type: !6)
!19732 = !DILocation(line: 324, column: 12, scope: !19728)
!19733 = !DILocation(line: 324, column: 33, scope: !19728)
!19734 = !DILocation(line: 324, column: 18, scope: !19728)
!19735 = !DILocalVariable(name: "hash", scope: !19728, file: !2979, line: 326, type: !19736)
!19736 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2975, size: 128, elements: !189)
!19737 = !DILocation(line: 326, column: 14, scope: !19728)
!19738 = !DILocation(line: 327, column: 25, scope: !19728)
!19739 = !DILocation(line: 327, column: 33, scope: !19728)
!19740 = !DILocation(line: 327, column: 38, scope: !19728)
!19741 = !DILocation(line: 327, column: 50, scope: !19728)
!19742 = !DILocalVariable(name: "key", arg: 1, scope: !19743, file: !2979, line: 223, type: !38)
!19743 = distinct !DISubprogram(name: "MurmurHash3_x64_128", scope: !2979, file: !2979, line: 223, type: !19744, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2968, retainedNodes: !74)
!19744 = !DISubroutineType(types: !19745)
!19745 = !{null, !38, !73, !2956, !5}
!19746 = !DILocation(line: 223, column: 33, scope: !19743, inlinedAt: !19747)
!19747 = distinct !DILocation(line: 327, column: 5, scope: !19728)
!19748 = !DILocalVariable(name: "len", arg: 2, scope: !19743, file: !2979, line: 223, type: !73)
!19749 = !DILocation(line: 223, column: 51, scope: !19743, inlinedAt: !19747)
!19750 = !DILocalVariable(name: "seed", arg: 3, scope: !19743, file: !2979, line: 223, type: !2956)
!19751 = !DILocation(line: 223, column: 71, scope: !19743, inlinedAt: !19747)
!19752 = !DILocalVariable(name: "out", arg: 4, scope: !19743, file: !2979, line: 224, type: !5)
!19753 = !DILocation(line: 224, column: 19, scope: !19743, inlinedAt: !19747)
!19754 = !DILocalVariable(name: "data", scope: !19743, file: !2979, line: 226, type: !2971)
!19755 = !DILocation(line: 226, column: 20, scope: !19743, inlinedAt: !19747)
!19756 = !DILocation(line: 226, column: 44, scope: !19743, inlinedAt: !19747)
!19757 = !DILocalVariable(name: "nblocks", scope: !19743, file: !2979, line: 227, type: !73)
!19758 = !DILocation(line: 227, column: 18, scope: !19743, inlinedAt: !19747)
!19759 = !DILocation(line: 227, column: 28, scope: !19743, inlinedAt: !19747)
!19760 = !DILocation(line: 227, column: 32, scope: !19743, inlinedAt: !19747)
!19761 = !DILocalVariable(name: "i", scope: !19743, file: !2979, line: 228, type: !6)
!19762 = !DILocation(line: 228, column: 12, scope: !19743, inlinedAt: !19747)
!19763 = !DILocalVariable(name: "h1", scope: !19743, file: !2979, line: 229, type: !2975)
!19764 = !DILocation(line: 229, column: 14, scope: !19743, inlinedAt: !19747)
!19765 = !DILocation(line: 229, column: 19, scope: !19743, inlinedAt: !19747)
!19766 = !DILocalVariable(name: "h2", scope: !19743, file: !2979, line: 230, type: !2975)
!19767 = !DILocation(line: 230, column: 14, scope: !19743, inlinedAt: !19747)
!19768 = !DILocation(line: 230, column: 19, scope: !19743, inlinedAt: !19747)
!19769 = !DILocalVariable(name: "c1", scope: !19743, file: !2979, line: 231, type: !2975)
!19770 = !DILocation(line: 231, column: 14, scope: !19743, inlinedAt: !19747)
!19771 = !DILocalVariable(name: "c2", scope: !19743, file: !2979, line: 232, type: !2975)
!19772 = !DILocation(line: 232, column: 14, scope: !19743, inlinedAt: !19747)
!19773 = !DILocalVariable(name: "blocks", scope: !19743, file: !2979, line: 236, type: !2973)
!19774 = !DILocation(line: 236, column: 21, scope: !19743, inlinedAt: !19747)
!19775 = !DILocation(line: 236, column: 49, scope: !19743, inlinedAt: !19747)
!19776 = !DILocation(line: 237, column: 12, scope: !19777, inlinedAt: !19747)
!19777 = distinct !DILexicalBlock(scope: !19743, file: !2979, line: 237, column: 5)
!19778 = !DILocation(line: 237, column: 10, scope: !19777, inlinedAt: !19747)
!19779 = !DILocation(line: 237, column: 17, scope: !19780, inlinedAt: !19747)
!19780 = distinct !DILexicalBlock(scope: !19777, file: !2979, line: 237, column: 5)
!19781 = !DILocation(line: 237, column: 21, scope: !19780, inlinedAt: !19747)
!19782 = !DILocation(line: 237, column: 19, scope: !19780, inlinedAt: !19747)
!19783 = !DILocation(line: 237, column: 5, scope: !19777, inlinedAt: !19747)
!19784 = !DILocalVariable(name: "k1", scope: !19785, file: !2979, line: 238, type: !2975)
!19785 = distinct !DILexicalBlock(scope: !19780, file: !2979, line: 237, column: 35)
!19786 = !DILocation(line: 238, column: 18, scope: !19785, inlinedAt: !19747)
!19787 = !DILocalVariable(name: "k2", scope: !19785, file: !2979, line: 238, type: !2975)
!19788 = !DILocation(line: 238, column: 22, scope: !19785, inlinedAt: !19747)
!19789 = !DILocation(line: 240, column: 21, scope: !19785, inlinedAt: !19747)
!19790 = !DILocation(line: 240, column: 30, scope: !19785, inlinedAt: !19747)
!19791 = !DILocation(line: 240, column: 32, scope: !19785, inlinedAt: !19747)
!19792 = !DILocation(line: 240, column: 28, scope: !19785, inlinedAt: !19747)
!19793 = !DILocation(line: 240, column: 9, scope: !19785, inlinedAt: !19747)
!19794 = !DILocation(line: 241, column: 21, scope: !19785, inlinedAt: !19747)
!19795 = !DILocation(line: 241, column: 30, scope: !19785, inlinedAt: !19747)
!19796 = !DILocation(line: 241, column: 32, scope: !19785, inlinedAt: !19747)
!19797 = !DILocation(line: 241, column: 28, scope: !19785, inlinedAt: !19747)
!19798 = !DILocation(line: 241, column: 36, scope: !19785, inlinedAt: !19747)
!19799 = !DILocation(line: 241, column: 9, scope: !19785, inlinedAt: !19747)
!19800 = !DILocation(line: 243, column: 15, scope: !19785, inlinedAt: !19747)
!19801 = !DILocation(line: 243, column: 12, scope: !19785, inlinedAt: !19747)
!19802 = !DILocation(line: 244, column: 14, scope: !19785, inlinedAt: !19747)
!19803 = !DILocalVariable(name: "x", arg: 1, scope: !19804, file: !2979, line: 30, type: !2975)
!19804 = distinct !DISubprogram(name: "rotl64", scope: !2979, file: !2979, line: 30, type: !19805, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2968, retainedNodes: !74)
!19805 = !DISubroutineType(types: !19806)
!19806 = !{!2975, !2975, !19807}
!19807 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !9485, line: 24, baseType: !19808)
!19808 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !69, line: 37, baseType: !4708)
!19809 = !DILocation(line: 30, column: 46, scope: !19804, inlinedAt: !19810)
!19810 = distinct !DILocation(line: 244, column: 14, scope: !19785, inlinedAt: !19747)
!19811 = !DILocalVariable(name: "r", arg: 2, scope: !19804, file: !2979, line: 30, type: !19807)
!19812 = !DILocation(line: 30, column: 56, scope: !19804, inlinedAt: !19810)
!19813 = !DILocation(line: 32, column: 13, scope: !19804, inlinedAt: !19810)
!19814 = !DILocation(line: 32, column: 18, scope: !19804, inlinedAt: !19810)
!19815 = !DILocation(line: 32, column: 15, scope: !19804, inlinedAt: !19810)
!19816 = !DILocation(line: 32, column: 24, scope: !19804, inlinedAt: !19810)
!19817 = !DILocation(line: 32, column: 35, scope: !19804, inlinedAt: !19810)
!19818 = !DILocation(line: 32, column: 33, scope: !19804, inlinedAt: !19810)
!19819 = !DILocation(line: 32, column: 26, scope: !19804, inlinedAt: !19810)
!19820 = !DILocation(line: 32, column: 21, scope: !19804, inlinedAt: !19810)
!19821 = !DILocation(line: 244, column: 12, scope: !19785, inlinedAt: !19747)
!19822 = !DILocation(line: 245, column: 15, scope: !19785, inlinedAt: !19747)
!19823 = !DILocation(line: 245, column: 12, scope: !19785, inlinedAt: !19747)
!19824 = !DILocation(line: 246, column: 15, scope: !19785, inlinedAt: !19747)
!19825 = !DILocation(line: 246, column: 12, scope: !19785, inlinedAt: !19747)
!19826 = !DILocation(line: 247, column: 14, scope: !19785, inlinedAt: !19747)
!19827 = !DILocation(line: 30, column: 46, scope: !19804, inlinedAt: !19828)
!19828 = distinct !DILocation(line: 247, column: 14, scope: !19785, inlinedAt: !19747)
!19829 = !DILocation(line: 30, column: 56, scope: !19804, inlinedAt: !19828)
!19830 = !DILocation(line: 32, column: 13, scope: !19804, inlinedAt: !19828)
!19831 = !DILocation(line: 32, column: 18, scope: !19804, inlinedAt: !19828)
!19832 = !DILocation(line: 32, column: 15, scope: !19804, inlinedAt: !19828)
!19833 = !DILocation(line: 32, column: 24, scope: !19804, inlinedAt: !19828)
!19834 = !DILocation(line: 32, column: 35, scope: !19804, inlinedAt: !19828)
!19835 = !DILocation(line: 32, column: 33, scope: !19804, inlinedAt: !19828)
!19836 = !DILocation(line: 32, column: 26, scope: !19804, inlinedAt: !19828)
!19837 = !DILocation(line: 32, column: 21, scope: !19804, inlinedAt: !19828)
!19838 = !DILocation(line: 247, column: 12, scope: !19785, inlinedAt: !19747)
!19839 = !DILocation(line: 248, column: 15, scope: !19785, inlinedAt: !19747)
!19840 = !DILocation(line: 248, column: 12, scope: !19785, inlinedAt: !19747)
!19841 = !DILocation(line: 249, column: 14, scope: !19785, inlinedAt: !19747)
!19842 = !DILocation(line: 249, column: 17, scope: !19785, inlinedAt: !19747)
!19843 = !DILocation(line: 249, column: 21, scope: !19785, inlinedAt: !19747)
!19844 = !DILocation(line: 249, column: 12, scope: !19785, inlinedAt: !19747)
!19845 = !DILocation(line: 250, column: 15, scope: !19785, inlinedAt: !19747)
!19846 = !DILocation(line: 250, column: 12, scope: !19785, inlinedAt: !19747)
!19847 = !DILocation(line: 251, column: 14, scope: !19785, inlinedAt: !19747)
!19848 = !DILocation(line: 30, column: 46, scope: !19804, inlinedAt: !19849)
!19849 = distinct !DILocation(line: 251, column: 14, scope: !19785, inlinedAt: !19747)
!19850 = !DILocation(line: 30, column: 56, scope: !19804, inlinedAt: !19849)
!19851 = !DILocation(line: 32, column: 13, scope: !19804, inlinedAt: !19849)
!19852 = !DILocation(line: 32, column: 18, scope: !19804, inlinedAt: !19849)
!19853 = !DILocation(line: 32, column: 15, scope: !19804, inlinedAt: !19849)
!19854 = !DILocation(line: 32, column: 24, scope: !19804, inlinedAt: !19849)
!19855 = !DILocation(line: 32, column: 35, scope: !19804, inlinedAt: !19849)
!19856 = !DILocation(line: 32, column: 33, scope: !19804, inlinedAt: !19849)
!19857 = !DILocation(line: 32, column: 26, scope: !19804, inlinedAt: !19849)
!19858 = !DILocation(line: 32, column: 21, scope: !19804, inlinedAt: !19849)
!19859 = !DILocation(line: 251, column: 12, scope: !19785, inlinedAt: !19747)
!19860 = !DILocation(line: 252, column: 15, scope: !19785, inlinedAt: !19747)
!19861 = !DILocation(line: 252, column: 12, scope: !19785, inlinedAt: !19747)
!19862 = !DILocation(line: 253, column: 15, scope: !19785, inlinedAt: !19747)
!19863 = !DILocation(line: 253, column: 12, scope: !19785, inlinedAt: !19747)
!19864 = !DILocation(line: 254, column: 14, scope: !19785, inlinedAt: !19747)
!19865 = !DILocation(line: 30, column: 46, scope: !19804, inlinedAt: !19866)
!19866 = distinct !DILocation(line: 254, column: 14, scope: !19785, inlinedAt: !19747)
!19867 = !DILocation(line: 30, column: 56, scope: !19804, inlinedAt: !19866)
!19868 = !DILocation(line: 32, column: 13, scope: !19804, inlinedAt: !19866)
!19869 = !DILocation(line: 32, column: 18, scope: !19804, inlinedAt: !19866)
!19870 = !DILocation(line: 32, column: 15, scope: !19804, inlinedAt: !19866)
!19871 = !DILocation(line: 32, column: 24, scope: !19804, inlinedAt: !19866)
!19872 = !DILocation(line: 32, column: 35, scope: !19804, inlinedAt: !19866)
!19873 = !DILocation(line: 32, column: 33, scope: !19804, inlinedAt: !19866)
!19874 = !DILocation(line: 32, column: 26, scope: !19804, inlinedAt: !19866)
!19875 = !DILocation(line: 32, column: 21, scope: !19804, inlinedAt: !19866)
!19876 = !DILocation(line: 254, column: 12, scope: !19785, inlinedAt: !19747)
!19877 = !DILocation(line: 255, column: 15, scope: !19785, inlinedAt: !19747)
!19878 = !DILocation(line: 255, column: 12, scope: !19785, inlinedAt: !19747)
!19879 = !DILocation(line: 256, column: 14, scope: !19785, inlinedAt: !19747)
!19880 = !DILocation(line: 256, column: 17, scope: !19785, inlinedAt: !19747)
!19881 = !DILocation(line: 256, column: 21, scope: !19785, inlinedAt: !19747)
!19882 = !DILocation(line: 256, column: 12, scope: !19785, inlinedAt: !19747)
!19883 = !DILocation(line: 237, column: 31, scope: !19780, inlinedAt: !19747)
!19884 = !DILocation(line: 237, column: 5, scope: !19780, inlinedAt: !19747)
!19885 = distinct !{!19885, !19783, !19886, !3203}
!19886 = !DILocation(line: 257, column: 5, scope: !19777, inlinedAt: !19747)
!19887 = !DILocalVariable(name: "tail", scope: !19743, file: !2979, line: 261, type: !2971)
!19888 = !DILocation(line: 261, column: 20, scope: !19743, inlinedAt: !19747)
!19889 = !DILocation(line: 261, column: 45, scope: !19743, inlinedAt: !19747)
!19890 = !DILocation(line: 261, column: 52, scope: !19743, inlinedAt: !19747)
!19891 = !DILocation(line: 261, column: 60, scope: !19743, inlinedAt: !19747)
!19892 = !DILocation(line: 261, column: 50, scope: !19743, inlinedAt: !19747)
!19893 = !DILocalVariable(name: "k1", scope: !19743, file: !2979, line: 262, type: !2975)
!19894 = !DILocation(line: 262, column: 14, scope: !19743, inlinedAt: !19747)
!19895 = !DILocalVariable(name: "k2", scope: !19743, file: !2979, line: 263, type: !2975)
!19896 = !DILocation(line: 263, column: 14, scope: !19743, inlinedAt: !19747)
!19897 = !DILocation(line: 264, column: 13, scope: !19743, inlinedAt: !19747)
!19898 = !DILocation(line: 264, column: 17, scope: !19743, inlinedAt: !19747)
!19899 = !DILocation(line: 264, column: 5, scope: !19743, inlinedAt: !19747)
!19900 = !DILocation(line: 266, column: 27, scope: !19901, inlinedAt: !19747)
!19901 = distinct !DILexicalBlock(scope: !19743, file: !2979, line: 264, column: 23)
!19902 = !DILocation(line: 266, column: 15, scope: !19901, inlinedAt: !19747)
!19903 = !DILocation(line: 266, column: 37, scope: !19901, inlinedAt: !19747)
!19904 = !DILocation(line: 266, column: 12, scope: !19901, inlinedAt: !19747)
!19905 = !DILocation(line: 266, column: 9, scope: !19901, inlinedAt: !19747)
!19906 = !DILocation(line: 268, column: 27, scope: !19901, inlinedAt: !19747)
!19907 = !DILocation(line: 268, column: 15, scope: !19901, inlinedAt: !19747)
!19908 = !DILocation(line: 268, column: 37, scope: !19901, inlinedAt: !19747)
!19909 = !DILocation(line: 268, column: 12, scope: !19901, inlinedAt: !19747)
!19910 = !DILocation(line: 268, column: 9, scope: !19901, inlinedAt: !19747)
!19911 = !DILocation(line: 270, column: 27, scope: !19901, inlinedAt: !19747)
!19912 = !DILocation(line: 270, column: 15, scope: !19901, inlinedAt: !19747)
!19913 = !DILocation(line: 270, column: 37, scope: !19901, inlinedAt: !19747)
!19914 = !DILocation(line: 270, column: 12, scope: !19901, inlinedAt: !19747)
!19915 = !DILocation(line: 270, column: 9, scope: !19901, inlinedAt: !19747)
!19916 = !DILocation(line: 272, column: 27, scope: !19901, inlinedAt: !19747)
!19917 = !DILocation(line: 272, column: 15, scope: !19901, inlinedAt: !19747)
!19918 = !DILocation(line: 272, column: 37, scope: !19901, inlinedAt: !19747)
!19919 = !DILocation(line: 272, column: 12, scope: !19901, inlinedAt: !19747)
!19920 = !DILocation(line: 272, column: 9, scope: !19901, inlinedAt: !19747)
!19921 = !DILocation(line: 274, column: 27, scope: !19901, inlinedAt: !19747)
!19922 = !DILocation(line: 274, column: 15, scope: !19901, inlinedAt: !19747)
!19923 = !DILocation(line: 274, column: 37, scope: !19901, inlinedAt: !19747)
!19924 = !DILocation(line: 274, column: 12, scope: !19901, inlinedAt: !19747)
!19925 = !DILocation(line: 274, column: 9, scope: !19901, inlinedAt: !19747)
!19926 = !DILocation(line: 276, column: 27, scope: !19901, inlinedAt: !19747)
!19927 = !DILocation(line: 276, column: 15, scope: !19901, inlinedAt: !19747)
!19928 = !DILocation(line: 276, column: 36, scope: !19901, inlinedAt: !19747)
!19929 = !DILocation(line: 276, column: 12, scope: !19901, inlinedAt: !19747)
!19930 = !DILocation(line: 276, column: 9, scope: !19901, inlinedAt: !19747)
!19931 = !DILocation(line: 278, column: 27, scope: !19901, inlinedAt: !19747)
!19932 = !DILocation(line: 278, column: 15, scope: !19901, inlinedAt: !19747)
!19933 = !DILocation(line: 278, column: 12, scope: !19901, inlinedAt: !19747)
!19934 = !DILocation(line: 279, column: 15, scope: !19901, inlinedAt: !19747)
!19935 = !DILocation(line: 279, column: 12, scope: !19901, inlinedAt: !19747)
!19936 = !DILocation(line: 280, column: 14, scope: !19901, inlinedAt: !19747)
!19937 = !DILocation(line: 30, column: 46, scope: !19804, inlinedAt: !19938)
!19938 = distinct !DILocation(line: 280, column: 14, scope: !19901, inlinedAt: !19747)
!19939 = !DILocation(line: 30, column: 56, scope: !19804, inlinedAt: !19938)
!19940 = !DILocation(line: 32, column: 13, scope: !19804, inlinedAt: !19938)
!19941 = !DILocation(line: 32, column: 18, scope: !19804, inlinedAt: !19938)
!19942 = !DILocation(line: 32, column: 15, scope: !19804, inlinedAt: !19938)
!19943 = !DILocation(line: 32, column: 24, scope: !19804, inlinedAt: !19938)
!19944 = !DILocation(line: 32, column: 35, scope: !19804, inlinedAt: !19938)
!19945 = !DILocation(line: 32, column: 33, scope: !19804, inlinedAt: !19938)
!19946 = !DILocation(line: 32, column: 26, scope: !19804, inlinedAt: !19938)
!19947 = !DILocation(line: 32, column: 21, scope: !19804, inlinedAt: !19938)
!19948 = !DILocation(line: 280, column: 12, scope: !19901, inlinedAt: !19747)
!19949 = !DILocation(line: 281, column: 15, scope: !19901, inlinedAt: !19747)
!19950 = !DILocation(line: 281, column: 12, scope: !19901, inlinedAt: !19747)
!19951 = !DILocation(line: 282, column: 15, scope: !19901, inlinedAt: !19747)
!19952 = !DILocation(line: 282, column: 12, scope: !19901, inlinedAt: !19747)
!19953 = !DILocation(line: 282, column: 9, scope: !19901, inlinedAt: !19747)
!19954 = !DILocation(line: 284, column: 27, scope: !19901, inlinedAt: !19747)
!19955 = !DILocation(line: 284, column: 15, scope: !19901, inlinedAt: !19747)
!19956 = !DILocation(line: 284, column: 36, scope: !19901, inlinedAt: !19747)
!19957 = !DILocation(line: 284, column: 12, scope: !19901, inlinedAt: !19747)
!19958 = !DILocation(line: 284, column: 9, scope: !19901, inlinedAt: !19747)
!19959 = !DILocation(line: 286, column: 27, scope: !19901, inlinedAt: !19747)
!19960 = !DILocation(line: 286, column: 15, scope: !19901, inlinedAt: !19747)
!19961 = !DILocation(line: 286, column: 36, scope: !19901, inlinedAt: !19747)
!19962 = !DILocation(line: 286, column: 12, scope: !19901, inlinedAt: !19747)
!19963 = !DILocation(line: 286, column: 9, scope: !19901, inlinedAt: !19747)
!19964 = !DILocation(line: 288, column: 27, scope: !19901, inlinedAt: !19747)
!19965 = !DILocation(line: 288, column: 15, scope: !19901, inlinedAt: !19747)
!19966 = !DILocation(line: 288, column: 36, scope: !19901, inlinedAt: !19747)
!19967 = !DILocation(line: 288, column: 12, scope: !19901, inlinedAt: !19747)
!19968 = !DILocation(line: 288, column: 9, scope: !19901, inlinedAt: !19747)
!19969 = !DILocation(line: 290, column: 27, scope: !19901, inlinedAt: !19747)
!19970 = !DILocation(line: 290, column: 15, scope: !19901, inlinedAt: !19747)
!19971 = !DILocation(line: 290, column: 36, scope: !19901, inlinedAt: !19747)
!19972 = !DILocation(line: 290, column: 12, scope: !19901, inlinedAt: !19747)
!19973 = !DILocation(line: 290, column: 9, scope: !19901, inlinedAt: !19747)
!19974 = !DILocation(line: 292, column: 27, scope: !19901, inlinedAt: !19747)
!19975 = !DILocation(line: 292, column: 15, scope: !19901, inlinedAt: !19747)
!19976 = !DILocation(line: 292, column: 36, scope: !19901, inlinedAt: !19747)
!19977 = !DILocation(line: 292, column: 12, scope: !19901, inlinedAt: !19747)
!19978 = !DILocation(line: 292, column: 9, scope: !19901, inlinedAt: !19747)
!19979 = !DILocation(line: 294, column: 27, scope: !19901, inlinedAt: !19747)
!19980 = !DILocation(line: 294, column: 15, scope: !19901, inlinedAt: !19747)
!19981 = !DILocation(line: 294, column: 36, scope: !19901, inlinedAt: !19747)
!19982 = !DILocation(line: 294, column: 12, scope: !19901, inlinedAt: !19747)
!19983 = !DILocation(line: 294, column: 9, scope: !19901, inlinedAt: !19747)
!19984 = !DILocation(line: 296, column: 27, scope: !19901, inlinedAt: !19747)
!19985 = !DILocation(line: 296, column: 15, scope: !19901, inlinedAt: !19747)
!19986 = !DILocation(line: 296, column: 36, scope: !19901, inlinedAt: !19747)
!19987 = !DILocation(line: 296, column: 12, scope: !19901, inlinedAt: !19747)
!19988 = !DILocation(line: 296, column: 9, scope: !19901, inlinedAt: !19747)
!19989 = !DILocation(line: 298, column: 27, scope: !19901, inlinedAt: !19747)
!19990 = !DILocation(line: 298, column: 15, scope: !19901, inlinedAt: !19747)
!19991 = !DILocation(line: 298, column: 12, scope: !19901, inlinedAt: !19747)
!19992 = !DILocation(line: 299, column: 15, scope: !19901, inlinedAt: !19747)
!19993 = !DILocation(line: 299, column: 12, scope: !19901, inlinedAt: !19747)
!19994 = !DILocation(line: 300, column: 14, scope: !19901, inlinedAt: !19747)
!19995 = !DILocation(line: 30, column: 46, scope: !19804, inlinedAt: !19996)
!19996 = distinct !DILocation(line: 300, column: 14, scope: !19901, inlinedAt: !19747)
!19997 = !DILocation(line: 30, column: 56, scope: !19804, inlinedAt: !19996)
!19998 = !DILocation(line: 32, column: 13, scope: !19804, inlinedAt: !19996)
!19999 = !DILocation(line: 32, column: 18, scope: !19804, inlinedAt: !19996)
!20000 = !DILocation(line: 32, column: 15, scope: !19804, inlinedAt: !19996)
!20001 = !DILocation(line: 32, column: 24, scope: !19804, inlinedAt: !19996)
!20002 = !DILocation(line: 32, column: 35, scope: !19804, inlinedAt: !19996)
!20003 = !DILocation(line: 32, column: 33, scope: !19804, inlinedAt: !19996)
!20004 = !DILocation(line: 32, column: 26, scope: !19804, inlinedAt: !19996)
!20005 = !DILocation(line: 32, column: 21, scope: !19804, inlinedAt: !19996)
!20006 = !DILocation(line: 300, column: 12, scope: !19901, inlinedAt: !19747)
!20007 = !DILocation(line: 301, column: 15, scope: !19901, inlinedAt: !19747)
!20008 = !DILocation(line: 301, column: 12, scope: !19901, inlinedAt: !19747)
!20009 = !DILocation(line: 302, column: 15, scope: !19901, inlinedAt: !19747)
!20010 = !DILocation(line: 302, column: 12, scope: !19901, inlinedAt: !19747)
!20011 = !DILocation(line: 303, column: 5, scope: !19901, inlinedAt: !19747)
!20012 = !DILocation(line: 307, column: 21, scope: !19743, inlinedAt: !19747)
!20013 = !DILocation(line: 307, column: 8, scope: !19743, inlinedAt: !19747)
!20014 = !DILocation(line: 308, column: 21, scope: !19743, inlinedAt: !19747)
!20015 = !DILocation(line: 308, column: 8, scope: !19743, inlinedAt: !19747)
!20016 = !DILocation(line: 309, column: 11, scope: !19743, inlinedAt: !19747)
!20017 = !DILocation(line: 309, column: 8, scope: !19743, inlinedAt: !19747)
!20018 = !DILocation(line: 310, column: 11, scope: !19743, inlinedAt: !19747)
!20019 = !DILocation(line: 310, column: 8, scope: !19743, inlinedAt: !19747)
!20020 = !DILocation(line: 311, column: 17, scope: !19743, inlinedAt: !19747)
!20021 = !DILocalVariable(name: "k", arg: 1, scope: !20022, file: !2979, line: 57, type: !2975)
!20022 = distinct !DISubprogram(name: "fmix64", scope: !2979, file: !2979, line: 57, type: !20023, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2968, retainedNodes: !74)
!20023 = !DISubroutineType(types: !20024)
!20024 = !{!2975, !2975}
!20025 = !DILocation(line: 57, column: 46, scope: !20022, inlinedAt: !20026)
!20026 = distinct !DILocation(line: 311, column: 10, scope: !19743, inlinedAt: !19747)
!20027 = !DILocation(line: 59, column: 10, scope: !20022, inlinedAt: !20026)
!20028 = !DILocation(line: 59, column: 12, scope: !20022, inlinedAt: !20026)
!20029 = !DILocation(line: 59, column: 7, scope: !20022, inlinedAt: !20026)
!20030 = !DILocation(line: 60, column: 7, scope: !20022, inlinedAt: !20026)
!20031 = !DILocation(line: 61, column: 10, scope: !20022, inlinedAt: !20026)
!20032 = !DILocation(line: 61, column: 12, scope: !20022, inlinedAt: !20026)
!20033 = !DILocation(line: 61, column: 7, scope: !20022, inlinedAt: !20026)
!20034 = !DILocation(line: 62, column: 7, scope: !20022, inlinedAt: !20026)
!20035 = !DILocation(line: 63, column: 10, scope: !20022, inlinedAt: !20026)
!20036 = !DILocation(line: 63, column: 12, scope: !20022, inlinedAt: !20026)
!20037 = !DILocation(line: 63, column: 7, scope: !20022, inlinedAt: !20026)
!20038 = !DILocation(line: 64, column: 12, scope: !20022, inlinedAt: !20026)
!20039 = !DILocation(line: 311, column: 8, scope: !19743, inlinedAt: !19747)
!20040 = !DILocation(line: 312, column: 17, scope: !19743, inlinedAt: !19747)
!20041 = !DILocation(line: 57, column: 46, scope: !20022, inlinedAt: !20042)
!20042 = distinct !DILocation(line: 312, column: 10, scope: !19743, inlinedAt: !19747)
!20043 = !DILocation(line: 59, column: 10, scope: !20022, inlinedAt: !20042)
!20044 = !DILocation(line: 59, column: 12, scope: !20022, inlinedAt: !20042)
!20045 = !DILocation(line: 59, column: 7, scope: !20022, inlinedAt: !20042)
!20046 = !DILocation(line: 60, column: 7, scope: !20022, inlinedAt: !20042)
!20047 = !DILocation(line: 61, column: 10, scope: !20022, inlinedAt: !20042)
!20048 = !DILocation(line: 61, column: 12, scope: !20022, inlinedAt: !20042)
!20049 = !DILocation(line: 61, column: 7, scope: !20022, inlinedAt: !20042)
!20050 = !DILocation(line: 62, column: 7, scope: !20022, inlinedAt: !20042)
!20051 = !DILocation(line: 63, column: 10, scope: !20022, inlinedAt: !20042)
!20052 = !DILocation(line: 63, column: 12, scope: !20022, inlinedAt: !20042)
!20053 = !DILocation(line: 63, column: 7, scope: !20022, inlinedAt: !20042)
!20054 = !DILocation(line: 64, column: 12, scope: !20022, inlinedAt: !20042)
!20055 = !DILocation(line: 312, column: 8, scope: !19743, inlinedAt: !19747)
!20056 = !DILocation(line: 313, column: 11, scope: !19743, inlinedAt: !19747)
!20057 = !DILocation(line: 313, column: 8, scope: !19743, inlinedAt: !19747)
!20058 = !DILocation(line: 314, column: 11, scope: !19743, inlinedAt: !19747)
!20059 = !DILocation(line: 314, column: 8, scope: !19743, inlinedAt: !19747)
!20060 = !DILocation(line: 315, column: 29, scope: !19743, inlinedAt: !19747)
!20061 = !DILocation(line: 315, column: 19, scope: !19743, inlinedAt: !19747)
!20062 = !DILocation(line: 315, column: 27, scope: !19743, inlinedAt: !19747)
!20063 = !DILocation(line: 316, column: 29, scope: !19743, inlinedAt: !19747)
!20064 = !DILocation(line: 316, column: 19, scope: !19743, inlinedAt: !19747)
!20065 = !DILocation(line: 316, column: 5, scope: !19743, inlinedAt: !19747)
!20066 = !DILocation(line: 316, column: 27, scope: !19743, inlinedAt: !19747)
!20067 = !DILocation(line: 328, column: 26, scope: !19728)
!20068 = !DILocation(line: 328, column: 12, scope: !19728)
!20069 = !DILocation(line: 328, column: 5, scope: !19728)
!20070 = distinct !DISubprogram(name: "murmur3_set_seed", scope: !2979, file: !2979, line: 343, type: !20071, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2968, retainedNodes: !74)
!20071 = !DISubroutineType(types: !20072)
!20072 = !{null, !2956}
!20073 = !DILocalVariable(name: "seed", arg: 1, scope: !20070, file: !2979, line: 343, type: !2956)
!20074 = !DILocation(line: 343, column: 33, scope: !20070)
!20075 = !DILocation(line: 345, column: 18, scope: !20070)
!20076 = !DILocation(line: 345, column: 16, scope: !20070)
!20077 = !DILocation(line: 346, column: 1, scope: !20070)
!20078 = distinct !DISubprogram(name: "reallocarray", scope: !20079, file: !20079, line: 45, type: !20080, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3066, retainedNodes: !74)
!20079 = !DIFile(filename: "common/reallocarray.c", directory: "/home/raj/lwan", checksumkind: CSK_MD5, checksum: "72caf594d7fe0d89f4073c86d2b69ce6")
!20080 = !DISubroutineType(types: !20081)
!20081 = !{!5, !5, !6, !6}
!20082 = !DILocalVariable(name: "optr", arg: 1, scope: !20078, file: !20079, line: 45, type: !5)
!20083 = !DILocation(line: 45, column: 20, scope: !20078)
!20084 = !DILocalVariable(name: "nmemb", arg: 2, scope: !20078, file: !20079, line: 45, type: !6)
!20085 = !DILocation(line: 45, column: 33, scope: !20078)
!20086 = !DILocalVariable(name: "size", arg: 3, scope: !20078, file: !20079, line: 45, type: !6)
!20087 = !DILocation(line: 45, column: 47, scope: !20078)
!20088 = !DILocalVariable(name: "total_size", scope: !20078, file: !20079, line: 47, type: !6)
!20089 = !DILocation(line: 47, column: 12, scope: !20078)
!20090 = !DILocation(line: 48, column: 9, scope: !20091)
!20091 = distinct !DILexicalBlock(scope: !20078, file: !20079, line: 48, column: 9)
!20092 = !DILocation(line: 48, column: 9, scope: !20078)
!20093 = !DILocation(line: 49, column: 9, scope: !20094)
!20094 = distinct !DILexicalBlock(scope: !20091, file: !20079, line: 48, column: 61)
!20095 = !DILocation(line: 49, column: 15, scope: !20094)
!20096 = !DILocation(line: 50, column: 9, scope: !20094)
!20097 = !DILocation(line: 52, column: 20, scope: !20078)
!20098 = !DILocation(line: 52, column: 26, scope: !20078)
!20099 = !DILocation(line: 52, column: 12, scope: !20078)
!20100 = !DILocation(line: 52, column: 5, scope: !20078)
!20101 = !DILocation(line: 53, column: 1, scope: !20078)
!20102 = distinct !DISubprogram(name: "umull_overflow", scope: !20079, file: !20079, line: 33, type: !20103, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3066, retainedNodes: !74)
!20103 = !DISubroutineType(types: !20104)
!20104 = !{!341, !6, !6, !62}
!20105 = !DILocalVariable(name: "a", arg: 1, scope: !20102, file: !20079, line: 33, type: !6)
!20106 = !DILocation(line: 33, column: 42, scope: !20102)
!20107 = !DILocalVariable(name: "b", arg: 2, scope: !20102, file: !20079, line: 33, type: !6)
!20108 = !DILocation(line: 33, column: 52, scope: !20102)
!20109 = !DILocalVariable(name: "out", arg: 3, scope: !20102, file: !20079, line: 33, type: !62)
!20110 = !DILocation(line: 33, column: 63, scope: !20102)
!20111 = !DILocation(line: 35, column: 10, scope: !20112)
!20112 = distinct !DILexicalBlock(scope: !20102, file: !20079, line: 35, column: 9)
!20113 = !DILocation(line: 35, column: 12, scope: !20112)
!20114 = !DILocation(line: 35, column: 31, scope: !20112)
!20115 = !DILocation(line: 35, column: 34, scope: !20112)
!20116 = !DILocation(line: 35, column: 36, scope: !20112)
!20117 = !DILocation(line: 35, column: 56, scope: !20112)
!20118 = !DILocation(line: 35, column: 59, scope: !20112)
!20119 = !DILocation(line: 35, column: 61, scope: !20112)
!20120 = !DILocation(line: 35, column: 65, scope: !20112)
!20121 = !DILocation(line: 35, column: 79, scope: !20112)
!20122 = !DILocation(line: 35, column: 77, scope: !20112)
!20123 = !DILocation(line: 35, column: 83, scope: !20112)
!20124 = !DILocation(line: 35, column: 81, scope: !20112)
!20125 = !DILocation(line: 35, column: 9, scope: !20102)
!20126 = !DILocation(line: 36, column: 9, scope: !20112)
!20127 = !DILocation(line: 37, column: 12, scope: !20102)
!20128 = !DILocation(line: 37, column: 16, scope: !20102)
!20129 = !DILocation(line: 37, column: 14, scope: !20102)
!20130 = !DILocation(line: 37, column: 6, scope: !20102)
!20131 = !DILocation(line: 37, column: 10, scope: !20102)
!20132 = !DILocation(line: 38, column: 5, scope: !20102)
!20133 = !DILocation(line: 39, column: 1, scope: !20102)
!20134 = distinct !DISubprogram(name: "realpathat2", scope: !2982, file: !2982, line: 38, type: !20135, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3069, retainedNodes: !74)
!20135 = !DISubroutineType(types: !20136)
!20136 = !{!61, !37, !61, !480, !61, !20137}
!20137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20138, size: 64)
!20138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2123, line: 26, size: 1152, elements: !20139)
!20139 = !{!20140, !20141, !20142, !20143, !20144, !20145, !20146, !20147, !20148, !20149, !20150, !20151, !20156, !20157, !20158}
!20140 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !20138, file: !2123, line: 31, baseType: !2126, size: 64)
!20141 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !20138, file: !2123, line: 36, baseType: !2128, size: 64, offset: 64)
!20142 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !20138, file: !2123, line: 44, baseType: !2130, size: 64, offset: 128)
!20143 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !20138, file: !2123, line: 45, baseType: !2132, size: 32, offset: 192)
!20144 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !20138, file: !2123, line: 47, baseType: !2134, size: 32, offset: 224)
!20145 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !20138, file: !2123, line: 48, baseType: !2136, size: 32, offset: 256)
!20146 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !20138, file: !2123, line: 50, baseType: !37, size: 32, offset: 288)
!20147 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !20138, file: !2123, line: 52, baseType: !2126, size: 64, offset: 320)
!20148 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !20138, file: !2123, line: 57, baseType: !463, size: 64, offset: 384)
!20149 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !20138, file: !2123, line: 61, baseType: !2141, size: 64, offset: 448)
!20150 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !20138, file: !2123, line: 63, baseType: !2143, size: 64, offset: 512)
!20151 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !20138, file: !2123, line: 74, baseType: !20152, size: 128, offset: 576)
!20152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2146, line: 11, size: 128, elements: !20153)
!20153 = !{!20154, !20155}
!20154 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !20152, file: !2146, line: 16, baseType: !324, size: 64)
!20155 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !20152, file: !2146, line: 21, baseType: !2150, size: 64, offset: 64)
!20156 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !20138, file: !2123, line: 75, baseType: !20152, size: 128, offset: 704)
!20157 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !20138, file: !2123, line: 76, baseType: !20152, size: 128, offset: 832)
!20158 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !20138, file: !2123, line: 89, baseType: !2154, size: 192, offset: 960)
!20159 = !DILocalVariable(name: "dirfd", arg: 1, scope: !20134, file: !2982, line: 38, type: !37)
!20160 = !DILocation(line: 38, column: 17, scope: !20134)
!20161 = !DILocalVariable(name: "dirfdpath", arg: 2, scope: !20134, file: !2982, line: 38, type: !61)
!20162 = !DILocation(line: 38, column: 30, scope: !20134)
!20163 = !DILocalVariable(name: "name", arg: 3, scope: !20134, file: !2982, line: 38, type: !480)
!20164 = !DILocation(line: 38, column: 53, scope: !20134)
!20165 = !DILocalVariable(name: "resolved", arg: 4, scope: !20134, file: !2982, line: 38, type: !61)
!20166 = !DILocation(line: 38, column: 65, scope: !20134)
!20167 = !DILocalVariable(name: "st", arg: 5, scope: !20134, file: !2982, line: 39, type: !20137)
!20168 = !DILocation(line: 39, column: 22, scope: !20134)
!20169 = !DILocalVariable(name: "rpath", scope: !20134, file: !2982, line: 41, type: !61)
!20170 = !DILocation(line: 41, column: 11, scope: !20134)
!20171 = !DILocalVariable(name: "dest", scope: !20134, file: !2982, line: 41, type: !61)
!20172 = !DILocation(line: 41, column: 19, scope: !20134)
!20173 = !DILocalVariable(name: "extra_buf", scope: !20134, file: !2982, line: 41, type: !8448)
!20174 = !DILocation(line: 41, column: 25, scope: !20134)
!20175 = !DILocalVariable(name: "start", scope: !20134, file: !2982, line: 42, type: !480)
!20176 = !DILocation(line: 42, column: 17, scope: !20134)
!20177 = !DILocalVariable(name: "end", scope: !20134, file: !2982, line: 42, type: !480)
!20178 = !DILocation(line: 42, column: 25, scope: !20134)
!20179 = !DILocalVariable(name: "rpath_limit", scope: !20134, file: !2982, line: 42, type: !480)
!20180 = !DILocation(line: 42, column: 31, scope: !20134)
!20181 = !DILocalVariable(name: "num_links", scope: !20134, file: !2982, line: 43, type: !37)
!20182 = !DILocation(line: 43, column: 9, scope: !20134)
!20183 = !DILocalVariable(name: "dirfdlen", scope: !20134, file: !2982, line: 44, type: !1502)
!20184 = !DILocation(line: 44, column: 15, scope: !20134)
!20185 = !DILocalVariable(name: "pathat", scope: !20134, file: !2982, line: 45, type: !61)
!20186 = !DILocation(line: 45, column: 11, scope: !20134)
!20187 = !DILocation(line: 50, column: 9, scope: !20188)
!20188 = distinct !DILexicalBlock(scope: !20134, file: !2982, line: 50, column: 9)
!20189 = !DILocation(line: 50, column: 9, scope: !20134)
!20190 = !DILocation(line: 51, column: 25, scope: !20188)
!20191 = !DILocation(line: 51, column: 31, scope: !20188)
!20192 = !DILocation(line: 51, column: 16, scope: !20188)
!20193 = !DILocation(line: 51, column: 9, scope: !20188)
!20194 = !DILocation(line: 53, column: 9, scope: !20195)
!20195 = distinct !DILexicalBlock(scope: !20134, file: !2982, line: 53, column: 9)
!20196 = !DILocation(line: 53, column: 9, scope: !20134)
!20197 = !DILocation(line: 58, column: 9, scope: !20198)
!20198 = distinct !DILexicalBlock(scope: !20195, file: !2982, line: 53, column: 33)
!20199 = !DILocation(line: 58, column: 15, scope: !20198)
!20200 = !DILocation(line: 59, column: 9, scope: !20198)
!20201 = !DILocation(line: 62, column: 9, scope: !20202)
!20202 = distinct !DILexicalBlock(scope: !20134, file: !2982, line: 62, column: 9)
!20203 = !DILocation(line: 62, column: 17, scope: !20202)
!20204 = !DILocation(line: 62, column: 9, scope: !20134)
!20205 = !DILocation(line: 63, column: 13, scope: !20206)
!20206 = distinct !DILexicalBlock(scope: !20207, file: !2982, line: 63, column: 13)
!20207 = distinct !DILexicalBlock(scope: !20202, file: !2982, line: 62, column: 26)
!20208 = !DILocation(line: 63, column: 13, scope: !20207)
!20209 = !DILocation(line: 64, column: 13, scope: !20206)
!20210 = !DILocation(line: 65, column: 13, scope: !20211)
!20211 = distinct !DILexicalBlock(scope: !20207, file: !2982, line: 65, column: 13)
!20212 = !DILocation(line: 65, column: 13, scope: !20207)
!20213 = !DILocation(line: 66, column: 27, scope: !20211)
!20214 = !DILocation(line: 66, column: 20, scope: !20211)
!20215 = !DILocation(line: 66, column: 13, scope: !20211)
!20216 = !DILocation(line: 67, column: 23, scope: !20207)
!20217 = !DILocation(line: 67, column: 33, scope: !20207)
!20218 = !DILocation(line: 67, column: 16, scope: !20207)
!20219 = !DILocation(line: 67, column: 9, scope: !20207)
!20220 = !DILocation(line: 70, column: 9, scope: !20221)
!20221 = distinct !DILexicalBlock(scope: !20134, file: !2982, line: 70, column: 9)
!20222 = !DILocation(line: 70, column: 9, scope: !20134)
!20223 = !DILocation(line: 71, column: 17, scope: !20224)
!20224 = distinct !DILexicalBlock(scope: !20221, file: !2982, line: 70, column: 28)
!20225 = !DILocation(line: 71, column: 15, scope: !20224)
!20226 = !DILocation(line: 72, column: 13, scope: !20227)
!20227 = distinct !DILexicalBlock(scope: !20224, file: !2982, line: 72, column: 13)
!20228 = !DILocation(line: 72, column: 13, scope: !20224)
!20229 = !DILocation(line: 73, column: 13, scope: !20227)
!20230 = !DILocation(line: 74, column: 5, scope: !20224)
!20231 = !DILocation(line: 75, column: 17, scope: !20221)
!20232 = !DILocation(line: 75, column: 15, scope: !20221)
!20233 = !DILocation(line: 76, column: 19, scope: !20134)
!20234 = !DILocation(line: 76, column: 25, scope: !20134)
!20235 = !DILocation(line: 76, column: 17, scope: !20134)
!20236 = !DILocation(line: 78, column: 12, scope: !20134)
!20237 = !DILocation(line: 78, column: 19, scope: !20134)
!20238 = !DILocation(line: 78, column: 5, scope: !20134)
!20239 = !DILocation(line: 79, column: 22, scope: !20134)
!20240 = !DILocation(line: 79, column: 12, scope: !20134)
!20241 = !DILocation(line: 79, column: 10, scope: !20134)
!20242 = !DILocation(line: 80, column: 16, scope: !20134)
!20243 = !DILocation(line: 80, column: 23, scope: !20134)
!20244 = !DILocation(line: 80, column: 21, scope: !20134)
!20245 = !DILocation(line: 80, column: 14, scope: !20134)
!20246 = !DILocation(line: 82, column: 24, scope: !20247)
!20247 = distinct !DILexicalBlock(scope: !20134, file: !2982, line: 82, column: 5)
!20248 = !DILocation(line: 82, column: 22, scope: !20247)
!20249 = !DILocation(line: 82, column: 16, scope: !20247)
!20250 = !DILocation(line: 82, column: 10, scope: !20247)
!20251 = !DILocation(line: 82, column: 31, scope: !20252)
!20252 = distinct !DILexicalBlock(scope: !20247, file: !2982, line: 82, column: 5)
!20253 = !DILocation(line: 82, column: 30, scope: !20252)
!20254 = !DILocation(line: 82, column: 5, scope: !20247)
!20255 = !DILocalVariable(name: "n", scope: !20256, file: !2982, line: 83, type: !37)
!20256 = distinct !DILexicalBlock(scope: !20252, file: !2982, line: 82, column: 51)
!20257 = !DILocation(line: 83, column: 13, scope: !20256)
!20258 = !DILocation(line: 86, column: 9, scope: !20256)
!20259 = !DILocation(line: 86, column: 17, scope: !20256)
!20260 = !DILocation(line: 86, column: 16, scope: !20256)
!20261 = !DILocation(line: 86, column: 23, scope: !20256)
!20262 = !DILocation(line: 87, column: 13, scope: !20256)
!20263 = distinct !{!20263, !20258, !20264, !3203}
!20264 = !DILocation(line: 87, column: 15, scope: !20256)
!20265 = !DILocation(line: 90, column: 20, scope: !20266)
!20266 = distinct !DILexicalBlock(scope: !20256, file: !2982, line: 90, column: 9)
!20267 = !DILocation(line: 90, column: 18, scope: !20266)
!20268 = !DILocation(line: 90, column: 14, scope: !20266)
!20269 = !DILocation(line: 90, column: 28, scope: !20270)
!20270 = distinct !DILexicalBlock(scope: !20266, file: !2982, line: 90, column: 9)
!20271 = !DILocation(line: 90, column: 27, scope: !20270)
!20272 = !DILocation(line: 90, column: 32, scope: !20270)
!20273 = !DILocation(line: 90, column: 36, scope: !20270)
!20274 = !DILocation(line: 90, column: 35, scope: !20270)
!20275 = !DILocation(line: 90, column: 40, scope: !20270)
!20276 = !DILocation(line: 0, scope: !20270)
!20277 = !DILocation(line: 90, column: 9, scope: !20266)
!20278 = !DILocation(line: 90, column: 48, scope: !20270)
!20279 = !DILocation(line: 90, column: 9, scope: !20270)
!20280 = distinct !{!20280, !20277, !20281, !3203}
!20281 = !DILocation(line: 91, column: 29, scope: !20266)
!20282 = !DILocation(line: 93, column: 13, scope: !20283)
!20283 = distinct !DILexicalBlock(scope: !20256, file: !2982, line: 93, column: 13)
!20284 = !DILocation(line: 93, column: 19, scope: !20283)
!20285 = !DILocation(line: 93, column: 17, scope: !20283)
!20286 = !DILocation(line: 93, column: 25, scope: !20283)
!20287 = !DILocation(line: 93, column: 13, scope: !20256)
!20288 = !DILocation(line: 94, column: 13, scope: !20283)
!20289 = !DILocation(line: 95, column: 18, scope: !20290)
!20290 = distinct !DILexicalBlock(scope: !20283, file: !2982, line: 95, column: 18)
!20291 = !DILocation(line: 95, column: 24, scope: !20290)
!20292 = !DILocation(line: 95, column: 22, scope: !20290)
!20293 = !DILocation(line: 95, column: 30, scope: !20290)
!20294 = !DILocation(line: 95, column: 35, scope: !20290)
!20295 = !DILocation(line: 95, column: 38, scope: !20290)
!20296 = !DILocation(line: 95, column: 47, scope: !20290)
!20297 = !DILocation(line: 95, column: 18, scope: !20283)
!20298 = !DILocation(line: 97, column: 18, scope: !20299)
!20299 = distinct !DILexicalBlock(scope: !20290, file: !2982, line: 97, column: 18)
!20300 = !DILocation(line: 97, column: 24, scope: !20299)
!20301 = !DILocation(line: 97, column: 22, scope: !20299)
!20302 = !DILocation(line: 97, column: 30, scope: !20299)
!20303 = !DILocation(line: 97, column: 35, scope: !20299)
!20304 = !DILocation(line: 97, column: 38, scope: !20299)
!20305 = !DILocation(line: 97, column: 47, scope: !20299)
!20306 = !DILocation(line: 97, column: 54, scope: !20299)
!20307 = !DILocation(line: 97, column: 57, scope: !20299)
!20308 = !DILocation(line: 97, column: 66, scope: !20299)
!20309 = !DILocation(line: 97, column: 18, scope: !20290)
!20310 = !DILocation(line: 99, column: 17, scope: !20311)
!20311 = distinct !DILexicalBlock(scope: !20312, file: !2982, line: 99, column: 17)
!20312 = distinct !DILexicalBlock(scope: !20299, file: !2982, line: 97, column: 74)
!20313 = !DILocation(line: 99, column: 24, scope: !20311)
!20314 = !DILocation(line: 99, column: 30, scope: !20311)
!20315 = !DILocation(line: 99, column: 22, scope: !20311)
!20316 = !DILocation(line: 99, column: 17, scope: !20312)
!20317 = !DILocation(line: 100, column: 17, scope: !20311)
!20318 = !DILocation(line: 100, column: 25, scope: !20311)
!20319 = !DILocation(line: 100, column: 24, scope: !20311)
!20320 = !DILocation(line: 100, column: 37, scope: !20311)
!20321 = distinct !{!20321, !20317, !20322, !3203}
!20322 = !DILocation(line: 100, column: 44, scope: !20311)
!20323 = !DILocation(line: 101, column: 9, scope: !20312)
!20324 = !DILocalVariable(name: "new_size", scope: !20325, file: !2982, line: 102, type: !6)
!20325 = distinct !DILexicalBlock(scope: !20299, file: !2982, line: 101, column: 16)
!20326 = !DILocation(line: 102, column: 20, scope: !20325)
!20327 = !DILocation(line: 104, column: 17, scope: !20328)
!20328 = distinct !DILexicalBlock(scope: !20325, file: !2982, line: 104, column: 17)
!20329 = !DILocation(line: 104, column: 26, scope: !20328)
!20330 = !DILocation(line: 104, column: 17, scope: !20325)
!20331 = !DILocation(line: 105, column: 22, scope: !20328)
!20332 = !DILocation(line: 105, column: 25, scope: !20328)
!20333 = !DILocation(line: 105, column: 17, scope: !20328)
!20334 = !DILocation(line: 107, column: 17, scope: !20335)
!20335 = distinct !DILexicalBlock(scope: !20325, file: !2982, line: 107, column: 17)
!20336 = !DILocation(line: 107, column: 25, scope: !20335)
!20337 = !DILocation(line: 107, column: 31, scope: !20335)
!20338 = !DILocation(line: 107, column: 29, scope: !20335)
!20339 = !DILocation(line: 107, column: 22, scope: !20335)
!20340 = !DILocation(line: 107, column: 41, scope: !20335)
!20341 = !DILocation(line: 107, column: 38, scope: !20335)
!20342 = !DILocation(line: 107, column: 17, scope: !20325)
!20343 = !DILocalVariable(name: "dest_offset", scope: !20344, file: !2982, line: 108, type: !1502)
!20344 = distinct !DILexicalBlock(scope: !20335, file: !2982, line: 107, column: 54)
!20345 = !DILocation(line: 108, column: 27, scope: !20344)
!20346 = !DILocation(line: 108, column: 41, scope: !20344)
!20347 = !DILocation(line: 108, column: 48, scope: !20344)
!20348 = !DILocation(line: 108, column: 46, scope: !20344)
!20349 = !DILocalVariable(name: "new_rpath", scope: !20344, file: !2982, line: 109, type: !61)
!20350 = !DILocation(line: 109, column: 23, scope: !20344)
!20351 = !DILocation(line: 111, column: 21, scope: !20352)
!20352 = distinct !DILexicalBlock(scope: !20344, file: !2982, line: 111, column: 21)
!20353 = !DILocation(line: 111, column: 21, scope: !20344)
!20354 = !DILocation(line: 112, column: 21, scope: !20355)
!20355 = distinct !DILexicalBlock(scope: !20352, file: !2982, line: 111, column: 49)
!20356 = !DILocation(line: 112, column: 27, scope: !20355)
!20357 = !DILocation(line: 113, column: 25, scope: !20358)
!20358 = distinct !DILexicalBlock(scope: !20355, file: !2982, line: 113, column: 25)
!20359 = !DILocation(line: 113, column: 32, scope: !20358)
!20360 = !DILocation(line: 113, column: 38, scope: !20358)
!20361 = !DILocation(line: 113, column: 30, scope: !20358)
!20362 = !DILocation(line: 113, column: 25, scope: !20355)
!20363 = !DILocation(line: 114, column: 29, scope: !20358)
!20364 = !DILocation(line: 114, column: 25, scope: !20358)
!20365 = !DILocation(line: 115, column: 22, scope: !20355)
!20366 = !DILocation(line: 115, column: 27, scope: !20355)
!20367 = !DILocation(line: 116, column: 21, scope: !20355)
!20368 = !DILocation(line: 119, column: 37, scope: !20344)
!20369 = !DILocation(line: 119, column: 51, scope: !20344)
!20370 = !DILocation(line: 119, column: 49, scope: !20344)
!20371 = !DILocation(line: 119, column: 26, scope: !20344)
!20372 = !DILocation(line: 120, column: 21, scope: !20373)
!20373 = distinct !DILexicalBlock(scope: !20344, file: !2982, line: 120, column: 21)
!20374 = !DILocation(line: 120, column: 27, scope: !20373)
!20375 = !DILocation(line: 120, column: 25, scope: !20373)
!20376 = !DILocation(line: 120, column: 33, scope: !20373)
!20377 = !DILocation(line: 120, column: 37, scope: !20373)
!20378 = !DILocation(line: 120, column: 21, scope: !20344)
!20379 = !DILocation(line: 121, column: 42, scope: !20373)
!20380 = !DILocation(line: 121, column: 48, scope: !20373)
!20381 = !DILocation(line: 121, column: 46, scope: !20373)
!20382 = !DILocation(line: 121, column: 54, scope: !20373)
!20383 = !DILocation(line: 121, column: 30, scope: !20373)
!20384 = !DILocation(line: 121, column: 21, scope: !20373)
!20385 = !DILocation(line: 123, column: 30, scope: !20373)
!20386 = !DILocation(line: 124, column: 46, scope: !20344)
!20387 = !DILocation(line: 124, column: 53, scope: !20344)
!20388 = !DILocation(line: 124, column: 38, scope: !20344)
!20389 = !DILocation(line: 124, column: 27, scope: !20344)
!20390 = !DILocation(line: 125, column: 21, scope: !20391)
!20391 = distinct !DILexicalBlock(scope: !20344, file: !2982, line: 125, column: 21)
!20392 = !DILocation(line: 125, column: 21, scope: !20344)
!20393 = !DILocation(line: 126, column: 21, scope: !20391)
!20394 = !DILocation(line: 127, column: 25, scope: !20344)
!20395 = !DILocation(line: 127, column: 23, scope: !20344)
!20396 = !DILocation(line: 128, column: 31, scope: !20344)
!20397 = !DILocation(line: 128, column: 39, scope: !20344)
!20398 = !DILocation(line: 128, column: 37, scope: !20344)
!20399 = !DILocation(line: 128, column: 29, scope: !20344)
!20400 = !DILocation(line: 130, column: 24, scope: !20344)
!20401 = !DILocation(line: 130, column: 32, scope: !20344)
!20402 = !DILocation(line: 130, column: 30, scope: !20344)
!20403 = !DILocation(line: 130, column: 22, scope: !20344)
!20404 = !DILocation(line: 131, column: 13, scope: !20344)
!20405 = !DILocation(line: 133, column: 28, scope: !20325)
!20406 = !DILocation(line: 133, column: 34, scope: !20325)
!20407 = !DILocation(line: 133, column: 50, scope: !20325)
!20408 = !DILocation(line: 133, column: 56, scope: !20325)
!20409 = !DILocation(line: 133, column: 54, scope: !20325)
!20410 = !DILocation(line: 133, column: 20, scope: !20325)
!20411 = !DILocation(line: 133, column: 18, scope: !20325)
!20412 = !DILocation(line: 134, column: 14, scope: !20325)
!20413 = !DILocation(line: 134, column: 19, scope: !20325)
!20414 = !DILocation(line: 136, column: 17, scope: !20415)
!20415 = distinct !DILexicalBlock(scope: !20325, file: !2982, line: 136, column: 17)
!20416 = !DILocation(line: 136, column: 17, scope: !20325)
!20417 = !DILocation(line: 137, column: 26, scope: !20418)
!20418 = distinct !DILexicalBlock(scope: !20415, file: !2982, line: 136, column: 71)
!20419 = !DILocation(line: 137, column: 34, scope: !20418)
!20420 = !DILocation(line: 137, column: 32, scope: !20418)
!20421 = !DILocation(line: 137, column: 43, scope: !20418)
!20422 = !DILocation(line: 137, column: 24, scope: !20418)
!20423 = !DILocation(line: 138, column: 22, scope: !20424)
!20424 = distinct !DILexicalBlock(scope: !20418, file: !2982, line: 138, column: 21)
!20425 = !DILocation(line: 138, column: 21, scope: !20424)
!20426 = !DILocation(line: 138, column: 29, scope: !20424)
!20427 = !DILocation(line: 138, column: 21, scope: !20418)
!20428 = !DILocation(line: 139, column: 30, scope: !20424)
!20429 = !DILocation(line: 139, column: 28, scope: !20424)
!20430 = !DILocation(line: 139, column: 21, scope: !20424)
!20431 = !DILocation(line: 140, column: 13, scope: !20418)
!20432 = !DILocation(line: 141, column: 26, scope: !20433)
!20433 = distinct !DILexicalBlock(scope: !20415, file: !2982, line: 140, column: 20)
!20434 = !DILocation(line: 141, column: 24, scope: !20433)
!20435 = !DILocation(line: 144, column: 17, scope: !20436)
!20436 = distinct !DILexicalBlock(scope: !20325, file: !2982, line: 144, column: 17)
!20437 = !DILocation(line: 144, column: 17, scope: !20325)
!20438 = !DILocation(line: 145, column: 17, scope: !20436)
!20439 = !DILocation(line: 147, column: 17, scope: !20440)
!20440 = distinct !DILexicalBlock(scope: !20325, file: !2982, line: 147, column: 17)
!20441 = !DILocation(line: 147, column: 17, scope: !20325)
!20442 = !DILocalVariable(name: "buf", scope: !20443, file: !2982, line: 148, type: !8448)
!20443 = distinct !DILexicalBlock(scope: !20440, file: !2982, line: 147, column: 49)
!20444 = !DILocation(line: 148, column: 22, scope: !20443)
!20445 = !DILocalVariable(name: "len", scope: !20443, file: !2982, line: 149, type: !6)
!20446 = !DILocation(line: 149, column: 24, scope: !20443)
!20447 = !DILocation(line: 151, column: 21, scope: !20448)
!20448 = distinct !DILexicalBlock(scope: !20443, file: !2982, line: 151, column: 21)
!20449 = !DILocation(line: 151, column: 21, scope: !20443)
!20450 = !DILocation(line: 152, column: 21, scope: !20451)
!20451 = distinct !DILexicalBlock(scope: !20448, file: !2982, line: 151, column: 58)
!20452 = !DILocation(line: 152, column: 27, scope: !20451)
!20453 = !DILocation(line: 153, column: 21, scope: !20451)
!20454 = !DILocation(line: 156, column: 37, scope: !20443)
!20455 = !DILocation(line: 156, column: 44, scope: !20443)
!20456 = !DILocation(line: 156, column: 52, scope: !20443)
!20457 = !DILocation(line: 156, column: 26, scope: !20443)
!20458 = !DILocation(line: 156, column: 21, scope: !20443)
!20459 = !DILocation(line: 156, column: 19, scope: !20443)
!20460 = !DILocation(line: 157, column: 21, scope: !20461)
!20461 = distinct !DILexicalBlock(scope: !20443, file: !2982, line: 157, column: 21)
!20462 = !DILocation(line: 157, column: 21, scope: !20443)
!20463 = !DILocation(line: 158, column: 21, scope: !20461)
!20464 = !DILocation(line: 159, column: 21, scope: !20443)
!20465 = !DILocation(line: 159, column: 17, scope: !20443)
!20466 = !DILocation(line: 159, column: 24, scope: !20443)
!20467 = !DILocation(line: 161, column: 30, scope: !20443)
!20468 = !DILocation(line: 161, column: 23, scope: !20443)
!20469 = !DILocation(line: 161, column: 21, scope: !20443)
!20470 = !DILocation(line: 162, column: 21, scope: !20471)
!20471 = distinct !DILexicalBlock(scope: !20443, file: !2982, line: 162, column: 21)
!20472 = !DILocation(line: 162, column: 21, scope: !20443)
!20473 = !DILocation(line: 163, column: 21, scope: !20474)
!20474 = distinct !DILexicalBlock(scope: !20471, file: !2982, line: 162, column: 75)
!20475 = !DILocation(line: 163, column: 27, scope: !20474)
!20476 = !DILocation(line: 164, column: 21, scope: !20474)
!20477 = !DILocation(line: 168, column: 36, scope: !20443)
!20478 = !DILocation(line: 168, column: 26, scope: !20443)
!20479 = !DILocation(line: 168, column: 40, scope: !20443)
!20480 = !DILocation(line: 168, column: 45, scope: !20443)
!20481 = !DILocation(line: 168, column: 49, scope: !20443)
!20482 = !DILocation(line: 168, column: 17, scope: !20443)
!20483 = !DILocation(line: 169, column: 23, scope: !20443)
!20484 = !DILocation(line: 169, column: 54, scope: !20443)
!20485 = !DILocation(line: 169, column: 46, scope: !20443)
!20486 = !DILocation(line: 169, column: 21, scope: !20443)
!20487 = !DILocation(line: 171, column: 21, scope: !20488)
!20488 = distinct !DILexicalBlock(scope: !20443, file: !2982, line: 171, column: 21)
!20489 = !DILocation(line: 171, column: 28, scope: !20488)
!20490 = !DILocation(line: 171, column: 21, scope: !20443)
!20491 = !DILocation(line: 172, column: 28, scope: !20488)
!20492 = !DILocation(line: 172, column: 34, scope: !20488)
!20493 = !DILocation(line: 172, column: 26, scope: !20488)
!20494 = !DILocation(line: 172, column: 21, scope: !20488)
!20495 = !DILocation(line: 175, column: 25, scope: !20496)
!20496 = distinct !DILexicalBlock(scope: !20488, file: !2982, line: 175, column: 25)
!20497 = !DILocation(line: 175, column: 32, scope: !20496)
!20498 = !DILocation(line: 175, column: 38, scope: !20496)
!20499 = !DILocation(line: 175, column: 30, scope: !20496)
!20500 = !DILocation(line: 175, column: 25, scope: !20488)
!20501 = !DILocation(line: 176, column: 25, scope: !20496)
!20502 = !DILocation(line: 176, column: 33, scope: !20496)
!20503 = !DILocation(line: 176, column: 32, scope: !20496)
!20504 = !DILocation(line: 176, column: 45, scope: !20496)
!20505 = distinct !{!20505, !20501, !20506, !3203}
!20506 = !DILocation(line: 176, column: 52, scope: !20496)
!20507 = !DILocation(line: 177, column: 13, scope: !20443)
!20508 = !DILocation(line: 177, column: 24, scope: !20509)
!20509 = distinct !DILexicalBlock(scope: !20440, file: !2982, line: 177, column: 24)
!20510 = !DILocation(line: 0, scope: !20509)
!20511 = !DILocation(line: 177, column: 24, scope: !20440)
!20512 = !DILocation(line: 178, column: 17, scope: !20513)
!20513 = distinct !DILexicalBlock(scope: !20509, file: !2982, line: 177, column: 73)
!20514 = !DILocation(line: 178, column: 23, scope: !20513)
!20515 = !DILocation(line: 179, column: 17, scope: !20513)
!20516 = !DILocation(line: 182, column: 5, scope: !20256)
!20517 = !DILocation(line: 82, column: 46, scope: !20252)
!20518 = !DILocation(line: 82, column: 44, scope: !20252)
!20519 = !DILocation(line: 82, column: 5, scope: !20252)
!20520 = distinct !{!20520, !20254, !20521, !3203}
!20521 = !DILocation(line: 182, column: 5, scope: !20247)
!20522 = !DILocation(line: 184, column: 9, scope: !20523)
!20523 = distinct !DILexicalBlock(scope: !20134, file: !2982, line: 184, column: 9)
!20524 = !DILocation(line: 184, column: 16, scope: !20523)
!20525 = !DILocation(line: 184, column: 22, scope: !20523)
!20526 = !DILocation(line: 184, column: 14, scope: !20523)
!20527 = !DILocation(line: 184, column: 26, scope: !20523)
!20528 = !DILocation(line: 184, column: 29, scope: !20523)
!20529 = !DILocation(line: 184, column: 38, scope: !20523)
!20530 = !DILocation(line: 184, column: 9, scope: !20134)
!20531 = !DILocation(line: 185, column: 9, scope: !20523)
!20532 = !DILocation(line: 186, column: 6, scope: !20134)
!20533 = !DILocation(line: 186, column: 11, scope: !20134)
!20534 = !DILocation(line: 188, column: 5, scope: !20535)
!20535 = distinct !DILexicalBlock(scope: !20536, file: !2982, line: 188, column: 5)
!20536 = distinct !DILexicalBlock(scope: !20134, file: !2982, line: 188, column: 5)
!20537 = !DILocation(line: 188, column: 5, scope: !20536)
!20538 = !DILocation(line: 189, column: 12, scope: !20134)
!20539 = !DILocation(line: 189, column: 5, scope: !20134)
!20540 = !DILabel(scope: !20134, name: "error", file: !2982, line: 191)
!20541 = !DILocation(line: 191, column: 3, scope: !20134)
!20542 = !DILocation(line: 192, column: 5, scope: !20543)
!20543 = distinct !DILexicalBlock(scope: !20544, file: !2982, line: 192, column: 5)
!20544 = distinct !DILexicalBlock(scope: !20134, file: !2982, line: 192, column: 5)
!20545 = !DILocation(line: 192, column: 5, scope: !20544)
!20546 = !DILocation(line: 193, column: 9, scope: !20547)
!20547 = distinct !DILexicalBlock(scope: !20134, file: !2982, line: 193, column: 9)
!20548 = !DILocation(line: 193, column: 18, scope: !20547)
!20549 = !DILocation(line: 193, column: 9, scope: !20134)
!20550 = !DILocation(line: 194, column: 14, scope: !20547)
!20551 = !DILocation(line: 194, column: 9, scope: !20547)
!20552 = !DILocation(line: 195, column: 5, scope: !20134)
!20553 = !DILocation(line: 196, column: 1, scope: !20134)
!20554 = distinct !DISubprogram(name: "realpathat", scope: !2982, file: !2982, line: 199, type: !20555, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3069, retainedNodes: !74)
!20555 = !DISubroutineType(types: !20556)
!20556 = !{!61, !37, !61, !480, !61}
!20557 = !DILocalVariable(name: "dirfd", arg: 1, scope: !20554, file: !2982, line: 199, type: !37)
!20558 = !DILocation(line: 199, column: 16, scope: !20554)
!20559 = !DILocalVariable(name: "dirfdpath", arg: 2, scope: !20554, file: !2982, line: 199, type: !61)
!20560 = !DILocation(line: 199, column: 29, scope: !20554)
!20561 = !DILocalVariable(name: "name", arg: 3, scope: !20554, file: !2982, line: 199, type: !480)
!20562 = !DILocation(line: 199, column: 52, scope: !20554)
!20563 = !DILocalVariable(name: "resolved", arg: 4, scope: !20554, file: !2982, line: 199, type: !61)
!20564 = !DILocation(line: 199, column: 64, scope: !20554)
!20565 = !DILocalVariable(name: "st", scope: !20554, file: !2982, line: 201, type: !20138)
!20566 = !DILocation(line: 201, column: 17, scope: !20554)
!20567 = !DILocation(line: 202, column: 24, scope: !20554)
!20568 = !DILocation(line: 202, column: 31, scope: !20554)
!20569 = !DILocation(line: 202, column: 42, scope: !20554)
!20570 = !DILocation(line: 202, column: 48, scope: !20554)
!20571 = !DILocation(line: 202, column: 12, scope: !20554)
!20572 = !DILocation(line: 202, column: 5, scope: !20554)
!20573 = distinct !DISubprogram(name: "sd_listen_fds", scope: !2992, file: !2992, line: 40, type: !20574, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3073, retainedNodes: !74)
!20574 = !DISubroutineType(types: !20575)
!20575 = !{!37, !37}
!20576 = !DILocalVariable(name: "unset_environment", arg: 1, scope: !20573, file: !2992, line: 40, type: !37)
!20577 = !DILocation(line: 40, column: 23, scope: !20573)
!20578 = !DILocalVariable(name: "r", scope: !20573, file: !2992, line: 41, type: !37)
!20579 = !DILocation(line: 41, column: 13, scope: !20573)
!20580 = !DILocalVariable(name: "fd", scope: !20573, file: !2992, line: 41, type: !37)
!20581 = !DILocation(line: 41, column: 16, scope: !20573)
!20582 = !DILocalVariable(name: "e", scope: !20573, file: !2992, line: 42, type: !480)
!20583 = !DILocation(line: 42, column: 21, scope: !20573)
!20584 = !DILocalVariable(name: "p", scope: !20573, file: !2992, line: 43, type: !61)
!20585 = !DILocation(line: 43, column: 15, scope: !20573)
!20586 = !DILocalVariable(name: "l", scope: !20573, file: !2992, line: 44, type: !8)
!20587 = !DILocation(line: 44, column: 23, scope: !20573)
!20588 = !DILocation(line: 46, column: 13, scope: !20573)
!20589 = !DILocation(line: 46, column: 11, scope: !20573)
!20590 = !DILocation(line: 47, column: 14, scope: !20591)
!20591 = distinct !DILexicalBlock(scope: !20573, file: !2992, line: 47, column: 13)
!20592 = !DILocation(line: 47, column: 13, scope: !20573)
!20593 = !DILocation(line: 48, column: 19, scope: !20594)
!20594 = distinct !DILexicalBlock(scope: !20591, file: !2992, line: 47, column: 17)
!20595 = !DILocation(line: 49, column: 17, scope: !20594)
!20596 = !DILocation(line: 52, column: 9, scope: !20573)
!20597 = !DILocation(line: 52, column: 15, scope: !20573)
!20598 = !DILocation(line: 53, column: 21, scope: !20573)
!20599 = !DILocation(line: 53, column: 13, scope: !20573)
!20600 = !DILocation(line: 53, column: 11, scope: !20573)
!20601 = !DILocation(line: 55, column: 13, scope: !20602)
!20602 = distinct !DILexicalBlock(scope: !20573, file: !2992, line: 55, column: 13)
!20603 = !DILocation(line: 55, column: 19, scope: !20602)
!20604 = !DILocation(line: 55, column: 13, scope: !20573)
!20605 = !DILocation(line: 56, column: 22, scope: !20606)
!20606 = distinct !DILexicalBlock(scope: !20602, file: !2992, line: 55, column: 24)
!20607 = !DILocation(line: 56, column: 21, scope: !20606)
!20608 = !DILocation(line: 56, column: 19, scope: !20606)
!20609 = !DILocation(line: 57, column: 17, scope: !20606)
!20610 = !DILocation(line: 60, column: 14, scope: !20611)
!20611 = distinct !DILexicalBlock(scope: !20573, file: !2992, line: 60, column: 13)
!20612 = !DILocation(line: 60, column: 16, scope: !20611)
!20613 = !DILocation(line: 60, column: 19, scope: !20611)
!20614 = !DILocation(line: 60, column: 24, scope: !20611)
!20615 = !DILocation(line: 60, column: 21, scope: !20611)
!20616 = !DILocation(line: 60, column: 26, scope: !20611)
!20617 = !DILocation(line: 60, column: 30, scope: !20611)
!20618 = !DILocation(line: 60, column: 29, scope: !20611)
!20619 = !DILocation(line: 60, column: 32, scope: !20611)
!20620 = !DILocation(line: 60, column: 35, scope: !20611)
!20621 = !DILocation(line: 60, column: 37, scope: !20611)
!20622 = !DILocation(line: 60, column: 13, scope: !20573)
!20623 = !DILocation(line: 61, column: 19, scope: !20624)
!20624 = distinct !DILexicalBlock(scope: !20611, file: !2992, line: 60, column: 43)
!20625 = !DILocation(line: 62, column: 17, scope: !20624)
!20626 = !DILocation(line: 66, column: 13, scope: !20627)
!20627 = distinct !DILexicalBlock(scope: !20573, file: !2992, line: 66, column: 13)
!20628 = !DILocation(line: 66, column: 33, scope: !20627)
!20629 = !DILocation(line: 66, column: 25, scope: !20627)
!20630 = !DILocation(line: 66, column: 22, scope: !20627)
!20631 = !DILocation(line: 66, column: 13, scope: !20573)
!20632 = !DILocation(line: 67, column: 19, scope: !20633)
!20633 = distinct !DILexicalBlock(scope: !20627, file: !2992, line: 66, column: 36)
!20634 = !DILocation(line: 68, column: 17, scope: !20633)
!20635 = !DILocation(line: 71, column: 13, scope: !20573)
!20636 = !DILocation(line: 71, column: 11, scope: !20573)
!20637 = !DILocation(line: 72, column: 14, scope: !20638)
!20638 = distinct !DILexicalBlock(scope: !20573, file: !2992, line: 72, column: 13)
!20639 = !DILocation(line: 72, column: 13, scope: !20573)
!20640 = !DILocation(line: 73, column: 19, scope: !20641)
!20641 = distinct !DILexicalBlock(scope: !20638, file: !2992, line: 72, column: 17)
!20642 = !DILocation(line: 74, column: 17, scope: !20641)
!20643 = !DILocation(line: 77, column: 9, scope: !20573)
!20644 = !DILocation(line: 77, column: 15, scope: !20573)
!20645 = !DILocation(line: 78, column: 21, scope: !20573)
!20646 = !DILocation(line: 78, column: 13, scope: !20573)
!20647 = !DILocation(line: 78, column: 11, scope: !20573)
!20648 = !DILocation(line: 80, column: 13, scope: !20649)
!20649 = distinct !DILexicalBlock(scope: !20573, file: !2992, line: 80, column: 13)
!20650 = !DILocation(line: 80, column: 19, scope: !20649)
!20651 = !DILocation(line: 80, column: 13, scope: !20573)
!20652 = !DILocation(line: 81, column: 22, scope: !20653)
!20653 = distinct !DILexicalBlock(scope: !20649, file: !2992, line: 80, column: 24)
!20654 = !DILocation(line: 81, column: 21, scope: !20653)
!20655 = !DILocation(line: 81, column: 19, scope: !20653)
!20656 = !DILocation(line: 82, column: 17, scope: !20653)
!20657 = !DILocation(line: 85, column: 14, scope: !20658)
!20658 = distinct !DILexicalBlock(scope: !20573, file: !2992, line: 85, column: 13)
!20659 = !DILocation(line: 85, column: 16, scope: !20658)
!20660 = !DILocation(line: 85, column: 19, scope: !20658)
!20661 = !DILocation(line: 85, column: 24, scope: !20658)
!20662 = !DILocation(line: 85, column: 21, scope: !20658)
!20663 = !DILocation(line: 85, column: 26, scope: !20658)
!20664 = !DILocation(line: 85, column: 30, scope: !20658)
!20665 = !DILocation(line: 85, column: 29, scope: !20658)
!20666 = !DILocation(line: 85, column: 13, scope: !20573)
!20667 = !DILocation(line: 86, column: 19, scope: !20668)
!20668 = distinct !DILexicalBlock(scope: !20658, file: !2992, line: 85, column: 33)
!20669 = !DILocation(line: 87, column: 17, scope: !20668)
!20670 = !DILocation(line: 90, column: 17, scope: !20671)
!20671 = distinct !DILexicalBlock(scope: !20573, file: !2992, line: 90, column: 9)
!20672 = !DILocation(line: 90, column: 14, scope: !20671)
!20673 = !DILocation(line: 90, column: 40, scope: !20674)
!20674 = distinct !DILexicalBlock(scope: !20671, file: !2992, line: 90, column: 9)
!20675 = !DILocation(line: 90, column: 73, scope: !20674)
!20676 = !DILocation(line: 90, column: 67, scope: !20674)
!20677 = !DILocation(line: 90, column: 65, scope: !20674)
!20678 = !DILocation(line: 90, column: 43, scope: !20674)
!20679 = !DILocation(line: 90, column: 9, scope: !20671)
!20680 = !DILocalVariable(name: "flags", scope: !20681, file: !2992, line: 91, type: !37)
!20681 = distinct !DILexicalBlock(scope: !20674, file: !2992, line: 90, column: 83)
!20682 = !DILocation(line: 91, column: 21, scope: !20681)
!20683 = !DILocation(line: 93, column: 31, scope: !20681)
!20684 = !DILocation(line: 93, column: 25, scope: !20681)
!20685 = !DILocation(line: 93, column: 23, scope: !20681)
!20686 = !DILocation(line: 94, column: 21, scope: !20687)
!20687 = distinct !DILexicalBlock(scope: !20681, file: !2992, line: 94, column: 21)
!20688 = !DILocation(line: 94, column: 27, scope: !20687)
!20689 = !DILocation(line: 94, column: 21, scope: !20681)
!20690 = !DILocation(line: 95, column: 30, scope: !20691)
!20691 = distinct !DILexicalBlock(scope: !20687, file: !2992, line: 94, column: 32)
!20692 = !DILocation(line: 95, column: 29, scope: !20691)
!20693 = !DILocation(line: 95, column: 27, scope: !20691)
!20694 = !DILocation(line: 96, column: 25, scope: !20691)
!20695 = !DILocation(line: 99, column: 21, scope: !20696)
!20696 = distinct !DILexicalBlock(scope: !20681, file: !2992, line: 99, column: 21)
!20697 = !DILocation(line: 99, column: 27, scope: !20696)
!20698 = !DILocation(line: 99, column: 21, scope: !20681)
!20699 = !DILocation(line: 100, column: 25, scope: !20696)
!20700 = !DILocation(line: 102, column: 27, scope: !20701)
!20701 = distinct !DILexicalBlock(scope: !20681, file: !2992, line: 102, column: 21)
!20702 = !DILocation(line: 102, column: 40, scope: !20701)
!20703 = !DILocation(line: 102, column: 46, scope: !20701)
!20704 = !DILocation(line: 102, column: 21, scope: !20701)
!20705 = !DILocation(line: 102, column: 60, scope: !20701)
!20706 = !DILocation(line: 102, column: 21, scope: !20681)
!20707 = !DILocation(line: 103, column: 30, scope: !20708)
!20708 = distinct !DILexicalBlock(scope: !20701, file: !2992, line: 102, column: 65)
!20709 = !DILocation(line: 103, column: 29, scope: !20708)
!20710 = !DILocation(line: 103, column: 27, scope: !20708)
!20711 = !DILocation(line: 104, column: 25, scope: !20708)
!20712 = !DILocation(line: 106, column: 9, scope: !20681)
!20713 = !DILocation(line: 90, column: 79, scope: !20674)
!20714 = !DILocation(line: 90, column: 9, scope: !20674)
!20715 = distinct !{!20715, !20679, !20716, !3203}
!20716 = !DILocation(line: 106, column: 9, scope: !20671)
!20717 = !DILocation(line: 108, column: 19, scope: !20573)
!20718 = !DILocation(line: 108, column: 13, scope: !20573)
!20719 = !DILocation(line: 108, column: 11, scope: !20573)
!20720 = !DILocation(line: 108, column: 9, scope: !20573)
!20721 = !DILabel(scope: !20573, name: "finish", file: !2992, line: 110)
!20722 = !DILocation(line: 110, column: 1, scope: !20573)
!20723 = !DILocation(line: 111, column: 13, scope: !20724)
!20724 = distinct !DILexicalBlock(scope: !20573, file: !2992, line: 111, column: 13)
!20725 = !DILocation(line: 111, column: 13, scope: !20573)
!20726 = !DILocation(line: 112, column: 17, scope: !20727)
!20727 = distinct !DILexicalBlock(scope: !20724, file: !2992, line: 111, column: 32)
!20728 = !DILocation(line: 113, column: 17, scope: !20727)
!20729 = !DILocation(line: 114, column: 9, scope: !20727)
!20730 = !DILocation(line: 116, column: 16, scope: !20573)
!20731 = !DILocation(line: 116, column: 9, scope: !20573)
!20732 = distinct !DISubprogram(name: "sd_is_fifo", scope: !2992, file: !2992, line: 119, type: !20733, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3073, retainedNodes: !74)
!20733 = !DISubroutineType(types: !20734)
!20734 = !{!37, !37, !480}
!20735 = !DILocalVariable(name: "fd", arg: 1, scope: !20732, file: !2992, line: 119, type: !37)
!20736 = !DILocation(line: 119, column: 20, scope: !20732)
!20737 = !DILocalVariable(name: "path", arg: 2, scope: !20732, file: !2992, line: 119, type: !480)
!20738 = !DILocation(line: 119, column: 36, scope: !20732)
!20739 = !DILocalVariable(name: "st_fd", scope: !20732, file: !2992, line: 120, type: !20740)
!20740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2123, line: 26, size: 1152, elements: !20741)
!20741 = !{!20742, !20743, !20744, !20745, !20746, !20747, !20748, !20749, !20750, !20751, !20752, !20753, !20758, !20759, !20760}
!20742 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !20740, file: !2123, line: 31, baseType: !2126, size: 64)
!20743 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !20740, file: !2123, line: 36, baseType: !2128, size: 64, offset: 64)
!20744 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !20740, file: !2123, line: 44, baseType: !2130, size: 64, offset: 128)
!20745 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !20740, file: !2123, line: 45, baseType: !2132, size: 32, offset: 192)
!20746 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !20740, file: !2123, line: 47, baseType: !2134, size: 32, offset: 224)
!20747 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !20740, file: !2123, line: 48, baseType: !2136, size: 32, offset: 256)
!20748 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !20740, file: !2123, line: 50, baseType: !37, size: 32, offset: 288)
!20749 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !20740, file: !2123, line: 52, baseType: !2126, size: 64, offset: 320)
!20750 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !20740, file: !2123, line: 57, baseType: !463, size: 64, offset: 384)
!20751 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !20740, file: !2123, line: 61, baseType: !2141, size: 64, offset: 448)
!20752 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !20740, file: !2123, line: 63, baseType: !2143, size: 64, offset: 512)
!20753 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !20740, file: !2123, line: 74, baseType: !20754, size: 128, offset: 576)
!20754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2146, line: 11, size: 128, elements: !20755)
!20755 = !{!20756, !20757}
!20756 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !20754, file: !2146, line: 16, baseType: !324, size: 64)
!20757 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !20754, file: !2146, line: 21, baseType: !2150, size: 64, offset: 64)
!20758 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !20740, file: !2123, line: 75, baseType: !20754, size: 128, offset: 704)
!20759 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !20740, file: !2123, line: 76, baseType: !20754, size: 128, offset: 832)
!20760 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !20740, file: !2123, line: 89, baseType: !2154, size: 192, offset: 960)
!20761 = !DILocation(line: 120, column: 21, scope: !20732)
!20762 = !DILocation(line: 122, column: 13, scope: !20763)
!20763 = distinct !DILexicalBlock(scope: !20732, file: !2992, line: 122, column: 13)
!20764 = !DILocation(line: 122, column: 16, scope: !20763)
!20765 = !DILocation(line: 122, column: 13, scope: !20732)
!20766 = !DILocation(line: 123, column: 17, scope: !20763)
!20767 = !DILocation(line: 125, column: 19, scope: !20768)
!20768 = distinct !DILexicalBlock(scope: !20732, file: !2992, line: 125, column: 13)
!20769 = !DILocation(line: 125, column: 13, scope: !20768)
!20770 = !DILocation(line: 125, column: 31, scope: !20768)
!20771 = !DILocation(line: 125, column: 13, scope: !20732)
!20772 = !DILocation(line: 126, column: 25, scope: !20768)
!20773 = !DILocation(line: 126, column: 24, scope: !20768)
!20774 = !DILocation(line: 126, column: 17, scope: !20768)
!20775 = !DILocation(line: 128, column: 14, scope: !20776)
!20776 = distinct !DILexicalBlock(scope: !20732, file: !2992, line: 128, column: 13)
!20777 = !DILocation(line: 128, column: 13, scope: !20732)
!20778 = !DILocation(line: 129, column: 17, scope: !20776)
!20779 = !DILocation(line: 131, column: 13, scope: !20780)
!20780 = distinct !DILexicalBlock(scope: !20732, file: !2992, line: 131, column: 13)
!20781 = !DILocation(line: 131, column: 13, scope: !20732)
!20782 = !DILocalVariable(name: "st_path", scope: !20783, file: !2992, line: 132, type: !20740)
!20783 = distinct !DILexicalBlock(scope: !20780, file: !2992, line: 131, column: 19)
!20784 = !DILocation(line: 132, column: 29, scope: !20783)
!20785 = !DILocation(line: 134, column: 26, scope: !20786)
!20786 = distinct !DILexicalBlock(scope: !20783, file: !2992, line: 134, column: 21)
!20787 = !DILocation(line: 134, column: 21, scope: !20786)
!20788 = !DILocation(line: 134, column: 42, scope: !20786)
!20789 = !DILocation(line: 134, column: 21, scope: !20783)
!20790 = !DILocation(line: 136, column: 29, scope: !20791)
!20791 = distinct !DILexicalBlock(scope: !20792, file: !2992, line: 136, column: 29)
!20792 = distinct !DILexicalBlock(scope: !20786, file: !2992, line: 134, column: 47)
!20793 = !DILocation(line: 136, column: 35, scope: !20791)
!20794 = !DILocation(line: 136, column: 45, scope: !20791)
!20795 = !DILocation(line: 136, column: 48, scope: !20791)
!20796 = !DILocation(line: 136, column: 54, scope: !20791)
!20797 = !DILocation(line: 136, column: 29, scope: !20792)
!20798 = !DILocation(line: 137, column: 33, scope: !20791)
!20799 = !DILocation(line: 139, column: 33, scope: !20792)
!20800 = !DILocation(line: 139, column: 32, scope: !20792)
!20801 = !DILocation(line: 139, column: 25, scope: !20792)
!20802 = !DILocation(line: 143, column: 33, scope: !20783)
!20803 = !DILocation(line: 143, column: 49, scope: !20783)
!20804 = !DILocation(line: 143, column: 40, scope: !20783)
!20805 = !DILocation(line: 143, column: 56, scope: !20783)
!20806 = !DILocation(line: 144, column: 33, scope: !20783)
!20807 = !DILocation(line: 144, column: 49, scope: !20783)
!20808 = !DILocation(line: 144, column: 40, scope: !20783)
!20809 = !DILocation(line: 0, scope: !20783)
!20810 = !DILocation(line: 142, column: 17, scope: !20783)
!20811 = !DILocation(line: 147, column: 9, scope: !20732)
!20812 = !DILocation(line: 148, column: 1, scope: !20732)
!20813 = distinct !DISubprogram(name: "sd_is_special", scope: !2992, file: !2992, line: 150, type: !20733, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3073, retainedNodes: !74)
!20814 = !DILocalVariable(name: "fd", arg: 1, scope: !20813, file: !2992, line: 150, type: !37)
!20815 = !DILocation(line: 150, column: 23, scope: !20813)
!20816 = !DILocalVariable(name: "path", arg: 2, scope: !20813, file: !2992, line: 150, type: !480)
!20817 = !DILocation(line: 150, column: 39, scope: !20813)
!20818 = !DILocalVariable(name: "st_fd", scope: !20813, file: !2992, line: 151, type: !20740)
!20819 = !DILocation(line: 151, column: 21, scope: !20813)
!20820 = !DILocation(line: 153, column: 13, scope: !20821)
!20821 = distinct !DILexicalBlock(scope: !20813, file: !2992, line: 153, column: 13)
!20822 = !DILocation(line: 153, column: 16, scope: !20821)
!20823 = !DILocation(line: 153, column: 13, scope: !20813)
!20824 = !DILocation(line: 154, column: 17, scope: !20821)
!20825 = !DILocation(line: 156, column: 19, scope: !20826)
!20826 = distinct !DILexicalBlock(scope: !20813, file: !2992, line: 156, column: 13)
!20827 = !DILocation(line: 156, column: 13, scope: !20826)
!20828 = !DILocation(line: 156, column: 31, scope: !20826)
!20829 = !DILocation(line: 156, column: 13, scope: !20813)
!20830 = !DILocation(line: 157, column: 25, scope: !20826)
!20831 = !DILocation(line: 157, column: 24, scope: !20826)
!20832 = !DILocation(line: 157, column: 17, scope: !20826)
!20833 = !DILocation(line: 159, column: 14, scope: !20834)
!20834 = distinct !DILexicalBlock(scope: !20813, file: !2992, line: 159, column: 13)
!20835 = !DILocation(line: 159, column: 37, scope: !20834)
!20836 = !DILocation(line: 159, column: 41, scope: !20834)
!20837 = !DILocation(line: 159, column: 13, scope: !20813)
!20838 = !DILocation(line: 160, column: 17, scope: !20834)
!20839 = !DILocation(line: 162, column: 13, scope: !20840)
!20840 = distinct !DILexicalBlock(scope: !20813, file: !2992, line: 162, column: 13)
!20841 = !DILocation(line: 162, column: 13, scope: !20813)
!20842 = !DILocalVariable(name: "st_path", scope: !20843, file: !2992, line: 163, type: !20740)
!20843 = distinct !DILexicalBlock(scope: !20840, file: !2992, line: 162, column: 19)
!20844 = !DILocation(line: 163, column: 29, scope: !20843)
!20845 = !DILocation(line: 165, column: 26, scope: !20846)
!20846 = distinct !DILexicalBlock(scope: !20843, file: !2992, line: 165, column: 21)
!20847 = !DILocation(line: 165, column: 21, scope: !20846)
!20848 = !DILocation(line: 165, column: 42, scope: !20846)
!20849 = !DILocation(line: 165, column: 21, scope: !20843)
!20850 = !DILocation(line: 167, column: 29, scope: !20851)
!20851 = distinct !DILexicalBlock(scope: !20852, file: !2992, line: 167, column: 29)
!20852 = distinct !DILexicalBlock(scope: !20846, file: !2992, line: 165, column: 47)
!20853 = !DILocation(line: 167, column: 35, scope: !20851)
!20854 = !DILocation(line: 167, column: 45, scope: !20851)
!20855 = !DILocation(line: 167, column: 48, scope: !20851)
!20856 = !DILocation(line: 167, column: 54, scope: !20851)
!20857 = !DILocation(line: 167, column: 29, scope: !20852)
!20858 = !DILocation(line: 168, column: 33, scope: !20851)
!20859 = !DILocation(line: 170, column: 33, scope: !20852)
!20860 = !DILocation(line: 170, column: 32, scope: !20852)
!20861 = !DILocation(line: 170, column: 25, scope: !20852)
!20862 = !DILocation(line: 173, column: 21, scope: !20863)
!20863 = distinct !DILexicalBlock(scope: !20843, file: !2992, line: 173, column: 21)
!20864 = !DILocation(line: 173, column: 44, scope: !20863)
!20865 = !DILocation(line: 173, column: 47, scope: !20863)
!20866 = !DILocation(line: 173, column: 21, scope: !20843)
!20867 = !DILocation(line: 175, column: 41, scope: !20863)
!20868 = !DILocation(line: 175, column: 57, scope: !20863)
!20869 = !DILocation(line: 175, column: 48, scope: !20863)
!20870 = !DILocation(line: 175, column: 64, scope: !20863)
!20871 = !DILocation(line: 176, column: 41, scope: !20863)
!20872 = !DILocation(line: 176, column: 57, scope: !20863)
!20873 = !DILocation(line: 176, column: 48, scope: !20863)
!20874 = !DILocation(line: 0, scope: !20863)
!20875 = !DILocation(line: 174, column: 25, scope: !20863)
!20876 = !DILocation(line: 177, column: 26, scope: !20877)
!20877 = distinct !DILexicalBlock(scope: !20863, file: !2992, line: 177, column: 26)
!20878 = !DILocation(line: 177, column: 49, scope: !20877)
!20879 = !DILocation(line: 177, column: 52, scope: !20877)
!20880 = !DILocation(line: 177, column: 26, scope: !20863)
!20881 = !DILocation(line: 178, column: 40, scope: !20877)
!20882 = !DILocation(line: 178, column: 57, scope: !20877)
!20883 = !DILocation(line: 178, column: 48, scope: !20877)
!20884 = !DILocation(line: 178, column: 25, scope: !20877)
!20885 = !DILocation(line: 180, column: 25, scope: !20877)
!20886 = !DILocation(line: 183, column: 9, scope: !20813)
!20887 = !DILocation(line: 184, column: 1, scope: !20813)
!20888 = distinct !DISubprogram(name: "sd_is_socket", scope: !2992, file: !2992, line: 237, type: !20889, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3073, retainedNodes: !74)
!20889 = !DISubroutineType(types: !20890)
!20890 = !{!37, !37, !37, !37, !37}
!20891 = !DILocalVariable(name: "fd", arg: 1, scope: !20888, file: !2992, line: 237, type: !37)
!20892 = !DILocation(line: 237, column: 22, scope: !20888)
!20893 = !DILocalVariable(name: "family", arg: 2, scope: !20888, file: !2992, line: 237, type: !37)
!20894 = !DILocation(line: 237, column: 30, scope: !20888)
!20895 = !DILocalVariable(name: "type", arg: 3, scope: !20888, file: !2992, line: 237, type: !37)
!20896 = !DILocation(line: 237, column: 42, scope: !20888)
!20897 = !DILocalVariable(name: "listening", arg: 4, scope: !20888, file: !2992, line: 237, type: !37)
!20898 = !DILocation(line: 237, column: 52, scope: !20888)
!20899 = !DILocalVariable(name: "r", scope: !20888, file: !2992, line: 238, type: !37)
!20900 = !DILocation(line: 238, column: 13, scope: !20888)
!20901 = !DILocation(line: 240, column: 13, scope: !20902)
!20902 = distinct !DILexicalBlock(scope: !20888, file: !2992, line: 240, column: 13)
!20903 = !DILocation(line: 240, column: 20, scope: !20902)
!20904 = !DILocation(line: 240, column: 13, scope: !20888)
!20905 = !DILocation(line: 241, column: 17, scope: !20902)
!20906 = !DILocation(line: 243, column: 35, scope: !20888)
!20907 = !DILocation(line: 243, column: 39, scope: !20888)
!20908 = !DILocation(line: 243, column: 45, scope: !20888)
!20909 = !DILocation(line: 243, column: 13, scope: !20888)
!20910 = !DILocation(line: 243, column: 11, scope: !20888)
!20911 = !DILocation(line: 244, column: 13, scope: !20912)
!20912 = distinct !DILexicalBlock(scope: !20888, file: !2992, line: 244, column: 13)
!20913 = !DILocation(line: 244, column: 15, scope: !20912)
!20914 = !DILocation(line: 244, column: 13, scope: !20888)
!20915 = !DILocation(line: 245, column: 24, scope: !20912)
!20916 = !DILocation(line: 245, column: 17, scope: !20912)
!20917 = !DILocation(line: 247, column: 13, scope: !20918)
!20918 = distinct !DILexicalBlock(scope: !20888, file: !2992, line: 247, column: 13)
!20919 = !DILocation(line: 247, column: 20, scope: !20918)
!20920 = !DILocation(line: 247, column: 13, scope: !20888)
!20921 = !DILocalVariable(name: "sockaddr", scope: !20922, file: !2992, line: 248, type: !20923)
!20922 = distinct !DILexicalBlock(scope: !20918, file: !2992, line: 247, column: 25)
!20923 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sockaddr_union", file: !2992, line: 229, size: 1024, elements: !20924)
!20924 = !{!20925, !20930, !20940, !20956, !20965}
!20925 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !20923, file: !2992, line: 230, baseType: !20926, size: 128)
!20926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !1505, line: 180, size: 128, elements: !20927)
!20927 = !{!20928, !20929}
!20928 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !20926, file: !1505, line: 182, baseType: !1508, size: 16)
!20929 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !20926, file: !1505, line: 183, baseType: !152, size: 112, offset: 16)
!20930 = !DIDerivedType(tag: DW_TAG_member, name: "in4", scope: !20923, file: !2992, line: 231, baseType: !20931, size: 128)
!20931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in", file: !1513, line: 245, size: 128, elements: !20932)
!20932 = !{!20933, !20934, !20935, !20939}
!20933 = !DIDerivedType(tag: DW_TAG_member, name: "sin_family", scope: !20931, file: !1513, line: 247, baseType: !1508, size: 16)
!20934 = !DIDerivedType(tag: DW_TAG_member, name: "sin_port", scope: !20931, file: !1513, line: 248, baseType: !1517, size: 16, offset: 16)
!20935 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !20931, file: !1513, line: 249, baseType: !20936, size: 32, offset: 32)
!20936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !1513, line: 31, size: 32, elements: !20937)
!20937 = !{!20938}
!20938 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !20936, file: !1513, line: 33, baseType: !1524, size: 32)
!20939 = !DIDerivedType(tag: DW_TAG_member, name: "sin_zero", scope: !20931, file: !1513, line: 252, baseType: !1526, size: 64, offset: 64)
!20940 = !DIDerivedType(tag: DW_TAG_member, name: "in6", scope: !20923, file: !2992, line: 232, baseType: !20941, size: 224)
!20941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in6", file: !1513, line: 260, size: 224, elements: !20942)
!20942 = !{!20943, !20944, !20945, !20946, !20955}
!20943 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_family", scope: !20941, file: !1513, line: 262, baseType: !1508, size: 16)
!20944 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_port", scope: !20941, file: !1513, line: 263, baseType: !1517, size: 16, offset: 16)
!20945 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_flowinfo", scope: !20941, file: !1513, line: 264, baseType: !66, size: 32, offset: 32)
!20946 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_addr", scope: !20941, file: !1513, line: 265, baseType: !20947, size: 128, offset: 64)
!20947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !1513, line: 219, size: 128, elements: !20948)
!20948 = !{!20949}
!20949 = !DIDerivedType(tag: DW_TAG_member, name: "__in6_u", scope: !20947, file: !1513, line: 226, baseType: !20950, size: 128)
!20950 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !20947, file: !1513, line: 221, size: 128, elements: !20951)
!20951 = !{!20952, !20953, !20954}
!20952 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr8", scope: !20950, file: !1513, line: 223, baseType: !1540, size: 128)
!20953 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr16", scope: !20950, file: !1513, line: 224, baseType: !1544, size: 128)
!20954 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr32", scope: !20950, file: !1513, line: 225, baseType: !1546, size: 128)
!20955 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_scope_id", scope: !20941, file: !1513, line: 266, baseType: !66, size: 32, offset: 192)
!20956 = !DIDerivedType(tag: DW_TAG_member, name: "un", scope: !20923, file: !2992, line: 233, baseType: !20957, size: 880)
!20957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_un", file: !20958, line: 29, size: 880, elements: !20959)
!20958 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/un.h", directory: "", checksumkind: CSK_MD5, checksum: "543d98cd612c9215c9333043f81a0cd3")
!20959 = !{!20960, !20961}
!20960 = !DIDerivedType(tag: DW_TAG_member, name: "sun_family", scope: !20957, file: !20958, line: 31, baseType: !1508, size: 16)
!20961 = !DIDerivedType(tag: DW_TAG_member, name: "sun_path", scope: !20957, file: !20958, line: 32, baseType: !20962, size: 864, offset: 16)
!20962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 864, elements: !20963)
!20963 = !{!20964}
!20964 = !DISubrange(count: 108)
!20965 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !20923, file: !2992, line: 234, baseType: !20966, size: 1024)
!20966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_storage", file: !1505, line: 193, size: 1024, elements: !20967)
!20967 = !{!20968, !20969, !20970}
!20968 = !DIDerivedType(tag: DW_TAG_member, name: "ss_family", scope: !20966, file: !1505, line: 195, baseType: !1508, size: 16)
!20969 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_padding", scope: !20966, file: !1505, line: 196, baseType: !11086, size: 944, offset: 16)
!20970 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_align", scope: !20966, file: !1505, line: 197, baseType: !8, size: 64, offset: 960)
!20971 = !DILocation(line: 248, column: 38, scope: !20922)
!20972 = !DILocalVariable(name: "l", scope: !20922, file: !2992, line: 249, type: !3079)
!20973 = !DILocation(line: 249, column: 27, scope: !20922)
!20974 = !DILocation(line: 251, column: 33, scope: !20975)
!20975 = distinct !DILexicalBlock(scope: !20922, file: !2992, line: 251, column: 21)
!20976 = !DILocation(line: 251, column: 37, scope: !20975)
!20977 = !DILocation(line: 251, column: 21, scope: !20975)
!20978 = !DILocation(line: 251, column: 55, scope: !20975)
!20979 = !DILocation(line: 251, column: 21, scope: !20922)
!20980 = !DILocation(line: 252, column: 33, scope: !20975)
!20981 = !DILocation(line: 252, column: 32, scope: !20975)
!20982 = !DILocation(line: 252, column: 25, scope: !20975)
!20983 = !DILocation(line: 254, column: 21, scope: !20984)
!20984 = distinct !DILexicalBlock(scope: !20922, file: !2992, line: 254, column: 21)
!20985 = !DILocation(line: 254, column: 23, scope: !20984)
!20986 = !DILocation(line: 254, column: 21, scope: !20922)
!20987 = !DILocation(line: 255, column: 25, scope: !20984)
!20988 = !DILocation(line: 257, column: 36, scope: !20922)
!20989 = !DILocation(line: 257, column: 24, scope: !20922)
!20990 = !DILocation(line: 257, column: 49, scope: !20922)
!20991 = !DILocation(line: 257, column: 46, scope: !20922)
!20992 = !DILocation(line: 257, column: 17, scope: !20922)
!20993 = !DILocation(line: 260, column: 9, scope: !20888)
!20994 = !DILocation(line: 261, column: 1, scope: !20888)
!20995 = distinct !DISubprogram(name: "sd_is_socket_internal", scope: !2992, file: !2992, line: 186, type: !20996, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3073, retainedNodes: !74)
!20996 = !DISubroutineType(types: !20997)
!20997 = !{!37, !37, !37, !37}
!20998 = !DILocalVariable(name: "fd", arg: 1, scope: !20995, file: !2992, line: 186, type: !37)
!20999 = !DILocation(line: 186, column: 38, scope: !20995)
!21000 = !DILocalVariable(name: "type", arg: 2, scope: !20995, file: !2992, line: 186, type: !37)
!21001 = !DILocation(line: 186, column: 46, scope: !20995)
!21002 = !DILocalVariable(name: "listening", arg: 3, scope: !20995, file: !2992, line: 186, type: !37)
!21003 = !DILocation(line: 186, column: 56, scope: !20995)
!21004 = !DILocalVariable(name: "st_fd", scope: !20995, file: !2992, line: 187, type: !20740)
!21005 = !DILocation(line: 187, column: 21, scope: !20995)
!21006 = !DILocation(line: 189, column: 13, scope: !21007)
!21007 = distinct !DILexicalBlock(scope: !20995, file: !2992, line: 189, column: 13)
!21008 = !DILocation(line: 189, column: 16, scope: !21007)
!21009 = !DILocation(line: 189, column: 20, scope: !21007)
!21010 = !DILocation(line: 189, column: 23, scope: !21007)
!21011 = !DILocation(line: 189, column: 28, scope: !21007)
!21012 = !DILocation(line: 189, column: 13, scope: !20995)
!21013 = !DILocation(line: 190, column: 17, scope: !21007)
!21014 = !DILocation(line: 192, column: 19, scope: !21015)
!21015 = distinct !DILexicalBlock(scope: !20995, file: !2992, line: 192, column: 13)
!21016 = !DILocation(line: 192, column: 13, scope: !21015)
!21017 = !DILocation(line: 192, column: 31, scope: !21015)
!21018 = !DILocation(line: 192, column: 13, scope: !20995)
!21019 = !DILocation(line: 193, column: 25, scope: !21015)
!21020 = !DILocation(line: 193, column: 24, scope: !21015)
!21021 = !DILocation(line: 193, column: 17, scope: !21015)
!21022 = !DILocation(line: 195, column: 14, scope: !21023)
!21023 = distinct !DILexicalBlock(scope: !20995, file: !2992, line: 195, column: 13)
!21024 = !DILocation(line: 195, column: 13, scope: !20995)
!21025 = !DILocation(line: 196, column: 17, scope: !21023)
!21026 = !DILocation(line: 198, column: 13, scope: !21027)
!21027 = distinct !DILexicalBlock(scope: !20995, file: !2992, line: 198, column: 13)
!21028 = !DILocation(line: 198, column: 18, scope: !21027)
!21029 = !DILocation(line: 198, column: 13, scope: !20995)
!21030 = !DILocalVariable(name: "other_type", scope: !21031, file: !2992, line: 199, type: !37)
!21031 = distinct !DILexicalBlock(scope: !21027, file: !2992, line: 198, column: 24)
!21032 = !DILocation(line: 199, column: 21, scope: !21031)
!21033 = !DILocalVariable(name: "l", scope: !21031, file: !2992, line: 200, type: !3079)
!21034 = !DILocation(line: 200, column: 27, scope: !21031)
!21035 = !DILocation(line: 202, column: 32, scope: !21036)
!21036 = distinct !DILexicalBlock(scope: !21031, file: !2992, line: 202, column: 21)
!21037 = !DILocation(line: 202, column: 21, scope: !21036)
!21038 = !DILocation(line: 202, column: 74, scope: !21036)
!21039 = !DILocation(line: 202, column: 21, scope: !21031)
!21040 = !DILocation(line: 203, column: 33, scope: !21036)
!21041 = !DILocation(line: 203, column: 32, scope: !21036)
!21042 = !DILocation(line: 203, column: 25, scope: !21036)
!21043 = !DILocation(line: 205, column: 21, scope: !21044)
!21044 = distinct !DILexicalBlock(scope: !21031, file: !2992, line: 205, column: 21)
!21045 = !DILocation(line: 205, column: 23, scope: !21044)
!21046 = !DILocation(line: 205, column: 21, scope: !21031)
!21047 = !DILocation(line: 206, column: 25, scope: !21044)
!21048 = !DILocation(line: 208, column: 21, scope: !21049)
!21049 = distinct !DILexicalBlock(scope: !21031, file: !2992, line: 208, column: 21)
!21050 = !DILocation(line: 208, column: 35, scope: !21049)
!21051 = !DILocation(line: 208, column: 32, scope: !21049)
!21052 = !DILocation(line: 208, column: 21, scope: !21031)
!21053 = !DILocation(line: 209, column: 25, scope: !21049)
!21054 = !DILocation(line: 210, column: 9, scope: !21031)
!21055 = !DILocation(line: 212, column: 13, scope: !21056)
!21056 = distinct !DILexicalBlock(scope: !20995, file: !2992, line: 212, column: 13)
!21057 = !DILocation(line: 212, column: 23, scope: !21056)
!21058 = !DILocation(line: 212, column: 13, scope: !20995)
!21059 = !DILocalVariable(name: "accepting", scope: !21060, file: !2992, line: 213, type: !37)
!21060 = distinct !DILexicalBlock(scope: !21056, file: !2992, line: 212, column: 29)
!21061 = !DILocation(line: 213, column: 21, scope: !21060)
!21062 = !DILocalVariable(name: "l", scope: !21060, file: !2992, line: 214, type: !3079)
!21063 = !DILocation(line: 214, column: 27, scope: !21060)
!21064 = !DILocation(line: 216, column: 32, scope: !21065)
!21065 = distinct !DILexicalBlock(scope: !21060, file: !2992, line: 216, column: 21)
!21066 = !DILocation(line: 216, column: 21, scope: !21065)
!21067 = !DILocation(line: 216, column: 79, scope: !21065)
!21068 = !DILocation(line: 216, column: 21, scope: !21060)
!21069 = !DILocation(line: 217, column: 33, scope: !21065)
!21070 = !DILocation(line: 217, column: 32, scope: !21065)
!21071 = !DILocation(line: 217, column: 25, scope: !21065)
!21072 = !DILocation(line: 219, column: 21, scope: !21073)
!21073 = distinct !DILexicalBlock(scope: !21060, file: !2992, line: 219, column: 21)
!21074 = !DILocation(line: 219, column: 23, scope: !21073)
!21075 = !DILocation(line: 219, column: 21, scope: !21060)
!21076 = !DILocation(line: 220, column: 25, scope: !21073)
!21077 = !DILocation(line: 222, column: 22, scope: !21078)
!21078 = distinct !DILexicalBlock(scope: !21060, file: !2992, line: 222, column: 21)
!21079 = !DILocation(line: 222, column: 21, scope: !21078)
!21080 = !DILocation(line: 222, column: 36, scope: !21078)
!21081 = !DILocation(line: 222, column: 35, scope: !21078)
!21082 = !DILocation(line: 222, column: 32, scope: !21078)
!21083 = !DILocation(line: 222, column: 21, scope: !21060)
!21084 = !DILocation(line: 223, column: 25, scope: !21078)
!21085 = !DILocation(line: 224, column: 9, scope: !21060)
!21086 = !DILocation(line: 226, column: 9, scope: !20995)
!21087 = !DILocation(line: 227, column: 1, scope: !20995)
!21088 = distinct !DISubprogram(name: "sd_is_socket_inet", scope: !2992, file: !2992, line: 263, type: !21089, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3073, retainedNodes: !74)
!21089 = !DISubroutineType(types: !21090)
!21090 = !{!37, !37, !37, !37, !37, !1518}
!21091 = !DILocalVariable(name: "fd", arg: 1, scope: !21088, file: !2992, line: 263, type: !37)
!21092 = !DILocation(line: 263, column: 27, scope: !21088)
!21093 = !DILocalVariable(name: "family", arg: 2, scope: !21088, file: !2992, line: 263, type: !37)
!21094 = !DILocation(line: 263, column: 35, scope: !21088)
!21095 = !DILocalVariable(name: "type", arg: 3, scope: !21088, file: !2992, line: 263, type: !37)
!21096 = !DILocation(line: 263, column: 47, scope: !21088)
!21097 = !DILocalVariable(name: "listening", arg: 4, scope: !21088, file: !2992, line: 263, type: !37)
!21098 = !DILocation(line: 263, column: 57, scope: !21088)
!21099 = !DILocalVariable(name: "port", arg: 5, scope: !21088, file: !2992, line: 263, type: !1518)
!21100 = !DILocation(line: 263, column: 77, scope: !21088)
!21101 = !DILocalVariable(name: "sockaddr", scope: !21088, file: !2992, line: 264, type: !20923)
!21102 = !DILocation(line: 264, column: 30, scope: !21088)
!21103 = !DILocalVariable(name: "l", scope: !21088, file: !2992, line: 265, type: !3079)
!21104 = !DILocation(line: 265, column: 19, scope: !21088)
!21105 = !DILocalVariable(name: "r", scope: !21088, file: !2992, line: 266, type: !37)
!21106 = !DILocation(line: 266, column: 13, scope: !21088)
!21107 = !DILocation(line: 268, column: 13, scope: !21108)
!21108 = distinct !DILexicalBlock(scope: !21088, file: !2992, line: 268, column: 13)
!21109 = !DILocation(line: 268, column: 20, scope: !21108)
!21110 = !DILocation(line: 268, column: 25, scope: !21108)
!21111 = !DILocation(line: 268, column: 28, scope: !21108)
!21112 = !DILocation(line: 268, column: 35, scope: !21108)
!21113 = !DILocation(line: 268, column: 46, scope: !21108)
!21114 = !DILocation(line: 268, column: 49, scope: !21108)
!21115 = !DILocation(line: 268, column: 56, scope: !21108)
!21116 = !DILocation(line: 268, column: 13, scope: !21088)
!21117 = !DILocation(line: 269, column: 17, scope: !21108)
!21118 = !DILocation(line: 271, column: 35, scope: !21088)
!21119 = !DILocation(line: 271, column: 39, scope: !21088)
!21120 = !DILocation(line: 271, column: 45, scope: !21088)
!21121 = !DILocation(line: 271, column: 13, scope: !21088)
!21122 = !DILocation(line: 271, column: 11, scope: !21088)
!21123 = !DILocation(line: 272, column: 13, scope: !21124)
!21124 = distinct !DILexicalBlock(scope: !21088, file: !2992, line: 272, column: 13)
!21125 = !DILocation(line: 272, column: 15, scope: !21124)
!21126 = !DILocation(line: 272, column: 13, scope: !21088)
!21127 = !DILocation(line: 273, column: 24, scope: !21124)
!21128 = !DILocation(line: 273, column: 17, scope: !21124)
!21129 = !DILocation(line: 275, column: 25, scope: !21130)
!21130 = distinct !DILexicalBlock(scope: !21088, file: !2992, line: 275, column: 13)
!21131 = !DILocation(line: 275, column: 29, scope: !21130)
!21132 = !DILocation(line: 275, column: 13, scope: !21130)
!21133 = !DILocation(line: 275, column: 47, scope: !21130)
!21134 = !DILocation(line: 275, column: 13, scope: !21088)
!21135 = !DILocation(line: 276, column: 25, scope: !21130)
!21136 = !DILocation(line: 276, column: 24, scope: !21130)
!21137 = !DILocation(line: 276, column: 17, scope: !21130)
!21138 = !DILocation(line: 278, column: 13, scope: !21139)
!21139 = distinct !DILexicalBlock(scope: !21088, file: !2992, line: 278, column: 13)
!21140 = !DILocation(line: 278, column: 15, scope: !21139)
!21141 = !DILocation(line: 278, column: 13, scope: !21088)
!21142 = !DILocation(line: 279, column: 17, scope: !21139)
!21143 = !DILocation(line: 281, column: 25, scope: !21144)
!21144 = distinct !DILexicalBlock(scope: !21088, file: !2992, line: 281, column: 13)
!21145 = !DILocation(line: 281, column: 13, scope: !21144)
!21146 = !DILocation(line: 281, column: 35, scope: !21144)
!21147 = !DILocation(line: 281, column: 46, scope: !21144)
!21148 = !DILocation(line: 282, column: 25, scope: !21144)
!21149 = !DILocation(line: 282, column: 13, scope: !21144)
!21150 = !DILocation(line: 282, column: 35, scope: !21144)
!21151 = !DILocation(line: 281, column: 13, scope: !21088)
!21152 = !DILocation(line: 283, column: 17, scope: !21144)
!21153 = !DILocation(line: 285, column: 13, scope: !21154)
!21154 = distinct !DILexicalBlock(scope: !21088, file: !2992, line: 285, column: 13)
!21155 = !DILocation(line: 285, column: 20, scope: !21154)
!21156 = !DILocation(line: 285, column: 13, scope: !21088)
!21157 = !DILocation(line: 286, column: 33, scope: !21158)
!21158 = distinct !DILexicalBlock(scope: !21154, file: !2992, line: 286, column: 21)
!21159 = !DILocation(line: 286, column: 21, scope: !21158)
!21160 = !DILocation(line: 286, column: 46, scope: !21158)
!21161 = !DILocation(line: 286, column: 43, scope: !21158)
!21162 = !DILocation(line: 286, column: 21, scope: !21154)
!21163 = !DILocation(line: 287, column: 25, scope: !21158)
!21164 = !DILocation(line: 289, column: 13, scope: !21165)
!21165 = distinct !DILexicalBlock(scope: !21088, file: !2992, line: 289, column: 13)
!21166 = !DILocation(line: 289, column: 18, scope: !21165)
!21167 = !DILocation(line: 289, column: 13, scope: !21088)
!21168 = !DILocation(line: 290, column: 33, scope: !21169)
!21169 = distinct !DILexicalBlock(scope: !21170, file: !2992, line: 290, column: 21)
!21170 = distinct !DILexicalBlock(scope: !21165, file: !2992, line: 289, column: 23)
!21171 = !DILocation(line: 290, column: 21, scope: !21169)
!21172 = !DILocation(line: 290, column: 43, scope: !21169)
!21173 = !DILocation(line: 290, column: 21, scope: !21170)
!21174 = !DILocation(line: 291, column: 29, scope: !21175)
!21175 = distinct !DILexicalBlock(scope: !21176, file: !2992, line: 291, column: 29)
!21176 = distinct !DILexicalBlock(scope: !21169, file: !2992, line: 290, column: 55)
!21177 = !DILocation(line: 291, column: 31, scope: !21175)
!21178 = !DILocation(line: 291, column: 29, scope: !21176)
!21179 = !DILocation(line: 292, column: 33, scope: !21175)
!21180 = !DILocation(line: 294, column: 38, scope: !21176)
!21181 = !DILocation(line: 294, column: 32, scope: !21176)
!21182 = !DILocation(line: 294, column: 60, scope: !21176)
!21183 = !DILocation(line: 294, column: 47, scope: !21176)
!21184 = !DILocation(line: 294, column: 44, scope: !21176)
!21185 = !DILocation(line: 294, column: 25, scope: !21176)
!21186 = !DILocation(line: 296, column: 29, scope: !21187)
!21187 = distinct !DILexicalBlock(scope: !21188, file: !2992, line: 296, column: 29)
!21188 = distinct !DILexicalBlock(scope: !21169, file: !2992, line: 295, column: 24)
!21189 = !DILocation(line: 296, column: 31, scope: !21187)
!21190 = !DILocation(line: 296, column: 29, scope: !21188)
!21191 = !DILocation(line: 297, column: 33, scope: !21187)
!21192 = !DILocation(line: 299, column: 38, scope: !21188)
!21193 = !DILocation(line: 299, column: 32, scope: !21188)
!21194 = !DILocation(line: 299, column: 60, scope: !21188)
!21195 = !DILocation(line: 299, column: 47, scope: !21188)
!21196 = !DILocation(line: 299, column: 44, scope: !21188)
!21197 = !DILocation(line: 299, column: 25, scope: !21188)
!21198 = !DILocation(line: 303, column: 9, scope: !21088)
!21199 = !DILocation(line: 304, column: 1, scope: !21088)
!21200 = distinct !DISubprogram(name: "sd_is_socket_unix", scope: !2992, file: !2992, line: 306, type: !21201, scopeLine: 306, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3073, retainedNodes: !74)
!21201 = !DISubroutineType(types: !21202)
!21202 = !{!37, !37, !37, !37, !480, !6}
!21203 = !DILocalVariable(name: "fd", arg: 1, scope: !21200, file: !2992, line: 306, type: !37)
!21204 = !DILocation(line: 306, column: 27, scope: !21200)
!21205 = !DILocalVariable(name: "type", arg: 2, scope: !21200, file: !2992, line: 306, type: !37)
!21206 = !DILocation(line: 306, column: 35, scope: !21200)
!21207 = !DILocalVariable(name: "listening", arg: 3, scope: !21200, file: !2992, line: 306, type: !37)
!21208 = !DILocation(line: 306, column: 45, scope: !21200)
!21209 = !DILocalVariable(name: "path", arg: 4, scope: !21200, file: !2992, line: 306, type: !480)
!21210 = !DILocation(line: 306, column: 68, scope: !21200)
!21211 = !DILocalVariable(name: "length", arg: 5, scope: !21200, file: !2992, line: 306, type: !6)
!21212 = !DILocation(line: 306, column: 81, scope: !21200)
!21213 = !DILocalVariable(name: "sockaddr", scope: !21200, file: !2992, line: 307, type: !20923)
!21214 = !DILocation(line: 307, column: 30, scope: !21200)
!21215 = !DILocalVariable(name: "l", scope: !21200, file: !2992, line: 308, type: !3079)
!21216 = !DILocation(line: 308, column: 19, scope: !21200)
!21217 = !DILocalVariable(name: "r", scope: !21200, file: !2992, line: 309, type: !37)
!21218 = !DILocation(line: 309, column: 13, scope: !21200)
!21219 = !DILocation(line: 311, column: 35, scope: !21200)
!21220 = !DILocation(line: 311, column: 39, scope: !21200)
!21221 = !DILocation(line: 311, column: 45, scope: !21200)
!21222 = !DILocation(line: 311, column: 13, scope: !21200)
!21223 = !DILocation(line: 311, column: 11, scope: !21200)
!21224 = !DILocation(line: 312, column: 13, scope: !21225)
!21225 = distinct !DILexicalBlock(scope: !21200, file: !2992, line: 312, column: 13)
!21226 = !DILocation(line: 312, column: 15, scope: !21225)
!21227 = !DILocation(line: 312, column: 13, scope: !21200)
!21228 = !DILocation(line: 313, column: 24, scope: !21225)
!21229 = !DILocation(line: 313, column: 17, scope: !21225)
!21230 = !DILocation(line: 315, column: 25, scope: !21231)
!21231 = distinct !DILexicalBlock(scope: !21200, file: !2992, line: 315, column: 13)
!21232 = !DILocation(line: 315, column: 29, scope: !21231)
!21233 = !DILocation(line: 315, column: 13, scope: !21231)
!21234 = !DILocation(line: 315, column: 47, scope: !21231)
!21235 = !DILocation(line: 315, column: 13, scope: !21200)
!21236 = !DILocation(line: 316, column: 25, scope: !21231)
!21237 = !DILocation(line: 316, column: 24, scope: !21231)
!21238 = !DILocation(line: 316, column: 17, scope: !21231)
!21239 = !DILocation(line: 318, column: 13, scope: !21240)
!21240 = distinct !DILexicalBlock(scope: !21200, file: !2992, line: 318, column: 13)
!21241 = !DILocation(line: 318, column: 15, scope: !21240)
!21242 = !DILocation(line: 318, column: 13, scope: !21200)
!21243 = !DILocation(line: 319, column: 17, scope: !21240)
!21244 = !DILocation(line: 321, column: 25, scope: !21245)
!21245 = distinct !DILexicalBlock(scope: !21200, file: !2992, line: 321, column: 13)
!21246 = !DILocation(line: 321, column: 13, scope: !21245)
!21247 = !DILocation(line: 321, column: 35, scope: !21245)
!21248 = !DILocation(line: 321, column: 13, scope: !21200)
!21249 = !DILocation(line: 322, column: 17, scope: !21245)
!21250 = !DILocation(line: 324, column: 13, scope: !21251)
!21251 = distinct !DILexicalBlock(scope: !21200, file: !2992, line: 324, column: 13)
!21252 = !DILocation(line: 324, column: 13, scope: !21200)
!21253 = !DILocation(line: 325, column: 21, scope: !21254)
!21254 = distinct !DILexicalBlock(scope: !21255, file: !2992, line: 325, column: 21)
!21255 = distinct !DILexicalBlock(scope: !21251, file: !2992, line: 324, column: 19)
!21256 = !DILocation(line: 325, column: 28, scope: !21254)
!21257 = !DILocation(line: 325, column: 21, scope: !21255)
!21258 = !DILocation(line: 326, column: 41, scope: !21254)
!21259 = !DILocation(line: 326, column: 34, scope: !21254)
!21260 = !DILocation(line: 326, column: 32, scope: !21254)
!21261 = !DILocation(line: 326, column: 25, scope: !21254)
!21262 = !DILocation(line: 328, column: 21, scope: !21263)
!21263 = distinct !DILexicalBlock(scope: !21255, file: !2992, line: 328, column: 21)
!21264 = !DILocation(line: 328, column: 28, scope: !21263)
!21265 = !DILocation(line: 328, column: 21, scope: !21255)
!21266 = !DILocation(line: 330, column: 32, scope: !21263)
!21267 = !DILocation(line: 330, column: 34, scope: !21263)
!21268 = !DILocation(line: 330, column: 25, scope: !21263)
!21269 = !DILocation(line: 332, column: 21, scope: !21270)
!21270 = distinct !DILexicalBlock(scope: !21255, file: !2992, line: 332, column: 21)
!21271 = !DILocation(line: 332, column: 21, scope: !21255)
!21272 = !DILocation(line: 335, column: 34, scope: !21270)
!21273 = !DILocation(line: 335, column: 80, scope: !21270)
!21274 = !DILocation(line: 335, column: 78, scope: !21270)
!21275 = !DILocation(line: 335, column: 87, scope: !21270)
!21276 = !DILocation(line: 335, column: 36, scope: !21270)
!21277 = !DILocation(line: 335, column: 92, scope: !21270)
!21278 = !DILocation(line: 336, column: 40, scope: !21270)
!21279 = !DILocation(line: 336, column: 58, scope: !21270)
!21280 = !DILocation(line: 336, column: 46, scope: !21270)
!21281 = !DILocation(line: 336, column: 68, scope: !21270)
!21282 = !DILocation(line: 336, column: 74, scope: !21270)
!21283 = !DILocation(line: 336, column: 33, scope: !21270)
!21284 = !DILocation(line: 336, column: 78, scope: !21270)
!21285 = !DILocation(line: 0, scope: !21270)
!21286 = !DILocation(line: 334, column: 25, scope: !21270)
!21287 = !DILocation(line: 340, column: 34, scope: !21270)
!21288 = !DILocation(line: 340, column: 80, scope: !21270)
!21289 = !DILocation(line: 340, column: 78, scope: !21270)
!21290 = !DILocation(line: 340, column: 36, scope: !21270)
!21291 = !DILocation(line: 340, column: 88, scope: !21270)
!21292 = !DILocation(line: 341, column: 40, scope: !21270)
!21293 = !DILocation(line: 341, column: 58, scope: !21270)
!21294 = !DILocation(line: 341, column: 46, scope: !21270)
!21295 = !DILocation(line: 341, column: 68, scope: !21270)
!21296 = !DILocation(line: 341, column: 33, scope: !21270)
!21297 = !DILocation(line: 341, column: 76, scope: !21270)
!21298 = !DILocation(line: 339, column: 25, scope: !21270)
!21299 = !DILocation(line: 344, column: 9, scope: !21200)
!21300 = !DILocation(line: 345, column: 1, scope: !21200)
!21301 = distinct !DISubprogram(name: "sd_notify", scope: !2992, file: !2992, line: 347, type: !20733, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3073, retainedNodes: !74)
!21302 = !DILocalVariable(name: "unset_environment", arg: 1, scope: !21301, file: !2992, line: 347, type: !37)
!21303 = !DILocation(line: 347, column: 19, scope: !21301)
!21304 = !DILocalVariable(name: "state", arg: 2, scope: !21301, file: !2992, line: 347, type: !480)
!21305 = !DILocation(line: 347, column: 50, scope: !21301)
!21306 = !DILocalVariable(name: "fd", scope: !21301, file: !2992, line: 348, type: !37)
!21307 = !DILocation(line: 348, column: 13, scope: !21301)
!21308 = !DILocalVariable(name: "r", scope: !21301, file: !2992, line: 348, type: !37)
!21309 = !DILocation(line: 348, column: 22, scope: !21301)
!21310 = !DILocalVariable(name: "msghdr", scope: !21301, file: !2992, line: 349, type: !21311)
!21311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msghdr", file: !1505, line: 259, size: 448, elements: !21312)
!21312 = !{!21313, !21314, !21315, !21321, !21322, !21323, !21324}
!21313 = !DIDerivedType(tag: DW_TAG_member, name: "msg_name", scope: !21311, file: !1505, line: 261, baseType: !5, size: 64)
!21314 = !DIDerivedType(tag: DW_TAG_member, name: "msg_namelen", scope: !21311, file: !1505, line: 262, baseType: !3079, size: 32, offset: 64)
!21315 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iov", scope: !21311, file: !1505, line: 264, baseType: !21316, size: 64, offset: 128)
!21316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21317, size: 64)
!21317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !7152, line: 26, size: 128, elements: !21318)
!21318 = !{!21319, !21320}
!21319 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !21317, file: !7152, line: 28, baseType: !5, size: 64)
!21320 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !21317, file: !7152, line: 29, baseType: !6, size: 64, offset: 64)
!21321 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iovlen", scope: !21311, file: !1505, line: 265, baseType: !6, size: 64, offset: 192)
!21322 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control", scope: !21311, file: !1505, line: 267, baseType: !5, size: 64, offset: 256)
!21323 = !DIDerivedType(tag: DW_TAG_member, name: "msg_controllen", scope: !21311, file: !1505, line: 268, baseType: !6, size: 64, offset: 320)
!21324 = !DIDerivedType(tag: DW_TAG_member, name: "msg_flags", scope: !21311, file: !1505, line: 273, baseType: !37, size: 32, offset: 384)
!21325 = !DILocation(line: 349, column: 23, scope: !21301)
!21326 = !DILocalVariable(name: "iovec", scope: !21301, file: !2992, line: 350, type: !21317)
!21327 = !DILocation(line: 350, column: 22, scope: !21301)
!21328 = !DILocalVariable(name: "sockaddr", scope: !21301, file: !2992, line: 351, type: !20923)
!21329 = !DILocation(line: 351, column: 30, scope: !21301)
!21330 = !DILocalVariable(name: "e", scope: !21301, file: !2992, line: 352, type: !480)
!21331 = !DILocation(line: 352, column: 21, scope: !21301)
!21332 = !DILocation(line: 354, column: 14, scope: !21333)
!21333 = distinct !DILexicalBlock(scope: !21301, file: !2992, line: 354, column: 13)
!21334 = !DILocation(line: 354, column: 13, scope: !21301)
!21335 = !DILocation(line: 355, column: 19, scope: !21336)
!21336 = distinct !DILexicalBlock(scope: !21333, file: !2992, line: 354, column: 21)
!21337 = !DILocation(line: 356, column: 17, scope: !21336)
!21338 = !DILocation(line: 359, column: 13, scope: !21301)
!21339 = !DILocation(line: 359, column: 11, scope: !21301)
!21340 = !DILocation(line: 360, column: 14, scope: !21341)
!21341 = distinct !DILexicalBlock(scope: !21301, file: !2992, line: 360, column: 13)
!21342 = !DILocation(line: 360, column: 13, scope: !21301)
!21343 = !DILocation(line: 361, column: 17, scope: !21341)
!21344 = !DILocation(line: 364, column: 14, scope: !21345)
!21345 = distinct !DILexicalBlock(scope: !21301, file: !2992, line: 364, column: 13)
!21346 = !DILocation(line: 364, column: 19, scope: !21345)
!21347 = !DILocation(line: 364, column: 26, scope: !21345)
!21348 = !DILocation(line: 364, column: 29, scope: !21345)
!21349 = !DILocation(line: 364, column: 34, scope: !21345)
!21350 = !DILocation(line: 364, column: 42, scope: !21345)
!21351 = !DILocation(line: 364, column: 45, scope: !21345)
!21352 = !DILocation(line: 364, column: 50, scope: !21345)
!21353 = !DILocation(line: 364, column: 13, scope: !21301)
!21354 = !DILocation(line: 365, column: 19, scope: !21355)
!21355 = distinct !DILexicalBlock(scope: !21345, file: !2992, line: 364, column: 56)
!21356 = !DILocation(line: 366, column: 17, scope: !21355)
!21357 = !DILocation(line: 369, column: 14, scope: !21301)
!21358 = !DILocation(line: 369, column: 12, scope: !21301)
!21359 = !DILocation(line: 370, column: 13, scope: !21360)
!21360 = distinct !DILexicalBlock(scope: !21301, file: !2992, line: 370, column: 13)
!21361 = !DILocation(line: 370, column: 16, scope: !21360)
!21362 = !DILocation(line: 370, column: 13, scope: !21301)
!21363 = !DILocation(line: 371, column: 22, scope: !21364)
!21364 = distinct !DILexicalBlock(scope: !21360, file: !2992, line: 370, column: 21)
!21365 = !DILocation(line: 371, column: 21, scope: !21364)
!21366 = !DILocation(line: 371, column: 19, scope: !21364)
!21367 = !DILocation(line: 372, column: 17, scope: !21364)
!21368 = !DILocation(line: 375, column: 9, scope: !21301)
!21369 = !DILocation(line: 376, column: 21, scope: !21301)
!21370 = !DILocation(line: 376, column: 31, scope: !21301)
!21371 = !DILocation(line: 377, column: 29, scope: !21301)
!21372 = !DILocation(line: 377, column: 17, scope: !21301)
!21373 = !DILocation(line: 377, column: 39, scope: !21301)
!21374 = !DILocation(line: 377, column: 9, scope: !21301)
!21375 = !DILocation(line: 379, column: 25, scope: !21376)
!21376 = distinct !DILexicalBlock(scope: !21301, file: !2992, line: 379, column: 13)
!21377 = !DILocation(line: 379, column: 13, scope: !21376)
!21378 = !DILocation(line: 379, column: 37, scope: !21376)
!21379 = !DILocation(line: 379, column: 13, scope: !21301)
!21380 = !DILocation(line: 380, column: 29, scope: !21376)
!21381 = !DILocation(line: 380, column: 17, scope: !21376)
!21382 = !DILocation(line: 380, column: 41, scope: !21376)
!21383 = !DILocation(line: 382, column: 9, scope: !21301)
!21384 = !DILocation(line: 383, column: 34, scope: !21301)
!21385 = !DILocation(line: 383, column: 15, scope: !21301)
!21386 = !DILocation(line: 383, column: 24, scope: !21301)
!21387 = !DILocation(line: 384, column: 32, scope: !21301)
!21388 = !DILocation(line: 384, column: 25, scope: !21301)
!21389 = !DILocation(line: 384, column: 15, scope: !21301)
!21390 = !DILocation(line: 384, column: 23, scope: !21301)
!21391 = !DILocation(line: 386, column: 9, scope: !21301)
!21392 = !DILocation(line: 387, column: 16, scope: !21301)
!21393 = !DILocation(line: 387, column: 25, scope: !21301)
!21394 = !DILocation(line: 388, column: 90, scope: !21301)
!21395 = !DILocation(line: 388, column: 83, scope: !21301)
!21396 = !DILocation(line: 388, column: 81, scope: !21301)
!21397 = !DILocation(line: 388, column: 30, scope: !21301)
!21398 = !DILocation(line: 388, column: 16, scope: !21301)
!21399 = !DILocation(line: 388, column: 28, scope: !21301)
!21400 = !DILocation(line: 390, column: 20, scope: !21401)
!21401 = distinct !DILexicalBlock(scope: !21301, file: !2992, line: 390, column: 13)
!21402 = !DILocation(line: 390, column: 13, scope: !21401)
!21403 = !DILocation(line: 390, column: 32, scope: !21401)
!21404 = !DILocation(line: 390, column: 13, scope: !21301)
!21405 = !DILocation(line: 391, column: 24, scope: !21401)
!21406 = !DILocation(line: 391, column: 36, scope: !21401)
!21407 = !DILocation(line: 391, column: 17, scope: !21401)
!21408 = !DILocation(line: 393, column: 16, scope: !21301)
!21409 = !DILocation(line: 393, column: 24, scope: !21301)
!21410 = !DILocation(line: 394, column: 16, scope: !21301)
!21411 = !DILocation(line: 394, column: 27, scope: !21301)
!21412 = !DILocation(line: 396, column: 21, scope: !21413)
!21413 = distinct !DILexicalBlock(scope: !21301, file: !2992, line: 396, column: 13)
!21414 = !DILocation(line: 396, column: 13, scope: !21413)
!21415 = !DILocation(line: 396, column: 48, scope: !21413)
!21416 = !DILocation(line: 396, column: 13, scope: !21301)
!21417 = !DILocation(line: 397, column: 22, scope: !21418)
!21418 = distinct !DILexicalBlock(scope: !21413, file: !2992, line: 396, column: 53)
!21419 = !DILocation(line: 397, column: 21, scope: !21418)
!21420 = !DILocation(line: 397, column: 19, scope: !21418)
!21421 = !DILocation(line: 398, column: 17, scope: !21418)
!21422 = !DILocation(line: 401, column: 11, scope: !21301)
!21423 = !DILocation(line: 401, column: 9, scope: !21301)
!21424 = !DILabel(scope: !21301, name: "finish", file: !2992, line: 403)
!21425 = !DILocation(line: 403, column: 1, scope: !21301)
!21426 = !DILocation(line: 404, column: 13, scope: !21427)
!21427 = distinct !DILexicalBlock(scope: !21301, file: !2992, line: 404, column: 13)
!21428 = !DILocation(line: 404, column: 13, scope: !21301)
!21429 = !DILocation(line: 405, column: 17, scope: !21427)
!21430 = !DILocation(line: 407, column: 13, scope: !21431)
!21431 = distinct !DILexicalBlock(scope: !21301, file: !2992, line: 407, column: 13)
!21432 = !DILocation(line: 407, column: 16, scope: !21431)
!21433 = !DILocation(line: 407, column: 13, scope: !21301)
!21434 = !DILocation(line: 408, column: 23, scope: !21431)
!21435 = !DILocation(line: 408, column: 17, scope: !21431)
!21436 = !DILocation(line: 410, column: 16, scope: !21301)
!21437 = !DILocation(line: 410, column: 9, scope: !21301)
!21438 = !DILocation(line: 411, column: 1, scope: !21301)
!21439 = distinct !DISubprogram(name: "sd_notifyf", scope: !2992, file: !2992, line: 413, type: !21440, scopeLine: 413, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3073, retainedNodes: !74)
!21440 = !DISubroutineType(types: !21441)
!21441 = !{!37, !37, !480, null}
!21442 = !DILocalVariable(name: "unset_environment", arg: 1, scope: !21439, file: !2992, line: 413, type: !37)
!21443 = !DILocation(line: 413, column: 20, scope: !21439)
!21444 = !DILocalVariable(name: "format", arg: 2, scope: !21439, file: !2992, line: 413, type: !480)
!21445 = !DILocation(line: 413, column: 51, scope: !21439)
!21446 = !DILocalVariable(name: "ap", scope: !21439, file: !2992, line: 414, type: !21447)
!21447 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2698, line: 52, baseType: !21448)
!21448 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !5725, line: 14, baseType: !21449)
!21449 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !21450, baseType: !21451)
!21450 = !DIFile(filename: "common/sd-daemon.c", directory: "/home/raj/lwan")
!21451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21452, size: 192, elements: !1557)
!21452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", size: 192, elements: !21453)
!21453 = !{!21454, !21455, !21456, !21457}
!21454 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !21452, file: !21450, line: 414, baseType: !28, size: 32)
!21455 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !21452, file: !21450, line: 414, baseType: !28, size: 32, offset: 32)
!21456 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !21452, file: !21450, line: 414, baseType: !5, size: 64, offset: 64)
!21457 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !21452, file: !21450, line: 414, baseType: !5, size: 64, offset: 128)
!21458 = !DILocation(line: 414, column: 17, scope: !21439)
!21459 = !DILocalVariable(name: "p", scope: !21439, file: !2992, line: 415, type: !61)
!21460 = !DILocation(line: 415, column: 15, scope: !21439)
!21461 = !DILocalVariable(name: "r", scope: !21439, file: !2992, line: 416, type: !37)
!21462 = !DILocation(line: 416, column: 13, scope: !21439)
!21463 = !DILocation(line: 418, column: 9, scope: !21439)
!21464 = !DILocation(line: 419, column: 27, scope: !21439)
!21465 = !DILocation(line: 419, column: 35, scope: !21439)
!21466 = !DILocation(line: 419, column: 13, scope: !21439)
!21467 = !DILocation(line: 419, column: 11, scope: !21439)
!21468 = !DILocation(line: 420, column: 9, scope: !21439)
!21469 = !DILocation(line: 422, column: 13, scope: !21470)
!21470 = distinct !DILexicalBlock(scope: !21439, file: !2992, line: 422, column: 13)
!21471 = !DILocation(line: 422, column: 15, scope: !21470)
!21472 = !DILocation(line: 422, column: 19, scope: !21470)
!21473 = !DILocation(line: 422, column: 23, scope: !21470)
!21474 = !DILocation(line: 422, column: 13, scope: !21439)
!21475 = !DILocation(line: 423, column: 17, scope: !21470)
!21476 = !DILocation(line: 425, column: 23, scope: !21439)
!21477 = !DILocation(line: 425, column: 42, scope: !21439)
!21478 = !DILocation(line: 425, column: 13, scope: !21439)
!21479 = !DILocation(line: 425, column: 11, scope: !21439)
!21480 = !DILocation(line: 426, column: 14, scope: !21439)
!21481 = !DILocation(line: 426, column: 9, scope: !21439)
!21482 = !DILocation(line: 428, column: 16, scope: !21439)
!21483 = !DILocation(line: 428, column: 9, scope: !21439)
!21484 = !DILocation(line: 429, column: 1, scope: !21439)
!21485 = distinct !DISubprogram(name: "sd_booted", scope: !2992, file: !2992, line: 431, type: !14068, scopeLine: 431, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3073, retainedNodes: !74)
!21486 = !DILocalVariable(name: "st", scope: !21485, file: !2992, line: 432, type: !20740)
!21487 = !DILocation(line: 432, column: 21, scope: !21485)
!21488 = !DILocation(line: 438, column: 13, scope: !21489)
!21489 = distinct !DILexicalBlock(scope: !21485, file: !2992, line: 438, column: 13)
!21490 = !DILocation(line: 438, column: 48, scope: !21489)
!21491 = !DILocation(line: 438, column: 13, scope: !21485)
!21492 = !DILocation(line: 439, column: 17, scope: !21489)
!21493 = !DILocation(line: 441, column: 18, scope: !21485)
!21494 = !DILocation(line: 441, column: 17, scope: !21485)
!21495 = !DILocation(line: 441, column: 16, scope: !21485)
!21496 = !DILocation(line: 441, column: 9, scope: !21485)
!21497 = !DILocation(line: 442, column: 1, scope: !21485)
!21498 = distinct !DISubprogram(name: "sd_watchdog_enabled", scope: !2992, file: !2992, line: 444, type: !21499, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3073, retainedNodes: !74)
!21499 = !DISubroutineType(types: !21500)
!21500 = !{!37, !37, !2977}
!21501 = !DILocalVariable(name: "unset_environment", arg: 1, scope: !21498, file: !2992, line: 444, type: !37)
!21502 = !DILocation(line: 444, column: 29, scope: !21498)
!21503 = !DILocalVariable(name: "usec", arg: 2, scope: !21498, file: !2992, line: 444, type: !2977)
!21504 = !DILocation(line: 444, column: 58, scope: !21498)
!21505 = !DILocalVariable(name: "ll", scope: !21498, file: !2992, line: 445, type: !21506)
!21506 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!21507 = !DILocation(line: 445, column: 28, scope: !21498)
!21508 = !DILocalVariable(name: "l", scope: !21498, file: !2992, line: 446, type: !8)
!21509 = !DILocation(line: 446, column: 23, scope: !21498)
!21510 = !DILocalVariable(name: "e", scope: !21498, file: !2992, line: 447, type: !480)
!21511 = !DILocation(line: 447, column: 21, scope: !21498)
!21512 = !DILocalVariable(name: "p", scope: !21498, file: !2992, line: 448, type: !61)
!21513 = !DILocation(line: 448, column: 15, scope: !21498)
!21514 = !DILocalVariable(name: "r", scope: !21498, file: !2992, line: 449, type: !37)
!21515 = !DILocation(line: 449, column: 13, scope: !21498)
!21516 = !DILocation(line: 451, column: 13, scope: !21498)
!21517 = !DILocation(line: 451, column: 11, scope: !21498)
!21518 = !DILocation(line: 452, column: 14, scope: !21519)
!21519 = distinct !DILexicalBlock(scope: !21498, file: !2992, line: 452, column: 13)
!21520 = !DILocation(line: 452, column: 13, scope: !21498)
!21521 = !DILocation(line: 453, column: 19, scope: !21522)
!21522 = distinct !DILexicalBlock(scope: !21519, file: !2992, line: 452, column: 17)
!21523 = !DILocation(line: 454, column: 17, scope: !21522)
!21524 = !DILocation(line: 457, column: 9, scope: !21498)
!21525 = !DILocation(line: 457, column: 15, scope: !21498)
!21526 = !DILocation(line: 458, column: 21, scope: !21498)
!21527 = !DILocation(line: 458, column: 13, scope: !21498)
!21528 = !DILocation(line: 458, column: 11, scope: !21498)
!21529 = !DILocation(line: 459, column: 13, scope: !21530)
!21530 = distinct !DILexicalBlock(scope: !21498, file: !2992, line: 459, column: 13)
!21531 = !DILocation(line: 459, column: 19, scope: !21530)
!21532 = !DILocation(line: 459, column: 13, scope: !21498)
!21533 = !DILocation(line: 460, column: 22, scope: !21534)
!21534 = distinct !DILexicalBlock(scope: !21530, file: !2992, line: 459, column: 24)
!21535 = !DILocation(line: 460, column: 21, scope: !21534)
!21536 = !DILocation(line: 460, column: 19, scope: !21534)
!21537 = !DILocation(line: 461, column: 17, scope: !21534)
!21538 = !DILocation(line: 463, column: 14, scope: !21539)
!21539 = distinct !DILexicalBlock(scope: !21498, file: !2992, line: 463, column: 13)
!21540 = !DILocation(line: 463, column: 16, scope: !21539)
!21541 = !DILocation(line: 463, column: 19, scope: !21539)
!21542 = !DILocation(line: 463, column: 24, scope: !21539)
!21543 = !DILocation(line: 463, column: 21, scope: !21539)
!21544 = !DILocation(line: 463, column: 26, scope: !21539)
!21545 = !DILocation(line: 463, column: 30, scope: !21539)
!21546 = !DILocation(line: 463, column: 29, scope: !21539)
!21547 = !DILocation(line: 463, column: 32, scope: !21539)
!21548 = !DILocation(line: 463, column: 35, scope: !21539)
!21549 = !DILocation(line: 463, column: 37, scope: !21539)
!21550 = !DILocation(line: 463, column: 13, scope: !21498)
!21551 = !DILocation(line: 464, column: 19, scope: !21552)
!21552 = distinct !DILexicalBlock(scope: !21539, file: !2992, line: 463, column: 43)
!21553 = !DILocation(line: 465, column: 17, scope: !21552)
!21554 = !DILocation(line: 469, column: 13, scope: !21555)
!21555 = distinct !DILexicalBlock(scope: !21498, file: !2992, line: 469, column: 13)
!21556 = !DILocation(line: 469, column: 33, scope: !21555)
!21557 = !DILocation(line: 469, column: 25, scope: !21555)
!21558 = !DILocation(line: 469, column: 22, scope: !21555)
!21559 = !DILocation(line: 469, column: 13, scope: !21498)
!21560 = !DILocation(line: 470, column: 19, scope: !21561)
!21561 = distinct !DILexicalBlock(scope: !21555, file: !2992, line: 469, column: 36)
!21562 = !DILocation(line: 471, column: 17, scope: !21561)
!21563 = !DILocation(line: 474, column: 13, scope: !21498)
!21564 = !DILocation(line: 474, column: 11, scope: !21498)
!21565 = !DILocation(line: 475, column: 14, scope: !21566)
!21566 = distinct !DILexicalBlock(scope: !21498, file: !2992, line: 475, column: 13)
!21567 = !DILocation(line: 475, column: 13, scope: !21498)
!21568 = !DILocation(line: 476, column: 19, scope: !21569)
!21569 = distinct !DILexicalBlock(scope: !21566, file: !2992, line: 475, column: 17)
!21570 = !DILocation(line: 477, column: 17, scope: !21569)
!21571 = !DILocation(line: 480, column: 9, scope: !21498)
!21572 = !DILocation(line: 480, column: 15, scope: !21498)
!21573 = !DILocation(line: 481, column: 23, scope: !21498)
!21574 = !DILocation(line: 481, column: 14, scope: !21498)
!21575 = !DILocation(line: 481, column: 12, scope: !21498)
!21576 = !DILocation(line: 482, column: 13, scope: !21577)
!21577 = distinct !DILexicalBlock(scope: !21498, file: !2992, line: 482, column: 13)
!21578 = !DILocation(line: 482, column: 19, scope: !21577)
!21579 = !DILocation(line: 482, column: 13, scope: !21498)
!21580 = !DILocation(line: 483, column: 22, scope: !21581)
!21581 = distinct !DILexicalBlock(scope: !21577, file: !2992, line: 482, column: 24)
!21582 = !DILocation(line: 483, column: 21, scope: !21581)
!21583 = !DILocation(line: 483, column: 19, scope: !21581)
!21584 = !DILocation(line: 484, column: 17, scope: !21581)
!21585 = !DILocation(line: 486, column: 14, scope: !21586)
!21586 = distinct !DILexicalBlock(scope: !21498, file: !2992, line: 486, column: 13)
!21587 = !DILocation(line: 486, column: 16, scope: !21586)
!21588 = !DILocation(line: 486, column: 19, scope: !21586)
!21589 = !DILocation(line: 486, column: 24, scope: !21586)
!21590 = !DILocation(line: 486, column: 21, scope: !21586)
!21591 = !DILocation(line: 486, column: 26, scope: !21586)
!21592 = !DILocation(line: 486, column: 30, scope: !21586)
!21593 = !DILocation(line: 486, column: 29, scope: !21586)
!21594 = !DILocation(line: 486, column: 32, scope: !21586)
!21595 = !DILocation(line: 486, column: 35, scope: !21586)
!21596 = !DILocation(line: 486, column: 37, scope: !21586)
!21597 = !DILocation(line: 486, column: 13, scope: !21498)
!21598 = !DILocation(line: 487, column: 19, scope: !21599)
!21599 = distinct !DILexicalBlock(scope: !21586, file: !2992, line: 486, column: 43)
!21600 = !DILocation(line: 488, column: 17, scope: !21599)
!21601 = !DILocation(line: 491, column: 13, scope: !21602)
!21602 = distinct !DILexicalBlock(scope: !21498, file: !2992, line: 491, column: 13)
!21603 = !DILocation(line: 491, column: 13, scope: !21498)
!21604 = !DILocation(line: 492, column: 25, scope: !21602)
!21605 = !DILocation(line: 492, column: 18, scope: !21602)
!21606 = !DILocation(line: 492, column: 23, scope: !21602)
!21607 = !DILocation(line: 492, column: 17, scope: !21602)
!21608 = !DILocation(line: 494, column: 11, scope: !21498)
!21609 = !DILocation(line: 494, column: 9, scope: !21498)
!21610 = !DILabel(scope: !21498, name: "finish", file: !2992, line: 496)
!21611 = !DILocation(line: 496, column: 1, scope: !21498)
!21612 = !DILocation(line: 497, column: 13, scope: !21613)
!21613 = distinct !DILexicalBlock(scope: !21498, file: !2992, line: 497, column: 13)
!21614 = !DILocation(line: 497, column: 13, scope: !21498)
!21615 = !DILocation(line: 498, column: 17, scope: !21616)
!21616 = distinct !DILexicalBlock(scope: !21613, file: !2992, line: 497, column: 32)
!21617 = !DILocation(line: 499, column: 17, scope: !21616)
!21618 = !DILocation(line: 500, column: 9, scope: !21616)
!21619 = !DILocation(line: 502, column: 16, scope: !21498)
!21620 = !DILocation(line: 502, column: 9, scope: !21498)
!21621 = distinct !DISubprogram(name: "strbuf_init_with_size", scope: !3088, file: !3088, line: 83, type: !21622, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3082, retainedNodes: !74)
!21622 = !DISubroutineType(types: !21623)
!21623 = !{!341, !21624, !6}
!21624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21625, size: 64)
!21625 = !DIDerivedType(tag: DW_TAG_typedef, name: "strbuf_t", file: !472, line: 25, baseType: !21626)
!21626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "strbuf_t_", file: !472, line: 27, size: 256, elements: !21627)
!21627 = !{!21628, !21633, !21638}
!21628 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !21626, file: !472, line: 31, baseType: !21629, size: 64)
!21629 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !21626, file: !472, line: 28, size: 64, elements: !21630)
!21630 = !{!21631, !21632}
!21631 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !21629, file: !472, line: 29, baseType: !61, size: 64)
!21632 = !DIDerivedType(tag: DW_TAG_member, name: "static_buffer", scope: !21629, file: !472, line: 30, baseType: !480, size: 64)
!21633 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !21626, file: !472, line: 34, baseType: !21634, size: 128, offset: 64)
!21634 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !21626, file: !472, line: 32, size: 128, elements: !21635)
!21635 = !{!21636, !21637}
!21636 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !21634, file: !472, line: 33, baseType: !6, size: 64)
!21637 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !21634, file: !472, line: 33, baseType: !6, size: 64, offset: 64)
!21638 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !21626, file: !472, line: 35, baseType: !28, size: 32, offset: 192)
!21639 = !DILocalVariable(name: "s", arg: 1, scope: !21621, file: !3088, line: 83, type: !21624)
!21640 = !DILocation(line: 83, column: 33, scope: !21621)
!21641 = !DILocalVariable(name: "size", arg: 2, scope: !21621, file: !3088, line: 83, type: !6)
!21642 = !DILocation(line: 83, column: 43, scope: !21621)
!21643 = !DILocation(line: 85, column: 9, scope: !21644)
!21644 = distinct !DILexicalBlock(scope: !21621, file: !3088, line: 85, column: 9)
!21645 = !DILocation(line: 85, column: 9, scope: !21621)
!21646 = !DILocation(line: 86, column: 9, scope: !21644)
!21647 = !DILocation(line: 88, column: 12, scope: !21621)
!21648 = !DILocation(line: 88, column: 5, scope: !21621)
!21649 = !DILocation(line: 90, column: 9, scope: !21650)
!21650 = distinct !DILexicalBlock(scope: !21621, file: !3088, line: 90, column: 9)
!21651 = !DILocation(line: 90, column: 9, scope: !21621)
!21652 = !DILocation(line: 91, column: 9, scope: !21650)
!21653 = !DILocation(line: 93, column: 5, scope: !21621)
!21654 = !DILocation(line: 93, column: 8, scope: !21621)
!21655 = !DILocation(line: 93, column: 12, scope: !21621)
!21656 = !DILocation(line: 93, column: 19, scope: !21621)
!21657 = !DILocation(line: 94, column: 5, scope: !21621)
!21658 = !DILocation(line: 94, column: 8, scope: !21621)
!21659 = !DILocation(line: 94, column: 14, scope: !21621)
!21660 = !DILocation(line: 94, column: 24, scope: !21621)
!21661 = !DILocation(line: 96, column: 5, scope: !21621)
!21662 = !DILocation(line: 97, column: 1, scope: !21621)
!21663 = distinct !DISubprogram(name: "grow_buffer_if_needed", scope: !3088, file: !3088, line: 51, type: !21622, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3082, retainedNodes: !74)
!21664 = !DILocalVariable(name: "s", arg: 1, scope: !21663, file: !3088, line: 51, type: !21624)
!21665 = !DILocation(line: 51, column: 33, scope: !21663)
!21666 = !DILocalVariable(name: "size", arg: 2, scope: !21663, file: !3088, line: 51, type: !6)
!21667 = !DILocation(line: 51, column: 43, scope: !21663)
!21668 = !DILocation(line: 53, column: 9, scope: !21669)
!21669 = distinct !DILexicalBlock(scope: !21663, file: !3088, line: 53, column: 9)
!21670 = !DILocation(line: 53, column: 12, scope: !21669)
!21671 = !DILocation(line: 53, column: 18, scope: !21669)
!21672 = !DILocation(line: 53, column: 9, scope: !21663)
!21673 = !DILocalVariable(name: "next_power", scope: !21674, file: !3088, line: 54, type: !73)
!21674 = distinct !DILexicalBlock(scope: !21669, file: !3088, line: 53, column: 28)
!21675 = !DILocation(line: 54, column: 22, scope: !21674)
!21676 = !DILocation(line: 54, column: 62, scope: !21674)
!21677 = !DILocation(line: 54, column: 67, scope: !21674)
!21678 = !DILocation(line: 55, column: 21, scope: !21674)
!21679 = !DILocation(line: 55, column: 24, scope: !21674)
!21680 = !DILocation(line: 55, column: 28, scope: !21674)
!21681 = !DILocalVariable(name: "one", arg: 1, scope: !21682, file: !3088, line: 45, type: !6)
!21682 = distinct !DISubprogram(name: "max", scope: !3088, file: !3088, line: 45, type: !21683, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3082, retainedNodes: !74)
!21683 = !DISubroutineType(types: !21684)
!21684 = !{!6, !6, !6}
!21685 = !DILocation(line: 45, column: 12, scope: !21682, inlinedAt: !21686)
!21686 = distinct !DILocation(line: 54, column: 58, scope: !21674)
!21687 = !DILocalVariable(name: "another", arg: 2, scope: !21682, file: !3088, line: 45, type: !6)
!21688 = !DILocation(line: 45, column: 24, scope: !21682, inlinedAt: !21686)
!21689 = !DILocation(line: 47, column: 13, scope: !21682, inlinedAt: !21686)
!21690 = !DILocation(line: 47, column: 19, scope: !21682, inlinedAt: !21686)
!21691 = !DILocation(line: 47, column: 17, scope: !21682, inlinedAt: !21686)
!21692 = !DILocation(line: 47, column: 12, scope: !21682, inlinedAt: !21686)
!21693 = !DILocation(line: 47, column: 30, scope: !21682, inlinedAt: !21686)
!21694 = !DILocation(line: 47, column: 36, scope: !21682, inlinedAt: !21686)
!21695 = !DILocation(line: 54, column: 35, scope: !21674)
!21696 = !DILocalVariable(name: "buffer", scope: !21674, file: !3088, line: 56, type: !61)
!21697 = !DILocation(line: 56, column: 15, scope: !21674)
!21698 = !DILocation(line: 56, column: 31, scope: !21674)
!21699 = !DILocation(line: 56, column: 24, scope: !21674)
!21700 = !DILocation(line: 57, column: 14, scope: !21701)
!21701 = distinct !DILexicalBlock(scope: !21674, file: !3088, line: 57, column: 13)
!21702 = !DILocation(line: 57, column: 13, scope: !21674)
!21703 = !DILocation(line: 58, column: 13, scope: !21701)
!21704 = !DILocation(line: 60, column: 16, scope: !21674)
!21705 = !DILocation(line: 60, column: 24, scope: !21674)
!21706 = !DILocation(line: 60, column: 27, scope: !21674)
!21707 = !DILocation(line: 60, column: 33, scope: !21674)
!21708 = !DILocation(line: 60, column: 48, scope: !21674)
!21709 = !DILocation(line: 60, column: 51, scope: !21674)
!21710 = !DILocation(line: 60, column: 55, scope: !21674)
!21711 = !DILocation(line: 60, column: 9, scope: !21674)
!21712 = !DILocation(line: 61, column: 9, scope: !21674)
!21713 = !DILocation(line: 61, column: 16, scope: !21674)
!21714 = !DILocation(line: 61, column: 19, scope: !21674)
!21715 = !DILocation(line: 61, column: 23, scope: !21674)
!21716 = !DILocation(line: 61, column: 30, scope: !21674)
!21717 = !DILocation(line: 61, column: 35, scope: !21674)
!21718 = !DILocation(line: 63, column: 9, scope: !21674)
!21719 = !DILocation(line: 63, column: 12, scope: !21674)
!21720 = !DILocation(line: 63, column: 18, scope: !21674)
!21721 = !DILocation(line: 64, column: 28, scope: !21674)
!21722 = !DILocation(line: 64, column: 9, scope: !21674)
!21723 = !DILocation(line: 64, column: 12, scope: !21674)
!21724 = !DILocation(line: 64, column: 16, scope: !21674)
!21725 = !DILocation(line: 64, column: 26, scope: !21674)
!21726 = !DILocation(line: 65, column: 27, scope: !21674)
!21727 = !DILocation(line: 65, column: 9, scope: !21674)
!21728 = !DILocation(line: 65, column: 12, scope: !21674)
!21729 = !DILocation(line: 65, column: 25, scope: !21674)
!21730 = !DILocation(line: 67, column: 9, scope: !21674)
!21731 = !DILocation(line: 70, column: 9, scope: !21732)
!21732 = distinct !DILexicalBlock(scope: !21663, file: !3088, line: 70, column: 9)
!21733 = !DILocation(line: 70, column: 9, scope: !21663)
!21734 = !DILocalVariable(name: "next_power", scope: !21735, file: !3088, line: 71, type: !73)
!21735 = distinct !DILexicalBlock(scope: !21732, file: !3088, line: 70, column: 44)
!21736 = !DILocation(line: 71, column: 22, scope: !21735)
!21737 = !DILocation(line: 71, column: 58, scope: !21735)
!21738 = !DILocation(line: 71, column: 35, scope: !21735)
!21739 = !DILocalVariable(name: "buffer", scope: !21735, file: !3088, line: 72, type: !61)
!21740 = !DILocation(line: 72, column: 15, scope: !21735)
!21741 = !DILocation(line: 72, column: 32, scope: !21735)
!21742 = !DILocation(line: 72, column: 35, scope: !21735)
!21743 = !DILocation(line: 72, column: 41, scope: !21735)
!21744 = !DILocation(line: 72, column: 49, scope: !21735)
!21745 = !DILocation(line: 72, column: 60, scope: !21735)
!21746 = !DILocation(line: 72, column: 24, scope: !21735)
!21747 = !DILocation(line: 73, column: 13, scope: !21748)
!21748 = distinct !DILexicalBlock(scope: !21735, file: !3088, line: 73, column: 13)
!21749 = !DILocation(line: 73, column: 13, scope: !21735)
!21750 = !DILocation(line: 74, column: 13, scope: !21748)
!21751 = !DILocation(line: 75, column: 28, scope: !21735)
!21752 = !DILocation(line: 75, column: 9, scope: !21735)
!21753 = !DILocation(line: 75, column: 12, scope: !21735)
!21754 = !DILocation(line: 75, column: 16, scope: !21735)
!21755 = !DILocation(line: 75, column: 26, scope: !21735)
!21756 = !DILocation(line: 76, column: 27, scope: !21735)
!21757 = !DILocation(line: 76, column: 9, scope: !21735)
!21758 = !DILocation(line: 76, column: 12, scope: !21735)
!21759 = !DILocation(line: 76, column: 25, scope: !21735)
!21760 = !DILocation(line: 77, column: 5, scope: !21735)
!21761 = !DILocation(line: 79, column: 5, scope: !21663)
!21762 = !DILocation(line: 80, column: 1, scope: !21663)
!21763 = distinct !DISubprogram(name: "find_next_power_of_two", scope: !3088, file: !3088, line: 33, type: !21764, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3082, retainedNodes: !74)
!21764 = !DISubroutineType(types: !21765)
!21765 = !{!6, !6}
!21766 = !DILocalVariable(name: "number", arg: 1, scope: !21763, file: !3088, line: 33, type: !6)
!21767 = !DILocation(line: 33, column: 31, scope: !21763)
!21768 = !DILocation(line: 35, column: 11, scope: !21763)
!21769 = !DILocation(line: 36, column: 15, scope: !21763)
!21770 = !DILocation(line: 36, column: 22, scope: !21763)
!21771 = !DILocation(line: 36, column: 12, scope: !21763)
!21772 = !DILocation(line: 37, column: 15, scope: !21763)
!21773 = !DILocation(line: 37, column: 22, scope: !21763)
!21774 = !DILocation(line: 37, column: 12, scope: !21763)
!21775 = !DILocation(line: 38, column: 15, scope: !21763)
!21776 = !DILocation(line: 38, column: 22, scope: !21763)
!21777 = !DILocation(line: 38, column: 12, scope: !21763)
!21778 = !DILocation(line: 39, column: 15, scope: !21763)
!21779 = !DILocation(line: 39, column: 22, scope: !21763)
!21780 = !DILocation(line: 39, column: 12, scope: !21763)
!21781 = !DILocation(line: 40, column: 15, scope: !21763)
!21782 = !DILocation(line: 40, column: 22, scope: !21763)
!21783 = !DILocation(line: 40, column: 12, scope: !21763)
!21784 = !DILocation(line: 41, column: 12, scope: !21763)
!21785 = !DILocation(line: 41, column: 19, scope: !21763)
!21786 = !DILocation(line: 41, column: 5, scope: !21763)
!21787 = distinct !DISubprogram(name: "strbuf_init", scope: !3088, file: !3088, line: 100, type: !21788, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3082, retainedNodes: !74)
!21788 = !DISubroutineType(types: !21789)
!21789 = !{!341, !21624}
!21790 = !DILocalVariable(name: "s", arg: 1, scope: !21787, file: !3088, line: 100, type: !21624)
!21791 = !DILocation(line: 100, column: 23, scope: !21787)
!21792 = !DILocation(line: 102, column: 34, scope: !21787)
!21793 = !DILocation(line: 102, column: 12, scope: !21787)
!21794 = !DILocation(line: 102, column: 5, scope: !21787)
!21795 = distinct !DISubprogram(name: "strbuf_new_with_size", scope: !3088, file: !3088, line: 106, type: !21796, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3082, retainedNodes: !74)
!21796 = !DISubroutineType(types: !21797)
!21797 = !{!21624, !6}
!21798 = !DILocalVariable(name: "size", arg: 1, scope: !21795, file: !3088, line: 106, type: !6)
!21799 = !DILocation(line: 106, column: 29, scope: !21795)
!21800 = !DILocalVariable(name: "s", scope: !21795, file: !3088, line: 108, type: !21624)
!21801 = !DILocation(line: 108, column: 15, scope: !21795)
!21802 = !DILocation(line: 108, column: 19, scope: !21795)
!21803 = !DILocation(line: 109, column: 9, scope: !21804)
!21804 = distinct !DILexicalBlock(scope: !21795, file: !3088, line: 109, column: 9)
!21805 = !DILocation(line: 109, column: 9, scope: !21795)
!21806 = !DILocation(line: 110, column: 14, scope: !21807)
!21807 = distinct !DILexicalBlock(scope: !21804, file: !3088, line: 109, column: 52)
!21808 = !DILocation(line: 110, column: 9, scope: !21807)
!21809 = !DILocation(line: 111, column: 11, scope: !21807)
!21810 = !DILocation(line: 112, column: 5, scope: !21807)
!21811 = !DILocation(line: 113, column: 9, scope: !21812)
!21812 = distinct !DILexicalBlock(scope: !21804, file: !3088, line: 112, column: 12)
!21813 = !DILocation(line: 113, column: 12, scope: !21812)
!21814 = !DILocation(line: 113, column: 18, scope: !21812)
!21815 = !DILocation(line: 115, column: 12, scope: !21795)
!21816 = !DILocation(line: 115, column: 5, scope: !21795)
!21817 = distinct !DISubprogram(name: "strbuf_new", scope: !3088, file: !3088, line: 119, type: !21818, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3082, retainedNodes: !74)
!21818 = !DISubroutineType(types: !21819)
!21819 = !{!21624}
!21820 = !DILocation(line: 121, column: 12, scope: !21817)
!21821 = !DILocation(line: 121, column: 5, scope: !21817)
!21822 = distinct !DISubprogram(name: "strbuf_free", scope: !3088, file: !3088, line: 125, type: !21823, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3082, retainedNodes: !74)
!21823 = !DISubroutineType(types: !21824)
!21824 = !{null, !21624}
!21825 = !DILocalVariable(name: "s", arg: 1, scope: !21822, file: !3088, line: 125, type: !21624)
!21826 = !DILocation(line: 125, column: 23, scope: !21822)
!21827 = !DILocation(line: 127, column: 9, scope: !21828)
!21828 = distinct !DILexicalBlock(scope: !21822, file: !3088, line: 127, column: 9)
!21829 = !DILocation(line: 127, column: 9, scope: !21822)
!21830 = !DILocation(line: 128, column: 9, scope: !21828)
!21831 = !DILocation(line: 129, column: 11, scope: !21832)
!21832 = distinct !DILexicalBlock(scope: !21822, file: !3088, line: 129, column: 9)
!21833 = !DILocation(line: 129, column: 14, scope: !21832)
!21834 = !DILocation(line: 129, column: 20, scope: !21832)
!21835 = !DILocation(line: 129, column: 9, scope: !21822)
!21836 = !DILocation(line: 130, column: 14, scope: !21832)
!21837 = !DILocation(line: 130, column: 17, scope: !21832)
!21838 = !DILocation(line: 130, column: 23, scope: !21832)
!21839 = !DILocation(line: 130, column: 9, scope: !21832)
!21840 = !DILocation(line: 131, column: 9, scope: !21841)
!21841 = distinct !DILexicalBlock(scope: !21822, file: !3088, line: 131, column: 9)
!21842 = !DILocation(line: 131, column: 12, scope: !21841)
!21843 = !DILocation(line: 131, column: 18, scope: !21841)
!21844 = !DILocation(line: 131, column: 9, scope: !21822)
!21845 = !DILocation(line: 132, column: 14, scope: !21841)
!21846 = !DILocation(line: 132, column: 9, scope: !21841)
!21847 = !DILocation(line: 133, column: 1, scope: !21822)
!21848 = distinct !DISubprogram(name: "strbuf_append_char", scope: !3088, file: !3088, line: 136, type: !21849, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3082, retainedNodes: !74)
!21849 = !DISubroutineType(types: !21850)
!21850 = !{!341, !21624, !76}
!21851 = !DILocalVariable(name: "s", arg: 1, scope: !21848, file: !3088, line: 136, type: !21624)
!21852 = !DILocation(line: 136, column: 30, scope: !21848)
!21853 = !DILocalVariable(name: "c", arg: 2, scope: !21848, file: !3088, line: 136, type: !76)
!21854 = !DILocation(line: 136, column: 44, scope: !21848)
!21855 = !DILocation(line: 138, column: 9, scope: !21856)
!21856 = distinct !DILexicalBlock(scope: !21848, file: !3088, line: 138, column: 9)
!21857 = !DILocation(line: 138, column: 9, scope: !21848)
!21858 = !DILocation(line: 139, column: 9, scope: !21856)
!21859 = !DILocation(line: 141, column: 44, scope: !21848)
!21860 = !DILocation(line: 141, column: 7, scope: !21848)
!21861 = !DILocation(line: 141, column: 10, scope: !21848)
!21862 = !DILocation(line: 141, column: 16, scope: !21848)
!21863 = !DILocation(line: 141, column: 25, scope: !21848)
!21864 = !DILocation(line: 141, column: 28, scope: !21848)
!21865 = !DILocation(line: 141, column: 32, scope: !21848)
!21866 = !DILocation(line: 141, column: 38, scope: !21848)
!21867 = !DILocation(line: 141, column: 23, scope: !21848)
!21868 = !DILocation(line: 141, column: 42, scope: !21848)
!21869 = !DILocation(line: 142, column: 7, scope: !21848)
!21870 = !DILocation(line: 142, column: 10, scope: !21848)
!21871 = !DILocation(line: 142, column: 16, scope: !21848)
!21872 = !DILocation(line: 142, column: 25, scope: !21848)
!21873 = !DILocation(line: 142, column: 28, scope: !21848)
!21874 = !DILocation(line: 142, column: 32, scope: !21848)
!21875 = !DILocation(line: 142, column: 23, scope: !21848)
!21876 = !DILocation(line: 142, column: 40, scope: !21848)
!21877 = !DILocation(line: 144, column: 5, scope: !21848)
!21878 = !DILocation(line: 145, column: 1, scope: !21848)
!21879 = distinct !DISubprogram(name: "strbuf_append_str", scope: !3088, file: !3088, line: 148, type: !21880, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3082, retainedNodes: !74)
!21880 = !DISubroutineType(types: !21881)
!21881 = !{!341, !21624, !480, !6}
!21882 = !DILocalVariable(name: "s1", arg: 1, scope: !21879, file: !3088, line: 148, type: !21624)
!21883 = !DILocation(line: 148, column: 29, scope: !21879)
!21884 = !DILocalVariable(name: "s2", arg: 2, scope: !21879, file: !3088, line: 148, type: !480)
!21885 = !DILocation(line: 148, column: 45, scope: !21879)
!21886 = !DILocalVariable(name: "sz", arg: 3, scope: !21879, file: !3088, line: 148, type: !6)
!21887 = !DILocation(line: 148, column: 56, scope: !21879)
!21888 = !DILocation(line: 150, column: 10, scope: !21889)
!21889 = distinct !DILexicalBlock(scope: !21879, file: !3088, line: 150, column: 9)
!21890 = !DILocation(line: 150, column: 9, scope: !21879)
!21891 = !DILocation(line: 151, column: 21, scope: !21889)
!21892 = !DILocation(line: 151, column: 14, scope: !21889)
!21893 = !DILocation(line: 151, column: 12, scope: !21889)
!21894 = !DILocation(line: 151, column: 9, scope: !21889)
!21895 = !DILocation(line: 153, column: 9, scope: !21896)
!21896 = distinct !DILexicalBlock(scope: !21879, file: !3088, line: 153, column: 9)
!21897 = !DILocation(line: 153, column: 9, scope: !21879)
!21898 = !DILocation(line: 154, column: 9, scope: !21896)
!21899 = !DILocation(line: 156, column: 12, scope: !21879)
!21900 = !DILocation(line: 156, column: 16, scope: !21879)
!21901 = !DILocation(line: 156, column: 22, scope: !21879)
!21902 = !DILocation(line: 156, column: 31, scope: !21879)
!21903 = !DILocation(line: 156, column: 35, scope: !21879)
!21904 = !DILocation(line: 156, column: 39, scope: !21879)
!21905 = !DILocation(line: 156, column: 29, scope: !21879)
!21906 = !DILocation(line: 156, column: 47, scope: !21879)
!21907 = !DILocation(line: 156, column: 51, scope: !21879)
!21908 = !DILocation(line: 156, column: 5, scope: !21879)
!21909 = !DILocation(line: 157, column: 23, scope: !21879)
!21910 = !DILocation(line: 157, column: 5, scope: !21879)
!21911 = !DILocation(line: 157, column: 9, scope: !21879)
!21912 = !DILocation(line: 157, column: 13, scope: !21879)
!21913 = !DILocation(line: 157, column: 20, scope: !21879)
!21914 = !DILocation(line: 158, column: 5, scope: !21879)
!21915 = !DILocation(line: 158, column: 9, scope: !21879)
!21916 = !DILocation(line: 158, column: 15, scope: !21879)
!21917 = !DILocation(line: 158, column: 22, scope: !21879)
!21918 = !DILocation(line: 158, column: 26, scope: !21879)
!21919 = !DILocation(line: 158, column: 30, scope: !21879)
!21920 = !DILocation(line: 158, column: 37, scope: !21879)
!21921 = !DILocation(line: 158, column: 42, scope: !21879)
!21922 = !DILocation(line: 160, column: 5, scope: !21879)
!21923 = !DILocation(line: 161, column: 1, scope: !21879)
!21924 = distinct !DISubprogram(name: "strbuf_set_static", scope: !3088, file: !3088, line: 164, type: !21880, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3082, retainedNodes: !74)
!21925 = !DILocalVariable(name: "s1", arg: 1, scope: !21924, file: !3088, line: 164, type: !21624)
!21926 = !DILocation(line: 164, column: 29, scope: !21924)
!21927 = !DILocalVariable(name: "s2", arg: 2, scope: !21924, file: !3088, line: 164, type: !480)
!21928 = !DILocation(line: 164, column: 45, scope: !21924)
!21929 = !DILocalVariable(name: "sz", arg: 3, scope: !21924, file: !3088, line: 164, type: !6)
!21930 = !DILocation(line: 164, column: 56, scope: !21924)
!21931 = !DILocation(line: 166, column: 10, scope: !21932)
!21932 = distinct !DILexicalBlock(scope: !21924, file: !3088, line: 166, column: 9)
!21933 = !DILocation(line: 166, column: 9, scope: !21924)
!21934 = !DILocation(line: 167, column: 21, scope: !21932)
!21935 = !DILocation(line: 167, column: 14, scope: !21932)
!21936 = !DILocation(line: 167, column: 12, scope: !21932)
!21937 = !DILocation(line: 167, column: 9, scope: !21932)
!21938 = !DILocation(line: 169, column: 11, scope: !21939)
!21939 = distinct !DILexicalBlock(scope: !21924, file: !3088, line: 169, column: 9)
!21940 = !DILocation(line: 169, column: 15, scope: !21939)
!21941 = !DILocation(line: 169, column: 21, scope: !21939)
!21942 = !DILocation(line: 169, column: 9, scope: !21924)
!21943 = !DILocation(line: 170, column: 14, scope: !21939)
!21944 = !DILocation(line: 170, column: 18, scope: !21939)
!21945 = !DILocation(line: 170, column: 24, scope: !21939)
!21946 = !DILocation(line: 170, column: 9, scope: !21939)
!21947 = !DILocation(line: 171, column: 31, scope: !21924)
!21948 = !DILocation(line: 171, column: 5, scope: !21924)
!21949 = !DILocation(line: 171, column: 9, scope: !21924)
!21950 = !DILocation(line: 171, column: 29, scope: !21924)
!21951 = !DILocation(line: 172, column: 42, scope: !21924)
!21952 = !DILocation(line: 172, column: 25, scope: !21924)
!21953 = !DILocation(line: 172, column: 29, scope: !21924)
!21954 = !DILocation(line: 172, column: 33, scope: !21924)
!21955 = !DILocation(line: 172, column: 40, scope: !21924)
!21956 = !DILocation(line: 172, column: 5, scope: !21924)
!21957 = !DILocation(line: 172, column: 9, scope: !21924)
!21958 = !DILocation(line: 172, column: 13, scope: !21924)
!21959 = !DILocation(line: 172, column: 23, scope: !21924)
!21960 = !DILocation(line: 173, column: 5, scope: !21924)
!21961 = !DILocation(line: 173, column: 9, scope: !21924)
!21962 = !DILocation(line: 173, column: 15, scope: !21924)
!21963 = !DILocation(line: 175, column: 5, scope: !21924)
!21964 = distinct !DISubprogram(name: "strbuf_set", scope: !3088, file: !3088, line: 179, type: !21880, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3082, retainedNodes: !74)
!21965 = !DILocalVariable(name: "s1", arg: 1, scope: !21964, file: !3088, line: 179, type: !21624)
!21966 = !DILocation(line: 179, column: 22, scope: !21964)
!21967 = !DILocalVariable(name: "s2", arg: 2, scope: !21964, file: !3088, line: 179, type: !480)
!21968 = !DILocation(line: 179, column: 38, scope: !21964)
!21969 = !DILocalVariable(name: "sz", arg: 3, scope: !21964, file: !3088, line: 179, type: !6)
!21970 = !DILocation(line: 179, column: 49, scope: !21964)
!21971 = !DILocation(line: 181, column: 10, scope: !21972)
!21972 = distinct !DILexicalBlock(scope: !21964, file: !3088, line: 181, column: 9)
!21973 = !DILocation(line: 181, column: 9, scope: !21964)
!21974 = !DILocation(line: 182, column: 21, scope: !21972)
!21975 = !DILocation(line: 182, column: 14, scope: !21972)
!21976 = !DILocation(line: 182, column: 12, scope: !21972)
!21977 = !DILocation(line: 182, column: 9, scope: !21972)
!21978 = !DILocation(line: 184, column: 9, scope: !21979)
!21979 = distinct !DILexicalBlock(scope: !21964, file: !3088, line: 184, column: 9)
!21980 = !DILocation(line: 184, column: 9, scope: !21964)
!21981 = !DILocation(line: 185, column: 9, scope: !21979)
!21982 = !DILocation(line: 187, column: 12, scope: !21964)
!21983 = !DILocation(line: 187, column: 16, scope: !21964)
!21984 = !DILocation(line: 187, column: 22, scope: !21964)
!21985 = !DILocation(line: 187, column: 30, scope: !21964)
!21986 = !DILocation(line: 187, column: 34, scope: !21964)
!21987 = !DILocation(line: 187, column: 5, scope: !21964)
!21988 = !DILocation(line: 188, column: 22, scope: !21964)
!21989 = !DILocation(line: 188, column: 5, scope: !21964)
!21990 = !DILocation(line: 188, column: 9, scope: !21964)
!21991 = !DILocation(line: 188, column: 13, scope: !21964)
!21992 = !DILocation(line: 188, column: 20, scope: !21964)
!21993 = !DILocation(line: 189, column: 5, scope: !21964)
!21994 = !DILocation(line: 189, column: 9, scope: !21964)
!21995 = !DILocation(line: 189, column: 15, scope: !21964)
!21996 = !DILocation(line: 189, column: 22, scope: !21964)
!21997 = !DILocation(line: 189, column: 25, scope: !21964)
!21998 = !DILocation(line: 189, column: 30, scope: !21964)
!21999 = !DILocation(line: 191, column: 5, scope: !21964)
!22000 = !DILocation(line: 192, column: 1, scope: !21964)
!22001 = distinct !DISubprogram(name: "strbuf_cmp", scope: !3088, file: !3088, line: 195, type: !22002, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3082, retainedNodes: !74)
!22002 = !DISubroutineType(types: !22003)
!22003 = !{!37, !21624, !21624}
!22004 = !DILocalVariable(name: "s1", arg: 1, scope: !22001, file: !3088, line: 195, type: !21624)
!22005 = !DILocation(line: 195, column: 22, scope: !22001)
!22006 = !DILocalVariable(name: "s2", arg: 2, scope: !22001, file: !3088, line: 195, type: !21624)
!22007 = !DILocation(line: 195, column: 36, scope: !22001)
!22008 = !DILocation(line: 197, column: 9, scope: !22009)
!22009 = distinct !DILexicalBlock(scope: !22001, file: !3088, line: 197, column: 9)
!22010 = !DILocation(line: 197, column: 15, scope: !22009)
!22011 = !DILocation(line: 197, column: 12, scope: !22009)
!22012 = !DILocation(line: 197, column: 9, scope: !22001)
!22013 = !DILocation(line: 198, column: 9, scope: !22009)
!22014 = !DILocalVariable(name: "result", scope: !22001, file: !3088, line: 199, type: !37)
!22015 = !DILocation(line: 199, column: 9, scope: !22001)
!22016 = !DILocation(line: 199, column: 25, scope: !22001)
!22017 = !DILocation(line: 199, column: 29, scope: !22001)
!22018 = !DILocation(line: 199, column: 35, scope: !22001)
!22019 = !DILocation(line: 199, column: 43, scope: !22001)
!22020 = !DILocation(line: 199, column: 47, scope: !22001)
!22021 = !DILocation(line: 199, column: 53, scope: !22001)
!22022 = !DILocation(line: 199, column: 61, scope: !22001)
!22023 = !DILocation(line: 199, column: 65, scope: !22001)
!22024 = !DILocation(line: 199, column: 69, scope: !22001)
!22025 = !DILocation(line: 199, column: 78, scope: !22001)
!22026 = !DILocation(line: 199, column: 82, scope: !22001)
!22027 = !DILocation(line: 199, column: 86, scope: !22001)
!22028 = !DILocation(line: 199, column: 76, scope: !22001)
!22029 = !DILocation(line: 199, column: 95, scope: !22001)
!22030 = !DILocation(line: 199, column: 99, scope: !22001)
!22031 = !DILocation(line: 199, column: 103, scope: !22001)
!22032 = !DILocation(line: 199, column: 112, scope: !22001)
!22033 = !DILocation(line: 199, column: 116, scope: !22001)
!22034 = !DILocation(line: 199, column: 120, scope: !22001)
!22035 = !DILocation(line: 199, column: 18, scope: !22001)
!22036 = !DILocation(line: 200, column: 10, scope: !22037)
!22037 = distinct !DILexicalBlock(scope: !22001, file: !3088, line: 200, column: 9)
!22038 = !DILocation(line: 200, column: 9, scope: !22001)
!22039 = !DILocation(line: 201, column: 22, scope: !22037)
!22040 = !DILocation(line: 201, column: 26, scope: !22037)
!22041 = !DILocation(line: 201, column: 30, scope: !22037)
!22042 = !DILocation(line: 201, column: 39, scope: !22037)
!22043 = !DILocation(line: 201, column: 43, scope: !22037)
!22044 = !DILocation(line: 201, column: 47, scope: !22037)
!22045 = !DILocation(line: 201, column: 37, scope: !22037)
!22046 = !DILocation(line: 201, column: 16, scope: !22037)
!22047 = !DILocation(line: 201, column: 9, scope: !22037)
!22048 = !DILocation(line: 202, column: 12, scope: !22001)
!22049 = !DILocation(line: 202, column: 5, scope: !22001)
!22050 = !DILocation(line: 203, column: 1, scope: !22001)
!22051 = distinct !DISubprogram(name: "strbuf_printf", scope: !3088, file: !3088, line: 221, type: !22052, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3082, retainedNodes: !74)
!22052 = !DISubroutineType(types: !22053)
!22053 = !{!341, !21624, !480, null}
!22054 = !DILocalVariable(name: "s", arg: 1, scope: !22051, file: !3088, line: 221, type: !21624)
!22055 = !DILocation(line: 221, column: 25, scope: !22051)
!22056 = !DILocalVariable(name: "fmt", arg: 2, scope: !22051, file: !3088, line: 221, type: !480)
!22057 = !DILocation(line: 221, column: 40, scope: !22051)
!22058 = !DILocalVariable(name: "could_printf", scope: !22051, file: !3088, line: 223, type: !341)
!22059 = !DILocation(line: 223, column: 10, scope: !22051)
!22060 = !DILocalVariable(name: "values", scope: !22051, file: !3088, line: 224, type: !22061)
!22061 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2698, line: 52, baseType: !22062)
!22062 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !5725, line: 14, baseType: !22063)
!22063 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !22064, baseType: !22065)
!22064 = !DIFile(filename: "common/strbuf.c", directory: "/home/raj/lwan")
!22065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22066, size: 192, elements: !1557)
!22066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", size: 192, elements: !22067)
!22067 = !{!22068, !22069, !22070, !22071}
!22068 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !22066, file: !22064, line: 224, baseType: !28, size: 32)
!22069 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !22066, file: !22064, line: 224, baseType: !28, size: 32, offset: 32)
!22070 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !22066, file: !22064, line: 224, baseType: !5, size: 64, offset: 64)
!22071 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !22066, file: !22064, line: 224, baseType: !5, size: 64, offset: 128)
!22072 = !DILocation(line: 224, column: 13, scope: !22051)
!22073 = !DILocation(line: 226, column: 5, scope: !22051)
!22074 = !DILocation(line: 227, column: 36, scope: !22051)
!22075 = !DILocation(line: 227, column: 51, scope: !22051)
!22076 = !DILocation(line: 227, column: 56, scope: !22051)
!22077 = !DILocalVariable(name: "s1", arg: 1, scope: !22078, file: !3088, line: 206, type: !21624)
!22078 = distinct !DISubprogram(name: "internal_printf", scope: !3088, file: !3088, line: 206, type: !22079, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3082, retainedNodes: !74)
!22079 = !DISubroutineType(types: !22080)
!22080 = !{!341, !21624, !22081, !480, !22082}
!22081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21880, size: 64)
!22082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22066, size: 64)
!22083 = !DILocation(line: 206, column: 27, scope: !22078, inlinedAt: !22084)
!22084 = distinct !DILocation(line: 227, column: 20, scope: !22051)
!22085 = !DILocalVariable(name: "save_str", arg: 2, scope: !22078, file: !3088, line: 206, type: !22081)
!22086 = !DILocation(line: 206, column: 38, scope: !22078, inlinedAt: !22084)
!22087 = !DILocalVariable(name: "fmt", arg: 3, scope: !22078, file: !3088, line: 206, type: !480)
!22088 = !DILocation(line: 206, column: 95, scope: !22078, inlinedAt: !22084)
!22089 = !DILocalVariable(name: "values", arg: 4, scope: !22078, file: !3088, line: 206, type: !22082)
!22090 = !DILocation(line: 206, column: 108, scope: !22078, inlinedAt: !22084)
!22091 = !DILocalVariable(name: "s2", scope: !22078, file: !3088, line: 208, type: !61)
!22092 = !DILocation(line: 208, column: 11, scope: !22078, inlinedAt: !22084)
!22093 = !DILocalVariable(name: "len", scope: !22078, file: !3088, line: 209, type: !37)
!22094 = !DILocation(line: 209, column: 9, scope: !22078, inlinedAt: !22084)
!22095 = !DILocation(line: 211, column: 9, scope: !22096, inlinedAt: !22084)
!22096 = distinct !DILexicalBlock(scope: !22078, file: !3088, line: 211, column: 9)
!22097 = !DILocation(line: 211, column: 9, scope: !22078, inlinedAt: !22084)
!22098 = !DILocation(line: 212, column: 9, scope: !22096, inlinedAt: !22084)
!22099 = !DILocalVariable(name: "success", scope: !22078, file: !3088, line: 214, type: !341)
!22100 = !DILocation(line: 214, column: 10, scope: !22078, inlinedAt: !22084)
!22101 = !DILocation(line: 214, column: 20, scope: !22078, inlinedAt: !22084)
!22102 = !DILocation(line: 214, column: 29, scope: !22078, inlinedAt: !22084)
!22103 = !DILocation(line: 214, column: 33, scope: !22078, inlinedAt: !22084)
!22104 = !DILocation(line: 214, column: 45, scope: !22078, inlinedAt: !22084)
!22105 = !DILocation(line: 214, column: 37, scope: !22078, inlinedAt: !22084)
!22106 = !DILocation(line: 215, column: 10, scope: !22078, inlinedAt: !22084)
!22107 = !DILocation(line: 215, column: 5, scope: !22078, inlinedAt: !22084)
!22108 = !DILocation(line: 217, column: 12, scope: !22078, inlinedAt: !22084)
!22109 = !DILocation(line: 217, column: 5, scope: !22078, inlinedAt: !22084)
!22110 = !DILocation(line: 218, column: 1, scope: !22078, inlinedAt: !22084)
!22111 = !DILocation(line: 227, column: 18, scope: !22051)
!22112 = !DILocation(line: 228, column: 5, scope: !22051)
!22113 = !DILocation(line: 230, column: 12, scope: !22051)
!22114 = !DILocation(line: 230, column: 5, scope: !22051)
!22115 = distinct !DISubprogram(name: "strbuf_append_printf", scope: !3088, file: !3088, line: 234, type: !22052, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3082, retainedNodes: !74)
!22116 = !DILocalVariable(name: "s", arg: 1, scope: !22115, file: !3088, line: 234, type: !21624)
!22117 = !DILocation(line: 234, column: 32, scope: !22115)
!22118 = !DILocalVariable(name: "fmt", arg: 2, scope: !22115, file: !3088, line: 234, type: !480)
!22119 = !DILocation(line: 234, column: 47, scope: !22115)
!22120 = !DILocalVariable(name: "could_printf", scope: !22115, file: !3088, line: 236, type: !341)
!22121 = !DILocation(line: 236, column: 10, scope: !22115)
!22122 = !DILocalVariable(name: "values", scope: !22115, file: !3088, line: 237, type: !22061)
!22123 = !DILocation(line: 237, column: 13, scope: !22115)
!22124 = !DILocation(line: 239, column: 5, scope: !22115)
!22125 = !DILocation(line: 240, column: 36, scope: !22115)
!22126 = !DILocation(line: 240, column: 58, scope: !22115)
!22127 = !DILocation(line: 240, column: 63, scope: !22115)
!22128 = !DILocation(line: 206, column: 27, scope: !22078, inlinedAt: !22129)
!22129 = distinct !DILocation(line: 240, column: 20, scope: !22115)
!22130 = !DILocation(line: 206, column: 38, scope: !22078, inlinedAt: !22129)
!22131 = !DILocation(line: 206, column: 95, scope: !22078, inlinedAt: !22129)
!22132 = !DILocation(line: 206, column: 108, scope: !22078, inlinedAt: !22129)
!22133 = !DILocation(line: 208, column: 11, scope: !22078, inlinedAt: !22129)
!22134 = !DILocation(line: 209, column: 9, scope: !22078, inlinedAt: !22129)
!22135 = !DILocation(line: 211, column: 9, scope: !22096, inlinedAt: !22129)
!22136 = !DILocation(line: 211, column: 9, scope: !22078, inlinedAt: !22129)
!22137 = !DILocation(line: 212, column: 9, scope: !22096, inlinedAt: !22129)
!22138 = !DILocation(line: 214, column: 10, scope: !22078, inlinedAt: !22129)
!22139 = !DILocation(line: 214, column: 20, scope: !22078, inlinedAt: !22129)
!22140 = !DILocation(line: 214, column: 29, scope: !22078, inlinedAt: !22129)
!22141 = !DILocation(line: 214, column: 33, scope: !22078, inlinedAt: !22129)
!22142 = !DILocation(line: 214, column: 45, scope: !22078, inlinedAt: !22129)
!22143 = !DILocation(line: 214, column: 37, scope: !22078, inlinedAt: !22129)
!22144 = !DILocation(line: 215, column: 10, scope: !22078, inlinedAt: !22129)
!22145 = !DILocation(line: 215, column: 5, scope: !22078, inlinedAt: !22129)
!22146 = !DILocation(line: 217, column: 12, scope: !22078, inlinedAt: !22129)
!22147 = !DILocation(line: 217, column: 5, scope: !22078, inlinedAt: !22129)
!22148 = !DILocation(line: 218, column: 1, scope: !22078, inlinedAt: !22129)
!22149 = !DILocation(line: 240, column: 18, scope: !22115)
!22150 = !DILocation(line: 241, column: 5, scope: !22115)
!22151 = !DILocation(line: 243, column: 12, scope: !22115)
!22152 = !DILocation(line: 243, column: 5, scope: !22115)
!22153 = distinct !DISubprogram(name: "strbuf_shrink_to", scope: !3088, file: !3088, line: 247, type: !21622, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3082, retainedNodes: !74)
!22154 = !DILocalVariable(name: "s", arg: 1, scope: !22153, file: !3088, line: 247, type: !21624)
!22155 = !DILocation(line: 247, column: 28, scope: !22153)
!22156 = !DILocalVariable(name: "new_size", arg: 2, scope: !22153, file: !3088, line: 247, type: !6)
!22157 = !DILocation(line: 247, column: 38, scope: !22153)
!22158 = !DILocation(line: 249, column: 9, scope: !22159)
!22159 = distinct !DILexicalBlock(scope: !22153, file: !3088, line: 249, column: 9)
!22160 = !DILocation(line: 249, column: 12, scope: !22159)
!22161 = !DILocation(line: 249, column: 16, scope: !22159)
!22162 = !DILocation(line: 249, column: 29, scope: !22159)
!22163 = !DILocation(line: 249, column: 26, scope: !22159)
!22164 = !DILocation(line: 249, column: 9, scope: !22153)
!22165 = !DILocation(line: 250, column: 9, scope: !22159)
!22166 = !DILocation(line: 252, column: 9, scope: !22167)
!22167 = distinct !DILexicalBlock(scope: !22153, file: !3088, line: 252, column: 9)
!22168 = !DILocation(line: 252, column: 12, scope: !22167)
!22169 = !DILocation(line: 252, column: 18, scope: !22167)
!22170 = !DILocation(line: 252, column: 9, scope: !22153)
!22171 = !DILocation(line: 253, column: 9, scope: !22167)
!22172 = !DILocalVariable(name: "next_power_of_two", scope: !22153, file: !3088, line: 255, type: !6)
!22173 = !DILocation(line: 255, column: 12, scope: !22153)
!22174 = !DILocation(line: 255, column: 55, scope: !22153)
!22175 = !DILocation(line: 255, column: 32, scope: !22153)
!22176 = !DILocalVariable(name: "buffer", scope: !22153, file: !3088, line: 256, type: !61)
!22177 = !DILocation(line: 256, column: 11, scope: !22153)
!22178 = !DILocation(line: 256, column: 28, scope: !22153)
!22179 = !DILocation(line: 256, column: 31, scope: !22153)
!22180 = !DILocation(line: 256, column: 37, scope: !22153)
!22181 = !DILocation(line: 256, column: 45, scope: !22153)
!22182 = !DILocation(line: 256, column: 63, scope: !22153)
!22183 = !DILocation(line: 256, column: 20, scope: !22153)
!22184 = !DILocation(line: 257, column: 9, scope: !22185)
!22185 = distinct !DILexicalBlock(scope: !22153, file: !3088, line: 257, column: 9)
!22186 = !DILocation(line: 257, column: 9, scope: !22153)
!22187 = !DILocation(line: 258, column: 9, scope: !22185)
!22188 = !DILocation(line: 260, column: 23, scope: !22153)
!22189 = !DILocation(line: 260, column: 5, scope: !22153)
!22190 = !DILocation(line: 260, column: 8, scope: !22153)
!22191 = !DILocation(line: 260, column: 21, scope: !22153)
!22192 = !DILocation(line: 261, column: 24, scope: !22153)
!22193 = !DILocation(line: 261, column: 5, scope: !22153)
!22194 = !DILocation(line: 261, column: 8, scope: !22153)
!22195 = !DILocation(line: 261, column: 12, scope: !22153)
!22196 = !DILocation(line: 261, column: 22, scope: !22153)
!22197 = !DILocation(line: 262, column: 9, scope: !22198)
!22198 = distinct !DILexicalBlock(scope: !22153, file: !3088, line: 262, column: 9)
!22199 = !DILocation(line: 262, column: 12, scope: !22198)
!22200 = !DILocation(line: 262, column: 16, scope: !22198)
!22201 = !DILocation(line: 262, column: 25, scope: !22198)
!22202 = !DILocation(line: 262, column: 23, scope: !22198)
!22203 = !DILocation(line: 262, column: 9, scope: !22153)
!22204 = !DILocation(line: 263, column: 25, scope: !22205)
!22205 = distinct !DILexicalBlock(scope: !22198, file: !3088, line: 262, column: 44)
!22206 = !DILocation(line: 263, column: 43, scope: !22205)
!22207 = !DILocation(line: 263, column: 9, scope: !22205)
!22208 = !DILocation(line: 263, column: 12, scope: !22205)
!22209 = !DILocation(line: 263, column: 16, scope: !22205)
!22210 = !DILocation(line: 263, column: 23, scope: !22205)
!22211 = !DILocation(line: 264, column: 9, scope: !22205)
!22212 = !DILocation(line: 264, column: 12, scope: !22205)
!22213 = !DILocation(line: 264, column: 18, scope: !22205)
!22214 = !DILocation(line: 264, column: 25, scope: !22205)
!22215 = !DILocation(line: 264, column: 28, scope: !22205)
!22216 = !DILocation(line: 264, column: 32, scope: !22205)
!22217 = !DILocation(line: 264, column: 39, scope: !22205)
!22218 = !DILocation(line: 264, column: 44, scope: !22205)
!22219 = !DILocation(line: 265, column: 5, scope: !22205)
!22220 = !DILocation(line: 267, column: 5, scope: !22153)
!22221 = !DILocation(line: 268, column: 1, scope: !22153)
!22222 = distinct !DISubprogram(name: "strbuf_shrink_to_default", scope: !3088, file: !3088, line: 271, type: !21788, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3082, retainedNodes: !74)
!22223 = !DILocalVariable(name: "s", arg: 1, scope: !22222, file: !3088, line: 271, type: !21624)
!22224 = !DILocation(line: 271, column: 36, scope: !22222)
!22225 = !DILocation(line: 273, column: 29, scope: !22222)
!22226 = !DILocation(line: 273, column: 12, scope: !22222)
!22227 = !DILocation(line: 273, column: 5, scope: !22222)
!22228 = distinct !DISubprogram(name: "strbuf_reset", scope: !3088, file: !3088, line: 277, type: !21788, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3082, retainedNodes: !74)
!22229 = !DILocalVariable(name: "s", arg: 1, scope: !22228, file: !3088, line: 277, type: !21624)
!22230 = !DILocation(line: 277, column: 24, scope: !22228)
!22231 = !DILocation(line: 279, column: 30, scope: !22228)
!22232 = !DILocation(line: 271, column: 36, scope: !22222, inlinedAt: !22233)
!22233 = distinct !DILocation(line: 279, column: 5, scope: !22228)
!22234 = !DILocation(line: 273, column: 29, scope: !22222, inlinedAt: !22233)
!22235 = !DILocation(line: 273, column: 12, scope: !22222, inlinedAt: !22233)
!22236 = !DILocation(line: 280, column: 5, scope: !22228)
!22237 = !DILocation(line: 280, column: 8, scope: !22228)
!22238 = !DILocation(line: 280, column: 12, scope: !22228)
!22239 = !DILocation(line: 280, column: 19, scope: !22228)
!22240 = !DILocation(line: 281, column: 5, scope: !22228)
!22241 = distinct !DISubprogram(name: "strbuf_grow_to", scope: !3088, file: !3088, line: 285, type: !21622, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3082, retainedNodes: !74)
!22242 = !DILocalVariable(name: "s", arg: 1, scope: !22241, file: !3088, line: 285, type: !21624)
!22243 = !DILocation(line: 285, column: 26, scope: !22241)
!22244 = !DILocalVariable(name: "new_size", arg: 2, scope: !22241, file: !3088, line: 285, type: !6)
!22245 = !DILocation(line: 285, column: 36, scope: !22241)
!22246 = !DILocation(line: 287, column: 34, scope: !22241)
!22247 = !DILocation(line: 287, column: 37, scope: !22241)
!22248 = !DILocation(line: 287, column: 46, scope: !22241)
!22249 = !DILocation(line: 287, column: 12, scope: !22241)
!22250 = !DILocation(line: 287, column: 5, scope: !22241)
!22251 = distinct !DISubprogram(name: "strbuf_reset_length", scope: !3088, file: !3088, line: 291, type: !21788, scopeLine: 292, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3082, retainedNodes: !74)
!22252 = !DILocalVariable(name: "s", arg: 1, scope: !22251, file: !3088, line: 291, type: !21624)
!22253 = !DILocation(line: 291, column: 31, scope: !22251)
!22254 = !DILocation(line: 293, column: 9, scope: !22255)
!22255 = distinct !DILexicalBlock(scope: !22251, file: !3088, line: 293, column: 9)
!22256 = !DILocation(line: 293, column: 12, scope: !22255)
!22257 = !DILocation(line: 293, column: 18, scope: !22255)
!22258 = !DILocation(line: 293, column: 9, scope: !22251)
!22259 = !DILocation(line: 294, column: 9, scope: !22260)
!22260 = distinct !DILexicalBlock(scope: !22255, file: !3088, line: 293, column: 28)
!22261 = !DILocation(line: 294, column: 12, scope: !22260)
!22262 = !DILocation(line: 294, column: 18, scope: !22260)
!22263 = !DILocation(line: 295, column: 34, scope: !22260)
!22264 = !DILocation(line: 295, column: 37, scope: !22260)
!22265 = !DILocation(line: 295, column: 41, scope: !22260)
!22266 = !DILocation(line: 295, column: 27, scope: !22260)
!22267 = !DILocation(line: 295, column: 9, scope: !22260)
!22268 = !DILocation(line: 295, column: 12, scope: !22260)
!22269 = !DILocation(line: 295, column: 25, scope: !22260)
!22270 = !DILocation(line: 296, column: 13, scope: !22271)
!22271 = distinct !DILexicalBlock(scope: !22260, file: !3088, line: 296, column: 13)
!22272 = !DILocation(line: 296, column: 13, scope: !22260)
!22273 = !DILocation(line: 297, column: 13, scope: !22271)
!22274 = !DILocation(line: 298, column: 5, scope: !22260)
!22275 = !DILocation(line: 300, column: 5, scope: !22251)
!22276 = !DILocation(line: 300, column: 8, scope: !22251)
!22277 = !DILocation(line: 300, column: 12, scope: !22251)
!22278 = !DILocation(line: 300, column: 19, scope: !22251)
!22279 = !DILocation(line: 301, column: 5, scope: !22251)
!22280 = !DILocation(line: 301, column: 8, scope: !22251)
!22281 = !DILocation(line: 301, column: 14, scope: !22251)
!22282 = !DILocation(line: 301, column: 24, scope: !22251)
!22283 = !DILocation(line: 303, column: 5, scope: !22251)
!22284 = !DILocation(line: 304, column: 1, scope: !22251)
