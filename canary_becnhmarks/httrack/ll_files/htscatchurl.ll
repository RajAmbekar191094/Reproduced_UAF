; ModuleID = 'src/htscatchurl.c'
source_filename = "src/htscatchurl.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.SOCaddr = type { %union.anon }
%union.anon = type { %struct.sockaddr_in6 }
%struct.sockaddr_in6 = type { i16, i16, i32, %struct.in6_addr, i32 }
%struct.in6_addr = type { %union.anon.0 }
%union.anon.0 = type { [4 x i32] }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
%struct.in_addr = type { i32 }
%struct.lien_adrfil = type { [2048 x i8], [2048 x i8] }
%struct.htsblk = type { i32, i16, i16, i16, i16, i16, i16, i16, i32, i32, ptr, ptr, ptr, i64, [80 x i8], [64 x i8], [64 x i8], [64 x i8], ptr, i64, i16, i32, %struct.SOCaddr, i32, ptr, i16, ptr, [64 x i8], [256 x i8], [256 x i8], i64, i64, i64, i32, %struct.htsrequest }
%struct.htsrequest = type { i16, i16, i16, i16, i16, i16, ptr, ptr, ptr, ptr, ptr, ptr, %struct.htsrequest_proxy }
%struct.htsrequest_proxy = type { i32, ptr, i32, ptr }

@__const.catch_url_init_std.try_to_listen_to = private unnamed_addr constant [10 x i32] [i32 8080, i32 3128, i32 80, i32 81, i32 82, i32 8081, i32 3129, i32 31337, i32 0, i32 -1], align 16
@.str = private unnamed_addr constant [18 x i8] c"src/htscatchurl.c\00", align 1, !dbg !0
@.str.1 = private unnamed_addr constant [6 x i8] c"%s:%d\00", align 1, !dbg !7
@.str.2 = private unnamed_addr constant [9 x i8] c"%s %s %s\00", align 1, !dbg !12
@.str.3 = private unnamed_addr constant [11 x i8] c"%s %s %s\0D\0A\00", align 1, !dbg !17
@.str.4 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1, !dbg !22
@.str.5 = private unnamed_addr constant [482 x i8] c"HTTP/1.0 200 OK\0D\0AContent-type: text/html\0D\0A\0D\0A<!-- Generated by HTTrack Website Copier -->\0D\0A<HTML><HEAD>\0D\0A<TITLE>Link caught!</TITLE>\0D\0A<SCRIPT LANGUAGE=\22Javascript\22>\0D\0A<!--\0D\0Afunction back() {\0D\0A  history.go(-1);\0D\0A}\0D\0A// -->\0D\0A</SCRIPT>\0D\0A</HEAD>\0D\0A<BODY>\0D\0A<H2>Link captured into HTTrack Website Copier, you can now restore your proxy preferences!</H2>\0D\0A<BR><BR>\0D\0A<H3><A HREF=\22javascript:back();\22>Clic here to go back</A></H3>\0D\0A</BODY></HTML><!-- Generated by HTTrack Website Copier -->\0D\0A\0D\0A\00", align 1, !dbg !27
@.str.6 = private unnamed_addr constant [13 x i8] c"addr != NULL\00", align 1, !dbg !32
@.str.7 = private unnamed_addr constant [22 x i8] c"! \22invalid structure\22\00", align 1, !dbg !38
@stderr = external global ptr, align 8
@.str.8 = private unnamed_addr constant [20 x i8] c"%s failed at %s:%d\0A\00", align 1, !dbg !43
@.str.9 = private unnamed_addr constant [16 x i8] c"namebuf != NULL\00", align 1, !dbg !49
@.str.10 = private unnamed_addr constant [11 x i8] c"ss != NULL\00", align 1, !dbg !54

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @catch_url_init_std(ptr noundef %0, ptr noundef %1) #0 !dbg !93 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca [10 x i32], align 16
  %7 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !98, metadata !DIExpression()), !dbg !99
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !100, metadata !DIExpression()), !dbg !101
  call void @llvm.dbg.declare(metadata ptr %5, metadata !102, metadata !DIExpression()), !dbg !103
  call void @llvm.dbg.declare(metadata ptr %6, metadata !104, metadata !DIExpression()), !dbg !108
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %6, ptr align 16 @__const.catch_url_init_std.try_to_listen_to, i64 40, i1 false), !dbg !108
  call void @llvm.dbg.declare(metadata ptr %7, metadata !109, metadata !DIExpression()), !dbg !110
  store i32 0, ptr %7, align 4, !dbg !110
  br label %8, !dbg !111

8:                                                ; preds = %30, %2
  %9 = load i32, ptr %7, align 4, !dbg !112
  %10 = sext i32 %9 to i64, !dbg !114
  %11 = getelementptr inbounds [10 x i32], ptr %6, i64 0, i64 %10, !dbg !114
  %12 = load ptr, ptr %4, align 8, !dbg !115
  %13 = call i32 @catch_url_init(ptr noundef %11, ptr noundef %12), !dbg !116
  store i32 %13, ptr %5, align 4, !dbg !117
  %14 = load i32, ptr %7, align 4, !dbg !118
  %15 = sext i32 %14 to i64, !dbg !119
  %16 = getelementptr inbounds [10 x i32], ptr %6, i64 0, i64 %15, !dbg !119
  %17 = load i32, ptr %16, align 4, !dbg !119
  %18 = load ptr, ptr %3, align 8, !dbg !120
  store i32 %17, ptr %18, align 4, !dbg !121
  %19 = load i32, ptr %7, align 4, !dbg !122
  %20 = add nsw i32 %19, 1, !dbg !122
  store i32 %20, ptr %7, align 4, !dbg !122
  br label %21, !dbg !123

21:                                               ; preds = %8
  %22 = load i32, ptr %5, align 4, !dbg !124
  %23 = icmp eq i32 %22, -1, !dbg !125
  br i1 %23, label %24, label %30, !dbg !126

24:                                               ; preds = %21
  %25 = load i32, ptr %7, align 4, !dbg !127
  %26 = sext i32 %25 to i64, !dbg !128
  %27 = getelementptr inbounds [10 x i32], ptr %6, i64 0, i64 %26, !dbg !128
  %28 = load i32, ptr %27, align 4, !dbg !128
  %29 = icmp sge i32 %28, 0, !dbg !129
  br label %30

30:                                               ; preds = %24, %21
  %31 = phi i1 [ false, %21 ], [ %29, %24 ], !dbg !130
  br i1 %31, label %8, label %32, !dbg !123, !llvm.loop !131

32:                                               ; preds = %30
  %33 = load i32, ptr %5, align 4, !dbg !134
  ret i32 %33, !dbg !135
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @catch_url_init(ptr noundef %0, ptr noundef %1) #0 !dbg !136 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca [256 x i8], align 16
  %7 = alloca %struct.SOCaddr, align 4
  %8 = alloca %struct.SOCaddr, align 4
  %9 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !137, metadata !DIExpression()), !dbg !138
  store ptr %1, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !139, metadata !DIExpression()), !dbg !140
  call void @llvm.dbg.declare(metadata ptr %5, metadata !141, metadata !DIExpression()), !dbg !142
  store i32 -1, ptr %5, align 4, !dbg !142
  call void @llvm.dbg.declare(metadata ptr %6, metadata !143, metadata !DIExpression()), !dbg !147
  %10 = getelementptr inbounds [256 x i8], ptr %6, i64 0, i64 0, !dbg !148
  %11 = call i32 @gethostname(ptr noundef %10, i64 noundef 256) #8, !dbg !150
  %12 = icmp eq i32 %11, 0, !dbg !151
  br i1 %12, label %13, label %67, !dbg !152

13:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata ptr %7, metadata !153, metadata !DIExpression()), !dbg !212
  %14 = getelementptr inbounds [256 x i8], ptr %6, i64 0, i64 0, !dbg !213
  %15 = call ptr @hts_dns_resolve_nocache(ptr noundef %14, ptr noundef %7), !dbg !215
  %16 = icmp ne ptr %15, null, !dbg !216
  br i1 %16, label %17, label %66, !dbg !217

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.SOCaddr, ptr %7, i32 0, i32 0, !dbg !218
  %19 = getelementptr inbounds %struct.sockaddr, ptr %18, i32 0, i32 0, !dbg !218
  %20 = load i16, ptr %19, align 4, !dbg !218
  %21 = zext i16 %20 to i32, !dbg !218
  %22 = call i32 @socket(i32 noundef %21, i32 noundef 1, i32 noundef 0) #8, !dbg !221
  store i32 %22, ptr %5, align 4, !dbg !222
  %23 = icmp ne i32 %22, -1, !dbg !223
  br i1 %23, label %24, label %65, !dbg !224

24:                                               ; preds = %17
  br label %25, !dbg !225

25:                                               ; preds = %24
  %26 = load ptr, ptr %3, align 8, !dbg !227
  %27 = load i32, ptr %26, align 4, !dbg !227
  %28 = trunc i32 %27 to i16, !dbg !227
  %29 = call zeroext i16 @htons(i16 noundef zeroext %28) #9, !dbg !227
  %30 = call ptr @SOCaddr_sinport_(ptr noundef %7, ptr noundef @.str, i32 noundef 91), !dbg !227
  store i16 %29, ptr %30, align 2, !dbg !227
  br label %31, !dbg !227

31:                                               ; preds = %25
  %32 = load i32, ptr %5, align 4, !dbg !229
  %33 = getelementptr inbounds %struct.SOCaddr, ptr %7, i32 0, i32 0, !dbg !231
  %34 = call i32 @SOCaddr_size_(ptr noundef %7, ptr noundef @.str, i32 noundef 92), !dbg !232
  %35 = call i32 @bind(i32 noundef %32, ptr noundef %33, i32 noundef %34) #8, !dbg !233
  %36 = icmp eq i32 %35, 0, !dbg !234
  br i1 %36, label %37, label %61, !dbg !235

37:                                               ; preds = %31
  call void @llvm.dbg.declare(metadata ptr %8, metadata !236, metadata !DIExpression()), !dbg !238
  call void @llvm.dbg.declare(metadata ptr %9, metadata !239, metadata !DIExpression()), !dbg !244
  store i32 28, ptr %9, align 4, !dbg !244
  %38 = load i32, ptr %5, align 4, !dbg !245
  %39 = getelementptr inbounds %struct.SOCaddr, ptr %8, i32 0, i32 0, !dbg !247
  %40 = call i32 @getsockname(i32 noundef %38, ptr noundef %39, ptr noundef %9) #8, !dbg !248
  %41 = icmp eq i32 %40, 0, !dbg !249
  br i1 %41, label %42, label %57, !dbg !250

42:                                               ; preds = %37
  %43 = call ptr @SOCaddr_sinport_(ptr noundef %7, ptr noundef @.str, i32 noundef 97), !dbg !251
  %44 = load i16, ptr %43, align 2, !dbg !251
  %45 = call zeroext i16 @ntohs(i16 noundef zeroext %44) #9, !dbg !253
  %46 = zext i16 %45 to i32, !dbg !253
  %47 = load ptr, ptr %3, align 8, !dbg !254
  store i32 %46, ptr %47, align 4, !dbg !255
  %48 = load i32, ptr %5, align 4, !dbg !256
  %49 = call i32 @listen(i32 noundef %48, i32 noundef 1) #8, !dbg !258
  %50 = icmp sge i32 %49, 0, !dbg !259
  br i1 %50, label %51, label %53, !dbg !260

51:                                               ; preds = %42
  %52 = load ptr, ptr %4, align 8, !dbg !261
  call void @SOCaddr_inetntoa_(ptr noundef %52, i64 noundef 128, ptr noundef %8, ptr noundef @.str, i32 noundef 99), !dbg !261
  br label %56, !dbg !263

53:                                               ; preds = %42
  %54 = load i32, ptr %5, align 4, !dbg !264
  %55 = call i32 @close(i32 noundef %54), !dbg !266
  store i32 -1, ptr %5, align 4, !dbg !267
  br label %56

56:                                               ; preds = %53, %51
  br label %60, !dbg !268

57:                                               ; preds = %37
  %58 = load i32, ptr %5, align 4, !dbg !269
  %59 = call i32 @close(i32 noundef %58), !dbg !271
  store i32 -1, ptr %5, align 4, !dbg !272
  br label %60

60:                                               ; preds = %57, %56
  br label %64, !dbg !273

61:                                               ; preds = %31
  %62 = load i32, ptr %5, align 4, !dbg !274
  %63 = call i32 @close(i32 noundef %62), !dbg !276
  store i32 -1, ptr %5, align 4, !dbg !277
  br label %64

64:                                               ; preds = %61, %60
  br label %65, !dbg !278

65:                                               ; preds = %64, %17
  br label %66, !dbg !279

66:                                               ; preds = %65, %13
  br label %67, !dbg !280

67:                                               ; preds = %66, %2
  %68 = load i32, ptr %5, align 4, !dbg !281
  ret i32 %68, !dbg !282
}

; Function Attrs: nounwind
declare i32 @gethostname(ptr noundef, i64 noundef) #3

declare ptr @hts_dns_resolve_nocache(ptr noundef, ptr noundef) #4

; Function Attrs: nounwind
declare i32 @socket(i32 noundef, i32 noundef, i32 noundef) #3

; Function Attrs: nounwind willreturn memory(none)
declare zeroext i16 @htons(i16 noundef zeroext) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal ptr @SOCaddr_sinport_(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 !dbg !283 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !292, metadata !DIExpression()), !dbg !293
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !294, metadata !DIExpression()), !dbg !295
  store i32 %2, ptr %7, align 4
  call void @llvm.dbg.declare(metadata ptr %7, metadata !296, metadata !DIExpression()), !dbg !297
  %8 = load ptr, ptr %5, align 8, !dbg !298
  %9 = icmp ne ptr %8, null, !dbg !298
  br i1 %9, label %13, label %10, !dbg !298

10:                                               ; preds = %3
  %11 = load ptr, ptr %6, align 8, !dbg !298
  %12 = load i32, ptr %7, align 4, !dbg !298
  call void @abortf_(ptr noundef @.str.6, ptr noundef %11, i32 noundef %12), !dbg !298
  br label %13, !dbg !298

13:                                               ; preds = %10, %3
  %14 = phi i1 [ true, %3 ], [ false, %10 ]
  %15 = zext i1 %14 to i32, !dbg !298
  %16 = load ptr, ptr %5, align 8, !dbg !299
  %17 = getelementptr inbounds %struct.SOCaddr, ptr %16, i32 0, i32 0, !dbg !300
  %18 = getelementptr inbounds %struct.sockaddr, ptr %17, i32 0, i32 0, !dbg !301
  %19 = load i16, ptr %18, align 4, !dbg !301
  %20 = zext i16 %19 to i32, !dbg !299
  switch i32 %20, label %29 [
    i32 2, label %21
    i32 10, label %25
  ], !dbg !302

21:                                               ; preds = %13
  %22 = load ptr, ptr %5, align 8, !dbg !303
  %23 = getelementptr inbounds %struct.SOCaddr, ptr %22, i32 0, i32 0, !dbg !305
  %24 = getelementptr inbounds %struct.sockaddr_in, ptr %23, i32 0, i32 1, !dbg !306
  store ptr %24, ptr %4, align 8, !dbg !307
  br label %32, !dbg !307

25:                                               ; preds = %13
  %26 = load ptr, ptr %5, align 8, !dbg !308
  %27 = getelementptr inbounds %struct.SOCaddr, ptr %26, i32 0, i32 0, !dbg !309
  %28 = getelementptr inbounds %struct.sockaddr_in6, ptr %27, i32 0, i32 1, !dbg !310
  store ptr %28, ptr %4, align 8, !dbg !311
  br label %32, !dbg !311

29:                                               ; preds = %13
  %30 = load ptr, ptr %6, align 8, !dbg !312
  %31 = load i32, ptr %7, align 4, !dbg !312
  call void @abortf_(ptr noundef @.str.7, ptr noundef %30, i32 noundef %31), !dbg !312
  store ptr null, ptr %4, align 8, !dbg !313
  br label %32, !dbg !313

32:                                               ; preds = %29, %25, %21
  %33 = load ptr, ptr %4, align 8, !dbg !314
  ret ptr %33, !dbg !314
}

; Function Attrs: nounwind
declare i32 @bind(i32 noundef, ptr noundef, i32 noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @SOCaddr_size_(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 !dbg !315 {
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  store ptr %0, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !321, metadata !DIExpression()), !dbg !322
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !323, metadata !DIExpression()), !dbg !324
  store i32 %2, ptr %7, align 4
  call void @llvm.dbg.declare(metadata ptr %7, metadata !325, metadata !DIExpression()), !dbg !326
  %8 = load ptr, ptr %5, align 8, !dbg !327
  %9 = icmp ne ptr %8, null, !dbg !327
  br i1 %9, label %13, label %10, !dbg !327

10:                                               ; preds = %3
  %11 = load ptr, ptr %6, align 8, !dbg !327
  %12 = load i32, ptr %7, align 4, !dbg !327
  call void @abortf_(ptr noundef @.str.6, ptr noundef %11, i32 noundef %12), !dbg !327
  br label %13, !dbg !327

13:                                               ; preds = %10, %3
  %14 = phi i1 [ true, %3 ], [ false, %10 ]
  %15 = zext i1 %14 to i32, !dbg !327
  %16 = load ptr, ptr %5, align 8, !dbg !328
  %17 = getelementptr inbounds %struct.SOCaddr, ptr %16, i32 0, i32 0, !dbg !329
  %18 = getelementptr inbounds %struct.sockaddr, ptr %17, i32 0, i32 0, !dbg !330
  %19 = load i16, ptr %18, align 4, !dbg !330
  %20 = zext i16 %19 to i32, !dbg !328
  switch i32 %20, label %23 [
    i32 2, label %21
    i32 10, label %22
  ], !dbg !331

21:                                               ; preds = %13
  store i32 16, ptr %4, align 4, !dbg !332
  br label %24, !dbg !332

22:                                               ; preds = %13
  store i32 28, ptr %4, align 4, !dbg !334
  br label %24, !dbg !334

23:                                               ; preds = %13
  store i32 0, ptr %4, align 4, !dbg !335
  br label %24, !dbg !335

24:                                               ; preds = %23, %22, %21
  %25 = load i32, ptr %4, align 4, !dbg !336
  ret i32 %25, !dbg !336
}

; Function Attrs: nounwind
declare i32 @getsockname(i32 noundef, ptr noundef, ptr noundef) #3

; Function Attrs: nounwind willreturn memory(none)
declare zeroext i16 @ntohs(i16 noundef zeroext) #5

; Function Attrs: nounwind
declare i32 @listen(i32 noundef, i32 noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @SOCaddr_inetntoa_(ptr noundef %0, i64 noundef %1, ptr noundef %2, ptr noundef %3, i32 noundef %4) #0 !dbg !337 {
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca i32, align 4
  %11 = alloca ptr, align 8
  store ptr %0, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !343, metadata !DIExpression()), !dbg !344
  store i64 %1, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !345, metadata !DIExpression()), !dbg !346
  store ptr %2, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !347, metadata !DIExpression()), !dbg !348
  store ptr %3, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !349, metadata !DIExpression()), !dbg !350
  store i32 %4, ptr %10, align 4
  call void @llvm.dbg.declare(metadata ptr %10, metadata !351, metadata !DIExpression()), !dbg !352
  %12 = load ptr, ptr %6, align 8, !dbg !353
  %13 = icmp ne ptr %12, null, !dbg !353
  br i1 %13, label %17, label %14, !dbg !353

14:                                               ; preds = %5
  %15 = load ptr, ptr %9, align 8, !dbg !353
  %16 = load i32, ptr %10, align 4, !dbg !353
  call void @abortf_(ptr noundef @.str.9, ptr noundef %15, i32 noundef %16), !dbg !353
  br label %17, !dbg !353

17:                                               ; preds = %14, %5
  %18 = phi i1 [ true, %5 ], [ false, %14 ]
  %19 = zext i1 %18 to i32, !dbg !353
  %20 = load ptr, ptr %8, align 8, !dbg !354
  %21 = icmp ne ptr %20, null, !dbg !354
  br i1 %21, label %25, label %22, !dbg !354

22:                                               ; preds = %17
  %23 = load ptr, ptr %9, align 8, !dbg !354
  %24 = load i32, ptr %10, align 4, !dbg !354
  call void @abortf_(ptr noundef @.str.10, ptr noundef %23, i32 noundef %24), !dbg !354
  br label %25, !dbg !354

25:                                               ; preds = %22, %17
  %26 = phi i1 [ true, %17 ], [ false, %22 ]
  %27 = zext i1 %26 to i32, !dbg !354
  %28 = load ptr, ptr %8, align 8, !dbg !355
  %29 = getelementptr inbounds %struct.SOCaddr, ptr %28, i32 0, i32 0, !dbg !357
  %30 = load ptr, ptr %6, align 8, !dbg !358
  %31 = load i64, ptr %7, align 8, !dbg !359
  %32 = trunc i64 %31 to i32, !dbg !359
  %33 = call i32 @getnameinfo(ptr noundef %29, i32 noundef 28, ptr noundef %30, i32 noundef %32, ptr noundef null, i32 noundef 0, i32 noundef 1), !dbg !360
  %34 = icmp eq i32 %33, 0, !dbg !361
  br i1 %34, label %35, label %43, !dbg !362

35:                                               ; preds = %25
  call void @llvm.dbg.declare(metadata ptr %11, metadata !363, metadata !DIExpression()), !dbg !366
  %36 = load ptr, ptr %6, align 8, !dbg !367
  %37 = call ptr @strchr(ptr noundef %36, i32 noundef 37) #10, !dbg !368
  store ptr %37, ptr %11, align 8, !dbg !366
  %38 = load ptr, ptr %11, align 8, !dbg !369
  %39 = icmp ne ptr %38, null, !dbg !371
  br i1 %39, label %40, label %42, !dbg !372

40:                                               ; preds = %35
  %41 = load ptr, ptr %11, align 8, !dbg !373
  store i8 0, ptr %41, align 1, !dbg !375
  br label %42, !dbg !376

42:                                               ; preds = %40, %35
  br label %46, !dbg !377

43:                                               ; preds = %25
  %44 = load ptr, ptr %6, align 8, !dbg !378
  %45 = getelementptr inbounds i8, ptr %44, i64 0, !dbg !378
  store i8 0, ptr %45, align 1, !dbg !380
  br label %46

46:                                               ; preds = %43, %42
  ret void, !dbg !381
}

declare i32 @close(i32 noundef) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @catch_url(i32 noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 !dbg !382 {
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.SOCaddr, align 4
  %12 = alloca i32, align 4
  %13 = alloca [258 x i8], align 16
  %14 = alloca [1000 x i8], align 16
  %15 = alloca [256 x i8], align 16
  %16 = alloca %struct.lien_adrfil, align 1
  %17 = alloca i64, align 8
  %18 = alloca i32, align 4
  %19 = alloca [2048 x i8], align 16
  %20 = alloca %struct.htsblk, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  store i32 %0, ptr %5, align 4
  call void @llvm.dbg.declare(metadata ptr %5, metadata !385, metadata !DIExpression()), !dbg !386
  store ptr %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !387, metadata !DIExpression()), !dbg !388
  store ptr %2, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !389, metadata !DIExpression()), !dbg !390
  store ptr %3, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %8, metadata !391, metadata !DIExpression()), !dbg !392
  call void @llvm.dbg.declare(metadata ptr %9, metadata !393, metadata !DIExpression()), !dbg !394
  store i32 0, ptr %9, align 4, !dbg !394
  %23 = load i32, ptr %5, align 4, !dbg !395
  %24 = icmp ne i32 %23, -1, !dbg !397
  br i1 %24, label %25, label %190, !dbg !398

25:                                               ; preds = %4
  call void @llvm.dbg.declare(metadata ptr %10, metadata !399, metadata !DIExpression()), !dbg !401
  br label %26, !dbg !402

26:                                               ; preds = %30, %25
  %27 = load i32, ptr %5, align 4, !dbg !403
  %28 = call i32 @accept(i32 noundef %27, ptr noundef null, ptr noundef null), !dbg !404
  store i32 %28, ptr %10, align 4, !dbg !405
  %29 = icmp eq i32 %28, -1, !dbg !406
  br i1 %29, label %30, label %31, !dbg !402

30:                                               ; preds = %26
  br label %26, !dbg !402, !llvm.loop !407

31:                                               ; preds = %26
  %32 = load i32, ptr %10, align 4, !dbg !409
  store i32 %32, ptr %5, align 4, !dbg !410
  call void @llvm.dbg.declare(metadata ptr %11, metadata !411, metadata !DIExpression()), !dbg !413
  call void @llvm.dbg.declare(metadata ptr %12, metadata !414, metadata !DIExpression()), !dbg !415
  store i32 28, ptr %12, align 4, !dbg !415
  %33 = load i32, ptr %5, align 4, !dbg !416
  %34 = getelementptr inbounds %struct.SOCaddr, ptr %11, i32 0, i32 0, !dbg !418
  %35 = call i32 @getpeername(i32 noundef %33, ptr noundef %34, ptr noundef %12) #8, !dbg !419
  %36 = icmp eq i32 %35, 0, !dbg !420
  br i1 %36, label %37, label %46, !dbg !421

37:                                               ; preds = %31
  call void @llvm.dbg.declare(metadata ptr %13, metadata !422, metadata !DIExpression()), !dbg !427
  %38 = getelementptr inbounds [258 x i8], ptr %13, i64 0, i64 0, !dbg !428
  call void @SOCaddr_inetntoa_(ptr noundef %38, i64 noundef 258, ptr noundef %11, ptr noundef @.str, i32 noundef 162), !dbg !428
  %39 = load ptr, ptr %6, align 8, !dbg !429
  %40 = getelementptr inbounds [258 x i8], ptr %13, i64 0, i64 0, !dbg !430
  %41 = call ptr @SOCaddr_sinport_(ptr noundef %11, ptr noundef @.str, i32 noundef 163), !dbg !431
  %42 = load i16, ptr %41, align 2, !dbg !431
  %43 = call zeroext i16 @ntohs(i16 noundef zeroext %42) #9, !dbg !432
  %44 = zext i16 %43 to i32, !dbg !432
  %45 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef %39, ptr noundef @.str.1, ptr noundef %40, i32 noundef %44) #8, !dbg !433
  br label %46, !dbg !434

46:                                               ; preds = %37, %31
  %47 = load i32, ptr %5, align 4, !dbg !435
  %48 = icmp ne i32 %47, -1, !dbg !437
  br i1 %48, label %49, label %189, !dbg !438

49:                                               ; preds = %46
  call void @llvm.dbg.declare(metadata ptr %14, metadata !439, metadata !DIExpression()), !dbg !444
  call void @llvm.dbg.declare(metadata ptr %15, metadata !445, metadata !DIExpression()), !dbg !446
  %50 = getelementptr inbounds [256 x i8], ptr %15, i64 0, i64 0, !dbg !447
  store i8 0, ptr %50, align 16, !dbg !448
  %51 = getelementptr inbounds [1000 x i8], ptr %14, i64 0, i64 0, !dbg !449
  store i8 0, ptr %51, align 16, !dbg !450
  %52 = load i32, ptr %5, align 4, !dbg !451
  %53 = getelementptr inbounds [1000 x i8], ptr %14, i64 0, i64 0, !dbg !452
  call void @socinput(i32 noundef %52, ptr noundef %53, i32 noundef 1000), !dbg !453
  %54 = getelementptr inbounds [1000 x i8], ptr %14, i64 0, i64 0, !dbg !454
  %55 = load i8, ptr %54, align 16, !dbg !454
  %56 = sext i8 %55 to i32, !dbg !454
  %57 = icmp ne i32 %56, 0, !dbg !454
  br i1 %57, label %58, label %188, !dbg !456

58:                                               ; preds = %49
  %59 = getelementptr inbounds [1000 x i8], ptr %14, i64 0, i64 0, !dbg !457
  %60 = load ptr, ptr %7, align 8, !dbg !460
  %61 = load ptr, ptr %6, align 8, !dbg !461
  %62 = getelementptr inbounds [256 x i8], ptr %15, i64 0, i64 0, !dbg !462
  %63 = call i32 (ptr, ptr, ...) @__isoc99_sscanf(ptr noundef %59, ptr noundef @.str.2, ptr noundef %60, ptr noundef %61, ptr noundef %62) #8, !dbg !463
  %64 = icmp eq i32 %63, 3, !dbg !464
  br i1 %64, label %65, label %187, !dbg !465

65:                                               ; preds = %58
  call void @llvm.dbg.declare(metadata ptr %16, metadata !466, metadata !DIExpression()), !dbg !478
  call void @llvm.dbg.declare(metadata ptr %17, metadata !479, metadata !DIExpression()), !dbg !480
  call void @llvm.dbg.declare(metadata ptr %18, metadata !481, metadata !DIExpression()), !dbg !482
  store i32 0, ptr %18, align 4, !dbg !482
  %66 = getelementptr inbounds %struct.lien_adrfil, ptr %16, i32 0, i32 1, !dbg !483
  %67 = getelementptr inbounds [2048 x i8], ptr %66, i64 0, i64 0, !dbg !484
  store i8 0, ptr %67, align 1, !dbg !485
  %68 = getelementptr inbounds %struct.lien_adrfil, ptr %16, i32 0, i32 0, !dbg !486
  %69 = getelementptr inbounds [2048 x i8], ptr %68, i64 0, i64 0, !dbg !487
  store i8 0, ptr %69, align 1, !dbg !488
  store i64 0, ptr %17, align 8, !dbg !489
  br label %70, !dbg !491

70:                                               ; preds = %100, %65
  %71 = load ptr, ptr %7, align 8, !dbg !492
  %72 = load i64, ptr %17, align 8, !dbg !494
  %73 = getelementptr inbounds i8, ptr %71, i64 %72, !dbg !492
  %74 = load i8, ptr %73, align 1, !dbg !492
  %75 = sext i8 %74 to i32, !dbg !492
  %76 = icmp ne i32 %75, 0, !dbg !495
  br i1 %76, label %77, label %103, !dbg !496

77:                                               ; preds = %70
  %78 = load ptr, ptr %7, align 8, !dbg !497
  %79 = load i64, ptr %17, align 8, !dbg !500
  %80 = getelementptr inbounds i8, ptr %78, i64 %79, !dbg !497
  %81 = load i8, ptr %80, align 1, !dbg !497
  %82 = sext i8 %81 to i32, !dbg !497
  %83 = icmp sge i32 %82, 97, !dbg !501
  br i1 %83, label %84, label %99, !dbg !502

84:                                               ; preds = %77
  %85 = load ptr, ptr %7, align 8, !dbg !503
  %86 = load i64, ptr %17, align 8, !dbg !504
  %87 = getelementptr inbounds i8, ptr %85, i64 %86, !dbg !503
  %88 = load i8, ptr %87, align 1, !dbg !503
  %89 = sext i8 %88 to i32, !dbg !503
  %90 = icmp sle i32 %89, 122, !dbg !505
  br i1 %90, label %91, label %99, !dbg !506

91:                                               ; preds = %84
  %92 = load ptr, ptr %7, align 8, !dbg !507
  %93 = load i64, ptr %17, align 8, !dbg !508
  %94 = getelementptr inbounds i8, ptr %92, i64 %93, !dbg !507
  %95 = load i8, ptr %94, align 1, !dbg !509
  %96 = sext i8 %95 to i32, !dbg !509
  %97 = sub nsw i32 %96, 32, !dbg !509
  %98 = trunc i32 %97 to i8, !dbg !509
  store i8 %98, ptr %94, align 1, !dbg !509
  br label %99, !dbg !507

99:                                               ; preds = %91, %84, %77
  br label %100, !dbg !510

100:                                              ; preds = %99
  %101 = load i64, ptr %17, align 8, !dbg !511
  %102 = add i64 %101, 1, !dbg !511
  store i64 %102, ptr %17, align 8, !dbg !511
  br label %70, !dbg !512, !llvm.loop !513

103:                                              ; preds = %70
  %104 = load ptr, ptr %6, align 8, !dbg !515
  %105 = call i32 @ident_url_absolute(ptr noundef %104, ptr noundef %16), !dbg !517
  %106 = icmp sge i32 %105, 0, !dbg !518
  br i1 %106, label %107, label %186, !dbg !519

107:                                              ; preds = %103
  call void @llvm.dbg.declare(metadata ptr %19, metadata !520, metadata !DIExpression()), !dbg !522
  call void @llvm.dbg.declare(metadata ptr %20, metadata !523, metadata !DIExpression()), !dbg !649
  call void @hts_init_htsblk(ptr noundef %20), !dbg !650
  %108 = getelementptr inbounds [2048 x i8], ptr %19, i64 0, i64 0, !dbg !651
  %109 = getelementptr inbounds %struct.htsblk, ptr %20, i32 0, i32 18, !dbg !652
  store ptr %108, ptr %109, align 8, !dbg !653
  %110 = load ptr, ptr %8, align 8, !dbg !654
  %111 = load ptr, ptr %7, align 8, !dbg !655
  %112 = getelementptr inbounds %struct.lien_adrfil, ptr %16, i32 0, i32 1, !dbg !656
  %113 = getelementptr inbounds [2048 x i8], ptr %112, i64 0, i64 0, !dbg !657
  %114 = getelementptr inbounds [256 x i8], ptr %15, i64 0, i64 0, !dbg !658
  %115 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef %110, ptr noundef @.str.3, ptr noundef %111, ptr noundef %113, ptr noundef %114) #8, !dbg !659
  br label %116, !dbg !660

116:                                              ; preds = %121, %107
  %117 = getelementptr inbounds [1000 x i8], ptr %14, i64 0, i64 0, !dbg !661
  %118 = load i8, ptr %117, align 16, !dbg !661
  %119 = sext i8 %118 to i32, !dbg !661
  %120 = icmp ne i32 %119, 0, !dbg !661
  br i1 %120, label %121, label %130, !dbg !660

121:                                              ; preds = %116
  %122 = load i32, ptr %5, align 4, !dbg !662
  %123 = getelementptr inbounds [1000 x i8], ptr %14, i64 0, i64 0, !dbg !664
  call void @socinput(i32 noundef %122, ptr noundef %123, i32 noundef 1000), !dbg !665
  %124 = getelementptr inbounds [1000 x i8], ptr %14, i64 0, i64 0, !dbg !666
  call void @treathead(ptr noundef null, ptr noundef null, ptr noundef null, ptr noundef %20, ptr noundef %124), !dbg !667
  %125 = load ptr, ptr %8, align 8, !dbg !668
  %126 = getelementptr inbounds [1000 x i8], ptr %14, i64 0, i64 0, !dbg !668
  %127 = call ptr @strcat(ptr noundef %125, ptr noundef %126) #8, !dbg !668
  %128 = load ptr, ptr %8, align 8, !dbg !669
  %129 = call ptr @strcat(ptr noundef %128, ptr noundef @.str.4) #8, !dbg !669
  br label %116, !dbg !660, !llvm.loop !670

130:                                              ; preds = %116
  %131 = getelementptr inbounds %struct.htsblk, ptr %20, i32 0, i32 19, !dbg !672
  %132 = load i64, ptr %131, align 8, !dbg !672
  %133 = icmp sgt i64 %132, 0, !dbg !674
  br i1 %133, label %134, label %176, !dbg !675

134:                                              ; preds = %130
  call void @llvm.dbg.declare(metadata ptr %21, metadata !676, metadata !DIExpression()), !dbg !678
  %135 = getelementptr inbounds %struct.htsblk, ptr %20, i32 0, i32 19, !dbg !679
  %136 = load i64, ptr %135, align 8, !dbg !679
  %137 = icmp sgt i64 %136, 32000, !dbg !679
  br i1 %137, label %138, label %139, !dbg !679

138:                                              ; preds = %134
  br label %142, !dbg !679

139:                                              ; preds = %134
  %140 = getelementptr inbounds %struct.htsblk, ptr %20, i32 0, i32 19, !dbg !679
  %141 = load i64, ptr %140, align 8, !dbg !679
  br label %142, !dbg !679

142:                                              ; preds = %139, %138
  %143 = phi i64 [ 32000, %138 ], [ %141, %139 ], !dbg !679
  %144 = trunc i64 %143 to i32, !dbg !680
  store i32 %144, ptr %21, align 4, !dbg !678
  call void @llvm.dbg.declare(metadata ptr %22, metadata !681, metadata !DIExpression()), !dbg !682
  %145 = load ptr, ptr %8, align 8, !dbg !683
  %146 = call i64 @strlen(ptr noundef %145) #10, !dbg !684
  %147 = trunc i64 %146 to i32, !dbg !685
  store i32 %147, ptr %22, align 4, !dbg !682
  br label %148, !dbg !686

148:                                              ; preds = %164, %142
  %149 = load i32, ptr %21, align 4, !dbg !687
  %150 = icmp sgt i32 %149, 0, !dbg !688
  br i1 %150, label %151, label %162, !dbg !689

151:                                              ; preds = %148
  %152 = load i32, ptr %5, align 4, !dbg !690
  %153 = load ptr, ptr %8, align 8, !dbg !691
  %154 = load i32, ptr %22, align 4, !dbg !692
  %155 = sext i32 %154 to i64, !dbg !693
  %156 = getelementptr inbounds i8, ptr %153, i64 %155, !dbg !693
  %157 = load i32, ptr %21, align 4, !dbg !694
  %158 = sext i32 %157 to i64, !dbg !694
  %159 = call i64 @recv(i32 noundef %152, ptr noundef %156, i64 noundef %158, i32 noundef 0), !dbg !695
  %160 = trunc i64 %159 to i32, !dbg !695
  store i32 %160, ptr %18, align 4, !dbg !696
  %161 = icmp sgt i32 %160, 0, !dbg !697
  br label %162

162:                                              ; preds = %151, %148
  %163 = phi i1 [ false, %148 ], [ %161, %151 ], !dbg !698
  br i1 %163, label %164, label %175, !dbg !686

164:                                              ; preds = %162
  %165 = load i32, ptr %18, align 4, !dbg !699
  %166 = load i32, ptr %22, align 4, !dbg !701
  %167 = add nsw i32 %166, %165, !dbg !701
  store i32 %167, ptr %22, align 4, !dbg !701
  %168 = load i32, ptr %18, align 4, !dbg !702
  %169 = load i32, ptr %21, align 4, !dbg !703
  %170 = sub nsw i32 %169, %168, !dbg !703
  store i32 %170, ptr %21, align 4, !dbg !703
  %171 = load ptr, ptr %8, align 8, !dbg !704
  %172 = load i32, ptr %22, align 4, !dbg !705
  %173 = sext i32 %172 to i64, !dbg !704
  %174 = getelementptr inbounds i8, ptr %171, i64 %173, !dbg !704
  store i8 0, ptr %174, align 1, !dbg !706
  br label %148, !dbg !686, !llvm.loop !707

175:                                              ; preds = %162
  br label %176, !dbg !709

176:                                              ; preds = %175, %130
  %177 = getelementptr inbounds [1000 x i8], ptr %14, i64 0, i64 0, !dbg !710
  %178 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef %177, ptr noundef @.str.5) #8, !dbg !711
  %179 = load i32, ptr %5, align 4, !dbg !712
  %180 = getelementptr inbounds [1000 x i8], ptr %14, i64 0, i64 0, !dbg !713
  %181 = getelementptr inbounds [1000 x i8], ptr %14, i64 0, i64 0, !dbg !714
  %182 = call i64 @strlen(ptr noundef %181) #10, !dbg !715
  %183 = trunc i64 %182 to i32, !dbg !716
  %184 = sext i32 %183 to i64, !dbg !716
  %185 = call i64 @send(i32 noundef %179, ptr noundef %180, i64 noundef %184, i32 noundef 0), !dbg !717
  store i32 1, ptr %9, align 4, !dbg !718
  br label %186, !dbg !719

186:                                              ; preds = %176, %103
  br label %187, !dbg !720

187:                                              ; preds = %186, %58
  br label %188, !dbg !721

188:                                              ; preds = %187, %49
  br label %189, !dbg !722

189:                                              ; preds = %188, %46
  br label %190, !dbg !723

190:                                              ; preds = %189, %4
  %191 = load i32, ptr %5, align 4, !dbg !724
  %192 = icmp ne i32 %191, -1, !dbg !726
  br i1 %192, label %193, label %196, !dbg !727

193:                                              ; preds = %190
  %194 = load i32, ptr %5, align 4, !dbg !728
  %195 = call i32 @close(i32 noundef %194), !dbg !730
  br label %196, !dbg !731

196:                                              ; preds = %193, %190
  %197 = load i32, ptr %9, align 4, !dbg !732
  ret i32 %197, !dbg !733
}

declare i32 @accept(i32 noundef, ptr noundef, ptr noundef) #4

; Function Attrs: nounwind
declare i32 @getpeername(i32 noundef, ptr noundef, ptr noundef) #3

; Function Attrs: nounwind
declare i32 @sprintf(ptr noundef, ptr noundef, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @socinput(i32 noundef %0, ptr noundef %1, i32 noundef %2) #0 !dbg !734 {
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8, align 1
  store i32 %0, ptr %4, align 4
  call void @llvm.dbg.declare(metadata ptr %4, metadata !737, metadata !DIExpression()), !dbg !738
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !739, metadata !DIExpression()), !dbg !740
  store i32 %2, ptr %6, align 4
  call void @llvm.dbg.declare(metadata ptr %6, metadata !741, metadata !DIExpression()), !dbg !742
  call void @llvm.dbg.declare(metadata ptr %7, metadata !743, metadata !DIExpression()), !dbg !744
  call void @llvm.dbg.declare(metadata ptr %8, metadata !745, metadata !DIExpression()), !dbg !746
  store i32 0, ptr %8, align 4, !dbg !746
  br label %10, !dbg !747

10:                                               ; preds = %43, %3
  call void @llvm.dbg.declare(metadata ptr %9, metadata !748, metadata !DIExpression()), !dbg !750
  %11 = load i32, ptr %4, align 4, !dbg !751
  %12 = call i64 @recv(i32 noundef %11, ptr noundef %9, i64 noundef 1, i32 noundef 0), !dbg !753
  %13 = icmp eq i64 %12, 1, !dbg !754
  br i1 %13, label %14, label %30, !dbg !755

14:                                               ; preds = %10
  %15 = load i8, ptr %9, align 1, !dbg !756
  %16 = zext i8 %15 to i32, !dbg !756
  store i32 %16, ptr %7, align 4, !dbg !758
  %17 = load i32, ptr %7, align 4, !dbg !759
  switch i32 %17, label %21 [
    i32 13, label %18
    i32 10, label %19
    i32 9, label %20
    i32 12, label %20
  ], !dbg !760

18:                                               ; preds = %14
  br label %29, !dbg !761

19:                                               ; preds = %14
  store i32 -1, ptr %7, align 4, !dbg !763
  br label %29, !dbg !764

20:                                               ; preds = %14, %14
  br label %29, !dbg !765

21:                                               ; preds = %14
  %22 = load i32, ptr %7, align 4, !dbg !766
  %23 = trunc i32 %22 to i8, !dbg !767
  %24 = load ptr, ptr %5, align 8, !dbg !768
  %25 = load i32, ptr %8, align 4, !dbg !769
  %26 = add nsw i32 %25, 1, !dbg !769
  store i32 %26, ptr %8, align 4, !dbg !769
  %27 = sext i32 %25 to i64, !dbg !768
  %28 = getelementptr inbounds i8, ptr %24, i64 %27, !dbg !768
  store i8 %23, ptr %28, align 1, !dbg !770
  br label %29, !dbg !771

29:                                               ; preds = %21, %20, %19, %18
  br label %31, !dbg !772

30:                                               ; preds = %10
  store i32 -1, ptr %7, align 4, !dbg !773
  br label %31

31:                                               ; preds = %30, %29
  br label %32, !dbg !774

32:                                               ; preds = %31
  %33 = load i32, ptr %7, align 4, !dbg !775
  %34 = icmp ne i32 %33, -1, !dbg !776
  br i1 %34, label %35, label %43, !dbg !777

35:                                               ; preds = %32
  %36 = load i32, ptr %7, align 4, !dbg !778
  %37 = icmp ne i32 %36, -1, !dbg !779
  br i1 %37, label %38, label %43, !dbg !780

38:                                               ; preds = %35
  %39 = load i32, ptr %8, align 4, !dbg !781
  %40 = load i32, ptr %6, align 4, !dbg !782
  %41 = sub nsw i32 %40, 1, !dbg !783
  %42 = icmp slt i32 %39, %41, !dbg !784
  br label %43

43:                                               ; preds = %38, %35, %32
  %44 = phi i1 [ false, %35 ], [ false, %32 ], [ %42, %38 ], !dbg !785
  br i1 %44, label %10, label %45, !dbg !774, !llvm.loop !786

45:                                               ; preds = %43
  %46 = load ptr, ptr %5, align 8, !dbg !788
  %47 = load i32, ptr %8, align 4, !dbg !789
  %48 = add nsw i32 %47, 1, !dbg !789
  store i32 %48, ptr %8, align 4, !dbg !789
  %49 = sext i32 %47 to i64, !dbg !788
  %50 = getelementptr inbounds i8, ptr %46, i64 %49, !dbg !788
  store i8 0, ptr %50, align 1, !dbg !790
  ret void, !dbg !791
}

; Function Attrs: nounwind
declare i32 @__isoc99_sscanf(ptr noundef, ptr noundef, ...) #3

declare i32 @ident_url_absolute(ptr noundef, ptr noundef) #4

declare void @hts_init_htsblk(ptr noundef) #4

declare void @treathead(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) #4

; Function Attrs: nounwind
declare ptr @strcat(ptr noundef, ptr noundef) #3

; Function Attrs: nounwind willreturn memory(read)
declare i64 @strlen(ptr noundef) #6

declare i64 @recv(i32 noundef, ptr noundef, i64 noundef, i32 noundef) #4

declare i64 @send(i32 noundef, ptr noundef, i64 noundef, i32 noundef) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal void @abortf_(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 !dbg !792 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !795, metadata !DIExpression()), !dbg !796
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !797, metadata !DIExpression()), !dbg !798
  store i32 %2, ptr %6, align 4
  call void @llvm.dbg.declare(metadata ptr %6, metadata !799, metadata !DIExpression()), !dbg !800
  %7 = load ptr, ptr %4, align 8, !dbg !801
  %8 = load ptr, ptr %5, align 8, !dbg !802
  %9 = load i32, ptr %6, align 4, !dbg !803
  call void @log_abort_(ptr noundef %7, ptr noundef %8, i32 noundef %9), !dbg !804
  call void @abort() #11, !dbg !805
  unreachable, !dbg !805
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @log_abort_(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 !dbg !806 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  store ptr %0, ptr %4, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !807, metadata !DIExpression()), !dbg !808
  store ptr %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !809, metadata !DIExpression()), !dbg !810
  store i32 %2, ptr %6, align 4
  call void @llvm.dbg.declare(metadata ptr %6, metadata !811, metadata !DIExpression()), !dbg !812
  %7 = load ptr, ptr @stderr, align 8, !dbg !813
  %8 = load ptr, ptr %4, align 8, !dbg !814
  %9 = load ptr, ptr %5, align 8, !dbg !815
  %10 = load i32, ptr %6, align 4, !dbg !816
  %11 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %7, ptr noundef @.str.8, ptr noundef %8, ptr noundef %9, i32 noundef %10), !dbg !817
  %12 = load ptr, ptr @stderr, align 8, !dbg !818
  %13 = call i32 @fflush(ptr noundef %12), !dbg !819
  ret void, !dbg !820
}

; Function Attrs: noreturn nounwind
declare void @abort() #7

declare i32 @fprintf(ptr noundef, ptr noundef, ...) #4

declare i32 @fflush(ptr noundef) #4

declare i32 @getnameinfo(ptr noundef, i32 noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef) #4

; Function Attrs: nounwind willreturn memory(read)
declare ptr @strchr(ptr noundef, i32 noundef) #6

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nounwind willreturn memory(none) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { nounwind willreturn memory(read) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { noreturn nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nounwind }
attributes #9 = { nounwind willreturn memory(none) }
attributes #10 = { nounwind willreturn memory(read) }
attributes #11 = { noreturn nounwind }

!llvm.dbg.cu = !{!56}
!llvm.module.flags = !{!85, !86, !87, !88, !89, !90, !91}
!llvm.ident = !{!92}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(scope: null, file: !2, line: 91, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "src/htscatchurl.c", directory: "/home/raj/httrack-3.48.21", checksumkind: CSK_MD5, checksum: "d7c84a7191b6b8bbccee75cb0df72b67")
!3 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 144, elements: !5)
!4 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!5 = !{!6}
!6 = !DISubrange(count: 18)
!7 = !DIGlobalVariableExpression(var: !8, expr: !DIExpression())
!8 = distinct !DIGlobalVariable(scope: null, file: !2, line: 163, type: !9, isLocal: true, isDefinition: true)
!9 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 48, elements: !10)
!10 = !{!11}
!11 = !DISubrange(count: 6)
!12 = !DIGlobalVariableExpression(var: !13, expr: !DIExpression())
!13 = distinct !DIGlobalVariable(scope: null, file: !2, line: 177, type: !14, isLocal: true, isDefinition: true)
!14 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 72, elements: !15)
!15 = !{!16}
!16 = !DISubrange(count: 9)
!17 = !DIGlobalVariableExpression(var: !18, expr: !DIExpression())
!18 = distinct !DIGlobalVariable(scope: null, file: !2, line: 200, type: !19, isLocal: true, isDefinition: true)
!19 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 88, elements: !20)
!20 = !{!21}
!21 = !DISubrange(count: 11)
!22 = !DIGlobalVariableExpression(var: !23, expr: !DIExpression())
!23 = distinct !DIGlobalVariable(scope: null, file: !2, line: 205, type: !24, isLocal: true, isDefinition: true)
!24 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 24, elements: !25)
!25 = !{!26}
!26 = !DISubrange(count: 3)
!27 = !DIGlobalVariableExpression(var: !28, expr: !DIExpression())
!28 = distinct !DIGlobalVariable(scope: null, file: !2, line: 222, type: !29, isLocal: true, isDefinition: true)
!29 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 3856, elements: !30)
!30 = !{!31}
!31 = !DISubrange(count: 482)
!32 = !DIGlobalVariableExpression(var: !33, expr: !DIExpression())
!33 = distinct !DIGlobalVariable(scope: null, file: !34, line: 108, type: !35, isLocal: true, isDefinition: true)
!34 = !DIFile(filename: "./src/htsnet.h", directory: "/home/raj/httrack-3.48.21", checksumkind: CSK_MD5, checksum: "c991984e387bd7a1b6a2629888d889ed")
!35 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 104, elements: !36)
!36 = !{!37}
!37 = !DISubrange(count: 13)
!38 = !DIGlobalVariableExpression(var: !39, expr: !DIExpression())
!39 = distinct !DIGlobalVariable(scope: null, file: !34, line: 119, type: !40, isLocal: true, isDefinition: true)
!40 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 176, elements: !41)
!41 = !{!42}
!42 = !DISubrange(count: 22)
!43 = !DIGlobalVariableExpression(var: !44, expr: !DIExpression())
!44 = distinct !DIGlobalVariable(scope: null, file: !45, line: 91, type: !46, isLocal: true, isDefinition: true)
!45 = !DIFile(filename: "./src/htssafe.h", directory: "/home/raj/httrack-3.48.21", checksumkind: CSK_MD5, checksum: "0a24d1c0939efbe916010d30091bc9cc")
!46 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 160, elements: !47)
!47 = !{!48}
!48 = !DISubrange(count: 20)
!49 = !DIGlobalVariableExpression(var: !50, expr: !DIExpression())
!50 = distinct !DIGlobalVariable(scope: null, file: !34, line: 234, type: !51, isLocal: true, isDefinition: true)
!51 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 128, elements: !52)
!52 = !{!53}
!53 = !DISubrange(count: 16)
!54 = !DIGlobalVariableExpression(var: !55, expr: !DIExpression())
!55 = distinct !DIGlobalVariable(scope: null, file: !34, line: 235, type: !19, isLocal: true, isDefinition: true)
!56 = distinct !DICompileUnit(language: DW_LANG_C11, file: !2, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !57, retainedTypes: !71, globals: !84, splitDebugInlining: false, nameTableKind: None)
!57 = !{!58}
!58 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__socket_type", file: !59, line: 24, baseType: !60, size: 32, elements: !61)
!59 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket_type.h", directory: "", checksumkind: CSK_MD5, checksum: "0d4e972fdeb3da9a5bc94fa41144e9f8")
!60 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!61 = !{!62, !63, !64, !65, !66, !67, !68, !69, !70}
!62 = !DIEnumerator(name: "SOCK_STREAM", value: 1)
!63 = !DIEnumerator(name: "SOCK_DGRAM", value: 2)
!64 = !DIEnumerator(name: "SOCK_RAW", value: 3)
!65 = !DIEnumerator(name: "SOCK_RDM", value: 4)
!66 = !DIEnumerator(name: "SOCK_SEQPACKET", value: 5)
!67 = !DIEnumerator(name: "SOCK_DCCP", value: 6)
!68 = !DIEnumerator(name: "SOCK_PACKET", value: 10)
!69 = !DIEnumerator(name: "SOCK_CLOEXEC", value: 524288)
!70 = !DIEnumerator(name: "SOCK_NONBLOCK", value: 2048)
!71 = !{!72, !73, !76, !75, !83, !4}
!72 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!73 = !DIDerivedType(tag: DW_TAG_typedef, name: "T_SOC", file: !74, line: 323, baseType: !75)
!74 = !DIFile(filename: "./src/htsglobal.h", directory: "/home/raj/httrack-3.48.21", checksumkind: CSK_MD5, checksum: "fb20c0ed09319430675cc60ef3f4ae78")
!75 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!76 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_port_t", file: !77, line: 123, baseType: !78)
!77 = !DIFile(filename: "/usr/include/netinet/in.h", directory: "", checksumkind: CSK_MD5, checksum: "eb6560f10d4cfe9f30fea2c92b9da0fd")
!78 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !79, line: 25, baseType: !80)
!79 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "", checksumkind: CSK_MD5, checksum: "2bf2ae53c58c01b1a1b9383b5195125c")
!80 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !81, line: 40, baseType: !82)
!81 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "", checksumkind: CSK_MD5, checksum: "d108b5f93a74c50510d7d9bc0ab36df9")
!82 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!83 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64)
!84 = !{!0, !7, !12, !17, !22, !27, !32, !38, !43, !49, !54}
!85 = !{i32 7, !"Dwarf Version", i32 5}
!86 = !{i32 2, !"Debug Info Version", i32 3}
!87 = !{i32 1, !"wchar_size", i32 4}
!88 = !{i32 8, !"PIC Level", i32 2}
!89 = !{i32 7, !"PIE Level", i32 2}
!90 = !{i32 7, !"uwtable", i32 2}
!91 = !{i32 7, !"frame-pointer", i32 2}
!92 = !{!"clang version 16.0.0"}
!93 = distinct !DISubprogram(name: "catch_url_init_std", scope: !2, file: !2, line: 65, type: !94, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !56, retainedNodes: !97)
!94 = !DISubroutineType(types: !95)
!95 = !{!73, !96, !83}
!96 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !75, size: 64)
!97 = !{}
!98 = !DILocalVariable(name: "port_prox", arg: 1, scope: !93, file: !2, line: 65, type: !96)
!99 = !DILocation(line: 65, column: 42, scope: !93)
!100 = !DILocalVariable(name: "adr_prox", arg: 2, scope: !93, file: !2, line: 65, type: !83)
!101 = !DILocation(line: 65, column: 59, scope: !93)
!102 = !DILocalVariable(name: "soc", scope: !93, file: !2, line: 66, type: !73)
!103 = !DILocation(line: 66, column: 9, scope: !93)
!104 = !DILocalVariable(name: "try_to_listen_to", scope: !93, file: !2, line: 67, type: !105)
!105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 320, elements: !106)
!106 = !{!107}
!107 = !DISubrange(count: 10)
!108 = !DILocation(line: 67, column: 7, scope: !93)
!109 = !DILocalVariable(name: "i", scope: !93, file: !2, line: 68, type: !75)
!110 = !DILocation(line: 68, column: 7, scope: !93)
!111 = !DILocation(line: 70, column: 3, scope: !93)
!112 = !DILocation(line: 71, column: 44, scope: !113)
!113 = distinct !DILexicalBlock(scope: !93, file: !2, line: 70, column: 6)
!114 = !DILocation(line: 71, column: 27, scope: !113)
!115 = !DILocation(line: 71, column: 48, scope: !113)
!116 = !DILocation(line: 71, column: 11, scope: !113)
!117 = !DILocation(line: 71, column: 9, scope: !113)
!118 = !DILocation(line: 72, column: 35, scope: !113)
!119 = !DILocation(line: 72, column: 18, scope: !113)
!120 = !DILocation(line: 72, column: 6, scope: !113)
!121 = !DILocation(line: 72, column: 16, scope: !113)
!122 = !DILocation(line: 73, column: 6, scope: !113)
!123 = !DILocation(line: 74, column: 3, scope: !113)
!124 = !DILocation(line: 74, column: 12, scope: !93)
!125 = !DILocation(line: 74, column: 16, scope: !93)
!126 = !DILocation(line: 74, column: 35, scope: !93)
!127 = !DILocation(line: 74, column: 56, scope: !93)
!128 = !DILocation(line: 74, column: 39, scope: !93)
!129 = !DILocation(line: 74, column: 59, scope: !93)
!130 = !DILocation(line: 0, scope: !93)
!131 = distinct !{!131, !111, !132, !133}
!132 = !DILocation(line: 74, column: 64, scope: !93)
!133 = !{!"llvm.loop.mustprogress"}
!134 = !DILocation(line: 75, column: 10, scope: !93)
!135 = !DILocation(line: 75, column: 3, scope: !93)
!136 = distinct !DISubprogram(name: "catch_url_init", scope: !2, file: !2, line: 81, type: !94, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !56, retainedNodes: !97)
!137 = !DILocalVariable(name: "port", arg: 1, scope: !136, file: !2, line: 81, type: !96)
!138 = !DILocation(line: 81, column: 38, scope: !136)
!139 = !DILocalVariable(name: "adr", arg: 2, scope: !136, file: !2, line: 81, type: !83)
!140 = !DILocation(line: 81, column: 66, scope: !136)
!141 = !DILocalVariable(name: "soc", scope: !136, file: !2, line: 82, type: !73)
!142 = !DILocation(line: 82, column: 9, scope: !136)
!143 = !DILocalVariable(name: "h_loc", scope: !136, file: !2, line: 83, type: !144)
!144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 2048, elements: !145)
!145 = !{!146}
!146 = !DISubrange(count: 256)
!147 = !DILocation(line: 83, column: 8, scope: !136)
!148 = !DILocation(line: 85, column: 19, scope: !149)
!149 = distinct !DILexicalBlock(scope: !136, file: !2, line: 85, column: 7)
!150 = !DILocation(line: 85, column: 7, scope: !149)
!151 = !DILocation(line: 85, column: 41, scope: !149)
!152 = !DILocation(line: 85, column: 7, scope: !136)
!153 = !DILocalVariable(name: "server", scope: !154, file: !2, line: 86, type: !155)
!154 = distinct !DILexicalBlock(scope: !149, file: !2, line: 85, column: 47)
!155 = !DIDerivedType(tag: DW_TAG_typedef, name: "SOCaddr", file: !34, line: 91, baseType: !156)
!156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SOCaddr", file: !34, line: 93, size: 224, elements: !157)
!157 = !{!158}
!158 = !DIDerivedType(tag: DW_TAG_member, name: "m_addr", scope: !156, file: !34, line: 103, baseType: !159, size: 224)
!159 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !156, file: !34, line: 94, size: 224, elements: !160)
!160 = !{!161, !172, !189}
!161 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !159, file: !34, line: 96, baseType: !162, size: 128)
!162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !163, line: 180, size: 128, elements: !164)
!163 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket.h", directory: "", checksumkind: CSK_MD5, checksum: "e3826be048699664d9ef7b080f62f2e0")
!164 = !{!165, !168}
!165 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !162, file: !163, line: 182, baseType: !166, size: 16)
!166 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !167, line: 28, baseType: !82)
!167 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sockaddr.h", directory: "", checksumkind: CSK_MD5, checksum: "dd7f1d9dd6e26f88d1726905ed5d9ff5")
!168 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !162, file: !163, line: 183, baseType: !169, size: 112, offset: 16)
!169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 112, elements: !170)
!170 = !{!171}
!171 = !DISubrange(count: 14)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !159, file: !34, line: 98, baseType: !173, size: 128)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in", file: !77, line: 245, size: 128, elements: !174)
!174 = !{!175, !176, !177, !184}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "sin_family", scope: !173, file: !77, line: 247, baseType: !166, size: 16)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "sin_port", scope: !173, file: !77, line: 248, baseType: !76, size: 16, offset: 16)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !173, file: !77, line: 249, baseType: !178, size: 32, offset: 32)
!178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !77, line: 31, size: 32, elements: !179)
!179 = !{!180}
!180 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !178, file: !77, line: 33, baseType: !181, size: 32)
!181 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_addr_t", file: !77, line: 30, baseType: !182)
!182 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !79, line: 26, baseType: !183)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !81, line: 42, baseType: !60)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "sin_zero", scope: !173, file: !77, line: 252, baseType: !185, size: 64, offset: 64)
!185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 64, elements: !187)
!186 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!187 = !{!188}
!188 = !DISubrange(count: 8)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "in6", scope: !159, file: !34, line: 101, baseType: !190, size: 224)
!190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in6", file: !77, line: 260, size: 224, elements: !191)
!191 = !{!192, !193, !194, !195, !211}
!192 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_family", scope: !190, file: !77, line: 262, baseType: !166, size: 16)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_port", scope: !190, file: !77, line: 263, baseType: !76, size: 16, offset: 16)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_flowinfo", scope: !190, file: !77, line: 264, baseType: !182, size: 32, offset: 32)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_addr", scope: !190, file: !77, line: 265, baseType: !196, size: 128, offset: 64)
!196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !77, line: 219, size: 128, elements: !197)
!197 = !{!198}
!198 = !DIDerivedType(tag: DW_TAG_member, name: "__in6_u", scope: !196, file: !77, line: 226, baseType: !199, size: 128)
!199 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !196, file: !77, line: 221, size: 128, elements: !200)
!200 = !{!201, !205, !207}
!201 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr8", scope: !199, file: !77, line: 223, baseType: !202, size: 128)
!202 = !DICompositeType(tag: DW_TAG_array_type, baseType: !203, size: 128, elements: !52)
!203 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !79, line: 24, baseType: !204)
!204 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !81, line: 38, baseType: !186)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr16", scope: !199, file: !77, line: 224, baseType: !206, size: 128)
!206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !78, size: 128, elements: !187)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr32", scope: !199, file: !77, line: 225, baseType: !208, size: 128)
!208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !182, size: 128, elements: !209)
!209 = !{!210}
!210 = !DISubrange(count: 4)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_scope_id", scope: !190, file: !77, line: 266, baseType: !182, size: 32, offset: 192)
!212 = !DILocation(line: 86, column: 13, scope: !154)
!213 = !DILocation(line: 87, column: 33, scope: !214)
!214 = distinct !DILexicalBlock(scope: !154, file: !2, line: 87, column: 9)
!215 = !DILocation(line: 87, column: 9, scope: !214)
!216 = !DILocation(line: 87, column: 49, scope: !214)
!217 = !DILocation(line: 87, column: 9, scope: !154)
!218 = !DILocation(line: 89, column: 27, scope: !219)
!219 = distinct !DILexicalBlock(scope: !220, file: !2, line: 88, column: 11)
!220 = distinct !DILexicalBlock(scope: !214, file: !2, line: 87, column: 58)
!221 = !DILocation(line: 89, column: 20, scope: !219)
!222 = !DILocation(line: 88, column: 16, scope: !219)
!223 = !DILocation(line: 90, column: 31, scope: !219)
!224 = !DILocation(line: 88, column: 11, scope: !220)
!225 = !DILocation(line: 91, column: 9, scope: !226)
!226 = distinct !DILexicalBlock(scope: !219, file: !2, line: 90, column: 50)
!227 = !DILocation(line: 91, column: 9, scope: !228)
!228 = distinct !DILexicalBlock(scope: !226, file: !2, line: 91, column: 9)
!229 = !DILocation(line: 92, column: 18, scope: !230)
!230 = distinct !DILexicalBlock(scope: !226, file: !2, line: 92, column: 13)
!231 = !DILocation(line: 92, column: 24, scope: !230)
!232 = !DILocation(line: 92, column: 50, scope: !230)
!233 = !DILocation(line: 92, column: 13, scope: !230)
!234 = !DILocation(line: 92, column: 72, scope: !230)
!235 = !DILocation(line: 92, column: 13, scope: !226)
!236 = !DILocalVariable(name: "server2", scope: !237, file: !2, line: 93, type: !155)
!237 = distinct !DILexicalBlock(scope: !230, file: !2, line: 92, column: 78)
!238 = !DILocation(line: 93, column: 19, scope: !237)
!239 = !DILocalVariable(name: "len", scope: !237, file: !2, line: 94, type: !240)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "SOClen", file: !34, line: 258, baseType: !241)
!241 = !DIDerivedType(tag: DW_TAG_typedef, name: "socklen_t", file: !242, line: 274, baseType: !243)
!242 = !DIFile(filename: "/usr/include/unistd.h", directory: "", checksumkind: CSK_MD5, checksum: "ed37c2e6f30ba31a8b41e4d70547c39c")
!243 = !DIDerivedType(tag: DW_TAG_typedef, name: "__socklen_t", file: !81, line: 210, baseType: !60)
!244 = !DILocation(line: 94, column: 18, scope: !237)
!245 = !DILocation(line: 96, column: 27, scope: !246)
!246 = distinct !DILexicalBlock(scope: !237, file: !2, line: 96, column: 15)
!247 = !DILocation(line: 96, column: 33, scope: !246)
!248 = !DILocation(line: 96, column: 15, scope: !246)
!249 = !DILocation(line: 96, column: 66, scope: !246)
!250 = !DILocation(line: 96, column: 15, scope: !237)
!251 = !DILocation(line: 97, column: 27, scope: !252)
!252 = distinct !DILexicalBlock(scope: !246, file: !2, line: 96, column: 72)
!253 = !DILocation(line: 97, column: 21, scope: !252)
!254 = !DILocation(line: 97, column: 14, scope: !252)
!255 = !DILocation(line: 97, column: 19, scope: !252)
!256 = !DILocation(line: 98, column: 24, scope: !257)
!257 = distinct !DILexicalBlock(scope: !252, file: !2, line: 98, column: 17)
!258 = !DILocation(line: 98, column: 17, scope: !257)
!259 = !DILocation(line: 98, column: 32, scope: !257)
!260 = !DILocation(line: 98, column: 17, scope: !252)
!261 = !DILocation(line: 99, column: 15, scope: !262)
!262 = distinct !DILexicalBlock(scope: !257, file: !2, line: 98, column: 38)
!263 = !DILocation(line: 100, column: 13, scope: !262)
!264 = !DILocation(line: 104, column: 21, scope: !265)
!265 = distinct !DILexicalBlock(scope: !257, file: !2, line: 100, column: 20)
!266 = !DILocation(line: 104, column: 15, scope: !265)
!267 = !DILocation(line: 106, column: 19, scope: !265)
!268 = !DILocation(line: 109, column: 11, scope: !252)
!269 = !DILocation(line: 113, column: 19, scope: !270)
!270 = distinct !DILexicalBlock(scope: !246, file: !2, line: 109, column: 18)
!271 = !DILocation(line: 113, column: 13, scope: !270)
!272 = !DILocation(line: 115, column: 17, scope: !270)
!273 = !DILocation(line: 118, column: 9, scope: !237)
!274 = !DILocation(line: 122, column: 17, scope: !275)
!275 = distinct !DILexicalBlock(scope: !230, file: !2, line: 118, column: 16)
!276 = !DILocation(line: 122, column: 11, scope: !275)
!277 = !DILocation(line: 124, column: 15, scope: !275)
!278 = !DILocation(line: 126, column: 7, scope: !226)
!279 = !DILocation(line: 127, column: 5, scope: !220)
!280 = !DILocation(line: 128, column: 3, scope: !154)
!281 = !DILocation(line: 129, column: 10, scope: !136)
!282 = !DILocation(line: 129, column: 3, scope: !136)
!283 = distinct !DISubprogram(name: "SOCaddr_sinport_", scope: !34, file: !34, line: 106, type: !284, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !56, retainedNodes: !97)
!284 = !DISubroutineType(types: !285)
!285 = !{!286, !287, !289, !291}
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !76, size: 64)
!287 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !288)
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 64)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 64)
!290 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4)
!291 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !75)
!292 = !DILocalVariable(name: "addr", arg: 1, scope: !283, file: !34, line: 106, type: !287)
!293 = !DILocation(line: 106, column: 73, scope: !283)
!294 = !DILocalVariable(name: "file", arg: 2, scope: !283, file: !34, line: 107, type: !289)
!295 = !DILocation(line: 107, column: 70, scope: !283)
!296 = !DILocalVariable(name: "line", arg: 3, scope: !283, file: !34, line: 107, type: !291)
!297 = !DILocation(line: 107, column: 86, scope: !283)
!298 = !DILocation(line: 108, column: 3, scope: !283)
!299 = !DILocation(line: 109, column: 10, scope: !283)
!300 = !DILocation(line: 109, column: 16, scope: !283)
!301 = !DILocation(line: 109, column: 26, scope: !283)
!302 = !DILocation(line: 109, column: 3, scope: !283)
!303 = !DILocation(line: 111, column: 13, scope: !304)
!304 = distinct !DILexicalBlock(scope: !283, file: !34, line: 109, column: 37)
!305 = !DILocation(line: 111, column: 19, scope: !304)
!306 = !DILocation(line: 111, column: 29, scope: !304)
!307 = !DILocation(line: 111, column: 5, scope: !304)
!308 = !DILocation(line: 115, column: 13, scope: !304)
!309 = !DILocation(line: 115, column: 19, scope: !304)
!310 = !DILocation(line: 115, column: 30, scope: !304)
!311 = !DILocation(line: 115, column: 5, scope: !304)
!312 = !DILocation(line: 119, column: 5, scope: !304)
!313 = !DILocation(line: 120, column: 5, scope: !304)
!314 = !DILocation(line: 123, column: 1, scope: !283)
!315 = distinct !DISubprogram(name: "SOCaddr_size_", scope: !34, file: !34, line: 125, type: !316, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !56, retainedNodes: !97)
!316 = !DISubroutineType(types: !317)
!317 = !{!241, !318, !289, !291}
!318 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !319)
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !155)
!321 = !DILocalVariable(name: "addr", arg: 1, scope: !315, file: !34, line: 125, type: !318)
!322 = !DILocation(line: 125, column: 74, scope: !315)
!323 = !DILocalVariable(name: "file", arg: 2, scope: !315, file: !34, line: 126, type: !289)
!324 = !DILocation(line: 126, column: 66, scope: !315)
!325 = !DILocalVariable(name: "line", arg: 3, scope: !315, file: !34, line: 126, type: !291)
!326 = !DILocation(line: 126, column: 82, scope: !315)
!327 = !DILocation(line: 127, column: 3, scope: !315)
!328 = !DILocation(line: 128, column: 10, scope: !315)
!329 = !DILocation(line: 128, column: 16, scope: !315)
!330 = !DILocation(line: 128, column: 26, scope: !315)
!331 = !DILocation(line: 128, column: 3, scope: !315)
!332 = !DILocation(line: 130, column: 5, scope: !333)
!333 = distinct !DILexicalBlock(scope: !315, file: !34, line: 128, column: 37)
!334 = !DILocation(line: 134, column: 5, scope: !333)
!335 = !DILocation(line: 138, column: 5, scope: !333)
!336 = !DILocation(line: 141, column: 1, scope: !315)
!337 = distinct !DISubprogram(name: "SOCaddr_inetntoa_", scope: !34, file: !34, line: 231, type: !338, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !56, retainedNodes: !97)
!338 = !DISubroutineType(types: !339)
!339 = !{null, !83, !340, !287, !289, !291}
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !341, line: 46, baseType: !342)
!341 = !DIFile(filename: "SVF/llvm-16.0.0.obj/lib/clang/16/include/stddef.h", directory: "/home/raj", checksumkind: CSK_MD5, checksum: "f95079da609b0e8f201cb8136304bf3b")
!342 = !DIBasicType(name: "unsigned long", size: 64, encoding: DW_ATE_unsigned)
!343 = !DILocalVariable(name: "namebuf", arg: 1, scope: !337, file: !34, line: 231, type: !83)
!344 = !DILocation(line: 231, column: 48, scope: !337)
!345 = !DILocalVariable(name: "namebuflen", arg: 2, scope: !337, file: !34, line: 231, type: !340)
!346 = !DILocation(line: 231, column: 64, scope: !337)
!347 = !DILocalVariable(name: "ss", arg: 3, scope: !337, file: !34, line: 232, type: !287)
!348 = !DILocation(line: 232, column: 57, scope: !337)
!349 = !DILocalVariable(name: "file", arg: 4, scope: !337, file: !34, line: 233, type: !289)
!350 = !DILocation(line: 233, column: 54, scope: !337)
!351 = !DILocalVariable(name: "line", arg: 5, scope: !337, file: !34, line: 233, type: !291)
!352 = !DILocation(line: 233, column: 70, scope: !337)
!353 = !DILocation(line: 234, column: 3, scope: !337)
!354 = !DILocation(line: 235, column: 3, scope: !337)
!355 = !DILocation(line: 237, column: 20, scope: !356)
!356 = distinct !DILexicalBlock(scope: !337, file: !34, line: 237, column: 7)
!357 = !DILocation(line: 237, column: 24, scope: !356)
!358 = !DILocation(line: 238, column: 19, scope: !356)
!359 = !DILocation(line: 238, column: 28, scope: !356)
!360 = !DILocation(line: 237, column: 7, scope: !356)
!361 = !DILocation(line: 240, column: 35, scope: !356)
!362 = !DILocation(line: 237, column: 7, scope: !337)
!363 = !DILocalVariable(name: "pos", scope: !364, file: !34, line: 242, type: !365)
!364 = distinct !DILexicalBlock(scope: !356, file: !34, line: 240, column: 41)
!365 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !83)
!366 = !DILocation(line: 242, column: 17, scope: !364)
!367 = !DILocation(line: 242, column: 30, scope: !364)
!368 = !DILocation(line: 242, column: 23, scope: !364)
!369 = !DILocation(line: 243, column: 9, scope: !370)
!370 = distinct !DILexicalBlock(scope: !364, file: !34, line: 243, column: 9)
!371 = !DILocation(line: 243, column: 13, scope: !370)
!372 = !DILocation(line: 243, column: 9, scope: !364)
!373 = !DILocation(line: 244, column: 8, scope: !374)
!374 = distinct !DILexicalBlock(scope: !370, file: !34, line: 243, column: 22)
!375 = !DILocation(line: 244, column: 12, scope: !374)
!376 = !DILocation(line: 245, column: 5, scope: !374)
!377 = !DILocation(line: 246, column: 3, scope: !364)
!378 = !DILocation(line: 247, column: 5, scope: !379)
!379 = distinct !DILexicalBlock(scope: !356, file: !34, line: 246, column: 10)
!380 = !DILocation(line: 247, column: 16, scope: !379)
!381 = !DILocation(line: 249, column: 1, scope: !337)
!382 = distinct !DISubprogram(name: "catch_url", scope: !2, file: !2, line: 138, type: !383, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !56, retainedNodes: !97)
!383 = !DISubroutineType(types: !384)
!384 = !{!75, !73, !83, !83, !83}
!385 = !DILocalVariable(name: "soc", arg: 1, scope: !382, file: !2, line: 138, type: !73)
!386 = !DILocation(line: 138, column: 32, scope: !382)
!387 = !DILocalVariable(name: "url", arg: 2, scope: !382, file: !2, line: 138, type: !83)
!388 = !DILocation(line: 138, column: 43, scope: !382)
!389 = !DILocalVariable(name: "method", arg: 3, scope: !382, file: !2, line: 138, type: !83)
!390 = !DILocation(line: 138, column: 54, scope: !382)
!391 = !DILocalVariable(name: "data", arg: 4, scope: !382, file: !2, line: 138, type: !83)
!392 = !DILocation(line: 138, column: 68, scope: !382)
!393 = !DILocalVariable(name: "retour", scope: !382, file: !2, line: 139, type: !75)
!394 = !DILocation(line: 139, column: 7, scope: !382)
!395 = !DILocation(line: 142, column: 7, scope: !396)
!396 = distinct !DILexicalBlock(scope: !382, file: !2, line: 142, column: 7)
!397 = !DILocation(line: 142, column: 11, scope: !396)
!398 = !DILocation(line: 142, column: 7, scope: !382)
!399 = !DILocalVariable(name: "soc2", scope: !400, file: !2, line: 143, type: !73)
!400 = distinct !DILexicalBlock(scope: !396, file: !2, line: 142, column: 30)
!401 = !DILocation(line: 143, column: 11, scope: !400)
!402 = !DILocation(line: 145, column: 5, scope: !400)
!403 = !DILocation(line: 145, column: 34, scope: !400)
!404 = !DILocation(line: 145, column: 27, scope: !400)
!405 = !DILocation(line: 145, column: 17, scope: !400)
!406 = !DILocation(line: 145, column: 52, scope: !400)
!407 = distinct !{!407, !402, !408, !133}
!408 = !DILocation(line: 145, column: 71, scope: !400)
!409 = !DILocation(line: 153, column: 11, scope: !400)
!410 = !DILocation(line: 153, column: 9, scope: !400)
!411 = !DILocalVariable(name: "server2", scope: !412, file: !2, line: 156, type: !155)
!412 = distinct !DILexicalBlock(scope: !400, file: !2, line: 155, column: 5)
!413 = !DILocation(line: 156, column: 15, scope: !412)
!414 = !DILocalVariable(name: "len", scope: !412, file: !2, line: 157, type: !240)
!415 = !DILocation(line: 157, column: 14, scope: !412)
!416 = !DILocation(line: 159, column: 23, scope: !417)
!417 = distinct !DILexicalBlock(scope: !412, file: !2, line: 159, column: 11)
!418 = !DILocation(line: 159, column: 29, scope: !417)
!419 = !DILocation(line: 159, column: 11, scope: !417)
!420 = !DILocation(line: 159, column: 62, scope: !417)
!421 = !DILocation(line: 159, column: 11, scope: !412)
!422 = !DILocalVariable(name: "dot", scope: !423, file: !2, line: 160, type: !424)
!423 = distinct !DILexicalBlock(scope: !417, file: !2, line: 159, column: 68)
!424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 2064, elements: !425)
!425 = !{!426}
!426 = !DISubrange(count: 258)
!427 = !DILocation(line: 160, column: 14, scope: !423)
!428 = !DILocation(line: 162, column: 9, scope: !423)
!429 = !DILocation(line: 163, column: 17, scope: !423)
!430 = !DILocation(line: 163, column: 31, scope: !423)
!431 = !DILocation(line: 163, column: 42, scope: !423)
!432 = !DILocation(line: 163, column: 36, scope: !423)
!433 = !DILocation(line: 163, column: 9, scope: !423)
!434 = !DILocation(line: 164, column: 7, scope: !423)
!435 = !DILocation(line: 169, column: 9, scope: !436)
!436 = distinct !DILexicalBlock(scope: !400, file: !2, line: 169, column: 9)
!437 = !DILocation(line: 169, column: 13, scope: !436)
!438 = !DILocation(line: 169, column: 9, scope: !400)
!439 = !DILocalVariable(name: "line", scope: !440, file: !2, line: 170, type: !441)
!440 = distinct !DILexicalBlock(scope: !436, file: !2, line: 169, column: 32)
!441 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 8000, elements: !442)
!442 = !{!443}
!443 = !DISubrange(count: 1000)
!444 = !DILocation(line: 170, column: 12, scope: !440)
!445 = !DILocalVariable(name: "protocol", scope: !440, file: !2, line: 171, type: !144)
!446 = !DILocation(line: 171, column: 12, scope: !440)
!447 = !DILocation(line: 173, column: 17, scope: !440)
!448 = !DILocation(line: 173, column: 29, scope: !440)
!449 = !DILocation(line: 173, column: 7, scope: !440)
!450 = !DILocation(line: 173, column: 15, scope: !440)
!451 = !DILocation(line: 175, column: 16, scope: !440)
!452 = !DILocation(line: 175, column: 21, scope: !440)
!453 = !DILocation(line: 175, column: 7, scope: !440)
!454 = !DILocation(line: 176, column: 11, scope: !455)
!455 = distinct !DILexicalBlock(scope: !440, file: !2, line: 176, column: 11)
!456 = !DILocation(line: 176, column: 11, scope: !440)
!457 = !DILocation(line: 177, column: 20, scope: !458)
!458 = distinct !DILexicalBlock(scope: !459, file: !2, line: 177, column: 13)
!459 = distinct !DILexicalBlock(scope: !455, file: !2, line: 176, column: 30)
!460 = !DILocation(line: 177, column: 38, scope: !458)
!461 = !DILocation(line: 177, column: 46, scope: !458)
!462 = !DILocation(line: 177, column: 51, scope: !458)
!463 = !DILocation(line: 177, column: 13, scope: !458)
!464 = !DILocation(line: 177, column: 61, scope: !458)
!465 = !DILocation(line: 177, column: 13, scope: !459)
!466 = !DILocalVariable(name: "af", scope: !467, file: !2, line: 178, type: !468)
!467 = distinct !DILexicalBlock(scope: !458, file: !2, line: 177, column: 67)
!468 = !DIDerivedType(tag: DW_TAG_typedef, name: "lien_adrfil", file: !469, line: 55, baseType: !470)
!469 = !DIFile(filename: "./src/htslib.h", directory: "/home/raj/httrack-3.48.21", checksumkind: CSK_MD5, checksum: "b8775ab5fd3d72ae1f56a38e4cc386f9")
!470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lien_adrfil", file: !471, line: 137, size: 32768, elements: !472)
!471 = !DIFile(filename: "./src/htscore.h", directory: "/home/raj/httrack-3.48.21", checksumkind: CSK_MD5, checksum: "6879168e7f4510c5fb224772e2174ec4")
!472 = !{!473, !477}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "adr", scope: !470, file: !471, line: 138, baseType: !474, size: 16384)
!474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 16384, elements: !475)
!475 = !{!476}
!476 = !DISubrange(count: 2048)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "fil", scope: !470, file: !471, line: 139, baseType: !474, size: 16384, offset: 16384)
!478 = !DILocation(line: 178, column: 23, scope: !467)
!479 = !DILocalVariable(name: "i", scope: !467, file: !2, line: 181, type: !340)
!480 = !DILocation(line: 181, column: 18, scope: !467)
!481 = !DILocalVariable(name: "r", scope: !467, file: !2, line: 182, type: !75)
!482 = !DILocation(line: 182, column: 15, scope: !467)
!483 = !DILocation(line: 184, column: 26, scope: !467)
!484 = !DILocation(line: 184, column: 23, scope: !467)
!485 = !DILocation(line: 184, column: 33, scope: !467)
!486 = !DILocation(line: 184, column: 14, scope: !467)
!487 = !DILocation(line: 184, column: 11, scope: !467)
!488 = !DILocation(line: 184, column: 21, scope: !467)
!489 = !DILocation(line: 186, column: 17, scope: !490)
!490 = distinct !DILexicalBlock(scope: !467, file: !2, line: 186, column: 11)
!491 = !DILocation(line: 186, column: 15, scope: !490)
!492 = !DILocation(line: 186, column: 22, scope: !493)
!493 = distinct !DILexicalBlock(scope: !490, file: !2, line: 186, column: 11)
!494 = !DILocation(line: 186, column: 29, scope: !493)
!495 = !DILocation(line: 186, column: 32, scope: !493)
!496 = !DILocation(line: 186, column: 11, scope: !490)
!497 = !DILocation(line: 187, column: 18, scope: !498)
!498 = distinct !DILexicalBlock(scope: !499, file: !2, line: 187, column: 17)
!499 = distinct !DILexicalBlock(scope: !493, file: !2, line: 186, column: 46)
!500 = !DILocation(line: 187, column: 25, scope: !498)
!501 = !DILocation(line: 187, column: 28, scope: !498)
!502 = !DILocation(line: 187, column: 36, scope: !498)
!503 = !DILocation(line: 187, column: 40, scope: !498)
!504 = !DILocation(line: 187, column: 47, scope: !498)
!505 = !DILocation(line: 187, column: 50, scope: !498)
!506 = !DILocation(line: 187, column: 17, scope: !499)
!507 = !DILocation(line: 188, column: 15, scope: !498)
!508 = !DILocation(line: 188, column: 22, scope: !498)
!509 = !DILocation(line: 188, column: 25, scope: !498)
!510 = !DILocation(line: 189, column: 11, scope: !499)
!511 = !DILocation(line: 186, column: 42, scope: !493)
!512 = !DILocation(line: 186, column: 11, scope: !493)
!513 = distinct !{!513, !496, !514, !133}
!514 = !DILocation(line: 189, column: 11, scope: !490)
!515 = !DILocation(line: 191, column: 34, scope: !516)
!516 = distinct !DILexicalBlock(scope: !467, file: !2, line: 191, column: 15)
!517 = !DILocation(line: 191, column: 15, scope: !516)
!518 = !DILocation(line: 191, column: 44, scope: !516)
!519 = !DILocation(line: 191, column: 15, scope: !467)
!520 = !DILocalVariable(name: "loc", scope: !521, file: !2, line: 193, type: !474)
!521 = distinct !DILexicalBlock(scope: !516, file: !2, line: 191, column: 50)
!522 = !DILocation(line: 193, column: 25, scope: !521)
!523 = !DILocalVariable(name: "blkretour", scope: !521, file: !2, line: 194, type: !524)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "htsblk", file: !469, line: 47, baseType: !525)
!525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htsblk", file: !526, line: 486, size: 8960, elements: !527)
!526 = !DIFile(filename: "./src/htsopt.h", directory: "/home/raj/httrack-3.48.21", checksumkind: CSK_MD5, checksum: "4c13c78c9669919a80461e39e206d058")
!527 = !{!528, !529, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !593, !595, !599, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !618, !619, !620, !621, !622, !623, !624, !625}
!528 = !DIDerivedType(tag: DW_TAG_member, name: "statuscode", scope: !525, file: !526, line: 487, baseType: !75, size: 32)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "notmodified", scope: !525, file: !526, line: 488, baseType: !530, size: 16, offset: 32)
!530 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "is_write", scope: !525, file: !526, line: 489, baseType: !530, size: 16, offset: 48)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "is_chunk", scope: !525, file: !526, line: 490, baseType: !530, size: 16, offset: 64)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "compressed", scope: !525, file: !526, line: 491, baseType: !530, size: 16, offset: 80)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "empty", scope: !525, file: !526, line: 492, baseType: !530, size: 16, offset: 96)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive", scope: !525, file: !526, line: 493, baseType: !530, size: 16, offset: 112)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive_trailers", scope: !525, file: !526, line: 494, baseType: !530, size: 16, offset: 128)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive_t", scope: !525, file: !526, line: 495, baseType: !75, size: 32, offset: 160)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive_max", scope: !525, file: !526, line: 496, baseType: !75, size: 32, offset: 192)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "adr", scope: !525, file: !526, line: 497, baseType: !83, size: 64, offset: 256)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "headers", scope: !525, file: !526, line: 498, baseType: !83, size: 64, offset: 320)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !525, file: !526, line: 499, baseType: !542, size: 64, offset: 384)
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 64)
!543 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !544, line: 7, baseType: !545)
!544 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "", checksumkind: CSK_MD5, checksum: "571f9fb6223c42439075fdde11a0de5d")
!545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !546, line: 49, size: 1728, elements: !547)
!546 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "", checksumkind: CSK_MD5, checksum: "1bad07471b7974df4ecc1d1c2ca207e6")
!547 = !{!548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !563, !565, !566, !567, !570, !571, !573, !577, !580, !582, !585, !588, !589, !590, !591, !592}
!548 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !545, file: !546, line: 51, baseType: !75, size: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !545, file: !546, line: 54, baseType: !83, size: 64, offset: 64)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !545, file: !546, line: 55, baseType: !83, size: 64, offset: 128)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !545, file: !546, line: 56, baseType: !83, size: 64, offset: 192)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !545, file: !546, line: 57, baseType: !83, size: 64, offset: 256)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !545, file: !546, line: 58, baseType: !83, size: 64, offset: 320)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !545, file: !546, line: 59, baseType: !83, size: 64, offset: 384)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !545, file: !546, line: 60, baseType: !83, size: 64, offset: 448)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !545, file: !546, line: 61, baseType: !83, size: 64, offset: 512)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !545, file: !546, line: 64, baseType: !83, size: 64, offset: 576)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !545, file: !546, line: 65, baseType: !83, size: 64, offset: 640)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !545, file: !546, line: 66, baseType: !83, size: 64, offset: 704)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !545, file: !546, line: 68, baseType: !561, size: 64, offset: 768)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!562 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !546, line: 36, flags: DIFlagFwdDecl)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !545, file: !546, line: 70, baseType: !564, size: 64, offset: 832)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 64)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !545, file: !546, line: 72, baseType: !75, size: 32, offset: 896)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !545, file: !546, line: 73, baseType: !75, size: 32, offset: 928)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !545, file: !546, line: 74, baseType: !568, size: 64, offset: 960)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !81, line: 152, baseType: !569)
!569 = !DIBasicType(name: "long", size: 64, encoding: DW_ATE_signed)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !545, file: !546, line: 77, baseType: !82, size: 16, offset: 1024)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !545, file: !546, line: 78, baseType: !572, size: 8, offset: 1040)
!572 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !545, file: !546, line: 79, baseType: !574, size: 8, offset: 1048)
!574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 8, elements: !575)
!575 = !{!576}
!576 = !DISubrange(count: 1)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !545, file: !546, line: 81, baseType: !578, size: 64, offset: 1088)
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 64)
!579 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !546, line: 43, baseType: null)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !545, file: !546, line: 89, baseType: !581, size: 64, offset: 1152)
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !81, line: 153, baseType: !569)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !545, file: !546, line: 91, baseType: !583, size: 64, offset: 1216)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !546, line: 37, flags: DIFlagFwdDecl)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !545, file: !546, line: 92, baseType: !586, size: 64, offset: 1280)
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 64)
!587 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !546, line: 38, flags: DIFlagFwdDecl)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !545, file: !546, line: 93, baseType: !564, size: 64, offset: 1344)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !545, file: !546, line: 94, baseType: !72, size: 64, offset: 1408)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !545, file: !546, line: 95, baseType: !340, size: 64, offset: 1472)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !545, file: !546, line: 96, baseType: !75, size: 32, offset: 1536)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !545, file: !546, line: 98, baseType: !46, size: 160, offset: 1568)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !525, file: !526, line: 500, baseType: !594, size: 64, offset: 448)
!594 = !DIDerivedType(tag: DW_TAG_typedef, name: "LLint", file: !74, line: 283, baseType: !569)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !525, file: !526, line: 501, baseType: !596, size: 640, offset: 512)
!596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 640, elements: !597)
!597 = !{!598}
!598 = !DISubrange(count: 80)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "contenttype", scope: !525, file: !526, line: 502, baseType: !600, size: 512, offset: 1152)
!600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 512, elements: !601)
!601 = !{!602}
!602 = !DISubrange(count: 64)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "charset", scope: !525, file: !526, line: 503, baseType: !600, size: 512, offset: 1664)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "contentencoding", scope: !525, file: !526, line: 504, baseType: !600, size: 512, offset: 2176)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !525, file: !526, line: 505, baseType: !83, size: 64, offset: 2688)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "totalsize", scope: !525, file: !526, line: 506, baseType: !594, size: 64, offset: 2752)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "is_file", scope: !525, file: !526, line: 507, baseType: !530, size: 16, offset: 2816)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "soc", scope: !525, file: !526, line: 508, baseType: !73, size: 32, offset: 2848)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !525, file: !526, line: 509, baseType: !155, size: 224, offset: 2880)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "address_size", scope: !525, file: !526, line: 510, baseType: !75, size: 32, offset: 3104)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "fp", scope: !525, file: !526, line: 511, baseType: !542, size: 64, offset: 3136)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "ssl", scope: !525, file: !526, line: 513, baseType: !530, size: 16, offset: 3200)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_con", scope: !525, file: !526, line: 515, baseType: !614, size: 64, offset: 3264)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 64)
!615 = !DIDerivedType(tag: DW_TAG_typedef, name: "SSL", file: !616, line: 184, baseType: !617)
!616 = !DIFile(filename: "/usr/include/openssl/types.h", directory: "", checksumkind: CSK_MD5, checksum: "44f1236065e4ee65cf4cd545c3e12ab9")
!617 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_st", file: !616, line: 184, flags: DIFlagFwdDecl)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "lastmodified", scope: !525, file: !526, line: 517, baseType: !600, size: 512, offset: 3328)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "etag", scope: !525, file: !526, line: 518, baseType: !144, size: 2048, offset: 3840)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "cdispo", scope: !525, file: !526, line: 519, baseType: !144, size: 2048, offset: 5888)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "crange", scope: !525, file: !526, line: 520, baseType: !594, size: 64, offset: 7936)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "crange_start", scope: !525, file: !526, line: 521, baseType: !594, size: 64, offset: 8000)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "crange_end", scope: !525, file: !526, line: 522, baseType: !594, size: 64, offset: 8064)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "debugid", scope: !525, file: !526, line: 523, baseType: !75, size: 32, offset: 8128)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "req", scope: !525, file: !526, line: 525, baseType: !626, size: 768, offset: 8192)
!626 = !DIDerivedType(tag: DW_TAG_typedef, name: "htsrequest", file: !469, line: 43, baseType: !627)
!627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htsrequest", file: !526, line: 465, size: 768, elements: !628)
!628 = !{!629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641}
!629 = !DIDerivedType(tag: DW_TAG_member, name: "user_agent_send", scope: !627, file: !526, line: 466, baseType: !530, size: 16)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "http11", scope: !627, file: !526, line: 467, baseType: !530, size: 16, offset: 16)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "nokeepalive", scope: !627, file: !526, line: 468, baseType: !530, size: 16, offset: 32)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "range_used", scope: !627, file: !526, line: 469, baseType: !530, size: 16, offset: 48)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "nocompression", scope: !627, file: !526, line: 470, baseType: !530, size: 16, offset: 64)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "flush_garbage", scope: !627, file: !526, line: 471, baseType: !530, size: 16, offset: 80)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "user_agent", scope: !627, file: !526, line: 472, baseType: !289, size: 64, offset: 128)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "referer", scope: !627, file: !526, line: 473, baseType: !289, size: 64, offset: 192)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !627, file: !526, line: 474, baseType: !289, size: 64, offset: 256)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "lang_iso", scope: !627, file: !526, line: 475, baseType: !289, size: 64, offset: 320)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !627, file: !526, line: 476, baseType: !289, size: 64, offset: 384)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "headers", scope: !627, file: !526, line: 477, baseType: !289, size: 64, offset: 448)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !627, file: !526, line: 478, baseType: !642, size: 256, offset: 512)
!642 = !DIDerivedType(tag: DW_TAG_typedef, name: "htsrequest_proxy", file: !526, line: 452, baseType: !643)
!643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htsrequest_proxy", file: !526, line: 454, size: 256, elements: !644)
!644 = !{!645, !646, !647, !648}
!645 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !643, file: !526, line: 455, baseType: !75, size: 32)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !643, file: !526, line: 456, baseType: !289, size: 64, offset: 64)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !643, file: !526, line: 457, baseType: !75, size: 32, offset: 128)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "bindhost", scope: !643, file: !526, line: 458, baseType: !289, size: 64, offset: 192)
!649 = !DILocation(line: 194, column: 20, scope: !521)
!650 = !DILocation(line: 196, column: 13, scope: !521)
!651 = !DILocation(line: 198, column: 34, scope: !521)
!652 = !DILocation(line: 198, column: 23, scope: !521)
!653 = !DILocation(line: 198, column: 32, scope: !521)
!654 = !DILocation(line: 200, column: 21, scope: !521)
!655 = !DILocation(line: 200, column: 43, scope: !521)
!656 = !DILocation(line: 200, column: 54, scope: !521)
!657 = !DILocation(line: 200, column: 51, scope: !521)
!658 = !DILocation(line: 200, column: 59, scope: !521)
!659 = !DILocation(line: 200, column: 13, scope: !521)
!660 = !DILocation(line: 201, column: 13, scope: !521)
!661 = !DILocation(line: 201, column: 19, scope: !521)
!662 = !DILocation(line: 202, column: 24, scope: !663)
!663 = distinct !DILexicalBlock(scope: !521, file: !2, line: 201, column: 38)
!664 = !DILocation(line: 202, column: 29, scope: !663)
!665 = !DILocation(line: 202, column: 15, scope: !663)
!666 = !DILocation(line: 203, column: 55, scope: !663)
!667 = !DILocation(line: 203, column: 15, scope: !663)
!668 = !DILocation(line: 204, column: 15, scope: !663)
!669 = !DILocation(line: 205, column: 15, scope: !663)
!670 = distinct !{!670, !660, !671, !133}
!671 = !DILocation(line: 206, column: 13, scope: !521)
!672 = !DILocation(line: 209, column: 27, scope: !673)
!673 = distinct !DILexicalBlock(scope: !521, file: !2, line: 209, column: 17)
!674 = !DILocation(line: 209, column: 37, scope: !673)
!675 = !DILocation(line: 209, column: 17, scope: !521)
!676 = !DILocalVariable(name: "len", scope: !677, file: !2, line: 210, type: !75)
!677 = distinct !DILexicalBlock(scope: !673, file: !2, line: 209, column: 42)
!678 = !DILocation(line: 210, column: 19, scope: !677)
!679 = !DILocation(line: 210, column: 31, scope: !677)
!680 = !DILocation(line: 210, column: 25, scope: !677)
!681 = !DILocalVariable(name: "pos", scope: !677, file: !2, line: 211, type: !75)
!682 = !DILocation(line: 211, column: 19, scope: !677)
!683 = !DILocation(line: 211, column: 38, scope: !677)
!684 = !DILocation(line: 211, column: 31, scope: !677)
!685 = !DILocation(line: 211, column: 25, scope: !677)
!686 = !DILocation(line: 214, column: 15, scope: !677)
!687 = !DILocation(line: 214, column: 22, scope: !677)
!688 = !DILocation(line: 214, column: 26, scope: !677)
!689 = !DILocation(line: 215, column: 21, scope: !677)
!690 = !DILocation(line: 215, column: 35, scope: !677)
!691 = !DILocation(line: 215, column: 49, scope: !677)
!692 = !DILocation(line: 215, column: 56, scope: !677)
!693 = !DILocation(line: 215, column: 54, scope: !677)
!694 = !DILocation(line: 215, column: 61, scope: !677)
!695 = !DILocation(line: 215, column: 30, scope: !677)
!696 = !DILocation(line: 215, column: 28, scope: !677)
!697 = !DILocation(line: 215, column: 70, scope: !677)
!698 = !DILocation(line: 0, scope: !677)
!699 = !DILocation(line: 216, column: 24, scope: !700)
!700 = distinct !DILexicalBlock(scope: !677, file: !2, line: 215, column: 76)
!701 = !DILocation(line: 216, column: 21, scope: !700)
!702 = !DILocation(line: 217, column: 24, scope: !700)
!703 = !DILocation(line: 217, column: 21, scope: !700)
!704 = !DILocation(line: 218, column: 17, scope: !700)
!705 = !DILocation(line: 218, column: 22, scope: !700)
!706 = !DILocation(line: 218, column: 27, scope: !700)
!707 = distinct !{!707, !686, !708, !133}
!708 = !DILocation(line: 219, column: 15, scope: !677)
!709 = !DILocation(line: 220, column: 13, scope: !677)
!710 = !DILocation(line: 222, column: 21, scope: !521)
!711 = !DILocation(line: 222, column: 13, scope: !521)
!712 = !DILocation(line: 223, column: 18, scope: !521)
!713 = !DILocation(line: 223, column: 23, scope: !521)
!714 = !DILocation(line: 223, column: 42, scope: !521)
!715 = !DILocation(line: 223, column: 35, scope: !521)
!716 = !DILocation(line: 223, column: 29, scope: !521)
!717 = !DILocation(line: 223, column: 13, scope: !521)
!718 = !DILocation(line: 225, column: 20, scope: !521)
!719 = !DILocation(line: 226, column: 11, scope: !521)
!720 = !DILocation(line: 227, column: 9, scope: !467)
!721 = !DILocation(line: 228, column: 7, scope: !459)
!722 = !DILocation(line: 229, column: 5, scope: !440)
!723 = !DILocation(line: 230, column: 3, scope: !400)
!724 = !DILocation(line: 231, column: 7, scope: !725)
!725 = distinct !DILexicalBlock(scope: !382, file: !2, line: 231, column: 7)
!726 = !DILocation(line: 231, column: 11, scope: !725)
!727 = !DILocation(line: 231, column: 7, scope: !382)
!728 = !DILocation(line: 238, column: 11, scope: !729)
!729 = distinct !DILexicalBlock(scope: !725, file: !2, line: 231, column: 30)
!730 = !DILocation(line: 238, column: 5, scope: !729)
!731 = !DILocation(line: 240, column: 3, scope: !729)
!732 = !DILocation(line: 241, column: 10, scope: !382)
!733 = !DILocation(line: 241, column: 3, scope: !382)
!734 = distinct !DISubprogram(name: "socinput", scope: !2, file: !2, line: 245, type: !735, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !56, retainedNodes: !97)
!735 = !DISubroutineType(types: !736)
!736 = !{null, !73, !83, !75}
!737 = !DILocalVariable(name: "soc", arg: 1, scope: !734, file: !2, line: 245, type: !73)
!738 = !DILocation(line: 245, column: 21, scope: !734)
!739 = !DILocalVariable(name: "s", arg: 2, scope: !734, file: !2, line: 245, type: !83)
!740 = !DILocation(line: 245, column: 32, scope: !734)
!741 = !DILocalVariable(name: "max", arg: 3, scope: !734, file: !2, line: 245, type: !75)
!742 = !DILocation(line: 245, column: 39, scope: !734)
!743 = !DILocalVariable(name: "c", scope: !734, file: !2, line: 246, type: !75)
!744 = !DILocation(line: 246, column: 7, scope: !734)
!745 = !DILocalVariable(name: "j", scope: !734, file: !2, line: 247, type: !75)
!746 = !DILocation(line: 247, column: 7, scope: !734)
!747 = !DILocation(line: 249, column: 3, scope: !734)
!748 = !DILocalVariable(name: "b", scope: !749, file: !2, line: 250, type: !186)
!749 = distinct !DILexicalBlock(scope: !734, file: !2, line: 249, column: 6)
!750 = !DILocation(line: 250, column: 19, scope: !749)
!751 = !DILocation(line: 252, column: 14, scope: !752)
!752 = distinct !DILexicalBlock(scope: !749, file: !2, line: 252, column: 9)
!753 = !DILocation(line: 252, column: 9, scope: !752)
!754 = !DILocation(line: 252, column: 38, scope: !752)
!755 = !DILocation(line: 252, column: 9, scope: !749)
!756 = !DILocation(line: 253, column: 11, scope: !757)
!757 = distinct !DILexicalBlock(scope: !752, file: !2, line: 252, column: 44)
!758 = !DILocation(line: 253, column: 9, scope: !757)
!759 = !DILocation(line: 254, column: 15, scope: !757)
!760 = !DILocation(line: 254, column: 7, scope: !757)
!761 = !DILocation(line: 256, column: 9, scope: !762)
!762 = distinct !DILexicalBlock(scope: !757, file: !2, line: 254, column: 18)
!763 = !DILocation(line: 258, column: 11, scope: !762)
!764 = !DILocation(line: 259, column: 9, scope: !762)
!765 = !DILocation(line: 262, column: 9, scope: !762)
!766 = !DILocation(line: 264, column: 25, scope: !762)
!767 = !DILocation(line: 264, column: 18, scope: !762)
!768 = !DILocation(line: 264, column: 9, scope: !762)
!769 = !DILocation(line: 264, column: 12, scope: !762)
!770 = !DILocation(line: 264, column: 16, scope: !762)
!771 = !DILocation(line: 265, column: 9, scope: !762)
!772 = !DILocation(line: 267, column: 5, scope: !757)
!773 = !DILocation(line: 268, column: 9, scope: !752)
!774 = !DILocation(line: 269, column: 3, scope: !749)
!775 = !DILocation(line: 269, column: 12, scope: !734)
!776 = !DILocation(line: 269, column: 14, scope: !734)
!777 = !DILocation(line: 269, column: 21, scope: !734)
!778 = !DILocation(line: 269, column: 25, scope: !734)
!779 = !DILocation(line: 269, column: 27, scope: !734)
!780 = !DILocation(line: 269, column: 35, scope: !734)
!781 = !DILocation(line: 269, column: 39, scope: !734)
!782 = !DILocation(line: 269, column: 44, scope: !734)
!783 = !DILocation(line: 269, column: 48, scope: !734)
!784 = !DILocation(line: 269, column: 41, scope: !734)
!785 = !DILocation(line: 0, scope: !734)
!786 = distinct !{!786, !747, !787, !133}
!787 = !DILocation(line: 269, column: 53, scope: !734)
!788 = !DILocation(line: 270, column: 3, scope: !734)
!789 = !DILocation(line: 270, column: 6, scope: !734)
!790 = !DILocation(line: 270, column: 10, scope: !734)
!791 = !DILocation(line: 271, column: 1, scope: !734)
!792 = distinct !DISubprogram(name: "abortf_", scope: !45, file: !45, line: 95, type: !793, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !56, retainedNodes: !97)
!793 = !DISubroutineType(types: !794)
!794 = !{null, !289, !289, !75}
!795 = !DILocalVariable(name: "exp", arg: 1, scope: !792, file: !45, line: 95, type: !289)
!796 = !DILocation(line: 95, column: 44, scope: !792)
!797 = !DILocalVariable(name: "file", arg: 2, scope: !792, file: !45, line: 95, type: !289)
!798 = !DILocation(line: 95, column: 61, scope: !792)
!799 = !DILocalVariable(name: "line", arg: 3, scope: !792, file: !45, line: 95, type: !75)
!800 = !DILocation(line: 95, column: 71, scope: !792)
!801 = !DILocation(line: 99, column: 14, scope: !792)
!802 = !DILocation(line: 99, column: 19, scope: !792)
!803 = !DILocation(line: 99, column: 25, scope: !792)
!804 = !DILocation(line: 99, column: 3, scope: !792)
!805 = !DILocation(line: 100, column: 3, scope: !792)
!806 = distinct !DISubprogram(name: "log_abort_", scope: !45, file: !45, line: 90, type: !793, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !56, retainedNodes: !97)
!807 = !DILocalVariable(name: "msg", arg: 1, scope: !806, file: !45, line: 90, type: !289)
!808 = !DILocation(line: 90, column: 47, scope: !806)
!809 = !DILocalVariable(name: "file", arg: 2, scope: !806, file: !45, line: 90, type: !289)
!810 = !DILocation(line: 90, column: 64, scope: !806)
!811 = !DILocalVariable(name: "line", arg: 3, scope: !806, file: !45, line: 90, type: !75)
!812 = !DILocation(line: 90, column: 74, scope: !806)
!813 = !DILocation(line: 91, column: 11, scope: !806)
!814 = !DILocation(line: 91, column: 43, scope: !806)
!815 = !DILocation(line: 91, column: 48, scope: !806)
!816 = !DILocation(line: 91, column: 54, scope: !806)
!817 = !DILocation(line: 91, column: 3, scope: !806)
!818 = !DILocation(line: 92, column: 10, scope: !806)
!819 = !DILocation(line: 92, column: 3, scope: !806)
!820 = !DILocation(line: 93, column: 1, scope: !806)
